{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee2cea67b97935c3a6a8bf33febe8d13", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0001d5e13d698b8017a0ec655cf64bcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  public void test081() throws JavaModelException", "signatureAfterChange": "  public void test081() throws JavaModelException", "diff": ["-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link javadoc.text.BasicTestTextIns#BasicTestTextIns()}, Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+JAVADOC_RELEVANCE_IT+\"}\"", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link javadoc.text.BasicTestTextIns#BasicTestTextIns()}, Ljavadoc.text.BasicTestTextIns;, ()V, BasicTestTextIns, null, \"+this.positions+R_DRINRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00070c5565658336fd18bb2de013ba81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConstructorInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00099340ea6cbf67a50449064938447f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/DeclarationsUtil.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      private static IBinding getBinding(MemberDeclaration memberDecl)         throws NonEclipseImplementationException", "signatureAfterChange": "      private static IBinding getBinding(MemberDeclaration memberDecl)         throws NonEclipseImplementationException", "diff": ["-        if( memberDecl instanceof EclipseMirrorImpl ){", "+        if( memberDecl instanceof EclipseMirrorObject ){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "001790204a4844786044f69624bc59d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "14f89ca9b18a3480429e3f25bc68dd79b7e9f0db", "commitAfterChange": "eb21ce31e87e64ed6c3b487b0fe31d2556ab8015", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic IJavaElement[] getChildren() throws JavaModelException", "signatureAfterChange": " \tpublic IJavaElement[] getChildren() throws JavaModelException", "diff": ["-\t\t\treturn NO_CHILDREN;", "+\t\t\treturn NO_ELEMENTS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "001b061650ba5ff9a9833b6051302629", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void test031() throws JavaModelException", "signatureAfterChange": "  public void test031() throws JavaModelException", "diff": ["-\t\t\"foo[METHOD_REF]{foo(), Ljavadoc.methods.tags.BasicTestMethods;, <T:Ljava.lang.Object;>()V, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[METHOD_REF]{foo(), Ljavadoc.methods.tags.BasicTestMethods;, <T:Ljava.lang.Object;>()V, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "001b5c09009eb76108bd0db7012471b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "signatureAfterChange": "\t  \tpublic void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\t\t\t\tif ((bits & FirstAssignmentToLocalMASK) != 0) { // for local variable debug attributes", "+\t\t\t\tif ((bits & FirstAssignmentToLocal) != 0) { // for local variable debug attributes"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0023b1536b4d140984216e3c0bd2f02c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testCreateIncludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testCreateIncludedCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0029e2c34d6f42a93df6a930f1e797c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "6f6bc9d0562d23a055ee9e986cf21155795a29ff", "commitAfterChange": "7f289b483e1414e7141e9f94307fbe445e3b1b34", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void printError(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printError(ASTNode node, String msg)", "diff": ["-\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, Severity.ERROR, msg, line, null );", "+\t\t_env.addMessage(_env.getFile(), start, node.getLength() + start, Severity.ERROR, msg, line, null );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "002b5e409254cc399b66bb5d8fc335b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate static String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \tprivate static String getFileNamesForPrinting(final BuildEnv processorEnv)", "diff": ["-\tprivate static String getFileNamesForPrinting(final ProcessorEnvImpl processorEnv){", "+\tprivate static String getFileNamesForPrinting(final BuildEnv processorEnv){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "005dae461758ba25b6b9f675ba1385bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteElementsOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected void verify(IJavaElement element) throws JavaModelException", "signatureAfterChange": " \tprotected void verify(IJavaElement element) throws JavaModelException", "diff": ["-\t\tIJavaElement[] children = ((IRegion) fChildrenToRemove.get(element)).getElements();", "+\t\tIJavaElement[] children = ((IRegion) childrenToRemove.get(element)).getElements();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00673731aae389dbde736278c975032b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathAccessRule.java", "commitBeforeChange": "74638c6ba2ff749df371c0b7b5765b684e3c7bae", "commitAfterChange": "b7b6a243304e66fe9d0d477b8b6306031c8fd484", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ClasspathAccessRule(IPath pattern, int kind)", "signatureAfterChange": " \t \tpublic ClasspathAccessRule(IPath pattern, int kind)", "diff": ["-\t\tthis(pattern.toString().toCharArray(), toSeverity(kind));", "+\t\tthis(pattern.toString().toCharArray(), toProblemId(kind));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0084b12174317860f4441c5745002119", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public boolean needsUncheckedConversion(TypeBinding targetType)", "signatureAfterChange": " public boolean needsUncheckedConversion(TypeBinding targetType)", "diff": ["-\tTypeBinding match = currentType.findSuperTypeWithSameErasure(targetType);", "+\tTypeBinding match = currentType.findSuperTypeOriginatingFrom(targetType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "008bf1e6d12c67135fe4ee2f6d08641c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FineGrainVisitor.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "signatureAfterChange": "  public boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "diff": ["-\tif ((this.fineGrain & PARAMETER_TYPE_DECLARATION_TYPE_REFERENCE) != 0) {", "+\tif ((this.fineGrain & PARAMETER_DECLARATION_TYPE_REFERENCE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00905f7147ad6d407b7a0f6580833059", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static AnnotationValue createAnnotationMemberValue(Object domValue, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  String elementName, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  AnnotationMirrorImpl anno, \t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  BaseProcessorEnv env, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  TypeMirror expectedType)", "signatureAfterChange": " \tpublic static AnnotationValue createAnnotationMemberValue(Object domValue, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  String elementName, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  AnnotationMirrorImpl anno, \t\t\t\t\t\t\t\t\t\t\t\t\t\t \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  BaseProcessorEnv env, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t  TypeMirror expectedType)", "diff": ["-\t\treturn createAnnotationValue(converted, elementName, -1, anno, env);\t\t", "+\t\treturn createAnnotationValueFromDOMValue(converted, elementName, -1, anno, env);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00a610bbe35e4e932d80a6e16993a142", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \t\tpublic boolean match(PrimitiveType node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(Modifier node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(Modifier node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00a6270ed22000ba68659d9490fd55d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/BinaryExpressionFragmentBuilder.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic boolean visit( \t\tAND_AND_Expression and_and_Expression, \t\tBlockScope scope)", "signatureAfterChange": "  \tpublic boolean visit( \t\tAND_AND_Expression and_and_Expression, \t\tBlockScope scope)", "diff": ["-\t\t\t\tthis.operatorsList.add(new Integer(ITerminalSymbols.TokenNameAND_AND));", "+\t\t\t\tthis.operatorsList.add(new Integer(TerminalTokens.TokenNameAND_AND));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00ab114236d084b2dc7e0b1873cb854a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic void testMissingTagsErrorPrivate()", "signatureAfterChange": " \tpublic void testMissingTagsErrorPrivate()", "diff": ["-\t\trunNegativeTest(MissingTags, resultForMissingTags(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(MISSING_TAGS, resultForMissingTags(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00ab9f92eb6142b428bc4b166a55c8b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "187a8805a047c72a016c2db33e7db26c176e1779", "commitAfterChange": "282f4990f3c5d0f91a4d25be01182ed1f4a9c202", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\treturn flowInfo.addInitializationsFrom(assertInfo.nullInfoLessUnconditionalCopy());", "+\t\t\treturn flowInfo.mergedWith(assertInfo.nullInfoLessUnconditionalCopy());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00b46efa0b14d7f7226db0b8e0b95cc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \t\tpublic boolean match(SingleVariableDeclaration node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(ParameterizedType node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(ParameterizedType node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00c35112c3058a39dac7956fefa176f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "b8323ccd49cf224a0070d2cb1a7a617400e273ad", "commitAfterChange": "79a2912d77b5ac9bf55d643f1f89285b3b152140", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\treturn index.query(getMatchCategories(), key, matchRule); // match rule is irrelevant when the key is null", "+\treturn index.query(getIndexCategories(), key, matchRule); // match rule is irrelevant when the key is null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00f30690cad43684a31189ff6d3ae66b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public void testTypeRefGenericAll01_Parameterized() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAll01_Parameterized() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, PARAMETERIZED_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());", "+\tsearch(\"*\", TYPE, TYPE_ARGUMENT_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00f457cd5b806a8c3e70646e773b783f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic Enumeration keys()", "signatureAfterChange": " \tpublic Enumeration keys()", "diff": ["-\t\treturn fEntryTable.keys();", "+\t\treturn entryTable.keys();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00f8e69ad3d300100e4c7572402fda4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ReferenceTypeCompletionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(ReferenceTypeCompletionTest.class);", "+\treturn buildAllCompliancesTestSuite(ReferenceTypeCompletionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00facabe42cc231235ba64194318e87e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaCorePreferenceInitializer.java", "commitBeforeChange": "d16e32b1bfbbab8deee5f229ab908fe246be9b08", "commitAfterChange": "ba2e1a54949e37e6604f66209c22c1ddf9840619", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void initializeDefaultPreferences()", "signatureAfterChange": " \tpublic void initializeDefaultPreferences()", "diff": ["-\t\tdefaultOptionsMap.put(JavaCore.CORE_JAVA_BUILD_MAKE_OUTPUT_FOLDER_CONSISTENT, JavaCore.IGNORE); ", "+\t\tdefaultOptionsMap.put(JavaCore.CORE_JAVA_BUILD_RECREATE_MODIFIED_CLASS_FILES_IN_OUTPUT_FOLDER, JavaCore.IGNORE); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "010349b7f7764c09919c3f1a088319e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void testExternalJar0() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJar0() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0138529407c087f17fd049dfc4bda54f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void test_parameter_specification_inheritance_010()", "signatureAfterChange": " public void test_parameter_specification_inheritance_010()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0143b60638a22163d50a492e40ebf8c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "commitAfterChange": "a502b956779c4dac7f761502999cc6d149ba7556", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic void printUsage()", "signatureAfterChange": " \t \tpublic void printUsage()", "diff": ["-\t}", "-\t\tthis.logger.printlnOut(Main.bind(\"misc.usage\", System.getProperty(\"path.separator\"))); //$NON-NLS-1$//$NON-NLS-2$", "+\t\tthis.logger.logUsage(Main.bind(\"misc.usage\", System.getProperty(\"path.separator\"))); //$NON-NLS-1$//$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01441ed56e1f7227ece41a47b5f745dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 160, "signatureBeforeChange": " \t \tpublic void testCompilationUnit()", "signatureAfterChange": " \t \tpublic void testCompilationUnit()", "diff": ["-\t\tgenericPropertyListTest(x, x.types(), new Property(\"Types\", true, TypeDeclaration.class) { //$NON-NLS-1$", "+\t\tgenericPropertyListTest(x, x.types(), new Property(\"Types\", true, AbstractTypeDeclaration.class) { //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01467fda6184668463ec1ec39cd54cc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void testRemoveExternalLibFolder2() throws CoreException", "signatureAfterChange": " public void testRemoveExternalLibFolder2() throws CoreException", "diff": ["-\t\tIJavaProject p = createJavaProject(\"P\", new String[0], new String[] {getExternalFolderPath(\"externalLib\")}, \"\");", "+\t\tIJavaProject p = createJavaProject(\"P\", new String[0], new String[] {getExternalResourcePath(\"externalLib\")}, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01519d7add03d520ae89c1f93a09f3e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d48c25cb976d99917f58b366198a77010dd2d678", "commitAfterChange": "e0794fcfb44a17efaa6223129a8b32f7f36f63a6", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " \tpublic void setProject(IProject project)", "signatureAfterChange": " \tpublic void setProject(IProject project)", "diff": ["-\t\tthis.fProject = project;", "+\t\tthis.project = project;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0159859c0e643ad3a9fa075255ae45b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetEvaluator.java", "commitBeforeChange": "5a25b0b2adf3a42de2c91930c56a74b98ff9b6ac", "commitAfterChange": "cba4a74f046a7c7d43d81e11b279554f1ab8b4ad", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void addEvaluationResultForCompilationProblem(Hashtable resultsByIDs, IProblem problem, char[] cuSource)", "signatureAfterChange": "\r protected void addEvaluationResultForCompilationProblem(Map resultsByIDs, IProblem problem, char[] cuSource)", "diff": ["-protected void addEvaluationResultForCompilationProblem(Hashtable resultsByIDs, IProblem problem, char[] cuSource) {\r", "+protected void addEvaluationResultForCompilationProblem(Map resultsByIDs, IProblem problem, char[] cuSource) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "015d22a19004049baeb6e85499a3854f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/IIndexerOutput.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void addDocument(IDocument document);", "signatureAfterChange": " \tpublic void addDocument(SearchDocument document);", "diff": ["-\tpublic void addDocument(IDocument document);", "+\tpublic void addDocument(SearchDocument document);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0164cac5c9aa9c5c23f3fdbcd2d72523", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic boolean visit(Block block, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Block block, BlockScope scope)", "diff": ["-\t\tif (block_brace_position.equals(FormattingPreferences.NEXT_LINE_SHIFTED)) {", "+\t\tif (block_brace_position.equals(DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01668bba42b50bc4df8986b9b58f8484", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ListRewrite.java", "commitBeforeChange": "1a4eed4ffa5088e3ebe92ac8897cc3720d983860", "commitAfterChange": "f1f25c6cdf998a1ec590849c8e88206d0ec0f3ca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate ListRewriteEvent getEvent()", "signatureAfterChange": "  \tprivate ListRewriteEvent getEvent()", "diff": ["-\t\treturn getRewriteStore().getListEvent(this.parent, this.childProperty, true);", "+\t\treturn getRewriteStore().getListEvent(this.parent, this.childListProperty, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "016da3cabb54c8ce1c82020113d9bed7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tpublic IResource getResouce()", "signatureAfterChange": " \t \tpublic IFile getResouce()", "diff": ["-\tpublic IResource getResouce()", "+\tpublic IFile getResouce()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017547f56da4a20c452fba5eb5906e64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "fd8b9a432900e078bd3ec0b84289455beeec7157", "commitAfterChange": "727ece7c4e37d8cf0a8a8c9e31dcb1989a9402e6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tprivate boolean showOverridden()", "signatureAfterChange": " \t\tprivate boolean showOverridden()", "diff": ["-\t\t\treturn (this.showFlavors & PatternLocator.OVERRIDDEN_FLAVOR) != 0;", "+\t\t\treturn (this.showFlavors & PatternLocator.SUPER_INVOCATION_FLAVOR) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017b3b7a12dc1ff9bb1cb5230653d8ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMember.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected BinaryMember(int type, IJavaElement parent, String name)", "signatureAfterChange": " protected BinaryMember(int type, JavaElement parent, String name)", "diff": ["-protected BinaryMember(int type, IJavaElement parent, String name) {", "+protected BinaryMember(int type, JavaElement parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "018158b4fa827c8de77f955128116d46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t\tcase T_String :", "+\t\t\t\t\tcase T_JavaLangString :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0188bf01f76df25199adf6a2098c4c5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 260, "methodNumberAfterChange": 262, "signatureBeforeChange": "  public void testBug110060_TypePattern07() throws CoreException", "signatureAfterChange": " public void testBug110060_TypePattern07() throws CoreException", "diff": ["-", "+/** @deprecated As using a depreciated constant */", "-\tsearch(\"aa\", TYPE, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);", "-\tassertSearchResults(\"\");", "+\tsearch(\"aa\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\tassertSearchResults(", "+\t\t\"\" // no result because it's an invalid camel case pattern which is replaced with ", "+\t\t\t// prefix case sensitive match bu SearchPatter.validateMatchRule(...) (old behavior)", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a413240a4c6611e66647d07e1cf8f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, final FlowInfo flowInfo)", "signatureAfterChange": " \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, final FlowInfo flowInfo)", "diff": ["-\t\tAbstractMethodDeclaration.analyseArguments(lambdaInfo, this.arguments, methodWithParameterDeclaration);", "+\t\tAbstractMethodDeclaration.analyseArguments18(lambdaInfo, this.arguments, methodWithParameterDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01b1dda3788ed1de4772a8af1aeb0f8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static IJavaSearchScope createHierarchyScope(IType type, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " \tpublic static IJavaSearchScope createHierarchyScope(IType type, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\treturn SearchBasicEngine.createHierarchyScope(type, owner);", "+\t\treturn BasicSearchEngine.createHierarchyScope(type, owner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01ca0c06963a7435adc23ea785de14ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "bac18f086dd9a87e1d5b6dea3b31ca1c92463a84", "commitAfterChange": "1b53a525120894192853120c7678edb264d25490", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\tcurrentScope.resetDeclaringClassMethodStaticFlag(superclass.enclosingType());", "+\t\t\t\t\tcurrentScope.tagAsAccessingInstanceStateOf(superclass.enclosingType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e7d9e9ef0d2fac050081133a07662b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "diff": ["-\t\t\tif (otherOriginal == otherInheritedMethod || areMethodsEqual(inheritedMethod, otherInheritedMethod)) continue;", "+\t\t\tif (otherOriginal == otherInheritedMethod || doesMethodOverride(inheritedMethod, otherInheritedMethod)) continue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01e852b4b6b2f070309425200ffce0f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "80d1a1c8c9608e72c63b677a4e2d1f5e89ff648c", "commitAfterChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": "\r protected void consumeStatementFor()", "signatureAfterChange": "\r protected void consumeStatementFor()", "diff": ["-\t\t\tendPosition)); \r", "+\t\t\tendStatementPosition)); \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01f401964dc8bf96a3a755798986ac91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 231, "signatureBeforeChange": " \tpublic boolean visit(MarkerAnnotation annotation, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit(MarkerAnnotation annotation, ClassScope scope)", "diff": ["-\tpublic boolean visit(MarkerAnnotation annotation, CompilationUnitScope scope) {", "+\tpublic boolean visit(MarkerAnnotation annotation, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01fbad84ec6b60fb4c9afc6def141ef8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\tif (scope.areTypesCompatible(caughtExceptionTypes[i], argumentTypes[j])) {", "+\t\t\t\t\tif (Scope.areTypesCompatible(caughtExceptionTypes[i], argumentTypes[j])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0204d16c2395768f84c5b6602ad3ec20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public boolean isSuperclassOf(ReferenceBinding otherType)", "signatureAfterChange": "     public boolean isSuperclassOf(ReferenceBinding otherType)", "diff": ["-        if (this.kind == Wildcard.SUPER) {", "+        if (this.boundKind == Wildcard.SUPER) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0204f80b1ab910ec20a2265adfa0a67e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t} else if ((this.bits & UndocumentedEmptyBlockMASK) != 0) {", "+\t\t} else if ((this.bits & UndocumentedEmptyBlock) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0209d9c0775ba00ae81b692d3eafa313", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "021e62081d11dbb9142fe786b4d5d521", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void testAddFieldAndConstructor() throws JavaModelException", "signatureAfterChange": " public void testAddFieldAndConstructor() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02260ed47749404f07b01966fffeb6e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BufferManager.java", "commitBeforeChange": "7b0f09fd73b49ba4dc507ba4a634d425ab3e92c2", "commitAfterChange": "90ccf89195ab29ecb5a569cf526f683aefa3263d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public IBuffer getBuffer(IOpenable owner)", "signatureAfterChange": "\r public IBuffer getBuffer(IOpenable owner)", "diff": ["-\treturn (IBuffer)fOpenBuffers.get(owner);\r", "+\treturn (IBuffer)openBuffers.get(owner);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "023786337c2146316433113a1fe5ab20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void testParameterizedTypeMultipleArguments03() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeMultipleArguments03() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedType(unit, \"NonGeneric.GenericMember<? super RuntimeException, ? super IllegalMonitorStateException, ? super IllegalMonitorStateException>\"); //$NON-NLS-1$", "+\t\tResolvedSourceType type = selectParameterizedType(unit, \"NonGeneric.GenericMember<? super RuntimeException, ? super IllegalMonitorStateException, ? super IllegalMonitorStateException>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "023fd175d1230db39d5592f8cbfad2f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprotected ITypeAnnotationWalker toNextDetail(int detailKind)", "signatureAfterChange": " \tprotected TypeAnnotationWalker toNextDetail(int detailKind)", "diff": ["-\tprotected ITypeAnnotationWalker toNextDetail(int detailKind) {", "+\tprotected TypeAnnotationWalker toNextDetail(int detailKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0244ddaf7dda193caac1637e52c6658c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic IPackageFragmentRoot getPackageFragmentRoot0(String jarPath)", "signatureAfterChange": " \tpublic IPackageFragmentRoot getPackageFragmentRoot0(IPath jarPath)", "diff": ["-\tpublic IPackageFragmentRoot getPackageFragmentRoot0(String jarPath) {", "+\tpublic IPackageFragmentRoot getPackageFragmentRoot0(IPath jarPath) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "024aa9127cf58e8daa63c9c26c2e8d78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "4796bbb8c785b0ec942a27f27b0f0f69122383e2", "commitAfterChange": "f9a0e8b1ad597138851f9750d5ab8a4d19320d69", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tprotected JavaModelOperation popOperation()", "signatureAfterChange": " \tprotected JavaModelOperation popOperation()", "diff": ["-\t\t\t\toperationStacks.set(null); // release reference (see http://bugs.eclipse.org/bugs/show_bug.cgi?id=33927)", "+\t\t\t\tOPERATION_STACKS.set(null); // release reference (see http://bugs.eclipse.org/bugs/show_bug.cgi?id=33927)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "024b4dbe8374790c7d25fc94fdca7580", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic boolean match(SuperMethodInvocation node, Object other)", "signatureAfterChange": " \tpublic boolean match(SuperMethodInvocation node, Object other)", "diff": ["-\t\tif (node.getAST().apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02569173c2c84d5d8e00b6eb9c0292ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": " public void ifne(Label lbl)", "signatureAfterChange": " public void ifne(BranchLabel lbl)", "diff": ["-public void ifne(Label lbl) {", "+public void ifne(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0272169a726fee021b0a31ea1d1093f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " public void testMakeConsistentFoolingReconciler() throws JavaModelException", "signatureAfterChange": " public void testMakeConsistentFoolingReconciler() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02750d62d589b45c44e3316744a5e475", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t@Override \tpublic TypeAnnotationWalker toMethodParameter(short index)", "signatureAfterChange": " \t \t@Override \tpublic ITypeAnnotationWalker toMethodParameter(short index)", "diff": ["-\tpublic TypeAnnotationWalker toMethodParameter(short index) {", "+\tpublic ITypeAnnotationWalker toMethodParameter(short index) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02753116592c61563f8aacd40adee8e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "e5dee4f66ab3257e0d9e4e34690323cf2d5f7c21", "commitAfterChange": "ba7f55d89dcf40f0d2718397b348f39209d50c3a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic PrimitiveTypeImpl getFloatType()", "signatureAfterChange": " \tpublic PrimitiveTypeImpl getFloatType()", "diff": ["-\tpublic PrimitiveTypeImpl getDoubleType(){ return _primitives[3]; }", "-\tpublic PrimitiveTypeImpl getFloatType(){ return _primitives[4]; }", "+\tpublic PrimitiveTypeImpl getDoubleType(){ return _primitives[DOUBLE_INDEX]; }", "+\tpublic PrimitiveTypeImpl getFloatType(){ return _primitives[FLOAT_INDEX]; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02768875db1fbf5d2d6382d719cd3efc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void acceptPackage(int declarationStart, int declarationEnd, char[] name)", "signatureAfterChange": " public void acceptPackage(int declarationStart, int declarationEnd, char[] name)", "diff": ["-\t\t\thandle = new PackageDeclaration((ICompilationUnit) parentHandle, new String(name));", "+\t\t\thandle = new PackageDeclaration((CompilationUnit) parentHandle, new String(name));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0277e5ac5045e51fd52f4e9b601969ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void testMultiLineCommentBlankLineBeforeJavadoctags4()", "signatureAfterChange": " \tpublic void testMultiLineCommentBlankLineBeforeJavadoctags4()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES, \"true\"); //$NON-NLS-1$", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_JAVADOC_COMMENT, \"true\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02785ca214331f66a6343a77127b2083", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 482, "methodNumberAfterChange": 482, "signatureBeforeChange": " \tpublic void test463()", "signatureAfterChange": " \tpublic void test463()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "027bee2e5b4bd0963471a9a3c2f7fb0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 330, "methodNumberAfterChange": 330, "signatureBeforeChange": "  \tpublic void test310()", "signatureAfterChange": "  \tpublic void test310()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "028bc8701cdc03e2a9329742a6ee58e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "41800ceef1e22df640004021a2ad024169ee7b90", "commitAfterChange": "1a73dcb985d562a276db9afb81d6d46ae1c7e093", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void initialize(JavaProject project, PotentialMatch[] potentialMatches) throws JavaModelException", "signatureAfterChange": " \tpublic void initialize(JavaProject project, PotentialMatch[] potentialMatches) throws JavaModelException", "diff": ["-\t\t\tthis.nameEnvironment = new JavaSearchNameEnvironment2(project);", "+\t\t\tthis.nameEnvironment = new JavaSearchNameEnvironment(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02923b723e0f003d4cd48ea3b415943e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " \tpublic void testMissingCommentsErrorPackageOverriding()", "signatureAfterChange": " \tpublic void testMissingCommentsErrorPackageOverriding()", "diff": ["-\t\trunNegativeTest(MissingComments, resultForMissingComments(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(MISSING_COMMENTS, resultForMissingComments(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02a7a6d7537407f05fbf6863d6fe2f9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 232, "methodNumberAfterChange": 232, "signatureBeforeChange": " final public void jsr(Label lbl)", "signatureAfterChange": " final public void jsr(BranchLabel lbl)", "diff": ["-final public void jsr(Label lbl) {", "+final public void jsr(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02bcb23960abd0133589bd3a6c1fd445", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "039d5ebb17d9b09ae245ba628ad4d0e9cf747b63", "commitAfterChange": "1745fe20399b6a7284c025a8e1750403718486c9", "methodNumberBeforeChange": 239, "methodNumberAfterChange": 239, "signatureBeforeChange": "  public void parse( \tInitializer initializer,  \tTypeDeclaration type,  \tCompilationUnitDeclaration unit)", "signatureAfterChange": "  public void parse( \tInitializer initializer,  \tTypeDeclaration type,  \tCompilationUnitDeclaration unit)", "diff": ["-\t\t\tinitializer.block.bits |= AstNode.UncommentedEmptyBlockMASK;", "+\t\t\tinitializer.block.bits |= AstNode.UndocumentedEmptyBlockMASK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02bd2f714702ea62334f45801297d3b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic void testInvalidTagsClassWithMissingTagsOption()", "signatureAfterChange": " \tpublic void testInvalidTagsClassWithMissingTagsOption()", "diff": ["-\t\trunConformTest(InvalidReferencesClassJavadocComments);", "+\t\trunConformTest(CLASSES_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02c100ba0fd9b49fe65464460e1daaeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationFragment node)", "signatureAfterChange": " \tpublic boolean visit(VariableDeclarationFragment node)", "diff": ["-\t\t\t\t\tpos= getScanner().getPreviousTokenEndOffset(ITerminalSymbols.TokenNameEQUAL, pos);", "+\t\t\t\t\tpos= getScanner().getPreviousTokenEndOffset(TerminalTokens.TokenNameEQUAL, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02e9f85499597bbfa216aeea8c548d35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " private IPath getParticipantsContainer(IPath indexLocation)", "signatureAfterChange": " private IPath getParticipantsContainer(IndexLocation indexLocation)", "diff": ["-private IPath getParticipantsContainer(IPath indexLocation) {", "+private IPath getParticipantsContainer(IndexLocation indexLocation) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ef5b94404bab0af4ca4d63e8b3fda8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public void parseBlockStatements(MethodDeclaration md, CompilationUnitDeclaration unit)", "signatureAfterChange": " public void parseBlockStatements(MethodDeclaration md, CompilationUnitDeclaration unit)", "diff": ["-\t\t\tmd.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\t\tmd.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02f03fb6b26e11ca393c0b0db52c1fd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "\t  \tpublic void test060()", "signatureAfterChange": "\t  \tpublic void test060()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0318f58163847a3412860fb9f96d82ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TestAll.java", "commitBeforeChange": "5e027a93b6cd062bdddcdfc7b987d6079bca2f1f", "commitAfterChange": "5cb9f8ecd53559ff3c10df42a2bc3784ca7e7125", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t\ttests_1_5.addAll(ComparableTests.ALL_CLASSES);", "+\t\ttests_1_5.addAll(RunComparableTests.ALL_CLASSES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "032eb7201fdd22f75c3867e65edb1305", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "14f758abdbf93582152d632f97767b107ab4115d", "commitAfterChange": "8879b56fd07da9d038783d336704cc8af2052901", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprotected void search(String patternString, int searchFor, int limitTo, IJavaSearchScope scope, JavaSearchResultCollector resultCollector) throws CoreException", "signatureAfterChange": " \t \tprotected void search(String patternString, int searchFor, int limitTo, IJavaSearchScope scope, SearchRequestor resultCollector) throws CoreException", "diff": ["-\tprotected void search(String patternString, int searchFor, int limitTo, IJavaSearchScope scope, JavaSearchResultCollector resultCollector) throws CoreException {", "+\tprotected void search(String patternString, int searchFor, int limitTo, IJavaSearchScope scope, SearchRequestor resultCollector) throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0339fbe4c692786e1443bad19c1a45fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "7aac6f03ecf70666410b0e689c91dafd6d67757a", "commitAfterChange": "465d091146b1d6997709777ea444048487da1d8d", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void notifySourceElementRequestor(AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " public void notifySourceElementRequestor(AbstractMethodDeclaration methodDeclaration)", "diff": ["-\t\t\t: ((AnnotationTypeMemberDeclaration) methodDeclaration).returnType;", "+\t\t\t: ((AnnotationMethodDeclaration) methodDeclaration).returnType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "033ccb3899cecaf4057ea68e4a4c86f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/J9VMLauncher.java", "commitBeforeChange": "a6231ce33b0c4c1035133950b71c0c97d48b4fc8", "commitAfterChange": "fb73ff7c4976ff452de2ec97a6404f1940e5234e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void setDebugPort(int debugPort)", "signatureAfterChange": " public void setDebugPort(int debugPort)", "diff": ["-\tthis.setInternalDebugPort(Util.nextAvailablePortNumber());", "+\tthis.setInternalDebugPort(Util.getFreePort());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "034203930aeda0a3d60a85fe740805f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "98d98039d31a5dcc8a3b24b4a05191f05e175f2b", "commitAfterChange": "f91fa46e8d1bc79474704dc3367b9b7e910d1272", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic IProblem[] getProblems()", "signatureAfterChange": " \tpublic IProblem[] getProblems()", "diff": ["-\t\t// FIXME: implementation is missing", "-\t\treturn null;", "+\t\treturn problems;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0357eb99753ce652414dc77c9895879f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testAddExclusionOnCompilationUnit() throws CoreException", "signatureAfterChange": " public void testAddExclusionOnCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "035c3d54f7e31aef0bf8216919ffeccd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/EvaluationTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static Test setupSuite(Class clazz)", "signatureAfterChange": " \t \tpublic static Test setupSuite(Class clazz)", "diff": ["-\t\treturn buildAllCompliancesSetupSuite(clazz, EvaluationSetup.class, testClasses);", "+\t\treturn buildAllCompliancesTestSuite(clazz, EvaluationSetup.class, testClasses);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03602f46cb6b0e2325ca3bd3b10aae68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic String getResults(boolean relevance, boolean position)", "signatureAfterChange": "  \tpublic String getResults(boolean relevance, boolean position)", "diff": ["-\t\tint size = fElements.size();", "+\t\tint size = elements.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0372eef3ee1d6a8a115e3bc5704f56e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "f338c86815ffb4c165b8024ba4f28cade0b2b75f", "commitAfterChange": "a98d7d87df415161ba75f53acbdbe8d316ea160c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\t\t\tif (!this.shouldUnelideTypes)", "+\t\t\t\tif (!this.assistNode)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "037e95965ff7476774110cd384ce93f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnLocalName.java", "commitBeforeChange": "32a99f8c41e7f6505e98564a2fe955f48d80f711", "commitAfterChange": "38819b0397930dbfdcf4973c1bb1a5b3cfbe15eb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic String toString(int tab)", "signatureAfterChange": "\r \tpublic String toString(int tab)", "diff": ["-\t\ts += new String(name);\r", "+\t\ts += new String(realName);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0383f3a868b29019e3cacca972519f01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void reportMissingFactoryContainers(Set<FactoryContainer> badContainers, IJavaProject jproj)", "signatureAfterChange": " \tprivate void reportMissingFactoryContainers(Set<FactoryContainer> badContainers, IJavaProject jproj)", "diff": ["-\t\t\t\tIMarker marker = project.createMarker(AptPlugin.APT_BUILD_PROBLEM_MARKER);", "+\t\t\t\tIMarker marker = project.createMarker(AptPlugin.APT_LOADER_PROBLEM_MARKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03abb5b2c1bf9da39871cdcc2eab9eff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void markAsDefinitelyAssigned(LocalVariableBinding local)", "signatureAfterChange": " \tpublic void markAsDefinitelyAssigned(LocalVariableBinding local)", "diff": ["-\t\tif (this != DeadEnd)", "+\t\tif (this != DEAD_END)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03dcb39806efb144cc524f7d28213209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tSingleVariableDeclaration(AST ast)", "signatureAfterChange": " \tSingleVariableDeclaration(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03e7ba07f50677f77f82e61f46fe34c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SnippetCompletionTests.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void testCodeSnippetAssistForClassFileWithSource() throws JavaModelException", "signatureAfterChange": "  public void testCodeSnippetAssistForClassFileWithSource() throws JavaModelException", "diff": ["-\tint[] modifiers = {CompilerModifiers.AccDefault, CompilerModifiers.AccFinal};", "+\tint[] modifiers = {CompilerModifiers.AccDefault, IConstants.AccFinal};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03f69a8ecc2a81a42161dd04a634dab6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic DefaultCodeFormatter(FormattingPreferences preferences)", "signatureAfterChange": " \t \tpublic DefaultCodeFormatter(DefaultCodeFormatterOptions preferences)", "diff": ["-\tpublic DefaultCodeFormatter(FormattingPreferences preferences) {", "+\tpublic DefaultCodeFormatter(DefaultCodeFormatterOptions preferences) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0413ec724f2138d2a3e55af3a118de3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "b9cb873d4449d2f10b10f7985e564b1f6bad691b", "commitAfterChange": "1ffd93ec138fc38a22c082921b3ee25a9e75ba37", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic boolean visit(FieldAccess node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["+\t}", "+\tpublic boolean visit(EnumDeclaration node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0414bbcde1c08d101e56ba9df0c9f7ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "6436bbd31cbe5b698244c0208dd161fd144dd93e", "commitAfterChange": "4e5b524e8fed0a2f038362e79ac7bed8b62bd551", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\t\tbuffer.append(this.position);", "+\t\tbuffer.append(this.end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0419c8362704be17aa51565257baba46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "886d0f0c1c856616883aceae38186164d207f2a8", "commitAfterChange": "3bb52dd94a6650dc05eccd3db55f82a70954db23", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildSuite(javadocTestClass());", "+\t\treturn buildTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0423056ecd97de691cbe6d2f2f590b22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotatableTypeSystem.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate TypeBinding getAnnotatedType(TypeBinding type, TypeBinding enclosingType, AnnotationBinding[] annotations)", "signatureAfterChange": " \tprivate TypeBinding getAnnotatedType(TypeBinding type, TypeBinding enclosingType, AnnotationBinding[] annotations)", "diff": ["-\t\t\t\t\t\tcase Binding.INTERSECTION_CAST_TYPE:", "+\t\t\t\t\t\tcase Binding.INTERSECTION_TYPE18:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0436edecff29b1c00cef7a2b19f11c3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testAddInclusionOnCompilationUnit() throws CoreException", "signatureAfterChange": " public void testAddInclusionOnCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "043b1972ab11fc6874bff0cf2481e94a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testInvalidTagsMethodErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsMethodErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "043dfb62d703ed7520bb3a251cd6be20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "ff2422726abd9b4eb2726e976f3ef82854d72609", "commitAfterChange": "20fa08dd67915598091c483c6e898b71bc3a58de", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic String getIndentString(String currentLine)", "signatureAfterChange": " \t \tpublic String getIndentString(String currentLine)", "diff": ["-\t\treturn Indents.getIndentString(currentLine, this.tabWidth, this.indentWidth);", "+\t\treturn Indents.extractIndentString(currentLine, this.tabWidth, this.indentWidth);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0445ea0e4520083512cf78c0c3d6b04a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "8d5c22dc795489d8707a2c2212ce9020aac94b9f", "commitAfterChange": "d23451ebf024452ccadb6e1836412da6b1f36827", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate void initLevelTags()", "signatureAfterChange": " \tprivate void initLevelTags()", "diff": ["-\t\tint level = ((int)(this.sourceLevel >>> 16)) - ClassFileConstants.MAJOR_VERSION_1_1 + 1;", "+\t\tint level = ((int)(this.complianceLevel >>> 16)) - ClassFileConstants.MAJOR_VERSION_1_1 + 1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0458e6f475605e0610ae54b0ae2a0a79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\tpublic boolean match(AnonymousClassDeclaration node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(AnnotationTypeDeclaration node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(AnnotationTypeDeclaration node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0461d0cebdfde25c3d530c8c2c1c7fb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate void locatePackageDeclarations( \t\tSearchPattern searchPattern, \t\tIWorkspace workspace) \t\tthrows JavaModelException", "signatureAfterChange": " \tprivate void locatePackageDeclarations( \t\tSearchPattern searchPattern, \t\tIWorkspace workspace) \t\tthrows JavaModelException", "diff": ["-\t\t\t\t\t\t\t\tIResource resource = pkg.getUnderlyingResource();", "+\t\t\t\t\t\t\t\tIResource resource = pkg.getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04690579c8c2aa71dfa31ae9b4ea1da5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "2763b65f87dc2fdaee2c7f0af31c2acf6f8b9c28", "commitAfterChange": "6f4f90e2451f9fcdb6af6941acb2518968bd5fec", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected Object peekAtInfo(IJavaElement element)", "signatureAfterChange": " protected Object peekAtInfo(IJavaElement element)", "diff": ["-\t\t\treturn this.pkgCache.peek(element);", "+\t\t\treturn this.pkgCache.get(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a4858f1dcd22fb273e07ba7618e18f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 184, "signatureBeforeChange": " \tpublic void test162()", "signatureAfterChange": " \tpublic void test162()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a5ebece3227350a56c9406ab8145e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "039d5ebb17d9b09ae245ba628ad4d0e9cf747b63", "commitAfterChange": "1745fe20399b6a7284c025a8e1750403718486c9", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " protected void consumeBlock()", "signatureAfterChange": " protected void consumeBlock()", "diff": ["-\t\t\tblock.bits |= AstNode.UncommentedEmptyBlockMASK;", "+\t\t\tblock.bits |= AstNode.UndocumentedEmptyBlockMASK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b54a112becc06e642c083e00b75399", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "13a2bff8811ff586bab60fddd157d395e6533570", "commitAfterChange": "4e8c06d42dcf2a91f77056993fc995ad49c4f7d9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tboolean valueRequired)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t\tif ((fieldBinding = (FieldBinding) binding).isFinal()", "+\t\t\t\t\tif ((fieldBinding = (FieldBinding) binding).isBlankFinal()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04bc7dc43ff6ba040055ae5a9765762b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionParserTestKeyword.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(CompletionParserTestKeyword.class);", "+\treturn buildAllCompliancesTestSuite(CompletionParserTestKeyword.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04ca03827df82be62ec34e2cbbf60d70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "f60c0face3ba2b87651b85d85b64101707cb246a", "commitAfterChange": "0500d43a75bf65b406995baa7b110dc9d0f7b60c", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic static long warningTokenToIrritant(String warningToken)", "signatureAfterChange": " \tpublic static long warningTokenToIrritant(String warningToken)", "diff": ["-\t\t\t\t\treturn Autoboxing;", "+\t\t\t\t\treturn AutoBoxing;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04ceb34e68ba1b5524d5bb08d91d2f99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "  \tprivate void setTypeAnnotationsOnDimension(ExtraDimension currentDimension, org.eclipse.jdt.internal.compiler.ast.Annotation[][] annotationsOnDimensions, int dimension)", "signatureAfterChange": "  \tprivate void setTypeAnnotationsOnDimension(Dimension currentDimension, org.eclipse.jdt.internal.compiler.ast.Annotation[][] annotationsOnDimensions, int dimension)", "diff": ["-\tprivate void setTypeAnnotationsOnDimension(ExtraDimension currentDimension, org.eclipse.jdt.internal.compiler.ast.Annotation[][] annotationsOnDimensions, int dimension) {", "+\tprivate void setTypeAnnotationsOnDimension(Dimension currentDimension, org.eclipse.jdt.internal.compiler.ast.Annotation[][] annotationsOnDimensions, int dimension) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04d1c60deab1818753529b5757a67253", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "1d93c592655130ee83ccf569199d32491937354e", "commitAfterChange": "b60bff4501141ce0e7ed5fab43805b77b52b5e19", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " public static ITypeHierarchy load(IType type, InputStream input) throws JavaModelException", "signatureAfterChange": " public static ITypeHierarchy load(IType type, InputStream input) throws JavaModelException", "diff": ["-\t\t\t\ttypeHierarchy.type = element;", "+\t\t\t\ttypeHierarchy.focusType = element;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04d630c282e7b3fe57e308a7018f5e90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  private void createFields(IBinaryField[] iFields, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": "  private void createFields(IBinaryField[] iFields, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-\t\t\t\tITypeAnnotationWalker walker = getTypeAnnotationWalker(binaryField.getTypeAnnotations()).toField();", "+\t\t\t\tTypeAnnotationWalker walker = getTypeAnnotationWalker(binaryField.getTypeAnnotations()).toField();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04e936d4a1e6f09db80f5b613252ad68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "616a41b14ead174db92c630ec6ed7f1d666a9b67", "commitAfterChange": "645b7eff21d5db2b90380f1d4478beb9fa33f107", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject2() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject2() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f3bc0e1e33c0557a6fd1ad7ef75d67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/util/JdtCorePerformanceMeterPlugin.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static JdtCorePerformanceMeterPlugin getDefault()", "signatureAfterChange": " \t \tpublic static JdtCorePerformanceMeterPlugin getDefault()", "diff": ["-\t\treturn fgDefault;", "+\t\treturn DEFAULT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04f8f4178780b0c3df1d65e9588a3bb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\tthis.subRoutineStartLabel = new Label();", "+\t\t\t\tthis.subRoutineStartLabel = new BranchLabel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05631a4a0e60a1419795b15c8289cd87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "42f19505e2b0e62ad46875b45fa4e43948f0404c", "commitAfterChange": "7a9706b8b7237e24abb36bf7cf37fec735ba2689", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic static long warningTokenToIrritant(String warningToken)", "signatureAfterChange": " \tpublic static long warningTokenToIrritant(String warningToken)", "diff": ["-\t\t\t\t\treturn AssertUsedAsAnIdentifier;", "+\t\t\t\t\treturn NonExternalizedString;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0568f57298532895a481b9f9b30ed2d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException {\r", "+protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "057e5529f1c1a379e26b2a6aa100c19c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SingleTypeRequestor.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void acceptMemberType(IType type)", "signatureAfterChange": " public void acceptMemberType(IType type)", "diff": ["-\tfElement= type;", "+\telement= type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05817ad33ca6edc44719f3c3f6d97d75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "signatureAfterChange": " \tpublic void computeLocalVariablePositions(int initOffset, CodeStream codeStream)", "diff": ["-\t\t\t\t\t&& ((local.declaration.bits & ASTNode.IsLocalDeclarationReachableMASK) != 0)) { // declaration is reachable", "+\t\t\t\t\t&& ((local.declaration.bits & ASTNode.IsLocalDeclarationReachable) != 0)) { // declaration is reachable"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0584b9ea6290d244920c828918dc7c8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileManager.java", "commitBeforeChange": "a2ea0fcdb64df5f36a0bf2ffec84669e3f62dfd4", "commitAfterChange": "9db80bfa8f5d6f7bab214c95a4d83c3bdedb2628", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate Iterable<? extends File> getPathsFrom(String path)", "signatureAfterChange": "  \tprivate Iterable<? extends File> getPathsFrom(String path)", "diff": ["-\t\t} catch (InvalidInputException e) {", "+\t\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "058ece04b3cabe35122e053a978aa3c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "0820eec9945610037c75b7f3c6bc13a32acbc80c", "commitAfterChange": "4fb4651d7a5f975649614980f56a713ca0cbf39d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate APTResult runAPT( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \t \tprivate APTResult runAPT( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "diff": ["-\t\t\tAptPlugin.log(t, \"Unexpected failure running APT \" + getFileNameForPrint()); //$NON-NLS-1$", "+\t\t\tAptPlugin.log(t, \"Unexpected failure running APT \" + getFileNamesForPrinting()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "059ba7195ba9f857f11c6d0e5c9babaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "cefc7f3f8677282aa49e610700500999ffcaffcb", "commitAfterChange": "89e8879d5dd978e5f2535f9d8b7bac080dd4f73b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public int match(TypeDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(ReferenceExpression node, MatchingNodeSet nodeSet)", "diff": ["+public int match(ReferenceExpression node, MatchingNodeSet nodeSet) {", "+\tif (!this.pattern.findReferences) return IMPOSSIBLE_MATCH;", "+\treturn nodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "059ca071f6f947dc6db75e9662b77393", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " public boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\tJobManager.verbose(\"-> execution time: \" + executionTime + \"ms - \" + this);//$NON-NLS-1$//$NON-NLS-2$", "+\t\t\tUtil.verbose(\"-> execution time: \" + executionTime + \"ms - \" + this);//$NON-NLS-1$//$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05a748ea2bb852a6a486b2dc34ec2114", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "30f95fb4ebb82c4f1cdb1fd9e5630fe8b392b9dd", "commitAfterChange": "79595bc8e3c8f30e8c21788264b1a2858fc4a5c5", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void enterMethod( \tint declarationStart, \tint modifiers, \tchar[] returnType, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd, \tchar[][] parameterTypes, \tchar[][] parameterNames, \tchar[][] exceptionTypes, \tboolean isConstructor, \tchar[][] typeParameterNames, \tchar[][][] typeParameterBounds)", "signatureAfterChange": " protected void enterMethod( \tint declarationStart, \tint modifiers, \tchar[] returnType, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd, \tchar[][] parameterTypes, \tchar[][] parameterNames, \tchar[][] exceptionTypes, \tboolean isConstructor, \tchar[][] typeParameterNames, \tchar[][][] typeParameterBounds)", "diff": ["-\t\tIMethod handle = null;", "+\t\tSourceMethod handle = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05ac7e8507b086655d76e2739fdc3293", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForInnerclass(LocalVariableBinding actualOuterLocalVariable)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForInnerclass(LocalVariableBinding actualOuterLocalVariable)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05b9a40f5eea2b2bf5182a6e6d8f4031", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "commitAfterChange": "74ac0014c1ede0ba61ac73f39089ab641618bf5d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\t \tpublic String getFormattedResult(ASTNode node, int initialIndentationLevel, Collection resultingMarkers)", "signatureAfterChange": "\t \tpublic String getFormattedResult(ASTNode node, int initialIndentationLevel, Collection resultingMarkers)", "diff": ["-\t\t\t\tReplaceEdit[] edits = Indents.getChangeIndentEdits(unformatted, 0, this.tabWidth, this.indentWidth, indentString);", "+\t\t\t\tReplaceEdit[] edits = IndentManipulation.getChangeIndentEdits(unformatted, 0, this.tabWidth, this.indentWidth, indentString);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05bb1476f0df71ed44873945f11df26f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected SourceType(IJavaElement parent, String name)", "signatureAfterChange": " protected SourceType(JavaElement parent, String name)", "diff": ["-protected SourceType(IJavaElement parent, String name) {", "+protected SourceType(JavaElement parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05bdce15496fc3fb3e8f5a37627bed38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 323, "methodNumberAfterChange": 323, "signatureBeforeChange": "  \tpublic void test303()", "signatureAfterChange": "  \tpublic void test303()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05d59eaebe157048120bd73f30178887", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "signatureAfterChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceTypes(), packageBinding);\r", "+\t\ttypeRequestor.accept(answer.getSourceType(), packageBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05f77798265d5e75af6448d26ae0bd16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "3a3faf3d0aa82cf2ed2b8375e651ef0b429b1314", "commitAfterChange": "d2fd0a411735601d08912dc407d669f4cabc6555", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " void scanMethodForNullAnnotation(IBinaryMethod method, MethodBinding methodBinding)", "signatureAfterChange": " void scanMethodForNullAnnotation(IBinaryMethod method, MethodBinding methodBinding)", "diff": ["-\tint numParamAnnotations = method.getNumParameterAnnotations();", "+\tint numParamAnnotations = method.getAnnotatedParametersCount();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05fd5fe65c166845ec8dca051f6be0d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "f26c25cbcb6d4bad78268eff61fd53577b45a9e9", "commitAfterChange": "65a3127da1161f59c28b91d7c9ae657695f2488d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic IBinaryType getBinaryInfo(org.eclipse.jdt.internal.core.ClassFile classFile, IResource resource) throws CoreException", "signatureAfterChange": " \tpublic IBinaryType getBinaryInfo(org.eclipse.jdt.internal.core.ClassFile classFile, IResource resource) throws CoreException", "diff": ["-\t\t\t\t\tString osPath = resource.getFullPath().toOSString();", "+\t\t\t\t\tString osPath = resource.getLocation().toOSString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "061631437e6a04a959521aab89ec1c41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuite(testClass());", "+\t\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "061bd1c881c9d56a5a139ac9bd0fb76e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "6de1c3494d2fadd84c00d095d26cf416be8557a3", "commitAfterChange": "67744c35fb096b073b6eb207529145544c47d6b6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public Map getOptions()", "signatureAfterChange": " public Map getOptions()", "diff": ["-\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);\t", "+\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0629a454f197c4fbf84ac976f3f610bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "86c239f2e66a4d986257b0e0acb4d18b2648df10", "commitAfterChange": "0660c8d5b36b733c21ef1069dd1616322b9b5c53", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public IClassFile[] getClassFiles() throws JavaModelException", "signatureAfterChange": " public IClassFile[] getClassFiles() throws JavaModelException", "diff": ["-\t\treturn fgEmptyClassFileList;", "+\t\treturn NO_CLASSFILES;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "062eddeb2c2724cc355f58691d285401", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "f41df9b6ac9b62f616470e8ec0968732d823137f", "commitAfterChange": "2f379667b4f33f336f0003d6b2911b5403125b74", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t        if ((otherType.tagBits & HasWildcard) == 0 && (!this.isMemberType() || !otherType.isMemberType())) ", "+\t        if ((otherType.tagBits & HasDirectWildcard) == 0 && (!this.isMemberType() || !otherType.isMemberType())) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06456e491bdb3ea520d042f37cd0bd8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic boolean visit(ExtraDimension node)", "signatureAfterChange": " \tpublic boolean visit(ExpressionMethodReference node)", "diff": ["+\t */", "+\tpublic boolean visit(ExpressionMethodReference node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "065645371ba158589dea9a7a845f2990", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "234e90f1063594cbfe450e6804c5db0a515eda2c", "commitAfterChange": "0af096b2d34684a162b7a195205699b7a15a3c32", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "signatureAfterChange": " \t \tpublic static ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "diff": ["-\t\tParser parser = new CommentRecorderParser(problemReporter, false);", "+\t\tCommentRecorderParser parser = new CommentRecorderParser(problemReporter, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06581c172e043251c8b2da574a4077cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "6d0ccedfc014e836e943517bce6f08187a6dcb78", "commitAfterChange": "647a108cae9d39a8e0372555afdf235a7220c6da", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\tthis.lookupEnvironment.completeTypeBindings(parsedUnit, true/*build constructor only*/);", "+\t\t\t\t\t// complete type bindings and build fields and methods only for local types", "+\t\t\t\t\t// (in this case the constructor is needed when resolving local types)", "+\t\t\t\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=145333)", "+\t\t\t\t\tthis.lookupEnvironment.completeTypeBindings(parsedUnit, containsLocalType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "065e7a0dbf92dd61209d254bd547ae49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\treturn this.expressionType = binding.type;", "+\treturn this.resolvedType = binding.type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "067f6823c092890ea20f83fd78cac65d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "a2a0577109951f3af96b6ee7e6f23d457b52d52d", "commitAfterChange": "1987bebfc0499fe07d643a641d2e74ff184f5cc7", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tpublic boolean visit(ForStatement node)", "signatureAfterChange": " \tpublic boolean visit(LambdaExpression node)", "diff": ["+\tpublic boolean visit(LambdaExpression node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0683cf0d735d09500a8458659e9af1b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "8a1e311af393ccdbbaab4d3836c703deb332d624", "commitAfterChange": "c0735951a055fba3f0be3b86f55a77d744b6fbe2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\t\t((TypeNameMatchRequestorWrapper)nameRequestor).requestor.acceptTypeNameMatch(new TypeNameMatch(type, type.getFlags()));", "+\t\t\t\t\t\t\t\t\t((TypeNameMatchRequestorWrapper)nameRequestor).requestor.acceptTypeNameMatch(new JavaSearchTypeNameMatch(type, type.getFlags()));", "-\t\t\t\t\t\t\t\t\t\t\t((TypeNameMatchRequestorWrapper)nameRequestor).requestor.acceptTypeNameMatch(new TypeNameMatch(type, typeDeclaration.modifiers));", "+\t\t\t\t\t\t\t\t\t\t\t((TypeNameMatchRequestorWrapper)nameRequestor).requestor.acceptTypeNameMatch(new JavaSearchTypeNameMatch(type, typeDeclaration.modifiers));", "-\t\t\t\t\t\t\t\t\t\t\t((TypeNameMatchRequestorWrapper)nameRequestor).requestor.acceptTypeNameMatch(new TypeNameMatch(type, 0));", "+\t\t\t\t\t\t\t\t\t\t\t((TypeNameMatchRequestorWrapper)nameRequestor).requestor.acceptTypeNameMatch(new JavaSearchTypeNameMatch(type, 0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0685b217a6687f593faa326a411b993e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0691fb59aacba6fb65df181eadda6769", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope)", "diff": ["-\t\tif (isFieldUseDeprecated(this.binding, scope, (this.bits & IsStrictlyAssignedMASK) != 0)) {", "+\t\tif (isFieldUseDeprecated(this.binding, scope, (this.bits & IsStrictlyAssigned) != 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "069467c4a5c6fc94e560b5be6d080fb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  \tpublic MarkerAnnotation convert(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation annotation)", "signatureAfterChange": "  \tpublic MarkerAnnotation convert(org.eclipse.jdt.internal.compiler.ast.MarkerAnnotation annotation)", "diff": ["-\t\t\tmarkerAnnotation.resolveAnnotation();", "+\t\t\tmarkerAnnotation.resolveAnnotationBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0695f3295a8dc6f6e23d8011eaa4d685", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "8c93d4e99b8a943865cb7391e781eba5bb83dfc9", "commitAfterChange": "bd0edd7688142c1743cb6b10766dfc576040f113", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t\tcheckNPE(currentScope, flowContext, flowInfo, true);", "+\t\t\t\tcheckInternalNPE(currentScope, flowContext, flowInfo, true);", "+\t// note: not covering def.assign for @NonNull: QNR cannot provable refer to a variable of the current object"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06b8f43492ea1e359a866a0aee0ec322", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "092d49846655da2c4e511a256ba551dc4e15c674", "commitAfterChange": "f0f7b2fe75d5e4bbbfed49ea6ae9486a5e0f12c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public static IStatus validateCompilationUnitName(String name)", "signatureAfterChange": "\r public static IStatus validateCompilationUnitName(String name)", "diff": ["-\tindex = name.indexOf('.');\r", "+\tindex = name.lastIndexOf('.');\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06c1cf7a8f071972b5d254c0df66e0c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnParameterizedQualifiedTypeReference.java", "commitBeforeChange": "159e8ad6d8421b49efbcfb424fe9327481d95b23", "commitAfterChange": "8abe8838e4f5c3f829e8d4a716d1798a8812906f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic boolean isClass()", "signatureAfterChange": " \t \tpublic boolean isClass()", "diff": ["-\t\treturn this.kind == CLASS;", "+\t\treturn this.kind == K_CLASS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06c47bd399e60edd0f09762374cc6d74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public void test031() throws JavaModelException", "signatureAfterChange": "  public void test031() throws JavaModelException", "diff": ["-\t\t\"BasicTestTypes.BasicTestTypesMember[TYPE_REF]{BasicTestTypesMember, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes$BasicTestTypesMember;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"BasicTestTypes.BasicTestTypesMember[TYPE_REF]{BasicTestTypesMember, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes$BasicTestTypesMember;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06cb0f18a2dea58afdd316434dcee8dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 544, "methodNumberAfterChange": 544, "signatureBeforeChange": "  public void nullAnnotationIsRedundant(AbstractMethodDeclaration sourceMethod, int i)", "signatureAfterChange": "  public void nullAnnotationIsRedundant(AbstractMethodDeclaration sourceMethod, int i)", "diff": ["-\t\tAnnotation annotation = findAnnotation(methodDecl.annotations, TypeIds.T_ConfiguredAnnotationNonNull);", "+\t\tAnnotation annotation = findAnnotation(methodDecl.annotations, TypeIds.BitNonNullAnnotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f03d2c27f7bcbddd8e7089d4d3f439", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "35fd76e356146458b564c231f44085c52b0d1c47", "commitAfterChange": "0bd04abb8575a021cf8905c773ca1d2199f31c53", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tpublic void consumeTypeVariable(char[] typeVariableName)", "signatureAfterChange": " \t \tpublic void consumeTypeVariable(char[] typeVariableName)", "diff": ["-\t\t\t\tthis.compilerBinding = typeVariableBinding;", "+\t\t\t\tthis.typeBinding = typeVariableBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06f14ed99bfc00592026655889764cdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testAnonymousType6() throws JavaModelException", "signatureAfterChange": " public void testAnonymousType6() throws JavaModelException", "diff": ["-\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07085d7bee121a48c55210f89c8f023b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfType.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public boolean containsKey(char[] key)", "signatureAfterChange": " public boolean containsKey(char[] key)", "diff": ["-\t\tif (currentKey.length == keyLength && CharOperation.prefixEquals(currentKey, key))", "+\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "070f2c056de5f720b36a013f4af0ad9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic static String typeSignature(TypeReference type)", "signatureAfterChange": " \tpublic static String typeSignature(TypeReference type)", "diff": ["-\t\tchar[][] compoundName = type.getTypeName();", "+\t\tchar[][] compoundName = type.getParameterizedTypeName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0724faeba62b0dfdd6815123a5a55415", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LocalVariableTest.java", "commitBeforeChange": "4eaa1f1fc9e841c11eaca436ac06f8635b8543bd", "commitAfterChange": "f73fdb0a354f2f38e3faeb7d9eceabb3d85530d5", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void test412119c()", "signatureAfterChange": " public void test412119c()", "diff": ["-\toptions.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.ERROR);", "+\toptions.put(CompilerOptions.OPTION_ReportUnusedExceptionParameter, CompilerOptions.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07300fc13d06c4ec52fc22af4da76fc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f4680a34e1f2039b2a192d0a537b3157d981aa26", "commitAfterChange": "41f0eedac440a5a7408e664ba09866184ebddd55", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " \tpublic void test102()", "signatureAfterChange": " \tpublic void test102()", "diff": ["-\t\tpreferences.line_delimiter = \"\\n\";//$NON-NLS-1$", "+\t\tpreferences.line_separator = \"\\n\";//$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "073f474b0e4c9dea53ef246e75409a4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelStatus.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic IPath getPath()", "signatureAfterChange": " \tpublic IPath getPath()", "diff": ["-\t\treturn fPath;", "+\t\treturn path;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "074b87c0504f763f368378bf82e09e94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  public void testCompletionMethodDeclaration7() throws JavaModelException", "signatureAfterChange": "  public void testCompletionMethodDeclaration7() throws JavaModelException", "diff": ["-\t\t\"element:clone    completion:protected Object clone() throws CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\t\t\"element:clone    completion:protected Object clone() throws CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "074d696d0ab82b108436e063d052b764", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private int matchLevel(TypeReference typeRef, boolean resolve)", "signatureAfterChange": " private int matchLevel(TypeReference typeRef, boolean resolve)", "diff": ["-\t\tTypeBinding typeBinding = typeRef.binding;", "+\t\tTypeBinding typeBinding = typeRef.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0758cfd7ed425b64e1d522ff4b5a78ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "c3bc9435ae5f771b490381d71d5245c83cf6d0cb", "commitAfterChange": "9a37cc8c27d2ce81469956404b5e25a8551c0848", "methodNumberBeforeChange": 315, "methodNumberAfterChange": 315, "signatureBeforeChange": " \tpublic void test0312() throws JavaModelException", "signatureAfterChange": " \tpublic void test0312() throws JavaModelException", "diff": ["-\t\tassertNull(\"No declaring node is available\", declaringNode); //$NON-NLS-1$", "+\t\tassertNotNull(\"No declaring node is available\", declaringNode); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0767a35448b8a9ef6328d243a577bebb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ExplicitConstructorInvocationCompletionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(ExplicitConstructorInvocationCompletionTest.class);", "+\treturn buildAllCompliancesTestSuite(ExplicitConstructorInvocationCompletionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "076e1885e018302988df146fb3a896c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexBinaryFolder.java", "commitBeforeChange": "807b33cf50fdb479db403880e28eb0989e0fbdba", "commitAfterChange": "ec8ef2b0e48215b6eaf284990dd1417e7ae7aeb1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic IndexBinaryFolder(IFolder folder, IndexManager manager)", "signatureAfterChange": "  \tpublic IndexBinaryFolder(IContainer folder, IndexManager manager)", "diff": ["-\tpublic IndexBinaryFolder(IFolder folder, IndexManager manager) {", "+\tpublic IndexBinaryFolder(IContainer folder, IndexManager manager) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "077e43ca7948f39dfce5835ec3e97f60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic boolean visit(ForStatement node)", "signatureAfterChange": " \tpublic boolean visit(EnumConstantDeclaration node)", "diff": ["+\t */", "+\tpublic boolean visit(EnumConstantDeclaration node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079b7c9c663b0a3025fe6fabc763d992", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void testInsertBeginning() throws CoreException", "signatureAfterChange": " public void testInsertBeginning() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079b99ac3cad33d95f337442fe3aa9e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "     public char[] readableName()", "signatureAfterChange": "     public char[] readableName()", "diff": ["-        switch (this.kind) {", "+        switch (this.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07a2324b757e7545bcd9a8ac4724d165", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "e3b61331087882f47093048d6298d97548b68615", "commitAfterChange": "9ae1dbe2eb10f60df8b987132110cee826808427", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tprotected void initializeDefaultPluginPreferences()", "signatureAfterChange": " \tprotected void initializeDefaultPluginPreferences()", "diff": ["-\t\tpreferences.setDefault(COMPILER_PB_SUPERFLUOUS_SEMICOLON, WARNING);", "+\t\tpreferences.setDefault(COMPILER_PB_SUPERFLUOUS_SEMICOLON, IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07a9120c667392aca65ea91bba91930d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "commitAfterChange": "e6d8789df9b4566a0124edc04d16cdf543582e67", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static String[] warningOptionNames()", "signatureAfterChange": " \tpublic static String[] warningOptionNames()", "diff": ["-\t\t\tOPTION_ReportNonnullParameterAnnotationDropped,", "-\t\t\tOPTION_ReportDiscouragedInvocationIncompatibleArgument,", "+\t\t\tOPTION_ReportNonnullParameterAnnotationDropped"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07b5f3d63457a9e650ef6cf38cfa49d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "87d4fd7980451e90652820b5860e6399b708ef2c", "commitAfterChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic TextEdit format(String string, CompilationUnitDeclaration compilationUnitDeclaration)", "signatureAfterChange": " \tpublic TextEdit format(String string, CompilationUnitDeclaration compilationUnitDeclaration)", "diff": ["-\t\tthis.scribe.initializeScanner(compilationUnitSource);", "+\t\tthis.scribe.resetScanner(compilationUnitSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07d0d1d10e638265d59b09bc123d84b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic boolean visit(CharLiteral charLiteral, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(CharLiteral charLiteral, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCharacterLiteral);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCharacterLiteral);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07f2bd10891a78c0a504a40d860a8d44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tfinal void supportedOnlyIn2()", "signatureAfterChange": " \tfinal void supportedOnlyIn2()", "diff": ["-\t  if (this.owner.API_LEVEL != AST.LEVEL_2_0) {", "+\t  if (this.ast.API_LEVEL != AST.LEVEL_2_0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08049bea77f945edd4d5d4de8975cb40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_4.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionSetupSuite(testClass(), COMPLIANCE_1_4);", "+\t\treturn buildUniqueComplianceTestSuite(testClass(), COMPLIANCE_1_4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080893b88e877850df2adce2fc492329", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\tFlowInfo.UNREACHABLE) != 0) {", "+\t\t\t\t\tFlowInfo.UNREACHABLE_OR_DEAD) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080b6447ff0237307ff1e2c0cda837d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2193765f6a14f1428523dab68858768ca623c9d3", "commitAfterChange": "5450463d69e66bedc3d0797b782f5dab3b9072d6", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  \t\tpublic synchronized ClasspathChange resetResolvedClasspath()", "signatureAfterChange": "  \t\tpublic synchronized ClasspathChange resetResolvedClasspath()", "diff": ["-\t\t\t// clear non-chaining jars cache", "-\t\t\tJavaModelManager.getJavaModelManager().resetNonChainingJarsCache();", "+\t\t\t// clear non-chaining jars cache and invalid jars cache", "+\t\t\tJavaModelManager.getJavaModelManager().resetClasspathListCache();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "080c5add0906e15e4b8fadb60d11f8e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected TypeReference getTypeReference(int dim)", "signatureAfterChange": " protected TypeReference getTypeReference(int dim)", "diff": ["-\tthis.patternLocator.match(typeRef, this.matchSet); // NB: Don't check container since type reference can happen anywhere", "+\tthis.patternLocator.match(typeRef, this.nodeSet); // NB: Don't check container since type reference can happen anywhere"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0819368c463feaa33e77df16505f96cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized, char[][][] missingTypeNames)", "signatureAfterChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized, char[][][] missingTypeNames)", "diff": ["-\treturn getTypeFromConstantPoolName(signature, start, end, isParameterized, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\treturn getTypeFromConstantPoolName(signature, start, end, isParameterized, missingTypeNames, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08298ad6a9cd47b98c78eed9b39654e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "a601b6b1bd0055831cf914eda4a394af5ff40421", "commitAfterChange": "aae3a2ae7793bc4970c4033658428e24ab5d11f5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public ICompilationUnit createCompilationUnit(String name, String contents, boolean force, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ICompilationUnit createCompilationUnit(String name, String contents, boolean force, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\treturn new CompilationUnit(this, name, DefaultCompilationUnitOwner.PRIMARY);", "+\treturn new CompilationUnit(this, name, DefaultWorkingCopyOwner.PRIMARY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "082a9666e5e67ef62fafe51c3cd66290", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "9188892e0f35caf292fbde4f4813a5d6570c540a", "commitAfterChange": "3255db62a2a31c2b7911a20dbb001663d6aa8d6e", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " private final boolean atLambdaParameterList()", "signatureAfterChange": " private final boolean atLambdaParameterList()", "diff": ["-\t\t\tjumpOver('(', ')', null);", "+\t\t\tjumpOver('(', ')', blackListedTokens);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0831dec00228af00a6f3479d6532a126", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "eb727711bfbefbe06ad25a796b42d61ffab45eca", "commitAfterChange": "c4ce580cb0d1d41b788a7611bd30d4cf0eba4f86", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": " \t \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\t\t\t\t\t    initializationScope.problemReporter().unsafeRawAssignment(this.initialization, initializationType, fieldType);", "+\t\t\t\t\t\t\t\t    initializationScope.problemReporter().unsafeRawConversion(this.initialization, initializationType, fieldType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08358cb7dc5f2e592d3f28c1882086ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateCompilationUnitOperation.java", "commitBeforeChange": "db4c00855129089e4c96f41ff5fa8e56ae161b7d", "commitAfterChange": "53e8f3a95687ef5cec105d4bb08a05bcc120914e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void executeOperation() throws JavaModelException", "signatureAfterChange": " protected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\tcreateFile(folder, unit.getElementName(), stream, false);", "+\t\t\t\tcreateFile(folder, unit.getElementName(), stream, fForce);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "084b33b3a7341a4070b38e479aafd333", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "a708a833352a17a462cbe9e9346d660fa6317a1e", "commitAfterChange": "0e8e783b8823e467b82792c7ef9289caad32e202", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " \tpublic boolean visit(StringLiteralConcatenation stringLiteral, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(StringLiteralConcatenation stringLiteral, BlockScope scope)", "diff": ["-\t\t\t\tAlignment.BINARY_EXPRESSION,", "+\t\t\t\tAlignment.STRING_CONCATENATION,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "084f75fa2aea652ebe468f1921b85d01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "4e993a8d5cbdc7815c7050ad8787e1c566312d6a", "commitAfterChange": "7d431a6663c03691d383a66bc16841bb87e3308d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ReferenceExpression(NameReference name, TypeReference[] typeArguments, int sourceEnd)", "signatureAfterChange": " \t \tpublic ReferenceExpression(NameReference name, TypeReference[] typeArguments, int sourceEnd)", "diff": ["-\t\tthis.typeParameters = typeArguments;", "+\t\tthis.typeArguments = typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0856824e152e9925b58a0a5ea7d24b72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "e5f01975d99954b1483781c8c9c08a016b294102", "commitAfterChange": "6c19a02159d7dcaca8c603f73a96718172825002", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "signatureAfterChange": " public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "diff": ["-\tchar[] typeSignature = environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_5 ? binaryType.getGenericSignature() : null;", "+\tchar[] typeSignature = environment.globalOptions.originalSourceLevel >= ClassFileConstants.JDK1_5 ? binaryType.getGenericSignature() : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0862cafdc5214f71d7e393e6c7407d45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeArgument(int rank)", "signatureAfterChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeArgument(int rank)", "diff": ["-\tpublic ITypeAnnotationWalker toTypeArgument(int rank) {", "+\tpublic TypeAnnotationWalker toTypeArgument(int rank) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "086ec7ca1a6994a1280e760ef9c2325f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic DefaultCodeFormatter(Map options)", "signatureAfterChange": "  \tpublic DefaultCodeFormatter(Map options)", "diff": ["-\t\tthis(FormattingPreferences.getDefault(), options == null ? JavaCore.getOptions() : options);", "+\t\tthis(DefaultCodeFormatterOptions.getDefault(), options == null ? JavaCore.getOptions() : options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "087968209389f25948015aaeaa6bea7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic void testMissingCommentsJavadocSupportDisabled()", "signatureAfterChange": " \tpublic void testMissingCommentsJavadocSupportDisabled()", "diff": ["-\t\trunConformReferenceTest(MissingComments);", "+\t\trunConformReferenceTest(MISSING_COMMENTS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08973bb99ac1a785084cd80cb1f04a82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static TypeBinding resolveType(TypeBinding type, LookupEnvironment environment, ParameterizedTypeBinding parameterizedType, int rank)", "signatureAfterChange": " public static TypeBinding resolveType(TypeBinding type, LookupEnvironment environment, ParameterizedTypeBinding parameterizedType, int rank)", "diff": ["-\tswitch (type.bindingType()) {", "+\tswitch (type.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08bf97e4714fe3b7a225569d660f53fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": "\r final public void if_icmpne(Label lbl)", "signatureAfterChange": "\r final public void if_icmpne(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_if_icmpne, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_if_icmpne, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08d13cca469fa4cb25e35f8b57be6dad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r protected abstract boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException;", "signatureAfterChange": "\r protected abstract boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException;", "diff": ["-protected abstract boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException;\r", "+protected abstract boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08d580a22d336ad8cbef9c1ada156a91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexSummary.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic void addFirstWordInBlock(char[] word, int blockNum)", "signatureAfterChange": "\r \tpublic void addFirstWordInBlock(char[] word, int blockNum)", "diff": ["-\t\tfirstWordsInBlocks.addElement(entry);\r", "+\t\tfirstWordsInBlocks.add(entry);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08e591c955eb65765fdb374337cf1464", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \t\tpublic boolean match(SynchronizedStatement node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(QualifiedType node, Object other)", "diff": ["+\t\tpublic boolean match(QualifiedType node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08f19550c430d1ee600f92b24f58b313", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "8245bd73c0aef7bf5f6de5def8941104b56db6f7", "commitAfterChange": "79409f1d9ef0d6d5db654afe6f7513cc394afcd6", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " protected void updateTimeStamp(CompilationUnit original) throws JavaModelException", "signatureAfterChange": " protected void updateTimeStamp(CompilationUnit original) throws JavaModelException", "diff": ["-\t((CompilationUnitElementInfo) getElementInfo()).fTimestamp = timeStamp;", "+\t((CompilationUnitElementInfo) getElementInfo()).timestamp = timeStamp;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08f6e23b6eb2c1c6ca91e32918934df2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ProblemReferenceBinding.java", "commitBeforeChange": "b8c2347031edf431b74ee176b67b65bece3e7d69", "commitAfterChange": "bafbb633d88463daeda3b6346c0ba869c26d4bef", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public ProblemReferenceBinding(char[][] compoundName, Binding original, int problemId)", "signatureAfterChange": "  public ProblemReferenceBinding(char[][] compoundName, ReferenceBinding original, int problemId)", "diff": ["-public ProblemReferenceBinding(char[][] compoundName, Binding original, int problemId) {", "+public ProblemReferenceBinding(char[][] compoundName, ReferenceBinding original, int problemId) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08f7ba7a1fde8390c3c63c9afd2d61e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9dbcebbcaf11825267cb12e7ee6eb7bd73431114", "commitAfterChange": "f7b0e495847f4cba5d393348688e14a6dd333c0e", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 70, "signatureBeforeChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": "  \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\tfor (int level = 0; level <= 2; level++) {", "+\t\tfor (int level = 0; level <= VARARGS_COMPATIBLE; level++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08f9a0d88a9d8c2f6d8aa61f8e318794", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexInput.java", "commitBeforeChange": "e8fbf4db76f3cb4cdf82ad5223795b2651c6d983", "commitAfterChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic abstract IQueryResult[] queryInDocumentNames(String word) throws IOException;", "signatureAfterChange": " \tpublic abstract String[] queryInDocumentNames(String word) throws IOException;", "diff": ["-\tpublic abstract IQueryResult[] queryInDocumentNames(String word) throws IOException;", "+\tpublic abstract String[] queryInDocumentNames(String word) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08fe0b2bc33973264d803fd6ea5e4412", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public AnnotationMirrorImpl(IResolvedAnnotation annotationAstNode, DeclarationImpl decl, BaseProcessorEnv env)", "signatureAfterChange": "          public AnnotationMirrorImpl(IResolvedAnnotation annotationAstNode, EclipseDeclarationImpl decl, BaseProcessorEnv env)", "diff": ["-    public AnnotationMirrorImpl(IResolvedAnnotation annotationAstNode, DeclarationImpl decl, BaseProcessorEnv env)", "+    public AnnotationMirrorImpl(IResolvedAnnotation annotationAstNode, EclipseDeclarationImpl decl, BaseProcessorEnv env)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "093ca633837271045c07c24763f94516", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "9fb326cf9292ef697cc0b0a821a4d5b0ffa7d58e", "commitAfterChange": "0a632290335585dcfcbc973314f95aa73bf77586", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \r \tprivate void findConstructors(\r \t\tReferenceBinding currentType,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tboolean forAnonymousType)", "signatureAfterChange": "\r \r \tprivate void findConstructors(\r \t\tReferenceBinding currentType,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tboolean forAnonymousType)", "diff": ["-\t\tMethodBinding[] methods = currentType.methods();\r", "+\t\tMethodBinding[] methods = currentType.availableMethods();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "094647199cad7f7759436ee3a2e69a54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "e19275b58ad64aff1e057c59c0e35ec0b545a662", "commitAfterChange": "68ccb4031ed08b4fe5c4be466185d9f98028d52b", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " \tpublic final static char[][] splitTypeLevelsSignature(String typeSignature)", "signatureAfterChange": " \tpublic final static char[][] splitTypeLevelsSignature(String typeSignature)", "diff": ["-\t\tchar[] source = Signature.removeCaptureFromMethod(typeSignature.toCharArray());", "+\t\tchar[] source = Signature.removeCapture(typeSignature.toCharArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "094f953eba7cd2c4e185de96d7e369d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \t\tpublic boolean match(QualifiedName node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(Modifier node, Object other)", "diff": ["+\t\tpublic boolean match(Modifier node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09591c1a218939e280a67b31bda39e3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTStructuralPropertyTest.java", "commitBeforeChange": "26f568ac8c33647ac64f84b5eee920325d870fe8", "commitAfterChange": "89fead2e35034778cb1cda34e7f362e4b63427a2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testCreateInstance()", "signatureAfterChange": " \tpublic void testCreateInstance()", "diff": ["-\t\t\t} catch (RuntimeException e) {", "+\t\t\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "095d8847971cf973f3f96baba612e8a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tprivate void findLocalMethodsFromStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tboolean exactMatch, \t\tObjectVector methodsFound, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findLocalMethodsFromStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tboolean exactMatch, \t\tObjectVector methodsFound, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.METHOD_REF, this.actualCompletionPosition);", "+\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.METHOD_REF, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "096b7e0c57a795f59dbb16eed7eb20c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8", "commitAfterChange": "7df061f9da0ab96be87e5851cb157a28c5f5bca0", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": "  \tprotected void retrieveDimensionAndSetPositions(int start, int end, DimensionInfo dim)", "signatureAfterChange": "  \tprotected void retrieveDimensionAndSetPositions(int start, int end, ExtraDimension dim)", "diff": ["-\tprotected void retrieveDimensionAndSetPositions(int start, int end, DimensionInfo dim) {", "+\tprotected void retrieveDimensionAndSetPositions(int start, int end, ExtraDimension dim) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "096d16d16e04d0384bd0b862ade4a360", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "5f25db2c9c02bf799108bff292447ab679c3c3b7", "commitAfterChange": "dcf93fb34d4ce9325841c9302bc217b02f49501a", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " \t \tprotected void recordNodes(org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc, TagElement tagElement)", "signatureAfterChange": " \t \tprotected void recordNodes(org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc, TagElement tagElement)", "diff": ["-\t\t\t\t\t\tif (typeRef != null) recordNodes(name, typeRef);", "+\t\t\t\t\t\tif (typeRef != null) recordNodes(name, compilerNode);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09709586a1c98abdc059c4b97698eaf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c279ceb7f154895be4bb06d24ee4746634e6d6d2", "commitAfterChange": "368fb2cf5a3481395e833745ea26555a6f0cf5d5", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation)", "signatureAfterChange": "  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.QualifiedAllocationExpression allocation)", "diff": ["-\t\t\t\t\t\tclassInstanceCreation.typeArguments().add(convert(allocation.typeArguments[i]));", "+\t\t\t\t\t\tclassInstanceCreation.typeArguments().add(convertType(allocation.typeArguments[i]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "097f6c696e3636b7b6965936a95cd80e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "30692448718de71df165cc52c018bee7df31a8fb", "commitAfterChange": "7fbd6c6645520ea8c438436fb3626bdc9d3414b8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void enterInterface(TypeInfo typeInfo)", "signatureAfterChange": " \tpublic void enterInterface(TypeInfo typeInfo)", "diff": ["-\t\tenterClass(typeInfo);", "+\t\tenterType(typeInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0980989eedf20bc20d2ac392e60fcdae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tboolean incorporate(InferenceContext18 context, TypeBound [] first, TypeBound [] next) throws InferenceFailureException", "signatureAfterChange": " \tboolean incorporate(InferenceContext18 context, TypeBound [] first, TypeBound [] next) throws InferenceFailureException", "diff": ["-\t\t\t\t\t\t\t\t\t\tbi = context.environment.createIntersectionCastType(allBounds);", "+\t\t\t\t\t\t\t\t\t\tbi = context.environment.createIntersectionType18(allBounds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "098a2383314a3081c239e6e579f3371c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic void testMissingTagsErrorPublicOverriding()", "signatureAfterChange": " \tpublic void testMissingTagsErrorPublicOverriding()", "diff": ["-\t\trunNegativeTest(MissingTags, resultForMissingTags(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(MISSING_TAGS, resultForMissingTags(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "098eab2aa17d9340033c5bf5ff00d289", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRootInfo.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void setRootKind(int newRootKind)", "signatureAfterChange": " protected void setRootKind(int newRootKind)", "diff": ["-\tthis.fRootKind = newRootKind;", "+\tthis.rootKind = newRootKind;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0995149786163d0534af806e4501e2d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyNotInClasspathTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void tearDown() throws Exception", "signatureAfterChange": "  public void tearDown() throws Exception", "diff": ["-\t\t\tthis.workingCopy.destroy();", "+\t\t\tthis.workingCopy.discardWorkingCopy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0996cf661d8843e712dca84c2503b360", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": " public void testRenameWithSyntaxError() throws JavaModelException", "signatureAfterChange": " public void testRenameWithSyntaxError() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09a905cc1d15cbf704a76e459bf06ffc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "526f595144dc3e8be2bacbfcf836a6dd30a39f84", "commitAfterChange": "f4fac2a7e69cf336c94105a7eeaf8b6bd2b7e9f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\tupperScope.problemReporter().uncommentedEmptyBlock(this);", "+\t\t\tupperScope.problemReporter().undocumentedEmptyBlock(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09aedbe56170bee1513afec4f658d917", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic boolean visit(MemberTypeDeclaration memberTypeDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration memberTypeDeclaration, ClassScope scope)", "diff": ["-\tpublic boolean visit(MemberTypeDeclaration memberTypeDeclaration, ClassScope scope) {", "+\tpublic boolean visit(TypeDeclaration memberTypeDeclaration, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09c7e902f235683e38a703727afe8091", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public FieldBinding getUpdatedFieldBinding(FieldBinding targetField, ReferenceBinding newDeclaringClass)", "signatureAfterChange": " public FieldBinding getUpdatedFieldBinding(FieldBinding targetField, ReferenceBinding newDeclaringClass)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09c9488a1adde4dab877bdabe15a6eee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 126, "signatureBeforeChange": "  \tprotected void recordNodes(ASTNode node, org.eclipse.jdt.internal.compiler.ast.ASTNode oldASTNode)", "signatureAfterChange": "  \tprotected void recordNodes(ASTNode node, org.eclipse.jdt.internal.compiler.ast.ASTNode oldASTNode)", "diff": ["-\t\t// Do not record the fake literal node created in lieu of LambdaExpressions at JLS levels < 8, as it would lead to CCE down the road.", "-\t\tif (oldASTNode instanceof org.eclipse.jdt.internal.compiler.ast.LambdaExpression && node instanceof NullLiteral) {", "+\t\t// Do not record the fake literal node created in lieu of functional expressions at JLS levels < 8, as it would lead to CCE down the road.", "+\t\tif (oldASTNode instanceof org.eclipse.jdt.internal.compiler.ast.FunctionalExpression && node instanceof NullLiteral) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09cf43f52f34c6e6f9275d75ac775efc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/WorkQueue.java", "commitBeforeChange": "81ab8e88e50b279513be5ebcb0e5eee6ed3a5c3c", "commitAfterChange": "52122b3855e6f0a9596ec4f8fb56fcf44094c219", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public boolean isCompiled(SourceFile element)", "signatureAfterChange": "  public boolean isCompiled(SourceFile element)", "diff": ["-\treturn compiledList.contains(element);", "+\treturn compiledList.includes(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09cfde3e84939c59300b02ad3ef85069", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "e5bce80011e3833bbea45afb8cd4fb116b193fc5", "commitAfterChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic ITypeBinding[] getInterfaces()", "signatureAfterChange": " \tpublic ITypeBinding[] getInterfaces()", "diff": ["-\t\t} catch (AbortCompilation e) {", "-\t\t\t// in case the one of the super interfaces cannot be resolvable due to missing jars on the classpath", "-\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t} catch (RuntimeException e) {", "+\t\t\t/* in case a method cannot be resolvable due to missing jars on the classpath", "+\t\t\t * see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=63550", "+\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=64299", "+\t\t\t */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d17186c339325590536333fc065544", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a9ee2df3848b37b13b74a0d6fb58548ce231875e", "commitAfterChange": "2a16e8a2e7b943b242b9959c374c8d7819b6b3a0", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \t \tpublic void printEndOfCompilationUnit()", "signatureAfterChange": " \t \tpublic void printEndOfCompilationUnit()", "diff": ["-\t\t\t\t\t\tif (count >= 1 || this.formatter.preferences.insert_new_line_at_end_of_file) {", "+\t\t\t\t\t\tif (count >= 1 || this.formatter.preferences.insert_new_line_at_end_of_file_if_missing) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09d423f518c80ba2d0565ef6d183784b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testAddInclusionOnPackage() throws CoreException", "signatureAfterChange": " public void testAddInclusionOnPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09f0a0a8063c631e319123536f0d9603", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tpublic void setLineSeparatorAndIdentationLevel(FormattingPreferences preferences)", "signatureAfterChange": "  \tpublic void setLineSeparatorAndIdentationLevel(DefaultCodeFormatterOptions preferences)", "diff": ["-\tpublic void setLineSeparatorAndIdentationLevel(FormattingPreferences preferences) {", "+\tpublic void setLineSeparatorAndIdentationLevel(DefaultCodeFormatterOptions preferences) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ffb60abf9d5f640f801afe16dd7df5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "1f2424fb3a6d05e8f0149696c187d2a9ee6ac6b9", "commitAfterChange": "c4913c71bdaa2b5107ad0977c0ef4a41a4a9b308", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprotected boolean verifyEndLine(int textPosition)", "signatureAfterChange": " \tprotected boolean verifyEndLine(int textPosition)", "diff": ["-\t\t\t\t\tpushText(textPosition, this.starPosition);", "+\t\t\t\t\tpushText(textPosition, this.index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a0031631aac1a38c90bf2a0b63fa89d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "f9e1e520523019e969eacf451222621b96e96623", "commitAfterChange": "6ab8a052a7d8ac7a830c6733e19e9b30c380dad7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void acceptLocalVariable(LocalVariableBinding binding, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unit)", "signatureAfterChange": " public void acceptLocalVariable(LocalVariableBinding binding, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unit)", "diff": ["-\t\t\t\tlocal.type == null ? Signature.createTypeSignature(binding.type.readableName(), true) : Util.typeSignature(local.type),", "+\t\t\t\tlocal.type == null ? Signature.createTypeSignature(binding.type.signableName(), true) : Util.typeSignature(local.type),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a1192050716ce30e948aba3af7e1d5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "5cc4b8c969b380e215352115b7cc4d2697d8011e", "commitAfterChange": "fef767ead34860def5c5969bff47bc76e721609d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void codeComplete(String codeSnippet, int position, ICodeCompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r public void codeComplete(String codeSnippet, int position, ICompletionRequestor requestor) throws JavaModelException", "diff": ["-public void codeComplete(String codeSnippet, int position, ICodeCompletionRequestor requestor) throws JavaModelException {\r", "+public void codeComplete(String codeSnippet, int position, ICompletionRequestor requestor) throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a18c1435cc4ffd362fde14f4c57ab3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "      public WildcardType getWildcardType(Collection<ReferenceType> upperBounds, Collection<ReferenceType> lowerBounds)", "signatureAfterChange": "      public WildcardType getWildcardType(Collection<ReferenceType> upperBounds, Collection<ReferenceType> lowerBounds)", "diff": ["-\t\tfinal ITypeBinding wildcard = _env.getTypeBinding(wildcardkey);", "+\t\tfinal ITypeBinding wildcard = _env.getTypeBindingFromKey(wildcardkey);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a261d979e689f4dea6cd1a33b5b7b6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "2c7f17232300c7fbbf0be41f27d83e269dc11422", "commitAfterChange": "4ee7521407adee0dd67769699b7546434316be93", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate void selectStaticFieldFromStaticImport(CompilationUnitDeclaration parsedUnit, char[] lastToken, ReferenceBinding ref)", "signatureAfterChange": " \t \tprivate void selectStaticFieldFromStaticImport(CompilationUnitDeclaration parsedUnit, char[] lastToken, ReferenceBinding ref)", "diff": ["-\t\tFieldBinding[] fields = ref.fields();", "+\t\tFieldBinding[] fields = ref.availableFields();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a3ab0c1216067196b6f04880878e24e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "5a3a5f398a8971568181868be2d5d76728016763", "commitAfterChange": "44cc03459f9020b4da0ebdb14fa0624b7d8dfc4d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t public HierarchyResolver(INameEnvironment nameEnvironment, Map settings, IHierarchyRequestor requestor, IProblemFactory problemFactory)", "signatureAfterChange": " \t public HierarchyResolver(INameEnvironment nameEnvironment, Map settings, HierarchyBuilder requestor, IProblemFactory problemFactory)", "diff": ["-public HierarchyResolver(INameEnvironment nameEnvironment, Map settings, IHierarchyRequestor requestor, IProblemFactory problemFactory) {", "+public HierarchyResolver(INameEnvironment nameEnvironment, Map settings, HierarchyBuilder requestor, IProblemFactory problemFactory) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a61005f41571b4a9785c33a0cc2c170", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/EvaluationContext.java", "commitBeforeChange": "fbf1dc74111046346637967ca91e93e8fc0c5f38", "commitAfterChange": "30b5f4681e6bde6cf7c8af9cdfc4f18b157d7133", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void select(  \tchar[] codeSnippet, \tint selectionSourceStart, \tint selectionSourceEnd, \tISearchableNameEnvironment environment,  \tISelectionRequestor requestor, \tMap options)", "signatureAfterChange": " public void select(  \tchar[] codeSnippet, \tint selectionSourceStart, \tint selectionSourceEnd, \tSearchableEnvironment environment,  \tISelectionRequestor requestor, \tMap options)", "diff": ["-\tISearchableNameEnvironment environment, ", "+\tSearchableEnvironment environment, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a6d8160d5603b68520ea8733feac8b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CodeSnippetParser(ProblemReporter problemReporter, EvaluationContext evaluationContext, boolean optimizeStringLiterals, int codeSnippetStart, int codeSnippetEnd)", "signatureAfterChange": " public CodeSnippetParser(ProblemReporter problemReporter, EvaluationContext evaluationContext, boolean optimizeStringLiterals, int codeSnippetStart, int codeSnippetEnd)", "diff": ["-\tthis.javadocParser.checkJavadoc = false;", "+\tthis.javadocParser.checkDocComment = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a6e7a2d0bf5ffdfbba664d6e7b5cfd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tpublic void acceptType(char[] packageName, char[] typeName)", "signatureAfterChange": "\r \tpublic void acceptType(char[] packageName, char[] typeName)", "diff": ["-\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a755c2e762b0f0f4562b5b5a9d770cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 499, "methodNumberAfterChange": 499, "signatureBeforeChange": " \tpublic void test480()", "signatureAfterChange": " \tpublic void test480()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a819afa923caa5af74628b74b6542e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "commitAfterChange": "75ff04c8b5711fae5cad065b3b4b862839b59cd9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \t\r \tprivate int computeRelevanceForCaseMatching(char[] token, char[] proposalName)", "signatureAfterChange": "\r \t\r \tprivate int computeRelevanceForCaseMatching(char[] token, char[] proposalName)", "diff": ["-\t\t\treturn 0;\r", "+\t\t\treturn R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a92bc6d4f28d096b5548ec9d5d60c78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractComparableTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test buildComparableTestSuite(Class evaluationTestClass)", "signatureAfterChange": "  \tpublic static Test buildComparableTestSuite(Class evaluationTestClass)", "diff": ["-\t\tTest suite = buildComplianceRegressionTestSetupSuite(evaluationTestClass, F_1_5);", "+\t\tTest suite = buildMinimalComplianceTestSuite(evaluationTestClass, F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ab4a08c348fe3260ae1ebb705ce2552", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2480ec2a725b4a2dc78d69d653464b56715fbac8", "commitAfterChange": "046b7e91db887d0087d68280c71a1c85744c622c", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " \tpublic void setOutputLocation(IPath path, IProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void setOutputLocation(IPath path, IProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\tthis.setRawClasspath(SetClasspathOperation.ReuseClasspath, path, monitor);", "+\t\tthis.setRawClasspath(SetClasspathOperation.REUSE_ENTRIES, path, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ab72b26b344d6f16d1cfd6a5cfdfdaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "c986b0f978be08ca5c6279c4e65ad1a7f4c62b60", "commitAfterChange": "be7acf5c57ef3c4a15433f3f4f0191da4eed3774", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "diff": ["-\t\t\tpostIncrement.assignmentImplicitConversion);", "+\t\t\tpostIncrement.preAssignImplicitConversion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ac8bcc83e3c351ebf8627b5e6b41d31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext staticInitializerFlowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext staticInitializerFlowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\t\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0acf2c6156ab2fee2e208dcd7dc87ff9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic void testMethod11() throws JavaModelException", "signatureAfterChange": " \tpublic void testMethod11() throws JavaModelException", "diff": ["-\t\tassertElementEquals(", "+\t\tassertElementExists("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0af724ab4d3e90e74ba0a5fc5f186cba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "c0a30fbd56f0faf040945ca7720c23f3dd404282", "commitAfterChange": "98f970cf7b3c4f50413aab65a3d35b153ba767e1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void tearDownSuite() throws Exception", "signatureAfterChange": " \tpublic void tearDownSuite() throws Exception", "diff": ["-\t\tsuper.tearDown();", "+\t\tsuper.tearDownSuite();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0afb05c2784cb506ed93917d790fdda1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tthis.resolvedType = scope.enclosingSourceType();", "+\t\t\tthis.resolvedType = scope.enclosingReceiverType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b1396fb556437aa135307b346fac0d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "commitAfterChange": "7d45b883ec69848a56f546daa0819092ba819185", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " protected void reportBinaryMemberDeclaration(IResource resource, IMember binaryMember, Binding binaryMemberBinding, IBinaryType info, int accuracy) throws CoreException", "signatureAfterChange": " protected void reportBinaryMemberDeclaration(IResource resource, IMember binaryMember, Binding binaryMemberBinding, IBinaryType info, int accuracy) throws CoreException", "diff": ["-\tISourceRange range = classFile.isOpen() ? binaryMember.getNameRange() : SourceMapper.fgUnknownRange;", "+\tISourceRange range = classFile.isOpen() ? binaryMember.getNameRange() : SourceMapper.UNKNOWN_RANGE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b16bd478e8ad2be8fefb82c02426a25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic WhileStatement(Expression condition, Statement action, int s, int e)", "signatureAfterChange": "  \tpublic WhileStatement(Expression condition, Statement action, int s, int e)", "diff": ["-\t\tif (action instanceof EmptyStatement) action.bits |= IsUsefulEmptyStatementMASK;", "+\t\tif (action instanceof EmptyStatement) action.bits |= IsUsefulEmptyStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b2024b9dde08b77a24664482a1d3b68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "1e3f3c114e087407d3d1bbd6bb989206d5da48eb", "commitAfterChange": "caf38ccdd39f66a7e345ea3e60f224959f3d7418", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic PerProjectInfo getPerProjectInfoCheckExistence(IProject project) throws JavaModelException", "signatureAfterChange": " \tpublic PerProjectInfo getPerProjectInfoCheckExistence(IProject project) throws JavaModelException", "diff": ["-\t\t\tif (!project.exists()) {", "+\t\t\tif (!project.isAccessible()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b2161d39e893f2a41c2ef299d726ac1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void testGetCorrespondingResource() throws CoreException", "signatureAfterChange": " \tpublic void testGetCorrespondingResource() throws CoreException", "diff": ["-\t\t\tassertResourcesEqual(", "+\t\t\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b2b1a2975270a022540feb762684713", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b3b05193cfc709987fddab57699ae66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected void assertBufferEvent(int offset, int length, String text)", "signatureAfterChange": " protected void assertBufferEvent(int offset, int length, String text)", "diff": ["-\t\tassertEquals(\"unexpected text\", text, this.event.getText());", "+\t\tassertSourceEquals(\"unexpected text\", text, this.event.getText());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b569b4e78e06afa0d62fd45abdb202e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\ttypeBinding = pbBinding.original;", "+\t\ttypeBinding = pbBinding.closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b619d9c1e4b1e5274b45587e3afaa6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Region.java", "commitBeforeChange": "da8689e6058c8df72d6de5be59efe4e5eaaa5d49", "commitAfterChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public void add(IJavaElement element)", "signatureAfterChange": "\r public void add(IJavaElement element)", "diff": ["-\t\tfRootElements.addElement(element);\r", "+\t\tfRootElements.add(element);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b69b50d810f912015fbb11e6fc2a906", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "7aac6f03ecf70666410b0e689c91dafd6d67757a", "commitAfterChange": "465d091146b1d6997709777ea444048487da1d8d", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tAnnotationTypeMemberDeclaration annotationTypeDeclaration, \t\t\tClassScope classScope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tAnnotationMethodDeclaration annotationTypeDeclaration, \t\t\tClassScope classScope)", "diff": ["-\t\t\tAnnotationTypeMemberDeclaration annotationTypeDeclaration,", "+\t\t\tAnnotationMethodDeclaration annotationTypeDeclaration,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b723b82b0f4e7ab9602821093e11f19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/NestedTypeBinding.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic SyntheticArgumentBinding addSyntheticArgumentAndField(ReferenceBinding targetEnclosingType)", "signatureAfterChange": " \tpublic SyntheticArgumentBinding addSyntheticArgumentAndField(ReferenceBinding targetEnclosingType)", "diff": ["-\t\t\tsynthLocal.matchingField = addSyntheticField(targetEnclosingType);", "+\t\t\tsynthLocal.matchingField = addSyntheticFieldForInnerclass(targetEnclosingType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b8707160f72c03a8e4551f63513320d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 247, "signatureBeforeChange": " public void testBug109695h() throws CoreException", "signatureAfterChange": " public void testBug109695h() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"UTF6DSS\", SearchPattern.R_CAMEL_CASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"UTF6DSS\", SearchPattern.R_CAMELCASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b9884570627be484b416e0ebea96fdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5ab1b44e840f5c63c769a4409a1d1ee2ee2b555d", "commitAfterChange": "180e4e45746dd1c7939f8d071838acd40ff207da", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public JavaSearchMatch newFieldReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "signatureAfterChange": "  public SearchMatch newFieldReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "diff": ["-public JavaSearchMatch newFieldReferenceMatch(", "+public SearchMatch newFieldReferenceMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bbb2ac9409b6e18e2d3e850378265de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void testCleanUp()", "signatureAfterChange": " \tpublic void testCleanUp()", "diff": ["-\t\tCompiler = null;", "+\t\tcompiler = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bbd096bf5f2a936943726898f9e5261", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "97568f9c37f129641284bb42b0df485d8547693d", "commitAfterChange": "359b062d76b50af2a7ba63a16c2b2133308ca095", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic ITypeBinding[] getDeclaredTypes()", "signatureAfterChange": " \tpublic ITypeBinding[] getDeclaredTypes()", "diff": ["-\t\t\treturn NO_DECLARED_TYPES;", "+\t\t\treturn NO_TYPE_BINDINGS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0be43df3f9215f0eafc7de14a6877013", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildModelTestSuite(CompletionTests.class, 1/*sort ascending order*/);", "+\treturn buildModelTestSuite(CompletionTests.class, ALPHABETICAL_SORT);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0becf666405356baf23c8921ae3a47ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6fdaa2b9d78c89a1ed2269f5279c3e02cee4b6cd", "commitAfterChange": "8ec1d344fc5f9b16a04a2a15e36cb4db52cac4eb", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic boolean hasTemporaryCache()", "signatureAfterChange": " \tpublic boolean hasTemporaryCache()", "diff": ["-\t\treturn this.temporaryCache.getCurrent() != null;", "+\t\treturn this.temporaryCache.get() != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bef225efa14ba833f9bdd198976d556", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "9441d034118827fbb3e16e6cfe2024cfd076f19f", "commitAfterChange": "c840a34d9a6ef7170c744446571f30f0390d5b3c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic String disassemble(byte[] classFileBytes, String lineSeparator) throws ClassFormatException", "signatureAfterChange": " \tpublic String disassemble(byte[] classFileBytes, String lineSeparator) throws ClassFormatException", "diff": ["-\t\treturn disassemble(new ClassFileReader(classFileBytes, IClassFileReader.ALL), lineSeparator, IClassFileDisassembler.DEFAULT);", "+\t\treturn disassemble(new ClassFileReader(classFileBytes, IClassFileReader.ALL), lineSeparator, ClassFileBytesDisassembler.DEFAULT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bfb25e0c94d6ece1f180e0a79693436", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BodyDeclaration.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic Javadoc getJavadoc()", "signatureAfterChange": " \tpublic Javadoc getJavadoc()", "diff": ["-\t\treturn optionalJavadoc;", "+\t\treturn optionalDocComment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bfb98a83fc7dbbee0a01c8a261a7285", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " protected void consumeStatementBreakWithLabel()", "signatureAfterChange": " protected void consumeStatementBreakWithLabel()", "diff": ["-\t\tnew Break(", "+\t\tnew BreakStatement("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c0e377131fc0b7e39a3b3f250202f57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t\tpublic void logClasspath(FileSystem.Classpath[] classpaths)", "signatureAfterChange": " \t\tpublic void logClasspath(FileSystem.Classpath[] classpaths)", "diff": ["-\t\t\t\t\t\t\tif (Util.isArchiveFileName(classpath)) {", "+\t\t\t\t\t\t\tif (Util.isPotentialZipArchive(classpath)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c16bd6670d2142f0b28676a47c9a33f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void addBinary(IFile resource, IPath containerPath)", "signatureAfterChange": " public void addBinary(IFile resource, IPath containerPath)", "diff": ["-\tString indexLocation = computeIndexLocation(containerPath);", "+\tIPath indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c172e340173b7eedadec0ca3234dcc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tpublic void acceptPackage(char[] packageName)", "signatureAfterChange": "\r \tpublic void acceptPackage(char[] packageName)", "diff": ["-\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c32d6c7a9b51362becdb4c4a28af17b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["+\t", "-\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this, false /*do not resolve hidden field*/);", "+\t\tBinding existingVariable = scope.getBinding(name, Binding.VARIABLE, this, false /*do not resolve hidden field*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c3aab6ae5c555621ae16ecc2353b80e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static Test buildModelTestSuite(Class evaluationTestClass)", "signatureAfterChange": " \tpublic static Test buildModelTestSuite(Class evaluationTestClass)", "diff": ["-\t\treturn buildModelTestSuite(evaluationTestClass, 0/* do not sort*/);", "+\t\treturn buildModelTestSuite(evaluationTestClass, ORDERING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c4ba0d6b975fba7b671f0ce727ece0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "signatureAfterChange": " \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "diff": ["-\t\t\t} else if ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\t\t\t} else if ((typeDeclaration.bits & ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c61468cde6b778fabaf3b334dac41c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "eda0d2ebba486b7670a29ef73a4bc1f60b2dd48f", "commitAfterChange": "334d154ee7a7468d74205b6124c3abdc73bd30b6", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \tpublic boolean isInsideDeprecatedCode()", "signatureAfterChange": "  \tpublic boolean isInsideDeprecatedCode()", "diff": ["-\t\t\t\tReferenceBinding context = ((BlockScope)this).referenceType().binding;", "+\t\t\t\tReferenceBinding context = ((ClassScope)this).referenceType().binding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c6f9810e181e6a0e9bb3fa22b43ec2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "3f87341ee231e4ed59ae13f0d98074299f4d2bc9", "commitAfterChange": "ea8a4947210bf5a19a05750d90e0cbeb246dbbdd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-\t\trefType.getAnnotationTagBits();", "+\t\trefType.initializeDeprecatedAnnotationTagBits();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c764c77f58beb0de5e734370362f622", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/CompilationUnitSorter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static TextEdit sort(CompilationUnit unit, \t\t\tComparator comparator, \t\t\tint options, \t\t\tTextEditGroup group, \t\t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static TextEdit sort(CompilationUnit unit, \t\t\tComparator comparator, \t\t\tint options, \t\t\tTextEditGroup group, \t\t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tSortElementsOperation operation = new SortElementsOperation(AST.JLS3, new IJavaElement[] { unit.getJavaElement() }, null, comparator);", "+\t\tSortElementsOperation operation = new SortElementsOperation(AST.JLS4, new IJavaElement[] { unit.getJavaElement() }, null, comparator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c7f9d5d001c938258976f6cd315f5ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \tpublic ISourceRange mapSource(\r \t\tIType type,\r \t\tchar[] contents,\r \t\tIJavaElement searchedElement)", "signatureAfterChange": "\r public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement)", "diff": ["+ */\r", "+public ISourceRange mapSource(IType type, char[] contents, IJavaElement searchedElement) {\r", "+\tfType= (BinaryType)type;\r", "+\tthis.searchedElement = searchedElement;\r", "+\tthis.types = new IType[1];\r", "+\tthis.typeDeclarationStarts = new int[1];\r", "+\tthis.typeNameRanges = new SourceRange[1];\r", "+\tthis.typeDepth = -1;\r", "+\r", "+\tHashtable oldSourceRanges = (Hashtable)fSourceRanges.clone();\r", "+\ttry {\r", "+\t\tIProblemFactory factory= new DefaultProblemFactory();\r", "+\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "+\t\tparser.parseCompilationUnit(new BasicCompilationUnit(contents, type.getElementName() + \".java\"/*nonNLS*/), false);\r", "+\t\tif (searchedElement != null) {\r", "+\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "+\t\t\treturn range;\r", "+\t\t\treturn null;\r", "+\t} finally {\r", "+\t\tif (searchedElement != null) {\r", "+\t\t\tfSourceRanges = oldSourceRanges;\r", "-\t */\r", "-\tpublic ISourceRange mapSource(\r", "-\t\tIType type,\r", "-\t\tchar[] contents,\r", "-\t\tIJavaElement searchedElement) {\r", "-\t\tfType = (BinaryType) type;\r", "-\r", "-\t\tthis.searchedElement = searchedElement;\r", "-\t\tthis.types = new IType[1];\r", "-\t\tthis.typeDeclarationStarts = new int[1];\r", "-\t\tthis.typeNameRanges = new SourceRange[1];\r", "+\t\tfType= null;\r", "+\t\tthis.searchedElement = null;\r", "+\t\tthis.types = null;\r", "+\t\tthis.typeDeclarationStarts = null;\r", "+\t\tthis.typeNameRanges = null;\r", "-\r", "-\t\tHashtable oldSourceRanges = (Hashtable) fSourceRanges.clone();\r", "-\t\ttry {\r", "-\t\t\tIProblemFactory factory = new ProblemFactory();\r", "-\t\t\tSourceElementParser parser = new SourceElementParser(this, factory);\r", "-\t\t\tparser.parseCompilationUnit(\r", "-\t\t\t\tnew BasicCompilationUnit(contents, type.getElementName() + \".java\"),\r", "-\t\t\t\tfalse);\r", "-\t\t\tif (searchedElement != null) {\r", "-\t\t\t\tISourceRange range = this.getNameRange(searchedElement);\r", "-\t\t\t\treturn range;\r", "-\t\t\t} else {\r", "-\t\t\t\treturn null;\r", "-\t\t\t}\r", "-\t\t} finally {\r", "-\t\t\tif (searchedElement != null) {\r", "-\t\t\t\tfSourceRanges = oldSourceRanges;\r", "-\t\t\t}\r", "-\t\t\tfType = null;\r", "-\t\t\tthis.searchedElement = null;\r", "-\t\t\tthis.types = null;\r", "-\t\t\tthis.typeDeclarationStarts = null;\r", "-\t\t\tthis.typeNameRanges = null;\r", "-\t\t\tthis.typeDepth = -1;\r", "-\t\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ca06a823347bcb45270cea83e00bf10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "53aa3826abf5a6d0c6d46ffdf5ca06318e0e608e", "commitAfterChange": "3a45bbbeb56dfb4a2b74aec609db313f8b4d8387", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 176, "signatureBeforeChange": "\t \t \tpublic void test155()", "signatureAfterChange": "\t \t \tpublic void test155()", "diff": ["-\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSetttings());", "+\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSettings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0caff376d0717faa98145d1537485ab2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testClassFileGetElementAt() throws JavaModelException", "signatureAfterChange": " public void testClassFileGetElementAt() throws JavaModelException", "diff": ["-\tIClassFile cf = this.jarRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb2e4a0a0bab4a0f303ab9901c29aed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "e6029c8b1adfe1296ee554ed42f00e5a663cecbf", "commitAfterChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \t\tpublic boolean match(ParameterizedType node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(PackageQualifiedType node, Object other)", "diff": ["+\t\tpublic boolean match(PackageQualifiedType node, Object other) {", "+\t\t\treturn standardBody(node, other, this.superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb337b52415a4d607fd2f44cc69a0d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "5cc4b8c969b380e215352115b7cc4d2697d8011e", "commitAfterChange": "fef767ead34860def5c5969bff47bc76e721609d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public void codeComplete(int offset, ICodeCompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r public void codeComplete(int offset, ICompletionRequestor requestor) throws JavaModelException", "diff": ["-public void codeComplete(int offset, ICodeCompletionRequestor requestor) throws JavaModelException {\r", "+public void codeComplete(int offset, ICompletionRequestor requestor) throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb80e5e9c2c003639277696b2cd3908", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "  \tprivate void findLabels(char[] label, char[][] choices)", "signatureAfterChange": "  \tprivate void findLabels(char[] label, char[][] choices)", "diff": ["-\t\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.LABEL_REF, this.actualCompletionPosition);", "+\t\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.LABEL_REF, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cbda6ab3f2bb3a7b98d911d7eecb50e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapExecutor.java", "commitBeforeChange": "2073ae07201f3b4750a106d0cadf90473710a63d", "commitAfterChange": "10545bbf89db4e21cbdfaf0260ea872d78aa91e9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate int applyWraps(int index, int indent) throws WrapRestartException", "signatureAfterChange": "  \tprivate int applyWraps(int index, int indent) throws WrapRestartThrowable", "diff": ["-\tprivate int applyWraps(int index, int indent) throws WrapRestartException {", "+\tprivate int applyWraps(int index, int indent) throws WrapRestartThrowable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cc2c7f2260dd70561babb16cf074c90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding local, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "diff": ["-\tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding local, int nullStatus, Expression reference) {", "+\tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cdca022876314f4670cedb3d5a61b8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "87621a357241c8de8ae7bf1f07316036b31e3bf8", "commitAfterChange": "1538facbe020906d8e9620bcca922106c178a710", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " private void createArgumentBindings(MethodBinding method, CompilerOptions compilerOptions)", "signatureAfterChange": " private void createArgumentBindings(MethodBinding method, CompilerOptions compilerOptions)", "diff": ["-\tinitializeNullDefault();", "+\tgetNullDefault(); // ensure initialized"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ce1dad7fa973164cf30e996dcb94b5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "signatureAfterChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceTypes(), packageBinding);\r", "+\t\ttypeRequestor.accept(answer.getSourceType(), packageBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ce2e2ed96e8ad6681d2338a0d9275d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintTypeFormula.java", "commitBeforeChange": "78640ac1ea71100d69059b2d80bebfd974c6462e", "commitAfterChange": "0363c5b13c6d7bf3598bba760643aa0fb259248e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate Object reduceSubType(Scope scope, TypeBinding subCandidate, TypeBinding superCandidate)", "signatureAfterChange": "  \tprivate Object reduceSubType(Scope scope, TypeBinding subCandidate, TypeBinding superCandidate)", "diff": ["-\t\t\t\t\t\tif (!addConstraintsFromTypeParamters(subCandidate, (ParameterizedTypeBinding) superCandidate, constraints))", "+\t\t\t\t\t\tif (!addConstraintsFromTypeParameters(subCandidate, (ParameterizedTypeBinding) superCandidate, constraints))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d5a01b968dc57d948d3dcf36355e505", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "signatureAfterChange": " \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "diff": ["-\t\t\tif (typeDeclaration.kind() == IGenericType.ENUM) {", "+\t\t\tif (typeDeclaration.kind() == IGenericType.ENUM_DECL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d6c15cd3ec68f39020c720d95ddd719", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " protected void consumeStatementContinueWithLabel()", "signatureAfterChange": " protected void consumeStatementContinueWithLabel()", "diff": ["-\t\tnew Continue(", "+\t\tnew ContinueStatement("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d820176a41de35c8e568e1287ebd1ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static AnnotationMirror createAnnotationMirror(final IResolvedAnnotation annotation,                                                           final EclipseDeclarationImpl annotated,                                                           final BaseProcessorEnv env)", "signatureAfterChange": "     public static AnnotationMirror createAnnotationMirror(final IAnnotationBinding annotation,                                                           final EclipseDeclarationImpl annotated,                                                           final BaseProcessorEnv env)", "diff": ["-    public static AnnotationMirror createAnnotationMirror(final IResolvedAnnotation annotation,", "+    public static AnnotationMirror createAnnotationMirror(final IAnnotationBinding annotation,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d868009a8b0ffbee7198b396a395b38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          private void print(SourcePosition pos,     \t\t\t\t   Severity severity,     \t\t\t\t   String msg,     \t\t\t\t   String[] arguments)", "signatureAfterChange": "          private void print(SourcePosition pos,     \t\t\t\t   Severity severity,     \t\t\t\t   String msg,     \t\t\t\t   String[] arguments)", "diff": ["-    \t\tfinal CompilationUnit unit = _env.getAstCompilationUnit(resource);", "+    \t\tfinal CompilationUnit unit = _env.getASTFrom(resource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d8a502997ef9620f5ec2b5163f75060", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 58, "signatureBeforeChange": " public IJavaElement getOriginalElement()", "signatureAfterChange": " public IJavaElement getOriginalElement()", "diff": ["+\t// backward compatibility", "-\treturn getOriginal();", "-}", "+\t", "+\treturn getPrimaryElement();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d90b3adf1473f0a66eb3e18a7af99d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " boolean areTypesEqual(TypeBinding one, TypeBinding two)", "signatureAfterChange": " boolean areTypesEqual(TypeBinding one, TypeBinding two)", "diff": ["-\tswitch (one.bindingType()) {", "+\tswitch (one.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d9587b3241635b5276a162f1b0f6459", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5ab1b44e840f5c63c769a4409a1d1ee2ee2b555d", "commitAfterChange": "180e4e45746dd1c7939f8d071838acd40ff207da", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public JavaSearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd)", "signatureAfterChange": " public SearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd)", "diff": ["-public JavaSearchMatch newDeclarationMatch(", "+public SearchMatch newDeclarationMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d9c74affa6a67a7b749113dd6da2011", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": "  \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d9d244832b47780b86857fe45b33bc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "e6029c8b1adfe1296ee554ed42f00e5a663cecbf", "commitAfterChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": " \tpublic boolean visit(ParenthesizedExpression node)", "signatureAfterChange": " \tpublic boolean visit(PackageQualifiedType node)", "diff": ["+\tpublic boolean visit(PackageQualifiedType node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0db3ee0161586ffe5efc809c2ddff717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "bffd05273174fba670489cd637d40ac2a4d0913b", "commitAfterChange": "5cda6ee5d9726ecd4c3800dc98f96b9913f2498c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r \tprotected void worked(int work)", "signatureAfterChange": "\r \r \tprotected void worked(int work)", "diff": ["-\t\tIProgressMonitor progressMonitor = this.hierarchy.fProgressMonitor;\r", "+\t\tIProgressMonitor progressMonitor = this.hierarchy.progressMonitor;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dc2de6e8e03f8bc70300f8f5e5f2f07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationFragment.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\t\tacceptChildren(visitor, this.extraDimensionInfos);", "+\t\t\t\tacceptChildren(visitor, this.extraDimensions);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ddd321986a6fe278b1e2c0b83f5c257", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "a6b76fc7d7890cbbcb2fc001b8031466dd0ad995", "commitAfterChange": "8c05bff0d88a6a537ed2accc1c62c5430e927aee", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static long warningTokenToIrritant(String warningToken)", "signatureAfterChange": " \tpublic static long warningTokenToIrritant(String warningToken)", "diff": ["-\t\t\t\t\treturn FieldHiding | LocalVariableHiding | MaskedCatchBlock | TypeParameterHiding;", "+\t\t\t\t\treturn FieldHiding | LocalVariableHiding | MaskedCatchBlock | TypeHiding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df3e8a751a1b83d4e53a9553b04a3ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "  \tprivate void annotateType(AnnotatableType type, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations)", "signatureAfterChange": "  \tprivate void annotateType(AnnotatableType type, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations)", "diff": ["-\t\t\tcase AST.JLS4:", "+\t\t\tcase AST.JLS4_INTERNAL:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df46c9a3b0c4d840109f5a9beed9761", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void match(AstNode node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(AstNode node, MatchingNodeSet nodeSet)", "diff": ["-\tif (level >= POTENTIAL_MATCH)", "+\tif (level >= POSSIBLE_MATCH)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0df49f675fe42df75d5c9274fefead24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \tpublic void test074()", "signatureAfterChange": " \tpublic void test074()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e10fc5861fabf4c6c0c979f78835c5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "5b571c10f6bc3362562e3394fe138c118abcca9f", "commitAfterChange": "c0648c986bd8f9b4b5c031105639a6f9119992bf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic InferenceContext18 getInferenceContext(ParameterizedGenericMethodBinding method)", "signatureAfterChange": " \tpublic InferenceContext18 getInferenceContext(ParameterizedMethodBinding method)", "diff": ["-\tpublic InferenceContext18 getInferenceContext(ParameterizedGenericMethodBinding method) {", "+\tpublic InferenceContext18 getInferenceContext(ParameterizedMethodBinding method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e2c787c02f9435b6ed23b2b3d5f3e17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cff20a526b50465a2f348a1a5575e634a801a7d8", "commitAfterChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayTypeReference arrayTypeReference, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayTypeReference arrayTypeReference, \t\tClassScope scope)", "diff": ["-\t\tint dimensions = getExtraDimension();", "+\t\tint dimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e37ca852c386b483724b2e8e51b690e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/InsideSubRoutineFlowContext.java", "commitBeforeChange": "db9dfebaf2bb57059c298fd4e86dfeca8f8f76ab", "commitAfterChange": "779b1857b0d7576ef8ddefa7d01c95bb6a719a8e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void recordReturnFrom(UnconditionalFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void recordReturnFrom(FlowInfo flowInfo)", "diff": ["-\tpublic void recordReturnFrom(UnconditionalFlowInfo flowInfo) {", "+\tpublic void recordReturnFrom(FlowInfo flowInfo) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e414d47d6ec3694fa9a23be4079988b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "6fdaa2b9d78c89a1ed2269f5279c3e02cee4b6cd", "commitAfterChange": "8ec1d344fc5f9b16a04a2a15e36cb4db52cac4eb", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tprotected JavaModelOperation popOperation()", "signatureAfterChange": " \tprotected JavaModelOperation popOperation()", "diff": ["-\t\t\t\toperationStacks.setCurrent(null); // release reference (see http://bugs.eclipse.org/bugs/show_bug.cgi?id=33927)", "+\t\t\t\toperationStacks.set(null); // release reference (see http://bugs.eclipse.org/bugs/show_bug.cgi?id=33927)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5a7323fe99ebf231af09a527d128fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/SwitchFlowContext.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public SwitchFlowContext(FlowContext parent, ASTNode associatedNode, Label breakLabel)", "signatureAfterChange": " \t public SwitchFlowContext(FlowContext parent, ASTNode associatedNode, BranchLabel breakLabel)", "diff": ["-public SwitchFlowContext(FlowContext parent, ASTNode associatedNode, Label breakLabel) {", "+public SwitchFlowContext(FlowContext parent, ASTNode associatedNode, BranchLabel breakLabel) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e6535a82773ee26d146e6cf54cb3601", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "68d07c170644dc3b11509d462e1c1ae9ee4bb2c2", "commitAfterChange": "07500b3aefa58aecd5e846627b7c70382793f29f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  private int initializeBuilder(int kind, boolean forBuild) throws CoreException", "signatureAfterChange": "  private int initializeBuilder(int kind, boolean forBuild) throws CoreException", "diff": ["-\t\t\t\tif (this.participants[i].buildStarting(this.javaProject) == CompilationParticipant.NEEDS_FULL_BUILD)", "+\t\t\t\tif (this.participants[i].aboutToBuild(this.javaProject) == CompilationParticipant.NEEDS_FULL_BUILD)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e771cfa03b4b0a1abef9d6769c48b8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " public void ifge(Label lbl)", "signatureAfterChange": " public void ifge(BranchLabel lbl)", "diff": ["-public void ifge(Label lbl) {", "+public void ifge(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e93ae5d5a11f80b16a3099dd53628f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tprivate void findClassField( \t\t\tchar[] token, \t\t\tTypeBinding receiverType, \t\t\tScope scope, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "signatureAfterChange": "  \tprivate void findClassField( \t\t\tchar[] token, \t\t\tTypeBinding receiverType, \t\t\tScope scope, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.FIELD_REF, this.actualCompletionPosition);", "+\t\t\t\tInternalCompletionProposal proposal = createProposal(CompletionProposal.FIELD_REF, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eaf7dbcedadd44339c2a25accc2ade2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/dom/StandAloneASTParserTest.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void test2()", "signatureAfterChange": "  \tpublic void test2()", "diff": ["-\t\tASTParser parser = ASTParser.newParser(JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(JLS_LATEST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eb79f151d250f828e2ef552f94154a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "d168d92f8c83bd9d84b7f6639f5b38b88fe1d1b6", "commitAfterChange": "02ccd94f273725b0397f84578d3996b081b8d7d7", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ebb63cbc316422f88c9249adf47cb6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " public void testSaveWorkingCopy() throws CoreException", "signatureAfterChange": " public void testSaveWorkingCopy() throws CoreException", "diff": ["-\t\tassertDeltas(", "+\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ebe9ec7662d98de23d4469fab145a31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24cf489e4c973e29dff7eade9d41897f72a37db0", "commitAfterChange": "f924ed86fe1dbe148077a9cade20b11e404ba89b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void acceptType( \t\tchar[] packageName, \t\tchar[] simpleTypeName, \t\tchar[][] enclosingTypeNames, \t\tint modifiers, \t\tAccessRestriction accessRestriction)", "signatureAfterChange": " \tpublic void acceptType( \t\tchar[] packageName, \t\tchar[] simpleTypeName, \t\tchar[][] enclosingTypeNames, \t\tint modifiers, \t\tAccessRestriction accessRestriction)", "diff": ["-\t\tif ((this.foundTypesCount % CHECK_CANCEL_FREQUENCY_IN_FIND_TYPES) == 0) checkCancel();", "+\t\tif ((this.foundTypesCount % CHECK_CANCEL_FREQUENCY) == 0) checkCancel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec7ba9219372e01ec937957e75d830b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void close()", "signatureAfterChange": "     public void close()", "diff": ["-    \t_files = null;", "+    \t_filesWithAnnotation = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ecb708fc90a856c6ade53aa8d339f59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/AndPattern.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  private static int combinedMatchRule(int matchRule, int matchRule2)", "signatureAfterChange": "  private static int combinedMatchRule(int matchRule, int matchRule2)", "diff": ["-\t\t| (combined & R_CAMELCASE_MATCH);", "+\t\t| (combined & R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ed6993411e598e211ad46e5da3a9cb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Invocation.java", "commitBeforeChange": "5b571c10f6bc3362562e3394fe138c118abcca9f", "commitAfterChange": "c0648c986bd8f9b4b5c031105639a6f9119992bf", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tInferenceContext18 getInferenceContext(ParameterizedGenericMethodBinding method);", "signatureAfterChange": " \tInferenceContext18 getInferenceContext(ParameterizedMethodBinding method);", "diff": ["-\tInferenceContext18 getInferenceContext(ParameterizedGenericMethodBinding method);", "+\tInferenceContext18 getInferenceContext(ParameterizedMethodBinding method);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ee019c818c36f4243d6baec851c7547", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "1de8e2f6bc728cee690d70795383b83c1f0d652a", "commitAfterChange": "cccafe00dbf29f156949d8f0d0aec370b02aa048", "methodNumberBeforeChange": 228, "methodNumberAfterChange": 228, "signatureBeforeChange": " protected void updateRecoveryState()", "signatureAfterChange": " protected void updateRecoveryState()", "diff": ["-\tCommitRollbackParser parser = null;", "+\tAssistParser parser = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ee88d6d59fa0d04f2e7eab0fd7b40c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testAccessRestriction12() throws Exception", "signatureAfterChange": " public void testAccessRestriction12() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.DISABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.DISABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef250ebfc484579c48615c0d9281e59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "6f6bc9d0562d23a055ee9e986cf21155795a29ff", "commitAfterChange": "7f289b483e1414e7141e9f94307fbe445e3b1b34", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void printWarning(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printWarning(ASTNode node, String msg)", "diff": ["-\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, Severity.WARNING, msg, line, null);", "+\t\t_env.addMessage(_env.getFile(), start, node.getLength() + start, Severity.WARNING, msg, line, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f040e677d92ef7b6d52e9b4e15976be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 386, "methodNumberAfterChange": 386, "signatureBeforeChange": " public void testBug148215_Fields() throws CoreException", "signatureAfterChange": " public void testBug148215_Fields() throws CoreException", "diff": ["-\t\tremoveLibraryEntry(JAVA_PROJECT, new Path(\"/JavaSearchBugs/lib/b148215.jar\"));", "+\t\tremoveClasspathEntry(JAVA_PROJECT, new Path(\"/JavaSearchBugs/lib/b148215.jar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f0beb8b6c5e6eb0c7179a8f04cce2ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "1f82fbfe681e32018e530b8aaba28b5eaf34206f", "commitAfterChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void printWarning(String msg)", "signatureAfterChange": "      public void printWarning(String msg)", "diff": ["-        print(APTProblem.Severity.Warning, msg, null);", "+        print(APTProblem.Severity.WARNING, msg, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f332a3956ff9611843b3e7966993a89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals)", "signatureAfterChange": "  public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals)", "diff": ["-\tthis.options = problemReporter.options;", "+\tthis.options = problemReporter.globalOptions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f50794185fcabf6a58014ba7d8027b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  private void scanTypeForContainerAnnotation(IBinaryType binaryType, char[][][] missingTypeNames)", "signatureAfterChange": "  private void scanTypeForContainerAnnotation(IBinaryType binaryType, char[][][] missingTypeNames)", "diff": ["-\t\t\t\t\t\tthis.containerAnnotationType = (ReferenceBinding) this.environment.getTypeFromSignature(((ClassSignature)value).getTypeName(), 0, -1, false, null, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\t\t\t\tthis.containerAnnotationType = (ReferenceBinding) this.environment.getTypeFromSignature(((ClassSignature)value).getTypeName(), 0, -1, false, null, missingTypeNames, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f7532b45c0841094a7d600869ded6e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void consumeEnterAnonymousClassBody()", "signatureAfterChange": " protected void consumeEnterAnonymousClassBody()", "diff": ["-\tmarkCurrentMethodWithLocalType();", "+\tmarkEnclosingMemberWithLocalType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f75be259b7c7711daabe84bd44e3ada", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tboolean visit(DefaultCase defaultCaseStatement, BlockScope scope);", "signatureAfterChange": " \tboolean visit(DefaultCaseStatement defaultCaseStatement, BlockScope scope);", "diff": ["-\tboolean visit(Continue continueStatement, BlockScope scope);", "-\tboolean visit(DefaultCase defaultCaseStatement, BlockScope scope);", "+\tboolean visit(ContinueStatement continueStatement, BlockScope scope);", "+\tboolean visit(DefaultCaseStatement defaultCaseStatement, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f7e27165ab0212f845d184c7ff5cfc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void testInvalidTagsConstructorWithMissingTagsOption()", "signatureAfterChange": " \tpublic void testInvalidTagsConstructorWithMissingTagsOption()", "diff": ["-\t\trunConformTest(InvalidReferencesConstructorJavadocComments);", "+\t\trunConformTest(CONSTRUCTORS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f96cc06f29f4d8457ab0730477784fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ffa2b974bb9a001ab4f6065307624a4c089955ed", "commitAfterChange": "360ada2e6eb7e38d438bfa1da0bda2a11cc1935c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic IClasspathContainer containerBeingInitializedGet(IJavaProject project, IPath containerPath)", "signatureAfterChange": "  \tpublic IClasspathContainer containerBeingInitializedGet(IJavaProject project, IPath containerPath)", "diff": ["-\t\tMap perProjectContainers = (Map)this.containersBeingInitiliazed.get();", "+\t\tMap perProjectContainers = (Map)this.containersBeingInitialized.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fc58f414a17cbb1f078d587f7ed88e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "b0acd443a36e322f7afa5778ad381a3437727af2", "commitAfterChange": "342a0847eab95d8ca2e8608616a2c691828b55df", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void movedTo(IJavaElement movedToElement, IJavaElement movedFromElement)", "signatureAfterChange": " public void movedTo(IJavaElement movedToElement, IJavaElement movedFromElement)", "diff": ["-\taddedDelta.fMovedFromHandle = movedFromElement;", "+\taddedDelta.movedFromHandle = movedFromElement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fd1b2dae0ab76fbfe0d3dce393a8cca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/HandleFactory.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString)", "signatureAfterChange": "\r \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString)", "diff": ["-\t\t\t\t\tIClasspathEntry[] classpathEntries= javaProject.getResolvedClasspath(true);\r", "+\t\t\t\t\tIClasspathEntry[] classpathEntries= javaProject.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fde6ea2974faadf6dcbb2eed1fd189f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": "  public void test136() throws JavaModelException", "signatureAfterChange": "  public void test136() throws JavaModelException", "diff": ["-\t\t\"OtherTypes[METHOD_REF<CONSTRUCTOR>]{OtherTypes(), Ljavadoc.methods.tags.OtherTypes;, ()V, OtherTypes, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"OtherTypes[METHOD_REF<CONSTRUCTOR>]{OtherTypes(), Ljavadoc.methods.tags.OtherTypes;, ()V, OtherTypes, null, \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fe99552f842df643e2fb0e636e329bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "\r \tprotected final MethodBinding mostSpecificInterfaceMethodBinding(MethodBinding[] visible, int visibleSize)", "signatureAfterChange": "\r \tprotected final MethodBinding mostSpecificInterfaceMethodBinding(MethodBinding[] visible, int visibleSize)", "diff": ["-\t\t\tcompilationUnitScope().recordReferences(method.thrownExceptions);\r", "+\t\t\tcompilationUnitScope().recordTypeReferences(method.thrownExceptions);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ff0bf395e58fdb34eb37bde648f8289", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testGetCategories10() throws CoreException", "signatureAfterChange": " public void testGetCategories10() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ff179bc2becfa60d9dfdafaad346ec4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tprivate static IJavaElement determineIfOnClasspath(\r \t\tIResource resource,\r \t\tIJavaProject project)", "signatureAfterChange": "\r \tprivate static IJavaElement determineIfOnClasspath(\r \t\tIResource resource,\r \t\tIJavaProject project)", "diff": ["-\t\t\tIClasspathEntry[] entries = project.getResolvedClasspath(true);\r", "+\t\t\tIClasspathEntry[] entries = project.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10038c95691c0328150b3b0157b1605e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e2648f8b5ccbba51146261db3c629f21ae240071", "commitAfterChange": "080819febe201917c6d39d485bf6b0507c29f0c4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": "  \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\t\trelevance += computeRelevanceForCaseMatching(token, name);", "+\t\t\t\t\trelevance += computeRelevanceForCaseMatching(completionToken, name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10177b3d90d900966c1c230f5335d49e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "e5e6f9097f2c3bf7294bd658643d6be9f7aaa5ef", "commitAfterChange": "d00bc48524f3df289951f11fca95cb39820be47f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "\r \tpublic void generateCode(\r \t\tBlockScope currentScope,\r \t\tCodeStream codeStream,\r \t\tboolean valueRequired)", "diff": ["- */\r", "-public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired) {\r", "-\tint pc = codeStream.position;\r", "-\tLabel falseLabel, endLabel;\r", "-\tif (constant != Constant.NotAConstant) {\r", "-\t\tif (valueRequired)\r", "-\t\t\tcodeStream.generateConstant(constant, implicitConversion);\r", "-\t\tcodeStream.recordPositionsFrom(pc, this);\r", "-\t\treturn;\r", "-\t}\r", "-\tbits |= OnlyValueRequiredMASK;\r", "-\tgenerateOptimizedConditionalOr(currentScope, codeStream, null, (falseLabel = new Label(codeStream)), valueRequired);\r", "-\t/*  improving code gen for such a case:\t\tboolean b = i < 0 || true; \r", "-\t * since the label has never been used, we have the inlined value on the stack. */\r", "-\tif (falseLabel.hasForwardReferences()) {\r", "-\t\tif (valueRequired) {\r", "-\t\t\tcodeStream.iconst_1();\r", "-\t\t\tif ((bits & ValueForReturnMASK) != 0) {\r", "-\t\t\t\tcodeStream.ireturn();\r", "-\t\t\t\tfalseLabel.place();\r", "-\t\t\t\tcodeStream.iconst_0();\r", "-\t\t\t} else {\r", "-\t\t\t\tcodeStream.goto_(endLabel = new Label(codeStream));\r", "-\t\t\t\tcodeStream.decrStackSize(1);\r", "-\t\t\t\tfalseLabel.place();\r", "-\t\t\t\tcodeStream.iconst_0();\r", "-\t\t\t\tendLabel.place();\r", "-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\tfalseLabel.place();\r", "-\t\t}\r", "-\t}\r", "-\tif (valueRequired) {\r", "-\t\tcodeStream.generateImplicitConversion(implicitConversion);\r", "-\t}\r", "-\tcodeStream.recordPositionsFrom(pc, this);\r", "-}\r", "+\t */\r", "+\tpublic void generateCode(\r", "+\t\tBlockScope currentScope,\r", "+\t\tCodeStream codeStream,\r", "+\t\tboolean valueRequired) {\r", "+\t\tLabel falseLabel, endLabel;\r", "+\t\tif (constant != Constant.NotAConstant) {\r", "+\t\t\tif (valueRequired)\r", "+\t\t\t\tcodeStream.generateConstant(constant, implicitConversion);\r", "+\t\t\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t\t\treturn;\r", "+\t\tbits |= OnlyValueRequiredMASK;\r", "+\t\tgenerateOptimizedBoolean(\r", "+\t\t\tcurrentScope,\r", "+\t\t\tcodeStream,\r", "+\t\t\tnull,\r", "+\t\t\t(falseLabel = new Label(codeStream)),\r", "+\t\t\tvalueRequired);\r", "+\t\t/*  improving code gen for such a case:\t\tboolean b = i < 0 || true; \r", "+\t\t * since the label has never been used, we have the inlined value on the stack. */\r", "+\t\tif (falseLabel.hasForwardReferences()) {\r", "+\t\t\t\tcodeStream.iconst_1();\r", "+\t\t\t\tif ((bits & ValueForReturnMASK) != 0) {\r", "+\t\t\t\t\tcodeStream.ireturn();\r", "+\t\t\t\t\tfalseLabel.place();\r", "+\t\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t\t\tcodeStream.goto_(endLabel = new Label(codeStream));\r", "+\t\t\t\t\tcodeStream.decrStackSize(1);\r", "+\t\t\t\t\tfalseLabel.place();\r", "+\t\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t\t\tendLabel.place();\r", "+\t\t\t\tfalseLabel.place();\r", "+\t\t}\r", "+\t\tif (valueRequired) {\r", "+\t\t\tcodeStream.generateImplicitConversion(implicitConversion);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "101df7c85099d0933dd42aab318126fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaLikeExtensionsTests.java", "commitBeforeChange": "6950546c078b90b75decadf938e90ba25be67def", "commitAfterChange": "5f0d5b4535e0c623b3c96db43a68b516445fa24d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void testGetJavaLikeExtensions02() throws CoreException", "signatureAfterChange": " \tpublic void testGetJavaLikeExtensions02() throws CoreException", "diff": ["-\t\tIContentType javaContentType = Platform.getContentTypeManager().getContentType(JavaModelManager.JAVA_SOURCE_CONTENT_TYPE);", "+\t\tIContentType javaContentType = Platform.getContentTypeManager().getContentType(JavaCore.JAVA_SOURCE_CONTENT_TYPE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "101f5b5c6beda8554f4c5c527b351ab7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/RemoveFolderFromIndex.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\treturn \"removing \" + this.folderPath + \" from index \" + this.indexPath; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\treturn \"removing \" + this.folderPath + \" from index \" + this.containerPath; //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10351c5b605c1fe726917bf42f49d4c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocFieldCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public void test013() throws JavaModelException", "signatureAfterChange": "  public void test013() throws JavaModelException", "diff": ["-\t\t\"java.lang[PACKAGE_REF]{java.lang, java.lang, null, null, null, \"+this.positions+R_DICQNR+\"}\"", "+\t\t\"java.lang[PACKAGE_REF]{java.lang, java.lang, null, null, null, \"+this.positions+R_DRICQNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "104104129e77a26719b8421eee3f093b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\t\t\t\t&& fieldBinding.declaringClass.id != T_Object) // no change for Object fields (if there was any)", "+\t\t\t\t\t&& fieldBinding.declaringClass.id != T_JavaLangObject) // no change for Object fields (if there was any)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "105bef6a85b8f772dba9d29043e03afe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void reportMethodDeclaration(AbstractMethodDeclaration methodDeclaration, IJavaElement parent, int accuracy) throws CoreException", "signatureAfterChange": " public void reportMethodDeclaration(AbstractMethodDeclaration methodDeclaration, IJavaElement parent, int accuracy) throws CoreException", "diff": ["-\tscanner.setSource(this.currentPotentialMatch.getContents());", "+\tscanner.setSource(this.currentPossibleMatch.getContents());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10688808eca397c9754743a52cc886bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9a76fb8f9434ae4b71dc267e686b050759ff3536", "commitAfterChange": "e5d54da7cf77d6614acfbbcede23df9b9dad68f9", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": " public void goForCompilationUnit()", "signatureAfterChange": " public void goForCompilationUnit()", "diff": ["-\tscanner.todoCount = 0;", "+\tscanner.taskCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "106f5d949eb39293fddb2197ca98cd83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testLocalType4() throws JavaModelException", "signatureAfterChange": " public void testLocalType4() throws JavaModelException", "diff": ["-\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10768639da0d6d5504bf04dbb7e7690d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \t\r \tpublic ClassInstanceCreation convert(AnonymousLocalTypeDeclaration expression)", "signatureAfterChange": "\r \t\r \tpublic ClassInstanceCreation convert(AnonymousLocalTypeDeclaration expression)", "diff": ["-\t\tclassInstanceCreation.setSourceRange(declarationSourceStart, expression.declarationSourceEnd - declarationSourceStart + 1);\r", "+\t\tclassInstanceCreation.setSourceRange(declarationSourceStart, expression.bodyEnd - declarationSourceStart + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "107f22ec8e3234c1b1e65018bc427718", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/pattern/InternalSearchPattern.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void findIndexMatches(IIndex index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "signatureAfterChange": " \tpublic void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "diff": ["-\tpublic void findIndexMatches(IIndex index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException {", "+\tpublic void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "109bc688aa1a8ba649023a8a00cce174", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9bef3f15c43b07a14e76957980f62386b2bcee10", "commitAfterChange": "73f504e7d77d95d8fc2d6621b5727e1e3ab07530", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " protected void consumeExplicitConstructorInvocationWithTypeArguments(int flag, int recFlag)", "signatureAfterChange": " protected void consumeExplicitConstructorInvocationWithTypeArguments(int flag, int recFlag)", "diff": ["-\tecc.sourceEnd = this.endPosition;", "+\tecc.sourceEnd = this.endStatementPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10b1edf7533b695868f8b068d328b8c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testAddExclusionOnPrimaryWorkingCopy() throws CoreException", "signatureAfterChange": " public void testAddExclusionOnPrimaryWorkingCopy() throws CoreException", "diff": ["-\t\tassertResourcesEqual(", "+\t\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10d2fcbe3fed92b5d98509545030b8fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic boolean visit(Case caseStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(CaseStatement caseStatement, BlockScope scope)", "diff": ["-\tpublic boolean visit(Case caseStatement, BlockScope scope) {", "+\tpublic boolean visit(CaseStatement caseStatement, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10d3ff8d23ec227524072ad4298711ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "da39b69e72c50baaaa7ca77863d468ca697fcf61", "commitAfterChange": "ff204ce3a41738619b4636be750fa00b8770f7a8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope scope)", "signatureAfterChange": "\r \tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope)", "diff": ["-\tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope scope) {\r", "+\tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10d4917880d7fc8c10a52260f3a7c93c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FieldBinding fieldBinding, int index, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FieldBinding fieldBinding, int index, FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0) return;", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10e009fa141ab28f1ca3d50ff7935199", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "030eb4fda54a6751c1b822374d11bd8e8163881c", "commitAfterChange": "ec1201be6eb9490fec9fdaa6f4ea5d677aacc407", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void addSyntheticMethodAccessMethod(SyntheticMethodBinding methodBinding)", "signatureAfterChange": " \tpublic void addSyntheticMethodAccessMethod(SyntheticMethodBinding methodBinding)", "diff": ["-\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tint attributeNumber = generateMethodInfoAttributes(methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10ed66283fdf4debc8427fa1c852fda5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public RecoveredType(TypeDeclaration typeDeclaration, RecoveredElement parent, int bracketBalance)", "signatureAfterChange": " \t public RecoveredType(TypeDeclaration typeDeclaration, RecoveredElement parent, int bracketBalance)", "diff": ["-\tthis.insideEnumConstantPart = typeDeclaration.kind() == IGenericType.ENUM;", "+\tthis.insideEnumConstantPart = typeDeclaration.kind() == IGenericType.ENUM_DECL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10f5f38d39ab3eb7eddbfa9cad18ba6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " protected void consumeClassBodyDeclaration()", "signatureAfterChange": " protected void consumeClassBodyDeclaration()", "diff": ["-\tinitializer.declarationSourceEnd = flushAnnotationsDefinedPriorTo(endStatementPosition);", "+\tinitializer.declarationSourceEnd = flushCommentsDefinedPriorTo(endStatementPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1111e660f17b2fcbc236b11216410eb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/StatementRecoveryTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(StatementRecoveryTest.class);", "+\treturn buildAllCompliancesTestSuite(StatementRecoveryTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "112c1de65089ff2b21b887614e082fd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CreateTypeSourceExamplesTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testCreateClassWithImplements4()", "signatureAfterChange": " public void testCreateClassWithImplements4()", "diff": ["-\tassertEquals(", "+\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1164f4c5f2ce4974f679b3637135da2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "ea916b0462fec6996e619f84c30f348e2877686a", "commitAfterChange": "558c64a899c0debc518d6eb92e85f37b05902eba", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic ReferenceExpression(TypeReference type, TypeReference[] typeArguments, int sourceEnd)", "signatureAfterChange": "  \tpublic ReferenceExpression(TypeReference type, TypeReference[] typeArguments, int sourceEnd)", "diff": ["-\t\tthis.typeArguments = typeArguments;", "+\t\tthis.typeParameters = typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "116f7d065de9bc7bacb1e6a7e8cd18a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testDeltaCreateNonPrimaryWorkingCopy() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaCreateNonPrimaryWorkingCopy() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11759c567aa21ccd59a77d53e2215924", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/junit/runner/BaseTestRunner.java", "commitBeforeChange": "5f14954289dcfe3aa64cd723a9ea9807dea33e05", "commitAfterChange": "4b4449dde49cdcaed9ae00d1ac057ecfeb8d8c23", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic static String getFilteredTrace(Throwable t)", "signatureAfterChange": " \tpublic static String getFilteredTrace(Throwable t)", "diff": ["-\tpublic static String getFilteredTrace(Throwable t) { ", "+\tpublic static String getFilteredTrace(Throwable t) {", "-\t\treturn BaseTestRunner.filterStack(trace);", "+\t\treturn BaseTestRunner.getFilteredTrace(trace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a47482079b1e7505425d6d72b04fc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteElementsOperation.java", "commitBeforeChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "commitAfterChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void groupElements() throws JavaModelException", "signatureAfterChange": " \tprotected void groupElements() throws JavaModelException", "diff": ["-\t\t\t\tthrow new JavaModelException(new JavaModelStatus(JavaModelStatus.READ_ONLY, e));", "+\t\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.READ_ONLY, e));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a47a61ad62a5d9fbb26406deb7e807", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tboolean visit(Case caseStatement, BlockScope scope);", "signatureAfterChange": " \tboolean visit(CaseStatement caseStatement, BlockScope scope);", "diff": ["-\tboolean visit(Break breakStatement, BlockScope scope);", "-\tboolean visit(Case caseStatement, BlockScope scope);", "+\tboolean visit(BreakStatement breakStatement, BlockScope scope);", "+\tboolean visit(CaseStatement caseStatement, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11a857ff912194408d87736f8b3752f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic ITypeAnnotationWalker toField()", "signatureAfterChange": " \tpublic TypeAnnotationWalker toField()", "diff": ["-\tpublic ITypeAnnotationWalker toField() {", "+\tpublic TypeAnnotationWalker toField() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11b0231ad246fcb086992407258b2f56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate CompilationUnit createASTFrom(ICompilationParticipantResult result)", "signatureAfterChange": "  \tprivate CompilationUnit createASTFrom(BuildContext result)", "diff": ["-\tprivate CompilationUnit createASTFrom(ICompilationParticipantResult result){", "+\tprivate CompilationUnit createASTFrom(BuildContext result){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c1bca7c5ec4db82e7585a74bb2b871", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "9d9b626a341c39b3bd7c3dd97a53439bdcd8e46d", "commitAfterChange": "8fdb14b64608b58e620c67bc0f2758fb559de717", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void consumeAnnotationAsModifier()", "signatureAfterChange": " protected void consumeAnnotationAsModifier()", "diff": ["-\t\tthis.requestor.acceptTypeReference(annotation.type.getTypeName(), annotation.sourceStart, annotation.sourceEnd);", "+\t\tthis.requestor.acceptAnnotationTypeReference(annotation.type.getTypeName(), annotation.sourceStart, annotation.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11c31168b3f4c9113835441e46bfdcd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void testBug139621f() throws JavaModelException", "signatureAfterChange": " public void testBug139621f() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11ea4c8cde44274d3ae6be482f959d9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "05bd6362ebc3db4accc519070d9c8a9ecd2a788b", "commitAfterChange": "905cf94d64f942e28e58015355605b9b9383c577", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void generateOptimizedLogicalXor( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLogicalXor( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\tif ((left.implicitConversion & 0xF) == T_boolean) {", "+\t\tif ((left.implicitConversion & COMPILE_TYPE_MASK) == T_boolean) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11f39ac16883e6256c351976c67ac0cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "      \tReferenceBinding resolve()", "signatureAfterChange": "      \tReferenceBinding resolve()", "diff": ["-\t    switch(this.kind) {", "+\t    switch(this.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12012685902284dc3ea65537556b9cb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "6024db2244852bf1a14f4a11a2132399927fa015", "commitAfterChange": "8238d4886dd5cc2d15b3226c07195562e9c81134", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "signatureAfterChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "diff": ["-\t\t\t\t} else if (targetType.isBaseType()) {", "+\t\t\t\t} else if (targetType.isNormalBaseType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "121c9340a4769963859d3db1e4632bbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "ca2d3ce8265fe41695ca043d40ccc35d5ce77b25", "commitAfterChange": "8fd47ede750ba6005aab3e86ceccb03a6e16dba8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static ClasspathContainerInitializer getClasspathContainerInitializer(String containerID)", "signatureAfterChange": " \tpublic static ClasspathContainerInitializer getClasspathContainerInitializer(String containerID)", "diff": ["-\t\tHashMap containerInitializersCache = JavaModelManager.getJavaModelManager().containerInitializersCache;", "+\t\tHashtable containerInitializersCache = JavaModelManager.getJavaModelManager().containerInitializersCache;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1220afec265f4c1c8da866b309c3c38b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "signatureAfterChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "diff": ["-\t\t\tif (SearchBasicEngine.VERBOSE)", "+\t\t\tif (BasicSearchEngine.VERBOSE)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "123baaf80879e423d32e1ea8c9f3c004", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tvoid checkAssignment(BlockScope scope, TypeBinding lhsType, TypeBinding rhsType)", "signatureAfterChange": "  \tvoid checkAssignment(BlockScope scope, TypeBinding lhsType, TypeBinding rhsType)", "diff": ["-\t\t    scope.problemReporter().unsafeRawConversion(this.expression, rhsType, lhsType);", "+\t\t    scope.problemReporter().unsafeTypeConversion(this.expression, rhsType, lhsType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "124cf2fa96d2a642ea0a086f835adad0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ASTRewrite.java", "commitBeforeChange": "a397f5c535b8e0d2626739d73f6fc3a536a6f2d1", "commitAfterChange": "7223aa6fb77908646269eb05501baa3222dddf99", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final void set(ASTNode node, StructuralPropertyDescriptor property, Object value, TextEditGroup editGroup)", "signatureAfterChange": " \tpublic final void set(ASTNode node, StructuralPropertyDescriptor property, Object value, TextEditGroup editGroup)", "diff": ["-\t\tvalidateIsInsideAST(node);", "+\t\tvalidateIsCorrectAST(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "124f687e9563fd9e1d0675e1fa501cd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "a601b6b1bd0055831cf914eda4a394af5ff40421", "commitAfterChange": "aae3a2ae7793bc4970c4033658428e24ab5d11f5", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public IJavaElement getOriginalElement()", "signatureAfterChange": " public IJavaElement getOriginalElement()", "diff": ["-\treturn new CompilationUnit((IPackageFragment)getParent(), getElementName(), DefaultCompilationUnitOwner.PRIMARY);", "+\treturn new CompilationUnit((IPackageFragment)getParent(), getElementName(), DefaultWorkingCopyOwner.PRIMARY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1265aac1c6167594290c295c68eae455", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 399, "methodNumberAfterChange": 399, "signatureBeforeChange": " \tpublic void test380()", "signatureAfterChange": " \tpublic void test380()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "126d49e3abf055b2b985764ba1f1b564", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "a8f2b68f1354490b767be2be2c0da4ef0e316375", "commitAfterChange": "dc576fab42267e6f13ed17e488fd3148457c1fbc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void tearDownSuite() throws Exception", "signatureAfterChange": " public void tearDownSuite() throws Exception", "diff": ["-\tsuper.tearDown();", "+\tsuper.tearDownSuite();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "126fbcd595df7804c5b483c31948748f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "6cd0099c2021e34815eaba987a586ae52dacf569", "commitAfterChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic ReferenceBinding inferFunctionalInterfaceParameterization(LambdaExpression lambda, BlockScope blockScope,  \t\t\tParameterizedTypeBinding targetTypeWithWildCards)", "signatureAfterChange": " \tpublic ReferenceBinding inferFunctionalInterfaceParameterization(LambdaExpression lambda, BlockScope blockScope,  \t\t\tParameterizedTypeBinding targetTypeWithWildCards)", "diff": ["-\t\t\t\treturn blockScope.environment().createParameterizedType(genericType, aprime, genericType.enclosingType());", "+\t\t\t\treturn blockScope.environment().createParameterizedType(genericType, aprime, targetTypeWithWildCards.enclosingType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12761a157822473738f166505ee9a8e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/MemoryIndex.java", "commitBeforeChange": "502428a56ac1c33f406a983668ed7a632d288c0f", "commitAfterChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void addIndexEntry(char[] category, char[] key, SearchDocument document)", "signatureAfterChange": " void addIndexEntry(char[] category, char[] key, InternalSearchDocument document)", "diff": ["-void addIndexEntry(char[] category, char[] key, SearchDocument document) {", "+void addIndexEntry(char[] category, char[] key, InternalSearchDocument document) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "127dbadf330cf040c86808709c65708b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LocalVariable.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner)", "signatureAfterChange": "  \tpublic IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner)", "diff": ["-\tpublic IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner) {", "+\tpublic IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "127f66026c6c2539a8c235e09edc3acb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ModelUpdater.java", "commitBeforeChange": "ba1917d8323b975c43d151520213a593a77dc7c0", "commitAfterChange": "90b8a1490825ac6e9009b801582efb3d76f604dd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void elementRemoved(Openable element)", "signatureAfterChange": " \tprotected void elementRemoved(Openable element)", "diff": ["-\t\t\t\telement.getJavaModelManager().getIndexManager().reset();", "+\t\t\t\tJavaModelManager.getJavaModelManager().getIndexManager().reset();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12813c50658f9430119265adebd1cafc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "33bdf149dbe1be0a3eb429c5c10e2e8d6e8332e3", "commitAfterChange": "d3db880f9ce093cbf2c8ff1aba8ac97e00156523", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\tif (insideStaticContext && environment().options.complianceLevel >= ClassFileConstants.JDK1_5) {", "+\t\tif (insideStaticContext && environment().options.sourceLevel >= ClassFileConstants.JDK1_5) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12833431dcab81f730bca3abb4f42502", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/AllTests.java", "commitBeforeChange": "91fd689e5fc319bb3e2206debef8eaf08cf44cd9", "commitAfterChange": "1d4b08a8f9928b8cb41c807f138e108b1a0b90da", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\tsuite.addTestSuite(CompilerAptTests.class);", "+\t\tsuite.addTestSuite(BatchDispatchTests.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "128d85523ce2ae707aaa37453957a311", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(FieldDeclaration field, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\tif ((field.bits & ASTNode.HasLocalTypeMASK) != 0) {", "+\tif ((field.bits & ASTNode.HasLocalType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12a8a6c10c2117d3428af45587ec4623", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void addProblemMethod( \t\tAbstractMethodDeclaration method, \t\tMethodBinding methodBinding, \t\tIProblem[] problems)", "signatureAfterChange": " \tpublic void addProblemMethod( \t\tAbstractMethodDeclaration method, \t\tMethodBinding methodBinding, \t\tIProblem[] problems)", "diff": ["-\t\t\tmethod.abort(AbstractMethodDeclaration.AbortType);", "+\t\t\tmethod.abort(ProblemSeverities.AbortType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12b7b982e03c8dc53be37cb8c6b78c47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tpublic DeclarationImpl getAnnotatedDeclaration()", "signatureAfterChange": " \t \tpublic EclipseDeclarationImpl getAnnotatedDeclaration()", "diff": ["-\tpublic DeclarationImpl getAnnotatedDeclaration(){ return _annotated; }", "+\tpublic EclipseDeclarationImpl getAnnotatedDeclaration(){ return _annotated; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12c9f9958c1bf1e476d158a7e0d731f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic void testMissingTagsErrorPublic()", "signatureAfterChange": " \tpublic void testMissingTagsErrorPublic()", "diff": ["-\t\trunNegativeTest(MissingTags, resultForMissingTags(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(MISSING_TAGS, resultForMissingTags(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12d9787f9e543cdf102316671d235542", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerInvocationTests.java", "commitBeforeChange": "9337b3165955bcb5471291138f985bf635bc2c65", "commitAfterChange": "dcc90ac4a7bfde7969fd3cd0f96c9b0fd4416eec", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void test004_no_dash_d_option() throws IOException", "signatureAfterChange": " public void test004_no_dash_d_option() throws IOException", "diff": ["-\tbinDirectory.mkdir();", "+\tbinDirectory.mkdirs();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12ddc7a13a54c71fe3d22233957fe8a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementRequestor.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public IField[] getFields()", "signatureAfterChange": "\r public IField[] getFields()", "diff": ["-\tfFields.copyInto(results);\r", "+\tfFields.toArray(results);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12deb9c0a08d2db65099807de2da871e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t    scope.problemReporter().unsafeRawConversion(this.expression, expressionType, methodType);", "+\t\t\t    scope.problemReporter().unsafeTypeConversion(this.expression, expressionType, methodType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12df95d64cbfdde0daa2e6276ab15c24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationStatement.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e1ca2e6fe5a39eac13c3368b2dc6c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "signatureAfterChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "diff": ["-\t\t\tIResource[] members = ((IContainer) project.getUnderlyingResource()).members();", "+\t\t\tIResource[] members = ((IContainer) project.getResource()).members();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e7eb4ecfb66bfe6757a77bcf7fa915", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LookupTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn setupSuite(testClass());", "+\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12e84355abbd775680b3da4aa5908aaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/RemoveFromIndex.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\tIIndex index = manager.getIndex(this.indexPath, true, /*reuse index file*/ false /*create if none*/);", "+\t\tIIndex index = manager.getIndex(this.containerPath, true, /*reuse index file*/ false /*create if none*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12f50a40df4b7a84ddbba74b0675ae87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "commitAfterChange": "b21cadb5eae53d9f84dce9f073b5350a267b6ad6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic byte[] getByteContents()", "signatureAfterChange": "  \tpublic byte[] getByteContents()", "diff": ["-\t\t\tif (SearchEngine.VERBOSE || JobManager.VERBOSE) { // used during search and during indexing", "+\t\t\tif (SearchBasicEngine.VERBOSE || JobManager.VERBOSE) { // used during search and during indexing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12f5638866aa462ab94e1d525baddbe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/HierarchyOnWorkingCopiesTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void testSimpleSubTypeHierarchy() throws CoreException", "signatureAfterChange": " public void testSimpleSubTypeHierarchy() throws CoreException", "diff": ["-\t\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in P]]]]\\n\" + ", "+\t\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in P]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1337d5c01f55165930d615a35efb5836", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "6ec2bf68626c3baaf2de76ad471eae21612974d2", "commitAfterChange": "5f8cfe2efe8d090091876dd299bd5bd9c4957228", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tprivate void updateMappedPositions(int startPosition)", "signatureAfterChange": "  \tprivate void updateMappedPositions(int startPosition)", "diff": ["-\t\t\tif (Scanner.isWhitespace(source[posToMap])) {", "+\t\t\tif (CharOperation.isWhitespace(source[posToMap])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "133d5e94981fe6e96bd755e4c571a8c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "b501a050436f0ed4b21c2887b8c36095ae4a6672", "commitAfterChange": "b1617566bbecda597db8e35043fbdcfac0211c24", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " private void writeCategoryTable(char[] categoryName, HashtableOfObject wordsToDocs, FileOutputStream stream) throws IOException", "signatureAfterChange": " private void writeCategoryTable(char[] categoryName, CategoryTable wordsToDocs, FileOutputStream stream) throws IOException", "diff": ["-private void writeCategoryTable(char[] categoryName, HashtableOfObject wordsToDocs, FileOutputStream stream) throws IOException {", "+private void writeCategoryTable(char[] categoryName, CategoryTable wordsToDocs, FileOutputStream stream) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13560004d2be8c43701773932e62f08a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " \tpublic void endVisit(IfStatement node)", "signatureAfterChange": " \tpublic void endVisit(ExpressionMethodReference node)", "diff": ["+\t */", "+\tpublic void endVisit(ExpressionMethodReference node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13588cf6daa8912f72e2d3e7f7501709", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuite(testClass());", "+\t\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "135e3a3884ee5a4660ef9cd852d4ecbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprotected String toStringContents()", "signatureAfterChange": " \tprotected String toStringContents()", "diff": ["-\t\tint length = fEntryTable.size();", "+\t\tint length = entryTable.size();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "135e606b08e02ecdfe2b0f89c7e1b1ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static Expression parseExpression(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "signatureAfterChange": " \t \tpublic static Expression parseExpression(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "diff": ["-\t\tParser parser = new Parser(problemReporter, false);", "+\t\tParser parser = new CommentRecorderParser(problemReporter, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137583de1e92383f32ca2f98c502f74c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": " private synchronized void removeIndexesState(String[] locations)", "signatureAfterChange": " private synchronized void removeIndexesState(IPath[] locations)", "diff": ["-private synchronized void removeIndexesState(String[] locations) {", "+private synchronized void removeIndexesState(IPath[] locations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1391571fbe2d17ee1014124c2b89e148", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/PerformanceTestSuite.java", "commitBeforeChange": "c6edf5a3b409430a3974f85522c41ebd8d225d7c", "commitAfterChange": "ad2da02858ca7c8babcaa54d1755f5d5dc7c4cca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void addTestMethod(Method m, Vector names, Class theClass)", "signatureAfterChange": " \t \tprivate void addTestMethod(Method m, Vector names, Class theClass)", "diff": ["-\t\t\t\taddTest(warning(\"Test method isn't public: \"+m.getName()));", "+\t\t\t\taddTest(addWarningTest(\"Test method isn't public: \"+m.getName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "139554cd52dd5237cdd7beabe1dd1f88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "152d18d4cacb9bd3ea7ba43af5713a4d308c0471", "commitAfterChange": "01ebf46478e499b6682d2e0eb34536c095d3cff8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testTypeRef_Allocation() throws CoreException", "signatureAfterChange": " public void testTypeRef_Allocation() throws CoreException", "diff": ["-\tsearch(setUpTypeRef(0), ALLOCATION_EXPRESSION_TYPE_REFERENCE);", "+\tsearch(setUpTypeRef(0), CLASS_INSTANCE_CREATION_TYPE_REFERENCE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1399a29270a5baea4d3741634ab1db70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/BlocksIndexInput.java", "commitBeforeChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "commitAfterChange": "82730fa91cab84d990d4e3898f46564d654b224e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic IEntryResult[] queryEntries(char[] pattern, int matchRule) throws IOException", "signatureAfterChange": " \tpublic EntryResult[] queryEntries(char[] pattern, int matchRule) throws IOException", "diff": ["-\tpublic IEntryResult[] queryEntries(char[] pattern, int matchRule) throws IOException {", "+\tpublic EntryResult[] queryEntries(char[] pattern, int matchRule) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13a5dcf8e40f8dccfcf8f3be614ce6b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "9f141d55e2af9b37128bf7c5971a811e92b8911e", "commitAfterChange": "a6f843d25df9099f92853bc4c288a7fde6d9a288", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_PARENTESIZED_EXPRESSION_IN_RETURN, this.insert_space_before_parenthesized_expression_in_return ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_PARENTHESIZED_EXPRESSION_IN_RETURN, this.insert_space_before_parenthesized_expression_in_return ? JavaCore.INSERT : JavaCore.DO_NOT_INSERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13af30666b01711e309c5d6643e1e2f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tvoid computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "signatureAfterChange": " \tvoid computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "diff": ["-\t\t\t\t\t&& ((local.declaration.bits & ASTNode.IsLocalDeclarationReachableMASK) != 0)) { // declaration is reachable", "+\t\t\t\t\t&& ((local.declaration.bits & ASTNode.IsLocalDeclarationReachable) != 0)) { // declaration is reachable"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13bf6312a944d45f2d0b963a8ccca6f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tprotected IJavaElement[] getElementsToProcess()", "signatureAfterChange": " \tprotected IJavaElement[] getElementsToProcess()", "diff": ["-\t\treturn fElementsToProcess;", "+\t\treturn elementsToProcess;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13cfffa68f3dfc5b38f7a053f2c12b8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void testBug22043b() throws JavaModelException", "signatureAfterChange": "  public void testBug22043b() throws JavaModelException", "diff": ["-\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(String), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.String;)V, thisIsAMethod, (param), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(String), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.String;)V, thisIsAMethod, (param), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13d9460d9301ec7c076559eb8bd1ec25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tpublic boolean isSourceType()", "signatureAfterChange": "\r \r public  boolean isSourceType()", "diff": ["-\t */\r", "-\tpublic boolean isSourceType() {\r", "-\t\treturn sourceTypes != null;\r", "-\t}\r", "+public  boolean isSourceType() {\r", "+\treturn sourceType != null;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13f0404bf7c06d2f64679822cfbafe52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "3c7abdea60e3dea7a9b2b822e92d260aea9179a7", "commitAfterChange": "85d82ef92c86e257cfcb71c0ec95b6b64432a5cb", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic boolean visit(IfStatement node)", "signatureAfterChange": " \tpublic boolean visit(LambdaExpression node)", "diff": ["+\t */", "+\tpublic boolean visit(LambdaExpression node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13ffa38066b94ed696288a4c29f24bfe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \tprivate int computeRelevanceForExpectingType(char[] packageName, char[] typeName)", "signatureAfterChange": "\r \tprivate int computeRelevanceForExpectingType(char[] packageName, char[] typeName)", "diff": ["-\t\t\t\t\treturn EXPECTEDTYPEMATCHRELEVANCE;\r", "+\t\t\t\t\treturn R_EXPECTED_TYPE;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "140559c96e2005555409dcd0f6821bc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefMethodErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefMethodErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "141b97b17c77287e33038bda8f21c219", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "ed03b97e41cec71a1f276a24a6c89d537dde57f2", "commitAfterChange": "3617e411ab09a4b93e5840b8e6d451f0c6a8a8c9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate ReferenceBinding findSupertype(TypeReference typeReference)", "signatureAfterChange": "  \tprivate ReferenceBinding findSupertype(TypeReference typeReference)", "diff": ["-\t\t\tcompilationUnitScope().recordTypeReference(superType); // to record supertypes", "+\t\t\tcompilationUnitScope().recordSuperTypeReference(superType); // to record supertypes"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14259a69f8bc29dd70bfc77e885cb032", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/TestAll.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t\treturn AbstractCompilerTest.buildAllCompliancesSetupSuite(TestAll.class, DebugEvaluationSetup.class, testClasses);", "+\t\treturn AbstractCompilerTest.buildAllCompliancesTestSuite(TestAll.class, DebugEvaluationSetup.class, testClasses);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "143093fddc4c1bc0d2efbc0d505c9dbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "ba8a2ea77e6391470013f417ffa2384211ad0580", "commitAfterChange": "f9e266f586466be925481e722a3bf7ce1cc60737", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \tpublic void reportImport(ImportReference reference, int accuracy)\r \t\tthrows CoreException", "signatureAfterChange": "\r \tpublic void reportImport(ImportReference reference, int accuracy)\r \t\tthrows CoreException", "diff": ["-\t\tIImportDeclaration importHandle = this.createImportHandle(reference);\r", "+\t\tIJavaElement importHandle = this.createImportHandle(reference);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14656eea1b27f6f2c8055b10ee5ac469", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8", "commitAfterChange": "7df061f9da0ab96be87e5851cb157a28c5f5bca0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic boolean visit(DimensionInfo node)", "signatureAfterChange": " \tpublic boolean visit(ExtraDimension node)", "diff": ["-\tpublic boolean visit(DimensionInfo node) {", "+\tpublic boolean visit(ExtraDimension node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "146b2c81ff5cd9c12246fe1819983eff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSkeleton.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public int getKind()", "signatureAfterChange": " public int getKind()", "diff": ["-\treturn IGenericType.CLASS;", "+\treturn IGenericType.CLASS_DECL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "148458222569290e35e7b16d4992ac79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f4680a34e1f2039b2a192d0a537b3157d981aa26", "commitAfterChange": "41f0eedac440a5a7408e664ba09866184ebddd55", "methodNumberBeforeChange": 337, "methodNumberAfterChange": 337, "signatureBeforeChange": " \t \tpublic void test318()", "signatureAfterChange": " \t \tpublic void test318()", "diff": ["-\t\tpreferences.line_delimiter = \"\\r\";", "+\t\tpreferences.line_separator = \"\\r\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1487550d7078be93ed074241d2585db9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testAccessRestriction9() throws Exception", "signatureAfterChange": " public void testAccessRestriction9() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.ENABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14945c9779800a69ec7a10c3833f17a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testClassFileGetElementAt01() throws JavaModelException", "signatureAfterChange": " public void testClassFileGetElementAt01() throws JavaModelException", "diff": ["-\tassertElementEquals(", "+\tassertElementExists("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14b411d3e62ac3319a58434b2813e80b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic IProject getProject(IPath projectPath)", "signatureAfterChange": " \tpublic IProject getProject(IPath projectPath)", "diff": ["-\t\treturn (IProject)fProjects.get(projectPath.lastSegment());", "+\t\treturn (IProject)projects.get(projectPath.lastSegment());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14b47d53c4a528d63b7d14c4bb1810f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 314, "methodNumberAfterChange": 313, "signatureBeforeChange": " protected void writePosition(Label label)", "signatureAfterChange": " protected void writePosition(BranchLabel label)", "diff": ["-protected void writePosition(Label label) {", "+protected void writePosition(BranchLabel label) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14b4ad8e6f0c1de600c2a0c54f941178", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void testMultiLineCommentBlankLineBeforeJavadoctags3()", "signatureAfterChange": " \tpublic void testMultiLineCommentBlankLineBeforeJavadoctags3()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES, \"true\"); //$NON-NLS-1$", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_JAVADOC_COMMENT, \"true\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14b896ba124e0e65d84d49a22c2703f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "fc6d96b34b996ca454401b8df9f47cbdd05258ef", "commitAfterChange": "8d6cea2b563dfcf3e967c213abbf6edfdfbdc3fb", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "\r private static Hashtable getOptions()", "signatureAfterChange": "\r private static Hashtable getOptions()", "diff": ["-\t\tsetOptionsToDefault();\r", "+\t\tresetOptions();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14c121ad96e03f99753ec214c81a7046", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Override \tpublic TypeAnnotationWalker toMethodReturn()", "signatureAfterChange": "  \t@Override \tpublic ITypeAnnotationWalker toMethodReturn()", "diff": ["-\tpublic TypeAnnotationWalker toMethodReturn() {", "+\tpublic ITypeAnnotationWalker toMethodReturn() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14cbd46b9a86b658054342123a1a2e7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14cc59139fe0613aa8a51e0e504d9930", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14ccb4d1bf40e725334e37c1717e8cba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/XLargeTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14cd68b4758ff45d5ac3c8fc16499d1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 248, "methodNumberAfterChange": 244, "signatureBeforeChange": " public void testBug109695e() throws CoreException", "signatureAfterChange": " public void testBug109695e() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"IWWPD2\", SearchPattern.R_CAMELCASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"IWWPD2\", SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14dacacce8768a410005d04cb80d6ad3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "6e642a34a8b5c85df508f049684a8996f1b8df52", "commitAfterChange": "355460267a070a52738f93cd1e4e0f2039fb0d85", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic boolean visit(MemberRef node)", "signatureAfterChange": " \tpublic boolean visit(MarkerAnnotation node)", "diff": ["+\tpublic boolean visit(MarkerAnnotation node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14ec15156fac42f6a330552a5de72a35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BaseAnnotationProcessorManager.java", "commitBeforeChange": "4c8a3ba34c720dda98e8d56ba71f0361efbe740b", "commitAfterChange": "c06cfa4791f8eb98381a7dd55dd6950dbcddf37c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t@Override \tpublic void configure(Main batchCompiler, String[] options)", "signatureAfterChange": " \t@Override \tpublic void configure(Object batchCompiler, String[] options)", "diff": ["-\tpublic void configure(Main batchCompiler, String[] options) {", "+\tpublic void configure(Object batchCompiler, String[] options) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "150868cfb6bbf32fe402422530288692", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 21, "signatureBeforeChange": " public synchronized void removeIndex(IPath path)", "signatureAfterChange": " public synchronized void removeIndex(IPath path)", "diff": ["-\tif (o instanceof IIndex)", "+\tif (o instanceof Index)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1513321ff3dfc06d909a95a8385d24f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 88, "signatureBeforeChange": " \tboolean visit(AnnotationSingleTypeReference typeRef, BlockScope scope);", "signatureAfterChange": " \tboolean visit(JavadocArrayQualifiedTypeReference typeRef, BlockScope scope);", "diff": ["-\tboolean visit(AnnotationSingleNameReference argument, BlockScope scope);", "-\tboolean visit(AnnotationSingleTypeReference typeRef, BlockScope scope);", "+\tboolean visit(JavadocArgumentExpression expression, BlockScope scope);", "+\tboolean visit(JavadocArrayQualifiedTypeReference typeRef, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "152a66297ce229bd1efaf335d3401681", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic void testMultiLineCommentIndentSpaces4()", "signatureAfterChange": "  \tpublic void testMultiLineCommentIndentSpaces4()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, \"3\"); //$NON-NLS-1$", "+\t\t// note: FORMATTER_INDENTATION_SIZE translates to tab_size", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, \"3\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "154f2ad185198fb173a7cf6d6bb74634", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_5.java", "commitBeforeChange": "886d0f0c1c856616883aceae38186164d207f2a8", "commitAfterChange": "3bb52dd94a6650dc05eccd3db55f82a70954db23", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected Map getCompilerOptions()", "signatureAfterChange": "  \tprotected Map getCompilerOptions()", "diff": ["-\t\toptions.put(CompilerOptions.OPTION_DocCommentSupport, this.localDocCommentSupport);", "+\t\toptions.put(CompilerOptions.OPTION_DocCommentSupport, this.docCommentSupport);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "155c74becf1b0b59683a59f504e19896", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/SubTypeSearchJob.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public boolean search(IIndex index, IProgressMonitor progressMonitor)", "signatureAfterChange": " public boolean search(Index index, IProgressMonitor progressMonitor)", "diff": ["-public boolean search(IIndex index, IProgressMonitor progressMonitor) {", "+public boolean search(Index index, IProgressMonitor progressMonitor) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "155dc41aa9472373576db596567400a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void markAsComparedEqualToNull(VariableBinding local)", "signatureAfterChange": "  public void markAsComparedEqualToNull(LocalVariableBinding local)", "diff": ["-public void markAsComparedEqualToNull(VariableBinding local) {", "+public void markAsComparedEqualToNull(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1591c9fb63bc9a0843898136740ad64d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "df87c2560fe3bce20e14bfdb7337144b19c14fa8", "commitAfterChange": "5a3d328b2496c78f0c2523c40f93d4e1fd7a847e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\tfinal Object newLineElseIf  = settings.get(JavaCore.FORMATTER_NEWLINE_CONTROL);", "+\t\tfinal Object newLineElseIf  = settings.get(JavaCore.FORMATTER_NEWLINE_ELSE_IF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "159a9b2bb27645bf9cb2ee19b082e2d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "25d057e481a8674bd29dd96dfbc223d170a5d43f", "commitAfterChange": "addbb66dfc65753fddbe6114fef5f3dfb7e5200c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": "  private MethodBinding createMethod(IBinaryMethod method, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-\t\tSignatureWrapper wrapper = new SignatureWrapper(methodSignature, true);", "+\t\tSignatureWrapper wrapper = new SignatureWrapper(methodSignature, use15specifics);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15b611aba642e2f7c2b512c251c54079", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "32d92c75e213c7276019a1d5b0a473480fced46d", "commitAfterChange": "fe9510f4bcd0afb94bc93e2f0edd0d080cdaede0", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getResolvedClasspath(\r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getResolvedClasspath(\r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError)\r \t\tthrows JavaModelException", "diff": ["-\t\t\t\t\t\tIMarker.SEVERITY_WARNING,\r", "+\t\t\t\t\t\tIMarker.SEVERITY_ERROR,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15c181fc5efece86d72b88fb32a424e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "b2f0a8b127af6a9075ca1277eb658fa94ec4e348", "commitAfterChange": "7adec053b010214f8fd19dd519bb81d0c9560117", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": " \tpublic boolean visit(EnumConstantDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumConstantDeclaration node)", "diff": ["-\t\t\tpos= doVisit(node, EnumConstantDeclaration.ARGUMENTS_PROPERTY, 0);", "+\t\t\tpos= doVisit(node, EnumConstantDeclaration.ARGUMENTS_PROPERTY, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15d0edb35a5ee1fbf4f77dfcb48d45c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic final boolean needClassInitMethod()", "signatureAfterChange": " \tpublic final boolean needClassInitMethod()", "diff": ["-\t\tif (kind() == IGenericType.INTERFACE)", "+\t\tif (kind() == IGenericType.INTERFACE_DECL)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15dbc5dd1bfb329811e28dd787221cf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeHierarchyOperation.java", "commitBeforeChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "commitAfterChange": "da25131cabd17a48ed55149d76a1e2be2aabb378", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public CreateTypeHierarchyOperation(IType element, IWorkingCopy[] workingCopies, IJavaSearchScope scope, boolean computeSubtypes) throws JavaModelException", "signatureAfterChange": " public CreateTypeHierarchyOperation(IType element, ICompilationUnit[] workingCopies, IJavaSearchScope scope, boolean computeSubtypes) throws JavaModelException", "diff": ["-public CreateTypeHierarchyOperation(IType element, IWorkingCopy[] workingCopies, IJavaSearchScope scope, boolean computeSubtypes) throws JavaModelException {", "+public CreateTypeHierarchyOperation(IType element, ICompilationUnit[] workingCopies, IJavaSearchScope scope, boolean computeSubtypes) throws JavaModelException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15ed5c5c5847c19b0e5d9c74f4cef560", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "88795aba5c6395b6275870f2d78f89c918f0b88e", "commitAfterChange": "2778a965ba1e30dc1a115e4e03837a51f2d404df", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprotected boolean verifyEndLine(int textPosition)", "signatureAfterChange": " \tprotected boolean verifyEndLine(int textPosition)", "diff": ["-\t\t\t\t\tpushText(textPosition, this.starPosition);", "+\t\t\t\t\tpushText(textPosition, this.index);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15f43656320827c94b3ed245bcdf18b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["-\t\treturn (fieldDeclaration.bits & ASTNode.HasLocalTypeMASK) != 0; // continue only if it has local type;", "+\t\treturn (fieldDeclaration.bits & ASTNode.HasLocalType) != 0; // continue only if it has local type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15f67d19b8b0fe21d09b637950e1b8e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "e173f77ccd0067cc5ddcb6d9e15b204243baff15", "commitAfterChange": "3c1df96cd104b0fc430e4dc2bba86da9035261e4", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration enumConstant, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(FieldDeclaration enumConstant, MethodScope scope)", "diff": ["-\t\t\tformatTypeOpeningBrace(enum_constant_brace, this.preferences.insert_space_before_opening_brace_in_enum_constant, typeDeclaration);", "+\t\t\tformatTypeOpeningBraceForEnumConstant(enum_constant_brace, this.preferences.insert_space_before_opening_brace_in_enum_constant, typeDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16089c09c1c7b4178210e746fdb12b42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5ab1b44e840f5c63c769a4409a1d1ee2ee2b555d", "commitAfterChange": "180e4e45746dd1c7939f8d071838acd40ff207da", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public JavaSearchMatch newTypeReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "signatureAfterChange": "  public SearchMatch newTypeReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "diff": ["-public JavaSearchMatch newTypeReferenceMatch(", "+public SearchMatch newTypeReferenceMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160f405b0d0d59ac7bdfe1ed15fd602c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileWorkingCopy.java", "commitBeforeChange": "a601b6b1bd0055831cf914eda4a394af5ff40421", "commitAfterChange": "aae3a2ae7793bc4970c4033658428e24ab5d11f5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic CompilationUnitOwner getOwner()", "signatureAfterChange": " \tpublic WorkingCopyOwner getOwner()", "diff": ["-\tpublic CompilationUnitOwner getOwner() {", "+\tpublic WorkingCopyOwner getOwner() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "162455b2f0f351a2dbc214b4c7b42b62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AllJavaModelTests.java", "commitBeforeChange": "a520fbebd0fffdd9ae00eeb9ec609a81241ec8bb", "commitAfterChange": "afe8e7c03c9e057a9ab6bf025b43a423a4494448", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["-\tTestCase.ONLY_SUFFIX = null;", "+\tTestCase.RUN_ONLY_ID = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "162cca0a4d6da43bb8a13b036a97e7b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationMirrorImpl.java", "commitBeforeChange": "ca3904810f95e1bcd38fe30169e6be65df9fab10", "commitAfterChange": "8d889a3eb8b924cc60e70fa9d37c9ce9262cf8ad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic Map<? extends ExecutableElement, ? extends AnnotationValue> getElementValuesWithDefaults()", "signatureAfterChange": " \tpublic Map<? extends ExecutableElement, ? extends AnnotationValue> getElementValuesWithDefaults()", "diff": ["-\t\t\tnew HashMap<ExecutableElement, AnnotationValue>();", "+\t\t\tnew LinkedHashMap<ExecutableElement, AnnotationValue>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1634e7d37c3b0ced4aedfc8f1b5647cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "163712b76b89030419d3acbcbe3ec911", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void testBug153133() throws JavaModelException", "signatureAfterChange": " public void testBug153133() throws JavaModelException", "diff": ["-\t\tremoveLibraryEntry(new Path(\"/JavaSearchBugs/lib/b148215.jar\"));", "+\t\tremoveClasspathEntry(new Path(\"/JavaSearchBugs/lib/b148215.jar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "164c84293ed3208f59a95b080e70cf44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementsOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tCompilationUnit copy = (CompilationUnit) fElementsToProcess[0];", "+\t\t\tCompilationUnit copy = (CompilationUnit) elementsToProcess[0];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16578101ddf49274c5a602400c0e15c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  public void test046() throws JavaModelException", "signatureAfterChange": "  public void test046() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "165f283c4162b0afe8a73eac51beaf2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "79620cc5a2ab93e8afb2f50dfb60d3aac3ac52a1", "commitAfterChange": "bb83bb6bb9594ac07e759b1e208acbe513439625", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException", "signatureAfterChange": " public final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException", "diff": ["-\t\treturn ScannerHelper.isWhitespace(this.currentCharacter);", "+\t\treturn CharOperation.isWhitespace(this.currentCharacter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1661a465ce6de19dd545bbd520945454", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "14cad0d7bddaa086f861878a7a7743e39b668065", "commitAfterChange": "4de0f743b4a496e91904e5bc8b1a21757a23c5f6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  protected Requestor getRequestor(IProblemFactory problemFactory, boolean generateOutPut)", "signatureAfterChange": "  protected Requestor getRequestor(IProblemFactory problemFactory, boolean generateOutPut)", "diff": ["-\treturn new Requestor(problemFactory, OUTPUT_DIR.endsWith(File.separator) ? OUTPUT_DIR : OUTPUT_DIR + File.separator, true);", "+\treturn new Requestor(problemFactory, OUTPUT_DIR.endsWith(File.separator) ? OUTPUT_DIR : OUTPUT_DIR + File.separator, generateOutPut);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16661f690a9232ea5d9477147b6b302a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "\r \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": "\r \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\t\tDeltaProcessor.checkProjectPropertyFileUpdate(delta, null); // will close project if affected by the property file change\r", "+\t\t\t\t\t\tDeltaProcessor.performPreBuildCheck(delta, null); // will close project if affected by the property file change\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16828a734ae93a88e049363a42a847ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationCompletionParserTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(AnnotationCompletionParserTest.class);", "+\treturn buildAllCompliancesTestSuite(AnnotationCompletionParserTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16968a804c615095599817ad73701d3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "030eb4fda54a6751c1b822374d11bd8e8163881c", "commitAfterChange": "ec1201be6eb9490fec9fdaa6f4ea5d677aacc407", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void addSyntheticFieldReadAccessMethod(SyntheticMethodBinding methodBinding)", "signatureAfterChange": " \tpublic void addSyntheticFieldReadAccessMethod(SyntheticMethodBinding methodBinding)", "diff": ["-\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tint attributeNumber = generateMethodInfoAttributes(methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16a7f9beca82acb68b3488c86284c61a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void test_parameter_specification_inheritance_008()", "signatureAfterChange": " public void test_parameter_specification_inheritance_008()", "diff": ["-\toptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\toptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16af190637d178834546ad31c3d8bfae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "6f02ff89bd237cb51746120df758993eba407273", "commitAfterChange": "66f427e04d93bd85a2e18dda798afd4b18637e27", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testCustomizedBuffer() throws JavaModelException", "signatureAfterChange": " public void testCustomizedBuffer() throws JavaModelException", "diff": ["-\t\tassertTrue(\"Unexpected buffer\", ((IOpenable)customizedCopy).getBuffer() instanceof Buffer);", "+\t\tassertTrue(\"Unexpected buffer\", ((IOpenable)customizedCopy).getBuffer() instanceof TestBuffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16e7cd112e4f4f496c4d21d89b97f549", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "1e3d7a95c39c7aac1cb5e09a719efdb30a9bf701", "commitAfterChange": "1df126b77b08d354ebfd5eda6a44830d9266b61e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t\tprotected void writeLine() throws CoreException", "signatureAfterChange": " \t\tprotected void writeLine() throws CoreException", "diff": ["-\t\t\t\t\tIJavaElement parent = localVar.getParent();", "+\t\t\t\t\tIJavaElement parent = localVar.getDeclaringMember();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16ed45ce7f8f767bc43bc6812aca6929", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "d50f599c69eb795e78c16e3acf0ec69b29313628", "commitAfterChange": "2d29c79891a705ebdda86325f5eda79a45a41b75", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public void open(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "signatureAfterChange": "\r public void open(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "diff": ["-\tif (fDestroyed) {\r", "+\tif (isDestroyed) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173c017d4f13a915784f319189a47197", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationExpression.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17506dc8eb7d01d8ca22e2ed87c27208", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic boolean visit(Assignment assignment, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Assignment assignment, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameEQUAL, this.preferences.insert_space_before_assignment_operators);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1755ea749f5361f5ab24b2bb6d0a939b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected JarPackageFragmentRoot(IResource resource, IJavaProject project)", "signatureAfterChange": " \tprotected JarPackageFragmentRoot(IResource resource, JavaProject project)", "diff": ["-\tprotected JarPackageFragmentRoot(IResource resource, IJavaProject project) {", "+\tprotected JarPackageFragmentRoot(IResource resource, JavaProject project) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17639bb3f993b8a2392fdc5fcb598ac0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "7bf89e29c34a348a2ed388f7cdb6c1016941cf61", "commitAfterChange": "cd5adcef3921beea7df4f6703ab58225bdb4ec39", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration, TypeDeclaration typeDecl)", "signatureAfterChange": "  \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration, AbstractTypeDeclaration typeDecl)", "diff": ["+\tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration, AbstractTypeDeclaration typeDecl) {", "-\t", "-\tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration, TypeDeclaration typeDecl) {", "-\t\t// add body declaration in the lexical order", "-\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration[] members = typeDeclaration.memberTypes;", "-\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields = typeDeclaration.fields;", "-\t\torg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration[] methods = typeDeclaration.methods;", "-\t\t", "-\t\tint fieldsLength = fields == null? 0 : fields.length;", "-\t\tint methodsLength = methods == null? 0 : methods.length;", "-\t\tint membersLength = members == null ? 0 : members.length;", "-\t\tint fieldsIndex = 0;", "-\t\tint methodsIndex = 0;", "-\t\tint membersIndex = 0;", "-\t\t", "-\t\twhile ((fieldsIndex < fieldsLength)", "-\t\t\t|| (membersIndex < membersLength)", "-\t\t\t|| (methodsIndex < methodsLength)) {", "-\t\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration nextFieldDeclaration = null;", "-\t\t\torg.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration nextMethodDeclaration = null;", "-\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration nextMemberDeclaration = null;", "-\t\t", "-\t\t\tint position = Integer.MAX_VALUE;", "-\t\t\tint nextDeclarationType = -1;", "-\t\t\tif (fieldsIndex < fieldsLength) {", "-\t\t\t\tnextFieldDeclaration = fields[fieldsIndex];", "-\t\t\t\tif (nextFieldDeclaration.declarationSourceStart < position) {", "-\t\t\t\t\tposition = nextFieldDeclaration.declarationSourceStart;", "-\t\t\t\t\tnextDeclarationType = 0; // FIELD", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (methodsIndex < methodsLength) {", "-\t\t\t\tnextMethodDeclaration = methods[methodsIndex];", "-\t\t\t\tif (nextMethodDeclaration.declarationSourceStart < position) {", "-\t\t\t\t\tposition = nextMethodDeclaration.declarationSourceStart;", "-\t\t\t\t\tnextDeclarationType = 1; // METHOD", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (membersIndex < membersLength) {", "-\t\t\t\tnextMemberDeclaration = members[membersIndex];", "-\t\t\t\tif (nextMemberDeclaration.declarationSourceStart < position) {", "-\t\t\t\t\tposition = nextMemberDeclaration.declarationSourceStart;", "-\t\t\t\t\tnextDeclarationType = 2; // MEMBER", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tswitch (nextDeclarationType) {", "-\t\t\t\tcase 0 :", "-\t\t\t\t\tif (nextFieldDeclaration.getKind() == AbstractVariableDeclaration.ENUM_CONSTANT) {", "-\t\t\t\t\t\ttypeDecl.bodyDeclarations().add(convert(nextFieldDeclaration));", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcheckAndAddMultipleFieldDeclaration(fields, fieldsIndex, typeDecl.bodyDeclarations());", "-\t\t\t\t\t}", "-\t\t\t\t\tfieldsIndex++;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase 1 :", "-\t\t\t\t\tmethodsIndex++;", "-\t\t\t\t\tif (!nextMethodDeclaration.isDefaultConstructor() && !nextMethodDeclaration.isClinit()) {", "-\t\t\t\t\t\ttypeDecl.bodyDeclarations().add(convert(nextMethodDeclaration));", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase 2 :", "-\t\t\t\t\tmembersIndex++;", "-\t\t\t\t\tASTNode node = convert(nextMemberDeclaration);", "-\t\t\t\t\tif (node == null) {", "-\t\t\t\t\t\ttypeDecl.setFlags(typeDecl.getFlags() | ASTNode.MALFORMED);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\ttypeDecl.bodyDeclarations().add(node);", "-\t\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\tconvert(typeDeclaration.javadoc, typeDecl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1775deb93bccadb9f98082d338d4c58d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic HierarchyScope(IType type) throws JavaModelException", "signatureAfterChange": " \tpublic HierarchyScope(IType type) throws JavaModelException", "diff": ["-\t\t\t\t\t+ \".class\";//$NON-NLS-1$", "+\t\t\t\t\t+ SUFFIX_STRING_class;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1792367f8971f63665fd10a909c636a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "30f95fb4ebb82c4f1cdb1fd9e5630fe8b392b9dd", "commitAfterChange": "79595bc8e3c8f30e8c21788264b1a2858fc4a5c5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void enterField( \tint declarationStart, \tint modifiers, \tchar[] type, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd)", "signatureAfterChange": " public void enterField( \tint declarationStart, \tint modifiers, \tchar[] type, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd)", "diff": ["-\t\tIField handle = null;", "+\t\tSourceField handle = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1796725600e173517bbb3fdfb1c5cd54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefClassErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefClassErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "179e868e7765d53e7b94b47edb24816f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void test010() throws JavaModelException", "signatureAfterChange": " public void test010() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17aa5529064f5f32c081f16a5b5647a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void saveIndex(Index index) throws IOException", "signatureAfterChange": " public void saveIndex(Index index) throws IOException", "diff": ["-\t\t\tJobManager.verbose(\"-> saving index \" + index.getIndexFile()); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"-> saving index \" + index.getIndexFile()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b7800103b7d0215a93759d2c828238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "eea07a84953845b5818f3df6570485a8ce414c20", "commitAfterChange": "f03a3c2060092275ebe3df7a9969a3494a584807", "methodNumberBeforeChange": 574, "methodNumberAfterChange": 576, "signatureBeforeChange": " public void testCompletionBasicMethodDeclaration1() throws JavaModelException", "signatureAfterChange": " public void testCompletionBasicMethodDeclaration1() throws JavaModelException", "diff": ["-\t\t\t\"equals[METHOD_DECLARATION]{public boolean equals(Object obj), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXACT_NAME + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"equals[METHOD_DECLARATION]{public boolean equals(Object obj), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_EXACT_NAME + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17c2bc69aa8f11f4ea67c6d9c912df10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "519f65f0f5344992cd2a44d698edb1295f3c3a67", "commitAfterChange": "1b7858c417f0a2eea0d6f609fa41df3128fd97dd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic boolean hasSubstitutedReturnType()", "signatureAfterChange": " \tpublic boolean hasSubstitutedReturnType()", "diff": ["-\t\tif (this.wasInferred) ", "+\t\tif (this.inferredReturnType) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17d577123472fece2e0d98a025e95078", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "\t\t \t \tpublic void test087()", "signatureAfterChange": "\t\t \t \tpublic void test087()", "diff": ["-\t\tcustomOptions.put(CompilerOptions.OPTION_ReportUnsafeTypeOperation, CompilerOptions.ERROR);\t\t\t    ", "+\t\tcustomOptions.put(CompilerOptions.OPTION_ReportUncheckedTypeOperation, CompilerOptions.ERROR);\t\t\t    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17d68db1712c714859f1ea4e3c5b319d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "87058c7b8de4589df280101b3da29cf4946e087b", "commitAfterChange": "54978bea547a77e401fedd9bbb6f5ac5bee26141", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public static IPackageFragmentRoot createJarPackageFragmentRootFrom(IFile file, IJavaProject project)", "signatureAfterChange": "\r public static IPackageFragmentRoot createJarPackageFragmentRootFrom(IFile file, IJavaProject project)", "diff": ["-\t\tIClasspathEntry[] entries = ((JavaProject)project).getExpandedClasspath(true);\r", "+\t\tIClasspathEntry[] entries = ((JavaProject)project).getResolvedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17f5382dfd5f4807c89485e19e59fb51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public synchronized Index getIndexForUpdate(IPath containerPath, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndexForUpdate(IPath containerPath, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-\tIPath indexLocation = computeIndexLocation(containerPath);", "+\tIndexLocation indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17fb0d7be81fdf74f0824c0b18fd5d0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence, TypeDeclaration declaringType)", "signatureAfterChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence, TypeDeclaration declaringType)", "diff": ["-\t\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\t\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18127c90e60c65c40450a281592ee37b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic void testMissingCommentsDefaults()", "signatureAfterChange": " \tpublic void testMissingCommentsDefaults()", "diff": ["-\t\trunConformTest(MissingComments);", "+\t\trunConformTest(MISSING_COMMENTS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18154cc3b1d72671e0c88d5fa717574e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteResourceElementsOperation.java", "commitBeforeChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "commitAfterChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void processElement(IJavaElement element) throws JavaModelException", "signatureAfterChange": " protected void processElement(IJavaElement element) throws JavaModelException", "diff": ["-\t\t\tthrow new JavaModelException(new JavaModelStatus(JavaModelStatus.INVALID_ELEMENT_TYPES, element));", "+\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_ELEMENT_TYPES, element));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1819e29717fd1d33571a80efa4481287", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic boolean visit(Continue continueStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ContinueStatement continueStatement, BlockScope scope)", "diff": ["-\tpublic boolean visit(Continue continueStatement, BlockScope scope) {", "+\tpublic boolean visit(ContinueStatement continueStatement, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1821112414c2bb19b20056dc1e228e82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "d50f599c69eb795e78c16e3acf0ec69b29313628", "commitAfterChange": "2d29c79891a705ebdda86325f5eda79a45a41b75", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public boolean isBasedOn(IResource resource)", "signatureAfterChange": "\r public boolean isBasedOn(IResource resource)", "diff": ["-\tif (fDestroyed) {\r", "+\tif (isDestroyed) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "183f13a3af5a6e660dbb3d999d368c09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "74638c6ba2ff749df371c0b7b5765b684e3c7bae", "commitAfterChange": "b7b6a243304e66fe9d0d477b8b6306031c8fd484", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-\t\t\t\tscope.problemReporter().forbiddenReference(type, this, restriction.getMessageTemplate(), restriction.getSeverity());", "+\t\t\t\tscope.problemReporter().forbiddenReference(type, this, restriction.getMessageTemplate(), restriction.getProblemId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "183ffc7decb755fc222a16c651b850a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "28020d0b0ceb0e665c1071bfd968796eb9e2e394", "commitAfterChange": "def990b8509828ed437909a92c80eeb89428931a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void setDefaultSettings()", "signatureAfterChange": "  \tpublic void setDefaultSettings()", "diff": ["-\t\tthis.insert_space_before_expression_in_return = true;", "+\t\tthis.insert_space_before_parenthesized_expression_in_return = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1846e937cbd629aab2de87d5a17da5f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperConstructorInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tASTNode clone0(AST target)", "signatureAfterChange": " \tASTNode clone0(AST target)", "diff": ["-\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18661ca50d18f21c2d7cb1bbc596b5bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void testMissingTagsWithInvalidTagsOption()", "signatureAfterChange": " \tpublic void testMissingTagsWithInvalidTagsOption()", "diff": ["-\t\trunConformTest(MissingTags);", "+\t\trunConformTest(MISSING_TAGS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187878266d68276601e08ecea711f682", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 446, "methodNumberAfterChange": 446, "signatureBeforeChange": " \tpublic void test427()", "signatureAfterChange": " \tpublic void test427()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187f41a497fecb34b5444b8bca0337d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void checkClassFile(String compliance, String className, String source, String expectedOutput)", "signatureAfterChange": "  \tprivate void checkClassFile(String compliance, String className, String source, String expectedOutput)", "diff": ["-\t\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\t\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.SYSTEM);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1888e5eb53c003e19418ab7c3934e5e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SingleTypeRequestor.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public IType getType()", "signatureAfterChange": " public IType getType()", "diff": ["-\treturn fElement;", "+\treturn element;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18982e6f39c58a9ffcae91b05055c3c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "fa66834f9f4ec8541916655f7830d28cd8630692", "commitAfterChange": "47466daad88774b9542c26be2fa2eb0f129ed0bd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate void checkNullComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse)", "signatureAfterChange": " \tprivate void checkNullComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse)", "diff": ["-\t\tboolean contextualCheckEquality = checkEquality ^ ((flowContext.tagBits & FlowContext.INSIDE_NEGATIVE_ASSERT) != 0);", "+\t\tboolean contextualCheckEquality = checkEquality ^ ((flowContext.tagBits & FlowContext.INSIDE_NEGATION) != 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "189fafbb11b868561235b78b4b8832f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "3716c54055d7a4beea6cb3963f6df24a75c62bb6", "commitAfterChange": "1784eadce870daea87767c81fcd5cae9b86d1dff", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "\r protected void pushBlockInvocationPtr()", "signatureAfterChange": "\r protected void pushBlockInvocationPtr()", "diff": ["-\t\tint[] oldStack = this.labelCounterStack;\r", "+\t\tint[] oldStack = this.blockInvocationStack;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18a435f9e4ede9bf18ad458e44e82cd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void testAnnotations4() throws JavaModelException", "signatureAfterChange": " public void testAnnotations4() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18ab7425c9c9223d14d7e4834549b3b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TestAll.java", "commitBeforeChange": "b21cadb5eae53d9f84dce9f073b5350a267b6ad6", "commitAfterChange": "09b5bcfabb25c2c9040a9d902d7f8e5151952519", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t    tests_1_5.add(VarargTest.class);", "+\t    tests_1_5.add(VarargsTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18ae4142e51f72e05ea52bf1fa490cf9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected TypeAnnotationWalker toNextDetail(int detailKind)", "signatureAfterChange": " \tprotected ITypeAnnotationWalker toNextDetail(int detailKind)", "diff": ["-\tprotected TypeAnnotationWalker toNextDetail(int detailKind) {", "+\tprotected ITypeAnnotationWalker toNextDetail(int detailKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18af840925de4fe8bc783db34b2c1f4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 233, "methodNumberAfterChange": 233, "signatureBeforeChange": " final public void jsr_w(Label lbl)", "signatureAfterChange": " final public void jsr_w(BranchLabel lbl)", "diff": ["-final public void jsr_w(Label lbl) {", "+final public void jsr_w(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18c7d70e4acd6e603e9e3bbee5737234", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testDeleteBeginning() throws CoreException", "signatureAfterChange": " public void testDeleteBeginning() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18c8dd563507151e1773934a8dc31b49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  public void test055() throws JavaModelException", "signatureAfterChange": "  public void test055() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18d3ce0221c2e38d1deeb067f6d70a81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 117, "signatureBeforeChange": " \tpublic boolean visit(ExtraDimension node)", "signatureAfterChange": " \tpublic boolean visit(Dimension node)", "diff": ["+\tpublic boolean visit(Dimension node) {", "+\t\treturn visitNode(node);", "+\t}", "-\t}", "-\tpublic boolean visit(ExtraDimension node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f467ff6a6f2af12743d2db4e0a7848", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c6a89cac15445646187d10a54bec662eb0dc6e5c", "commitAfterChange": "4fffe7a6b4f3fe87b8b0d05b68d3cdb31ecb7df4", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["-\t\tthis.scribe.printComment();", "+\t\tthis.scribe.printLastComment();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1906ce30fa09e83c6b1879e22adfcf04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \t \tprivate void createDomASTs()", "signatureAfterChange": " \t \tprivate void createDomASTs()", "diff": ["-\t\tif( _astUnits != null || _files == null) return;", "+\t\tif( _astUnits != null || _filesWithAnnotation == null) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190af46b5b51e97e3fb1d0d7322503b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tpublic boolean visit(SynchronizedStatement node)", "signatureAfterChange": " \tpublic boolean visit(SuperMethodReference node)", "diff": ["+\t */", "+\tpublic boolean visit(SuperMethodReference node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190ff27899c944f738ea3bf73c04b103", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "6cd0099c2021e34815eaba987a586ae52dacf569", "commitAfterChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic ReferenceBinding findGroundTargetTypeForElidedLambda(BlockScope blockScope, ParameterizedTypeBinding withWildCards)", "signatureAfterChange": "  \tpublic ReferenceBinding findGroundTargetTypeForElidedLambda(BlockScope blockScope, ParameterizedTypeBinding withWildCards)", "diff": ["-\t\treturn blockScope.environment().createParameterizedType(genericType, types, genericType.enclosingType());", "+\t\treturn blockScope.environment().createParameterizedType(genericType, types, withWildCards.enclosingType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "191ea766a44ec263bd4ba10016dd9415", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tprivate void findKeywords(char[] keyword, char[][] choices, boolean canCompleteEmptyToken, boolean staticFieldsAndMethodOnly)", "signatureAfterChange": " \tprivate void findKeywords(char[] keyword, char[][] choices, boolean canCompleteEmptyToken, boolean staticFieldsAndMethodOnly)", "diff": ["-\t\t\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.KEYWORD, this.actualCompletionPosition);", "+\t\t\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.KEYWORD, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "192727fa689d8395ac7926b92bbd0ef4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "75441be0b99854572d42112e17611cb260336efd", "commitAfterChange": "803cc74406225683d2f07586ab03fc056bc3963e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void testPerfParserFiles() throws InvalidInputException, IOException", "signatureAfterChange": " \tpublic void testPerfParserFiles() throws InvalidInputException, IOException", "diff": ["-\t\tparseFiles(100000L);", "+\t\tparseFiles(FILE_SIZE_THRESHOLD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1933baeeb2244b5c4185e6cc5edcbfe6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "signatureAfterChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "diff": ["-\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this, false /*do not resolve hidden field*/);", "+\t\tBinding existingVariable = scope.getBinding(name, Binding.VARIABLE, this, false /*do not resolve hidden field*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1938dffb97d0495f07b7ef47d4928953", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected boolean resourceExists(IResource underlyingResource)", "signatureAfterChange": " \tprotected boolean resourceExists(IResource underlyingResource)", "diff": ["- */", "-protected boolean resourceExists(IResource underlyingResource) {", "-\tif (underlyingResource == null) {", "-\t\treturn ", "-\t\t\tJavaModel.getTarget(", "-\t\t\t\tgetPath(), // don't make the path relative as this is an external archive", "-\t\t\t\ttrue) != null;", "-\t} else {", "-\t\treturn super.resourceExists(underlyingResource);", "+\t */", "+\tprotected boolean resourceExists(IResource underlyingResource) {", "+\t\tif (underlyingResource == null) {", "+\t\t\treturn ", "+\t\t\t\tJavaModel.getExternalTarget(", "+\t\t\t\t\tgetPath()/*don't make the path relative as this is an external archive*/, ", "+\t\t\t\t\ttrue/*check existence*/) != null;\t", "+\t\t} else {", "+\t\t\treturn super.resourceExists(underlyingResource);", "+\t\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19572bcbe959586f97910874bae2abc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "signatureAfterChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceType(), computePackageFrom(compoundName));\r", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "196c0487acce301aa29c74bf9a0853c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((this.bits & IsReachableMASK) == 0) {", "+\t\tif ((this.bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1976de8f09fc5570adb8af3cbc0fcad0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void testBug144866() throws JavaModelException", "signatureAfterChange": " public void testBug144866() throws JavaModelException", "diff": ["-\t\t\"EXAMPLE[FIELD_REF]{EXAMPLE, Lbugs.b144866.BasicTestBugs;, I, EXAMPLE, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"EXAMPLE[FIELD_REF]{EXAMPLE, Lbugs.b144866.BasicTestBugs;, I, EXAMPLE, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197d8d9d60ccd4b3fc7e3849a8dc8386", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "diff": ["-\t\tif ((operationTypeID = (implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4) == T_String) {", "+\t\tif ((operationTypeID = (implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4) == T_JavaLangString) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "197f7c53a12fac7769e27e008799ac61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "82dc67de142f757f6098e678017a2b32f752c9b7", "commitAfterChange": "5249d37677c0ce4d66ab262efb5c3dd4aa089796", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 167, "signatureBeforeChange": " public void inheritedMethodsHaveIncompatibleReturnTypes(SourceTypeBinding type, MethodBinding[] inheritedMethods, int length)", "signatureAfterChange": " public void inheritedMethodsHaveIncompatibleReturnTypes(SourceTypeBinding type, MethodBinding[] inheritedMethods, int length)", "diff": ["-\t\tIProblem.IncompatibleReturnType,", "+\t\tIProblem.InheritedIncompatibleReturnType,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "198e5ec4e2699bf4c1877d4d6e3d0ce0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, boolean includeReferencedProjects)", "signatureAfterChange": " \tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, boolean includeReferencedProjects)", "diff": ["-\t\treturn SearchBasicEngine.createJavaSearchScope(elements, includeReferencedProjects);", "+\t\treturn BasicSearchEngine.createJavaSearchScope(elements, includeReferencedProjects);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1991e0c5c61980c5a92ac6f6bf6fa670", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, ICompilationUnit cu) throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS4);", "+\t\tASTParser parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19beda3b8a8b33ff8fb157a18d075da4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testDeleteMiddle() throws CoreException", "signatureAfterChange": " public void testDeleteMiddle() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19eb5276a22d64bc792a737634d0a5ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "75441be0b99854572d42112e17611cb260336efd", "commitAfterChange": "803cc74406225683d2f07586ab03fc056bc3963e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testPerfScannerFiles() throws InvalidInputException, IOException", "signatureAfterChange": " \tpublic void testPerfScannerFiles() throws InvalidInputException, IOException", "diff": ["-//\t\tscanFiles(100000L, 0);", "-\t\tscanFiles(100000L, 1);", "+//\t\tscanFiles(FILE_SIZE_THRESHOLD, 0);", "+\t\tscanFiles(FILE_SIZE_THRESHOLD, 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ef1d88be30f2ef2093f11ca0b8d50e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic boolean isExternal()", "signatureAfterChange": " \tpublic boolean isExternal()", "diff": ["-\t\treturn getResource() == null;", "+\t\treturn resource() == null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19f33e7f8ef710bb0f534cce7f6793b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "54f3e7caaa3150d871f7d11c1e610492c84f6dde", "commitAfterChange": "f700051affab74804180d3a8bb296f6cabd751a0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tprivate ConstraintFormula combineSuperAndSub(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": "  \tprivate ConstraintTypeFormula combineSuperAndSub(TypeBound boundS, TypeBound boundT)", "diff": ["-\tprivate ConstraintFormula combineSuperAndSub(TypeBound boundS, TypeBound boundT) {", "+\tprivate ConstraintTypeFormula combineSuperAndSub(TypeBound boundS, TypeBound boundT) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19ffd351b545fd87f33fa56bd3487fae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "5b1a9dba806424416a6f5ec8efc329e5fdace03c", "commitAfterChange": "6f37c2ba7b93e48dfb1ea5d77d4a2519799074c6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate synchronized IFolder addFolder(IPath externalFolderPath, IProject externalFoldersProject)", "signatureAfterChange": "  \tprivate IFolder addFolder(IPath externalFolderPath, IProject externalFoldersProject)", "diff": ["-\tprivate synchronized IFolder addFolder(IPath externalFolderPath, IProject externalFoldersProject) {", "-\t\tHashMap knownFolders = getFolders();", "+\tprivate IFolder addFolder(IPath externalFolderPath, IProject externalFoldersProject) {", "+\t\tMap knownFolders = getFolders();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a14813a79eff2d0423ac02bbbcd6361", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a1d06f3d285160a5a7372df032d636b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "5c72ddaa5e79d3bcf534f5780ca88a7a97636e7a", "commitAfterChange": "488a4d6e7cacdc0e333c16a8fdbbfb759cc631cd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  protected void storeTasksFor(SourceFile sourceFile, CategorizedProblem[] tasks) throws CoreException", "signatureAfterChange": "  protected void storeTasksFor(SourceFile sourceFile, CategorizedProblem[] tasks) throws CoreException", "diff": ["-\t\t\t\t\tJavaBuilder.GENERATED_BY", "+\t\t\t\t\tJavaBuilder.SOURCE_ID"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a1e911e11d8fe6e0b1b8672c892880f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7ceb09d85452179b42407e05dd48c1ac5747d10a", "commitAfterChange": "cb8d9486d5e5f2bb20f5895e1cd434f7838ce4c6", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void acceptType( \t\tchar[] packageName, \t\tchar[] simpleTypeName, \t\tchar[][] enclosingTypeNames, \t\tint modifiers, \t\tAccessRestriction accessRestriction)", "signatureAfterChange": " \tpublic void acceptType( \t\tchar[] packageName, \t\tchar[] simpleTypeName, \t\tchar[][] enclosingTypeNames, \t\tint modifiers, \t\tAccessRestriction accessRestriction)", "diff": ["-\t\tif (isForbiddenType(packageName, simpleTypeName, enclosingTypeNames)) {", "+\t\tif (isForbidden(packageName, simpleTypeName, enclosingTypeNames)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a3adea23fc46c694d32046e67eb4cb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "commitAfterChange": "74ac0014c1ede0ba61ac73f39089ab641618bf5d", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \t \tprivate String getCurrentLine(String str, int pos)", "signatureAfterChange": " \t \tprivate String getCurrentLine(String str, int pos)", "diff": ["-\t\t\tif (Indents.isLineDelimiterChar(ch)) {", "+\t\t\tif (IndentManipulation.isLineDelimiterChar(ch)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a493933a67e2c2d10ff36c015ac5dd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  \tprivate void findVariableNames(char[] name, TypeReference type , char[][] excludeNames, int kind, int modifiers)", "signatureAfterChange": "  \tprivate void findVariableNames(char[] name, TypeReference type , char[][] excludeNames, int kind, int modifiers)", "diff": ["-\t\t\ttype.resolvedType.problemId() == Binding.NoError){", "+\t\t\ttype.resolvedType.problemId() == ProblemReasons.NoError){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a6dc890630c5fa174dcd91def3728e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " protected void reportDeclaration(ASTNode reference, IJavaElement element, MatchLocator locator, SimpleSet knownTypes) throws CoreException", "signatureAfterChange": " protected void reportDeclaration(ASTNode reference, IJavaElement element, MatchLocator locator, SimpleSet knownTypes) throws CoreException", "diff": ["-\t\tReferenceBinding original = ((ProblemReferenceBinding) typeBinding).original;", "+\t\tReferenceBinding original = ((ProblemReferenceBinding) typeBinding).closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a7d60bef2372cf555282d1ad1c070e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "5a60c39351f6c14c2a71c9dda4e4553c38342cba", "commitAfterChange": "69318a05bafae35ecceb2d1bf0418b5a10ebe216", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, HashtableOfArrayToObject packageFragments, ICompilationUnit[] workingCopies, Map rootToResolvedEntries)", "signatureAfterChange": "  \tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, HashtableOfArrayToObject packageFragments, ICompilationUnit[] workingCopies, Map rootToResolvedEntries)", "diff": ["-\t\t\t\t\t\t\texistingTypes[length] = type;", "+\t\t\t\t\t\t\texistingTypes[existingTypeLength] = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8bf8b46c9a59283d042940542d7f44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \r \tprivate void findMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tTypeBinding receiverType,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \r \tprivate void findMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tTypeBinding receiverType,\r \t\tInvocationSite invocationSite)", "diff": ["-\t\t\tif (options.checkVisibilitySensitive()\r", "+\t\t\tif (options.checkVisibility()\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a8e89cf5aab24381e06123d1fcfdcaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic void generateOptimizedStringConcatenationCreation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "signatureAfterChange": " \t \tpublic void generateOptimizedStringConcatenationCreation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "diff": ["-\t\t\t&& ((bits & ReturnTypeIDMASK) == T_String)) {", "+\t\t\t&& ((bits & ReturnTypeIDMASK) == T_JavaLangString)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a932a54ffb43ff5d284e5deaa8efccf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": "  public void test145() throws JavaModelException", "signatureAfterChange": "  public void test145() throws JavaModelException", "diff": ["-\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a9f7ba0be6b28f0b794c05b2d3f4f08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate void setExtraDimensions(ASTRewrite rewrite, MethodDeclaration methodDecl, int extraDimensions)", "signatureAfterChange": " \tprivate void setExtraDimensions(ASTRewrite rewrite, MethodDeclaration methodDecl, int extraDimensions)", "diff": ["-\t\t\t\tlistRewrite.insertLast(methodDecl.getAST().newExtraDimension(), null);", "+\t\t\t\tlistRewrite.insertFirst(methodDecl.getAST().newExtraDimension(), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aadfe47399ba06e20dd6d48b017811a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "a918bbb4cf3a4000c669b84f18a2f92d8d06a3e0", "commitAfterChange": "1f302d993813c000a34fc149f6b9e736b6557e9b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tMember declaringMember = ((Member)focusType).getInnerMostDeclaringMember();", "+\t\t\t\tMember declaringMember = ((Member)focusType).getOuterMostLocalContext();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ab78dcae87baf7bc6e682fd30f0da9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "5a1719bf0af9420f5608be57209358e2c77d892f", "commitAfterChange": "96bf1a9e2ee14d6938d23f375dc557eb131baf1b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public int match(TypeParameter node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(ReferenceExpression node, MatchingNodeSet nodeSet)", "diff": ["+public int match(ReferenceExpression node, MatchingNodeSet nodeSet) {", "+\t// each subtype should override if needed", "+\treturn IMPOSSIBLE_MATCH;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac198b1b861a859b24aa4362bf4d964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ad6033d0a2b11d9b96fc6d1558edfdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \tpublic Assignment(Expression lhs, Expression expression, int sourceEnd)", "signatureAfterChange": " \t\t \tpublic Assignment(Expression lhs, Expression expression, int sourceEnd)", "diff": ["-\t\tlhs.bits |= IsStrictlyAssignedMASK; // tag lhs as assigned", "+\t\tlhs.bits |= IsStrictlyAssigned; // tag lhs as assigned"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1adbeb70d02ca20c7a69339118f792e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(TextElement node)", "diff": ["+\t */", "+\tpublic boolean visit(TextElement node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1aed2aa7bb9af06506536925274cf353", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  public void test079() throws JavaModelException", "signatureAfterChange": "  public void test079() throws JavaModelException", "diff": ["-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link BasicTestTextIns#BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE_IT+\"}\"", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link BasicTestTextIns#BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+R_DRINRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1af45de6f88b6cf178e2a0d268ac32a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic IJavaElement getHandleFromMemento(StringTokenizer memento, WorkingCopyOwner owner)", "signatureAfterChange": " \tpublic IJavaElement getHandleFromMemento(MementoTokenizer memento, WorkingCopyOwner owner)", "diff": ["-\tpublic IJavaElement getHandleFromMemento(StringTokenizer memento, WorkingCopyOwner owner) {", "+\tpublic IJavaElement getHandleFromMemento(MementoTokenizer memento, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1afc13f789e986defc5f63e68fa396cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "a73c1b70646c33788c416636d54ca7b824b36c44", "commitAfterChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprotected void setUp() throws Exception", "signatureAfterChange": " \t \tprotected void setUp() throws Exception", "diff": ["-\t\tproj.setOption(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, \"4\");", "+\t\tproj.setOption(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, \"4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1afef6b92038588fd6721c9b44f1c671", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "035e81e22d7f5ffa0ef14b6015456b50ec72de9a", "commitAfterChange": "3d4c80327c4bd6f61a1ef852d9f8cb11ff6d9d62", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  protected void initialize()", "signatureAfterChange": "  protected void initialize()", "diff": ["-\tthis.paths = new IPath[1];", "+\tthis.paths = new String[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b112cf49d10e3aa4db9f1daefa28422", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteResourceElementsOperation.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private void deletePackageFragment(IPackageFragment frag) \tthrows JavaModelException", "signatureAfterChange": " private void deletePackageFragment(IPackageFragment frag) \tthrows JavaModelException", "diff": ["-\tIResource res = frag.getCorrespondingResource();", "+\tIResource res = frag.getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b1b582513378bdf66fcdaf756e3fe96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "86c239f2e66a4d986257b0e0acb4d18b2648df10", "commitAfterChange": "0660c8d5b36b733c21ef1069dd1616322b9b5c53", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public ICompilationUnit[] getCompilationUnits() throws JavaModelException", "signatureAfterChange": " public ICompilationUnit[] getCompilationUnits() throws JavaModelException", "diff": ["-\t\treturn fgEmptyCompilationUnitList;", "+\t\treturn NO_COMPILATION_UNITS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b1e977a93d6d26ed07913c04c4a8ed0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\tif ((this.bits & UndocumentedEmptyBlockMASK) != 0) {", "+\t\tif ((this.bits & UndocumentedEmptyBlock) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b28be6f2647b8b35b19414f5b3f1e4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/RangeUtil.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic static boolean containsIgnoredBody(AbstractMethodDeclaration method)", "signatureAfterChange": " \t \tpublic static boolean containsIgnoredBody(AbstractMethodDeclaration method)", "diff": ["-\t\t\t&& (method.modifiers & CompilerModifiers.AccSemicolonBody) == 0;", "+\t\t\t&& (method.modifiers & ExtraCompilerModifiers.AccSemicolonBody) == 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b3364e7b9c78cd22452eb2303c7d709", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "b501a050436f0ed4b21c2887b8c36095ae4a6672", "commitAfterChange": "b1617566bbecda597db8e35043fbdcfac0211c24", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " private void writeCategories(FileOutputStream stream) throws IOException", "signatureAfterChange": " private void writeCategories(FileOutputStream stream) throws IOException", "diff": ["-\t\t\twriteCategoryTable(categoryNames[i], (HashtableOfObject) tables[i], stream);", "+\t\t\twriteCategoryTable(categoryNames[i], (CategoryTable) tables[i], stream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b3af7f7b9f12e731640d3e99b51c689", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testSuggestGetterName001()", "signatureAfterChange": " public void testSuggestGetterName001()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b425432bf9858ea7645584ad4c4b480", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BatchProcessingEnvImpl.java", "commitBeforeChange": "4b460199498c48cda44ce10125aa5901a10bff62", "commitAfterChange": "ccd12469d7fc21a8e1a0a597451a059df56002ad", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic BatchProcessingEnvImpl(BaseAnnotationProcessorManager dispatchManager, Main batchCompiler, \t\t\tString[] commandLineArguments)", "signatureAfterChange": "  \tpublic BatchProcessingEnvImpl(BaseAnnotationProcessorManager dispatchManager, Main batchCompiler, \t\t\tString[] commandLineArguments)", "diff": ["-\t\t\tc = Class.forName(\"org.eclipse.jdt.internal.compiler.tool.EclipseCompiler\"); //$NON-NLS-1$", "+\t\t\tc = Class.forName(\"org.eclipse.jdt.internal.compiler.tool.EclipseCompilerImpl\"); //$NON-NLS-1$", "-\t\t\tJavaFileManager manager = new EclipseFileManager(batchCompiler, batchCompiler.compilerLocale, charset);", "+\t\t\tJavaFileManager manager = new EclipseFileManager(batchCompiler.compilerLocale, charset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b435ee1a842f62b6cc706785173850d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "60105dfcc44d74dc319b1919727afc1b3907fff9", "commitAfterChange": "0747d5e7c6159c917fde8175fc9c67a8bade55fc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void markClose(FlowInfo flowInfo, FlowContext flowContext)", "signatureAfterChange": " \tpublic void markClose(FlowInfo flowInfo, FlowContext flowContext)", "diff": ["-\t\t\tflowContext.markFinallyNullStatus(this.binding, FlowInfo.NON_NULL);", "+\t\t\tflowContext.markFinallyNullStatus(current.binding, FlowInfo.NON_NULL);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b5b381b5b64631481325e4050b90e7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "1d93c592655130ee83ccf569199d32491937354e", "commitAfterChange": "b60bff4501141ce0e7ed5fab43805b77b52b5e19", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public IType getType()", "signatureAfterChange": " public IType getType()", "diff": ["-\treturn this.type;", "+\treturn this.focusType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b68c252442b61842b01f7b6be3a951e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/dom/StandAloneASTParserTest.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void test6() throws IOException", "signatureAfterChange": "  \tpublic void test6() throws IOException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(JLS_LATEST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b7920e9f00587046e64a731daa12cce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "152d18d4cacb9bd3ea7ba43af5713a4d308c0471", "commitAfterChange": "01ebf46478e499b6682d2e0eb34536c095d3cff8", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testTypeRefAll_Allocation() throws CoreException", "signatureAfterChange": " public void testTypeRefAll_Allocation() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, ALLOCATION_EXPRESSION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());", "+\tsearch(\"*\", TYPE, CLASS_INSTANCE_CREATION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ba4ccea972173f806bc08541fc1ff85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testTypeRef_Field() throws CoreException", "signatureAfterChange": " public void testTypeRef_Field() throws CoreException", "diff": ["-\tsearch(setUpTypeRef(0), FIELD_TYPE_DECLARATION_TYPE_REFERENCE);", "+\tsearch(setUpTypeRef(0), FIELD_DECLARATION_TYPE_REFERENCE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ba6f8f033ebe90c4c86c81adc8ba834", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "40839c8ae241bc3756eb5365b207dfbe748c6775", "commitAfterChange": "5b51a72819d5c60012d8b11dca35a367dee2c02a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate Initializer parseSnippeInitializer(char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "signatureAfterChange": " \t \tprivate Initializer parseSnippeInitializer(char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "diff": ["-\t\tparseMethod(fakeAST, actualCompletionPosition);", "+\t\tparseBlockStatements(fakeAST, actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1badb33327c4a2dfa730ba61c490cb0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testBug68757a() throws JavaModelException", "signatureAfterChange": " public void testBug68757a() throws JavaModelException", "diff": ["-\t\t\"OtherType[TYPE_REF]{javadoc.tests.OtherType, javadoc.tests, Ljavadoc.tests.OtherType;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"OtherType[TYPE_REF]{javadoc.tests.OtherType, javadoc.tests, Ljavadoc.tests.OtherType;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bbfac4e0e5d9e458098cd637843d651", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r public  boolean isSourceType()", "signatureAfterChange": "\r \tpublic boolean isSourceType()", "diff": ["-public  boolean isSourceType() {\r", "-\treturn sourceType != null;\r", "-}\r", "+\t */\r", "+\tpublic boolean isSourceType() {\r", "+\t\treturn sourceTypes != null;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bc185fe928bf1cebd51cb4df0093412", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaWorkspaceScope.java", "commitBeforeChange": "cba4a74f046a7c7d43d81e11b279554f1ab8b4ad", "commitAfterChange": "2a01994b0addf3b51b8cc85382b32cfdc277de6c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public JavaWorkspaceScope()", "signatureAfterChange": "\r public JavaWorkspaceScope()", "diff": ["-\t\t\t\tthis.add(javaCore.create(project), false, new Hashtable(2));\r", "+\t\t\t\tthis.add(javaCore.create(project), false, new HashSet(2));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bd9c831e9373e09adf6aa697cf79ac2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 345, "methodNumberAfterChange": 345, "signatureBeforeChange": " \tpublic void test325()", "signatureAfterChange": " \tpublic void test325()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1be5b97e553ee870e6bf8f68da429b57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t\t&& this.binding.declaringClass.id != T_Object) // no change for Object methods", "+\t\t\t\t&& this.binding.declaringClass.id != T_JavaLangObject) // no change for Object methods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1be5d321a1450c0d5d7a75495b48cc0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexSummary.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic int[] getAllBlockNums()", "signatureAfterChange": "\r \tpublic int[] getAllBlockNums()", "diff": ["-\t\t\tblockNums[i] = ((FirstWordInBlock)firstWordsInBlocks.elementAt(i)).blockNum;\r", "+\t\t\tblockNums[i] = ((FirstWordInBlock)firstWordsInBlocks.get(i)).blockNum;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf27bf66fec53fe44f5a10bd4c39965", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "6b41f376eb5bd5fa3046b8ac6fedca194080b0bd", "commitAfterChange": "262490d9212f700275b0f63ee471ae3ff354e58f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\t \tvoid addPotentialMatch(IResource resource, Openable openable)", "signatureAfterChange": "\t \tvoid addPotentialMatch(IResource resource, Openable openable)", "diff": ["-\t\tthis.potentialMatches.add(potentialMatch);", "+\t\tthis.matchSet.add(potentialMatch);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf3155e7cc9e61bedeccd61f8cce481", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " protected void consumeDefaultModifiers()", "signatureAfterChange": " protected void consumeDefaultModifiers()", "diff": ["-\tcheckAnnotation(); // might update modifiers with AccDeprecated", "+\tcheckComment(); // might update modifiers with AccDeprecated"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bf36832079ce2fb51ff1f0bda00cd33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testCreateExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testCreateExcludedCompilationUnit() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c0465016ea9a6154bab61c9d66a8106", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  public void test083() throws JavaModelException", "signatureAfterChange": "  public void test083() throws JavaModelException", "diff": ["-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE_IT+\"}\"", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+R_DRINRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c0a17140b9834e63d2ed13039c2e0ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testCreateResourceExcludedPackage() throws CoreException", "signatureAfterChange": " public void testCreateResourceExcludedPackage() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c4842a08a613ebbfd93a745d4f066eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTestsRequestor2.java", "commitBeforeChange": "2e2135e23ec5738f13780e9b130faac2db0c376b", "commitAfterChange": "3d9ca5323b31c8907d129d4437482cfc3b641c64", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void allowAllRequiredProposals()", "signatureAfterChange": " \t \tpublic void allowAllRequiredProposals()", "diff": ["-\t\t\tfor (int j = CompletionProposal.ANONYMOUS_CLASS_DECLARATION; j <= CompletionProposal.TYPE_IMPORT; j++) {", "+\t\t\tfor (int j = CompletionProposal.ANONYMOUS_CLASS_DECLARATION; j <= CompletionProposal.FIELD_REF_WITH_CASTED_RECEIVER; j++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c6636c7c4c723507fc43fbc3245f0ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 196, "methodNumberAfterChange": 196, "signatureBeforeChange": " \tpublic void test175()", "signatureAfterChange": " \tpublic void test175()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c6a6286f982e0c9f7b4fa6612666535", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tvoid endVisit(DefaultCase defaultCaseStatement, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(DefaultCaseStatement defaultCaseStatement, BlockScope scope);", "diff": ["-\tvoid endVisit(Continue continueStatement, BlockScope scope);", "-\tvoid endVisit(DefaultCase defaultCaseStatement, BlockScope scope);", "+\tvoid endVisit(ContinueStatement continueStatement, BlockScope scope);", "+\tvoid endVisit(DefaultCaseStatement defaultCaseStatement, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c725fb6aa5be51488c47cc951de2630", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSkeleton.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public int getModifiers()", "signatureAfterChange": " public int getModifiers()", "diff": ["-\treturn IConstants.AccPublic;", "+\treturn ClassFileConstants.AccPublic;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c73fa2e71dbc6e2e473a506ea50f146", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic boolean visit(BooleanLiteral node)", "signatureAfterChange": " \tpublic boolean visit(BlockComment node)", "diff": ["+\t */", "+\tpublic boolean visit(BlockComment node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c7fae07e701c1f5ab8b0fe2b8764613", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "6d93b4bb6f9802710e765aaa00d3450185e4689f", "commitAfterChange": "b4c2385c81cd66eb677f15796da3c5ed6a182754", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \t \tpublic void consumeTypeVariable(char[] position, char[] typeVariableName)", "signatureAfterChange": " \t \tpublic void consumeTypeVariable(char[] position, char[] typeVariableName)", "diff": ["-\t\t\tMethodBinding[] methods = ((ReferenceBinding) this.typeBinding).methods();", "+\t\t\tMethodBinding[] methods = ((ReferenceBinding) this.typeBinding).availableMethods(); // resilience"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8cb3b9a9261420d8a8bc340829f801", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testGetCategories11() throws CoreException", "signatureAfterChange": " public void testGetCategories11() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8e0f9b1e36f5a04d768e73299879b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "bb811cafdba11489b23b9c8cd6c46c237bf0db24", "commitAfterChange": "2a64f816a9e1e382be3c6f39875e5c587a7235c0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": " private void writeCategories(DataOutputStream stream) throws IOException", "signatureAfterChange": " private void writeCategories(FileOutputStream stream) throws IOException", "diff": ["-private void writeCategories(DataOutputStream stream) throws IOException {", "+private void writeCategories(FileOutputStream stream) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8efab89e93cda102bf337ba769d389", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "95f59caaf27a775333076cb1bc1d967e2796cdb3", "commitAfterChange": "7e41439f7b91a880bb131d143b9faf947232eb35", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic String debugName()", "signatureAfterChange": " \tpublic String debugName()", "diff": ["-\t\tnameBuffer.append(type().sourceName()).append(\"#RAW\"); //$NON-NLS-1$", "+\t\tnameBuffer.append(actualType().sourceName()).append(\"#RAW\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cba4cabd7bdfc79efdc8aeb3a2bd4b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic IWorkspace getWorkspace()", "signatureAfterChange": " \tpublic IWorkspace getWorkspace()", "diff": ["-\t\treturn fWorkspace;", "+\t\treturn workspace;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cc6b1dd0c358108d541df9a83e2f530", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  private void scanTypeForContainerAnnotation(IBinaryType binaryType, char[][][] missingTypeNames)", "signatureAfterChange": "  private void scanTypeForContainerAnnotation(IBinaryType binaryType, char[][][] missingTypeNames)", "diff": ["-\t\t\t\t\t\tthis.containerAnnotationType = (ReferenceBinding) this.environment.getTypeFromSignature(((ClassSignature)value).getTypeName(), 0, -1, false, null, missingTypeNames, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\t\t\t\tthis.containerAnnotationType = (ReferenceBinding) this.environment.getTypeFromSignature(((ClassSignature)value).getTypeName(), 0, -1, false, null, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd51c1935975f554573fd846c50f650", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "97568f9c37f129641284bb42b0df485d8547693d", "commitAfterChange": "359b062d76b50af2a7ba63a16c2b2133308ca095", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic ITypeBinding[] getParameterTypes()", "signatureAfterChange": " \tpublic ITypeBinding[] getParameterTypes()", "diff": ["-\t\t\treturn NO_PARAMETERS;", "+\t\t\treturn NO_TYPE_BINDINGS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cef740dc16bcd660dc4f43fd0b1f05f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LongLiteral.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.expressionType = null;", "+\t\tthis.resolvedType = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cff892dc0475761d2e358d4ea278277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \t\tpublic boolean match(NumberLiteral node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(MemberValuePair node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(MemberValuePair node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d05ca4f77eb363ea5cc78c36b751e89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSkeleton.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public char[] getFileName()", "signatureAfterChange": " public char[] getFileName()", "diff": ["-\treturn CharOperation.concat(CODE_SNIPPET_NAME, Util.SUFFIX_java); //$NON-NLS-1$", "+\treturn CharOperation.concat(CODE_SNIPPET_NAME, SuffixConstants.SUFFIX_java); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d0601f61cd09b23b86d6225c7940201", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "8ac2041929c9d6b50c0c848d701c4bff84336c3f", "commitAfterChange": "99e4df2949efc34d2761be7fafc5129385421683", "methodNumberBeforeChange": 306, "methodNumberAfterChange": 306, "signatureBeforeChange": " \tpublic void test0283() throws JavaModelException", "signatureAfterChange": " \tpublic void test0283() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Not a compilation unit\", IJavaElement.COMPILATION_UNIT, javaElement.getElementType());", "+\t\tassertEquals(\"Not a compilation unit\", IJavaElement.TYPE, javaElement.getElementType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d0fc08a16090a77f580de33568a2ddf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "645b7bfaa2fa6e51ee8178c0b98a65d610d989c2", "commitAfterChange": "6cb5df5deb874bcd03782569c94840e1aa61cfba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public char[] indexEntryPrefix()", "signatureAfterChange": "\r public char[] indexEntryPrefix()", "diff": ["-\t\t\tqualification,\r", "+\t\t\tpkg,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d167b130398a7d48ed988d24e8290c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefFieldErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefFieldErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d1dbe7db883b23fbc36f0d7be87725e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractAnnotationProcessorManager.java", "commitBeforeChange": "4c8a3ba34c720dda98e8d56ba71f0361efbe740b", "commitAfterChange": "c06cfa4791f8eb98381a7dd55dd6950dbcddf37c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic abstract void configure(Main batchCompiler, String[] options);", "signatureAfterChange": " \tpublic abstract void configure(Object batchCompiler, String[] options);", "diff": ["-\tpublic abstract void configure(Main batchCompiler, String[] options);", "+\tpublic abstract void configure(Object batchCompiler, String[] options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d6778d8e1c5c41ddc1365f31f52d385", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void testSearchPatternValidMatchRule32()", "signatureAfterChange": " public void testSearchPatternValidMatchRule32()", "diff": ["-\t\tSearchPattern.R_CAMEL_CASE_MATCH | SearchPattern.R_CASE_SENSITIVE);", "+\t\tSearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH | SearchPattern.R_CASE_SENSITIVE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d793c74aa326edd548c2cae7140ef27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "c57d63e48d2e13925643b8ebe6a288202f202e6b", "commitAfterChange": "e2a159c6596c04bca6bcd93e61dded936d044196", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprivate void notifyTypeHierarchies(IElementChangedListener[] listeners, int listenerCount)", "signatureAfterChange": " \tprivate void notifyTypeHierarchies(IElementChangedListener[] listeners, int listenerCount)", "diff": ["-\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\tSafeRunner.run(new ISafeRunnable() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d7ef806c163b56885ae0ba1951f3355", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "93095c2a7ab7ebf10c67a53f522d196aee31692f", "commitAfterChange": "68da60f848d452f075f2d3f68dd3b898ded50b7e", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getRawClasspath() throws JavaModelException", "diff": ["-\t\t\tif (this.getProject().isOpen()){\r", "+\t\t\tif (this.getProject().isAccessible()){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d7f19bfc34b213c41b5df6a30e6cef2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "c2e73e92d84b995d792bc11e9e3cc44e31128806", "commitAfterChange": "7530e9811f8e0b012d59fd23237f75cdb4977fd6", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": " public void testBug415850_a()", "signatureAfterChange": " public void testBug415850_a()", "diff": ["-\tthis.runNegativeTest(", "+\tthis.runNegativeTestWithLibs("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d8c41be20edf7f887e2d9ec7c899116", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  public SearchMatch newMethodReferenceMatch( \t\tIJavaElement enclosingElement, \t\tBinding enclosingBinding, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tboolean isConstructor, \t\tboolean isSynthetic, \t\tASTNode reference)", "signatureAfterChange": "  public MethodReferenceMatch newMethodReferenceMatch( \t\tIJavaElement enclosingElement, \t\tBinding enclosingBinding, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tboolean isConstructor, \t\tboolean isSynthetic, \t\tASTNode reference)", "diff": ["-public SearchMatch newMethodReferenceMatch(", "+public MethodReferenceMatch newMethodReferenceMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d8fbd1bfaa61cded5b21918ab6e01b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "62cdbd21a3e3e68bdbaac6c9ff33104613e86985", "commitAfterChange": "93444b7671b763598022452cafbe29143ff8c004", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate JavaElement getUnresolvedJavaElement(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding )", "signatureAfterChange": " \tprivate JavaElement getUnresolvedJavaElement(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding )", "diff": ["-\t\tif (typeBinding == null) ", "+\t\tif (typeBinding == null)", "-\t\t\t\tif (typeBinding.isCapture()) ", "+\t\t\t\tif (typeBinding.isCapture())", "-\t\t\t\tif (pkgEnd == -1) ", "+\t\t\t\tif (pkgEnd == -1)", "-\t\t\t\tif (typeBinding == null) return null;", "+\t\t\t\tif (typeBinding2 == null) return null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d9a93945d252f4403c8ae829a9299fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void testChangeTypeTypeParameters() throws JavaModelException", "signatureAfterChange": " public void testChangeTypeTypeParameters() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dc4812b14f0cd21f07e4a81f0e5c567", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Javadoc.java", "commitBeforeChange": "dfc91d56806c456b9b3ccf18b7180e0ffe937730", "commitAfterChange": "b2cc128bda23f9f1345b0f7e7b16cc0855af3cea", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tacceptChildren(visitor, fragments);", "+\t\t\tacceptChildren(visitor, tags);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ddca77cdda4442a818cb5b89bd41de4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "618a6ff3d34de5a5e41db8b1f1893c42061e44cd", "commitAfterChange": "71dea98c1d878b28c8144aaff13d309d86912875", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic static void checkContainerAnnotationType(ASTNode culpritNode, BlockScope scope, ReferenceBinding containerAnnotationType, ReferenceBinding repeatableAnnotationType, boolean useSite)", "signatureAfterChange": "  \tpublic static void checkContainerAnnotationType(ASTNode culpritNode, BlockScope scope, ReferenceBinding containerAnnotationType, ReferenceBinding repeatableAnnotationType, boolean useSite)", "diff": ["-\t\t\tcheckContainingAnnotationTarget(culpritNode, scope, containerAnnotationType, repeatableAnnotationType);", "+\t\t\tcheckContainerAnnotationTypeTarget(culpritNode, scope, containerAnnotationType, repeatableAnnotationType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dfd89c70c0ffe1721fc2ed83d9cc4f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementRequestor.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public IInitializer[] getInitializers()", "signatureAfterChange": "\r public IInitializer[] getInitializers()", "diff": ["-\tfInitializers.copyInto(results);\r", "+\tfInitializers.toArray(results);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e0b7aa8bf0a38e35dafe1e1acd6094a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r private Binding findOnDemandImport(char[][] compoundName)", "signatureAfterChange": "\r private Binding findOnDemandImport(char[][] compoundName)", "diff": ["-\tcompilationUnitScope().recordReference(compoundName);\r", "+\tcompilationUnitScope().recordQualifiedReference(compoundName);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e0c9a79d6ca151a55f3f420eaa79c50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AllocationExpressionCompletionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(AllocationExpressionCompletionTest.class);", "+\treturn buildAllCompliancesTestSuite(AllocationExpressionCompletionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e1f4015fbb5182efec9e0ad285d2abc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic IPackageBinding getPackage()", "signatureAfterChange": " \tpublic IPackageBinding getPackage()", "diff": ["-\t\t\tcase Binding.INTERSECTION_CAST_TYPE:", "+\t\t\tcase Binding.INTERSECTION_TYPE18:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e20927f3445b8c2ba012cb3ad9aca74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "98ad487e103c268099d7117573693243c8d3b8fc", "commitAfterChange": "721a9dcda02493639666143934bddb089e848d18", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": "  public SearchMatch newTypeReferenceMatch( \t\tIJavaElement enclosingElement, \t\tBinding enclosingBinding, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tASTNode reference)", "signatureAfterChange": "  public TypeReferenceMatch newTypeReferenceMatch( \t\tIJavaElement enclosingElement, \t\tBinding enclosingBinding, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tASTNode reference)", "diff": ["-public SearchMatch newTypeReferenceMatch(", "+public TypeReferenceMatch newTypeReferenceMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e3756c9e6bd9e35acca4e09648d6025", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected OpenableElementInfo createElementInfo()", "signatureAfterChange": " \tprotected Object createElementInfo()", "diff": ["-\tprotected OpenableElementInfo createElementInfo() {", "+\tprotected Object createElementInfo() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e6cfb155f267428b1f87303cd9f3489", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e72732f15d55da9cfb45982ab0af9b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void classInstanceCreation(boolean alwaysQualified)", "signatureAfterChange": " protected void classInstanceCreation(boolean alwaysQualified)", "diff": ["-\t\t// mark fields and initializer with local type mark if needed", "-\t\tmarkFieldsWithLocalType(anonymousTypeDeclaration);", "+\t\t// mark initializers with local type mark if needed", "+\t\tmarkInitializersWithLocalType(anonymousTypeDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e872a9033522495c82b93aaeb3f772b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate void initializeASTParser()", "signatureAfterChange": " \tprivate void initializeASTParser()", "diff": ["-\t\tthis.parser = ASTParser.newParser(AST.JLS4);", "+\t\tthis.parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e88f34ae591d79fbce66d2843d3bbf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5ab1b44e840f5c63c769a4409a1d1ee2ee2b555d", "commitAfterChange": "180e4e45746dd1c7939f8d071838acd40ff207da", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public JavaSearchMatch newPackageReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "signatureAfterChange": "  public SearchMatch newPackageReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "diff": ["-public JavaSearchMatch newPackageReferenceMatch(", "+public SearchMatch newPackageReferenceMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ea23b800841d222a3bbe3f7efd3557c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "e5dee4f66ab3257e0d9e4e34690323cf2d5f7c21", "commitAfterChange": "ba7f55d89dcf40f0d2718397b348f39209d50c3a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic PrimitiveTypeImpl getByteType()", "signatureAfterChange": " \tpublic PrimitiveTypeImpl getByteType()", "diff": ["-\tpublic PrimitiveTypeImpl getBooleanType(){ return _primitives[0]; }", "-\tpublic PrimitiveTypeImpl getByteType(){ return _primitives[1]; }", "+\tpublic PrimitiveTypeImpl getBooleanType(){ return _primitives[BOOLEAN_INDEX]; }", "+\tpublic PrimitiveTypeImpl getByteType(){ return _primitives[BYTE_INDEX]; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ea2bbb329b7dbf8fa04eaa2d8874ffc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingResolver.java", "commitBeforeChange": "28475f7151ef48b7b99d16fedb7cc564edf8391b", "commitAfterChange": "4374063ffc07d9e5a6e12269e991cbcb89c32543", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tIVariableBinding resolveMember(AnnotationTypeMemberDeclaration member)", "signatureAfterChange": " \tIMethodBinding resolveMember(AnnotationTypeMemberDeclaration member)", "diff": ["-\tIVariableBinding resolveMember(AnnotationTypeMemberDeclaration member) {", "+\tIMethodBinding resolveMember(AnnotationTypeMemberDeclaration member) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb5d07e2ba170c4eb3b8f96d821eea8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariablePattern.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void findIndexMatches(IIndex index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "signatureAfterChange": " public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException", "diff": ["-public void findIndexMatches(IIndex index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException {", "+public void findIndexMatches(Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor progressMonitor) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb927c00c2249852c35eaa55c73820b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FineGrainVisitor.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public boolean visit(ParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, ClassScope scope)", "signatureAfterChange": "  public boolean visit(ParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, ClassScope scope)", "diff": ["-\tif ((this.fineGrain & PARAMETERIZED_TYPE_REFERENCE) != 0) {", "+\tif ((this.fineGrain & TYPE_ARGUMENT_TYPE_REFERENCE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eba63dd50c4520fed59bd8edaedb173", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public void test044() throws JavaModelException", "signatureAfterChange": "  public void test044() throws JavaModelException", "diff": ["-\t\t\"paramMethod[JAVADOC_METHOD_REF]{{@link BasicTestTextIns#paramMethod(String, boolean, Object)}, Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\"paramMethod[JAVADOC_METHOD_REF]{{@link BasicTestTextIns#paramMethod(String, boolean, Object)}, Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ecb92151ab085ad25a1eafabebc295f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "f41df9b6ac9b62f616470e8ec0968732d823137f", "commitAfterChange": "2f379667b4f33f336f0003d6b2911b5403125b74", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate boolean connectSuperInterfaces()", "signatureAfterChange": " \tprivate boolean connectSuperInterfaces()", "diff": ["-\t\t\tif ((superInterface.tagBits & TagBits.HasWildcard) != 0) {", "+\t\t\tif ((superInterface.tagBits & TagBits.HasDirectWildcard) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ecfe3abee4c603fe3a6a1d04bcb49e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void endVisit(ReturnStatement node)", "signatureAfterChange": " \tpublic void endVisit(MethodRef node)", "diff": ["+\t */", "+\tpublic void endVisit(MethodRef node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1edb3d4096a005c6cd50066b045114fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclaration.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tstatic final ChildListPropertyDescriptor internalExtraDimensions2PropertyFactory(Class nodeClass)", "signatureAfterChange": " \tstatic final ChildListPropertyDescriptor internalExtraDimensions2PropertyFactory(Class nodeClass)", "diff": ["-\t\treturn \tnew ChildListPropertyDescriptor(nodeClass, \"extraDimensions2\", ExtraDimension.class, CYCLE_RISK); //$NON-NLS-1$", "+\t\treturn \tnew ChildListPropertyDescriptor(nodeClass, \"extraDimensions2\", Dimension.class, CYCLE_RISK); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ef0a7e81a95a4dd6a9605d8f583e06b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TestAll.java", "commitBeforeChange": "0e8a2b3bc15c38e29faaa2105eb6e0bbf7b15cd5", "commitAfterChange": "266fb0d2bc58e2f4f179d2c1279dee095ed53e45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tsince_1_8.add(Jsr335ClassFileTest.class);", "+\tsince_1_8.add(JSR335ClassFileTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f07385dd3a29e4f2d0640a61de95212", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "a3a8860de745314f9db17ad200c9ad0e4e9b06a8", "commitAfterChange": "4e09c6e7b53fa007b352c498d7417374cf7affdb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r public MethodBinding[] availableMethods()", "signatureAfterChange": "\r \r public MethodBinding[] availableMethods()", "diff": ["-\treturn methods;\r", "+\treturn availableMethods;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f08d5bc02a40265a46e8d8d6e680208", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "e9369369dba0e10810d40bdf943f83653668255c", "commitAfterChange": "343d4279aa701152313517156fc77bbf7ec9f350", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 73, "signatureBeforeChange": "  \tpublic IndexManager getIndexManager()", "signatureAfterChange": "  \tpublic static IndexManager getIndexManager()", "diff": ["-\tpublic IndexManager getIndexManager() {", "-\t\treturn this.indexManager;", "+\tpublic static IndexManager getIndexManager() {", "+\t\treturn MANAGER.indexManager;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f31cb1a9158a5c125a993ebe6c1ce2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrLocator.java", "commitBeforeChange": "fb92cfb822669ddb00db1cf41e3bdb1057d4d00d", "commitAfterChange": "00c13f2feec2211d8da2f8282a37167ca349b1b8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public int match(Reference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(MemberValuePair node, MatchingNodeSet nodeSet)", "diff": ["+public int match(MemberValuePair node, MatchingNodeSet nodeSet) {", "+\tint level = IMPOSSIBLE_MATCH;", "+\tfor (int i = 0, length = this.patternLocators.length; i < length; i++) {", "+\t\tint newLevel = this.patternLocators[i].match(node, nodeSet);", "+\t\tif (newLevel > level) {", "+\t\t\tif (newLevel == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t\t\tlevel = newLevel;", "+\t\t}", "+\t}", "+\treturn level;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f3278c9726ba1bfff08b357bcc2c209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tpublic void markAsDefinitelyNotAssigned(LocalVariableBinding local)", "signatureAfterChange": " \t \tpublic void markAsDefinitelyNotAssigned(LocalVariableBinding local)", "diff": ["-\t\tif (this != DeadEnd)", "+\t\tif (this != DEAD_END)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f6821fba1150f82af98531051136a28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, ITypeAnnotationWalker walker, char [][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, TypeAnnotationWalker walker, char [][][] missingTypeNames)", "diff": ["-private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, ITypeAnnotationWalker walker, char [][][] missingTypeNames) {", "+private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, TypeAnnotationWalker walker, char [][][] missingTypeNames) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f8043b6d33a3ce157e3b779d4bdc690", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest_1_5.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_5);", "+\t\treturn buildMinimalComplianceTestSuite(testClass(), F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f88470ad106a94d6dfd9198a3936a17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "87ba3addb06e0bd690b97dd2e305fffcc5db74fe", "commitAfterChange": "8046249ea5657bdf56e1ad6e70f968e6217d4dd0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic boolean search(IIndex index, IProgressMonitor progressMonitor)", "signatureAfterChange": "\r \tpublic boolean search(IIndex index, IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\t\tJobManager.log(\"-> merging index \" + index.getIndexFile()); //$NON-NLS-1$\r", "+\t\t\t\t\t\tJobManager.verbose(\"-> merging index \" + index.getIndexFile()); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f8e18f88cc0b9a8bedcbf8307288d9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elements/Java8ElementProcessor.java", "commitBeforeChange": "73197a47274e75e8fe1581fdac3a086fb2ddf471", "commitAfterChange": "340440fc2f9b9eb03b89c385f562976def2c6c0e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tpublic void testTypeAnnotations13()", "signatureAfterChange": " \t \tpublic void testTypeAnnotations13()", "diff": ["-\t\tverifyTypeAnnotations(typeMirror, new String[]{});", "+\t\tverifyAnnotations(typeMirror, new String[]{});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fc0701122f599dac4181b04d8ecb942", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "474eb5356258f18fd9cfbd1a24f6dbe20ed6eea5", "commitAfterChange": "b0f361db26dd11f4be4974027111b70136b11d5b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprotected static FieldDeclaration createNewField(AST ast, String name)", "signatureAfterChange": "  \tprotected static FieldDeclaration createNewField(AST ast, String name)", "diff": ["-\t\tif (ast.apiLevel() == AST_INTERNAL_JLS2) {", "+\t\tif (ast.apiLevel() == JLS2_INTERNAL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fc2e8895ad1b82546d8129808f6cd24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate void buildMethods()", "signatureAfterChange": " \t \tprivate void buildMethods()", "diff": ["-\t\tboolean isEnum = referenceContext.kind() == IGenericType.ENUM;", "+\t\tboolean isEnum = referenceContext.kind() == IGenericType.ENUM_DECL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fdfd10c2e820959f0a1417b59a45385", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected BinaryTypeBinding cacheBinaryType(IType type, IBinaryType binaryType) throws JavaModelException", "signatureAfterChange": " protected BinaryTypeBinding cacheBinaryType(IType type, IBinaryType binaryType) throws JavaModelException", "diff": ["-\t\t\tbinaryType = getBinaryInfo(classFile, classFile.getResource());", "+\t\t\tbinaryType = getBinaryInfo(classFile, classFile.resource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "201c4f3a4444ee180f7a20c7806db0f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/util/JdtCorePerformanceMeter.java", "commitBeforeChange": "4119a65befb0f1b826133c8b40790cea36510774", "commitAfterChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void commit()", "signatureAfterChange": " public void commit()", "diff": ["-\t */", "-\tpublic void commit() {", "-\t    Sample sample= getSample();", "-\t    if (sample != null) {", "-\t\t\t storeCpuTime(sample);", "-\t\t}", "-\t}", "+ */", "+public void commit() {", "+\tSample sample = getSample();", "+\tif (sample != null) {", "+\t\tstoreDataPoints(sample);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20454c1be1a64bbacc12311b68a6dd2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTNodesCollectorVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void endVisit(NullLiteral node)", "signatureAfterChange": " \tpublic void endVisit(LineComment node)", "diff": ["+\t */", "+\tpublic void endVisit(LineComment node) {", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "204a913d4ea8bdeb97691041f5829b10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "3c1df96cd104b0fc430e4dc2bba86da9035261e4", "commitAfterChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\tbuf.append(\"\\n\\t- ambiguous varargs argument: \").append(getSeverityString(AmbiguousVarargsArgument)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- ambiguous varargs argument: \").append(getSeverityString(CastVarargsArgument)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2059cce14306da173cf3abbc3b4826cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public void test041() throws JavaModelException", "signatureAfterChange": "  public void test041() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "205a55cf99499ddb20f1fcdeca01fe94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " protected void consumeClassBodyDeclaration()", "signatureAfterChange": " protected void consumeClassBodyDeclaration()", "diff": ["-\tif (this.diet) block.bits &= ~ASTNode.UndocumentedEmptyBlockMASK; // clear bit since was diet", "+\tif (this.diet) block.bits &= ~ASTNode.UndocumentedEmptyBlock; // clear bit since was diet"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "206001e9d3c176d86362c6e9a90c2032", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "signatureAfterChange": " private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["-\tString qualifiedBinaryFileName = qualifiedTypeName + \".class\"; //$NON-NLS-1$", "+\tString qualifiedBinaryFileName = qualifiedTypeName + SUFFIX_STRING_class;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2064e28571a7ee7583ace87bd0cd546f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "a3e63b72d2efd2058d202d3e2711391afc827fec", "commitAfterChange": "f0131d199789fbf75036ba10803faed4ef08b399", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic static void suggestVariableNames( \t\t\tint variableKind, \t\t\tint baseNameKind, \t\t\tchar[] baseName, \t\t\tIJavaProject javaProject, \t\t\tint dim, \t\t\tchar[] internalPrefix, \t\t\tchar[][] excluded, \t\t\tboolean evaluateDefault, \t\t\tINamingRequestor requestor)", "signatureAfterChange": "  \tpublic static void suggestVariableNames( \t\t\tint variableKind, \t\t\tint baseNameKind, \t\t\tchar[] baseName, \t\t\tIJavaProject javaProject, \t\t\tint dim, \t\t\tchar[] internalPrefix, \t\t\tchar[][] excluded, \t\t\tboolean evaluateDefault, \t\t\tINamingRequestor requestor)", "diff": ["-\t\t\tcase VK_CONSTANT_FIELD:", "+\t\t\tcase VK_STATIC_FINAL_FIELD:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2069283f84aa5bcd72d4fa5a56f30010", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 146, "signatureBeforeChange": " \tprotected void removeLibrary(IJavaProject javaProject, String jarName, String sourceZipName) throws CoreException, IOException", "signatureAfterChange": " \tprotected void removeLibrary(IJavaProject javaProject, String jarName, String sourceZipName) throws CoreException, IOException", "diff": ["-\t\tremoveLibraryEntry(javaProject, new Path(projectPath + jarName));", "+\t\tremoveClasspathEntry(javaProject, new Path(projectPath + jarName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20860956e1fc4f9a39b969d1f751352d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "commitAfterChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries) throws JavaModelException", "signatureAfterChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries) throws JavaModelException", "diff": ["-\t\t\t\tif (entry.getEntryKind() == ClasspathEntry.CPE_PROJECT) {", "+\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_PROJECT) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2091c0afcbd91c285c7c2e2517484d49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "5e70a582e36fd39d7629b8f556b66f50a1050058", "commitAfterChange": "5ca447c521262374b5199c22b8bb8d32a007f444", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["-\t\t\t\t} else if ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c] & ", "-\t\t\t\t\t\t(ScannerHelper.C_SEPARATOR | ScannerHelper.C_SPACE)) != 0) {", "+\t\t\t\t} else if ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c] & (ScannerHelper.C_SEPARATOR | ScannerHelper.C_JLS_SPACE)) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20ac9d4607ef7e2e5387aad7eee795e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteResourceElementsOperation.java", "commitBeforeChange": "b0d31e6c3e1c680e07131773758a36c78b2f553b", "commitAfterChange": "9f89ba73b700aee0d67ac8a5b9556d443c556591", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private void deletePackageFragment(IPackageFragment frag) \tthrows JavaModelException", "signatureAfterChange": " private void deletePackageFragment(IPackageFragment frag) \tthrows JavaModelException", "diff": ["-\t\t\t\tresources[i] = childrenOfInterest[i].getCorrespondingResource();", "+\t\t\t\tresources[i] = childrenOfInterest[i].getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20bcc8f9193c54136a6f938784fdaa27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate static TypeBinding[] resolveSubstituteConstraints(Scope scope, TypeVariableBinding[] typeVariables, TypeBinding[] substitutes, boolean considerEXTENDSConstraints, Map collectedSubstitutes)", "signatureAfterChange": " \t \tprivate static TypeBinding[] resolveSubstituteConstraints(Scope scope, TypeVariableBinding[] typeVariables, TypeBinding[] substitutes, boolean considerEXTENDSConstraints, Map collectedSubstitutes)", "diff": ["-\t\t\t\t\tTypeBinding[] glb = scope.greaterLowerBound(bounds);", "+\t\t\t\t\tTypeBinding[] glb = Scope.greaterLowerBound(bounds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d35decd69736c94ecd879dab296309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0ce30fa1efeccdb8f098a9dcf15c46f705a57e6f", "commitAfterChange": "59a26b3b3e45e8769323a82cc5fccc64fe9d5f4a", "methodNumberBeforeChange": 1190, "methodNumberAfterChange": 1190, "signatureBeforeChange": " public void test1162()", "signatureAfterChange": " public void test1162()", "diff": ["-\tthis.runNegativeTest(", "+\tthis.runConformTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20e7e87a4b496335a5a50e7d8f5651ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/Util.java", "commitBeforeChange": "fd230c4ee1ceefd6a4812ebc7de0e734ce8df73c", "commitAfterChange": "e752367433ca417806253a6753c55772428a8bf6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate static void addInterval(int start, int end)", "signatureAfterChange": " \t \tprivate static void addInterval(int start, int end)", "diff": ["-\t\taddInterval(start, end, 0);", "+\t\taddInterval(start, end, NO_FLAG);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f096c22e5f52986ade57f036205c74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public void test037() throws JavaModelException", "signatureAfterChange": "  public void test037() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f1142371723167b9a959b2c750afad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "31a9e239c1d7bd32721c47642c470112e9155986", "commitAfterChange": "9ebc56bbef98951afda94a11e400e1c39d8ba94d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tvoid compile (String[] srcPaths, String options, String compliance, boolean log) throws IOException", "signatureAfterChange": " \tvoid compile (String[] srcPaths, String options, String compliance, boolean log) throws IOException", "diff": ["-\t\tString pluginDir = getPluginDirectoryPath();", "+\t\tString pluginDir = getPluginBinariesDirectoryPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f41d3807c0e300dc12e4a9817ec0e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void test60453()", "signatureAfterChange": " \tpublic void test60453()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES, DefaultCodeFormatterConstants.FALSE);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_JAVADOC_COMMENT, DefaultCodeFormatterConstants.FALSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2111989e600789b8577431be3a4de5a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "13991702fc2c3e2b678aa9ef22a4a03b29ad808b", "commitAfterChange": "3a8b2107b944f5a4646c23d5049199496436bc6e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["-\t\t\t\t\tif (scope.compilerOptions().originalSourceLevel >= ClassFileConstants.JDK1_5) { // below 1.5, already reported as syntax error", "+\t\t\t\t\tif (scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) { // below 1.5, already reported as syntax error"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "211b1823dfabdf7bf67895629d6d1d12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchNameEnvironment.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  private void computeClasspathLocations(IWorkspaceRoot workspaceRoot, JavaProject javaProject)", "signatureAfterChange": "  private void computeClasspathLocations(IWorkspaceRoot workspaceRoot, JavaProject javaProject)", "diff": ["-\t\t\t\tObject target = JavaModel.getTarget(workspaceRoot, path, false);", "+\t\t\t\tObject target = JavaModel.getTarget(path, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2122a1fcc887f872506ca68758c94581", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " \tpublic void testVariableDeclarationExpression()", "signatureAfterChange": " \tpublic void testVariableDeclarationExpression()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "212ee3a6515027de6ea1d2d0f984ff8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 263, "signatureBeforeChange": " public void newJavaLangIllegalArgumentException()", "signatureAfterChange": " public void newJavaLangIllegalArgumentException()", "diff": ["-\twriteUnsignedShort(constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangIllegalArgumentExceptionConstantPoolName));", "+\twriteUnsignedShort(constantPool.literalIndexForType(ConstantPool.JavaLangIllegalArgumentExceptionConstantPoolName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "212f1f7e56512fa3d7314b50b474cf7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " protected void consumeStaticOnly()", "signatureAfterChange": " protected void consumeStaticOnly()", "diff": ["-\tcheckAnnotation(); // might update declaration source start", "+\tcheckComment(); // might update declaration source start"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2141e97e5bbcebc4615491027c210af1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "24c681585ef2f4b155e3d0f5cb2c551e612e2484", "commitAfterChange": "1075c02575f13a345cda8e06bd18891df8b3e61e", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "diff": ["-\t\t\t\tthis.scribe.printModifiers(methodDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_MEMBER);", "+\t\t\t\tthis.scribe.printModifiers(methodDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_METHOD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "214b540a42d6a39dcab805fcdc1e0db5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 218, "signatureBeforeChange": " protected void ignoreInterfaceDeclaration()", "signatureAfterChange": " protected void ignoreInterfaceDeclaration()", "diff": ["-\tflushAnnotationsDefinedPriorTo(endStatementPosition);", "+\tflushCommentsDefinedPriorTo(endStatementPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "216dc1e2fc9e057a08035752881f8327", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateElementInCUOperation.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected CompilationUnit parse(ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " \tprotected CompilationUnit parse(ICompilationUnit cu) throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3);", "+\t\tASTParser parser = ASTParser.newParser(AST.JLS4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217e1c8bf8e0bde8e9aa4d6e55189d04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/NestedTypeBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic SyntheticArgumentBinding getSyntheticArgument(ReferenceBinding targetEnclosingType, boolean onlyExactMatch)", "signatureAfterChange": " \tpublic SyntheticArgumentBinding getSyntheticArgument(ReferenceBinding targetEnclosingType, boolean onlyExactMatch)", "diff": ["-\t\t\t\t\tif (enclosingInstances[i].type.findSuperTypeWithSameErasure(targetEnclosingType) != null)", "+\t\t\t\t\tif (enclosingInstances[i].type.findSuperTypeOriginatingFrom(targetEnclosingType) != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "218f4dba227aa992996ec5111a66960c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RootManipulationsTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testDeleteJarFile3() throws CoreException", "signatureAfterChange": " public void testDeleteJarFile3() throws CoreException", "diff": ["-\t\t\t\"\t\" + getExternalJCLPath() + \"[*]: {REMOVED FROM CLASSPATH}\\n\" + ", "+\t\t\t\"\t\" + getExternalJCLPathString() + \"[*]: {REMOVED FROM CLASSPATH}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21a7abbc333a53cb6f86e93f534a7111", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprotected void saveClasspathIfNecessary() throws JavaModelException", "signatureAfterChange": "  \tprotected void saveClasspathIfNecessary() throws JavaModelException", "diff": ["-\t\tif (!this.canChangeResource || !this.needSave) return;", "+\t\tif (!this.canChangeResources || !this.needSave) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21ac5c6e9e8fec5c0f6aa556a96f55e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected OpenableElementInfo createElementInfo()", "signatureAfterChange": " protected Object createElementInfo()", "diff": ["-protected OpenableElementInfo createElementInfo() {", "+protected Object createElementInfo() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21b34ad58a928d0a292fbe438e79ec1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprotected void setUp() throws Exception", "signatureAfterChange": " \t \tprotected void setUp() throws Exception", "diff": ["-\t\tproj.setOption(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, \"4\");", "+\t\tproj.setOption(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, \"4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21b50f070c7e88ccdb1864f35763a6b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void endVisit(Case caseStatement, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(CaseStatement caseStatement, BlockScope scope)", "diff": ["-\tpublic void endVisit(Case caseStatement, BlockScope scope) {", "+\tpublic void endVisit(CaseStatement caseStatement, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c1c8a8109550226617516ed381c436", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "70e7dc8284deadd5b37cb25d1eb08df1105ac893", "commitAfterChange": "e08761f63c783c669290a9af1a8a518a8fe34113", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t&& this.expression.generatedType(currentScope) != this.resolvedType) { // no need to issue a checkcast if already done as genericCast", "+\t\t\t\t&& this.expression.postConversionType(currentScope) != this.resolvedType) { // no need to issue a checkcast if already done as genericCast"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c98017815f9fc664729a7049227990", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/Evaluator.java", "commitBeforeChange": "f8bfbd1f4be7890f8adc092ebd0a99dd36bfddd9", "commitAfterChange": "0e9405a9e49c7485808bf9ceeda288829b9a70e4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected EvaluationResult[] evaluationResultsForCompilationProblems(CompilationResult result, char[] cuSource)", "signatureAfterChange": " protected EvaluationResult[] evaluationResultsForCompilationProblems(CompilationResult result, char[] cuSource)", "diff": ["-\tIProblem[] problems = result.getProblems();", "+\tIProblem[] problems = result.getAllProblems();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21e385235f17f2f797a0ac5629962f9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "commitAfterChange": "75ff04c8b5711fae5cad065b3b4b862839b59cd9", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tprivate int computeRelevanceForException(char[] proposalName)", "signatureAfterChange": "\r \tprivate int computeRelevanceForException(char[] proposalName)", "diff": ["-\t\treturn 0;\r", "+\t\treturn R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21e835de3e32848296411d167de90949", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "f6057f4bd73ada85ae2d2e3b7f84adc02c4226c8", "commitAfterChange": "5fad474fe873700d0e43495d7c1c8c2c489d0d4f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "signatureAfterChange": "\r \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "diff": ["-\t\t\t\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true);\r", "+\t\t\t\t\t// consider ALL dependents (even indirect ones), since they may need to\r", "+\t\t\t\t\t// flush their respective namelookup caches (all pkg fragment roots).\r", "+\t\t\t\t\tIClasspathEntry[] classpath = project.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21ff62d32fede3fb04337b4f37caf18a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testGetCategories01() throws CoreException", "signatureAfterChange": " public void testGetCategories01() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2200d6a6086ae5b886b40eba1eaf0420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "ec8fd000a880e2393010eb5c8b67439f8ecd914b", "commitAfterChange": "de4b7bdd89919457ca271598365f7ba9556cd997", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\t\tif (resolvedExceptionType.isGenericType() || resolvedExceptionType.isParameterizedType()) {", "+\t\t\tif (resolvedExceptionType.isGenericType() || resolvedExceptionType.isBoundParameterizedType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2221e0139e33cd89bccecd5fe27849ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "3c7abdea60e3dea7a9b2b822e92d260aea9179a7", "commitAfterChange": "85d82ef92c86e257cfcb71c0ec95b6b64432a5cb", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " \tpublic void endVisit(ImportDeclaration node)", "signatureAfterChange": " \tpublic void endVisit(LambdaExpression node)", "diff": ["+\t */", "+\tpublic void endVisit(LambdaExpression node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22228384c6f1d2e56dd9c6335071651d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " protected void matchCheck(AstNode node, MatchingNodeSet set)", "signatureAfterChange": " protected void matchCheck(AstNode node, MatchingNodeSet set)", "diff": ["-\t\tcase SearchPattern.POSSIBLE_MATCH:", "+\t\tcase SearchPattern.POTENTIAL_MATCH:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "222b027eee4f2b544e7d247e85c5f334", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/Label.java", "commitBeforeChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "commitAfterChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void place()", "signatureAfterChange": " public void place()", "diff": ["-\t\t\tisOptimizedBranch = (forwardReferences[forwardReferenceCount - 1] + 2 == position) && (codeStream.bCodeStream[codeStream.classFileOffset - 3] == CodeStream.OPC_goto);", "+\t\t\tisOptimizedBranch = (forwardReferences[forwardReferenceCount - 1] + 2 == position) && (codeStream.bCodeStream[codeStream.classFileOffset - 3] == Opcodes.OPC_goto);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "223ba0838f34ccb17ef8d9e64d423802", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "06e4a5efa4ac79a81431ad2110bd08f2ba1b98a7", "commitAfterChange": "07f05fcff8d0859cd95213fdd9e90f32b4be6e10", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t&& !sourceType.isBaseType()", "+\t\t\t\t&& !targetType.isBaseType()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "225f2666a110548cedde8d1b7c2f6a55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void markAsComparedEqualToNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsComparedEqualToNull(VariableBinding local)", "diff": ["-public void markAsComparedEqualToNull(LocalVariableBinding local) {", "+public void markAsComparedEqualToNull(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22793958afc3feab22d93f0e01466e7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuite(testClass());", "+\t\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22aa6d475d448aa2a7b532414ed96ce3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/JavaBuilder.java", "commitBeforeChange": "3cb212c139b785d5942036354807eebced06845d", "commitAfterChange": "1e824a6f76b10e480f47e7bb3a7a70a5562012eb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r private State getLastState(IProject project)", "signatureAfterChange": "\r \r private State getLastState(IProject project)", "diff": ["-\treturn (State) JavaModelManager.getJavaModelManager().getLastBuiltState2(project, notifier.monitor);\r", "+\treturn (State) JavaModelManager.getJavaModelManager().getLastBuiltState(project, notifier.monitor);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22ab948b77c62b5cb28a0c63788fd299", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22b3cd069ee89c6b4e8cf3706f5a3322", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public ICompilationUnit getWorkingCopy(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ICompilationUnit getWorkingCopy(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t(IPackageFragment)getParent(), ", "+\t\t\t(PackageFragment)getParent(), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22c11fd3f19393133d3d3c43c9b882c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "068cd980b5edbe213826c80d8c3fb1a72582288a", "commitAfterChange": "6eb32d06a01a4c0cd88aa5091b2c41c8c1c0f654", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate Initializer convert(InitializerElementInfo initializerInfo, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate Initializer convert(InitializerElementInfo initializerInfo, CompilationResult compilationResult)", "diff": ["-\t\t\t\t\tTypeDeclaration localType = convert((ISourceType)type.getElementInfo(), compilationResult);", "+\t\t\t\t\tTypeDeclaration localType = convert((SourceTypeElementInfo) type.getElementInfo(), compilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22c42851161cbee339435ed9ab0e7340", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "6febc04f00603747029f2ea9616afd5b682c9f03", "commitAfterChange": "ba65adb7228709772812cc43f8ccb14a824acf89", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public RecoveredType(TypeDeclaration typeDeclaration, RecoveredElement parent, int bracketBalance)", "signatureAfterChange": " \t public RecoveredType(TypeDeclaration typeDeclaration, RecoveredElement parent, int bracketBalance)", "diff": ["-\tthis.insiseEnumConstantPart = typeDeclaration.getKind() == IGenericType.ENUM;", "+\tthis.insideEnumConstantPart = typeDeclaration.getKind() == IGenericType.ENUM;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22d0b5197ab46a64c61ee915be9b77c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t\tpublic boolean match(FieldDeclaration node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(EnhancedForStatement node, Object other)", "diff": ["+\t\tpublic boolean match(EnhancedForStatement node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22e43230ef52db7d52da605891367415", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ASTImplTests.java", "commitBeforeChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "commitAfterChange": "9d8f1ed123fbe8bd94c62a19d7bf62f396b087ea", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void endVisit(NormalAnnotation annotation, ClassScope scope)", "signatureAfterChange": " public void endVisit(NormalAnnotation annotation, BlockScope scope)", "diff": ["-public void endVisit(NormalAnnotation annotation, ClassScope scope) {", "+public void endVisit(NormalAnnotation annotation, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22fb4a5a041522db69e9d4c2f5a12c99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnParameterizedQualifiedTypeReference.java", "commitBeforeChange": "159e8ad6d8421b49efbcfb424fe9327481d95b23", "commitAfterChange": "8abe8838e4f5c3f829e8d4a716d1798a8812906f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic CompletionOnParameterizedQualifiedTypeReference(char[][] tokens,\tTypeReference[][] typeArguments, char[] completionIdentifier, long[] positions)", "signatureAfterChange": " \tpublic CompletionOnParameterizedQualifiedTypeReference(char[][] tokens,\tTypeReference[][] typeArguments, char[] completionIdentifier, long[] positions)", "diff": ["-\t\tthis(tokens, typeArguments, completionIdentifier, positions, TYPE);", "+\t\tthis(tokens, typeArguments, completionIdentifier, positions, K_TYPE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22fc6575be20c805211f331c70f44faa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/modifying/ASTRewritingModifyingCopyTest.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test0007() throws Exception", "signatureAfterChange": " \tpublic void test0007() throws Exception", "diff": ["-\t\tIPackageFragment pack1= fSourceFolder.createPackageFragment(\"test\", false, null);", "+\t\tIPackageFragment pack1= sourceFolder.createPackageFragment(\"test\", false, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2308aeefcb566fef90419d2af92ee18a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/compiler/CompilationParticipant.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void buildStarting(ICompilationParticipantResult[] files, boolean isBatch)", "signatureAfterChange": " public void buildStarting(BuildContext[] files, boolean isBatch)", "diff": ["-public void buildStarting(ICompilationParticipantResult[] files, boolean isBatch) {", "+public void buildStarting(BuildContext[] files, boolean isBatch) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "231d0da3bbe5aeacc21dda02a6ab85e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/RemoveFolderFromIndex.java", "commitBeforeChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "commitAfterChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\tString[] paths = index.queryInDocumentNames(this.folderPath.toString());", "+\t\t\tString[] paths = index.queryDocumentNames(this.folderPath.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2327762916c1c9e41294bb7611a1c36d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPath.java", "commitBeforeChange": "98f970f58fc61208a8cdd52e3b9981ef32c5937b", "commitAfterChange": "29a8044fc706583901ff89364d428dff04f6a567", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void enablePlugin(String pluginId) throws CoreException", "signatureAfterChange": " \tpublic void enablePlugin(String pluginId) throws CoreException", "diff": ["-\t\tFactoryContainer fc = FactoryPathUtil.getPluginFactoryContainer(pluginId);", "+\t\tFactoryContainer fc = FactoryPluginManager.getPluginFactoryContainer(pluginId);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2344250a26518b3fc74f120219436b0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ab1674a0873a6f0955401f0b440fd6a56c6beb1d", "commitAfterChange": "8f5a102c2b8b887f30503ced9c831e6e4e83fdd3", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, List lubStack)", "signatureAfterChange": " \tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, ArrayList lubStack)", "diff": ["-\tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, List lubStack) {", "+\tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, ArrayList lubStack) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "234ace71ca09eededdd0828c2f19be20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5527337a36439b5f7161d1700f05a2afcdb55c60", "commitAfterChange": "9309fad26eb4113a283f2c853c44a62715f49d70", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " \tpublic void updateCycleParticipants( \t\t\tArrayList prereqChain, \t\t\tHashSet cycleParticipants, \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet traversed, \t\t\tMap preferredClasspaths)", "signatureAfterChange": " \tpublic void updateCycleParticipants( \t\t\tArrayList prereqChain, \t\t\tLinkedHashSet cycleParticipants, \t\t\tIWorkspaceRoot workspaceRoot, \t\t\tHashSet traversed, \t\t\tMap preferredClasspaths)", "diff": ["-\t\t\tHashSet cycleParticipants,", "+\t\t\tLinkedHashSet cycleParticipants,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23666ec5144bde2a166cb884918bbb21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate TypeBinding getTypeFromSignature(String typeSignature, Scope scope)", "signatureAfterChange": "  \tprivate TypeBinding getTypeFromSignature(String typeSignature, Scope scope)", "diff": ["-\t\t\tassignableTypeBinding = this.lookupEnvironment.getTypeFromTypeSignature(wrapper, typeVariables, this.assistScope.enclosingClassScope().referenceContext.binding, null, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\tassignableTypeBinding = this.lookupEnvironment.getTypeFromTypeSignature(wrapper, typeVariables, this.assistScope.enclosingClassScope().referenceContext.binding, null, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2369120d8dc0a0a29b6303bbbb6a22a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["-    return buildAllCompliancesRegressionTestSetupSuite(testClass());", "+    return buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2371a72ca5b679cccf550f8c35780320", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     public TypeBinding erasure()", "signatureAfterChange": "     public TypeBinding erasure()", "diff": ["-    \tif (this.kind == Wildcard.EXTENDS)", "+    \tif (this.boundKind == Wildcard.EXTENDS)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2379283575ba8f4928426c2936429312", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0)\treturn;", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0)\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "237aa2e95aabab4392dc905c05d0534d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ClasspathJar.java", "commitBeforeChange": "d12bc71c18644c70f55803c4984554c1c7ec2c7f", "commitAfterChange": "02e41bd22396d523c7a0e7b774bb557781eb6970", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r public boolean equals(Object o)", "signatureAfterChange": "\r \r public boolean equals(Object o)", "diff": ["-\treturn zipFilename.equals(((ClasspathJar) o).zipFilename);\r", "+\treturn zipFilename.equalsIgnoreCase(((ClasspathJar) o).zipFilename);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23a1346ae83adbb5fbd2f111fc5b6b2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ScannerTest.java", "commitBeforeChange": "0aeb22995e46f30c358e82b0f30fbb77f85d3cde", "commitAfterChange": "8f9fbe48639f547ef5e11d2ef3b8f942596a7f36", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test001()", "signatureAfterChange": " \tpublic void test001()", "diff": ["-\t\tassertEquals(\"Wrong token type\", ITerminalSymbols.TokenNameSEMICOLON, token);", "+\t\tassertEquals(\"Wrong token type\", TerminalTokens.TokenNameSEMICOLON, token);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23b93e6858aa8f7820a62ce0ad52e31b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic abstract IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner);", "signatureAfterChange": " \tpublic abstract IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner);", "diff": ["-\tpublic abstract IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner);", "+\tpublic abstract IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23c1d5ded2cd043b9c6d007a9d836f1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23d5805157323b8faef49b235956aa2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "6ed6becc4fd53e7d1da742b5c31941d1e72ebac3", "commitAfterChange": "5dcefe623702748a359807058d8605577453405d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static final boolean camelCaseMatch(char[] pattern, int patternStart, int patternEnd, char[] name, int nameStart, int nameEnd)", "signatureAfterChange": " public static final boolean camelCaseMatch(char[] pattern, int patternStart, int patternEnd, char[] name, int nameStart, int nameEnd)", "diff": ["-\t\t\t\t\t\tcase ScannerHelper.C_LETTER :", "+\t\t\t\t\t\tcase ScannerHelper.C_IDENT_PART :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23e46804136948edf3d2aa09e2396e38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BufferManager.java", "commitBeforeChange": "7b0f09fd73b49ba4dc507ba4a634d425ab3e92c2", "commitAfterChange": "90ccf89195ab29ecb5a569cf526f683aefa3263d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void addBuffer(IBuffer buffer)", "signatureAfterChange": "\r protected void addBuffer(IBuffer buffer)", "diff": ["-\tfOpenBuffers.put(buffer.getOwner(), buffer);\r", "+\topenBuffers.put(buffer.getOwner(), buffer);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23e6489cef4c18547440fd165cfc665b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/SimpleTest.java", "commitBeforeChange": "a6231ce33b0c4c1035133950b71c0c97d48b4fc8", "commitAfterChange": "fb73ff7c4976ff452de2ec97a6404f1940e5234e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void startEvaluationContext() throws TargetException", "signatureAfterChange": " protected void startEvaluationContext() throws TargetException", "diff": ["-\tint evalPort = Util.nextAvailablePortNumber();", "+\tint evalPort = Util.getFreePort();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23f8199718db2ed5067834b58098d2bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "12a6e010258a7666733d016b9126871e7f4b37bb", "commitAfterChange": "8ef864f8873be268d528445b434a1e85f80274c5", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic void setOutputLocation(IPath path, IProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void setOutputLocation(IPath path, IProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\tthis.setRawClasspath(SetClasspathOperation.REUSE_ENTRIES, path, monitor);", "+\t\tthis.setRawClasspath(SetClasspathOperation.DO_NOT_SET_ENTRIES, path, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "240d3639e4e8630225708ad1463ab3a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/ide/org/eclipse/jdt/internal/compiler/apt/ide/filer/IdeJavaSourceFileWriter.java", "commitBeforeChange": "fa6890a86857b15557d9a3a779671e0cc8210b0e", "commitAfterChange": "2f06aa3084f6ea734f231022ff8ccdff064f335a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Override \tpublic void close() throws IOException", "signatureAfterChange": " \t@Override \tpublic void close() throws IOException", "diff": ["-\t\t\tApt6Plugin.log(ce, \"Unable to generate type when JavaSourceFilePrintWriter was closed\"); //$NON-NLS-1$", "+\t\t\tUtil.log(ce, \"Unable to generate type when JavaSourceFilePrintWriter was closed\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241a56b6f7b6614ddabcd785deebc79e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "07210ed7674616bdcd2641f9613679c82ee44c5c", "commitAfterChange": "9264abc30dccad697b2bcd8bdc891f33b88d9018", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tpublic void computeLocalVariablePositions(\r \t\tint initOffset,\r \t\tCodeStream codeStream)", "signatureAfterChange": "\r \tpublic void computeLocalVariablePositions(\r \t\tint initOffset,\r \t\tCodeStream codeStream)", "diff": ["-\t\t\t\t\t&& ((local.declaration.bits & AstNode.IsReachableMASK) != 0)) { // declaration is reachable\r", "+\t\t\t\t\t&& ((local.declaration.bits & AstNode.IsLocalDeclarationReachableMASK) != 0)) { // declaration is reachable\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2425600961a1c8dbe9ff4198c0da45c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "signatureAfterChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, ReferenceBinding invocationType)", "diff": ["-\t\t\tif (currentType.findSuperTypeWithSameErasure(declaringClass) != null) return true;", "+\t\t\tif (currentType.findSuperTypeOriginatingFrom(declaringClass) != null) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "243340a8987c60bcb5ea29a5bbe426fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnFieldName.java", "commitBeforeChange": "32a99f8c41e7f6505e98564a2fe955f48d80f711", "commitAfterChange": "38819b0397930dbfdcf4973c1bb1a5b3cfbe15eb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \t\r \tpublic String toString(int tab)", "signatureAfterChange": "\r \t\r \tpublic String toString(int tab)", "diff": ["-\t\ts += new String(name);\r", "+\t\ts += new String(realName);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24425ad8095c1858deb2b4c27a9a1c02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileManager.java", "commitBeforeChange": "a2ea0fcdb64df5f36a0bf2ffec84669e3f62dfd4", "commitAfterChange": "9db80bfa8f5d6f7bab214c95a4d83c3bdedb2628", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate Iterable<? extends File> getExtdirsFrom(String path)", "signatureAfterChange": "  \tprivate Iterable<? extends File> getExtdirsFrom(String path)", "diff": ["-\t\t} catch (InvalidInputException e) {", "+\t\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "245742dde9697b50336593a9ab71f7ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "commitAfterChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tprotected void updateTimestamp (LRUCacheEntry entry)", "signatureAfterChange": " \tprotected void updateTimestamp (LRUCacheEntry entry)", "diff": ["-\t\tentry._fTimestamp = timestampCounter++;", "+\t\tentry.timestamp = timestampCounter++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24611a831ad120c3c5b22c4aa7d4c3d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "98ad487e103c268099d7117573693243c8d3b8fc", "commitAfterChange": "721a9dcda02493639666143934bddb089e848d18", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 56, "signatureBeforeChange": "  public SearchMatch newTypeReferenceMatch( \t\tIJavaElement enclosingElement, \t\tBinding enclosingBinding, \t\tint accuracy, \t\tASTNode reference)", "signatureAfterChange": "  public TypeReferenceMatch newTypeReferenceMatch( \t\tIJavaElement enclosingElement, \t\tBinding enclosingBinding, \t\tint accuracy, \t\tASTNode reference)", "diff": ["-public SearchMatch newTypeReferenceMatch(", "+public TypeReferenceMatch newTypeReferenceMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2464ae79262f2881d62412114c4e8f27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "6f559832866ec7957220224e260ced70fbcf727a", "commitAfterChange": "f3a6f459efd2ac1aed8a2fbc164dee41b4c19dd6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tint result = ResolveTypeTables[tableId][(expressionId << 4) + expressionId];", "+\t\tint result = OperatorSignatures[tableId][(expressionId << 4) + expressionId];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2468e9133513361dadcdedf92cb5342e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "commitAfterChange": "da25131cabd17a48ed55149d76a1e2be2aabb378", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected void removeReconcileDelta(IWorkingCopy workingCopy)", "signatureAfterChange": " \tprotected void removeReconcileDelta(ICompilationUnit workingCopy)", "diff": ["-\tprotected void removeReconcileDelta(IWorkingCopy workingCopy) {", "+\tprotected void removeReconcileDelta(ICompilationUnit workingCopy) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "246b2d22c5b6675eb53088e2922ae6a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST8Test.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 398, "methodNumberAfterChange": 398, "signatureBeforeChange": " \tpublic void test0396() throws JavaModelException", "signatureAfterChange": " \tpublic void test0396() throws JavaModelException", "diff": ["-\t\tList extraDimensions = singleVariableDeclaration.extraDimensionInfos();", "+\t\tList extraDimensions = singleVariableDeclaration.extraDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "247f5b80e1fba475f0073b2563749717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/BaseConfigurationBlock.java", "commitBeforeChange": "ec654acb2b0d784f0b5dd9a8d411b88442e8fd96", "commitAfterChange": "523ea3b2c64428d6b9f9d9783cbb0776a4263765", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic BaseConfigurationBlock(IStatusChangeListener context, IProject project, Key[] keys, IWorkbenchPreferenceContainer container)", "signatureAfterChange": " \t \tpublic BaseConfigurationBlock(IStatusChangeListener context, IProject project, Key[] keys, IWorkbenchPreferenceContainer container)", "diff": ["-\t\tif (fProject == null || hasProjectSpecificOptions(fProject)) {", "+\t\tif (fProject == null || hasProjectSpecificOptionsNoCache(fProject)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "248130a6bfda25e5fdad0164562d9eeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileWorkingCopy.java", "commitBeforeChange": "24ecdaaa88a3d3df53c6657b56b1c35a02f254d7", "commitAfterChange": "b77d2ea3108de5650fdc8f1f0c9f51bf7203159f", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void commitWorkingCopy(boolean force, IProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  public void commitWorkingCopy(boolean force, IProgressMonitor monitor) throws JavaModelException", "diff": ["+public void commitWorkingCopy(boolean force, IProgressMonitor monitor) throws JavaModelException {", "+\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_ELEMENT_TYPES, this));", "+}", "-\t */", "-\tpublic void commitWorkingCopy(boolean force, IProgressMonitor monitor)", "-\t\tthrows JavaModelException {", "-\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.ELEMENT_DOES_NOT_EXIST, this));", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24880e8f5f79edf19c89146098dae7d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "31e3c66a70e3c9b69b47c38f0b44d65cff7cbfa3", "commitAfterChange": "09d36d761ce96d68639981e72856240cb8764441", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void initializeScanner()", "signatureAfterChange": " public void initializeScanner()", "diff": ["-\tthis.scanner = new SelectionScanner(this.assertMode);", "+\tthis.scanner = new SelectionScanner(this.sourceLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2488bfed182a5d39b1069a3c7ca8d236", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic AnnotatableType getReceiverType()", "signatureAfterChange": " \tpublic AnnotatableType getReceiverType()", "diff": ["-\t\treturn this.receiverType;", "+\t\treturn this.optionalReceiverType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2490767f44de37d6597191649446dd4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected IResource getCurrentResource()", "signatureAfterChange": " \tprotected IResource getCurrentResource()", "diff": ["+\t}", "-\t\treturn this.currentMatchingOpenable.resource;", "+\t\treturn this.currentPotentialMatch.resource;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "249b2a8f413943af21f5f099f1be85e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "525d48c9ddf8862fae803e309d046594be627c6f", "commitAfterChange": "c7564140aa87bfffada113477b30874c6b743c2d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r protected void closing(Object info) throws JavaModelException", "signatureAfterChange": "\r protected void closing(Object info) throws JavaModelException", "diff": ["-\t\tSystem.out.println(\"CLOSING Element (\"+ Thread.currentThread()+\"): \" + this.getHandleIdentifier());  //$NON-NLS-1$//$NON-NLS-2$\r", "+\t\tSystem.out.println(\"CLOSING Element (\"+ Thread.currentThread()+\"): \" + this.toStringWithAncestors());  //$NON-NLS-1$//$NON-NLS-2$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "249f653770c8a7360646ddb4e43e64b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tpublic static CompilationUnitDeclaration parse(char[] source, Map settings)", "signatureAfterChange": " \t \tpublic static CompilationUnitDeclaration parse(char[] source, Map settings)", "diff": ["-\t\tParser parser = new DOMParser(", "+\t\tParser parser = new CommentRecorderParser("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24a43df924bfb189ea490aa21c13c537", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "fb29abb0d0a936af02dd0f8c5ff7d07933a07e52", "commitAfterChange": "961e45cbdd9129afb5c74c3451723a388fb5f038", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected void startBuild(Hashtable options) throws IOException, CoreException", "signatureAfterChange": " \tprotected void startBuild(Hashtable options) throws IOException, CoreException", "diff": ["-\t\tenv.fullBuild();", "+\t\tENV.fullBuild();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24aa84879625ce3f596065da45be2158", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic JavaProject(IProject project, IJavaElement parent)", "signatureAfterChange": "  \tpublic JavaProject(IProject project, JavaElement parent)", "diff": ["-\tpublic JavaProject(IProject project, IJavaElement parent) {", "+\tpublic JavaProject(IProject project, JavaElement parent) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24c3334e63d57926a37bda5aa9ea21e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "signatureAfterChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "diff": ["-\t\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2504d50c0b422ee1a38c4bacb1f4f865", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMCompilationUnit.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public String getName()", "signatureAfterChange": " public String getName()", "diff": ["-\t\treturn topLevelType.getName() + \".java\";  //$NON-NLS-1$", "+\t\treturn topLevelType.getName() + SUFFIX_STRING_java;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2506aead7c5e38a7089a15d8c32b7a6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "commitAfterChange": "c9e042ca313baf5eded9aef49e3870dc5764fbfc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public static void findIndexMatches(InternalSearchPattern pattern, Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor monitor) throws IOException", "signatureAfterChange": " public static void findIndexMatches(SearchPattern pattern, Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor monitor) throws IOException", "diff": ["-public static void findIndexMatches(InternalSearchPattern pattern, Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor monitor) throws IOException {", "+public static void findIndexMatches(SearchPattern pattern, Index index, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope, IProgressMonitor monitor) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "250bf70dda12454a8a395abf151bf85e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a6b76fc7d7890cbbcb2fc001b8031466dd0ad995", "commitAfterChange": "8c05bff0d88a6a537ed2accc1c62c5430e927aee", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static int getProblemCategory(int severity, int problemID)", "signatureAfterChange": " public static int getProblemCategory(int severity, int problemID)", "diff": ["-\t\t\t\tcase (int)(CompilerOptions.TypeParameterHiding >>> 32):", "+\t\t\t\tcase (int)(CompilerOptions.TypeHiding >>> 32):"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25129db5d1d2761268a440a3ce85fcff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "198d94bedf8984594355707af3b11dd0e060bd78", "commitAfterChange": "ebf5deb17f462a2a1a50c9b4076f1d52394081e1", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic void endVisit(AnonymousClassDeclaration node)", "signatureAfterChange": " \tpublic void endVisit(DimensionInfo node)", "diff": ["+\t */", "+\tpublic void endVisit(DimensionInfo node) {", "+\t\t// do nothing by default", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2518bdf879dbd16655fb0892125c9363", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/BooleanConstant.java", "commitBeforeChange": "19eef6f26c48016adc4a14301bf3da3ca0ccecb1", "commitAfterChange": "650839ed308774b6702bdf04023742a308aab499", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static BooleanConstant fromValue(boolean value)", "signatureAfterChange": "  \tpublic static Constant fromValue(boolean value)", "diff": ["-\tpublic static BooleanConstant fromValue(boolean value) {", "+\tpublic static Constant fromValue(boolean value) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2518f6d887e4b4ed467a31749032e222", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Region.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public boolean remove(IJavaElement element)", "signatureAfterChange": " public boolean remove(IJavaElement element)", "diff": ["-\treturn fRootElements.remove(element);", "+\treturn rootElements.remove(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "251cd415aa40c718528ec5d4fdbada17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "dcdb11f13a905cc2d9eed5c3bf38034e243f753b", "commitAfterChange": "454e4bb996219ce871816b02f759355d9d6facb0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r public  boolean isSourceType()", "signatureAfterChange": "\r \tpublic boolean isSourceType()", "diff": ["-public  boolean isSourceType() {\r", "-\treturn sourceType != null;\r", "-}\r", "+\t */\r", "+\tpublic boolean isSourceType() {\r", "+\t\treturn sourceTypes != null;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "252637c0534370fb3f4b18918aca3574", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefConstructorErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefConstructorErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25290f7d1b5b83c35ecd6fe0f571c787", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \r \tpublic final ReferenceBinding getJavaLangError()", "signatureAfterChange": "\r \r \tpublic final ReferenceBinding getJavaLangError()", "diff": ["-\t\tcompilationUnitScope().recordReference(JAVA_LANG_ERROR);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(JAVA_LANG_ERROR);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "258544cfec0010f3e05ef0afecc7f161", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void decodeIndexKey(char[] key)", "signatureAfterChange": " public void decodeIndexKey(char[] key)", "diff": ["-\tthis.classOrInterface = key[key.length - 1];", "+\tthis.typeSuffix = key[key.length - 1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "259675166c305382c15301ed4ebb5d72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "e5bce80011e3833bbea45afb8cd4fb116b193fc5", "commitAfterChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic ITypeBinding[] getDeclaredTypes()", "signatureAfterChange": " \tpublic ITypeBinding[] getDeclaredTypes()", "diff": ["-\t\t} catch (AbortCompilation e) {", "-\t\t\t// in case a member types cannot be resolvable due to missing jars on the classpath", "-\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t} catch (RuntimeException e) {", "+\t\t\t/* in case a method cannot be resolvable due to missing jars on the classpath", "+\t\t\t * see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=63550", "+\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=64299", "+\t\t\t */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a98b0edbf99f7e457dc093a82e70e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "65a63579ebc9b37573db7995b64988407cf25ede", "commitAfterChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void test004() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test004() throws JavaModelException, CoreException", "diff": ["-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, null));", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, systemEncoding));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25afcf3e5d2f3c3b038444d29bfc2e48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "26bbc0f1d79a90c550f0bbb95cc6eeae2aa4e3bf", "commitAfterChange": "3b79f63e00cbebb1fe326313cd6905bd51bae92d", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public IImportDeclaration[] getImports() throws JavaModelException", "signatureAfterChange": " public IImportDeclaration[] getImports() throws JavaModelException", "diff": ["-\tIJavaElement[] elements = ((JavaElementInfo) info).children;", "+\tIJavaElement[] elements = ((ImportContainerInfo) info).children;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25bb5d49aef08eee72304f544d58e2fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BodyDeclaration.java", "commitBeforeChange": "4c63cc3384193b40f8ecd10e816b8df4cb59320a", "commitAfterChange": "0307cad3f1b01ed5d7ce67bc78cd9b706e4819f3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tstatic final ChildListPropertyDescriptor internalModifiers2PropertyFactory(Class nodeClass)", "signatureAfterChange": " \tstatic final ChildListPropertyDescriptor internalModifiers2PropertyFactory(Class nodeClass)", "diff": ["-\t\treturn new ChildListPropertyDescriptor(nodeClass, \"modifiers\", ExtendedModifier.class, CYCLE_RISK); //$NON-NLS-1$", "+\t\treturn new ChildListPropertyDescriptor(nodeClass, \"modifiers\", IExtendedModifier.class, CYCLE_RISK); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25c94fa46ac9b2f2417f1c55b24ff851", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\t \t \tprivate boolean shouldGenerateImplicitLambda(BlockScope currentScope)", "signatureAfterChange": "\t \t \tprivate boolean shouldGenerateImplicitLambda(BlockScope currentScope)", "diff": ["-\t\t\t\tthis.expectedType instanceof IntersectionCastTypeBinding || // marker interfaces require alternate meta factory.", "+\t\t\t\tthis.expectedType instanceof IntersectionTypeBinding18 || // marker interfaces require alternate meta factory."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d4a46a2fbe606767951b8d229edd98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tvoid checkAssignmentEffect(BlockScope scope)", "signatureAfterChange": "  \tvoid checkAssignmentEffect(BlockScope scope)", "diff": ["-\t\t\tthis.bits |= IsAssignmentWithNoEffectMASK; // record assignment has no effect", "+\t\t\tthis.bits |= AssignmentHasNoEffect; // record assignment has no effect"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d7fada8076a0b40281a9b8bfa6ef63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  public void test074() throws JavaModelException", "signatureAfterChange": "  public void test074() throws JavaModelException", "diff": ["-\t\t\"OtherTypes[METHOD_REF<CONSTRUCTOR>]{OtherTypes(), Ljavadoc.text.OtherTypes;, ()V, OtherTypes, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"OtherTypes[METHOD_REF<CONSTRUCTOR>]{OtherTypes(), Ljavadoc.text.OtherTypes;, ()V, OtherTypes, null, \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25d987652129dcc176a4b0ed524f41db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic synchronized ISourceRange mapSource( \t\tIType type, \t\tchar[] contents, \t\tIJavaElement elementToFind)", "signatureAfterChange": " \tpublic synchronized ISourceRange mapSource( \t\tIType type, \t\tchar[] contents, \t\tIJavaElement elementToFind)", "diff": ["-\t\t\t\tnew BasicCompilationUnit(contents, null, type.getElementName() + \".java\", encoding), //$NON-NLS-1$", "+\t\t\t\tnew BasicCompilationUnit(contents, null, type.getElementName() + SUFFIX_STRING_java, encoding),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e1827bd78d118243d6c54a762e0bbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/TypeConverter.java", "commitBeforeChange": "bb0550096faab0e4ba4877ad06be98ecc4f2a72a", "commitAfterChange": "ff69704e7873da2fd087fbac19e278c5d6c62ca3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected TypeReference createTypeReference( \t\tchar[] typeName, \t\tint start, \t\tint end)", "signatureAfterChange": " \tprotected TypeReference createTypeReference( \t\tchar[] typeName, \t\tint start, \t\tint end)", "diff": ["-\t\treturn decodeType(typeName, length, start, end, false);", "+\t\treturn decodeType2(typeName, length, start, end, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e606cdc182cd91dc480ac9739cbd81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "32cac8556c14ef575eb36d6bd2b580c549ffdcb1", "commitAfterChange": "dcd6cd5ad869af9955c9f9d007e5a7e60a912575", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " public ICompilationUnit getWorkingCopy(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ICompilationUnit getWorkingCopy(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\treturn getWorkingCopy(new DefaultWorkingCopyOwner(), null/*no problem requestor*/, monitor);", "+\treturn getWorkingCopy(new WorkingCopyOwner() {/*non shared working copy*/}, null/*no problem requestor*/, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e6db87817408728f22a00594bf73ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_4.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t\treturn buildTestSuiteUniqueCompliance(testClass(), COMPLIANCE_1_4);", "+\t\treturn buildComplianceRegressionSetupSuite(testClass(), COMPLIANCE_1_4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e6edec4416b0e4ea4985d28e8d4427", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BooleanTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25eaa23874f612d40586bfa69abaee11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "commitAfterChange": "831d96bc5763622ed503192c35bfd6688abedd96", "methodNumberBeforeChange": 244, "methodNumberAfterChange": 255, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayName()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayName()", "diff": ["-\tTypeReference typeReference = getTypeReference(0);", "+\tTypeReference typeReference = getUnannotatedTypeReference(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25f4169d006266d5e557afc8fcd16045", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "876aa677201567f6dd87fe8c0b5a5326661e4029", "commitAfterChange": "955478e6d2220d787f88d27b5ca186d67f088e58", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprotected CompilationUnit verifyComments(String fileName, char[] source, Map options)", "signatureAfterChange": "  \tprotected CompilationUnit verifyComments(String fileName, char[] source, Map options)", "diff": ["-\t\tif (unicode) {", "+\t\tif (UNICODE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26035246a4b934aee41fe59de47db7db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate void reportFailureToLoadFactory(String factoryName, IJavaProject jproj)", "signatureAfterChange": " \tprivate void reportFailureToLoadFactory(String factoryName, IJavaProject jproj)", "diff": ["-\t\t\tIMarker marker = project.createMarker(AptPlugin.APT_BUILD_PROBLEM_MARKER);", "+\t\t\tIMarker marker = project.createMarker(AptPlugin.APT_LOADER_PROBLEM_MARKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "260fc2f1f219038b09de133b1a3a161c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "diff": ["-\t\t\tpos = rewriteExtraDimensionsInfo(node, pos, SingleVariableDeclaration.EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\t\tpos = rewriteExtraDimensionsInfo(node, pos, SingleVariableDeclaration.EXTRA_DIMENSIONS2_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26258b7312cc3c2dd498059bab3ff745", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "99721e4b150d4129ca339c356f1ffc5191978b56", "commitAfterChange": "258934f1c54d2b465231481daf72639d0983c8ef", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\t \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, InvocationSite invocationSite)", "signatureAfterChange": "\t \tpublic static MethodBinding computeCompatibleMethod(MethodBinding originalMethod, TypeBinding[] arguments, Scope scope, InvocationSite invocationSite)", "diff": ["-\t\t\t\tTypeBinding mostSpecificSubstitute = scope.mostSpecificCommonType(variableSubstitutes);", "+\t\t\t\tTypeBinding mostSpecificSubstitute = scope.lowerUpperBound(variableSubstitutes);", "+\t\t\t\t//TypeBinding mostSpecificSubstitute = scope.mostSpecificCommonType(variableSubstitutes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "262db704aad4e4fb3677c0608f79d526", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreatePackageFragmentOperation.java", "commitBeforeChange": "4a181894176f3a1eccc3e35147ddca845e353389", "commitAfterChange": "546372dd9318b0aed3b01864163b2d25dd30110a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void executeOperation() throws JavaModelException", "signatureAfterChange": " protected void executeOperation() throws JavaModelException", "diff": ["-\tchar[][] exclusionPatterns = ((PackageFragmentRoot)root).getExclusionPatterns();", "+\tchar[][] exclusionPatterns = ((PackageFragmentRoot)root).fullExclusionPatternChars();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "264a4ed4ae3562b5ed6052025071efcd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/SimpleDOMBuilder.java", "commitBeforeChange": "fb418767dd9874bf03fdf865fcd1b7840e00f2cf", "commitAfterChange": "a00a15a3737081b81f8b394349202f8a1efc6aa3", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r protected SourceElementParser getParser()", "signatureAfterChange": "\r protected SourceElementParser getParser()", "diff": ["-\treturn new SourceElementParser(this, new NullProblemFactory(), new CompilerOptions(JavaCore.getOptions()));\r", "+\treturn new SourceElementParser(this, new DefaultProblemFactory(), new CompilerOptions(JavaCore.getOptions()));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "265a63127bbf3012b63b1ec8d703c754", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \t\r \tpublic PackageDeclaration convertPackage(ImportReference importReference)", "signatureAfterChange": "\r \t\r \tpublic PackageDeclaration convertPackage(ImportReference importReference)", "diff": ["-\t\tpackageDeclaration.setSourceRange(importReference.declarationSourceStart, importReference.declarationSourceEnd - importReference.declarationSourceStart + 1);\r", "+\t\tpackageDeclaration.setSourceRange(importReference.declarationSourceStart, importReference.declarationEnd - importReference.declarationSourceStart + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26665009c36b25914078da4d434aa68e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t\tpublic boolean match(ForStatement node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(EnumConstantDeclaration node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(EnumConstantDeclaration node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26667a07f357b02bd2be6772b473eda4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "a331916366d31b2eac24fa72c43e85436f424bb2", "commitAfterChange": "92833c2313d3c570c2dffa40d03aa84d01695a1a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void resolve()", "signatureAfterChange": "  \tpublic void resolve()", "diff": ["-\t\t\tif (!this.compilationResult.hasSyntaxError()) checkUnusedImports();", "+\t\t\tif (!this.compilationResult.hasErrors()) checkUnusedImports();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26680b785190d369f5742f79a221780e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "73197a47274e75e8fe1581fdac3a086fb2ddf471", "commitAfterChange": "340440fc2f9b9eb03b89c385f562976def2c6c0e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic List<? extends AnnotationMirror> getAnnotationMirrors()", "signatureAfterChange": " \t \t@Override \tpublic List<? extends AnnotationMirror> getAnnotationMirrors()", "diff": ["+\t", "-\t\treturn _env.getFactory().getAnnotationMirrors(getAnnotationBindings());", "+\t\treturn _env.getFactory().getAnnotationMirrors(getPackedAnnotationBindings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "266b5d6b6c96648b55eb41fe73b1f747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  public void test045() throws JavaModelException", "signatureAfterChange": "  public void test045() throws JavaModelException", "diff": ["-\t\t\"method[JAVADOC_METHOD_REF]{{@link javadoc.text.BasicTestTextIns#method()}, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\"method[JAVADOC_METHOD_REF]{{@link javadoc.text.BasicTestTextIns#method()}, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2677b217e865ef2d5f5d19f0c5023c65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic void testMissingCommentsErrorPackage()", "signatureAfterChange": " \tpublic void testMissingCommentsErrorPackage()", "diff": ["-\t\trunNegativeTest(MissingComments, resultForMissingComments(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(MISSING_COMMENTS, resultForMissingComments(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26a0c420e65921f47b275514b2401d82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "b60a608dbabf8b5f04fae21c808d5a97597a41f6", "commitAfterChange": "0812715fc31639c278d6b4cb2dea448517c247bf", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void testMissingTagsJavadocSupportDisabled()", "signatureAfterChange": " \tpublic void testMissingTagsJavadocSupportDisabled()", "diff": ["-\t\tthis.localDocCommentSupport = CompilerOptions.DISABLED;", "+\t\tthis.docCommentSupport = CompilerOptions.DISABLED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26a38fddeb79d5b95c5abbb78fb5b930", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tfinal private void markAsDefinitelyAssigned(int position)", "signatureAfterChange": " \tfinal private void markAsDefinitelyAssigned(int position)", "diff": ["-\t\tif (this != DeadEnd) {", "+\t\tif (this != DEAD_END) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26aaad7de7fe9edf01997c782a20fff9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4412fcf3d168e3c5cc3b92c0b70e5bcf2376f3fc", "commitAfterChange": "8bf9953e1351888d8d186166d8f2000b15a08f07", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void locatePackageDeclarations(SearchParticipant participant) throws JavaModelException", "signatureAfterChange": " public void locatePackageDeclarations(SearchParticipant participant) throws CoreException", "diff": ["-public void locatePackageDeclarations(SearchParticipant participant) throws JavaModelException {", "+public void locatePackageDeclarations(SearchParticipant participant) throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26e8a88e5e289618dafc54247c892ca9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "6d1c57fb2448b115bc8f96943cd4e4f07a42d11a", "commitAfterChange": "d4217008a0577ef6139e05a418f311a9a8588da7", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic static CompilationUnit createAST( \t\t\tIJavaProject javaProject,  \t\t\tfinal ICompilationUnit compilationUnit)", "signatureAfterChange": " \tpublic static CompilationUnit createAST( \t\t\tIJavaProject javaProject,  \t\t\tfinal ICompilationUnit compilationUnit)", "diff": ["-\t\tASTParser p = ASTParser.newParser( AST.JLS3 );", "+\t\tASTParser p = ASTParser.newParser( AST.JLS4 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2707d2f5059e4329503239f5392e9e91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "diff": ["-\t\tif (method.isVararg()) {", "+\t\tif (method.isVarargs()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27100c01c2cfac429abd81e1148fd861", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic int getSpaceLimit()", "signatureAfterChange": " \tpublic int getSpaceLimit()", "diff": ["-\t\treturn fSpaceLimit;", "+\t\treturn spaceLimit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2735e2fdea42ae6a1e3338b2234db0a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " public void testChangeMethodTypeParameters() throws JavaModelException", "signatureAfterChange": " public void testChangeMethodTypeParameters() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27370d060c189a42185d2c55893654c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "8257947b843e715f21b92a87dc4b423cbc1eed03", "commitAfterChange": "00cae100ff4808e2019f6a4d94df4143c8fabbd0", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic void shutdown()", "signatureAfterChange": " \tpublic void shutdown()", "diff": ["-\t\tworkspace.removeResourceChangeListener(JavaModelManager.getJavaModelManager().deltaProcessor);", "+\t\tworkspace.removeResourceChangeListener(JavaModelManager.getJavaModelManager().deltaState);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27373c948ca8805da483c4391f83c40f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": "\t\t\t\t  \tpublic void test090()", "signatureAfterChange": "\t\t\t\t  \tpublic void test090()", "diff": ["-\t\tcustomOptions.put(CompilerOptions.OPTION_ReportUnsafeTypeOperation, CompilerOptions.ERROR);\t\t\t    ", "+\t\tcustomOptions.put(CompilerOptions.OPTION_ReportUncheckedTypeOperation, CompilerOptions.ERROR);\t\t\t    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2745e3eb7565177fc9e389f19c623722", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/WorkQueue.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void add(String element)", "signatureAfterChange": "  public void add(SourceFile element)", "diff": ["-public void add(String element) {", "+public void add(SourceFile element) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27670b2a38181cad6cfcc043a6d7af2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaCorePreferenceInitializer.java", "commitBeforeChange": "77d7a71c34d1f984564aceab6a75ee9e680a55a5", "commitAfterChange": "a06c98c3f334032e12634dc90d780dd76ed4dc28", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void initializeDefaultPreferences()", "signatureAfterChange": " \tpublic void initializeDefaultPreferences()", "diff": ["-\t\tdefaultOptionsMap.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.DISABLED); //$NON-NLS-1$", "+\t\tdefaultOptionsMap.put(JavaCore.CODEASSIST_DISCOURAGED_REFERENCE_CHECK, JavaCore.DISABLED); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "276c87e163bc8ffb74002eb1cdc01307", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/MethodDeclarationImpl.java", "commitBeforeChange": "12d466f946b0693eba415177a4b180457224f6e7", "commitAfterChange": "3db2518a1c0256947da814b102a6f89c20e343c1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public TypeMirror getReturnType()", "signatureAfterChange": "      public TypeMirror getReturnType()", "diff": ["-        if(retType == null )", "+        if(type == null )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2781eeba35da195e7d21ebedd3e0b4fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "5b571c10f6bc3362562e3394fe138c118abcca9f", "commitAfterChange": "c0648c986bd8f9b4b5c031105639a6f9119992bf", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public InferenceContext18 getInferenceContext(ParameterizedGenericMethodBinding method)", "signatureAfterChange": " public InferenceContext18 getInferenceContext(ParameterizedMethodBinding method)", "diff": ["-public InferenceContext18 getInferenceContext(ParameterizedGenericMethodBinding method) {", "+public InferenceContext18 getInferenceContext(ParameterizedMethodBinding method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "278e7802caa674f31da720a67cd46c78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic SearchEngine(ICompilationUnit[] workingCopies)", "signatureAfterChange": " \tpublic SearchEngine(ICompilationUnit[] workingCopies)", "diff": ["-\t\tthis.basicEngine = new SearchBasicEngine(workingCopies);", "+\t\tthis.basicEngine = new BasicSearchEngine(workingCopies);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "279cabfa8a1e14b3ce26e1c077864c60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public RecoveredElement add(Statement statement, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(Statement statement, int bracketBalanceValue)", "diff": ["-\tblock.sourceStart = ((Initializer)fieldDeclaration).bodyStart;", "+\tblock.sourceStart = ((Initializer)fieldDeclaration).sourceStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27aa32ea6c2975da7ae1d3a37e4f1410", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void testExternalJarChanged1() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarChanged1() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27ac598418732effa3a89b918b8a39d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "8fd47ede750ba6005aab3e86ceccb03a6e16dba8", "commitAfterChange": "e0664fc441b4961f478c3f32edb809e211e609ac", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tprivate boolean isValidEdit(OptimizedReplaceEdit edit)", "signatureAfterChange": "  \tprivate boolean isValidEdit(OptimizedReplaceEdit edit)", "diff": ["-\t\t\t\tthis.regions,", "+\t\t\t\tthis.adaptedRegions,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27c909871c3ca187e76c68e059d237df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected void consumeTypeImportOnDemandDeclarationName()", "signatureAfterChange": " protected void consumeTypeImportOnDemandDeclarationName()", "diff": ["-\tthis.patternLocator.match(this.astStack[this.astPtr], this.matchSet);", "+\tthis.patternLocator.match(this.astStack[this.astPtr], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27cc98a1b9f349cc59b86f7af6c6c05d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "\t\t\t \t \tpublic void test088()", "signatureAfterChange": "\t\t\t \t \tpublic void test088()", "diff": ["-\t\tcustomOptions.put(CompilerOptions.OPTION_ReportUnsafeTypeOperation, CompilerOptions.ERROR);\t\t\t    ", "+\t\tcustomOptions.put(CompilerOptions.OPTION_ReportUncheckedTypeOperation, CompilerOptions.ERROR);\t\t\t    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d1bdabd7ce5701feb5bc11c65b8c58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r \r \tpublic final ReferenceBinding getJavaLangThrowable()", "signatureAfterChange": "\r \r \tpublic final ReferenceBinding getJavaLangThrowable()", "diff": ["-\t\tcompilationUnitScope().recordReference(JAVA_LANG_THROWABLE);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(JAVA_LANG_THROWABLE);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27d87caa31752ada68b3c5c1b7174858", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PathCollector.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic boolean acceptIndexMatch(String documentPath, SearchPattern indexRecord, SearchParticipant participant, AccessRestriction access)", "signatureAfterChange": " \tpublic boolean acceptIndexMatch(String documentPath, SearchPattern indexRecord, SearchParticipant participant, AccessRuleSet access)", "diff": ["-\tpublic boolean acceptIndexMatch(String documentPath, SearchPattern indexRecord, SearchParticipant participant, AccessRestriction access) {", "+\tpublic boolean acceptIndexMatch(String documentPath, SearchPattern indexRecord, SearchParticipant participant, AccessRuleSet access) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e55c6130f97be5d7efa259fd97a67f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelStatus.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic IStatus[] getChildren()", "signatureAfterChange": " \tpublic IStatus[] getChildren()", "diff": ["-\t\treturn fChildren;", "+\t\treturn children;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27e9d8660538af78fb4314c5b36011f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized, char[][][] missingTypeNames)", "signatureAfterChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized, char[][][] missingTypeNames)", "diff": ["-\treturn getTypeFromConstantPoolName(signature, start, end, isParameterized, missingTypeNames, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\treturn getTypeFromConstantPoolName(signature, start, end, isParameterized, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27fc89e59977e804ba5ae3b7ebdd1483", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "9d9b626a341c39b3bd7c3dd97a53439bdcd8e46d", "commitAfterChange": "8fdb14b64608b58e620c67bc0f2758fb559de717", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " protected void consumeNormalAnnotation()", "signatureAfterChange": " protected void consumeNormalAnnotation()", "diff": ["-\t\tthis.requestor.acceptTypeReference(annotation.type.getTypeName(), annotation.sourceStart, annotation.sourceEnd);", "+\t\tthis.requestor.acceptAnnotationTypeReference(annotation.type.getTypeName(), annotation.sourceStart, annotation.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28027fbdd9a6218e1602766f577e74e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, boolean assignVariables, char[][][] missingTypeNames, \t\t\t\t\t\t\t\t\t\t\t\t\tTypeAnnotationWalker walker, boolean isClassTypeParameter)", "signatureAfterChange": "  private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, boolean assignVariables, char[][][] missingTypeNames, \t\t\t\t\t\t\t\t\t\t\t\t\tITypeAnnotationWalker walker, boolean isClassTypeParameter)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\t\tTypeAnnotationWalker walker, boolean isClassTypeParameter)", "+\t\t\t\t\t\t\t\t\t\t\t\t\tITypeAnnotationWalker walker, boolean isClassTypeParameter)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28105df9a580e9e6e65a6a0c5f465251", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 416, "methodNumberAfterChange": 416, "signatureBeforeChange": " \tpublic void test397()", "signatureAfterChange": " \tpublic void test397()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "284dfbc89002a54f0ade4fe97d034cc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " public synchronized void jobWasCancelled(IPath containerPath)", "signatureAfterChange": " public synchronized void jobWasCancelled(IPath containerPath)", "diff": ["-\tIPath indexLocation = computeIndexLocation(containerPath);", "+\tIndexLocation indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2855af0505f5ed533c0857cd1575e7fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "2579944d091917e27cee3c25e303d9cdf8721b08", "commitAfterChange": "ff568cfa3818ea8ce091951aa40f00dde1253577", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void setJavaConventionsSettings()", "signatureAfterChange": "  \tpublic void setJavaConventionsSettings()", "diff": ["-\t\tthis.insert_new_line_after_arg_annotation = false;", "+\t\tthis.insert_new_line_after_annotation_on_parameter = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28627b856b5ca2c451e97eb6c95632e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tpublic void testMethod13() throws Exception", "signatureAfterChange": " \tpublic void testMethod13() throws Exception", "diff": ["-\t\t\tassertElementEquals(", "+\t\t\tassertElementExists("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "286d4b1eb2549a1cdf44e793f646a4d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LabelFlowContext.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public LabelFlowContext(FlowContext parent, ASTNode associatedNode, char[] labelName, Label breakLabel, BlockScope scope)", "signatureAfterChange": " \t public LabelFlowContext(FlowContext parent, ASTNode associatedNode, char[] labelName, BranchLabel breakLabel, BlockScope scope)", "diff": ["-public LabelFlowContext(FlowContext parent, ASTNode associatedNode, char[] labelName, Label breakLabel, BlockScope scope) {", "+public LabelFlowContext(FlowContext parent, ASTNode associatedNode, char[] labelName, BranchLabel breakLabel, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2870389c56286c4035195f69c169fb83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void testAddMethod1() throws JavaModelException", "signatureAfterChange": " public void testAddMethod1() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28727c4c8e2132b4cee06cbe07ad1b85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 379, "methodNumberAfterChange": 379, "signatureBeforeChange": " public void parse(ConstructorDeclaration cd, CompilationUnitDeclaration unit, boolean recordLineSeparator)", "signatureAfterChange": " public void parse(ConstructorDeclaration cd, CompilationUnitDeclaration unit, boolean recordLineSeparator)", "diff": ["-\tif(this.options.performStatementsRecovery) {", "+\tif(this.options.performMethodsFullRecovery) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "287411cf48b5257890f32f5b478544a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "32d18ce9895194535a7aa2bea48bdebf445f909f", "commitAfterChange": "0e9c92a289e8289e1100d3a271080a7d3143db00", "methodNumberBeforeChange": 632, "methodNumberAfterChange": 632, "signatureBeforeChange": "\t\t\t \tpublic void test630()", "signatureAfterChange": "\t\t\t \tpublic void test630()", "diff": ["-\t    this.runConformTest(", "+\t    this.runNegativeTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28746f8c992504aef967967bde08574b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyNotificationTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testAddCompilationUnitInRegion() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " public void testAddCompilationUnitInRegion() throws JavaModelException, CoreException, IOException", "diff": ["-\t\t\tIType throwableClass = getClassFile(\"TypeHierarchyNotification\", getExternalJCLPath(), \"java.lang\", \"Throwable.class\").getType();", "+\t\t\tIType throwableClass = getClassFile(\"TypeHierarchyNotification\", getExternalJCLPathString(), \"java.lang\", \"Throwable.class\").getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28784bbc32198d4717e90e2b2d61b653", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "3ddb2a51bb7ecb990a4cb3c8c58e694fcc8fcead", "commitAfterChange": "92881376ff1daa90c2bf34dd0a9f8d08e62b099c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t\tRefreshJob(Iterator externalFolders)", "signatureAfterChange": " \t\tRefreshJob(Vector externalFolders)", "diff": ["-\t\tIterator externalFolders = null;", "-\t\tRefreshJob(Iterator externalFolders){", "+\t\tVector externalFolders = null;", "+\t\tRefreshJob(Vector externalFolders){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28846988844ea26a971cb3ac8f068ece", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "a510ea82e69cf57e5501100da81589ab64a9b9cc", "commitAfterChange": "d939c06c1bb86210ecdbf93881e5113054d8f519", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CodeSnippetClassFile( \torg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding aType, \torg.eclipse.jdt.internal.compiler.ClassFile enclosingClassFile, \tboolean creatingProblemType)", "signatureAfterChange": " public CodeSnippetClassFile( \torg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding aType, \torg.eclipse.jdt.internal.compiler.ClassFile enclosingClassFile, \tboolean creatingProblemType)", "diff": ["-\tthis.produceDebugAttributes = this.referenceBinding.scope.compilerOptions().produceDebugAttributes;", "+\tthis.produceAttributes = this.referenceBinding.scope.compilerOptions().produceDebugAttributes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28a49bb884ecd7da59e5d87cac387043", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner)", "signatureAfterChange": " \tpublic IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner)", "diff": ["-\tpublic IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner) {", "+\tpublic IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28bdc68d237f08330dc2f2eecfd29f85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, TypeAnnotationWalker walker, char [][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, ITypeAnnotationWalker walker, char [][][] missingTypeNames)", "diff": ["-private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, TypeAnnotationWalker walker, char [][][] missingTypeNames) {", "+private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, ITypeAnnotationWalker walker, char [][][] missingTypeNames) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c4b163a988a71227363146dbb31029", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathJar.java", "commitBeforeChange": "30961650a033c638f3a768401431bcd77f1a4058", "commitAfterChange": "7d1e8775d87112012e8a87b6995e3b0bfd71512c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public ClasspathJar(ZipFile zipFile)", "signatureAfterChange": "  public ClasspathJar(ZipFile zipFile)", "diff": ["-\tthis.packageCache = null;", "+\tthis.knownPackageNames = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28d2cda113fd0aeb6266797d50065c38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  public void test047() throws JavaModelException", "signatureAfterChange": "  public void test047() throws JavaModelException", "diff": ["-\t\t\"method[METHOD_REF]{method(), Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"method[METHOD_REF]{method(), Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28d860d0db0fc8bb77609b8b11a0a0af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "95f59caaf27a775333076cb1bc1d967e2796cdb3", "commitAfterChange": "7e41439f7b91a880bb131d143b9faf947232eb35", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public ParameterizedTypeBinding createParameterizedType(ReferenceBinding genericType, TypeBinding[] typeArguments, ReferenceBinding enclosingType)", "signatureAfterChange": "  public ParameterizedTypeBinding createParameterizedType(ReferenceBinding genericType, TypeBinding[] typeArguments, ReferenceBinding enclosingType)", "diff": ["-\t\t\t    if (cachedType.type() != genericType) continue nextCachedType; // remain of unresolved type", "+\t\t\t    if (cachedType.actualType() != genericType) continue nextCachedType; // remain of unresolved type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28db38635f48b0bef345deef27aec481", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/BasePreferencePage.java", "commitBeforeChange": "67975c44c978fcc3c550a5b5ce1ec6de6e5d9bb1", "commitAfterChange": "5596ce7177e982e5dd5f29e0b4e0b8ab6f20d1c8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprotected boolean hasProjectSpecificOptions(IProject project)", "signatureAfterChange": " \t \tprotected boolean hasProjectSpecificOptions(IProject project)", "diff": ["-\t\treturn getConfigurationBlock().hasProjectSpecificOptions(project);", "+\t\t// Workaround for bug 106111 / 111144:", "+\t\t// See BaseConfigurationBlock.hasProjectSpecificOptionsNoCache() for details.", "+\t\treturn getConfigurationBlock().hasProjectSpecificOptionsNoCache(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28df2c9ecdb710e637d6aa7c315e674c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "ba623d582045575b43eee2b86be165ff58225746", "commitAfterChange": "5f25db2c9c02bf799108bff292447ab679c3c3b7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": " public boolean doesMethodOverride(MethodBinding method, MethodBinding inheritedMethod)", "signatureAfterChange": " public boolean doesMethodOverride(MethodBinding method, MethodBinding inheritedMethod)", "diff": ["-\treturn areReturnTypesEqual(method, inheritedMethod) && areParametersEqual(method, inheritedMethod);", "+\treturn areReturnTypesEqual(method, inheritedMethod) && areMethodsEqual(method, inheritedMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28ec041f200271961a0193ccab075c66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected void parseAndBuildBindings(PossibleMatch possibleMatch, boolean mustResolve)", "signatureAfterChange": " protected void parseAndBuildBindings(PossibleMatch possibleMatch, boolean mustResolve)", "diff": ["-\t\tif (SearchBasicEngine.VERBOSE)", "+\t\tif (BasicSearchEngine.VERBOSE)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28f507452aba95007813b61cb719f2ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractComparableTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test buildComparableTestSuite(Class evaluationTestClass)", "signatureAfterChange": "  \tpublic static Test buildComparableTestSuite(Class evaluationTestClass)", "diff": ["-\t\tTest suite = buildTestSuiteWithMinimalCompliance(evaluationTestClass, F_1_5);", "+\t\tTest suite = buildComplianceRegressionTestSetupSuite(evaluationTestClass, F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2909e78d2c303dff7f7107a196831b7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "4f113d7aa945e602017e7829c71f3e73f6f0d8c6", "commitAfterChange": "10602e047e367cd079244f747e70d9745d54ecf5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprotected void processAnnotations(ICompilationUnit[] sourceUnits)", "signatureAfterChange": "  \tprotected void processAnnotations(ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\t\tbeginToCompile(newUnits);", "+\t\t\t\tprocessBeginToCompile(newUnits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "291886ec55b83fac452cb7b32dfde8f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "a82ce37ff874ba0e833f2970ef837c525377a572", "commitAfterChange": "b4f075361126213edb4ab60051081d2143c229e2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t \t \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "\t \t \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t\t((Clinit) method).addSupportForAssertion(assertionSyntheticFieldBinding);", "+\t\t\t\t((Clinit) method).setAssertionSupport(assertionSyntheticFieldBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "292f6da34c21269d98698609c36ec10a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": " \tprotected void setModifiers(FieldDeclaration fieldDeclaration, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl)", "signatureAfterChange": " \tprotected void setModifiers(FieldDeclaration fieldDeclaration, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl)", "diff": ["-\t\t\t\tfieldDeclaration.internalSetModifiers(fieldDecl.modifiers & CompilerModifiers.AccJustFlag);", "+\t\t\t\tfieldDeclaration.internalSetModifiers(fieldDecl.modifiers & ExtraCompilerModifiers.AccJustFlag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29354c8d912e56693bacf0cd7e1b3a98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 46, "signatureBeforeChange": " private synchronized void removeIndexesState(IPath[] locations)", "signatureAfterChange": " private synchronized void removeIndexesState(IndexLocation[] locations)", "diff": ["-private synchronized void removeIndexesState(IPath[] locations) {", "+private synchronized void removeIndexesState(IndexLocation[] locations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2950c77d09f69667736f49f328853d2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "d7f3937eb856f99bfe441e00382ecd34ff8ecdb2", "commitAfterChange": "8be8e9c07b73fa634afa35d2562cbf41ce93440a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod)", "signatureAfterChange": " MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod)", "diff": ["-\t\t\targuments[i] = inheritedTypeVariables[i].erasure();", "+\t\t\targuments[i] = inheritedTypeVariables[i].upperBound();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2977a3d04041f27f815847c0d77fa09b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void configurePluginDebugOptions()", "signatureAfterChange": " \tpublic void configurePluginDebugOptions()", "diff": ["-\t\t\tif(option != null) SearchBasicEngine.VERBOSE = option.equalsIgnoreCase(\"true\") ; //$NON-NLS-1$", "+\t\t\tif(option != null) BasicSearchEngine.VERBOSE = option.equalsIgnoreCase(\"true\") ; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "297e1383d9866f5ed52b6ec5e73fc4c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testResolveInvalidResolve() throws JavaModelException", "signatureAfterChange": " public void testResolveInvalidResolve() throws JavaModelException", "diff": ["-\t\tassertTrue(\"Incorrect status on the JavaModelException\", jme.getStatus().getCode() == JavaModelStatus.INDEX_OUT_OF_BOUNDS);", "+\t\tassertTrue(\"Incorrect status on the JavaModelException\", jme.getStatus().getCode() == IJavaModelStatusConstants.INDEX_OUT_OF_BOUNDS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298639c31a542493ca48c9a7845de3e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "4a181894176f3a1eccc3e35147ddca845e353389", "commitAfterChange": "546372dd9318b0aed3b01864163b2d25dd30110a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected boolean computeChildren(OpenableElementInfo info, IResource resource) throws JavaModelException", "signatureAfterChange": " protected boolean computeChildren(OpenableElementInfo info, IResource resource) throws JavaModelException", "diff": ["-\t\tchar[][] exclusionPatterns = ((PackageFragmentRoot)getPackageFragmentRoot()).getExclusionPatterns();", "+\t\tchar[][] exclusionPatterns = ((PackageFragmentRoot)getPackageFragmentRoot()).fullExclusionPatternChars();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "299776dbb61b0dba9d9beb33a44a9c3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "287b4c9e54d4bce062e6eecece35b8e7ce844a76", "commitAfterChange": "3f4150ac4efa9b8d64500efc25a550943b6c1ff6", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void endVisit(Modifier node)", "signatureAfterChange": " \tpublic void endVisit(NormalAnnotation node)", "diff": ["-\tpublic void endVisit(Modifier node) {", "-\t\tendVisitNode(node);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "299e6d61e39c5edc285c6cc828236d89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void reportAccurateReference(int sourceStart, int sourceEnd, char[][] tokens, IJavaElement element, int[] accuracies) throws CoreException", "signatureAfterChange": " public void reportAccurateReference(int sourceStart, int sourceEnd, char[][] tokens, IJavaElement element, int[] accuracies) throws CoreException", "diff": ["-\tscanner.setSource(this.currentPotentialMatch.getContents());", "+\tscanner.setSource(this.currentPossibleMatch.getContents());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29a1a3a7d362be7a12c7b919f5d94771", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testAddExclusionOnCompilationUnit() throws CoreException", "signatureAfterChange": " public void testAddExclusionOnCompilationUnit() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29c76dbb7abb548a5872a0aeb039bf75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29e14e3c3295e63e7fffafff87c95d63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionParserTest2.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(CompletionParserTest2.class);", "+\treturn buildAllCompliancesTestSuite(CompletionParserTest2.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29e2524c03cd11f803a08067aa63fb03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29e684468d0563d614a0b5d0d3d03cf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b9de5f3466a9b4d6687de837720c445097067b16", "commitAfterChange": "39416e9e4305b172d90b88aed3085d98ded0a86c", "methodNumberBeforeChange": 227, "methodNumberAfterChange": 227, "signatureBeforeChange": "\r public ProblemReporter problemReporter()", "signatureAfterChange": "\r public ProblemReporter problemReporter()", "diff": ["-\t\tcompilationUnit.compilationResult.lineSeparatorPositions = scanner.lineEnds();\r", "+\t\tcompilationUnit.compilationResult.lineSeparatorPositions = scanner.getLineEnds();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29fdb5bebb6b3ea52b57b8d195b9510f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 339, "signatureBeforeChange": "  \tpublic void test319()", "signatureAfterChange": "  \tpublic void test319()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a0fc6a16eafd42baaa711bdaa8f421e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/AbortCompilation.java", "commitBeforeChange": "6a22aca625969383c16110c2f231ad75730f0d23", "commitAfterChange": "52ec5e5910757b6546015a0dcaa60e633b7917f4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void updateContext(InvocationSite invocationSite, CompilationResult unitResult)", "signatureAfterChange": " \t \tpublic void updateContext(InvocationSite invocationSite, CompilationResult unitResult)", "diff": ["-\t\tthis.problem.setSourceLineNumber(ProblemHandler.searchLineNumber(unitResult.getLineSeparatorPositions(), invocationSite.sourceStart()));", "+\t\tthis.problem.setSourceLineNumber(Util.searchLineNumber(unitResult.getLineSeparatorPositions(), invocationSite.sourceStart()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a162909984b643efec75d4992feb289", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " \tpublic void endVisit(TryStatement node)", "signatureAfterChange": " \tpublic void endVisit(NormalAnnotation node)", "diff": ["+\t */", "+\tpublic void endVisit(NormalAnnotation node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a181186ec3379951e7fffebe50903e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaCorePreferenceInitializer.java", "commitBeforeChange": "b397fbf1ef2684ee73e7617091ec4c7be38fc011", "commitAfterChange": "6f0a551b112b4a83b1d92edcbe8485beddfb0779", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void initializeDefaultPreferences()", "signatureAfterChange": " \tpublic void initializeDefaultPreferences()", "diff": ["-\t\tdefaultOptionsMap.put(JavaCore.CODEASSIST_CAMEL_CASE_MATCH, JavaCore.DISABLED);", "+\t\tdefaultOptionsMap.put(JavaCore.CODEASSIST_CAMEL_CASE_MATCH, JavaCore.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a253e4ca070c77d6d8e0dd49c311f3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " protected void consumeEnhancedForStatement()", "signatureAfterChange": " protected void consumeEnhancedForStatement()", "diff": ["-\tif (statement instanceof EmptyStatement) statement.bits |= ASTNode.IsUsefulEmptyStatementMASK;", "+\tif (statement instanceof EmptyStatement) statement.bits |= ASTNode.IsUsefulEmptyStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a5236d1f41dd8cbe52bb7b7e18880bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "     public ITypeBinding[] getMemberValueTypeBinding(String membername)", "signatureAfterChange": "     public ITypeBinding[] getMemberValueTypeBinding(String membername)", "diff": ["-\t\t\t\treturn getValueTypeBinding(value, pair.getMemberBinding().getReturnType());", "+\t\t\t\treturn getValueTypeBinding(value, pair.getMethodBinding().getReturnType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a5ed677a8ca358b02992527cd9b7cb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "f5937020c6b957eed03745f57cfee671f23dd9b8", "commitAfterChange": "ad2aca1c2960107e50013b8f7866125addb168b4", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public boolean isRepeatableAnnotation()", "signatureAfterChange": " public boolean isRepeatableAnnotation()", "diff": ["-\treturn this.containerAnnotation != null;", "+\treturn this.containingAnnotation != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a619871882ad5a588a44f0da5336ab5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void _test_nonnull_return_012()", "signatureAfterChange": " public void _test_nonnull_return_012()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6c8bac5bb9895bc4648735bf01f873", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " protected NameReference getUnspecifiedReferenceOptimized()", "signatureAfterChange": " protected NameReference getUnspecifiedReferenceOptimized()", "diff": ["-\tthis.patternLocator.match(nameRef, this.matchSet); // NB: Don't check container since unspecified reference can happen anywhere", "+\tthis.patternLocator.match(nameRef, this.nodeSet); // NB: Don't check container since unspecified reference can happen anywhere"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a7b416c747fa528a824d3a704cba844", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "signatureAfterChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceType(), packageBinding);\r", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), packageBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a82d2b16fd1d9c973616e827b0a0b13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void testBug22043a() throws JavaModelException", "signatureAfterChange": "  public void testBug22043a() throws JavaModelException", "diff": ["-\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(String), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.String;)V, thisIsAMethod, (param), \"+this.positions+R_DICENNRNS+\"}\"", "+\t\t\"thisIsAMethod[METHOD_REF]{thisIsAMethod(String), Ljavadoc.bugs.BasicTestBugs;, (Ljava.lang.String;)V, thisIsAMethod, (param), \"+this.positions+R_DRICENNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a99d0b81103d0fafd2fa7c5c7061038", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "48a78bfcb529886e24e5f62b1bc56f7d3678e46a", "commitAfterChange": "ec1408476a66b2a958a4e514cbefd2cf0438efc9", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, InvocationSite site)", "signatureAfterChange": " \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, InvocationSite site)", "diff": ["-\t\t\tint inferenceKind = InferenceContext18.CHECK_STRICT;", "+\t\t\tint inferenceKind = InferenceContext18.CHECK_UNKNOWN;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a9cbbcdfb3aabc2a123926f1446b02f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathLocation.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  static ClasspathLocation forLibrary(String libraryPathname, AccessRestriction accessRestriction)", "signatureAfterChange": "  static ClasspathLocation forLibrary(String libraryPathname, AccessRuleSet accessRestriction)", "diff": ["-static ClasspathLocation forLibrary(String libraryPathname, AccessRestriction accessRestriction) {", "+static ClasspathLocation forLibrary(String libraryPathname, AccessRuleSet accessRestriction) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ab10ffa4ce9f7a0f6000fbf4a312eee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testAttachSourceSourceRange() throws JavaModelException", "signatureAfterChange": " public void testAttachSourceSourceRange() throws JavaModelException", "diff": ["-\tIClassFile cf = this.jarRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ab54d99eb1f1d0c07d980dbcb540b22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "commitAfterChange": "92de34b6787dd9427ed3fc5c5ad56a704826bbea", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void endVisit(ArrayCreation node)", "signatureAfterChange": " \tpublic void endVisit(TypeParameter node)", "diff": ["+\tpublic void endVisit(TypeParameter node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2abe02183b1e1bbba3ede9ba9c8bcb31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "66cd4232d0ab1e96e3a07f02c56b8bad9d7784af", "commitAfterChange": "c4f302586af8fb051e0ee3dd72d43fa433091810", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public SelectionRequestor(INameLookup nameLookup, IJavaElement codeResolve)", "signatureAfterChange": "\r public SelectionRequestor(NameLookup nameLookup, IJavaElement codeResolve)", "diff": ["-public SelectionRequestor(INameLookup nameLookup, IJavaElement codeResolve) {\r", "+public SelectionRequestor(NameLookup nameLookup, IJavaElement codeResolve) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ae96357a60d7c48abeabbadae92a92c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " ReferenceBinding[] resolvedExceptionTypesFor(MethodBinding method)", "signatureAfterChange": " ReferenceBinding[] resolvedExceptionTypesFor(MethodBinding method)", "diff": ["-\tif ((method.modifiers & CompilerModifiers.AccUnresolved) == 0)", "+\tif ((method.modifiers & ExtraCompilerModifiers.AccUnresolved) == 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aeee6860675ba1bce122991bbd92d48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ScannerTest.java", "commitBeforeChange": "905a8b88b6335f2b4254879b34574609cb022fab", "commitAfterChange": "9ba1bcaab7c3fdb03be0ddde1b46bd0168bfeaed", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void test001()", "signatureAfterChange": " \tpublic void test001()", "diff": ["-\t\tassertEquals(\"Wrong token type\", TerminalTokens.TokenNameSEMICOLON, token);", "+\t\tassertEquals(\"Wrong token type\", ITerminalSymbols.TokenNameSEMICOLON, token);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b0220a2ee1152f14b552cb32e4c2f9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "24071af935ae982264becd6377e49aeb82ae6605", "commitAfterChange": "630841750ec7fd372d10d6a06da2b09122e947d0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CastExpression(Expression expression, Expression type)", "signatureAfterChange": " public CastExpression(Expression expression, TypeReference type)", "diff": ["-public CastExpression(Expression expression, Expression type) {", "+public CastExpression(Expression expression, TypeReference type) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b13c745564537ecbe226c3200855dab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeMirrorImpl.java", "commitBeforeChange": "73197a47274e75e8fe1581fdac3a086fb2ddf471", "commitAfterChange": "340440fc2f9b9eb03b89c385f562976def2c6c0e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationType)", "signatureAfterChange": "  \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationType)", "diff": ["-\t\treturn _env == null ? null : _env.getFactory().getAnnotation(getAnnotationBindings(), annotationType);", "+\t\treturn _env == null ? null : _env.getFactory().getAnnotation(getPackedAnnotationBindings(), annotationType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b387330d77368e18a7327928f73aac9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IMethodBinding.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic IResolvedAnnotation[] getParameterAnnotations(int paramIndex);", "signatureAfterChange": " \tpublic IAnnotationBinding[] getParameterAnnotations(int paramIndex);", "diff": ["-\tpublic IResolvedAnnotation[] getParameterAnnotations(int paramIndex);", "+\tpublic IAnnotationBinding[] getParameterAnnotations(int paramIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3c942f96e6e43f3bbf927ba47c6dba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic boolean visit(MessageSend messageSend, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(MessageSend messageSend, BlockScope scope)", "diff": ["-\t\t\t\t\t\tthis.preferences.message_send_selector_alignment,", "+\t\t\t\t\t\tthis.preferences.alignment_for_selector_in_method_invocation,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b3cc0cb3346222ca5b1bca8b512b691", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  public void test078() throws JavaModelException", "signatureAfterChange": "  public void test078() throws JavaModelException", "diff": ["-\t\t\"BasicTestTextIns[METHOD_REF<CONSTRUCTOR>]{BasicTestTextIns(int, float, Class), Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"BasicTestTextIns[METHOD_REF<CONSTRUCTOR>]{BasicTestTextIns(int, float, Class), Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b840b09919c20316eecb05a0b238707", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "ea916b0462fec6996e619f84c30f348e2877686a", "commitAfterChange": "558c64a899c0debc518d6eb92e85f37b05902eba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic ReferenceExpression(TypeReference type, TypeReference[] typeArguments, SingleNameReference method)", "signatureAfterChange": "  \tpublic ReferenceExpression(TypeReference type, TypeReference[] typeArguments, SingleNameReference method)", "diff": ["-\t\tthis.typeArguments = typeArguments;", "+\t\tthis.typeParameters = typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b9a60b97790b7b1db6d325262a0edea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tboolean visit(AnnotationArgumentExpression expression, BlockScope scope);", "signatureAfterChange": " \tboolean visit(JavadocArgumentExpression expression, BlockScope scope);", "diff": ["-\tboolean visit(AnnotationArgumentExpression expression, BlockScope scope);", "+\tboolean visit(JavadocArgumentExpression expression, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba84dceebb932ac51b242aee842c4ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b34a79aea557f53b7f18bd9181d2f1aa9458b4f9", "commitAfterChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "\t\t\t\r \tprivate void computeExpandedClasspath(\r \t\tJavaProject initialProject, \r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError,\r \t\tObjectSet visitedProjects, \r \t\tObjectVector accumulatedEntries) throws JavaModelException", "signatureAfterChange": "\t\t\t\r \tprivate void computeExpandedClasspath(\r \t\tJavaProject initialProject, \r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError,\r \t\tHashSet visitedProjects, \r \t\tObjectVector accumulatedEntries) throws JavaModelException", "diff": ["-\t\tObjectSet visitedProjects, \r", "+\t\tHashSet visitedProjects, \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bbdfaef9fc9e85efe039f378a3f59f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": "\r final public void ifne(Label lbl)", "signatureAfterChange": "\r final public void ifne(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_ifne, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_ifne, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bca00d915ec54479830c61d1ae91b19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceTypeElementInfo.java", "commitBeforeChange": "1aec0ecbb4ca25bac2a6fb4145ea7c0b2ac36a74", "commitAfterChange": "99721e4b150d4129ca339c356f1ffc5191978b56", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public char[][] getTypeParameterSignatures()", "signatureAfterChange": " public char[][] getTypeParameterSignatures()", "diff": ["-\t\t\t\t\t\tboundSignatures[i] = Signature.createCharArrayTypeSignature(bounds[j], false);", "+\t\t\t\t\t\tboundSignatures[j] = Signature.createCharArrayTypeSignature(bounds[j], false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bd078f9df12e628dcfb5a2e82fe9936", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterBindingsTest.java", "commitBeforeChange": "28475f7151ef48b7b99d16fedb7cc564edf8391b", "commitAfterChange": "4374063ffc07d9e5a6e12269e991cbcb89c32543", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tpublic void endVisit(AnnotationTypeMemberDeclaration node)", "signatureAfterChange": " \t\tpublic void endVisit(AnnotationTypeMemberDeclaration node)", "diff": ["-\t\t\tIVariableBinding binding = node.resolveBinding();", "+\t\t\tIMethodBinding binding = node.resolveBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bd2dcb5f767e2f96d1392863e3d3f30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "commitAfterChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 215, "signatureBeforeChange": "  private boolean isIdentifier(int token)", "signatureAfterChange": "  private boolean isIdentifier(int token)", "diff": ["-\treturn token == Scanner.TokenNameIdentifier;", "+\treturn token == TerminalTokens.TokenNameIdentifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bd4c345fbbb202c874d4274a8d37be2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void remember(IType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private void remember(IType type, ReferenceBinding typeBinding)", "diff": ["-\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bdb25adb107f9300ff682f4832ed9d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void testSuggestFieldName013()", "signatureAfterChange": " public void testSuggestFieldName013()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2be78e52f3974821610d3a81e41d8b49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public AbstractMethodDeclaration updatedMethodDeclaration()", "signatureAfterChange": " public AbstractMethodDeclaration updatedMethodDeclaration()", "diff": ["-\tif (localTypeCount > 0) methodDeclaration.bits |= ASTNode.HasLocalTypeMASK;", "+\tif (localTypeCount > 0) methodDeclaration.bits |= ASTNode.HasLocalType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bee9b8e8bdfc8d7b43aa94aeb68773e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " \tpublic void endVisit(CompilationUnit node)", "signatureAfterChange": " \tpublic void endVisit(AnnotationTypeMemberDeclaration node)", "diff": ["+\t */", "+\tpublic void endVisit(AnnotationTypeMemberDeclaration node) {", "+\t\t// default implementation: do nothing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bf8d73d45dc1878913e4a62716faa75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ArrayInitializer arrayInitializer, BlockScope scope)", "diff": ["-\t\tformatArrayInitializer(arrayInitializer, scope, this.preferences.insert_space_before_opening_brace_in_array_initializer || this.preferences.insert_space_after_assignment_operators);", "+\t\tformatArrayInitializer(arrayInitializer, scope, this.preferences.insert_space_before_opening_brace_in_array_initializer || this.preferences.insert_space_after_assignment_operator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bff7454e9d54c4d3351578b305568cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "commitAfterChange": "74ac0014c1ede0ba61ac73f39089ab641618bf5d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tfinal private String getIndentOfLine(int pos)", "signatureAfterChange": " \t \tfinal private String getIndentOfLine(int pos)", "diff": ["-\t\t\twhile (i < cont.length && Indents.isIndentChar(content[i])) {", "+\t\t\twhile (i < cont.length && IndentManipulation.isIndentChar(content[i])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c06d88a00e8adbac630e4e71b2cea47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 317, "methodNumberAfterChange": 317, "signatureBeforeChange": "  \tpublic void test297()", "signatureAfterChange": "  \tpublic void test297()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, \"4\");", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, \"4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c0cb2def733f462837a5c19d93e09a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void testInvalidTagsMethodErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsMethodErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c11f0d704e80c7e8847f342b840311b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected static Object convertConstant(Constant constant)", "signatureAfterChange": " protected static Object convertConstant(Constant constant)", "diff": ["-\t\tcase TypeIds.T_String :", "+\t\tcase TypeIds.T_JavaLangString :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c1958f319d1d290d4a053928e54f66b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/ArchiveFileObject.java", "commitBeforeChange": "559e5f2f8f5db2c53b837aedd1782f0020008093", "commitAfterChange": "a256ec457e5133c78e70ccd040a0f76b1f8e178c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException", "signatureAfterChange": " \tpublic CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException", "diff": ["-\t\t\treturn Util.getCharContents(this, ignoreEncodingErrors, org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(this.zipEntry, this.zipFile), this.charset.toString());", "+\t\t\treturn Util.getCharContents(this, ignoreEncodingErrors, org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(this.zipEntry, this.zipFile), this.charset.name());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c21dc4fd23506b4386916939d76ccbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "signatureAfterChange": " protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "diff": ["-\t\t\t\tJavaBuilder.removeProblemsFor(javaBuilder.currentProject); // make this the only problem for this project", "+\t\t\t\tJavaBuilder.removeProblemsAndTasksFor(javaBuilder.currentProject); // make this the only problem for this project"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c2d7ae77886e3c732827b59ff1c49da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\tIResource file = classFile.getResource();", "+\t\t\t\t\t\tIResource file = classFile.resource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c334ba599cb8981b39f0bf80f7521c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddClassFileToIndex.java", "commitBeforeChange": "994909f27ab64cbff8a4b8b71b6f8d78e265bc42", "commitAfterChange": "fd0bab5fda3357e5a56e4647b1a6d36779abe285", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public String toString()", "signatureAfterChange": "\r \tpublic String toString()", "diff": ["-}\r", "-public String toString(){\r", "-\treturn \"indexing \" + resource.getName(); //$NON-NLS-1$\r", "-}\r", "+\tpublic String toString() {\r", "+\t\treturn \"indexing \" + resource.getFullPath(); //$NON-NLS-1$\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c68507074387307ead4be3e37b8c666", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "e5dee4f66ab3257e0d9e4e34690323cf2d5f7c21", "commitAfterChange": "ba7f55d89dcf40f0d2718397b348f39209d50c3a", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic PrimitiveTypeImpl getShortType()", "signatureAfterChange": " \tpublic PrimitiveTypeImpl getShortType()", "diff": ["-\tpublic PrimitiveTypeImpl getLongType(){ return _primitives[6]; }", "-\tpublic PrimitiveTypeImpl getShortType(){ return _primitives[7]; }", "+\tpublic PrimitiveTypeImpl getLongType(){ return _primitives[LONG_INDEX]; }", "+\tpublic PrimitiveTypeImpl getShortType(){ return _primitives[SHORT_INDEX]; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c76465560895bcfe8f08c0eb47a4c31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ASTBasedAnnotationElementDeclarationImpl.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "            public TypeMirror getReturnType()", "signatureAfterChange": "            public TypeMirror getReturnType()", "diff": ["-            if(retType == null )", "+            if(type == null )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c7dfc86d5ed5ea7ccf482d0d9d4ddc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": " \tpublic void endVisit(SingleVariableDeclaration node)", "signatureAfterChange": " \tpublic void endVisit(ParameterizedType node)", "diff": ["+\t */", "+\tpublic void endVisit(ParameterizedType node) {", "+\t\t// default implementation: do nothing", "+\t}\t", "-\tpublic void endVisit(SingleVariableDeclaration node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c85621b4dd24543651269b4d9575b7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testGetCategories06() throws CoreException", "signatureAfterChange": " public void testGetCategories06() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c86393a17eefbece65ccd3c0f521959", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " protected void consumeAssignment()", "signatureAfterChange": " protected void consumeAssignment()", "diff": ["-\tthis.patternLocator.match(this.expressionStack[this.expressionPtr], this.matchSet);", "+\tthis.patternLocator.match(this.expressionStack[this.expressionPtr], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c88d371097c749d38bd67987a233b16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST8Test.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 395, "methodNumberAfterChange": 395, "signatureBeforeChange": " \tpublic void test0393() throws JavaModelException", "signatureAfterChange": " \tpublic void test0393() throws JavaModelException", "diff": ["-\t\tList extraDimensions = methodDeclaration.extraDimensionInfos();", "+\t\tList extraDimensions = methodDeclaration.extraDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c8d5c3244d4526eeab6f051784d9ca2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "152d18d4cacb9bd3ea7ba43af5713a4d308c0471", "commitAfterChange": "01ebf46478e499b6682d2e0eb34536c095d3cff8", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  protected void consumeInterfaceType()", "signatureAfterChange": "  protected void consumeInterfaceType()", "diff": ["-\tif ((this.patternFineGrain & IJavaSearchConstants.SUPERINTERFACE_TYPE_REFERENCE) != 0) {", "+\tif ((this.patternFineGrain & IJavaSearchConstants.SUPERTYPE_TYPE_REFERENCE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c9e976683914146fbf918e35d2d4338", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "fa88cb3d17048056f6b43aa969ba12f4c9456158", "commitAfterChange": "84b18ff929c59d9bd138487e220218b9da4b2ce2", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic static long getJdkLevel(Object targetLibrary)", "signatureAfterChange": " \tpublic static long getJdkLevel(Object targetLibrary)", "diff": ["-\t\t\t\t\t\tpath = ((IResource)targetLibrary).getLocation();", "+\t\t\t\t\t\tpath = ((IResource)targetLibrary).getFullPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb53c2b18b5187cec9d606972935a2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "3d8932728cd047aee0a3e32897f5b373092fcf08", "commitAfterChange": "8753459f8b742bd83cc2b3effe312c35c5aea0e0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t\t\t\t\tscope.problemReporter().methodNeedingAbstractModifier(this);", "+\t\t\t\t\t\tscope.problemReporter().methodNeedBody(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cb8a65055cee257a0ccd2368f9b304f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "876aa677201567f6dd87fe8c0b5a5326661e4029", "commitAfterChange": "955478e6d2220d787f88d27b5ca186d67f088e58", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void tearDown() throws Exception", "signatureAfterChange": " \tpublic void tearDown() throws Exception", "diff": ["-\t\tjavaProject.setOptions(originalOptions);", "+\t\tJAVA_PROJECT.setOptions(originalOptions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cbf5a26c81e47bbec653eedf0309956", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public void test042() throws JavaModelException", "signatureAfterChange": "  public void test042() throws JavaModelException", "diff": ["-\t\t\"method[JAVADOC_METHOD_REF]{{@link #method()}, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\"method[JAVADOC_METHOD_REF]{{@link #method()}, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cc8e39a6430f4191bede0aff5564e53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void tagAsUnnecessaryCast(Scope scope, TypeBinding castType)", "signatureAfterChange": " \tpublic void tagAsUnnecessaryCast(Scope scope, TypeBinding castType)", "diff": ["-\t\tthis.bits |= UnnecessaryCastMASK;", "+\t\tthis.bits |= UnnecessaryCast;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cd2a8718c1e20373b90e2c796c93b95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tFlowInfo caseInits = FlowInfo.DeadEnd;", "+\t\tFlowInfo caseInits = FlowInfo.DEAD_END;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ce1bd6b20885e7ba66c4b2f201b7de5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24cf489e4c973e29dff7eade9d41897f72a37db0", "commitAfterChange": "f924ed86fe1dbe148077a9cade20b11e404ba89b", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 81, "signatureBeforeChange": "  \tprivate Scope computeForbiddenBindings(ASTNode astNode, ASTNode astNodeParent, Scope scope)", "signatureAfterChange": "  \tprivate Scope computeForbiddenBindings(ASTNode astNode, ASTNode astNodeParent, Scope scope)", "diff": ["-\t\t\t\t\t\t\tthis.knownTypes.put(CharOperation.concat(caughtException.qualifiedPackageName(), caughtException.qualifiedSourceName(), '.'), this);", "+\t\t\t\t\t\t\tthis.knownTypes.put(CharOperation.concat(caughtException.qualifiedPackageName(), caughtException.qualifiedSourceName(), '.'), KNOWN_TYPE_WITH_KNOWN_CONSTRUCTORS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf9fd172011b672e4e7674aadd14f94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public void resetNullInfo(VariableBinding local)", "signatureAfterChange": "  public void resetNullInfo(LocalVariableBinding local)", "diff": ["-public void resetNullInfo(VariableBinding local) {", "+public void resetNullInfo(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d0447463c873a9effcdf4025d533487", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "commitAfterChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public static void searchAllPossibleSubTypes( \tIWorkspace workbench, \tIType type, \tIJavaSearchScope scope, \tfinal Map binariesFromIndexMatches, \tfinal IPathRequestor pathRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)  throws JavaModelException, CoreException", "signatureAfterChange": "  public static void searchAllPossibleSubTypes( \tIWorkspace workbench, \tIType type, \tIJavaSearchScope scope, \tfinal Map binariesFromIndexMatches, \tfinal IPathRequestor pathRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)  throws JavaModelException, CoreException", "diff": ["-\t\tif (CharOperation.equals(currentTypeName, AbstractIndexer.OBJECT)){", "+\t\tif (CharOperation.equals(currentTypeName, IIndexConstants.OBJECT)){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d13c492ea661d627c2ce592b7a16e4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/AccessRestriction.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic char[][] getInclusionPatterns()", "signatureAfterChange": " \tpublic char[][] getInclusionPatterns()", "diff": ["-\t\t\treturn this.inclusionPatterns;", "+\t\t\treturn this.accessibleFilesPatterns;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d13d7e936bf3580bdc515b6b791f099", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/TestVerifier.java", "commitBeforeChange": "a6231ce33b0c4c1035133950b71c0c97d48b4fc8", "commitAfterChange": "fb73ff7c4976ff452de2ec97a6404f1940e5234e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void launchVerifyTestsIfNeeded(String[] classpaths, String[] vmArguments)", "signatureAfterChange": " private void launchVerifyTestsIfNeeded(String[] classpaths, String[] vmArguments)", "diff": ["-\tint portNumber = Util.nextAvailablePortNumber();", "+\tint portNumber = Util.getFreePort();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d172a9801e96b03cbf757188875fb3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testDeltaBecomeWorkingCopy2() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaBecomeWorkingCopy2() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d1930dfe7b2bdb2e8bd7ad9ae101b41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "b0ef9fb2ef2f8b6f0b35895401c98f1788e21821", "commitAfterChange": "723dd30d7e194152eb04fb9ae54682c59941aaad", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic String getName()", "signatureAfterChange": "  \tpublic String getName()", "diff": ["-\t\t\treturn getGenericType().getName();", "+\t\t\treturn getTypeDeclaration().getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d2c36a114ea96770dfdec6ca0f8476d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " protected void consumeMethodDeclaration(boolean isNotAbstract)", "signatureAfterChange": " protected void consumeMethodDeclaration(boolean isNotAbstract)", "diff": ["-\tmd.declarationSourceEnd = flushAnnotationsDefinedPriorTo(endStatementPosition);", "+\tmd.declarationSourceEnd = flushCommentsDefinedPriorTo(endStatementPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d5e90eb7de607cda8fa8671f834ae0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "3ea68e3d465e2db503f32911235b79fc28e0b277", "commitAfterChange": "cb7e1f0df8a87f2b400ca058ed57dff2a93cd223", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\ttestExpression.generateCode(currentScope, codeStream, needSwitch);", "+\t\texpression.generateCode(currentScope, codeStream, needSwitch);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d614a895917b9ff964de7f685de0907", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "9bf79c7ef87f9bb276696a699c24ee7886d82109", "commitAfterChange": "de2cee4ff7b76fb31a04f1c1b724977d8ef8d10e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t Binding getArrayBinding(int dim, TypeBinding binding)", "signatureAfterChange": " \t TypeBinding getArrayBinding(int dim, TypeBinding binding)", "diff": ["-\t Binding getArrayBinding(int dim, TypeBinding binding) {", "+\t TypeBinding getArrayBinding(int dim, TypeBinding binding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d64aa4a83f47f66a1ca5a78b698689c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AptReconcileTests.java", "commitBeforeChange": "ec541dd033ad27d9ab55acb5cb4211fa3af9e906", "commitAfterChange": "5bc936c43945cd38fd8a7444d6690225eec1af93", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\")\t \tpublic void testDiscardParentWorkingCopy() \t \tthrows Throwable", "signatureAfterChange": " \t@SuppressWarnings(\"nls\")\t \tpublic void testDiscardParentWorkingCopy() \t \tthrows Throwable", "diff": ["-\t\tString fname = TEST_FOLDER + \"/A.java\";", "+\t\tString fname = _testFolder + \"/A.java\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d66107bc4e4a8aad21d5251b3c43f12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "commitAfterChange": "74ac0014c1ede0ba61ac73f39089ab641618bf5d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic String getIndentString(String currentLine)", "signatureAfterChange": " \t \tpublic String getIndentString(String currentLine)", "diff": ["-\t\treturn Indents.extractIndentString(currentLine, this.tabWidth, this.indentWidth);", "+\t\treturn IndentManipulation.extractIndentString(currentLine, this.tabWidth, this.indentWidth);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d7772833288f214f489d9bb660d3666", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected void getMethodBodies(CompilationUnitDeclaration unit)", "signatureAfterChange": " protected void getMethodBodies(CompilationUnitDeclaration unit)", "diff": ["-\t\tif (this.parser.javadocParser.checkJavadoc) {", "+\t\tif (this.parser.javadocParser.checkDocComment) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d9d0a7cf1cd35ad744e719ffdf62510", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "b8323ccd49cf224a0070d2cb1a7a617400e273ad", "commitAfterChange": "79a2912d77b5ac9bf55d643f1f89285b3b152140", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\treturn index.query(getMatchCategories(), key, matchRule); // match rule is irrelevant when the key is null", "+\treturn index.query(getIndexCategories(), key, matchRule); // match rule is irrelevant when the key is null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d9d1fc3091aa6a4789f26a0f536741c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "5d2e6e466ee272d62f273fff98dd2423f77bd2f3", "commitAfterChange": "e702e6a53e23b4f475e9578e987e56b628fcf8d7", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local,  \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local,  \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, reference);", "+\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da0abc02a82ae986c6697b33fe66f8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "commitAfterChange": "1b555425db41a9eb4fba300521a43b3ff494a42f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static MethodBinding computeCompatibleMethod18(MethodBinding originalMethod, TypeBinding[] arguments, final Scope scope, InvocationSite invocationSite)", "signatureAfterChange": "  \tpublic static MethodBinding computeCompatibleMethod18(MethodBinding originalMethod, TypeBinding[] arguments, final Scope scope, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\tNullAnnotationMatching.checkForContraditions(methodSubstitute, invocationSite, scope);", "+\t\t\t\t\t\t\tNullAnnotationMatching.checkForContradictions(methodSubstitute, invocationSite, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2da64585622de45a5a3618d5e816df7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tprivate void findJavadocBlockTags(CompletionOnJavadocTag javadocTag)", "signatureAfterChange": " \tprivate void findJavadocBlockTags(CompletionOnJavadocTag javadocTag)", "diff": ["-\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.JAVADOC_BLOCK_TAG, this.actualCompletionPosition);", "+\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.JAVADOC_BLOCK_TAG, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2daf363728cd9ac0e0e9a8dc202845c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void markAsDefinitelyNotAssigned(FieldBinding field)", "signatureAfterChange": " \tpublic void markAsDefinitelyNotAssigned(FieldBinding field)", "diff": ["-\t\tif (this != DeadEnd)", "+\t\tif (this != DEAD_END)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db825a47d0e18abb9e75fddfb9ab2ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/SubTypeSearchJob.java", "commitBeforeChange": "87ba3addb06e0bd690b97dd2e305fffcc5db74fe", "commitAfterChange": "8046249ea5657bdf56e1ad6e70f968e6217d4dd0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public boolean search(IIndex index, IProgressMonitor progressMonitor)", "signatureAfterChange": "\r public boolean search(IIndex index, IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\tJobManager.log(\"-> merging index \" + index.getIndexFile()); //$NON-NLS-1$\r", "+\t\t\t\t\tJobManager.verbose(\"-> merging index \" + index.getIndexFile()); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2db90a277f7b2c5f6a9831b1c312206d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "234e90f1063594cbfe450e6804c5db0a515eda2c", "commitAfterChange": "0af096b2d34684a162b7a195205699b7a15a3c32", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static Expression parseExpression(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "signatureAfterChange": " \t \tpublic static Expression parseExpression(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "diff": ["-\t\tParser parser = new CommentRecorderParser(problemReporter, false);", "+\t\tCommentRecorderParser parser = new CommentRecorderParser(problemReporter, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dc8ada2a05e047a1708a963ce6b1a84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "0d848314704a98a37067259d3b0518973aafccb8", "commitAfterChange": "55cb4cf73395e960e1efe45d353b160e1b4e5127", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\t public void searchDeclarationsOfReferencedTypes(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": "\t public void searchDeclarationsOfReferencedTypes(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\t\tMatchLocator locator = new MatchLocator(", "+\t\tMatchLocator locator = new MatchLocator2("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2dd4e493e5bd7d9722c4f652a3395f97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic IJavaElement getHandleUpdatingCountFromMemento(StringTokenizer memento, WorkingCopyOwner owner)", "signatureAfterChange": " \tpublic IJavaElement getHandleUpdatingCountFromMemento(MementoTokenizer memento, WorkingCopyOwner owner)", "diff": ["-\tpublic IJavaElement getHandleUpdatingCountFromMemento(StringTokenizer memento, WorkingCopyOwner owner) {", "+\tpublic IJavaElement getHandleUpdatingCountFromMemento(MementoTokenizer memento, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2deb1f976b6625113989d96bf99ff1e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry)", "signatureAfterChange": " \tpublic static IClasspathEntry getResolvedClasspathEntry(IClasspathEntry entry)", "diff": ["-\t\treturn JavaModelManager.getJavaModelManager().getResolvedClasspathEntry(entry, false/*don't use previous session value*/);", "+\t\treturn JavaModelManager.getJavaModelManager().resolveVariableEntry(entry, false/*don't use previous session value*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e0a57ce31092135fc767efa238a7e81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "5f0ac9eeff6d45609e604f6188bdf27bdf21a2dd", "commitAfterChange": "4c4f60d92960861c307d0ff9e962a0bd2a635323", "methodNumberBeforeChange": 491, "methodNumberAfterChange": 491, "signatureBeforeChange": " \tpublic void test469()", "signatureAfterChange": " \tpublic void test469()", "diff": ["-\t\trunTest(codeFormatter, \"test469\", \"A.java\", CodeFormatter.K_CLASS_BODY_DECLARATIONS);//$NON-NLS-1$ //$NON-NLS-2$", "+\t\trunTest(codeFormatter, \"test469\", \"A.java\", CodeFormatter.K_COMPILATION_UNIT);//$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e1e2555a8a9b11825812cd382e7783a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/ArchiveFileObject.java", "commitBeforeChange": "559e5f2f8f5db2c53b837aedd1782f0020008093", "commitAfterChange": "a256ec457e5133c78e70ccd040a0f76b1f8e178c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t@Override \tpublic CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException", "signatureAfterChange": " \t@Override \tpublic CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException", "diff": ["-\t\t\treturn Util.getCharContents(this, ignoreEncodingErrors, org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(this.zipEntry, this.zipFile), this.charset.toString());", "+\t\t\treturn Util.getCharContents(this, ignoreEncodingErrors, org.eclipse.jdt.internal.compiler.util.Util.getZipEntryByteContent(this.zipEntry, this.zipFile), this.charset.name());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e2bb6973fa86c2ffe575a124a89b6d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 580, "methodNumberAfterChange": 580, "signatureBeforeChange": " public void testCompletionBasicMethodDeclaration1() throws JavaModelException", "signatureAfterChange": " public void testCompletionBasicMethodDeclaration1() throws JavaModelException", "diff": ["-\t\t\t\"equals[METHOD_DECLARATION]{public boolean equals(Object obj), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE + R_EXACT_NAME + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\"equals[METHOD_DECLARATION]{public boolean equals(Object obj), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE + R_EXACT_NAME + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e2ef659b1f128858ce36fc2c890fd4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid endVisit(AnnotationSingleTypeReference typeRef, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(JavadocArrayQualifiedTypeReference typeRef, BlockScope scope);", "diff": ["-\tvoid endVisit(AnnotationSingleNameReference argument, BlockScope scope);", "-\tvoid endVisit(AnnotationSingleTypeReference typeRef, BlockScope scope);", "+\tvoid endVisit(JavadocArgumentExpression expression, BlockScope scope);", "+\tvoid endVisit(JavadocArrayQualifiedTypeReference typeRef, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e3ac24ed1b4ae26f050317ea788dd37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "6febc04f00603747029f2ea9616afd5b682c9f03", "commitAfterChange": "ba65adb7228709772812cc43f8ccb14a824acf89", "methodNumberBeforeChange": 339, "methodNumberAfterChange": 339, "signatureBeforeChange": " public void goForHeaders()", "signatureAfterChange": " public void goForHeaders()", "diff": ["-\tif(currentType != null && currentType.insiseEnumConstantPart) {", "+\tif(currentType != null && currentType.insideEnumConstantPart) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e4be8fdba764e8188ad2d2ed622af65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\tif ((typeDeclaration.bits & ASTNode.IsLocalTypeMASK) != 0){", "+\tif ((typeDeclaration.bits & ASTNode.IsLocalType) != 0){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e5f33829127c69a1de484567498e59e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " \t \tprotected void setModifiers(SingleVariableDeclaration variableDecl, LocalDeclaration localDeclaration)", "signatureAfterChange": " \t \tprotected void setModifiers(SingleVariableDeclaration variableDecl, LocalDeclaration localDeclaration)", "diff": ["-\t\t\tvariableDecl.internalSetModifiers(localDeclaration.modifiers & CompilerModifiers.AccJustFlag);", "+\t\t\tvariableDecl.internalSetModifiers(localDeclaration.modifiers & ExtraCompilerModifiers.AccJustFlag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e71e93d51a3b7bc607110227a77c605", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/State.java", "commitBeforeChange": "bd66f33da6dcc33c67153a2129d6fec0fda88ac8", "commitAfterChange": "dc4de554479d1bd7115bbb51a83f104f76dfaa9e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected State(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected State(JavaBuilder javaBuilder)", "diff": ["-\tthis.structuralBuildNumbers = new HashtableOfObject(3);\r", "+\tthis.structuralBuildNumbers = new SimpleLookupTable(3);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e760e16d48e042d589801952bb3daaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CodeCorrectionTestsRequestor.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void acceptClass(char[] packageName,char[] className,char[] correctionName,int modifiers,int correctionStart,int correctionEnd)", "signatureAfterChange": " \t \tpublic void acceptClass(char[] packageName,char[] className,char[] correctionName,int modifiers,int correctionStart,int correctionEnd)", "diff": ["-\t\tfSuggestions.addElement(new Suggestion(correctionName, correctionStart, correctionEnd));", "+\t\tsuggestions.addElement(new Suggestion(correctionName, correctionStart, correctionEnd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e81935d698777810f56c0d54029756b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "4ab9f51613d504c2ff6edffad453d042a8c04058", "commitAfterChange": "d588d04827eba4279cf3ad675c4250450aee4bea", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void test085_per_source_output_directory()", "signatureAfterChange": " public void test085_per_source_output_directory()", "diff": ["-        + \" -bootclasspath \" + getLibraryClasses() + File.pathSeparator +", "+        + \" -bootclasspath \" + getLibraryClassesAsQuotedString() + File.pathSeparator +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e9965f8126940721f9b94e5eb4d8f8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "8ee5fa36071598355e44b420bae46ae82c697e43", "commitAfterChange": "b76752c4514702a8d23bce33aaea8b569326dd8b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "signatureAfterChange": " \tpublic boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "diff": ["-\t\tsearchJob.ensureReadyBeforeRun();", "+\t\tsearchJob.ensureReadyToRun();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eaf189d904ea0b5570487ebf3dafc2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "57be54931a21775011b9d46837f226f82fd878f2", "commitAfterChange": "69b7d322507c416d24ecb0826f4b72b49ddbac45", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void recordSettingFinal(VariableBinding variable, Reference finalReference, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordSettingFinal(VariableBinding variable, Reference finalReference, FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0)\t{", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0)\t{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ed5dc2c850efe909de723ead6232117", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected int resolveLevel(TypeReference typeRef)", "signatureAfterChange": " protected int resolveLevel(TypeReference typeRef)", "diff": ["-\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).original;", "+\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ee51473780d9f7c127666f0541ce8db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfPackage.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public PackageBinding get(char[] key)", "signatureAfterChange": " public PackageBinding get(char[] key)", "diff": ["-\t\tif (currentKey.length == keyLength && CharOperation.prefixEquals(currentKey, key))", "+\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ee8114bc000ac19b8c2a5020078d356", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "616a41b14ead174db92c630ec6ed7f1d666a9b67", "commitAfterChange": "645b7eff21d5db2b90380f1d4478beb9fa33f107", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject1() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject1() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ee8a5dd8ac0b4be06f97afa0a37f99b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \t\t\t\t\t\t\tpublic String toString()", "diff": ["+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tpublic String toString() {", "+\t\t\t\t\t\t\t\treturn \"JarEntryDocument for \" + getPath(); //$NON-NLS-1$", "+\t\t\t\t\t\t\t}", "-\t\treturn \"indexing \" + this.indexPath.toString(); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eef7658987ff302b380abb274619a22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected Object createFieldReference(Object receiver) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createFieldReference(Object receiver) throws InvalidInputException", "diff": ["-\t\t\t\ttypeRef = new ImplicitDocTypeReference(name, this.memberStart);", "+\t\t\t\ttypeRef = new JavadocImplicitTypeReference(name, this.memberStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f0680dcbdd1243092367f6be98d1dba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "13a2bff8811ff586bab60fddd157d395e6533570", "commitAfterChange": "4e8c06d42dcf2a91f77056993fc995ad49c4f7d9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "signatureAfterChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "diff": ["-\t\t\tif ((fieldBinding = (FieldBinding) binding).isFinal() && currentScope.allowBlankFinalFieldAssignment(fieldBinding)) {", "+\t\t\tif ((fieldBinding = (FieldBinding) binding).isBlankFinal() ", "+\t\t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(fieldBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f131fad9cea801d31f322d420784732", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "          public IResolvedAnnotation getResolvedAnnotaion()", "signatureAfterChange": "          public IAnnotationBinding getResolvedAnnotaion()", "diff": ["-    public IResolvedAnnotation getResolvedAnnotaion(){return _domAnnotation; }", "+    public IAnnotationBinding getResolvedAnnotaion(){return _domAnnotation; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f19def9d3c48f158a176ca465e0161d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testParameterizedTypeSingleArgument02() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeSingleArgument02() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedType(unit, \"g1.t.s.def.Generic<Exception>.Member\"); //$NON-NLS-1$", "+\t\tResolvedSourceType type = selectParameterizedType(unit, \"g1.t.s.def.Generic<Exception>.Member\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f3c5fdd521014396a2cff6e8af89663", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "2418a9c1fa372e8f8253220ab580375e8d2f864b", "commitAfterChange": "bfeefe0bfa824914f542a3a07eccab1379d1c70b", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " public void testSuppressWarnings3() throws JavaModelException", "signatureAfterChange": " public void testSuppressWarnings3() throws JavaModelException", "diff": ["-\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, null, null);", "+\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, owner, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f43fea9b32a80be045d13a3ef52b444", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefConstructorErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefConstructorErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f4dd8aa8ccc7416410562b2cc4fbf74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public IJavaModelStatus verify()", "signatureAfterChange": " public IJavaModelStatus verify()", "diff": ["-\tif (!fForce) {", "+\tif (!force) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f51c3173891485cb70fa5874f512301", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.JLS4) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS4_INTERNAL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f5cc20bc4f2238a7c54d1576dfc84ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  public void test044() throws JavaModelException", "signatureAfterChange": "  public void test044() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.types.tags.BasicTestTypes;, I, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.types.tags.BasicTestTypes;, I, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f74bc1f5a3ada73cc8c8345a15d5b0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "caead2c6488f232c99b522820aa80d0eed7f2116", "commitAfterChange": "4c1d448229be9b75331fa5d60ed6daf1dfef9f55", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  \tpublic InfixExpression convert(StringLiteralConcatenation expression)", "signatureAfterChange": "  \tpublic InfixExpression convert(StringLiteralConcatenation expression)", "diff": ["-\t\torg.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals = expression.literals;", "+\t\torg.eclipse.jdt.internal.compiler.ast.Expression[] stringLiterals = expression.literals;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7bf577c55deb8a0fa2563a7065c3ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "8725686e4322c27855e28a436fd50d8fdf140d60", "commitAfterChange": "4a181894176f3a1eccc3e35147ddca845e353389", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "signatureAfterChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "diff": ["-\t\t\t\t\t\t\tfinal char[][] exclusionPatterns = ((ClasspathEntry)entry).fulExclusionPatternChars();", "+\t\t\t\t\t\t\tfinal char[][] exclusionPatterns = ((ClasspathEntry)entry).fullExclusionPatternChars();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f7d8d1351e45e098d5690c0110318c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "63715172f1a31dfb060df48fd8bde0bb2378c20d", "commitAfterChange": "c672e57e25ef5a7b26a09eab1198b6c71f25d601", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t&& currentScope.compilerOptions().sourceLevel < ClassFileConstants.JDK1_5) {", "+\t\t\t\t&& currentScope.compilerOptions().targetJDK < ClassFileConstants.JDK1_5) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f88eb4609bcd05b1d5589b5019e2b2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "1f82fbfe681e32018e530b8aaba28b5eaf34206f", "commitAfterChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void printNotice(String msg)", "signatureAfterChange": "      public void printNotice(String msg)", "diff": ["-       print(APTProblem.Severity.Info, msg, null);", "+       print(APTProblem.Severity.INFO, msg, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f96505535058f3548b4d8ae13b551aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "8bffc680730baeb75a0764c02d5d9479eee4502e", "commitAfterChange": "a29a64421d33da260a7d362b9f95ba50806929de", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "signatureAfterChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "diff": ["-\t\t\t\t\tinferenceContext.leavePolyInvocation(prevInvocation);", "+\t\t\t\t\tinferenceContext.resumeSuspendedInference(prevInvocation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f9ee9302dadef83ade514aed8a6d218", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "e8e7647f559ab2b52cb4227f76e40c3c50450acc", "commitAfterChange": "4af2b490b50346e709828d4908ef9969ee6a54dc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic static DefaultCodeFormatterOptions getSunSetttings()", "signatureAfterChange": "  \tpublic static DefaultCodeFormatterOptions getSunSetttings()", "diff": ["-\t\tsunSettings.binary_expression_alignment = Alignment.M_NEXT_PER_LINE_SPLIT;", "+\t\tsunSettings.binary_expression_alignment = Alignment.M_COMPACT_SPLIT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fa1e028b56b2e47e6d710c7b8c5b41a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "e5f01975d99954b1483781c8c9c08a016b294102", "commitAfterChange": "6c19a02159d7dcaca8c603f73a96718172825002", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-\t\t\t&& this.environment.globalOptions.complianceLevel >= ClassFileConstants.JDK1_5;", "+\t\t\t&& this.environment.globalOptions.originalComplianceLevel >= ClassFileConstants.JDK1_5;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fbbfa19ff382a655c88243d08b0b8e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": "  \tprivate void proposeNewMethod(char[] token, ReferenceBinding reference)", "signatureAfterChange": "  \tprivate void proposeNewMethod(char[] token, ReferenceBinding reference)", "diff": ["-\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.POTENTIAL_METHOD_DECLARATION, this.actualCompletionPosition);", "+\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.POTENTIAL_METHOD_DECLARATION, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fc152161da742a6aab980d361fd75c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void test083()", "signatureAfterChange": " \tpublic void test083()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2feb4f7e57013c1711d1f8759d78545b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "dfcfcaedc8372b070ca684decc611420969812d4", "commitAfterChange": "9bef32a39642c351ad08557498e432fc6a29aeb4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void test001_irritant_warning_token()", "signatureAfterChange": " public void test001_irritant_warning_token()", "diff": ["-\t\t\tassertTrue((irritant & CompilerOptions.warningTokenToIrritant(token)) != 0);", "+\t\t\tassertTrue((irritant & CompilerOptions.warningTokenToIrritants(token)) != 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ff64b715fe019b4f72dcc5f498d616d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9156e33be70429042b1d72217c4197f996fdfb3a", "commitAfterChange": "0bbc1f10f38c090526549c38a7d30ff164b71a76", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": " public void initialize()", "signatureAfterChange": " public void initialize()", "diff": ["-\tscanner.taskCount = 0;", "+\tscanner.foundTaskCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "300f443ca14bd7cc6ebd8292ff727924", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Location.java", "commitBeforeChange": "3cbc5a17035fd93e630a5ce3a447371924b2eaec", "commitAfterChange": "2fbac062d3f933d7974166e3d20ea9843fdd9750", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void update(Scribe scribe, int sourceRestart)", "signatureAfterChange": "  \tpublic void update(Scribe scribe, int sourceRestart)", "diff": ["-\t\tthis.inputColumn = scribe.getCurrentIndentation(sourceRestart);", "+\t\tthis.inputColumn = scribe.getCurrentColumn(sourceRestart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "301345ded4806b88a3c8f84e7dfc5590", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "signatureAfterChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "diff": ["-\t\tswitch (originalType.bindingType()) {", "+\t\tswitch (originalType.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3015874ec6daac13d7efd5cb948756fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": " public int matchLevel(AstNode node, boolean resolve)", "diff": ["-\t\tTypeBinding binding = typeRef.binding;", "+\t\tTypeBinding binding = typeRef.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3026c489c63ab24fc9890e8c93944a63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a2ae3e117eaea10fecaf3678af5938ffa98d76f4", "commitAfterChange": "71ab6b3956db9fea4a8f81e891e05ac4d44d96d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void compile(String[] argv)", "signatureAfterChange": "\r protected void compile(String[] argv)", "diff": ["-\t\t\t\tout.println(\" (\"/*nonNLS*/);\r", "+\t\t\t\tout.print(\" (\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "302e2b4948af8be743e194013e7ffaae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 415, "methodNumberAfterChange": 415, "signatureBeforeChange": " \tpublic void test396()", "signatureAfterChange": " \tpublic void test396()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30312c03568612e4ad1d50bfd2999be4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \t \tpublic ICompilationParticipantResult[] getFilesWithAnnotation()", "signatureAfterChange": " \t \tpublic BuildContext[] getFilesWithAnnotation()", "diff": ["-\tpublic ICompilationParticipantResult[] getFilesWithAnnotation()", "+\tpublic BuildContext[] getFilesWithAnnotation()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3039cfddde0f505acc6434e5adba2aac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "c3bc9435ae5f771b490381d71d5245c83cf6d0cb", "commitAfterChange": "9a37cc8c27d2ce81469956404b5e25a8551c0848", "methodNumberBeforeChange": 314, "methodNumberAfterChange": 314, "signatureBeforeChange": " \tpublic void test0312() throws JavaModelException", "signatureAfterChange": " \tpublic void test0312() throws JavaModelException", "diff": ["-\t\tassertNull(\"No declaring node is available\", declaringNode); //$NON-NLS-1$", "+\t\tassertNotNull(\"No declaring node is available\", declaringNode); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304a942dfc76089257e4c780894c6115", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "b9cb873d4449d2f10b10f7985e564b1f6bad691b", "commitAfterChange": "1ffd93ec138fc38a22c082921b3ee25a9e75ba37", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic boolean visit(ExpressionStatement node)", "signatureAfterChange": " \tpublic boolean visit(EnumConstantDeclaration node)", "diff": ["+\tpublic boolean visit(EnumConstantDeclaration node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304aa5edb4698658a6119dc2b76301a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public TypeBinding getOtherFieldBindings(BlockScope scope)", "signatureAfterChange": "  public TypeBinding getOtherFieldBindings(BlockScope scope)", "diff": ["-\t\t\t\t\tif (receiverErasure.findSuperTypeWithSameErasure(field.declaringClass) == null) {", "+\t\t\t\t\tif (receiverErasure.findSuperTypeOriginatingFrom(field.declaringClass) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305177e929257a875bd1099ffac57529", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testAddExternalLibFolder3() throws CoreException", "signatureAfterChange": " public void testAddExternalLibFolder3() throws CoreException", "diff": ["-\t\tIPath path = new Path(getExternalFolderPath(\"externalLib\"));", "+\t\tIPath path = new Path(getExternalResourcePath(\"externalLib\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3051de907d469bba2ff472906d6eb17f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "5a12a220bc147ceb34370c89306997df47624c96", "commitAfterChange": "2a31afdf467fbea6343929950855b2cce0d4c7fa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tpublic void computeLocalVariablePositions(\r \t\tint initOffset,\r \t\tCodeStream codeStream)", "signatureAfterChange": "\r \tpublic void computeLocalVariablePositions(\r \t\tint initOffset,\r \t\tCodeStream codeStream)", "diff": ["-\t\t\t\t\t\tsubscope.shiftScope == null ? this.offset : subscope.shiftScope.offset;\r", "+\t\t\t\t\t\tsubscope.shiftScope == null ? this.offset : subscope.shiftScope.maxOffset;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305dd3d247a47449445b44a9fe2ad9df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticEnumMethod(char[] selector)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticEnumMethod(char[] selector)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30688b2cb6efd4ec9a85c0f0704a4f58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "09731db443a17aa3c4de981e4334f98fc716832d", "commitAfterChange": "bd07e79d6b556e7c91d3a4fc04d96b35cfebea9f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "signatureAfterChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "diff": ["-\t\t\t\tif (!isExcludedFromProject(children[i].getFullPath()))", "+\t\t\t\tif (!isExcludedFromProject(children[j].getFullPath()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "308a866a1791bcc1be33c8bfbc5e5b25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/junit/textui/TestRunner.java", "commitBeforeChange": "5f14954289dcfe3aa64cd723a9ea9807dea33e05", "commitAfterChange": "4b4449dde49cdcaed9ae00d1ac057ecfeb8d8c23", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t\t \tprotected void runFailed(String message)", "signatureAfterChange": " \t\t \tprotected void runFailed(String message)", "diff": ["-\t\tSystem.exit(-1);", "+\t\tSystem.exit(FAILURE_EXIT);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "309543058bcf94d7ae714db149ff0197", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 468, "methodNumberAfterChange": 468, "signatureBeforeChange": " \tpublic void test449()", "signatureAfterChange": " \tpublic void test449()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "309dcef12a85bedb6e55968b16dd712a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/align/Alignment.java", "commitBeforeChange": "a708a833352a17a462cbe9e9346d660fa6317a1e", "commitAfterChange": "0e8e783b8823e467b82792c7ef9289caad32e202", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Alignment(int kind, int mode, int tieBreakRule, Scribe scribe, int fragmentCount, int sourceRestart, int continuationIndent)", "signatureAfterChange": " \tpublic Alignment(int kind, int mode, int tieBreakRule, Scribe scribe, int fragmentCount, int sourceRestart, int continuationIndent)", "diff": ["-\t\tAssert.isTrue(kind >=ALLOCATION && kind <=TYPE_MEMBERS);", "+\t\tAssert.isTrue(kind >=ALLOCATION && kind <=STRING_CONCATENATION);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30b24d49432b9340dee6e62dc6bfea21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FineGrainVisitor.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  public boolean visit(QualifiedTypeReference qualifiedTypeReference, BlockScope scope)", "signatureAfterChange": "  public boolean visit(QualifiedTypeReference qualifiedTypeReference, BlockScope scope)", "diff": ["-\tif (((this.fineGrain & PARAMETERIZED_TYPE_REFERENCE) != 0 && this.parameterizedTypeRef > 0 && this.wildcardTypeRef == 0) ||", "+\tif (((this.fineGrain & TYPE_ARGUMENT_TYPE_REFERENCE) != 0 && this.parameterizedTypeRef > 0 && this.wildcardTypeRef == 0) ||"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30be0f7e00244d92d2ca19ce830bad7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic SetClasspathOperation( \t\tJavaProject project, \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newRawPath, \t\tIPath newOutputLocation, \t\tboolean canChangeResource, \t\tboolean needValidation, \t\tboolean needSave)", "signatureAfterChange": " \tpublic SetClasspathOperation( \t\tJavaProject project, \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newRawPath, \t\tIPath newOutputLocation, \t\tboolean canChangeResource, \t\tboolean needValidation, \t\tboolean needSave)", "diff": ["-\t\tthis.canChangeResource = canChangeResource;", "+\t\tthis.canChangeResources = canChangeResource;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30d0d84769b8add9a4377c52c516aae6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public boolean isDefinitelyUnknown(VariableBinding local)", "signatureAfterChange": "  public boolean isDefinitelyUnknown(LocalVariableBinding local)", "diff": ["-public boolean isDefinitelyUnknown(VariableBinding local) {", "+public boolean isDefinitelyUnknown(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30fb82d5778d6a87e52b39e6d955adc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "5cc4b8c969b380e215352115b7cc4d2697d8011e", "commitAfterChange": "fef767ead34860def5c5969bff47bc76e721609d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void codeComplete(int offset, ICodeCompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r public void codeComplete(int offset, ICompletionRequestor requestor) throws JavaModelException", "diff": ["-public void codeComplete(int offset, ICodeCompletionRequestor requestor) throws JavaModelException {\r", "+public void codeComplete(int offset, ICompletionRequestor requestor) throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31049e13881525b0f0cb970131ef44d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/CommentTestCase.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected void tearDown() throws Exception", "signatureAfterChange": " \tprotected void tearDown() throws Exception", "diff": ["-\t\tfUserOptions= null;", "+\t\tuserOptions= null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3108200e9e418be9ee422a138b4f48ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "039d5ebb17d9b09ae245ba628ad4d0e9cf747b63", "commitAfterChange": "1745fe20399b6a7284c025a8e1750403718486c9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\tif ((this.bits & UncommentedEmptyBlockMASK) != 0) {", "+\t\tif ((this.bits & UndocumentedEmptyBlockMASK) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310a6525182a107a2273f47b3b38d234", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\ttypeBinding = pbBinding.original;", "+\t\ttypeBinding = pbBinding.closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "310d4487a1b82ca8a0ad0ad43a89658d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTNodesCollectorVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void endVisit(PrefixExpression node)", "signatureAfterChange": " \tpublic void endVisit(MethodRefParameter node)", "diff": ["+\t */", "+\tpublic void endVisit(MethodRefParameter node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3110eafdc65b861231996d2d685b7d68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testAnonymousType2() throws JavaModelException", "signatureAfterChange": " public void testAnonymousType2() throws JavaModelException", "diff": ["-\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31343ca9fe65f1901ac308cccf3ea7be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Initializer.java", "commitBeforeChange": "39efbf0f3eb32e59d7a65e03590993d59dc6817b", "commitAfterChange": "84bab690fce0d07b753bfc05c56b8e56d168a1a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "signatureAfterChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "diff": ["-\t\t\t\tsetModifiers(value);", "+\t\t\t\tinternalSetModifiers(value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "313593642803c546cffafb6a3f835331", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ListRewrite.java", "commitBeforeChange": "a2d2be92ededb467e24ec541264fdd8abe9bb244", "commitAfterChange": "0325089db3ca0a8e6a36752438c4d3b535f031b0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   \tprivate ASTNode createTargetNode(ASTNode first, ASTNode last, boolean isMove, ASTNode replacingNode, TextEditGroup editGroup)", "signatureAfterChange": "   \tprivate ASTNode createTargetNode(ASTNode first, ASTNode last, boolean isMove, ASTNode replacingNode, TextEditGroup editGroup)", "diff": ["-\t\tCopySourceInfo info= getRewriteStore().createRangeCopy(this.parent, this.childProperty, first, last, isMove, internalPlaceHolder, replacingNode, editGroup);", "+\t\tCopySourceInfo info= getRewriteStore().createRangeCopy(this.parent, this.childListProperty, first, last, isMove, internalPlaceHolder, replacingNode, editGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31469f2896b627fcff11509ac3e09bc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArraySingleTypeReference.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected void reportInvalidType(Scope scope)", "signatureAfterChange": "  \tprotected void reportInvalidType(Scope scope)", "diff": ["-\t\tscope.problemReporter().javadocInvalidType(this, this.resolvedType, scope.getModifiers());", "+\t\tscope.problemReporter().javadocInvalidType(this, this.resolvedType, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "315b1b90fb599b8182223ab72dd8ece2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testGetCategories02() throws CoreException", "signatureAfterChange": " public void testGetCategories02() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "316cfcd1fcd89a8574192bf147c6135e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a9ee2df3848b37b13b74a0d6fb58548ce231875e", "commitAfterChange": "2a16e8a2e7b943b242b9959c374c8d7819b6b3a0", "methodNumberBeforeChange": 529, "methodNumberAfterChange": 529, "signatureBeforeChange": " \tpublic void test510()", "signatureAfterChange": " \tpublic void test510()", "diff": ["-\t\tpreferences.insert_new_line_at_end_of_file = false;", "+\t\tpreferences.insert_new_line_at_end_of_file_if_missing = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "316dd417bc2fac83b2d3c4f3dfd68fd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementRequestor.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public IType[] getTypes()", "signatureAfterChange": "\r public IType[] getTypes()", "diff": ["-\tfTypes.copyInto(results);\r", "+\tfTypes.toArray(results);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "317502a6229a048f627c1ccf2f24d3d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/InsideSubRoutineFlowContext.java", "commitBeforeChange": "57be54931a21775011b9d46837f226f82fd878f2", "commitAfterChange": "69b7d322507c416d24ecb0826f4b72b49ddbac45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void recordReturnFrom(UnconditionalFlowInfo flowInfo)", "signatureAfterChange": "  public void recordReturnFrom(UnconditionalFlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0)\t{", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0)\t{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3185a2b488fa37e5520f8833de294361", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "6e68e9cf1522a12f0e985131be99c9578a7def47", "commitAfterChange": "97fd5cbd4b6c9f4969ee36268bca7114f34c711d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "signatureAfterChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "diff": ["-\t\t\t\t!expressionType.isPrimitiveOrBoxedPrimitiveType() && checkCastTypesCompatibility(scope, scope.boxing(castType), expressionType, expression)) {", "+\t\t\t\t!expressionType.isBoxedPrimitiveType() && checkCastTypesCompatibility(scope, scope.boxing(castType), expressionType, expression)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "319027ce187cd9da148ef1daf7589c11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r protected CompilationUnitStructureRequestor(ICompilationUnit unit, CompilationUnitElementInfo unitInfo, Hashtable newElements) throws JavaModelException", "signatureAfterChange": "\r protected CompilationUnitStructureRequestor(ICompilationUnit unit, CompilationUnitElementInfo unitInfo, Map newElements) throws JavaModelException", "diff": ["-protected CompilationUnitStructureRequestor(ICompilationUnit unit, CompilationUnitElementInfo unitInfo, Hashtable newElements) throws JavaModelException {\r", "+protected CompilationUnitStructureRequestor(ICompilationUnit unit, CompilationUnitElementInfo unitInfo, Map newElements) throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31941de9eb582c02a3b0d49c251a3ad3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/RemoveFromIndex.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\treturn \"removing \" + this.resourceName + \" from index \" + this.indexPath; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\treturn \"removing \" + this.resourceName + \" from index \" + this.containerPath; //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31a3b40dbf62e8b40e19853c205cc138", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f60c0face3ba2b87651b85d85b64101707cb246a", "commitAfterChange": "0500d43a75bf65b406995baa7b110dc9d0f7b60c", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " public static long getIrritant(int problemID)", "signatureAfterChange": " public static long getIrritant(int problemID)", "diff": ["-\t\t\treturn CompilerOptions.Autoboxing;", "+\t\t\treturn CompilerOptions.AutoBoxing;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31ba57eb6b646b162976398746c9d334", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testClasspathMoveNestedRootParent() throws CoreException", "signatureAfterChange": " public void testClasspathMoveNestedRootParent() throws CoreException", "diff": ["-\t\tIJavaProject project =this.createJavaProject(\"P\", new String[] {\"nested/src\"}, new String[] {getExternalJCLPath()}, \"bin\");", "+\t\tIJavaProject project =this.createJavaProject(\"P\", new String[] {\"nested/src\"}, new String[] {getExternalJCLPathString()}, \"bin\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31bb9a8f0c501f330cadaa4c9d42d9f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": "  \tpublic void test130()", "signatureAfterChange": "  \tpublic void test130()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3201d615f6d34efa2231ba2c140e1657", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "5dde5c5122b6fd8476cd65e0c9985a4c2fa7aaf1", "commitAfterChange": "8cc940e0f7737c5f198b9632e86ecfcd6479e105", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes)", "signatureAfterChange": "\r \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes)", "diff": ["-\t\t\t\tthis.traverseDelta(delta, elementType, projectOfRoot, null, false); // traverse delta\r", "+\t\t\t\tthis.traverseDelta(delta, elementType, projectOfRoot, null, IGNORE); // traverse delta\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "320ff1aa4fdddad3ce5cb5c5ede14091", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnclosingMethodAttributeTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuite(testClass());", "+\t\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "321e5fe3162ad26b4017262507f2cc66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/StringLiteral.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void computeConstant()", "signatureAfterChange": "  \tpublic void computeConstant()", "diff": ["-\t\tconstant = Constant.fromValue(String.valueOf(source));", "+\t\tconstant = StringConstant.fromValue(String.valueOf(source));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "322aaf9cd101b4e415bef512ebc27310", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "cb98eaa80a2007cdf7b95042cefb414c12e0dcec", "commitAfterChange": "b23eddcc1e47cd59815418c8eba9c18ac98632d8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static IStatus validateCompilationUnitName(String name)", "signatureAfterChange": " \tpublic static IStatus validateCompilationUnitName(String name)", "diff": ["-\t\tif (!identifier.equals(\"package-info\")) { //$NON-NLS-1$", "+\t\tif (!identifier.equals(PACKAGE_INFO)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32519f6f39a65f4085e2c825d8bbb178", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "66cd4232d0ab1e96e3a07f02c56b8bad9d7784af", "commitAfterChange": "c4f302586af8fb051e0ee3dd72d43fa433091810", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\t\tINameLookup lookup = ((JavaProject) getJavaProject()).getNameLookup();\r", "+\t\tNameLookup lookup = ((JavaProject) getJavaProject()).getNameLookup();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "325ca6cc1474d9bfe09197ad7db7c206", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SuperReference.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\treturn this.expressionType = enclosingTb.superclass;", "+\treturn this.resolvedType = enclosingTb.superclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32767462983ffea2ef674fde7065b144", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "8fe78866b5a88adc95b1d555c9b3e3d5d1bb69ec", "commitAfterChange": "c50fd8df677b6351894c166f66d58c58bb3836a8", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  private void createArgumentBindings(MethodBinding method, CompilerOptions compilerOptions)", "signatureAfterChange": "  private void createArgumentBindings(MethodBinding method, CompilerOptions compilerOptions)", "diff": ["-\tinitializeNullDefault();", "+\tgetNullDefault(); // ensure initialized"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "329dfd2e183ea0c019448c66b54b303f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AllJavaModelTests.java", "commitBeforeChange": "56cb67c43913b7625a25f749d61b904524d06107", "commitAfterChange": "4e320f434d092fa503a2151f7d56a01f8af9fa5d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tsuite.addTest(InitializerTests.suite());", "+\tsuite.addTest(ClasspathInitializerTests.suite());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32abc9ebf0b8a64fb9c64fdc24f7ad60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \t\tpublic boolean match(ReturnStatement node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(NormalAnnotation node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(NormalAnnotation node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32bb352401adb59a82937cc97d4fae4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t\tpublic void add(int index, Object element)", "signatureAfterChange": " \t\tpublic void add(int index, Object element)", "diff": ["-\t\t\tif ((ASTNode.this.flags & PROTECT) != 0) {", "+\t\t\tif ((ASTNode.this.typeAndFlags & PROTECT) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32c77f2b6bf57505c87e871586c513e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["-\t\t\t\tboolean hasSemicolon= token == ITerminalSymbols.TokenNameSEMICOLON;", "+\t\t\t\tboolean hasSemicolon= token == TerminalTokens.TokenNameSEMICOLON;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32ca2c0ab4211b054beebeb2660be900", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": "  public void test144() throws JavaModelException", "signatureAfterChange": "  public void test144() throws JavaModelException", "diff": ["-\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3314507afba16c77cb26e0fd0d812715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected void assertPattern(String expected, ISearchPattern actualPattern)", "signatureAfterChange": " protected void assertPattern(String expected, SearchPattern actualPattern)", "diff": ["-protected void assertPattern(String expected, ISearchPattern actualPattern) {", "+protected void assertPattern(String expected, SearchPattern actualPattern) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "334911f095441db97695f6088609950d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "336ad1069935600b14b07cc517610498", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\t\tList dimensions = node.extraDimensionInfos();", "+\t\t\tList dimensions = node.extraDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "336fa8ba684af24dbe7755a4605103b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 242, "signatureBeforeChange": " public void testBug109695c() throws CoreException", "signatureAfterChange": " public void testBug109695c() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"IPL3\", SearchPattern.R_CAMELCASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"IPL3\", SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "337dc6e559ef4e38e8b8d8fe948e384f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "6f6bc9d0562d23a055ee9e986cf21155795a29ff", "commitAfterChange": "7f289b483e1414e7141e9f94307fbe445e3b1b34", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "        private void print(SourcePositionImpl pos,     \t\t\t\t   Severity severity,                        String msg,                        String[] arguments)", "signatureAfterChange": "        private void print(SourcePositionImpl pos,     \t\t\t\t   Severity severity,                        String msg,                        String[] arguments)", "diff": ["-          _env.addProblem(resource, pos.getStartingOffset(), pos.getEndingOffset(), ", "+          _env.addMessage(resource, pos.getStartingOffset(), pos.getEndingOffset(), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33851990334d9ffdc38fb2a68433dcc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "a8ebe98c7b687ea450305732efa25afb0944336e", "commitAfterChange": "96a09d96e56ab454cb92b7163871c6f3413e482e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  final public boolean isDefinitelyAssigned(FieldBinding field)", "signatureAfterChange": "  final public boolean isDefinitelyAssigned(FieldBinding field)", "diff": ["-\tif ((this.tagBits & UNREACHABLE) != 0) {", "+\tif ((this.tagBits & UNREACHABLE_OR_DEAD) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "338ccdab0c78dacc616624ff99966615", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " protected void consumeMethodInvocationName()", "signatureAfterChange": " protected void consumeMethodInvocationName()", "diff": ["-\tthis.patternLocator.match((MessageSend) this.expressionStack[this.expressionPtr], this.matchSet);", "+\tthis.patternLocator.match((MessageSend) this.expressionStack[this.expressionPtr], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "338edaa6c6c693adb5eee606f080170a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "9775053c06b88abc4990b96720855b4d26f13ab7", "commitAfterChange": "61d6a0379a06ef6680e82e7f6a32f04040234762", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "signatureAfterChange": " public void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "diff": ["-\t\tthis.leafComponentType = env.convertToRawType(resolvedType);", "+\t\tthis.leafComponentType = env.convertUnresolvedBinaryToRawType(resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3393748a310e17ec92ec99f893c6e3f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "diff": ["-\t\tSyntheticAccessMethodBinding accessor =", "+\t\tSyntheticMethodBinding accessor ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "339a129403ba1f23b793de908110ee0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/RunConverterTests.java", "commitBeforeChange": "997a25bfb062d5e13ab988c44d8a015d4710ad9a", "commitAfterChange": "fa16fc80b475f974c3040ef90f01075968f51405", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tAbstractJavaModelTests.TESTS_SEARCH = null;", "+\tAbstractJavaModelTests.TESTS_RANGE = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33b0c010b65398b966e2653b0d5d63ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "diff": ["-\t\t\tsourceFileName.append(Util.SUFFIX_java);", "+\t\t\tsourceFileName.append(SuffixConstants.SUFFIX_java);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33be406944463ebac5f8d76da599fcf9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/TypeAnnotationCodeStream.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void checkcast(TypeReference typeReference, TypeBinding typeBinding)", "signatureAfterChange": " \t \tpublic void checkcast(TypeReference typeReference, TypeBinding typeBinding)", "diff": ["-\t}", "+\t", "-\t\t\taddAnnotationContext(typeReference, this.position, AnnotationTargetTypeConstants.TYPE_CAST);", "+\t\t\taddAnnotationContext(typeReference, this.position, AnnotationTargetTypeConstants.CAST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33beaec08bda03669f4b1a538da4ba32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "0820eec9945610037c75b7f3c6bc13a32acbc80c", "commitAfterChange": "4fb4651d7a5f975649614980f56a713ca0cbf39d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate void trace( String s )", "signatureAfterChange": " \t \tprivate void trace( String s )", "diff": ["-\t\t\ts = \"[ phase = \" + _phaseName + \", file = \" + getFileNameForPrint() +\" ]  \" + s; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\t\ts = \"[ phase = \" + _phaseName + \", file = \" + getFileNamesForPrinting() +\" ]  \" + s; //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33cecd6b29dab82668a4daf405c3653b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void testDiscardWorkingCopy2() throws CoreException", "signatureAfterChange": " public void testDiscardWorkingCopy2() throws CoreException", "diff": ["-\t\tassertDeltas(", "+\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d65259d0f3c52f48294eb77d546d6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "1d93c592655130ee83ccf569199d32491937354e", "commitAfterChange": "b60bff4501141ce0e7ed5fab43805b77b52b5e19", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected void compute() throws JavaModelException, CoreException", "signatureAfterChange": " protected void compute() throws JavaModelException, CoreException", "diff": ["-\tif (this.type != null) {", "+\tif (this.focusType != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33de894adee5d5aaec94d4a77da596a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "df7db86dfdaff61d3ebc9328b44d180f263988fe", "commitAfterChange": "d781dcbe8a593d5ba6dc04230bf23771b905f7bd", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": " public final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException", "signatureAfterChange": " public final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException", "diff": ["-\t\treturn CharOperation.isWhitespace(this.currentCharacter);", "+\t\treturn ScannerHelper.isWhitespace(this.currentCharacter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33f9f01dea12f55866134d5acc6b5029", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/RecoveredTypeBinding.java", "commitBeforeChange": "b420bfdd4a859691c7aeac5921ac84f8a5db1f18", "commitAfterChange": "6cf1783794eb1a6e5e7c6e98927f2c861618e7ac", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic ITypeBinding[] getTypeArguments()", "signatureAfterChange": " \tpublic ITypeBinding[] getTypeArguments()", "diff": ["-\t\tif (this.referenceBinding != null) {", "+\t\tif (this.binding != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33fe3d776abab373e1047c754f0c7d22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.ANONYMOUS_CLASS_DECLARATION, this.actualCompletionPosition);", "+\t\t\t\tInternalCompletionProposal proposal = createProposal(CompletionProposal.ANONYMOUS_CLASS_DECLARATION, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34211622ffc957309a9b49822f24d06f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "84bab690fce0d07b753bfc05c56b8e56d168a1a6", "commitAfterChange": "72404957161b9a06b0beff261255d6fcbe542913", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "signatureAfterChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "diff": ["-\t\t\t\tsetModifiers(value);", "+\t\t\t\tinternalSetModifiers(value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3430e6732d423d7e67cc83b5d039dfdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArrayQualifiedTypeReference.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected void reportInvalidType(Scope scope)", "signatureAfterChange": "  \tprotected void reportInvalidType(Scope scope)", "diff": ["-\t\tscope.problemReporter().javadocInvalidType(this, this.resolvedType, scope.getModifiers());", "+\t\tscope.problemReporter().javadocInvalidType(this, this.resolvedType, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "343418013198112774586960dd16de90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \t\r \tpublic ImportDeclaration convertImport(ImportReference importReference)", "signatureAfterChange": "\r \t\r \tpublic ImportDeclaration convertImport(ImportReference importReference)", "diff": ["-\t\timportDeclaration.setSourceRange(importReference.declarationSourceStart, importReference.declarationSourceEnd - importReference.declarationSourceStart + 1);\r", "+\t\timportDeclaration.setSourceRange(importReference.declarationSourceStart, importReference.declarationEnd - importReference.declarationSourceStart + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "343a5ddd6fb7da5dfd44ba39e665e7a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "8cb3365a924e5869d5c8a5715a80d4cd8189b243", "commitAfterChange": "4ec04ec7ec987de2e86c2ac8cdacbf6a8acd72a4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate boolean connectSuperclass()", "signatureAfterChange": " \tprivate boolean connectSuperclass()", "diff": ["-\t\t\t\t\tsourceType.typeBits |= sourceType.applyCloseableWhitelists();", "+\t\t\t\t\tsourceType.typeBits |= sourceType.applyCloseableClassWhitelists();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "344188a87f6e90a2bbc11f8600b3519f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject3() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject3() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "344d5bec92d168f396b1842b961449e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "69166fc4e41eda18ba3ac0adb7fbc59250ec70c0", "commitAfterChange": "55ee0265171c95e2014ca1f0a8ad4553c7329fc1", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public IJavaModel getJavaModel()", "signatureAfterChange": " public JavaModel getJavaModel()", "diff": ["-public IJavaModel getJavaModel() {", "+public JavaModel getJavaModel() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "345825c14925f0c6f5a6be5c1a5bb031", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForConstructor.java", "commitBeforeChange": "886d0f0c1c856616883aceae38186164d207f2a8", "commitAfterChange": "3bb52dd94a6650dc05eccd3db55f82a70954db23", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildSuite(javadocTestClass());", "+\t\treturn buildTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "345d71ca37498b22fb1c9e0c7d73eae4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/GammaCompressedIndexBlock.java", "commitBeforeChange": "669b9af0f5a06f4381a84a633c0be85e376c6f3e", "commitAfterChange": "cf266a5a150479cb6fad7bdee0518adaf976404e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic boolean nextEntry(WordEntry entry)", "signatureAfterChange": " \tpublic boolean nextEntry(WordEntry entry)", "diff": ["-\t\t\tchar[] word= readCodeStream.readSmallUTF();", "+\t\t\tchar[] word= readCodeStream.readUTF();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3462bd50bd6efee60c4b359f62291402", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SaveIndex.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\treturn \"saving index for \" + this.indexPath; //$NON-NLS-1$", "+\t\treturn \"saving index for \" + this.containerPath; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "346873e18585d21a7bb1bd3431182f8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "8e80deae1f046ae4551ba19254abdddd2b23044c", "commitAfterChange": "20ab4653c81b813fd48f74b27ae8af07488f3d49", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tif (isConditionTrue) {", "+\t\tif (isConditionOptimizedTrue) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3486b23470f968bf9fcbb5a684a46286", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " public void generateSyntheticBodyForConstructorAccess(SyntheticAccessMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForConstructorAccess(SyntheticMethodBinding accessBinding)", "diff": ["-public void generateSyntheticBodyForConstructorAccess(SyntheticAccessMethodBinding accessBinding) {", "+public void generateSyntheticBodyForConstructorAccess(SyntheticMethodBinding accessBinding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "348a4a6d37fb5e691e6d79828cbdc164", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "da39b69e72c50baaaa7ca77863d468ca697fcf61", "commitAfterChange": "ff204ce3a41738619b4636be750fa00b8770f7a8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope scope)", "signatureAfterChange": "\r \tpublic boolean visit(AnonymousLocalTypeDeclaration typeDeclaration, BlockScope scope)", "diff": ["-\tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope scope) {\r", "+\tpublic boolean visit(AnonymousLocalTypeDeclaration typeDeclaration, BlockScope scope) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "348b80c6677e85196292b896d0be5557", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/TokenScanner.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic TokenScanner(IScanner scanner)", "signatureAfterChange": " \tpublic TokenScanner(Scanner scanner)", "diff": ["-\tpublic TokenScanner(IScanner scanner) {", "+\tpublic TokenScanner(Scanner scanner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "349e52805cbbbacdee54749f21b96585", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\treturn this.expressionType = binding.type;", "+\t\treturn this.resolvedType = binding.type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34a380d9d8e8713fb913f6c647e6666c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic SearchEngine()", "signatureAfterChange": " \tpublic SearchEngine()", "diff": ["-\t\tthis.basicEngine = new SearchBasicEngine();", "+\t\tthis.basicEngine = new BasicSearchEngine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34b60382addd581d1fc646b9b1bb84dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "79595bc8e3c8f30e8c21788264b1a2858fc4a5c5", "commitAfterChange": "93f02dc8fee116123b433670b020252814159420", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "signatureAfterChange": " \tprivate IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "diff": ["-\t\t\t\t\t\t\t\twhile (!existingElements.add(newElement)) ((JavaElement)newElement).occurrenceCount++;", "+\t\t\t\t\t\t\t\twhile (!existingElements.add(newElement)) ((SourceRefElement)newElement).occurrenceCount++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34c2551478b79550ae29a0062cc7cb7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefMethodErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefMethodErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34d1bec29d062665f4b29e6c573c0742", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "dafcaed018e710da1dd812dc260b3ece76bb3e1d", "commitAfterChange": "a28933ffb03bd99d79fd8fce531cad43e24a3c4c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic boolean hasGeneratedSourceFiles()", "signatureAfterChange": " \tpublic boolean hasGeneratedSourceFiles()", "diff": ["-\tpublic boolean hasGeneratedSourceFiles(){ return !_generatedFiles.isEmpty();  }", "+\tpublic boolean hasGeneratedSourceFiles(){ return !_allGeneratedFiles.isEmpty();  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34d8f9f66733b8c1fca541df543040e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "  public void test149() throws JavaModelException", "signatureAfterChange": "  public void test149() throws JavaModelException", "diff": ["-\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(), Ljavadoc.methods.tags.BasicTestMethods;, ()V, BasicTestMethods, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(), Ljavadoc.methods.tags.BasicTestMethods;, ()V, BasicTestMethods, null, \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f22aec6356f502eca16b819210fd8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "af611344f45ed75fde1b18f8c5abcb58f8227db0", "commitAfterChange": "b2ae5b84e851673c2a38346fddf34788249a797b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate int elementType(IResource res, int kind, int flags, int parentType, RootInfo rootInfo)", "signatureAfterChange": " \tprivate int elementType(IResource res, int kind, int flags, int parentType, RootInfo rootInfo)", "diff": ["-\t\t\t\t\t\tboolean isJavaProject = this.hasJavaNature(proj);", "+\t\t\t\t\t\tboolean isJavaProject = JavaProject.hasJavaNature(proj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34fead427a25e24806f65656fd37258a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void endVisit(Break breakStatement, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(BreakStatement breakStatement, BlockScope scope)", "diff": ["-\tpublic void endVisit(Break breakStatement, BlockScope scope) {", "+\tpublic void endVisit(BreakStatement breakStatement, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3501ccd51680ced3b60b80e719f24f5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ForStatement( \t\tStatement[] initializations, \t\tExpression condition, \t\tStatement[] increments, \t\tStatement action, \t\tboolean neededScope, \t\tint s, \t\tint e)", "signatureAfterChange": "  \tpublic ForStatement( \t\tStatement[] initializations, \t\tExpression condition, \t\tStatement[] increments, \t\tStatement action, \t\tboolean neededScope, \t\tint s, \t\tint e)", "diff": ["-\t\tif (action instanceof EmptyStatement) action.bits |= IsUsefulEmptyStatementMASK;", "+\t\tif (action instanceof EmptyStatement) action.bits |= IsUsefulEmptyStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35077e1bd059149dc9b9ddec6542bbf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String toString()", "diff": ["-\tif (this.modifiers == IConstants.AccPublic) {", "+\tif (this.modifiers == ClassFileConstants.AccPublic) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3518db2a5c18a0509983bed4c01f7f89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "53aa3826abf5a6d0c6d46ffdf5ca06318e0e608e", "commitAfterChange": "3a45bbbeb56dfb4a2b74aec609db313f8b4d8387", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": " \tpublic void test156()", "signatureAfterChange": " \tpublic void test156()", "diff": ["-\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSetttings());", "+\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSettings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "351fab89fae3910369313a525702840c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " public void testSearchPatternValidMatchRule34()", "signatureAfterChange": " public void testSearchPatternValidMatchRule34()", "diff": ["-\t\tSearchPattern.R_CAMEL_CASE_MATCH);", "+\t\tSearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35423d18d530a30d0b1188a8b3c86797", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "  protected void consumeInvalidConstructorDeclaration()", "signatureAfterChange": "  protected void consumeInvalidConstructorDeclaration()", "diff": ["-\tcd.declarationSourceEnd = flushAnnotationsDefinedPriorTo(endStatementPosition); ", "+\tcd.declarationSourceEnd = flushCommentsDefinedPriorTo(endStatementPosition); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35427dec5695c19fd7306e04f7c9addf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexerRequestor.java", "commitBeforeChange": "0c486e9f722d5cf66150a2a8bb111fadf3c196f6", "commitAfterChange": "5e6cea593f4be5a13a34ce02970d8b34d029a673", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void enterInterface(TypeInfo typeInfo)", "signatureAfterChange": " public void enterInterface(TypeInfo typeInfo)", "diff": ["-\t\t\ttypeParameterSignatures[i] = Signature.createTypeParameterSignature(typeParameterInfo.name, typeParameterInfo.typeParameterBounds);", "+\t\t\ttypeParameterSignatures[i] = Signature.createTypeParameterSignature(typeParameterInfo.name, typeParameterInfo.bounds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3551939d69adf2a6bc390ecfd0b0454e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeParameter[] typeParameters, IJavaElement enclosingElement, IJavaElement parent, Binding binding, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\t\t(this.patternFineGrain & IJavaSearchConstants.PARAMETERIZED_TYPE_REFERENCE) != 0;", "+\t\t(this.patternFineGrain & IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3557d9fa32586ef3f7ffec2fec956cf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void branchChainTo(Label label)", "signatureAfterChange": " \tpublic void branchChainTo(BranchLabel label)", "diff": ["-\tpublic void branchChainTo(Label label) {", "+\tpublic void branchChainTo(BranchLabel label) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3564ea24c2d2f665e24c272facabdd51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5ab1b44e840f5c63c769a4409a1d1ee2ee2b555d", "commitAfterChange": "180e4e45746dd1c7939f8d071838acd40ff207da", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public JavaSearchMatch newMethodReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "signatureAfterChange": "  public SearchMatch newMethodReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "diff": ["-public JavaSearchMatch newMethodReferenceMatch(", "+public SearchMatch newMethodReferenceMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "356b8b9d614964e5cb0ce7efae541ac5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "bb161cc0f24c88013c90d4f52d2200284e6436fc", "commitAfterChange": "2f5fd18c93661c661012397a8eb704f52a56558d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " ClassFileInfo(IClassFile classFile)", "signatureAfterChange": " ClassFileInfo(ClassFile classFile)", "diff": ["-ClassFileInfo(IClassFile classFile) {", "+ClassFileInfo(ClassFile classFile) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357144a4168e539b88dd60662153b834", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\tcodeStream.instance_of(type.binding);", "+\t\tcodeStream.instance_of(type.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357ca3ff1576380b8852b8e22d8dffcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, TypeAnnotationWalker walker, char [][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, ITypeAnnotationWalker walker, char [][][] missingTypeNames)", "diff": ["-private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, TypeAnnotationWalker walker, char [][][] missingTypeNames) {", "+private TypeBinding getTypeFromTypeVariable(TypeVariableBinding typeVariableBinding, int dimension, AnnotationBinding [][] annotationsOnDimensions, ITypeAnnotationWalker walker, char [][][] missingTypeNames) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "357ef6f9b281f952d25c68df245907ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r void recordReference(char[][] qualifiedEnclosingName, char[] simpleName)", "signatureAfterChange": "\r void recordReference(char[][] qualifiedEnclosingName, char[] simpleName)", "diff": ["-\trecordReference(qualifiedEnclosingName);\r", "+\trecordQualifiedReference(qualifiedEnclosingName);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3586605f18a076c9ee8304f479977aab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void format( \t\tMemberTypeDeclaration memberTypeDeclaration, \t\tClassScope scope, \t\tboolean isChunkStart)", "signatureAfterChange": "  \tprivate void format( \t\tTypeDeclaration memberTypeDeclaration, \t\tClassScope scope, \t\tboolean isChunkStart)", "diff": ["-\t\tMemberTypeDeclaration memberTypeDeclaration,", "+\t\tTypeDeclaration memberTypeDeclaration,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "358e730d8934e6c3e9d6784e142b3ed9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void matchCheck(AstNode node, MatchSet set)", "signatureAfterChange": " protected void matchCheck(AstNode node, MatchingNodeSet set)", "diff": ["-protected void matchCheck(AstNode node, MatchSet set) {", "+protected void matchCheck(AstNode node, MatchingNodeSet set) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35924c14e2c39c0baa9527d866fc0ea7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic int getOverflow()", "signatureAfterChange": " \tpublic int getOverflow()", "diff": ["-\t\treturn fOverflow;", "+\t\treturn overflow;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35959ddf18e569c07f10a3ba2b8258e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaConventionTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testPackageFragmentRootOverlap() throws Exception", "signatureAfterChange": " public void testPackageFragmentRootOverlap() throws Exception", "diff": ["-\t\tthis.copy(new java.io.File(getExternalJCLPath()), new java.io.File(getWorkspaceRoot().getLocation().toOSString() + java.io.File.separator + \"P1\" + java.io.File.separator + \"jclMin.jar\"));", "+\t\tthis.copy(new java.io.File(getExternalJCLPathString()), new java.io.File(getWorkspaceRoot().getLocation().toOSString() + java.io.File.separator + \"P1\" + java.io.File.separator + \"jclMin.jar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35ab48f2996401f2fdab03b08652b7c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tpublic boolean visit(SwitchStatement node)", "signatureAfterChange": " \tpublic boolean visit(SwitchStatement node)", "diff": ["-\t\t\t\tpos= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameLBRACE, pos);", "+\t\t\t\tpos= getScanner().getTokenEndOffset(TerminalTokens.TokenNameLBRACE, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35aba72039d3cb6bfa463c9c4d89a9e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void updateFromParserState()", "signatureAfterChange": " public void updateFromParserState()", "diff": ["-\t\t\t\t\t\tparser.consumeMethodHeaderParameters();", "+\t\t\t\t\t\tparser.consumeMethodHeaderRightParen();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35b819bd99fe536ffcbab96beddbe4ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocFlattener.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public boolean visit(ArrayType node)", "signatureAfterChange": " public boolean visit(ArrayType node)", "diff": ["-\t\t\t((ExtraDimension) node.dimensions().get(i)).accept(this);", "+\t\t\t((Dimension) node.dimensions().get(i)).accept(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35b8ac341229140c686a59c6fb39b475", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateCompilationUnitOperation.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected ICompilationUnit getCompilationUnit()", "signatureAfterChange": " protected ICompilationUnit getCompilationUnit()", "diff": ["-\treturn ((IPackageFragment)getParentElement()).getCompilationUnit(fName);", "+\treturn ((IPackageFragment)getParentElement()).getCompilationUnit(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35ba069bb5ebd4e9400d489d08da910f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "5f8bc31fdd9227264ffdb0d653c171e78b54416c", "commitAfterChange": "c4203edb27100ace82d961d9cf1385c837279276", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "signatureAfterChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "diff": ["-\t\t\t\tMethodBinding original = binding.original();", "+\t\t\t\tMethodBinding original = binding.shallowOriginal();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c332500b6e9c89746156c2372c8272", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void consumeClassHeaderName()", "signatureAfterChange": " protected void consumeClassHeaderName()", "diff": ["-\t\tmarkCurrentMethodWithLocalType();", "+\t\tmarkEnclosingMemberWithLocalType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35cfcfaaa4152e3cc61a5b9692c120b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "5dcad0acfcfbe8755abd38f2836e8e0329153a35", "commitAfterChange": "5839e04f8f69c5d3e5ba5ee43573c89e52d5ff9b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\tif (!usedForGenericMethodReturnTypeInference()) // used for generic type inference ?", "+\t\t\t\t\t\tif (!isIndirectlyUsed()) // used for generic type inference or boxing ?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f40be6e704ead3612411a0707263ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "a3a56b09d2f95fb3a7b5cd05c0c0ac7808a2fa55", "commitAfterChange": "74413b0d2b2b9b2be3dee7cb95ead3a3d3148698", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkAndSetModifiersForMethod(MethodBinding methodBinding)", "signatureAfterChange": " \tprivate void checkAndSetModifiersForMethod(MethodBinding methodBinding)", "diff": ["-\t\t\t\t\tproblemReporter().illegalModifierForAnnotationMethod((AbstractMethodDeclaration) referenceContext);", "+\t\t\t\t\tproblemReporter().illegalModifierForAnnotationMember((AbstractMethodDeclaration) referenceContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f67fd06a27fcd998724e09528ae237", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "c57d63e48d2e13925643b8ebe6a288202f202e6b", "commitAfterChange": "e2a159c6596c04bca6bcd93e61dded936d044196", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\t \tprivate void notifyListeners(IJavaElementDelta deltaToNotify, int eventType, IElementChangedListener[] listeners, int[] listenerMask, int listenerCount)", "signatureAfterChange": "\t \tprivate void notifyListeners(IJavaElementDelta deltaToNotify, int eventType, IElementChangedListener[] listeners, int[] listenerMask, int listenerCount)", "diff": ["-\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\tSafeRunner.run(new ISafeRunnable() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35fd29a74506a5a317c31e167bddeb75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "05bd6362ebc3db4accc519070d9c8a9ecd2a788b", "commitAfterChange": "905cf94d64f942e28e58015355605b9b9383c577", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void generateOptimizedLogicalAnd( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLogicalAnd( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\tif ((left.implicitConversion & 0xF) == T_boolean) {", "+\t\tif ((left.implicitConversion & COMPILE_TYPE_MASK) == T_boolean) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3616357516cb6f625ac091df36cd3e8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " public void testTypeRefGenericAllG2_Parameterized() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAllG2_Parameterized() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, PARAMETERIZED_TYPE_REFERENCE, scope);", "+\tsearch(\"*\", TYPE, TYPE_ARGUMENT_TYPE_REFERENCE, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36186f9c09b86b3ffe0981d74547a40e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "ea916b0462fec6996e619f84c30f348e2877686a", "commitAfterChange": "558c64a899c0debc518d6eb92e85f37b05902eba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic ReferenceExpression(NameReference name, TypeReference[] typeArguments, SingleNameReference method)", "signatureAfterChange": "  \tpublic ReferenceExpression(NameReference name, TypeReference[] typeArguments, SingleNameReference method)", "diff": ["-\t\tthis.typeArguments = typeArguments;", "+\t\tthis.typeParameters = typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3622478ebe7d774e59847de505600617", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic void testMissingTagsErrorPackageOverriding()", "signatureAfterChange": " \tpublic void testMissingTagsErrorPackageOverriding()", "diff": ["-\t\trunNegativeTest(MissingTags, resultForMissingTags(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(MISSING_TAGS, resultForMissingTags(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3624018e5b47dd1e684cbbbb423522bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "73e6c55b6cebcb032c8128286708483f86167b64", "commitAfterChange": "5326f4925981afee39790c88bc133bd18e542033", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tboolean visit(AnnotationArgument argument, BlockScope scope);", "signatureAfterChange": " \tboolean visit(AnnotationSingleNameReference argument, BlockScope scope);", "diff": ["-\tboolean visit(AnnotationArgument argument, BlockScope scope);", "+\tboolean visit(AnnotationSingleNameReference argument, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3631855119b1d6c2785288d10f72ec98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "1ffd93ec138fc38a22c082921b3ee25a9e75ba37", "commitAfterChange": "cef21f9db5e181946eac0a0d175b10763094848c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\t \t \tpublic static void parse(ICompilationUnit[] compilationUnits, ASTRequestor astRequestor, int apiLevel, Map options, IProgressMonitor monitor)", "signatureAfterChange": "\t \t \tpublic static void parse(ICompilationUnit[] compilationUnits, ASTRequestor astRequestor, int apiLevel, Map options, IProgressMonitor monitor)", "diff": ["-\t\t\t\tnode.setJavaElement(compilationUnits[i]);", "+\t\t\t\tnode.setTypeRoot(compilationUnits[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36676260dc4dbf5a2090f145d4c930ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0) return;", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a723754c91e6d19ab8983bc106eac1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic boolean search(IIndex index, IProgressMonitor progressMonitor)", "signatureAfterChange": "\t  \tpublic boolean search(Index index, IProgressMonitor progressMonitor)", "diff": ["-\tpublic boolean search(IIndex index, IProgressMonitor progressMonitor) {", "+\tpublic boolean search(Index index, IProgressMonitor progressMonitor) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a7aa884a061bdc6a4b6d54fdda7582", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ThreadSafetyTests.java", "commitBeforeChange": "d47f7e16ee9a06ebea0c1bfa73440fda6af0235f", "commitAfterChange": "7e24610fa37e50748c4e9a88c07892f633d4f846", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["-\t\tsuite.addTest(new ClasspathTests(\"testDeadlock01\"));", "+\t\tsuite.addTest(new ThreadSafetyTests(\"testDeadlock01\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a9adceb2564b42ff1179362aa97b84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationBinding.java", "commitBeforeChange": "ee7a9f184cb78c9a997b3d97c102d52d6cad8cc9", "commitAfterChange": "5ce130e25c355987e77b700c026948aca2c3cdd7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic String getName()", "signatureAfterChange": "  \tpublic String getName()", "diff": ["-\t\t\treturn new String(this.internalAnnotation.getAnnotationType().sourceName());", "+\t\t\treturn new String(this.binding.getAnnotationType().sourceName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36a9c7acfb1520903726c396476c6ced", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " public synchronized Index getIndex(IPath containerPath, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndex(IPath containerPath, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-\tString indexLocation = computeIndexLocation(containerPath);", "+\tIPath indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36b6fb35272015b876f1c050c193b160", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "e7300caf84c0933510395a99b704d9f077a17655", "commitAfterChange": "c0ce53e544605bae156c8b88dd5e1269fce9a282", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " protected void consumeEnumHeader()", "signatureAfterChange": " protected void consumeEnumHeader()", "diff": ["-\t\tthis.problemReporter().invalidUsageOfEnumsDeclarations(enumDeclaration);", "+\t\tthis.problemReporter().invalidUsageOfEnumDeclarations(enumDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36bec66bfe187a5a8f61ff59f07139dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/NameEnvironment.java", "commitBeforeChange": "bd66f33da6dcc33c67153a2129d6fec0fda88ac8", "commitAfterChange": "dc4de554479d1bd7115bbb51a83f104f76dfaa9e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public static ClasspathLocation[] computeLocations(\r \tIWorkspaceRoot workspaceRoot,\r \tIJavaProject javaProject,\r \tString outputFolderLocation,\r \tArrayList sourceFolders,\r \tLookupTable prereqOutputFolders) throws JavaModelException", "signatureAfterChange": "\r public static ClasspathLocation[] computeLocations(\r \tIWorkspaceRoot workspaceRoot,\r \tIJavaProject javaProject,\r \tString outputFolderLocation,\r \tArrayList sourceFolders,\r \tSimpleLookupTable prereqOutputFolders) throws JavaModelException", "diff": ["-\tLookupTable prereqOutputFolders) throws JavaModelException {\r", "+\tSimpleLookupTable prereqOutputFolders) throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36c648dd62f4218a92141f5e61155df2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "5a3a5f398a8971568181868be2d5d76728016763", "commitAfterChange": "44cc03459f9020b4da0ebdb14fa0624b7d8dfc4d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public HierarchyResolver(LookupEnvironment lookupEnvironment, IHierarchyRequestor requestor)", "signatureAfterChange": " public HierarchyResolver(LookupEnvironment lookupEnvironment, HierarchyBuilder requestor)", "diff": ["-public HierarchyResolver(LookupEnvironment lookupEnvironment, IHierarchyRequestor requestor) {", "+public HierarchyResolver(LookupEnvironment lookupEnvironment, HierarchyBuilder requestor) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36f74a2fe6a5725a56a32c23d3a6f66e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "96a8824b1e471f1db4dd22f336aec5c7ff8c583e", "commitAfterChange": "45a4bf71a614f82f4a9506597605186918f4c34e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope)", "diff": ["-\t}", "-\tpublic void traverse(ASTVisitor visitor, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36f97e1d31296dd83efe4a565610bd0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "6d1c57fb2448b115bc8f96943cd4e4f07a42d11a", "commitAfterChange": "d4217008a0577ef6139e05a418f311a9a8588da7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected IBinding getBindingFromKey(final String key, final ICompilationUnit unit)", "signatureAfterChange": "     protected IBinding getBindingFromKey(final String key, final ICompilationUnit unit)", "diff": ["-\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS3);", "+\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36fcf20230fbd1ab0e608fa8acd89388", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tpublic IClasspathEntry getClasspathEntryFor(IPath path)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry getClasspathEntryFor(IPath path)\r \t\tthrows JavaModelException", "diff": ["-\t\tIClasspathEntry[] entries = getResolvedClasspath(true);\r", "+\t\tIClasspathEntry[] entries = getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3701c90c806dd3553818f130c20deeaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForClassLiteral(TypeBinding targetType, BlockScope blockScope)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForClassLiteral(TypeBinding targetType, BlockScope blockScope)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37051f5e271800c341f3336770a518b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": " \tpublic void testMethodInvocation()", "signatureAfterChange": " \tpublic void testMethodInvocation()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37192b70dde0ebf0db114786fc649c83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "ff2422726abd9b4eb2726e976f3ef82854d72609", "commitAfterChange": "20fa08dd67915598091c483c6e898b71bc3a58de", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic int computeIndentUnits(String line)", "signatureAfterChange": " \t \tpublic int computeIndentUnits(String line)", "diff": ["-\t\treturn Indents.computeIndentUnits(line, this.tabWidth, this.indentWidth);", "+\t\treturn Indents.measureIndentUnits(line, this.tabWidth, this.indentWidth);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3728789c44f3196b9490396a91ada10f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocFieldCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void test012() throws JavaModelException", "signatureAfterChange": "  public void test012() throws JavaModelException", "diff": ["-\t\t\"BasicTestFields[TYPE_REF]{BasicTestFields, javadoc.fields.tags, Ljavadoc.fields.tags.BasicTestFields;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"BasicTestFields[TYPE_REF]{BasicTestFields, javadoc.fields.tags, Ljavadoc.fields.tags.BasicTestFields;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "373dec823ea6e37b5bff57ebde658091", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 318, "methodNumberAfterChange": 318, "signatureBeforeChange": " public void testCompletionKeywordFinal7() throws JavaModelException", "signatureAfterChange": " public void testCompletionKeywordFinal7() throws JavaModelException", "diff": ["-\t\t\t\"element:finalize    completion:protected void finalize() throws Throwable    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\t\t\t\"element:finalize    completion:protected void finalize() throws Throwable    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374c7c0a885db704453f6360922c09f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 188, "methodNumberAfterChange": 188, "signatureBeforeChange": "  \t\tpublic boolean visit(ExtraDimension node)", "signatureAfterChange": "  \t\tpublic boolean visit(Dimension node)", "diff": ["-\t\tpublic boolean visit(ExtraDimension node) {", "+\t\tpublic boolean visit(Dimension node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37560167fcad03425d0a18c6dea8cce9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testDeclarationOfReferencedTypes1() throws JavaModelException, CoreException", "signatureAfterChange": " public void testDeclarationOfReferencedTypes1() throws JavaModelException, CoreException", "diff": ["-\t\tgetExternalJCLPath() + \" java.lang.Object\\n\" +", "+\t\tgetExternalJCLPathString() + \" java.lang.Object\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3759c06cf1c4a35879b264a3074af85c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ArrayTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\t\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376b2aa3e26b715763568a27bed8fcd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FineGrainVisitor.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public boolean visit(ParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, BlockScope scope)", "signatureAfterChange": "  public boolean visit(ParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, BlockScope scope)", "diff": ["-\tif ((this.fineGrain & PARAMETERIZED_TYPE_REFERENCE) != 0) {", "+\tif ((this.fineGrain & TYPE_ARGUMENT_TYPE_REFERENCE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37868221f2ea24411d8faafccf452d66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 322, "methodNumberAfterChange": 322, "signatureBeforeChange": "  \tpublic void test302()", "signatureAfterChange": "  \tpublic void test302()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a24e91eefc0219f96fcad3650d66fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\t\tcodeStream.generateClassLiteralAccessForType(type.binding, syntheticField);", "+\t\t\tcodeStream.generateClassLiteralAccessForType(type.resolvedType, syntheticField);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37bcbf5855275da71941ff8df3b57ce1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testAttachSourceSourceRangeInnerClass() throws JavaModelException", "signatureAfterChange": " public void testAttachSourceSourceRangeInnerClass() throws JavaModelException", "diff": ["-\tIClassFile cf = this.jarRoot.getPackageFragment(\"x.y\").getClassFile(\"A$Inner.class\");", "+\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A$Inner.class\");", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c2c87578230b28bac58d5cbd47a837", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testAddInclusionOnFolderUnderProject() throws CoreException", "signatureAfterChange": " public void testAddInclusionOnFolderUnderProject() throws CoreException", "diff": ["-\t\tassertResourcesEqual(", "+\t\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37c782f6d4080130ed8c83d352c7df36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void tagAsNeedCheckCast()", "signatureAfterChange": " \tpublic void tagAsNeedCheckCast()", "diff": ["-\t\tthis.bits |= NeedRuntimeCheckCastMASK;", "+\t\tthis.bits |= GenerateCheckcast;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37efce399092820be7831eefb33f3b39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "7575387e5ef8dc6a203a4bfcf32e27bf32af2177", "commitAfterChange": "64a9f2e9afe2fbf2747713a2decd682b6bd4fd22", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private static int consumeWhitespace(char[] typeName, int pos, int length)", "signatureAfterChange": " private static int consumeWhitespace(char[] typeName, int pos, int length)", "diff": ["-        if (currentChar != ' ' && !CharOperation.isWhitespace(currentChar)) {", "+        if (currentChar != ' ' && !ScannerHelper.isWhitespace(currentChar)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37f5e4bcb35ba9d3193b0d913a70afdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic FieldReference(char[] source, long pos)", "signatureAfterChange": " \t \tpublic FieldReference(char[] source, long pos)", "diff": ["-\t\tbits |= BindingIds.FIELD;", "+\t\tbits |= Binding.FIELD;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380870aba4e0b288fca2aa1cbcd3cf4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void testParameterizedTypeMultipleArguments03() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeMultipleArguments03() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedSourceType(unit, \"NonGeneric.GenericMember<? super RuntimeException, ? super IllegalMonitorStateException, ? super IllegalMonitorStateException>\"); //$NON-NLS-1$", "+\t\tParameterizedSourceType type = selectParameterizedType(unit, \"NonGeneric.GenericMember<? super RuntimeException, ? super IllegalMonitorStateException, ? super IllegalMonitorStateException>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380e47e9d2356dec1e24b85ced3e1d6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void removeBinaryChildren()", "signatureAfterChange": " void removeBinaryChildren()", "diff": ["-\t\tfBinaryChildren = fgEmptyChildren;", "+\t\tfBinaryChildren = NO_CHILDREN;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380ff6ab625cf1c67203e5fbf391910c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/EclipseFileManager.java", "commitBeforeChange": "a2ea0fcdb64df5f36a0bf2ffec84669e3f62dfd4", "commitAfterChange": "9db80bfa8f5d6f7bab214c95a4d83c3bdedb2628", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate Iterable<? extends File> getPathsFrom(String path)", "signatureAfterChange": "  \tprivate Iterable<? extends File> getPathsFrom(String path)", "diff": ["-\t\t} catch (InvalidInputException e) {", "+\t\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38131ece5e7f81c7d15f3d0e753639bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CodeSnippetClassFile( \torg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding aType, \torg.eclipse.jdt.internal.compiler.ClassFile enclosingClassFile, \tboolean creatingProblemType)", "signatureAfterChange": " public CodeSnippetClassFile( \torg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding aType, \torg.eclipse.jdt.internal.compiler.ClassFile enclosingClassFile, \tboolean creatingProblemType)", "diff": ["-\t\tsuperclassNameIndex = this.constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangObjectConstantPoolName);", "+\t\tsuperclassNameIndex = this.constantPool.literalIndexForType(ConstantPool.JavaLangObjectConstantPoolName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38148b5252b7637add7a4ba9e1b2d99b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic boolean visit(AnnotationFieldReference fieldRef, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(JavadocFieldReference fieldRef, BlockScope scope)", "diff": ["-\tpublic boolean visit(AnnotationFieldReference fieldRef, BlockScope scope) {", "+\tpublic boolean visit(JavadocFieldReference fieldRef, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38178a1443f65bb4b6b6d3b615e5e1c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void testClassFileGetElementAt04() throws JavaModelException", "signatureAfterChange": " public void testClassFileGetElementAt04() throws JavaModelException", "diff": ["-\tassertElementEquals(", "+\tassertElementExists("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "381c03308ee90f403f16017481f39b57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2bf89c240ddd3251e4b1d84f5113b5b23a25a1c7", "commitAfterChange": "d9ef1de09cb72d13b8a3503336aa24f1ef9b23e2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static IJavaElement determineIfOnClasspath( \t\tIResource resource, \t\tIJavaProject project)", "signatureAfterChange": " \tpublic static IJavaElement determineIfOnClasspath( \t\tIResource resource, \t\tIJavaProject project)", "diff": ["-\t\t\t\t\tIPackageFragmentRoot root = ((JavaProject) project).getPackageFragmentRoot(rootPath);", "+\t\t\t\t\t// given we have a resource child of the root, it cannot be a JAR pkg root", "+\t\t\t\t\tIPackageFragmentRoot root = ((JavaProject) project).getFolderPackageFragmentRoot(rootPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "381c7008d6f9426eee177a4cdab6bb6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "commitAfterChange": "882f4a412452cbe6d8e04ad004cc47e303c5c4e3", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic void test0065() throws JavaModelException", "signatureAfterChange": " \tpublic void test0065() throws JavaModelException", "diff": ["-\t\tITypeBinding genericType = typeBinding.getGenericType();", "+\t\tITypeBinding genericType = typeBinding.getTypeDeclaration();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3826f773a5e70858cd316e7e17f5d0da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "87d4fd7980451e90652820b5860e6399b708ef2c", "commitAfterChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic TextEdit format(String string, ConstructorDeclaration constructorDeclaration)", "signatureAfterChange": " \tpublic TextEdit format(String string, ConstructorDeclaration constructorDeclaration)", "diff": ["-\t\tthis.scribe.initializeScanner(compilationUnitSource);", "+\t\tthis.scribe.resetScanner(compilationUnitSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "383080f2af25886c09390d6109e5ad9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "d0b943221247f2ed21ae98f9b8f4c3e8985ad557", "commitAfterChange": "97084d9602873b3bc73126eefbc6e1b4d47d166d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected ArrayList determineAffectedPackageFragments(IPath location) throws JavaModelException", "signatureAfterChange": " \tprotected ArrayList determineAffectedPackageFragments(IPath location) throws JavaModelException", "diff": ["-\t\t\t\t\tIPackageFragmentRoot[] roots = project.getPackageFragmentRoots(classpath[i]);", "+\t\t\t\t\tIPackageFragmentRoot[] roots = project.computePackageFragmentRoots(classpath[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3843af76410de941105d70598fdc4979", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMethodElementInfo.java", "commitBeforeChange": "4adee8879ed9d02427b0416b20fcb0233fda8f7d", "commitAfterChange": "a7c94eb9b45b3735d848aadae935c5f6d3adac0f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public char[] getSelector()", "signatureAfterChange": " public char[] getSelector()", "diff": ["-\treturn this.name;", "+\treturn this.selector;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38718973b65e92d6d392ed0167786128", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "30692448718de71df165cc52c018bee7df31a8fb", "commitAfterChange": "7fbd6c6645520ea8c438436fb3626bdc9d3414b8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void enterConstructor(MethodInfo methodInfo)", "signatureAfterChange": " \tpublic void enterConstructor(MethodInfo methodInfo)", "diff": ["-\t\tenterMethod(methodInfo);", "+\t\tenterAbstractMethod(methodInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3879e4670799edfe5b321f94697a3c46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CodeCorrectionTestsRequestor.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void acceptLocalVariable(char[] name,char[] typePackageName,char[] typeName,int modifiers,int correctionStart,int correctionEnd)", "signatureAfterChange": " \t \tpublic void acceptLocalVariable(char[] name,char[] typePackageName,char[] typeName,int modifiers,int correctionStart,int correctionEnd)", "diff": ["-\t\tfSuggestions.addElement(new Suggestion(name, correctionStart, correctionEnd));", "+\t\tsuggestions.addElement(new Suggestion(name, correctionStart, correctionEnd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "387dd536d7783ed52609d58b93a3a14c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "bf20c4733b5ba628131f77425b6d1ad646dfd787", "commitAfterChange": "4fece3d5714f1973bb889af985f57d3ae8f56e20", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " private void writeCategoryTable(char[] categoryName, CategoryTable wordsToDocs, FileOutputStream stream) throws IOException", "signatureAfterChange": " private void writeCategoryTable(char[] categoryName, HashtableOfObject wordsToDocs, FileOutputStream stream) throws IOException", "diff": ["-private void writeCategoryTable(char[] categoryName, CategoryTable wordsToDocs, FileOutputStream stream) throws IOException {", "+private void writeCategoryTable(char[] categoryName, HashtableOfObject wordsToDocs, FileOutputStream stream) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38974f539c02598f6bfd5d6f98c48692", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/TypeBindingTests308.java", "commitBeforeChange": "b399cc14c85cc6279d3fbdd38ff116c9655dc352", "commitAfterChange": "8580e60642e681a1d666f59f018926e08e2e8a62", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "\r \tpublic void testMemberTypeSource() throws CoreException, IOException", "signatureAfterChange": "\r \tpublic void testMemberTypeSource() throws CoreException, IOException", "diff": ["-\t\tassertEquals(\"Wrong Type\", \"@T X\", (binding = binding.getEnclosingType()).toString());\r", "+\t\tassertEquals(\"Wrong Type\", \"@T X\", (binding = binding.getDeclaringClass()).toString());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38bc401424368ae5697f2540d979cc25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "f8b7b1febb4c9fcf320c41309b6a31c23cb7bc82", "commitAfterChange": "98dd79c3dcdb5671f6a2de546dcf5ba8cde518f6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\tmanager.request(new SaveProjectIndex(manager, projectPath));", "+\t\t\tmanager.request(new SaveIndex(manager, projectPath));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38bf27bb551e26fd30ce23631f81647f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "4c63cc3384193b40f8ecd10e816b8df4cb59320a", "commitAfterChange": "0307cad3f1b01ed5d7ce67bc78cd9b706e4819f3", "methodNumberBeforeChange": 336, "methodNumberAfterChange": 336, "signatureBeforeChange": " \t\t \tpublic void testVariableDeclarationExpression()", "signatureAfterChange": " \t\t \tpublic void testVariableDeclarationExpression()", "diff": ["-\t\t\tgenericPropertyListTest(x, x.modifiers(), new Property(\"Modifiers\", true, ExtendedModifier.class) { //$NON-NLS-1$", "+\t\t\tgenericPropertyListTest(x, x.modifiers(), new Property(\"Modifiers\", true, IExtendedModifier.class) { //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38bfe0e88f37934d27c35f208034a897", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticMethodForSwitchEnum(TypeBinding enumBinding)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethodForSwitchEnum(TypeBinding enumBinding)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38cec461d139f4e9868fb9b594be40be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 444, "methodNumberAfterChange": 444, "signatureBeforeChange": " \tpublic void test425()", "signatureAfterChange": " \tpublic void test425()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TYPE_DECLARATION_BRACE_POSITION, DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_BRACE_POSITION_FOR_TYPE_DECLARATION, DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38d3ff01bf25b16a9233d27635fb5717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38d95236b07ed43b98833a37b13bf345", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "eb5c674616fb78a01d2f52e1347da4c921d981ae", "commitAfterChange": "d1eee17b22e6a5c7fead90ad113c3a52618d279b", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 215, "signatureBeforeChange": "  \tprivate void saveClasspathListCache(String cacheName) throws CoreException", "signatureAfterChange": "  \tprivate void saveClasspathListCache(String cacheName) throws CoreException", "diff": ["-\t\tFile file = getClasspathCacheFile(cacheName);", "+\t\tFile file = getClasspathListFile(cacheName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38e85975754b8e43f0e713b63b853141", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "8e80deae1f046ae4551ba19254abdddd2b23044c", "commitAfterChange": "20ab4653c81b813fd48f74b27ae8af07488f3d49", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tif (isConditionTrue) {", "+\t\tif (isConditionOptimizedTrue) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38eaebc7c84e5db440e02c47067628bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "b8f8de75a4550d004127538c9d4cc23076b13afe", "commitAfterChange": "019595ccc2df022ba42315e87fd28c3a71a5ce43", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void _test023()", "signatureAfterChange": " public void _test023()", "diff": ["-this.runNegativeTest(", "+this.runConformTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "38f958ce19f478986fee66c15a1944b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0ba5e2f2851455c016407d133933070e588be146", "commitAfterChange": "c9df47e6bc4127d80d1e16ea8353f464e792fda3", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tprivate Hashtable getDefaultOptionsNoInitialization()", "signatureAfterChange": " \tprivate Hashtable getDefaultOptionsNoInitialization()", "diff": ["-\t\tdefaultOptionsMap.put(JavaCore.ENABLE_JAVADOC_ATTACHMENTS, JavaCore.ENABLED);", "+\t\tdefaultOptionsMap.put(JavaCore.ENABLE_JAVADOC_ATTACHMENTS_ACCESSES, JavaCore.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "391db15d68726554c2effe9a296d4fac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "6b41f376eb5bd5fa3046b8ac6fedca194080b0bd", "commitAfterChange": "262490d9212f700275b0f63ee471ae3ff354e58f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "signatureAfterChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "diff": ["-\t\t\tthis.potentialMatches.getPotentialMatches(", "+\t\t\tthis.matchSet.getPotentialMatches("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "392a0da2552de6a71a84ee4bc5a678ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "7aac6f03ecf70666410b0e689c91dafd6d67757a", "commitAfterChange": "465d091146b1d6997709777ea444048487da1d8d", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\t\t: ((AnnotationTypeMemberDeclaration) methodDecl).returnType;", "+\t\t\t: ((AnnotationMethodDeclaration) methodDecl).returnType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39363ab0db14aff2e2605a4a7c7faa89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/APTProblem.java", "commitBeforeChange": "1f82fbfe681e32018e530b8aaba28b5eaf34206f", "commitAfterChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic boolean isError()", "signatureAfterChange": " \t \tpublic boolean isError()", "diff": ["-\t\treturn _severity == Severity.Error;", "+\t\treturn _severity == Severity.ERROR;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "393ecb8ac8e0558c74261c75f3d7120a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkPackagePrivateAbstractMethod(MethodBinding abstractMethod)", "signatureAfterChange": " void checkPackagePrivateAbstractMethod(MethodBinding abstractMethod)", "diff": ["-\t\t\t\tif (doesMethodOverride(method, abstractMethod))", "+\t\t\t\tif (areMethodsEqual(method, abstractMethod))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39461e89051fad511ae84a09141c735d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "c2c9899514741103674136b061d37380904756e0", "commitAfterChange": "1d631cdc6d8aa97d297a027f3883f9c7312c678d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public void acceptResult(CompilationResult result)", "signatureAfterChange": "\r \r public void acceptResult(CompilationResult result)", "diff": ["-\t\t\t\t\tnewState.locationForType(qualifiedTypeName, sourceLocation);\r", "+\t\t\t\t\tnewState.recordLocationForType(qualifiedTypeName, sourceLocation);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "394f4a3a11707c0bc29c03f50826825b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "33231ff9d8a992e2921e9713edab9da2d39a8db8", "commitAfterChange": "ccb9285aede2cd6c70365e9b8e0d9b6fcf060e83", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void disassemble(IAnnotationComponentValue annotationComponentValue, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": "  \tprivate void disassemble(IAnnotationComponentValue annotationComponentValue, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\t\t\t\t\tnew String(returnClassName(Signature.toCharArray(typeName), '.', COMPACT)),", "+\t\t\t\t\t\tnew String(returnClassName(Signature.toCharArray(typeName), '.', mode)),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3955ad9e2a2dcab4f3f2ae0a35164f7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexInput.java", "commitBeforeChange": "e8fbf4db76f3cb4cdf82ad5223795b2651c6d983", "commitAfterChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic abstract IQueryResult[] queryFilesReferringToPrefix(char[] prefix) throws IOException;", "signatureAfterChange": " \tpublic abstract String[] queryFilesReferringToPrefix(char[] prefix) throws IOException;", "diff": ["-\tpublic abstract IQueryResult[] queryFilesReferringToPrefix(char[] prefix) throws IOException;", "+\tpublic abstract String[] queryFilesReferringToPrefix(char[] prefix) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39849da3426c2606ec46b8ab92727bed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "3f4150ac4efa9b8d64500efc25a550943b6c1ff6", "commitAfterChange": "594c810303054b1507a2ba499a90a46a5b4e39b0", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void endVisit(NormalAnnotation node)", "signatureAfterChange": " \tpublic void endVisit(Modifier node)", "diff": ["+\tpublic void endVisit(Modifier node) {", "+\t\tendVisitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3993e36409c0ae0fd97e7c3831520820", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestMixed.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(javadocTestClass());", "+\t\treturn buildAllCompliancesTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "399b3b79be2b897d6c6c9ee2a2e153b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testLocalType2() throws JavaModelException", "signatureAfterChange": " public void testLocalType2() throws JavaModelException", "diff": ["-\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39aa14712079e8f64787ec1d88258a62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "eb727711bfbefbe06ad25a796b42d61ffab45eca", "commitAfterChange": "c4ce580cb0d1d41b788a7611bd30d4cf0eba4f86", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\t\t\t    scope.problemReporter().unsafeRawAssignment(this.initialization, initializationType, variableType);", "+\t\t\t\t\t\t\t    scope.problemReporter().unsafeRawConversion(this.initialization, initializationType, variableType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39b7ebe42683c24ffc8053d352ec5c9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DebugAttributeTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn setupSuite(testClass());", "+\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39b8f8b6f3f11e4b2c26d6e2c6d510e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  public void test041() throws JavaModelException", "signatureAfterChange": "  public void test041() throws JavaModelException", "diff": ["-\t\t\"FIELD[FIELD_REF]{FIELD, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, I, FIELD, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"FIELD[FIELD_REF]{FIELD, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, I, FIELD, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39cb588319fd71fe23b92fe009ec0d3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefFieldErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefFieldErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d244bf3049549c5d41e8a34343462c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r \r \tpublic final ReferenceBinding getJavaLangObject()", "signatureAfterChange": "\r \r \tpublic final ReferenceBinding getJavaLangObject()", "diff": ["-\t\tcompilationUnitScope().recordReference(JAVA_LANG_OBJECT);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(JAVA_LANG_OBJECT);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39d311f73e492580683d416c40280601", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/LineBreaksPreparator.java", "commitBeforeChange": "2e56c16c054ee89ad0380a5a606694122f7187a1", "commitAfterChange": "9120b6c49a4b36e25b20147789ffde03aca85f97", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tprivate void handleBracedCode(ASTNode node, ASTNode nodeBeforeOpenBrace, String bracePosition, boolean indentBody, \t\t\tboolean newLineInEmpty)", "signatureAfterChange": "  \tprivate void handleBracedCode(ASTNode node, ASTNode nodeBeforeOpenBrace, String bracePosition, boolean indentBody, \t\t\tboolean newLineInEmpty)", "diff": ["-\t\thandleEmptyLinesIndentation(openBraceIndex);", "+\t\taddEmptyLineTokenAfter(openBraceIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39e35f4cffb662ec6ea8859b56adfb54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementRequestor.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void setCanceled(boolean b)", "signatureAfterChange": " public void setCanceled(boolean b)", "diff": ["-\tfCanceled= b;", "+\tcanceled= b;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39e97bc49d08f948ac38822e11975a17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "c986b0f978be08ca5c6279c4e65ad1a7f4c62b60", "commitAfterChange": "be7acf5c57ef3c4a15433f3f4f0191da4eed3774", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "diff": ["-\t\t\tpostIncrement.assignmentImplicitConversion);", "+\t\t\tpostIncrement.preAssignImplicitConversion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39ead62c41266499b0e450b428f03daa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "3c289b9a951cfd3e36c9387c73b3893fba2c0158", "commitAfterChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "diff": ["-\t\t\tif (detectInheritedMethodClash(originalInherited, otherOriginal))", "+\t\t\tif (detectInheritedNameClash(originalInherited, otherOriginal))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39f320685e79dfc18024514b67f2d5c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "13243a5d10e37b2eb5c996e3858760c226a8e1be", "commitAfterChange": "4e01625fc9463b8a9ea7e2eaafb1c4a96e86f28c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \t\r \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "signatureAfterChange": "\r \t\r \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "diff": ["-\t\tTypeDeclaration typeDeclaration = converter.buildCompilationUnit(type, compilationUnit, compilationResult, problemReporter);\r", "+\t\tTypeDeclaration typeDeclaration = converter.buildTypeDeclaration(type, compilationUnit, compilationResult, problemReporter);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39faf2e8f3b4feeb86912bd3da980228", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  \tprivate void rewriteExtraDimensions(int oldDim, int newDim, int pos, TextEditGroup editGroup)", "signatureAfterChange": "  \tprivate void rewriteExtraDimensions(int oldDim, int newDim, int pos, TextEditGroup editGroup)", "diff": ["-\t\t\t\t\tgetScanner().readToToken(ITerminalSymbols.TokenNameRBRACKET);", "+\t\t\t\t\tgetScanner().readToToken(TerminalTokens.TokenNameRBRACKET);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a1bb5ac26634082762a4f30529d896a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "a56f84836e0f96de074a6fe3e3932aaf605d0af8", "commitAfterChange": "9aec331a3cb23a914069fc1557801004166474ea", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test011_problem_categories()", "signatureAfterChange": " public void test011_problem_categories()", "diff": ["-\t\texpectedProblemAttributes.put(\"UnusedObjectAllocation\", new ProblemAttributes(CategorizedProblem.CAT_UNNECESSARY_CODE));", "+\t\texpectedProblemAttributes.put(\"UnusedObjectAllocation\", new ProblemAttributes(CategorizedProblem.CAT_POTENTIAL_PROGRAMMING_PROBLEM));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a1d562f11a85f333b2e9e8646949a43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elements/Java8ElementProcessor.java", "commitBeforeChange": "72dcd4b854d317f3c3f9226ee2c9a6583e0ff5db", "commitAfterChange": "a2380c5dc7487191ba2f073fdb6868b729cb0c57", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testSE8Specifics()", "signatureAfterChange": "  \tpublic void testSE8Specifics()", "diff": ["-\t\tAnnotation[] annots = typeMirror.getAnnotationsByType(Type.class);", "+\t\tType[] annots = typeMirror.getAnnotationsByType(Type.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a1e376c859aaebdf8b66c83fcfd5832", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "5ecdad70bb6e2e1bbd5c5ec539acc885a5698c4e", "commitAfterChange": "7f8c41fdd4e487762406a2cb6aaa3aa1d260201c", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tprotected IProject createLibrary( \t\t\tIJavaProject javaProject, \t\t\tString jarName, \t\t\tString sourceZipName, \t\t\tString[] pathAndContents, \t\t\tString[] nonJavaResources, \t\t\tString compliance, \t\t\tMap options) throws IOException, CoreException", "signatureAfterChange": "  \tprotected IProject createLibrary( \t\t\tIJavaProject javaProject, \t\t\tString jarName, \t\t\tString sourceZipName, \t\t\tString[] pathAndContents, \t\t\tString[] nonJavaResources, \t\t\tString compliance, \t\t\tMap options) throws IOException, CoreException", "diff": ["-\t\tString[] claspath = get15LibraryIfNeeded(compliance);", "+\t\tString[] claspath = getJCL15PlusLibraryIfNeeded(compliance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a2c383508b79a882296d46445835e0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  public void test035() throws JavaModelException", "signatureAfterChange": "  public void test035() throws JavaModelException", "diff": ["-\t\t\"BasicTestTypesSecondary[TYPE_REF]{BasicTestTypesSecondary, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypesSecondary;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"BasicTestTypesSecondary[TYPE_REF]{BasicTestTypesSecondary, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypesSecondary;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a3f78388fad50ee71407aa0f07d106b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r protected boolean generateInfos(\r \tOpenableElementInfo info,\r \tIProgressMonitor pm,\r \tHashtable newElements,\r \tIResource underlyingResource)\r \tthrows JavaModelException", "signatureAfterChange": "\r protected boolean generateInfos(\r \tOpenableElementInfo info,\r \tIProgressMonitor pm,\r \tMap newElements,\r \tIResource underlyingResource)\r \tthrows JavaModelException", "diff": ["-\tHashtable newElements,\r", "+\tMap newElements,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a494fc7ffcd33a766ac7405fd831baf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "c660a0e6a2551567fa3f92ffe31ef9b52fdec6cc", "commitAfterChange": "42bd9b01a3f5cafa3c20186dd8b7608f467f1611", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic PrimitiveTypeImpl getPrimitiveType(TypeKind kind)", "signatureAfterChange": " \tpublic PrimitiveTypeImpl getPrimitiveType(TypeKind kind)", "diff": ["-\t\t\tthrow new IllegalStateException();", "+\t\t\tthrow new IllegalArgumentException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a499e972625d8bdfd1927c90461ecdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 374, "methodNumberAfterChange": 374, "signatureBeforeChange": " public void parse(ConstructorDeclaration cd, CompilationUnitDeclaration unit, boolean recordLineSeparator)", "signatureAfterChange": " public void parse(ConstructorDeclaration cd, CompilationUnitDeclaration unit, boolean recordLineSeparator)", "diff": ["-\t\t\tcd.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\t\tcd.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a62743bafc9da327df65c8428529497", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "d504c33cb53fd701eee6eebd11f7e3631ddea7fc", "commitAfterChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void waitForAutoBuild()", "signatureAfterChange": " \tpublic void waitForAutoBuild()", "diff": ["-\t\t\t\tPlatform.getJobManager().join(ResourcesPlugin.FAMILY_AUTO_BUILD, null);", "+\t\t\t\tJob.getJobManager().join(ResourcesPlugin.FAMILY_AUTO_BUILD, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a68a8c644564287a7c9e856773ef678", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic static ICompilationUnit[] getWorkingCopies(WorkingCopyOwner owner)", "signatureAfterChange": " \tpublic static ICompilationUnit[] getWorkingCopies(WorkingCopyOwner owner)", "diff": ["-\t\tif (result == null) return JavaModelManager.NoWorkingCopy;", "+\t\tif (result == null) return JavaModelManager.NO_WORKING_COPY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a69dcc805cde49c2b8177da203accee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "9a76fb8f9434ae4b71dc267e686b050759ff3536", "commitAfterChange": "e5d54da7cf77d6614acfbbcede23df9b9dad68f9", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public void parseTypeMemberDeclarations( \tchar[] contents,  \tint start,  \tint end)", "signatureAfterChange": "  public void parseTypeMemberDeclarations( \tchar[] contents,  \tint start,  \tint end)", "diff": ["-\t\tscanner.toDoTag = null;", "+\t\tscanner.taskTags = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a72225c1f02dd04cef458d6d2371006", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void test036() throws JavaModelException", "signatureAfterChange": "  public void test036() throws JavaModelException", "diff": ["-\t\t\"foo[METHOD_REF]{foo(), Ljavadoc.methods.tags.OtherTypes;, ()V, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[METHOD_REF]{foo(), Ljavadoc.methods.tags.OtherTypes;, ()V, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a732c4f46541496184fa3be693c06b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateElementInCUOperation.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected CompilationUnit parse(ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " \tprotected CompilationUnit parse(ICompilationUnit cu) throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS4);", "+\t\tASTParser parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a77ccc52212499bff7f8ebc470ec035", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public LocalTypeBinding(ClassScope scope, SourceTypeBinding enclosingType)", "signatureAfterChange": "  public LocalTypeBinding(ClassScope scope, SourceTypeBinding enclosingType)", "diff": ["-\tif (this.sourceName == AnonymousLocalTypeDeclaration.ANONYMOUS_EMPTY_NAME)", "+\tif (this.sourceName == TypeDeclaration.ANONYMOUS_EMPTY_NAME)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3aae58f2ecc862fa427185c95c535ee9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \tprivate void findKeywords(char[] keyword, char[][] choices, Scope scope)", "signatureAfterChange": "\r \tprivate void findKeywords(char[] keyword, char[][] choices, Scope scope)", "diff": ["-\t\t\t\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\t\t\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad482fad7833b83796104f4dbef39bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "76a2ec884825e9edb380555c61500f23750ece32", "commitAfterChange": "0dc9f4a7cc769fd0c2e397d6cc32c352b61f03b4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic static long warningTokenToIrritant(String warningToken)", "signatureAfterChange": " \tpublic static long warningTokenToIrritant(String warningToken)", "diff": ["-\t\t\t\t\treturn UnusedLocalVariable | UnusedArgument | UnusedPrivateMember | UnusedDeclaredThrownException | UnusedLabel | UnusedImport | UnusedTypeArgumentsForMethodInvocation;", "+\t\t\t\t\treturn UnusedLocalVariable | UnusedArgument | UnusedPrivateMember | UnusedDeclaredThrownException | UnusedLabel | UnusedImport | UnusedTypeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ae778d85054dd3755a29500621f6030", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void decodeIndexKey(char[] key)", "signatureAfterChange": " public void decodeIndexKey(char[] key)", "diff": ["-\tthis.classOrInterface = key[key.length - 1];", "+\tthis.typeSuffix = key[key.length - 1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3af5000f2bdabff166987269f72aeb15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_4.java", "commitBeforeChange": "306e7b103a906df37630519d508932b224bba2de", "commitAfterChange": "49d3c15c35a4bc8bd86c8e6e22822fa38dc362fd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected Map getCompilerOptions()", "signatureAfterChange": " protected Map getCompilerOptions()", "diff": ["-\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);\t", "+\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b01c587670401277e408511a692f263", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tvoid endVisit(AnnotationMessageSend messageSend, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(JavadocMessageSend messageSend, BlockScope scope);", "diff": ["-\tvoid endVisit(AnnotationFieldReference fieldRef, BlockScope scope);", "-\tvoid endVisit(AnnotationMessageSend messageSend, BlockScope scope);", "+\tvoid endVisit(JavadocFieldReference fieldRef, BlockScope scope);", "+\tvoid endVisit(JavadocMessageSend messageSend, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b02dc31dcf2b125e69ed7a94f87b261", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testInvalidTagsClassDefaults()", "signatureAfterChange": " \tpublic void testInvalidTagsClassDefaults()", "diff": ["-\t\trunConformTest(InvalidReferencesClassJavadocComments);", "+\t\trunConformTest(CLASSES_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b060d8b3a52792f49fcc67135d198be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void endVisit(NumberLiteral node)", "signatureAfterChange": " \tpublic void endVisit(EnumDeclaration node)", "diff": ["+\t */", "+\tpublic void endVisit(EnumDeclaration node) {", "+\t\t// default implementation: do nothing", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b0cb9ba44b47bea7d5531088c324d7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchSet.java", "commitBeforeChange": "3334e44255d4ee3f5cec1b83d0e0822fcc4d85ec", "commitAfterChange": "cbe1b49811f38e096bb3a381dad55d59c9225059", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " private void reportMatching(FieldDeclaration field, IJavaElement parent, TypeDeclaration type) throws CoreException", "signatureAfterChange": " private void reportMatching(FieldDeclaration field, IJavaElement parent, TypeDeclaration type) throws CoreException", "diff": ["-\t\t\tfield.traverse(localDeclarationVisitor, (BlockScope)null);", "+\t\t\tfield.traverse(localDeclarationVisitor, (MethodScope)null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b196ce341aaec5a427938e31e9652c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationStatement node)", "signatureAfterChange": " \tpublic boolean visit(TypeMethodReference node)", "diff": ["+\t */", "+\tpublic boolean visit(TypeMethodReference node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b2117c0054fce51dc4ab9dcb2af5713", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Case.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding testTb, \t\tSwitchStatement switchStatement)", "signatureAfterChange": "  \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding testTb, \t\tSwitchStatement switchStatement)", "diff": ["-\t\tif (scope.areTypesCompatible(caseTb, testTb))", "+\t\tif (Scope.areTypesCompatible(caseTb, testTb))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b2bf92a6fee7e79f637eea434a7dd54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "diff": ["-\tif ((type.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\tif ((type.bits & ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b71015ae723ff4976e3acaa849a93b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "0d848314704a98a37067259d3b0518973aafccb8", "commitAfterChange": "55cb4cf73395e960e1efe45d353b160e1b4e5127", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\t public void searchDeclarationsOfAccessedFields(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": "\t public void searchDeclarationsOfAccessedFields(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\t\tMatchLocator locator = new MatchLocator(", "+\t\tMatchLocator locator = new MatchLocator2("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b7a7757b52af56e6559471faec558b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testAnnotations2() throws JavaModelException", "signatureAfterChange": " public void testAnnotations2() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b89a9a7aa7ef5e1884830ed749f41ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "e5bce80011e3833bbea45afb8cd4fb116b193fc5", "commitAfterChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tsynchronized IPackageBinding resolvePackage(PackageDeclaration pkg)", "signatureAfterChange": " \tsynchronized IPackageBinding resolvePackage(PackageDeclaration pkg)", "diff": ["-\t\t} catch (AbortCompilation e) {", "+\t\t} catch (RuntimeException e) {", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=63550", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=64299"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b8c306ecd6d9180bb3071e376901299", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/RequestorWrapper.java", "commitBeforeChange": "5c72ddaa5e79d3bcf534f5780ca88a7a97636e7a", "commitAfterChange": "488a4d6e7cacdc0e333c16a8fdbbfb759cc631cd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void acceptProblem(CategorizedProblem problem, char[] fragmentSource, int fragmentKind)", "signatureAfterChange": " public void acceptProblem(CategorizedProblem problem, char[] fragmentSource, int fragmentKind)", "diff": ["-\t\tmarker.setAttribute(IMarker.GENERATED_BY, JavaBuilder.GENERATED_BY);", "+\t\tmarker.setAttribute(IMarker.GENERATED_BY, JavaBuilder.SOURCE_ID);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ba1367f8b856942bf6d1842d3ae8a20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationValueImpl.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic IResource getResource()", "signatureAfterChange": " \t \tpublic IFile getResource()", "diff": ["-\tpublic IResource getResource()", "+\tpublic IFile getResource()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bc6d4e87aa761ad98efc0c6c4a990b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic final boolean needClassInitMethod()", "signatureAfterChange": " \tpublic final boolean needClassInitMethod()", "diff": ["-\t\tif ((this.bits & AddAssertionMASK) != 0)", "+\t\tif ((this.bits & ContainsAssertion) != 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be1e3716c92b7c1d765182a95ec3d40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "     public void close()", "signatureAfterChange": "     public void close()", "diff": ["-    \t_sources = null;", "+    \t_units = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3be77f8b497ca0eddbc361b9ea1c6cdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void endVisit(SimpleName node)", "signatureAfterChange": " \tpublic void endVisit(MethodRefParameter node)", "diff": ["+\t */", "+\tpublic void endVisit(MethodRefParameter node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3beed293c34591e07a51746df68cc692", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "94a425e221148886c840b4d545bf87183980be4b", "commitAfterChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tprivate IPath externalPath(IResource res)", "signatureAfterChange": "  \tprivate IPath externalPath(IResource res)", "diff": ["-\t\tif (ExternalFoldersManager.isExternal(resourcePath))", "+\t\tif (ExternalFoldersManager.isInternalPathForExternalFolder(resourcePath))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bf1a2a89b7ae781fb2e246177b225d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethod(MethodBinding targetMethod, boolean isSuperAccess)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bfa400ba71e897aa670a5f113e5228f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "b1550dd2712fa67457f8aad267ef332c51c0bc40", "commitAfterChange": "eb526c834e2e124ecf47faed8a0e145587d3b94d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void setupConverterJCL() throws IOException", "signatureAfterChange": " \tpublic void setupConverterJCL() throws IOException", "diff": ["-\t\tString resourceJCLDir = getRootDirectoryName() + separator + \"JCL\";", "+\t\tString resourceJCLDir = getPluginDirectoryPath() + separator + \"JCL\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bfaa331cf4ff2608e3e722532765069", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Map<AnnotationTypeElementDeclaration, AnnotationValue> getElementValues()", "signatureAfterChange": "      public Map<AnnotationTypeElementDeclaration, AnnotationValue> getElementValues()", "diff": ["-                 if( mirrorDecl != null && mirrorDecl.kind() == EclipseMirrorImpl.MirrorKind.ANNOTATION_ELEMENT  )", "+                 if( mirrorDecl != null && mirrorDecl.kind() == EclipseMirrorObject.MirrorKind.ANNOTATION_ELEMENT  )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c0bfcdec08404fd69ea058c47f7dbde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "9033b38dbde8d5f7ad2f8e95220a29f0a229ea8f", "commitAfterChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void setComponentType(Type componentType)", "signatureAfterChange": " \tpublic void setComponentType(Type componentType)", "diff": ["-\t\tinternalSetComponentType(componentType, COMPONENT_TYPE_PROPERTY);", "+\t\tinternalSetType(componentType, COMPONENT_TYPE_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c0d5b111bbd301549c461c06e50d6d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "signatureAfterChange": "  \tpublic void setAssertionSupport(FieldBinding assertionSyntheticFieldBinding, boolean needClassLiteralField)", "diff": ["-\t// 1.4 feature", "-\t\t\t\tsourceType.addSyntheticField(sourceType, scope);", "+\t\t\t\tsourceType.addSyntheticFieldForClassLiteral(sourceType, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c1972e13c95c6c72830ae13ad23bdfe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "6f02ff89bd237cb51746120df758993eba407273", "commitAfterChange": "66f427e04d93bd85a2e18dda798afd4b18637e27", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic IBuffer createBuffer(IOpenable owner)", "signatureAfterChange": " \t\tpublic IBuffer createBuffer(IOpenable owner)", "diff": ["-\t\t\treturn new Buffer(owner);", "+\t\t\treturn new TestBuffer(owner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c45d51b98e916363c8b293888c022d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic boolean visit(NormalAnnotation annotation, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation annotation, ClassScope scope)", "diff": ["-\tpublic boolean visit(NormalAnnotation annotation, CompilationUnitScope scope) {", "+\tpublic boolean visit(NormalAnnotation annotation, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c465be819f3fe7f7dc8ffd72cad6ce0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void propagateInnerEmulationForAllLocalTypes()", "signatureAfterChange": " \tpublic void propagateInnerEmulationForAllLocalTypes()", "diff": ["-\t\t\tif ((localType.scope.referenceType().bits & IsReachableMASK) != 0) {", "+\t\t\tif ((localType.scope.referenceType().bits & IsReachable) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c531782be567046080cabad970ef363", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void reportResult( \t\t\tICompilationParticipantResult curResult, \t\t\tSet<IFile> lastGeneratedFiles, \t\t\tSet<IFile> generatedFiles, \t\t\tSet<IFile> modifiedGeneratedFiles, \t\t\tList<? extends CategorizedProblem> problems, \t\t\tSet<String> deps, \t\t\tGeneratedFileManager gfm,  \t\t\tProcessorEnvImpl processorEnv)", "signatureAfterChange": " \tprivate void reportResult( \t\t\tBuildContext curResult, \t\t\tSet<IFile> lastGeneratedFiles, \t\t\tSet<IFile> generatedFiles, \t\t\tSet<IFile> modifiedGeneratedFiles, \t\t\tList<? extends CategorizedProblem> problems, \t\t\tSet<String> deps, \t\t\tGeneratedFileManager gfm,  \t\t\tProcessorEnvImpl processorEnv)", "diff": ["-\t\t\tICompilationParticipantResult curResult,", "+\t\t\tBuildContext curResult,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c7582a44d3c66225b9d4d26d5184360", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "487518d242da0a7f63289dd927851dff16ea9f7a", "commitAfterChange": "050a9c6e48eb0f6afd9130b84b06f0bc9eaab8cf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected void getHandleMemento(StringBuffer buff)", "signatureAfterChange": " protected void getHandleMemento(StringBuffer buff)", "diff": ["-\tIResource underlyingResource = resource();", "+\tIResource underlyingResource = getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c7949f0dcef9cdbc782759d0d37d1ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void manageSyntheticAccessIfNecessary( \t\t\tBlockScope currentScope, \t\t\tFieldBinding fieldBinding, \t\t\tTypeBinding lastReceiverType, \t\t\tint index, \t\t\tFlowInfo flowInfo)", "signatureAfterChange": " \tpublic void manageSyntheticAccessIfNecessary( \t\t\tBlockScope currentScope, \t\t\tFieldBinding fieldBinding, \t\t\tTypeBinding lastReceiverType, \t\t\tint index, \t\t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t\t&& fieldBinding.declaringClass.id != T_Object)", "+\t\t\t\t\t&& fieldBinding.declaringClass.id != T_JavaLangObject)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c890869235bc5f970f54196a197a82f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " protected void consumeBlock()", "signatureAfterChange": " protected void consumeBlock()", "diff": ["-\t\t\tblock.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\t\tblock.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c8fd1e02cd2d3cbc94add1f98fb8284", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "a3e63b72d2efd2058d202d3e2711391afc827fec", "commitAfterChange": "f0131d199789fbf75036ba10803faed4ef08b399", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic static char[] removeVariablePrefixAndSuffix( \t\t\tint variableKind, \t\t\tIJavaProject javaProject, \t\t\tchar[] name)", "signatureAfterChange": " \t \tpublic static char[] removeVariablePrefixAndSuffix( \t\t\tint variableKind, \t\t\tIJavaProject javaProject, \t\t\tchar[] name)", "diff": ["-\t\t\tcase VK_CONSTANT_FIELD:", "+\t\t\tcase VK_STATIC_FINAL_FIELD:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ca9c74cf79d0d5f8bf543ad9b758d46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t   \tpublic void resolve()", "signatureAfterChange": " \t   \tpublic void resolve()", "diff": ["-\t\t\tif ((this.bits & UndocumentedEmptyBlockMASK) != 0) {", "+\t\t\tif ((this.bits & UndocumentedEmptyBlock) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cc81fe4f35c5a6ee912c3c61f115234", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefFieldErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefFieldErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cd6aab03dd288e55289cb783b832e88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/SampleASTs.java", "commitBeforeChange": "4ec8463782f86806757a76ab2d360d5012825932", "commitAfterChange": "f7bc2ee5d62baf64b6f044f322b40cdaa75e5dcc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static ASTNode oneOfEach(AST target)", "signatureAfterChange": " \tpublic static ASTNode oneOfEach(AST target)", "diff": ["-\t\t\ted.bodyDeclarations().add(ec);\t", "+\t\t\ted.enumConstants().add(ec);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cd85424855e7bb4a89d6ce5d5d4ef0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "3c97a12fe797bc8f1a4e22eb2cfe11932a52f122", "commitAfterChange": "cb3bfb0879489be8fed32e037d62f37c21d37c6b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " void checkTypeVariableMethods()", "signatureAfterChange": " void checkTypeVariableMethods()", "diff": ["-\t\t\t\t\tif (otherInheritedMethod != null && doesMethodOverride(inheritedMethod, otherInheritedMethod)) {", "+\t\t\t\t\tif (otherInheritedMethod != null && doesSubstituteMethodOverride(inheritedMethod, otherInheritedMethod)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ce34ecf102ae01f2abf77f3c7361cf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/EclipseRoundCompleteEvent.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t\tState(ProcessorEnvImpl env)", "signatureAfterChange": " \t\tState(BuildEnv env)", "diff": ["-\t\tprivate final ProcessorEnvImpl _env;", "-\t\tState(ProcessorEnvImpl env){ _env = env; }", "+\t\tprivate final BuildEnv _env;", "+\t\tState(BuildEnv env){ _env = env; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d0edf21cc3a874c190f846545eca21b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "02e41bd22396d523c7a0e7b774bb557781eb6970", "commitAfterChange": "4e3cdd53887918496e5ba73e90ca2f99858ae83c", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": "\r protected void consumeStatementSwitch()", "signatureAfterChange": "\r protected void consumeStatementSwitch()", "diff": ["-\ts.sourceEnd = endPosition;\r", "+\ts.sourceEnd = endStatementPosition;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d1ca7cacd171a5256b5403f8c5d3206", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected int resolveLevel(NameReference nameRef)", "signatureAfterChange": " protected int resolveLevel(NameReference nameRef)", "diff": ["-\t\t\tbinding = ((ProblemReferenceBinding) binding).original;", "+\t\t\tbinding = ((ProblemReferenceBinding) binding).closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d1ef1f3e9b2d280b143f367c5b53b1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate Initializer convert(InitializerElementInfo initializerInfo, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate Initializer convert(InitializerElementInfo initializerInfo, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\t\tif ((localType.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\t\t\t\tif ((localType.bits & ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d3485d8e6e61310a42dbe5338130b34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MarkerAnnotation.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope) {", "+\tpublic void traverse(ASTVisitor visitor, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d38ee44b9a65a5a92ca5111f6a1bfbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ASTBasedMethodDeclarationImpl.java", "commitBeforeChange": "29a8044fc706583901ff89364d428dff04f6a567", "commitAfterChange": "5a5d0f43790375863ed059f546377b6a1dca079c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t     public TypeMirror getReturnType()", "signatureAfterChange": " \t     public TypeMirror getReturnType()", "diff": ["-            if(retType == null )", "+            if(type == null )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d67298b617c770d0565ae097d70e458", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testExternalJarBinaryFieldMemento() throws JavaModelException", "signatureAfterChange": " public void testExternalJarBinaryFieldMemento() throws JavaModelException", "diff": ["-\t\t\"=P/\" + getExternalJCLPath() + \"<p(X.class[X^field\",", "+\t\t\"=P/\"+ getEscapedExternalJCLPath() + \"<p(X.class[X^field\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d7a0f3ce94d1fd64aba3dfd75a49fcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "e6029c8b1adfe1296ee554ed42f00e5a663cecbf", "commitAfterChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " \tpublic void endVisit(ParenthesizedExpression node)", "signatureAfterChange": " \tpublic void endVisit(PackageQualifiedType node)", "diff": ["+\t */", "+\tpublic void endVisit(PackageQualifiedType node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d9fc33bac596639338f181b95a6e944", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public void testDiscardWorkingCopy1() throws CoreException", "signatureAfterChange": " public void testDiscardWorkingCopy1() throws CoreException", "diff": ["-\t\tassertDeltas(", "+\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3da0d0f0ce977c3fb5db6e0551e84296", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration parse(char[] source, NodeSearcher nodeSearcher, Map settings)", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration parse(char[] source, NodeSearcher nodeSearcher, Map settings)", "diff": ["-\t\tParser parser = new DOMParser(", "+\t\tParser parser = new CommentRecorderParser("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3daeca46cff8e56a20f152f88f209e94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "abd7eb8067d05a106270885f602de8a64d08c556", "commitAfterChange": "51349b07c2a6f70ec333ca325c91564e571e10b7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchExpressionType, \t\tSwitchStatement switchStatement)", "signatureAfterChange": " \tpublic Constant resolveCase( \t\tBlockScope scope, \t\tTypeBinding switchExpressionType, \t\tSwitchStatement switchStatement)", "diff": ["-\t    scope.switchCase = this; // record entering in a switch case block", "+\t    scope.enclosingCase = this; // record entering in a switch case block"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3def79d0ced80bcd64edcd561b6cb5e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "24134b187b46ea16212a45107324227f46ba3e4a", "commitAfterChange": "496121d0ad975842fb45544aac592b8195531ce7", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tpublic void printArrayQualifiedReference(int numberOfTokens, int sourceEnd)", "signatureAfterChange": "  \tpublic void printArrayQualifiedReference(int numberOfTokens, int sourceEnd)", "diff": ["-\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tthis.printLineComment(this.scanner.getRawTokenSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3df66515df79dc32dc91d6830f26d8df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\tswitch (scope.referenceType().getKind()) {", "+\t\tswitch (scope.referenceType().kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dfbf2e1c2dab717782ba5dacdff985f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic boolean visit(ArrayAccess node)", "signatureAfterChange": " \tpublic boolean visit(AnnotationTypeMemberDeclaration node)", "diff": ["+\t */", "+\tpublic boolean visit(AnnotationTypeMemberDeclaration node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e0e393e160d21f9b12862178fb38521", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompletionRequestorWrapper.java", "commitBeforeChange": "66cd4232d0ab1e96e3a07f02c56b8bad9d7784af", "commitAfterChange": "c4f302586af8fb051e0ee3dd72d43fa433091810", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \t\r public CompletionRequestorWrapper(ICodeCompletionRequestor clientRequestor, INameLookup nameLookup)", "signatureAfterChange": "\r \t\r public CompletionRequestorWrapper(ICodeCompletionRequestor clientRequestor, NameLookup nameLookup)", "diff": ["-public CompletionRequestorWrapper(ICodeCompletionRequestor clientRequestor, INameLookup nameLookup){\r", "+public CompletionRequestorWrapper(ICodeCompletionRequestor clientRequestor, NameLookup nameLookup){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e1b43055dc093eb0e807ca9284b5a57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "95f59caaf27a775333076cb1bc1d967e2796cdb3", "commitAfterChange": "7e41439f7b91a880bb131d143b9faf947232eb35", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic char[] shortReadableName()", "signatureAfterChange": " \tpublic char[] shortReadableName()", "diff": ["-\t\t\tshortReadableName = type().sourceName;", "+\t\t\tshortReadableName = actualType().sourceName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e1bcb451fc3942ed1e2d37dea7754ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "commitAfterChange": "91510ee1ea5206403f95c9b316aaa14af70c8d8e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\t\tacceptChildren(visitor, this.typeParameters);", "+\t\t\t\tacceptChildren(visitor, this.typeArguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e203c8d65667e6c1b461a8b6cf8c1b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 361, "methodNumberAfterChange": 361, "signatureBeforeChange": " \tpublic void test341()", "signatureAfterChange": " \tpublic void test341()", "diff": ["-\t\tpreferences.insert_space_after_assignment_operators = false;", "+\t\tpreferences.insert_space_after_assignment_operator = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e22cd9fbf75df46480e4da97a02e6cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tIBinding resolveImport(ImportDeclaration importDeclaration)", "signatureAfterChange": " \tIBinding resolveImport(ImportDeclaration importDeclaration)", "diff": ["-\t\t\t\t\tif (binding.bindingType() == Binding.PACKAGE) {", "+\t\t\t\t\tif (binding.bindingType() == BindingIds.PACKAGE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e2d2e377441a816e9f507ed379b0c31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapExecutor.java", "commitBeforeChange": "2073ae07201f3b4750a106d0cadf90473710a63d", "commitAfterChange": "10545bbf89db4e21cbdfaf0260ea872d78aa91e9", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic void executeWraps()", "signatureAfterChange": "  \tpublic void executeWraps()", "diff": ["-\t\t\t\t} catch (WrapRestartException e) {", "+\t\t\t\t} catch (WrapRestartThrowable e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e2f25595c8b90903922836867418775", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/KeyKind.java", "commitBeforeChange": "fcb6b52dfb91300241dc1cd9c915f45219747f35", "commitAfterChange": "9d67e78041cfcf4ea8149504d41dd65a12494e92", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic BindingKeyParser newParser()", "signatureAfterChange": "  \tpublic BindingKeyParser newParser()", "diff": ["-\t\treturn new BindingKeyParser(this);", "+\t\treturn new KeyKind(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e301ca9933dea11a84136ed4a850b6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SingleTypeRequestor.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void reset()", "signatureAfterChange": " public void reset()", "diff": ["-\tfElement= null;", "+\telement= null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3199c654ff8273838d67f9db663374", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MovePackageFragmentRootOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void removeEntryFromClasspath(IPath rootPath, IJavaProject project) throws JavaModelException", "signatureAfterChange": " \tprotected void removeEntryFromClasspath(IPath rootPath, IJavaProject project) throws JavaModelException", "diff": ["-\t\t\tproject.setRawClasspath(newClasspath, fMonitor);", "+\t\t\tproject.setRawClasspath(newClasspath, progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e4a7b9e73715f891346541b10f5a548", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "e864d30567ba5eac714ba35046546cbeb9eaf23a", "commitAfterChange": "cf2cbc1072ba3a66cbb77453b4d17bba0c10739a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, Map packageFragments, ICompilationUnit[] workingCopies)", "signatureAfterChange": "  \tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, HashtableOfArrayToObject packageFragments, ICompilationUnit[] workingCopies)", "diff": ["-\tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, Map packageFragments, ICompilationUnit[] workingCopies) {", "+\tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, HashtableOfArrayToObject packageFragments, ICompilationUnit[] workingCopies) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e512d9b33682d2123a1423f1984555b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void testInvalidTagsMethodErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsMethodErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e7e764569a1aa002c3245549d58131e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteResourceElementsOperation.java", "commitBeforeChange": "a6fef21c9e13f6221e2bd4a641f94f6aff11ba0f", "commitAfterChange": "9f8a431bd6cb0d560063beb033552503212f9862", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private void deletePackageFragment(IPackageFragment frag) \tthrows JavaModelException", "signatureAfterChange": " private void deletePackageFragment(IPackageFragment frag) \tthrows JavaModelException", "diff": ["-\t\t\tif (file instanceof IFile && Util.isClassFileName(file.getFileExtension())) {", "+\t\t\tif (file instanceof IFile && Util.isClassFileName(file.getName())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e7f6bee83b528c56585336c185da9c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "ec455405a83bfb36b65a1594dcc37928d4b0bc3b", "commitAfterChange": "79b8d8f9507454c772f9092ea04ba032447d4b59", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void testNewWorkingCopy05() throws CoreException", "signatureAfterChange": " \tpublic void testNewWorkingCopy05() throws CoreException", "diff": ["-\t\tthis.workingCopy =  newWorkingCopy(", "+\t\tthis.workingCopy =  newExternalWorkingCopy("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e84276d28f95f416c610528441580b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "6ca82f1a54d472af29c424861c5280a8ebc7b028", "commitAfterChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void match(TypeDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(TypeDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "+\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ec80ebc3e7df46d32f9a6c99fb4b368", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestMixed.java", "commitBeforeChange": "6ee69a27bb90b4501869adce2a7020b0fadb9402", "commitAfterChange": "886d0f0c1c856616883aceae38186164d207f2a8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildSuite(javadocTestClass());", "+\t\treturn buildTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ed537f7322c0960c0d84486692ed8c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tpublic boolean visit(BreakStatement node)", "signatureAfterChange": " \tpublic boolean visit(BreakStatement node)", "diff": ["-\t\t\tint offset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNamebreak, node.getStartPosition());", "+\t\t\tint offset= getScanner().getTokenEndOffset(TerminalTokens.TokenNamebreak, node.getStartPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ed634e0a94b6c1b9927638b8a184634", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "7c5e971605e3df9f80c39caf6a5dabceeb49148b", "commitAfterChange": "ffe39da04df0f3a3dcc2e15c0353857438ce8e35", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected void adjustSourcePositionsForParent(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "signatureAfterChange": " \t \tprotected void adjustSourcePositionsForParent(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "diff": ["-\t\t\tif(this.scanner instanceof RecoveryScanner && ((RecoveryScanner)this.scanner).isFakeTokenInserted()) {", "+\t\t\tif(this.scanner instanceof RecoveryScanner && ((RecoveryScanner)this.scanner).isInsertedToken()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ef8f8bc3830c8378ef07de30b309a3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "e5f01975d99954b1483781c8c9c08a016b294102", "commitAfterChange": "6c19a02159d7dcaca8c603f73a96718172825002", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": "  void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-\t\tlong sourceLevel = this.environment.globalOptions.sourceLevel;", "+\t\tlong sourceLevel = this.environment.globalOptions.originalSourceLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f16f399183e4576cd829a9218c73b7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void classInstanceCreation(boolean alwaysQualified)", "signatureAfterChange": " protected void classInstanceCreation(boolean alwaysQualified)", "diff": ["-\t\t\t\t: CharOperation.concatWith(alloc.type.getTypeName(), '.'),", "+\t\t\t\t: CharOperation.concatWith(alloc.type.getParameterizedTypeName(), '.'),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f1954ff294b38ef9c4abdc93748729d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ClassInstanceCreation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tClassInstanceCreation (AST ast)", "signatureAfterChange": " \tClassInstanceCreation (AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f3cd4d27aeed2f9d3660fa329921fa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreatePackageFragmentOperation.java", "commitBeforeChange": "fda0d2ec1e24f98b48a39fc410a65aaa372375fb", "commitAfterChange": "a6fc8aa8054ff029d4a044b3364141f4551124c8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void executeOperation() throws JavaModelException", "signatureAfterChange": " protected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tif (!Util.isExcluded(subFolder, exclusionPatterns)) {", "+\t\t\tif (!Util.isExcluded(parentFolder, exclusionPatterns)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f4e45231cfaa37e845e78fdd3ec007d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore.java", "commitBeforeChange": "b36a137cc1f0fb3b34ff097a37fce4ecbf12fde7", "commitAfterChange": "8c1c24f11889e708a63d72ff98b6b9dc79890757", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tpublic void clear()", "signatureAfterChange": " \t \tpublic void clear()", "diff": ["-\t\tthis.events.clear();", "+\t\tthis.eventLookup.clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f52d0e01fa84c4fc0693a57daddd59a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathJar.java", "commitBeforeChange": "30961650a033c638f3a768401431bcd77f1a4058", "commitAfterChange": "7d1e8775d87112012e8a87b6995e3b0bfd71512c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void cleanup()", "signatureAfterChange": "  public void cleanup()", "diff": ["-\t\ttry { zipFile.close(); } catch(IOException e) {}", "+\t\ttry {", "+\t\t\tzipFile.close();", "+\t\t} catch(IOException e) { // ignore it", "+\t\t}", "-\tthis.packageCache = null;", "+\tthis.knownPackageNames = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f54d53f21e941444800950f6005e697", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "     public ReferenceBinding[] superInterfaces()", "signatureAfterChange": "     public ReferenceBinding[] superInterfaces()", "diff": ["-\t\t\tif (this.kind == Wildcard.EXTENDS) {", "+\t\t\tif (this.boundKind == Wildcard.EXTENDS) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f567e139a1d1a636ef4ace3588249f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void test026() throws JavaModelException", "signatureAfterChange": "  public void test026() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f58804fa1d1735ff20986c25151c4ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/SingleLineTestCase.java", "commitBeforeChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "commitAfterChange": "44afc4c52d7f4191b4ccf60a1e8a3e535e29bc3c", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void _test109581()", "signatureAfterChange": " \tpublic void _test109581()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_FORMAT, DefaultCodeFormatterConstants.TRUE);", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_FORMAT_LINE_COMMENT, DefaultCodeFormatterConstants.TRUE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f711a3c20893fab9e66687bc00282ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public void markPotentiallyUnknownBit(VariableBinding local)", "signatureAfterChange": "  public void markPotentiallyUnknownBit(LocalVariableBinding local)", "diff": ["-public void markPotentiallyUnknownBit(VariableBinding local) {", "+public void markPotentiallyUnknownBit(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f7e3143d9d6ac7dd79a6cb8cc7cb619", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e2648f8b5ccbba51146261db3c629f21ae240071", "commitAfterChange": "080819febe201917c6d39d485bf6b0507c29f0c4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void acceptPackage(char[] packageName)", "signatureAfterChange": " \tpublic void acceptPackage(char[] packageName)", "diff": ["-\t\trelevance += computeRelevanceForCaseMatching(token, packageName);", "+\t\trelevance += computeRelevanceForCaseMatching(completionToken, packageName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f8715d18f212f6eb5aea8e7db506ee3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/model/ElementsImpl.java", "commitBeforeChange": "70c7b91219f1abe7757608bdb335ee87fa26cb28", "commitAfterChange": "4f113d7aa945e602017e7829c71f3e73f6f0d8c6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ElementsImpl(BatchProcessingEnvImpl env)", "signatureAfterChange": " \t \tpublic ElementsImpl(BaseProcessingEnvImpl env)", "diff": ["-\tpublic ElementsImpl(BatchProcessingEnvImpl env) {", "+\tpublic ElementsImpl(BaseProcessingEnvImpl env) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fa3265fc35cc34fad61f325e6d72d2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " public void testSearchPatternValidMatchRule30()", "signatureAfterChange": " public void testSearchPatternValidMatchRule30()", "diff": ["-\t\tSearchPattern.R_CAMEL_CASE_MATCH);", "+\t\tSearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fa5bf086ebb83d700f277d560c059c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode( \tBlockScope currentScope, \tFlowContext flowContext, \tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode( \tBlockScope currentScope, \tFlowContext flowContext, \tFlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0) {", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc5edea9a2e2296fc7a54007bce7881", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\t\t\t\t\t&& fieldBinding.declaringClass.id != T_Object) // no change for Object fields (if there was any)", "+\t\t\t\t\t\t&& fieldBinding.declaringClass.id != T_JavaLangObject) // no change for Object fields (if there was any)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fd374e858895524384527b0803a04ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "030eb4fda54a6751c1b822374d11bd8e8163881c", "commitAfterChange": "ec1201be6eb9490fec9fdaa6f4ea5d677aacc407", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void addSyntheticSwitchTable(SyntheticMethodBinding methodBinding)", "signatureAfterChange": "  \tpublic void addSyntheticSwitchTable(SyntheticMethodBinding methodBinding)", "diff": ["-\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tint attributeNumber = generateMethodInfoAttributes(methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fd852a2ad2bbd45c612d04b081105e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "cb7e1f0df8a87f2b400ca058ed57dff2a93cd223", "commitAfterChange": "53732d4f0f41abb7968ca2914f7509fbca579ac0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\tthis.timer = true;", "+\t\t\t\tthis.timing = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fe724d6e375c0fd0686e2104e5f4c3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic void test088()", "signatureAfterChange": " \tpublic void test088()", "diff": ["-\t\tpreferences.format_guardian_clause_on_one_line = false;", "+\t\tpreferences.keep_guardian_clause_on_one_line = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fe99c886f4fb0117232b73f1ae27d13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "a4e360d6406fed9275bf933467b5e9a51a704eb6", "commitAfterChange": "7065da01531bf4c318c59206b62aa1503a948abe", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public void reconcile(boolean forceProblemDetection, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "  public void reconcile(boolean forceProblemDetection, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tCompilationUnitProblemFinder.resolve(this, problemRequestor, monitor);", "+\t\t\t\tCompilationUnitProblemFinder.process(this, problemRequestor, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fef7bc1ce2ce33cf14b240c27365261", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "8725686e4322c27855e28a436fd50d8fdf140d60", "commitAfterChange": "4a181894176f3a1eccc3e35147ddca845e353389", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\t\tthis.currentExclusionPatterns = ((ClasspathEntry)entry).fulExclusionPatternChars();", "+\t\t\t\t\t\tthis.currentExclusionPatterns = ((ClasspathEntry)entry).fullExclusionPatternChars();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ff069112ffd38d4885b54540e030e78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ffaf29707e9d510c4a840943996aad4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfObject.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic boolean containsKey(char[] key)", "signatureAfterChange": "  \tpublic boolean containsKey(char[] key)", "diff": ["-\t\t\tif (currentKey.length == keyLength", "-\t\t\t\t&& CharOperation.prefixEquals(currentKey, key))", "+\t\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ffe0d2171dbc6cc813f1bd4a5aeb95a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testGetImports() throws JavaModelException", "signatureAfterChange": " public void testGetImports() throws JavaModelException", "diff": ["-\tassertEquals(\"Source not correct\", ", "+\tassertSourceEquals(\"Source not correct\", "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "401891b2f46ae958cbca90edf99ecc1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r private Object[] computeNonJavaResources(JavaProject project)", "signatureAfterChange": "\r private Object[] computeNonJavaResources(JavaProject project)", "diff": ["-\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true);\r", "+\t\tIClasspathEntry[] classpath = project.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "401894c7f772aa2d7f951a5e146bbd90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/State.java", "commitBeforeChange": "125f2e11905eb2190c50776a296c49a5b3f7e6c1", "commitAfterChange": "863145815d2ab33e14e5ef57b45dd0358683dea5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected State(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected State(JavaBuilder javaBuilder)", "diff": ["-\tthis.references = new HashtableOfObject(13);\r", "+\tthis.references = new SimpleLookupTable(13);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4019526bed4d62bcc4201e474747f1a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tpublic void endVisit(SingleMemberAnnotation annotation, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic void endVisit(SingleMemberAnnotation annotation, ClassScope scope)", "diff": ["-\tpublic void endVisit(SingleMemberAnnotation annotation, CompilationUnitScope scope) {", "+\tpublic void endVisit(SingleMemberAnnotation annotation, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4022667c6e839968f57a2fdb3f8ad6f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "83a2204f43d5769852f95f1f04a920bd1bd4fe40", "commitAfterChange": "baa4e6c8e7705a2f9abe44b491821d7561903417", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\t\t\t\ttemp = new ProblemReferenceBinding(name, null, ProblemReasons.Ambiguous);", "+\t\t\t\t\t\t\t\t\ttemp = new ProblemReferenceBinding(name, type, ProblemReasons.Ambiguous);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40311e3f9d97677d7e344ac590f977f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tprivate void popUntilPrefixOf(IPath path)", "signatureAfterChange": " \tprivate void popUntilPrefixOf(IPath path)", "diff": ["-\t\t\t\tIResource currentElementResource = this.currentElement.getResource();", "+\t\t\t\tIResource currentElementResource = this.currentElement.resource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "405e3e75df6d64e25c660c41d7e7735c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "commitAfterChange": "495498c492866181dc63a6039b81ee18c37f454c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t\t \t\tvoid skipMethodSignature()", "signatureAfterChange": " \t\t \t\tvoid skipMethodSignature()", "diff": ["-\t\t\t\t\tcase '^':", "+\t\t\t\t\tcase C_THROWN:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "406d18cd496e387718fc71eec33ead1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NormalAnnotation.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope) {", "+\tpublic void traverse(ASTVisitor visitor, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40738f33a4aeaab7fb25870bcb629232", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject2() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject2() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4074eb4575d290e5555f478a56caa650", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \r \tprivate void findVariablesAndMethods(\r \t\tchar[] token,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "signatureAfterChange": "\r \r \tprivate void findVariablesAndMethods(\r \t\tchar[] token,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "diff": ["-\t\t\t\t\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\t\t\t\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407cf70f04071877bc2faf780722017b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\t\t|| scope.areTypesCompatible(initTb, tb))", "+\t\t\t\t\t\t|| Scope.areTypesCompatible(initTb, tb))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407e2a4e2ea07c01d56778032fbe0c02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "34b4972480c62fc99b17d4728db2648e98460b52", "commitAfterChange": "a234173ab4d645c8990c97cafa00ec82ce0a909f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static String[] warningOptionNames()", "signatureAfterChange": " \tpublic static String[] warningOptionNames()", "diff": ["-\t\t\tOPTION_NonNullIsDefault,", "+\t\t\tOPTION_ReportMissingNonNullByDefaultAnnotation,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "407fb2fb195c940bd23d699749655767", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationMirrorImpl.java", "commitBeforeChange": "72aa931453e3f2172c1e3a9834413fcb8210dc18", "commitAfterChange": "4a9fab23504f482fb4645ec189fabd0652bee495", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic DeclaredType getAnnotationType()", "signatureAfterChange": "  \tpublic DeclaredType getAnnotationType()", "diff": ["-\t\treturn _env.getFactory().newDeclaredType(annoType);", "+\t\treturn _env.getFactory().newAnnotationType(annoType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409d54d72df510db8dedc88740a6a5e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexSummary.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public int getBlockNum(int blockLocation)", "signatureAfterChange": "\r public int getBlockNum(int blockLocation)", "diff": ["-\treturn ((FirstWordInBlock) firstWordsInBlocks.elementAt(blockLocation)).blockNum;\r", "+\treturn ((FirstWordInBlock) firstWordsInBlocks.get(blockLocation)).blockNum;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "409e3e9c1fc403d77763f882aa98bd1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThrowStatement.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void resolve(BlockScope scope)", "signatureAfterChange": "  public void resolve(BlockScope scope)", "diff": ["-\t \t} else if (exceptionType.findSuperTypeErasingTo(TypeIds.T_JavaLangThrowable, true) == null) {", "+\t \t} else if (exceptionType.findSuperTypeOriginatingFrom(TypeIds.T_JavaLangThrowable, true) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40a7b4d417a15e8cc8221574d7286e31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/TypeConverter.java", "commitBeforeChange": "bb0550096faab0e4ba4877ad06be98ecc4f2a72a", "commitAfterChange": "ff69704e7873da2fd087fbac19e278c5d6c62ca3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate TypeReference[] decodeTypeArguments(char[] typeName, int length, int start, int end, boolean includeGenericsAnyway)", "signatureAfterChange": "  \tprivate TypeReference[] decodeTypeArguments(char[] typeName, int length, int start, int end, boolean includeGenericsAnyway)", "diff": ["-\t\t\tTypeReference argument = decodeType(typeName, length, start, end, includeGenericsAnyway);", "+\t\t\tTypeReference argument = decodeType2(typeName, length, start, end, includeGenericsAnyway);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40b96676fbf78943f1f6ae47e34552b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void add(IJavaElement element) throws JavaModelException", "signatureAfterChange": " public void add(IJavaElement element) throws JavaModelException", "diff": ["-\t\t\tthis.add((IJavaProject)element, includeMask, new HashSet(2));", "+\t\t\tthis.add((JavaProject)element, includeMask, new HashSet(2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40b96f94f4838418778cb376cf7e404f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public boolean isClass() throws JavaModelException", "signatureAfterChange": " public boolean isClass() throws JavaModelException", "diff": ["-\treturn info.getKind() == IGenericType.CLASS;", "+\treturn info.getKind() == IGenericType.CLASS_DECL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40c81e7a4ebacf7cb3d8696fd52a069b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "f8065ae134834f9481154dc34f90c12640c5c175", "commitAfterChange": "77c3ce15baae65ce09e64063026465c9791f8dea", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void addTypeReference(TypeBinding type)", "signatureAfterChange": "\r public void addTypeReference(TypeBinding type)", "diff": ["-\t\tif (!typeDependencies.contains(actualType))\r", "+\t\tif (!typeDependencies.containsIdentical(actualType))\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40d5fc93c966289d0488f79a81720385", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "b6eb3741928f7f60040cd62cb39c2031ea7f1375", "commitAfterChange": "045fcd6169ea322b1f182f37db0e04a62252f1e0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public IJavaModelStatus verify()", "signatureAfterChange": " public IJavaModelStatus verify()", "diff": ["-\t\t\tgenerateElementDOM();", "+\t\t\tdeprecatedGenerateElementDOM();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40ddd61e25fabee9e72fda21717babbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 243, "signatureBeforeChange": " public void testBug109695d() throws CoreException", "signatureAfterChange": " public void testBug109695d() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"IPS2\", SearchPattern.R_CAMELCASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"IPS2\", SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40f4d57d4e22baba440952c26c63cb89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testLineBreaksBetweenEmptyJavaDocTags1()", "signatureAfterChange": " \tpublic void testLineBreaksBetweenEmptyJavaDocTags1()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES, \"false\"); //$NON-NLS-1$", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_JAVADOC_COMMENT, \"false\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40fa204b9c3fb40bc02fd29837dc0070", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " public void iflt(Label lbl)", "signatureAfterChange": " public void iflt(BranchLabel lbl)", "diff": ["-public void iflt(Label lbl) {", "+public void iflt(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4117b7a7ac09812642bbfa0415e4c011", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate void runTest(String source, String expectedResult, DefaultCodeFormatter codeFormatter, int kind, int indentationLevel, boolean checkNull, int offset, int length)", "signatureAfterChange": "  \tprivate void runTest(String source, String expectedResult, CodeFormatter codeFormatter, int kind, int indentationLevel, boolean checkNull, int offset, int length)", "diff": ["-\tprivate void runTest(String source, String expectedResult, DefaultCodeFormatter codeFormatter, int kind, int indentationLevel, boolean checkNull, int offset, int length) {", "+\tprivate void runTest(String source, String expectedResult, CodeFormatter codeFormatter, int kind, int indentationLevel, boolean checkNull, int offset, int length) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41229f25136a3da832d139f0051ac467", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void testCodeCoverage() throws JavaModelException", "signatureAfterChange": " public void testCodeCoverage() throws JavaModelException", "diff": ["-\tthis.cu.destroy();", "+\tthis.cu.discardWorkingCopy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41369f19d7cf9906c35722ade56da831", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "8101ab5e0a0336012bb45b1966198ded493b22e4", "commitAfterChange": "bbab5540f6141654f88ccf247a378547f83d5cdb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void getAllAnnotationContexts(int targetType, LocalVariableBinding localVariable, List allAnnotationContexts)", "signatureAfterChange": " \tpublic void getAllAnnotationContexts(int targetType, LocalVariableBinding localVariable, List allAnnotationContexts)", "diff": ["-\t\tthis.traverse(collector, (BlockScope) null);", "+\t\tthis.traverseWithoutInitializer(collector, (BlockScope) null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41485684a8795fd2b49072eed0787b25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "0837505dca1013818965c0e94ca7440f88e3ef8f", "commitAfterChange": "d9fc7e2dbe551621f18e64eaef9012586406974b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic void initializeParser()", "signatureAfterChange": "  \tpublic void initializeParser()", "diff": ["-\t\tthis.parser = new CommentRecorderParser(this.problemReporter, this.options.parseLiteralExpressionsAsConstants);", "+\t\tthis.parser = new Parser(this.problemReporter, this.options.parseLiteralExpressionsAsConstants);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41713a12d98d3b07c2f5994d138541a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tprotected void initializeDefaultPluginPreferences()", "signatureAfterChange": " \tprotected void initializeDefaultPluginPreferences()", "diff": ["-\t\tMap codeFormatterOptionsMap = DefaultCodeFormatterConstants.getDefaultSettings(); // code formatter defaults", "+\t\tMap codeFormatterOptionsMap = DefaultCodeFormatterConstants.getJavaConventionsSettings(); // code formatter defaults"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4188a767b5d48d786b91ee6a75400c3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "signatureAfterChange": " \t \tpublic char[] computeUniqueKey(boolean withAccessFlags)", "diff": ["-        switch (this.kind) {", "+        switch (this.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4196c218b53c8631c814688aea28be85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "commitAfterChange": "831d96bc5763622ed503192c35bfd6688abedd96", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 254, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayArrayType()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayArrayType()", "diff": ["-\t\tnew ClassLiteralAccess(this.intStack[this.intPtr--], getTypeReference(this.intStack[this.intPtr--])));", "+\t\tnew ClassLiteralAccess(this.intStack[this.intPtr--], getUnannotatedTypeReference(this.intStack[this.intPtr--])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41a107413fa2bf23bbd5d0e9b78dae0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "1c367f9da4b67ddc705e012aa9c952ee4bdfc663", "commitAfterChange": "7974f4a5911052c39ead36f51d3952ab684e5130", "methodNumberBeforeChange": 203, "methodNumberAfterChange": 203, "signatureBeforeChange": " \tpublic void testTypeAnnotations11()", "signatureAfterChange": " \tpublic void testTypeAnnotations11()", "diff": ["-\t\tx2.annotations().add(this.ANO1);", "+\t\tx2.modifiers().add(this.ANO1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41ae30a9e20632322cdbfaf64a806869", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "a5c56b9d9a1a6a7a2412b9e4fe79595e9a454729", "commitAfterChange": "808f8a4c125739a8b2d2237ba90c04dc1390f0b7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void acceptLocalType(TypeBinding typeBinding)", "signatureAfterChange": " public void acceptLocalType(TypeBinding typeBinding)", "diff": ["-\t\t\tres = new ParameterizedSourceType((JavaElement)res.getParent(), res.getElementName(), new String(typeBinding.genericTypeSignature()));", "+\t\t\tres = new ParameterizedSourceType((JavaElement)res.getParent(), res.getElementName(), new String(typeBinding.computeUniqueKey()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41b1966fe16b2b7ed515b36d7a4195c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "f13a5d135f0d6d82ec59c09667ba7900fd57b604", "commitAfterChange": "0c03c673befdb0a1e0e20bd5c74c20a1a4df6af3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\taddInitializationsFrom(assertWhenTrueInfo.nullInfo());", "+\t\t\t\taddInitializationsFrom(assertWhenTrueInfo.discardInitializationInfo());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41d2beb194cd8a3dcd2d4d7f20d8c5d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RunJavaSearchGenericTests.java", "commitBeforeChange": "a520fbebd0fffdd9ae00eeb9ec609a81241ec8bb", "commitAfterChange": "afe8e7c03c9e057a9ab6bf025b43a423a4494448", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tTestCase.ONLY_SUFFIX = null;", "+\tTestCase.RUN_ONLY_ID = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41dbb640c4265508a67b478804658d7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void testInvalidTagsFieldErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsFieldErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41fcb0f794f2f54448e01d006fc18d83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected BinaryMethod(IType parent, String name, String[] parameterTypes)", "signatureAfterChange": " protected BinaryMethod(JavaElement parent, String name, String[] parameterTypes)", "diff": ["-protected BinaryMethod(IType parent, String name, String[] parameterTypes) {", "+protected BinaryMethod(JavaElement parent, String name, String[] parameterTypes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4203106b416d64744454d755b51784cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 105, "signatureBeforeChange": " public void testRemoveExternalLibFolder2() throws CoreException", "signatureAfterChange": " public void testRemoveExternalLibFolder2() throws CoreException", "diff": ["-\t\tIJavaProject p = createJavaProject(\"P\", new String[0], new String[] {getExternalFolderPath(\"externalLib\")}, \"\");", "+\t\tIJavaProject p = createJavaProject(\"P\", new String[0], new String[] {getExternalResourcePath(\"externalLib\")}, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4220ec592b790e106d38a56482c02dd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "24134b187b46ea16212a45107324227f46ba3e4a", "commitAfterChange": "496121d0ad975842fb45544aac592b8195531ce7", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 56, "signatureBeforeChange": "  \tpublic void printTrailingComment(int numberOfNewLinesToInsert)", "signatureAfterChange": "  \tpublic void printTrailingComment(int numberOfNewLinesToInsert)", "diff": ["-\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tthis.printLineComment(this.scanner.getRawTokenSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42440d921e19456f90ead109722e0f2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "b8f8de75a4550d004127538c9d4cc23076b13afe", "commitAfterChange": "019595ccc2df022ba42315e87fd28c3a71a5ce43", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void _test024()", "signatureAfterChange": " public void _test024()", "diff": ["-this.runNegativeTest(", "+this.runConformTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "424667b40763a955473cee675fed98d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "5a3a5f398a8971568181868be2d5d76728016763", "commitAfterChange": "44cc03459f9020b4da0ebdb14fa0624b7d8dfc4d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " private void setEnvironment(LookupEnvironment lookupEnvironment, IHierarchyRequestor requestor)", "signatureAfterChange": " private void setEnvironment(LookupEnvironment lookupEnvironment, HierarchyBuilder requestor)", "diff": ["+}", "+private void setEnvironment(LookupEnvironment lookupEnvironment, HierarchyBuilder requestor) {", "+\tthis.lookupEnvironment = lookupEnvironment;", "+\tthis.requestor = requestor;", "+", "+\tthis.typeIndex = -1;", "+\tthis.typeModels = new IGenericType[5];", "+\tthis.typeBindings = new ReferenceBinding[5];", "-}", "-private void setEnvironment(LookupEnvironment lookupEnvironment, IHierarchyRequestor requestor) {", "-\tthis.lookupEnvironment = lookupEnvironment;", "-\tthis.requestor = requestor;", "-", "-\tthis.typeIndex = -1;", "-\tthis.typeModels = new IGenericType[5];", "-\tthis.typeBindings = new ReferenceBinding[5];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4254ed481d1f2ab39295b952d73cf60f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "commitAfterChange": "b7f468690a70977c68b74d1aeee81bdba359d238", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 47, "signatureBeforeChange": " \t \tprotected void tearDown() throws Exception", "signatureAfterChange": " \t \tprotected void tearDown() throws Exception", "diff": ["-\t\t\tUtil.rmdir(outputDir);", "+\t\t\tUtil.flushDirectoryContent(outputDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4263a67177a711e8572dfbfadf9239c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "efbaf5f01b1dd1c4f8135936aa48ce411ca71c6c", "commitAfterChange": "226549608701ba73d9d11accd44137bac1a2e12b", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void reconcile(boolean forceProblemDetection, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void reconcile(boolean forceProblemDetection, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\treconcile(0/*don't create AST*/, forceProblemDetection, null/*use primary owner*/, monitor);", "-}", "+\treconcile(NO_AST, forceProblemDetection, null/*use primary owner*/, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "426ef5a3bee180eda8637495b30134d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "9188892e0f35caf292fbde4f4813a5d6570c540a", "commitAfterChange": "3255db62a2a31c2b7911a20dbb001663d6aa8d6e", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " private final boolean atReferenceExpression()", "signatureAfterChange": " private final boolean atReferenceExpression()", "diff": ["-\t\t\t\t\t\t\tjumpOver('<' , '>', typeArgumentsBlackList);", "+\t\t\t\t\t\t\tjumpOver('<' , '>', blackListedTokens);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42713008f52cd63da2111993a4cb36c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic void endVisit(SynchronizedStatement node)", "signatureAfterChange": " \tpublic void endVisit(SuperMethodReference node)", "diff": ["+\tpublic void endVisit(SuperMethodReference node) {", "+\t\tendVisitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "428657b39f537d850cdd182e2f35e22a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testRemoveExclusionOnPackage() throws CoreException", "signatureAfterChange": " public void testRemoveExclusionOnPackage() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42a83a5283b0aebc8df4380906aaadf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  public void test048() throws JavaModelException", "signatureAfterChange": "  public void test048() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42b3add586fb1d5110b7b0525910170a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": " \tpublic boolean visit(ParameterizedType node)", "signatureAfterChange": " \tpublic boolean visit(ParameterizedType node)", "diff": ["-\t\t\t\tint startOffset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameLESS, pos);", "+\t\t\t\tint startOffset= getScanner().getTokenEndOffset(TerminalTokens.TokenNameLESS, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42c34b0e31dedd263272f8a5543e98b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \t\r \tprivate void checkAndAddMultipleFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields, int index, List bodyDeclarations)", "signatureAfterChange": "\r \t\r \tprivate void checkAndAddMultipleFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration[] fields, int index, List bodyDeclarations)", "diff": ["-\t\t\tinitializer.setSourceRange(oldInitializer.declarationSourceStart, oldInitializer.declarationSourceEnd - oldInitializer.declarationSourceStart + 1);\r", "+\t\t\tinitializer.setSourceRange(oldInitializer.declarationSourceStart, oldInitializer.sourceEnd - oldInitializer.declarationSourceStart + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42e50e8cea2c484ebdc4472d2067f643", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/readannotation/ReadAnnotationProcessor.java", "commitBeforeChange": "0eec3068922fbe351501ec0f647de133db6041a4", "commitAfterChange": "c80b21caa7335f2dacd02879f687b71c92d3e1aa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void assertAnnotation(final String[] expected, Collection<AnnotationMirror> annotations)", "signatureAfterChange": " \t \tprivate void assertAnnotation(final String[] expected, Collection<AnnotationMirror> annotations)", "diff": ["-\t\tTestCase.assertEquals(\"annotation number mismatch\", expected.length, annotations.size());", "+\t\tTestCase.assertEquals(\"annotation number mismatch\", expected.length, annotations.size()); //$NON-NLS-1$", "-\t\t\t\tTestCase.assertEquals(\"\", mirror.toString());", "+\t\t\t\tTestCase.assertEquals(EMPTY_STRING, mirror.toString());", "-\t\t\t\tTestCase.assertTrue(\"unexpected annotation \" + mirrorToString, contains);", "+\t\t\t\tTestCase.assertTrue(\"unexpected annotation \" + mirrorToString, contains); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42eb2343d3a5530330570899aa0e8ee6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/MultiLineTestCase.java", "commitBeforeChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "commitAfterChange": "44afc4c52d7f4191b4ccf60a1e8a3e535e29bc3c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic void testNoFormat1()", "signatureAfterChange": " \t \tpublic void testNoFormat1()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_FORMAT, DefaultCodeFormatterConstants.FALSE);", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_FORMAT_BLOCK_COMMENT, DefaultCodeFormatterConstants.FALSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42ee793fa26cdb0033b03a2caeea2a80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "0009387e0c4015a92288cf132098520c33029af3", "commitAfterChange": "926ee40c2f43466f4324f706aec73206e0a3c703", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic CompilerOptions(Map settings)", "signatureAfterChange": " \tpublic CompilerOptions(Map settings)", "diff": ["-\t\t\tif(optionID.equals(OPTION_ReportDeprecationInsideDeprecatedCode)){", "+\t\t\tif(optionID.equals(OPTION_ReportDeprecationInDeprecatedCode)){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f2365540456de041e6ed0aa52e386e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": "\r final public void if_icmpge(Label lbl)", "signatureAfterChange": "\r final public void if_icmpge(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_if_icmpge, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_if_icmpge, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f3c7715984ff637f2be34785c7fc7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  public void markPotentiallyNonNullBit(LocalVariableBinding local)", "signatureAfterChange": "  public void markPotentiallyNonNullBit(VariableBinding local)", "diff": ["-public void markPotentiallyNonNullBit(LocalVariableBinding local) {", "+public void markPotentiallyNonNullBit(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42f4caaaefdfa4831d5de153464558e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "8257947b843e715f21b92a87dc4b423cbc1eed03", "commitAfterChange": "00cae100ff4808e2019f6a4d94df4143c8fabbd0", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void startup()", "signatureAfterChange": " \tpublic void startup()", "diff": ["-\t\t\t\tmanager.deltaProcessor,", "+\t\t\t\tmanager.deltaState,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "431f626dc7cf97d2f0097a91021513f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public FieldBinding getField(char[] fieldName, boolean needResolve)", "signatureAfterChange": "  public FieldBinding getField(char[] fieldName, boolean needResolve)", "diff": ["-\t\tif (name.length == fieldLength && CharOperation.prefixEquals(name, fieldName))", "+\t\tif (name.length == fieldLength && CharOperation.equals(name, fieldName))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "432006a639b624ec87cf51173479a46d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "signatureAfterChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName));\r", "+\t\ttypeRequestor.accept(answer.getSourceType(), computePackageFrom(compoundName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4339d3435817bc57d65bf471dbc5c00c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "commitAfterChange": "b21cadb5eae53d9f84dce9f073b5350a267b6ad6", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "signatureAfterChange": " protected void process(PossibleMatch possibleMatch, boolean bindingsWereCreated) throws CoreException", "diff": ["-\t\t\tif (SearchEngine.VERBOSE)", "+\t\t\tif (SearchBasicEngine.VERBOSE)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43494e9277023295428b48c80e877572", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  public void test051() throws JavaModelException", "signatureAfterChange": "  public void test051() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43495d03051e9b50a76354045760961a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void testAnnotation7() throws JavaModelException", "signatureAfterChange": " \tpublic void testAnnotation7() throws JavaModelException", "diff": ["-\t\tassertElementEquals(", "+\t\tassertElementExists(", "+\t\t\telement", "+\t\t);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "436806a4deb080adb76f956bf8f9c969", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter15/src/test0072/X.java", "commitBeforeChange": "84f4fc35b7b4bb19098a53c40bb7a3d0b02aa389", "commitAfterChange": "e87380489c19c89a272ebf5e59d9953a6bf9556a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void bar3(int var9)", "signatureAfterChange": " \t \tpublic void bar3(int var9)", "diff": ["-\t\tfor (int var11 : tab) {", "+\t\tfor (int var11 : var10) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4368357e7a800700a946a710b293eabd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractComparableTest.java", "commitBeforeChange": "50aa61861e8faaa6fa9b3fdb8946a46b2b0437dd", "commitAfterChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected Map getCompilerOptions()", "signatureAfterChange": " \tprotected Map getCompilerOptions()", "diff": ["-\t\toptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.ENABLED);", "+\t\toptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "438493984c86eb3251e9ea9d7f2d401a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MovePackageFragmentRootOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprotected void renameEntryInClasspath(IPath rootPath, IJavaProject project) throws JavaModelException", "signatureAfterChange": " \tprotected void renameEntryInClasspath(IPath rootPath, IJavaProject project) throws JavaModelException", "diff": ["-\t\t\tproject.setRawClasspath(newClasspath, fMonitor);", "+\t\t\tproject.setRawClasspath(newClasspath, progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4389129986c88ce4295c16e766e920ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "f97922685b1c1e00020ebb4cba3fd80816626f3c", "commitAfterChange": "cd3a26e3657e178cf8b2042e1242e60d8fd3db2f", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  public MethodVerifier methodVerifier()", "signatureAfterChange": "  public MethodVerifier methodVerifier()", "diff": ["-\t\tverifier = this.globalOptions.complianceLevel < ClassFileConstants.JDK1_5", "+\t\tverifier = this.globalOptions.sourceLevel < ClassFileConstants.JDK1_5", "-\t\t\t: new MethodVerifier15(this); // check for covariance even if sourceLevel is < 1.5", "+\t\t\t: new MethodVerifier15(this); // covariance only if sourceLevel is >= 1.5"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43a412af8a819eed45474c4bbfce8633", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f51d6f5a0e9a386694d73d0c3aec5b18e2ce1002", "commitAfterChange": "4ec516fd83ba9f8d854c904c0afabe8bb5fc0412", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void startup()", "signatureAfterChange": " \tpublic void startup()", "diff": ["-\t\t\tmanager.loadVariables();", "+\t\t\tmanager.loadVariablesAndContainers();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43ba19ac320c4babe39a64028ea48bf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "bffd05273174fba670489cd637d40ac2a4d0913b", "commitAfterChange": "5cda6ee5d9726ecd4c3800dc98f96b9913f2498c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r private String[] determinePossibleSubTypes() throws JavaModelException, CoreException", "signatureAfterChange": "\r private String[] determinePossibleSubTypes() throws JavaModelException, CoreException", "diff": ["-\t\tthis.hierarchy.fProgressMonitor);\r", "+\t\tthis.hierarchy.progressMonitor);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43bea8e021c9afdcf812e4d7a0b6e8c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a9ee2df3848b37b13b74a0d6fb58548ce231875e", "commitAfterChange": "2a16e8a2e7b943b242b9959c374c8d7819b6b3a0", "methodNumberBeforeChange": 528, "methodNumberAfterChange": 528, "signatureBeforeChange": " \tpublic void test509()", "signatureAfterChange": " \tpublic void test509()", "diff": ["-\t\tpreferences.insert_new_line_at_end_of_file = true;", "+\t\tpreferences.insert_new_line_at_end_of_file_if_missing = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43c3721f9e693788f81e043b45f9927e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "152d18d4cacb9bd3ea7ba43af5713a4d308c0471", "commitAfterChange": "01ebf46478e499b6682d2e0eb34536c095d3cff8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  protected void classInstanceCreation(boolean alwaysQualified)", "signatureAfterChange": "  protected void classInstanceCreation(boolean alwaysQualified)", "diff": ["-\t} else if ((this.patternFineGrain & IJavaSearchConstants.ALLOCATION_EXPRESSION_TYPE_REFERENCE) != 0) {", "+\t} else if ((this.patternFineGrain & IJavaSearchConstants.CLASS_INSTANCE_CREATION_TYPE_REFERENCE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43d8b2a5e700bf395fb5e83fcd5d18af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic static char[] getSignature(Binding binding)", "signatureAfterChange": " \tpublic static char[] getSignature(Binding binding)", "diff": ["-\t\t\tmethodBinding.modifiers |= CompilerModifiers.AccGenericSignature;", "+\t\t\tmethodBinding.modifiers |= ExtraCompilerModifiers.AccGenericSignature;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43dd3d4bdc07cc58a99b20eb72b60be2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(javadocTestClass());", "+\t\treturn buildAllCompliancesTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f5949c42c08aa15b62ff18c7de59c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8", "commitAfterChange": "7df061f9da0ab96be87e5851cb157a28c5f5bca0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tfinal List internalGetChildListProperty(ChildListPropertyDescriptor property)", "signatureAfterChange": " \tfinal List internalGetChildListProperty(ChildListPropertyDescriptor property)", "diff": ["-\t\t\treturn getExtraDimensionInfos();", "+\t\t\treturn extraDimensionInfos();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43f670c52696fb0b9738b9884fe03f53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BindingKeyTests.java", "commitBeforeChange": "ca140a64ea9dab827de00f91eb7113ac00964828", "commitAfterChange": "2918b5cc2ced910135a27ce367db19e3d162582b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprotected void assertBindingKeySignatureEquals(String expected, String key)", "signatureAfterChange": " \t \tprotected void assertBindingKeySignatureEquals(String expected, String key)", "diff": ["-\t\tString signature = bindingKey.internalToSignature();", "+\t\tString signature = bindingKey.toSignature();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44003566ddea9ca59e6c71838939758b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testSuggestFieldName020()", "signatureAfterChange": " public void testSuggestFieldName020()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44208f9b24014507ba70dc8213da40ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " public void test_annotation_import_005()", "signatureAfterChange": " public void test_annotation_import_005()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4425c259686f1c43b74f9eb73b289a92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "dd795140f54bc6376ae5e7285597e4329da70b68", "commitAfterChange": "0bc1dc4ace320749d81ad8fc342000dd64021e2c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  ReferenceBinding getTypeFromCompoundName(char[][] compoundName, boolean isParameterized)", "signatureAfterChange": "  ReferenceBinding getTypeFromCompoundName(char[][] compoundName, boolean isParameterized)", "diff": ["-        binding = (ReferenceBinding)convertToRawType(binding);", "+        binding = (ReferenceBinding)convertUnresolvedBinaryToRawType(binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "442f0d8efec2a43a18dfce31c76a4238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " protected void consumeStatementBreak()", "signatureAfterChange": " protected void consumeStatementBreak()", "diff": ["-\tpushOnAstStack(new Break(null, intStack[intPtr--], endPosition));", "+\tpushOnAstStack(new BreakStatement(null, intStack[intPtr--], endPosition));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44403c07b106fabbb5bfd476dc73a622", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tprotected IJavaElement[] getParentElements()", "signatureAfterChange": " \tprotected IJavaElement[] getParentElements()", "diff": ["-\t\treturn fParentElements;", "+\t\treturn parentElements;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "444150fadf7a3ce1a79eccea5cb7e44f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public IBuffer getBuffer() throws JavaModelException", "signatureAfterChange": " public IBuffer getBuffer() throws JavaModelException", "diff": ["-\t\tObject info = ((ClassFile) getClassFile()).getBinaryTypeInfo((IFile) getResource());", "+\t\tObject info = ((ClassFile) getClassFile()).getBinaryTypeInfo((IFile) resource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "446ca9029afb3fad75f9a434ff3f2a2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "1c367f9da4b67ddc705e012aa9c952ee4bdfc663", "commitAfterChange": "7974f4a5911052c39ead36f51d3952ab684e5130", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " \tprivate void annotateTypeParameter(TypeParameter typeParameter, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations)", "signatureAfterChange": " \tprivate void annotateTypeParameter(TypeParameter typeParameter, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations)", "diff": ["-\t\t\t\t\t\ttypeParameter.annotations().add(annotation);", "+\t\t\t\t\t\ttypeParameter.modifiers().add(annotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44821f4ac73cf1509d3a972b63dee1d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AssignmentTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tTest suite = buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\tTest suite = buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "448bcbe0f38166e65be6c67b0537866b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void testParameterizedTypeSingleArgument01() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeSingleArgument01() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedSourceType(unit, \"Generic<Exception>\"); //$NON-NLS-1$", "+\t\tParameterizedSourceType type = selectParameterizedType(unit, \"Generic<Exception>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "448d9e6bbc607386f75fd8527b49ad29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "40a1ed0c9dc0ab688d5293676f8aa97f01174e41", "commitAfterChange": "9295475f17ec96b15242bc49ff91f42882579f94", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic int getExtraDimensions()", "signatureAfterChange": "  \tpublic int getExtraDimensions()", "diff": ["-\t\treturn displacedArrayDimensions;", "+\t\treturn extraArrayDimensions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a584bdf3fb5fb56a48af5a2958c0f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/BinaryExpressionFragmentBuilder.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  \tpublic boolean visit(OR_OR_Expression or_or_Expression, BlockScope scope)", "signatureAfterChange": "  \tpublic boolean visit(OR_OR_Expression or_or_Expression, BlockScope scope)", "diff": ["-\t\t\tthis.operatorsList.add(new Integer(ITerminalSymbols.TokenNameOR_OR));", "+\t\t\tthis.operatorsList.add(new Integer(TerminalTokens.TokenNameOR_OR));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44a5c6a1877b7d5141d2af3f834217a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic IType createTypeHandle(char[] simpleTypeName)", "signatureAfterChange": " \tpublic IType createTypeHandle(char[] simpleTypeName)", "diff": ["-\t\t\treturn MatchingOpenable.getTopLevelType(type);", "+\t\t\treturn PotentialMatch.getTopLevelType(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44ec7c5e05f75651293d6483c4699856", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (receiverErasure.findSuperTypeWithSameErasure(fieldBinding.declaringClass) == null) {", "+\t\tif (receiverErasure.findSuperTypeOriginatingFrom(fieldBinding.declaringClass) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4505f043f5546a909221fdb58c4b643c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["-\t\treturn (fieldDeclaration.bits & ASTNode.HasLocalTypeMASK) != 0; // continue only if it has local type;", "+\t\treturn (fieldDeclaration.bits & ASTNode.HasLocalType) != 0; // continue only if it has local type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "451a3cc3339fd9570886a103d7a45552", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "994909f27ab64cbff8a4b8b71b6f8d78e265bc42", "commitAfterChange": "fd0bab5fda3357e5a56e4647b1a6d36779abe285", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public String toString()", "signatureAfterChange": "\r \tpublic String toString()", "diff": ["-}\r", "-public String toString(){\r", "-\treturn \"indexing project \" + project.getName(); //$NON-NLS-1$\r", "-}\r", "+\tpublic String toString() {\r", "+\t\treturn \"indexing project \" + project.getFullPath(); //$NON-NLS-1$\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45210b513282202cc4f29a47c0fd7a3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate boolean createNeededPackageFragments(IContainer sourceFolder, PackageFragmentRoot root, String[] newFragName, boolean moveFolder) throws JavaModelException", "signatureAfterChange": " \tprivate boolean createNeededPackageFragments(IContainer sourceFolder, PackageFragmentRoot root, String[] newFragName, boolean moveFolder) throws JavaModelException", "diff": ["-\t\tIContainer parentFolder = (IContainer) root.getResource();", "+\t\tIContainer parentFolder = (IContainer) root.resource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "455209445a0db7fc823751c4eb4f7609", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void setUpSuite() throws Exception", "signatureAfterChange": " public void setUpSuite() throws Exception", "diff": ["-\tthis.jarRoot = project.getPackageFragmentRoot(\"/AttachSourceTests/attach.jar\");", "+\tthis.root = project.getPackageFragmentRoot(\"/AttachSourceTests/attach.jar\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4581a6d566b94802faf56a4a18b64c88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void testInvalidTagsConstructorErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsConstructorErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45835a9e7a164872bf5366dca9410961", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "commitAfterChange": "75ff04c8b5711fae5cad065b3b4b862839b59cd9", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r \tprivate int computeRelevanceForExpectingType(TypeBinding proposalType)", "signatureAfterChange": "\r \tprivate int computeRelevanceForExpectingType(TypeBinding proposalType)", "diff": ["-\t\treturn 0;\r", "+\t\treturn R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45a245ca3712d1de195a4894a468e7a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "1681420a49895c71b06fecf2cdaa16ab79145282", "commitAfterChange": "b40a2e760dc610a4bee5e79211ed8e0b978cd9e5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic static IResource[] getGeneratedResources(IRegion region, boolean includesNonJavaResources)", "signatureAfterChange": " \tpublic static IResource[] getGeneratedResources(IRegion region, boolean includesNonJavaResources)", "diff": ["-\t\t\t\t\troots = javaProject.getAllPackageFragmentRoots();", "+\t\t\t\t\troots = javaProject.getPackageFragmentRoots();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45ab67a5eaa19de261fc27f5fdead6ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "3c8db8654fc8e2927c75863ec1232c9bc3800c9b", "commitAfterChange": "533660d1560f1a7aff4c5ccabdcd0cb35c0194c1", "methodNumberBeforeChange": 576, "methodNumberAfterChange": 576, "signatureBeforeChange": " public void disallowedTargetForContainerAnnotation(Annotation annotation, TypeBinding containerAnnotationType)", "signatureAfterChange": " public void disallowedTargetForContainerAnnotation(Annotation annotation, TypeBinding containerAnnotationType)", "diff": ["-\t\tIProblem.DisallowedTargetForContainerAnnotation,", "+\t\tIProblem.DisallowedTargetForContainerAnnotationType,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45b333b69b2ab728941324907a3ce472", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  public void test042() throws JavaModelException", "signatureAfterChange": "  public void test042() throws JavaModelException", "diff": ["-\t\t\"FIELD[FIELD_REF]{FIELD, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, I, FIELD, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"FIELD[FIELD_REF]{FIELD, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, I, FIELD, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45c692aa9dc167c5b86ef7ab053307d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "6b98a48b1e2c19c8f8cbb369d405b5d7df93d1c6", "commitAfterChange": "1146476ca138da09c36a16ea64250a150f60b014", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprotected void initializeDefaultPluginPreferences()", "signatureAfterChange": " \tprotected void initializeDefaultPluginPreferences()", "diff": ["-\t\tpreferences.setDefault(CORE_JAVA_BUILD_CLEAN_OUTPUT_FOLDER, IGNORE); ", "+\t\tpreferences.setDefault(CORE_JAVA_BUILD_CLEAN_OUTPUT_FOLDER, CLEAN); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45cb590f2a2018289fecb5e79b0df530", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void ensureIndexExists(String indexLocation, IPath containerPath)", "signatureAfterChange": " public void ensureIndexExists(IPath indexLocation, IPath containerPath)", "diff": ["-public void ensureIndexExists(String indexLocation, IPath containerPath) {", "+public void ensureIndexExists(IPath indexLocation, IPath containerPath) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45ec635c8864690088ab6db380df815e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "9a76fb8f9434ae4b71dc267e686b050759ff3536", "commitAfterChange": "e5d54da7cf77d6614acfbbcede23df9b9dad68f9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "signatureAfterChange": " public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "diff": ["-\tIProblem[] problems = unitResult.getProblems();", "+\tIProblem[] problems = unitResult.getErrors();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4600f6c92cc4a00c55ae10386d914aa7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void test014() throws JavaModelException", "signatureAfterChange": "  public void test014() throws JavaModelException", "diff": ["-\t\t\"BasicTestTypes[TYPE_REF]{BasicTestTypes, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"BasicTestTypes[TYPE_REF]{BasicTestTypes, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "460e3dedf52cbf1805b9dbb955f96a02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "54f3e7caaa3150d871f7d11c1e610492c84f6dde", "commitAfterChange": "f700051affab74804180d3a8bb296f6cabd751a0", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \t \tprivate ConstraintFormula combineSameSubSuper(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": " \t \tprivate ConstraintTypeFormula combineSameSubSuper(TypeBound boundS, TypeBound boundT)", "diff": ["-\tprivate ConstraintFormula combineSameSubSuper(TypeBound boundS, TypeBound boundT) {", "+\tprivate ConstraintTypeFormula combineSameSubSuper(TypeBound boundS, TypeBound boundT) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46236369181be388fc3b9290e07eb5c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AssertionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_4);", "+\t\treturn buildMinimalComplianceTestSuite(testClass(), F_1_4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4627f432aacbe6b8497b21f97cb9a5bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public void test049() throws JavaModelException", "signatureAfterChange": "  public void test049() throws JavaModelException", "diff": ["-\t\t\"method[JAVADOC_METHOD_REF]{{@link OtherTypes#method()}, Ljavadoc.text.OtherTypes;, ()V, method, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\"method[JAVADOC_METHOD_REF]{{@link OtherTypes#method()}, Ljavadoc.text.OtherTypes;, ()V, method, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "463996524a7ddb86fb02ecaa93d0fe36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/AnnotationComponentValue.java", "commitBeforeChange": "6de7ced9858f2246a9379efd0dd8834bcae6044c", "commitAfterChange": "a6982bb808d31a822c6a1c4b43d77a703b23bdd4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic IConstantPoolEntry getClassInfo()", "signatureAfterChange": " \tpublic IConstantPoolEntry getClassInfo()", "diff": ["-\t\treturn this.classFileInfo;", "+\t\treturn this.classInfo;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4664a92fb649b788e235d71607250a28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void endVisit(AnnotationFieldReference fieldRef, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(JavadocFieldReference fieldRef, BlockScope scope)", "diff": ["-\tpublic void endVisit(AnnotationFieldReference fieldRef, BlockScope scope) {", "+\tpublic void endVisit(JavadocFieldReference fieldRef, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4669e74a2f99b6e1f5156af80b2fbbc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "3c289b9a951cfd3e36c9387c73b3893fba2c0158", "commitAfterChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void checkForInheritedNameClash(MethodBinding inheritedMethod, MethodBinding otherInheritedMethod)", "signatureAfterChange": " void checkForInheritedNameClash(MethodBinding inheritedMethod, MethodBinding otherInheritedMethod)", "diff": ["-\t\tdetectInheritedMethodClash(inheritedMethod, otherInheritedMethod);", "+\t\tdetectInheritedNameClash(inheritedMethod, otherInheritedMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "466c63bc45ccaf7a60f1a0d89e9f0961", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": " \tpublic void endVisit(ThrowStatement node)", "signatureAfterChange": " \tpublic void endVisit(SuperMethodReference node)", "diff": ["+\t */", "+\tpublic void endVisit(SuperMethodReference node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "466cc0111219d787822b57c76e1dd119", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\t\t \tpublic void manageSyntheticAccessIfNecessary( \t\tBlockScope currentScope, \t\tFieldBinding fieldBinding, \t\tTypeBinding lastReceiverType, \t\tint index, \t\tFlowInfo flowInfo)", "signatureAfterChange": "\t\t \tpublic void manageSyntheticAccessIfNecessary( \t\tBlockScope currentScope, \t\tFieldBinding fieldBinding, \t\tTypeBinding lastReceiverType, \t\tint index, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t\t&& fieldBinding.declaringClass.id != T_Object)", "+\t\t\t\t\t&& fieldBinding.declaringClass.id != T_JavaLangObject)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4672c6e8e609fc2b51cdaa5d03aa71c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 465, "methodNumberAfterChange": 465, "signatureBeforeChange": " \tpublic void test446()", "signatureAfterChange": " \tpublic void test446()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46815f7a65e3580a7ea0677527c68804", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 343, "methodNumberAfterChange": 343, "signatureBeforeChange": "  \tpublic void test323()", "signatureAfterChange": "  \tpublic void test323()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "468c87beab212c296a72e414030a5c2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "2418a9c1fa372e8f8253220ab580375e8d2f864b", "commitAfterChange": "bfeefe0bfa824914f542a3a07eccab1379d1c70b", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void testSuppressWarnings1() throws JavaModelException", "signatureAfterChange": " public void testSuppressWarnings1() throws JavaModelException", "diff": ["-\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, null, null);", "+\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, owner, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46a55d0963781bbb3143147b34e18788", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocPackageCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public void test012() throws JavaModelException", "signatureAfterChange": "  public void test012() throws JavaModelException", "diff": ["-\t\t\"BasicTestReferences[TYPE_REF]{org.eclipse.jdt.core.tests.BasicTestReferences, org.eclipse.jdt.core.tests, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, null, null, \"+this.positions+R_DICQNR+\"}\"", "+\t\t\"BasicTestReferences[TYPE_REF]{org.eclipse.jdt.core.tests.BasicTestReferences, org.eclipse.jdt.core.tests, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, null, null, \"+this.positions+R_DRICQNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ac192a5a88019f8b1bab71330aadb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DebugAttributeTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\t\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46b49bce52176c5e6f0f54f0c0de4220", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/align/Alignment.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Alignment(int kind, int mode, int tieBreakRule, Scribe scribe, int fragmentCount, int sourceRestart, int continuationIndent)", "signatureAfterChange": " \tpublic Alignment(int kind, int mode, int tieBreakRule, Scribe scribe, int fragmentCount, int sourceRestart, int continuationIndent)", "diff": ["-\t\tAssert.isTrue(kind >=ALLOCATION && kind <=STRING_CONCATENATION);", "+\t\tAssert.isTrue(kind >=ALLOCATION && kind <=MULTI_CATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46c18e960655291403d8d4e9141c1420", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " public void test163() throws JavaModelException", "signatureAfterChange": " public void test163() throws JavaModelException", "diff": ["-\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(Object...), Ljavadoc.methods.tags.BasicTestMethods;, ([Ljava.lang.Object;)V, BasicTestMethods, (o), \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(Object...), Ljavadoc.methods.tags.BasicTestMethods;, ([Ljava.lang.Object;)V, BasicTestMethods, (o), \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46d7e3cb57d3a8c4b58c614602e87204", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "f6057f4bd73ada85ae2d2e3b7f84adc02c4226c8", "commitAfterChange": "5fad474fe873700d0e43495d7c1c8c2c489d0d4f", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r \r \tpublic void updateClassPath(IProgressMonitor monitor, boolean canChangeResource, boolean mayChangeProjectDependencies) throws JavaModelException", "signatureAfterChange": "\r \r \tpublic void updateClassPath(IProgressMonitor monitor, boolean canChangeResource, boolean mayChangeProjectDependencies) throws JavaModelException", "diff": ["-\t\tsetRawClasspath(getRawClasspath(), SetClasspathOperation.ReuseOutputLocation, monitor, canChangeResource, false, getExpandedClasspath(true), mayChangeProjectDependencies);\r", "+\t\tsetRawClasspath(getRawClasspath(), SetClasspathOperation.ReuseOutputLocation, monitor, canChangeResource, false, getResolvedClasspath(true), mayChangeProjectDependencies);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46dc1846c5491ed791f9c3c8ee65e1b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 357, "methodNumberAfterChange": 357, "signatureBeforeChange": " \tpublic void test337()", "signatureAfterChange": " \tpublic void test337()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e324ba7e567fb8c64ff0b03acb662d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "fec6027ca1c6247426252a7173b9c0a11f4d6b8c", "commitAfterChange": "231626db7da3a6ad45ce8225b8c3274868f9ab3c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic void resolveAnnotation()", "signatureAfterChange": " \t \tpublic void resolveAnnotation()", "diff": ["-\t\t\tthis.scope.problemReporter().annotationMissingForPublic(this.sourceStart, this.sourceEnd);", "+\t\t\tthis.scope.problemReporter().annotationMissing(this.sourceStart, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46ff0f4c4888fc1640195ee230689e5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \r  public String[][] resolveType(String typeName) throws JavaModelException", "signatureAfterChange": "\r \r  public String[][] resolveType(String typeName) throws JavaModelException", "diff": ["-\t\tnew SelectionEngine(environment, requestor, JavaModelManager.getOptions());\r", "+\t\tnew SelectionEngine(environment, requestor, JavaCore.getOptions());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4704489db29991939e08bc9802a3a3a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized, char[][][] missingTypeNames)", "signatureAfterChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end, boolean isParameterized, char[][][] missingTypeNames)", "diff": ["-\treturn getTypeFromConstantPoolName(signature, start, end, isParameterized, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\treturn getTypeFromConstantPoolName(signature, start, end, isParameterized, missingTypeNames, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4715fc8ed21f631aca72e193cb7ccc59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "5dc29923a69fd3042464844c0ff1202df116a3da", "commitAfterChange": "b5c3edaa965f8b6221b354dabec993cbd2621626", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "diff": ["-\t\t\t\t\tthis.indexManager.removeIndex(element.getJavaProject().getProject().getFullPath());\r", "+\t\t\t\t\tthis.indexManager.removeIndexFamily(element.getJavaProject().getProject().getFullPath());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4719553570d738f553106ee819f807a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank)", "signatureAfterChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank)", "diff": ["-\tpublic ITypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank) {", "+\tpublic TypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "471ab356a3e2d6ec21c3427911fd74a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SnippetCompletionTests.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void testCodeSnippetAssistForClassFile() throws JavaModelException", "signatureAfterChange": "  public void testCodeSnippetAssistForClassFile() throws JavaModelException", "diff": ["-\tint[] modifiers = {CompilerModifiers.AccDefault, CompilerModifiers.AccFinal};", "+\tint[] modifiers = {CompilerModifiers.AccDefault, IConstants.AccFinal};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "473ca8a4ebf4d6e8db50de4db63046d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "6ca82f1a54d472af29c424861c5280a8ebc7b028", "commitAfterChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void match(ConstructorDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(ConstructorDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-\tif (level >= POTENTIAL_MATCH)", "+\tif (level >= POSSIBLE_MATCH)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4748c5813c1d3e6155e6976b7846bc50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "688d382ce06ce4c4ed41699312bd8e5dc6e27b2c", "commitAfterChange": "be6a57f9d676bfd0ccdc79963ab2c8b8c692c4c8", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testCompletionOutOfBounds() throws JavaModelException", "signatureAfterChange": " public void testCompletionOutOfBounds() throws JavaModelException", "diff": ["-\t} catch (IllegalArgumentException e) {", "+\t} catch (JavaModelException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4748fbc947dc7e8630dcd6c95148656b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "40a85c2d4c57226c917bc0f991a26ac5a5d8b085", "commitAfterChange": "a256960ed4710f2897d78e274a4eaeebfce80126", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic boolean visit(StringLiteralConcetanation stringLiteral, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(StringLiteralConcatenation stringLiteral, BlockScope scope)", "diff": ["-\tpublic boolean visit(StringLiteralConcetanation stringLiteral, BlockScope scope) {", "+\tpublic boolean visit(StringLiteralConcatenation stringLiteral, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47830f855ba55ca374f4d646426773c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 208, "methodNumberAfterChange": 208, "signatureBeforeChange": " \tpublic void test187()", "signatureAfterChange": " \tpublic void test187()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4792aa72d293020dab9ddb2ac2e8c04f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \tprivate void setSourceRange(int start, int end)", "signatureAfterChange": "\r \tprivate void setSourceRange(int start, int end)", "diff": ["-\t\tif (options.checkEntireWordReplacement()) {\r", "+\t\tif (options.replaceEntireWord()) {\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479f0ad9ba9e6cdca0aaabcc203cc5cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testBug68757() throws JavaModelException", "signatureAfterChange": " public void testBug68757() throws JavaModelException", "diff": ["-\t\t\"OtherType[TYPE_REF]{OtherType, javadoc.tests, Ljavadoc.tests.OtherType;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"OtherType[TYPE_REF]{OtherType, javadoc.tests, Ljavadoc.tests.OtherType;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47adeba1c03f70be6ec3e3ba19252c95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testInsertEnd() throws CoreException", "signatureAfterChange": " public void testInsertEnd() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47dadfb8cf6ba810987671541ec90789", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ImplicitDocTypeReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope classScope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, BlockScope classScope)", "diff": ["+\t */", "+\tpublic void traverse(ASTVisitor visitor, BlockScope classScope) {", "+\t\t// Do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47e25a07ed1019dc4ccab1029ce28cb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic boolean match(ImportDeclaration node, Object other)", "signatureAfterChange": " \tpublic boolean match(ImportDeclaration node, Object other)", "diff": ["-\t\tif (node.getAST().apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47e520b72525c2d5ecef6e9353d7ee1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "diff": ["-\t\t\tcodeStream.generateStringAppend(currentScope, null, expression);", "+\t\t\tcodeStream.generateStringConcatenationAppend(currentScope, null, expression);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "480d246c3c2735c5f7589b6fbf366b74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "75a1e994888330022017b20e200adbe75bfe0c3e", "commitAfterChange": "ed40706c54e3ed288a268a679fb1331f928df75c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\t \t \tprotected void initializeArguments()", "signatureAfterChange": "\t \t \tprotected void initializeArguments()", "diff": ["-\t\t    typeArguments[i] = this.environment.convertToRawType(typeVariables[i].upperBound());", "+\t\t    typeArguments[i] = this.environment.convertToRawType(typeVariables[i].erasure());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "481589dc54a39e95b30b0885647886b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "058f4956c302999db0dab277cf91883f2d016e2b", "commitAfterChange": "27d9d524a3b624cfc1260a727d1dfb92d53ae22a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void tagAsUnnecessaryCast(Scope scope, TypeBinding castType)", "signatureAfterChange": " \tpublic void tagAsUnnecessaryCast(Scope scope, TypeBinding castType)", "diff": ["-\t\tthis.bits |= UnnecessaryCastMask;", "+\t\tthis.bits |= UnnecessaryCastMASK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "481d4c072196f5780d54ae942b4eae4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConstructorInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tASTNode clone0(AST target)", "signatureAfterChange": " \tASTNode clone0(AST target)", "diff": ["-\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487096e3bcd0f212167a0e09bb163c9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testChangeSourceAttachmentFile() throws CoreException", "signatureAfterChange": " public void testChangeSourceAttachmentFile() throws CoreException", "diff": ["-\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIClassFile cf = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4871c0b1f54fb2e95ba9545ede36db2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public void generateImplicitConversion(int implicitConversionCode)", "signatureAfterChange": " public void generateImplicitConversion(int implicitConversionCode)", "diff": ["-\t\tfinal int typeId = implicitConversionCode & IMPLICIT_CONVERSION_MASK;", "+\t\tfinal int typeId = implicitConversionCode & COMPILE_TYPE_MASK;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "487bdb9279cef76c7ad9114eea932aa4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 355, "methodNumberAfterChange": 355, "signatureBeforeChange": " \tpublic void test335()", "signatureAfterChange": " \tpublic void test335()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4895d16af8d4fb0f00b7be3423b51d01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "c57d63e48d2e13925643b8ebe6a288202f202e6b", "commitAfterChange": "e2a159c6596c04bca6bcd93e61dded936d044196", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void notifyChanged(final BufferChangedEvent event)", "signatureAfterChange": " protected void notifyChanged(final BufferChangedEvent event)", "diff": ["-\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\tSafeRunner.run(new ISafeRunnable() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48cbea4aed562de80bfd0e61b4a40d59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "100013bece0eb4f533563100e2e2c492eafe5eed", "commitAfterChange": "a836581cacf8d7a555ca92aa4df554df081b1e09", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic MemberValuePair(char[] token, int sourceStart, int sourceEnd, Expression value)", "signatureAfterChange": " \t \tpublic MemberValuePair(char[] token, int sourceStart, int sourceEnd, Expression value)", "diff": ["-\t\tthis.token = token;", "+\t\tthis.name = token;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48d10acb8da61b24d208dab7004bb433", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b9de5f3466a9b4d6687de837720c445097067b16", "commitAfterChange": "39416e9e4305b172d90b88aed3085d98ded0a86c", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 183, "signatureBeforeChange": "\r protected CompilationUnitDeclaration endParse(int act)", "signatureAfterChange": "\r protected CompilationUnitDeclaration endParse(int act)", "diff": ["-\t\tcompilationUnit.compilationResult.lineSeparatorPositions = scanner.lineEnds();\r", "+\t\tcompilationUnit.compilationResult.lineSeparatorPositions = scanner.getLineEnds();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48da2786d3f11d5c70a32041a8780343", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "c550c255548017aefbf3af62127805a99e7761d1", "commitAfterChange": "69322cef043ef54194e3a32f347e151e0e2870a4", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  protected BuildContext[] notifyParticipants(SourceFile[] unitsAboutToCompile)", "signatureAfterChange": "  protected BuildContext[] notifyParticipants(SourceFile[] unitsAboutToCompile)", "diff": ["-\t\t\t\t\tCompilationParticipantResult newResult = new CompilationParticipantResult(sourceFile);", "+\t\t\t\t\tCompilationParticipantResult newResult = new BuildContext(sourceFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48e670ec77c9315f7ee1734f25953999", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(DietRecoveryTest.class);", "+\treturn buildAllCompliancesTestSuite(DietRecoveryTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48e980fdf78fe6976983c23cdc30d36e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCodeStream.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void generateEmulationForConstructor(Scope scope, MethodBinding methodBinding)", "signatureAfterChange": " public void generateEmulationForConstructor(Scope scope, MethodBinding methodBinding)", "diff": ["-\tthis.newArray(scope, new ArrayBinding(scope.getType(TypeBinding.JAVA_LANG_CLASS), 1));", "+\tthis.newArray(scope, new ArrayBinding(scope.getType(TypeConstants.JAVA_LANG_CLASS), 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48f1a55d07f276847285a6a459a301fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "5dcefe623702748a359807058d8605577453405d", "commitAfterChange": "a8f2b9d6f31a63759a85bef6a1ed8cbb23fbd3fa", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\t\t\t\t\t\tcase ScannerHelper.C_LETTER :", "+\t\t\t\t\t\t\t\tcase ScannerHelper.C_IDENT_PART :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "491e50134d85f7e964fec728d4076120", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "edc37e94c3a8ff30574beb9cdf0696d92f661cd3", "commitAfterChange": "3a00cdbe76e603258e18bf89fe3c22cfa0424f0e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": " protected void assertAllTypes(String expected) throws JavaModelException", "signatureAfterChange": " protected void assertAllTypes(String expected) throws JavaModelException", "diff": ["+}", "+protected void assertAllTypes(String expected) throws JavaModelException {", "+\tassertAllTypes(WAIT_UNTIL_READY_TO_SEARCH, expected);", "+}", "-}", "-protected void assertAllTypes(String expected) throws JavaModelException {", "-\tassertAllTypes(\"Unexpected all types\", null, expected);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "492b3310526723e3bc008ec385cc80c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForInnerclass(ReferenceBinding enclosingType)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForInnerclass(ReferenceBinding enclosingType)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "492d599770c508f790fb09183b0e584a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void duplicateDefaultCase(DefaultCase statement)", "signatureAfterChange": " public void duplicateDefaultCase(DefaultCaseStatement statement)", "diff": ["-public void duplicateDefaultCase(DefaultCase statement) {", "+public void duplicateDefaultCase(DefaultCaseStatement statement) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "492db69a17cb52ba97514a76998930f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic void resolve(BlockScope blockScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope blockScope)", "diff": ["-\t\tif ((this.bits & IsAnonymousTypeMASK) == 0) blockScope.addLocalType(this);", "+\t\tif ((this.bits & IsAnonymousType) == 0) blockScope.addLocalType(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494d00ef482b7f38a71a0c5745692a3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/TestCase.java", "commitBeforeChange": "9a099ab7eaca6de468f171f604d52045eb064822", "commitAfterChange": "245938f53ddff468739c34085f55dc93baea5c7e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "  protected void tearDown() throws Exception", "signatureAfterChange": "  protected void tearDown() throws Exception", "diff": ["-\t\tif ((newClass || ALL_TESTS_LOG) && MEM_LOG_FILE.exists()) {", "+\t\tif ((first || ALL_TESTS_LOG) && MEM_LOG_FILE.exists()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494ff28a8d611f944c9ec8310a1be00b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "0ce8ad5b0d44dc70bab93f6f64c0b898ece7748d", "commitAfterChange": "42f83db749431568a0412462e46b75fee51080ac", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " private IBuffer mapSource(SourceMapper mapper)", "signatureAfterChange": " private IBuffer mapSource(SourceMapper mapper)", "diff": ["-\t\tIBuffer buffer = getBufferFactory().createBuffer(this);", "+\t\tIBuffer buffer = getBufferManager().createBuffer(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4951e26536f2ee4629234a1c0e7541db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, ICompilationUnit cu) throws JavaModelException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(AST.JLS3);", "+\t\tASTParser parser = ASTParser.newParser(AST.JLS4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49556c124d6fc3b245a2649ec52dcb25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ArrayTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn setupSuite(testClass());", "+\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "495dde2c2c003625248e4596e2012c5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/JavaBuilder.java", "commitBeforeChange": "3cb212c139b785d5942036354807eebced06845d", "commitAfterChange": "1e824a6f76b10e480f47e7bb3a7a70a5562012eb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r private void clearLastState()", "signatureAfterChange": "\r \r private void clearLastState()", "diff": ["-\tJavaModelManager.getJavaModelManager().setLastBuiltState2(currentProject, null);\r", "+\tJavaModelManager.getJavaModelManager().setLastBuiltState(currentProject, null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49622475ec6e5b0797572aef277bda71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void generateCode( \t\tClassScope classScope, \t\tClassFile classFile, \t\tint clinitOffset)", "signatureAfterChange": " \tprivate void generateCode( \t\tClassScope classScope, \t\tClassFile classFile, \t\tint clinitOffset)", "diff": ["-\t\tif (declaringType.getKind() == IGenericType.ENUM) {", "+\t\tif (declaringType.kind() == IGenericType.ENUM) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4983ac0296fca84caa3a7af3c6af335c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "\t \tpublic void test098()", "signatureAfterChange": "\t \tpublic void test098()", "diff": ["-\t\tcustomOptions.put(CompilerOptions.OPTION_ReportUnsafeTypeOperation, CompilerOptions.ERROR);\t\t\t    ", "+\t\tcustomOptions.put(CompilerOptions.OPTION_ReportUncheckedTypeOperation, CompilerOptions.ERROR);\t\t\t    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "499842ac0469b00da9e2c4653cb05a68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected boolean equalsDOMNode(IDOMNode node) throws JavaModelException", "signatureAfterChange": " protected boolean equalsDOMNode(IDOMNode node) throws JavaModelException", "diff": ["-\t\t\tString typeNodeName = nodeName.substring(0, nodeName.indexOf(\".java\")); //$NON-NLS-1$", "+\t\t\tString typeNodeName = nodeName.substring(0, nodeName.indexOf(SUFFIX_STRING_java));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49bd9418dc7e23436c0df220101265ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "79620cc5a2ab93e8afb2f50dfb60d3aac3ac52a1", "commitAfterChange": "bb83bb6bb9594ac07e759b1e208acbe513439625", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\t\t\tisWhiteSpace = ScannerHelper.isWhitespace(this.currentCharacter);", "+\t\t\t\t\tisWhiteSpace = CharOperation.isWhitespace(this.currentCharacter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c328b54904a5da9c7f40aa9768f030", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "c9d6ebaa0d13be6fc2e748dee3cae777e5c9d89a", "commitAfterChange": "0011958a7781b8e34a2680d48e8c358ce935fb15", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "\r protected boolean resumeAfterRecovery()", "signatureAfterChange": "\r protected boolean resumeAfterRecovery()", "diff": ["-\t\t\t\t|| insideFieldInitializer())) {\r", "+\t\t\t\t|| insideFieldInitialization())) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c9d10065ac2e53285663bf741157f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "95f59caaf27a775333076cb1bc1d967e2796cdb3", "commitAfterChange": "7e41439f7b91a880bb131d143b9faf947232eb35", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic char[] readableName()", "signatureAfterChange": " \tpublic char[] readableName()", "diff": ["-\t\t\treadableName = CharOperation.concatWith(type().compoundName, '.');", "+\t\t\treadableName = CharOperation.concatWith(actualType().compoundName, '.');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49cf096b131833929633ff9f35d30c07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void setAccessRestriction(ReferenceBinding type, AccessRestriction accessRestriction)", "signatureAfterChange": " public void setAccessRestriction(ReferenceBinding type, AccessRestriction accessRestriction)", "diff": ["-\ttype.modifiers |= CompilerModifiers.AccRestrictedAccess;", "+\ttype.modifiers |= ExtraCompilerModifiers.AccRestrictedAccess;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49dc0e56a6416389df518af5834753bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "80d38e93a98c2ac6ea4299f96b043d2cf0a8942c", "commitAfterChange": "3c48c9fa4ac4d99dec40bf37b65e9e7f38ac2398", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t\tpublic synchronized void updateClasspathInformation(IClasspathEntry[] newRawClasspath)", "signatureAfterChange": " \t\tpublic synchronized void updateClasspathInformation(IClasspathEntry[] newRawClasspath)", "diff": ["-\t\t\tthis.javadocCache = new LRUCache(5);", "+\t\t\tthis.javadocCache = new LRUCache(JAVADOC_CACHE_INITIAL_SIZE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ecd654c52933e06038c9746e59ec75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "33bdf149dbe1be0a3eb429c5c10e2e8d6e8332e3", "commitAfterChange": "d3db880f9ce093cbf2c8ff1aba8ac97e00156523", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\tif (environment().options.complianceLevel >= ClassFileConstants.JDK1_5) {", "+\t\t\t\tif (environment().options.sourceLevel >= ClassFileConstants.JDK1_5) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49ef3371dc2418330025fad07065935c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void testBug114341b() throws JavaModelException", "signatureAfterChange": "  public void testBug114341b() throws JavaModelException", "diff": ["-\t\t\"Secondary.Member[TYPE_REF]{Member, javadoc.text, Ljavadoc.text.Secondary$Member;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"Secondary.Member[TYPE_REF]{Member, javadoc.text, Ljavadoc.text.Secondary$Member;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49eff279693caf0edf905bf382c77465", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void setLoadFactor(double newLoadFactor) throws IllegalArgumentException", "signatureAfterChange": " public void setLoadFactor(double newLoadFactor) throws IllegalArgumentException", "diff": ["-\t\tfLoadFactor = newLoadFactor;", "+\t\tloadFactor = newLoadFactor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49f34ef597752e2bc22d4987aa0bcf23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cff20a526b50465a2f348a1a5575e634a801a7d8", "commitAfterChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Argument argument, BlockScope scope)", "diff": ["-\t\tint extraDimensions = getExtraDimension();", "+\t\tint extraDimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a1efa19166908802737612da511ea76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private String removeIndentAndNewLines(String code, IDocument document, ICompilationUnit cu)", "signatureAfterChange": " private String removeIndentAndNewLines(String code, IDocument document, ICompilationUnit cu)", "diff": ["-\t\ttabWidth = Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE));", "+\t\ttabWidth = Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a2c283a610395c9e5f1af227625ee3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void testExternalJarBinaryMethodMemento() throws JavaModelException", "signatureAfterChange": " public void testExternalJarBinaryMethodMemento() throws JavaModelException", "diff": ["-\t\t\"=P/\" + getExternalJCLPath() + \"<p(X.class[X~foo~[Ljava.lang.String;\",", "+\t\t\"=P/\" + getEscapedExternalJCLPath() + \"<p(X.class[X~foo~[Ljava.lang.String;\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a38f6d0eba1dc0847376b17d5d6f199", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FineGrainVisitor.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public boolean visit(ParameterizedSingleTypeReference parameterizedSingleTypeReference, ClassScope scope)", "signatureAfterChange": "  public boolean visit(ParameterizedSingleTypeReference parameterizedSingleTypeReference, ClassScope scope)", "diff": ["-\tif ((this.fineGrain & PARAMETERIZED_TYPE_REFERENCE) != 0) {", "+\tif ((this.fineGrain & TYPE_ARGUMENT_TYPE_REFERENCE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a3c5c215dceb3c87b8032c8b6216899", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LookupTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a3d8e47f59bc49e7a86234a8e99acf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfObject.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic Object removeKey(char[] key)", "signatureAfterChange": "  \tpublic Object removeKey(char[] key)", "diff": ["-\t\t\tif (currentKey.length == keyLength", "-\t\t\t\t&& CharOperation.prefixEquals(currentKey, key)) {", "-\t\t\t\t\tObject value = valueTable[index];", "-\t\t\t\t\telementSize--;", "-\t\t\t\t\tkeyTable[index] = null;", "-\t\t\t\t\tvalueTable[index] = null;", "-\t\t\t\t\trehash();", "-\t\t\t\t\treturn value;", "-\t\t\t\t}", "+\t\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key)) {", "+\t\t\t\tObject value = valueTable[index];", "+\t\t\t\telementSize--;", "+\t\t\t\tkeyTable[index] = null;", "+\t\t\t\tvalueTable[index] = null;", "+\t\t\t\trehash();", "+\t\t\t\treturn value;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a489d432d58ff6785536c5b6d24f38a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tprivate String getCurrentLine(String str, int pos)", "signatureAfterChange": " \t \tprivate String getCurrentLine(String str, int pos)", "diff": ["-\t\t\tif (Strings.isLineDelimiterChar(ch)) {", "+\t\t\tif (Indents.isLineDelimiterChar(ch)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a5979c2bfd4227e089ce07153177760", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "  public void testCompletionMethodDeclaration10() throws JavaModelException", "signatureAfterChange": "  public void testCompletionMethodDeclaration10() throws JavaModelException", "diff": ["-\t\t\"element:clone    completion:protected Object clone() throws CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\t\t\"element:clone    completion:protected Object clone() throws CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a6dfec0fdc4aed3e418365f01d47c8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "commitAfterChange": "2aa78105ee4089b7ff1a9a2c35425f71b0b156d5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r private int matchLevel(NameReference nameRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(NameReference nameRef, boolean resolve)", "diff": ["-\t\t\t\tswitch (qNameRef.bits & Statement.RestrictiveFlagMASK) {\r", "+\t\t\t\tswitch (qNameRef.bits & AstNode.RestrictiveFlagMASK) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a88ea03f2500f6f798a84fb3e7a0dd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticAccessMethodBinding.java", "commitBeforeChange": "3a463f275914c0b0458a281ec5dc56963f900bba", "commitAfterChange": "377a3fde6f55f6083922d74da518425af8bf8632", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void initializeMethodAccessor(MethodBinding targetMethod, boolean isSuperAccess, ReferenceBinding declaringClass)", "signatureAfterChange": " \tpublic void initializeMethodAccessor(MethodBinding targetMethod, boolean isSuperAccess, ReferenceBinding declaringClass)", "diff": ["-", "-public void initializeMethodAccessor(MethodBinding targetMethod, boolean isSuperAccess, ReferenceBinding declaringClass) {", "-\t", "-\tthis.targetMethod = targetMethod;", "-\tthis.modifiers = AccDefault | AccStatic | AccSynthetic;", "-\tSourceTypeBinding declaringSourceType = (SourceTypeBinding) declaringClass;", "-\tSyntheticAccessMethodBinding[] knownAccessMethods = declaringSourceType.syntheticAccessMethods();", "-\tint methodId = knownAccessMethods == null ? 0 : knownAccessMethods.length;", "-\tthis.index = methodId;", "-", "-\tthis.selector = CharOperation.concat(AccessMethodPrefix, String.valueOf(methodId).toCharArray());", "-\tthis.returnType = targetMethod.returnType;", "-\tthis.accessType = isSuperAccess ? SuperMethodAccess : MethodAccess;", "-\t", "-\tif (targetMethod.isStatic()) {", "-\t\tthis.parameters = targetMethod.parameters;", "-\t} else {", "-\t\tthis.parameters = new TypeBinding[targetMethod.parameters.length + 1];", "-\t\tthis.parameters[0] = declaringSourceType;", "-\t\tSystem.arraycopy(targetMethod.parameters, 0, this.parameters, 1, targetMethod.parameters.length);", "-\t}", "-\tthis.thrownExceptions = targetMethod.thrownExceptions;", "-\tthis.declaringClass = declaringSourceType;", "-", "-\t// check for method collision", "-\tboolean needRename;", "-\tdo {", "-\t\tcheck : {", "-\t\t\tneedRename = false;", "-\t\t\t// check for collision with known methods", "-\t\t\tMethodBinding[] methods = declaringSourceType.methods;", "-\t\t\tfor (int i = 0, length = methods.length; i < length; i++) {", "-\t\t\t\tif (this.selector == methods[i].selector && this.areParametersEqual(methods[i])) {", "-\t\t\t\t\tneedRename = true;", "-\t\t\t\t\tbreak check;", "-\t\t\t// check for collision with synthetic accessors", "-\t\t\tif (knownAccessMethods != null) {", "-\t\t\t\tfor (int i = 0, length = knownAccessMethods.length; i < length; i++) {", "-\t\t\t\t\tif (knownAccessMethods[i] == null) continue;", "-\t\t\t\t\tif (this.selector == knownAccessMethods[i].selector && this.areParametersEqual(methods[i])) {", "+\t */", "+\tpublic void initializeMethodAccessor(MethodBinding targetMethod, boolean isSuperAccess, ReferenceBinding declaringClass) {", "+\t\t", "+\t\tthis.targetMethod = targetMethod;", "+\t\tthis.modifiers = AccDefault | AccStatic | AccSynthetic;", "+\t\tSourceTypeBinding declaringSourceType = (SourceTypeBinding) declaringClass;", "+\t\tSyntheticAccessMethodBinding[] knownAccessMethods = declaringSourceType.syntheticAccessMethods();", "+\t\tint methodId = knownAccessMethods == null ? 0 : knownAccessMethods.length;", "+\t\tthis.index = methodId;", "+\t", "+\t\tthis.selector = CharOperation.concat(AccessMethodPrefix, String.valueOf(methodId).toCharArray());", "+\t\tthis.returnType = targetMethod.returnType;", "+\t\tthis.accessType = isSuperAccess ? SuperMethodAccess : MethodAccess;", "+\t\t", "+\t\tif (targetMethod.isStatic()) {", "+\t\t\tthis.parameters = targetMethod.parameters;", "+\t\t} else {", "+\t\t\tthis.parameters = new TypeBinding[targetMethod.parameters.length + 1];", "+\t\t\tthis.parameters[0] = declaringSourceType;", "+\t\t\tSystem.arraycopy(targetMethod.parameters, 0, this.parameters, 1, targetMethod.parameters.length);", "+\t\t}", "+\t\tthis.thrownExceptions = targetMethod.thrownExceptions;", "+\t\tthis.declaringClass = declaringSourceType;", "+\t", "+\t\t// check for method collision", "+\t\tboolean needRename;", "+\t\tdo {", "+\t\t\tcheck : {", "+\t\t\t\tneedRename = false;", "+\t\t\t\t// check for collision with known methods", "+\t\t\t\tMethodBinding[] methods = declaringSourceType.methods;", "+\t\t\t\tfor (int i = 0, length = methods.length; i < length; i++) {", "+\t\t\t\t\tif (this.selector == methods[i].selector && this.areParametersEqual(methods[i])) {", "+\t\t\t\t// check for collision with synthetic accessors", "+\t\t\t\tif (knownAccessMethods != null) {", "+\t\t\t\t\tfor (int i = 0, length = knownAccessMethods.length; i < length; i++) {", "+\t\t\t\t\t\tif (knownAccessMethods[i] == null) continue;", "+\t\t\t\t\t\tif (this.selector == knownAccessMethods[i].selector && this.areParametersEqual(knownAccessMethods[i])) {", "+\t\t\t\t\t\t\tneedRename = true;", "+\t\t\t\t\t\t\tbreak check;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t}", "-\t\tif (needRename) { // retry with a selector & a growing methodId", "-\t\t\tthis.selector(CharOperation.concat(AccessMethodPrefix, String.valueOf(++methodId).toCharArray()));", "-\t\t}", "-\t} while (needRename);", "-", "-\t// retrieve sourceStart position for the target method for line number attributes", "-\tAbstractMethodDeclaration[] methodDecls = declaringSourceType.scope.referenceContext.methods;", "-\tif (methodDecls != null) {", "-\t\tfor (int i = 0, length = methodDecls.length; i < length; i++) {", "-\t\t\tif (methodDecls[i].binding == targetMethod) {", "-\t\t\t\tthis.sourceStart = methodDecls[i].sourceStart;", "-\t\t\t\treturn;", "+\t\t\tif (needRename) { // retry with a selector & a growing methodId", "+\t\t\t\tthis.selector(CharOperation.concat(AccessMethodPrefix, String.valueOf(++methodId).toCharArray()));", "+\t\t\t}", "+\t\t} while (needRename);", "+\t", "+\t\t// retrieve sourceStart position for the target method for line number attributes", "+\t\tAbstractMethodDeclaration[] methodDecls = declaringSourceType.scope.referenceContext.methods;", "+\t\tif (methodDecls != null) {", "+\t\t\tfor (int i = 0, length = methodDecls.length; i < length; i++) {", "+\t\t\t\tif (methodDecls[i].binding == targetMethod) {", "+\t\t\t\t\tthis.sourceStart = methodDecls[i].sourceStart;", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4abdb18e52687fac2bf6f116d0561362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public void test015() throws JavaModelException", "signatureAfterChange": "  public void test015() throws JavaModelException", "diff": ["-\t\t\"BasicTestTypes<TPARAM>[TYPE_REF]{BasicTestTypes, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes<TTPARAM;>;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"BasicTestTypes<TPARAM>[TYPE_REF]{BasicTestTypes, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes<TTPARAM;>;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ac8a2cbaa2401cea050e427da728c5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t\tpublic boolean match(BooleanLiteral node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(BlockComment node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(BlockComment node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae6a228c5de81e6e12c613bac0eb6ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeElementImpl.java", "commitBeforeChange": "a209bfa947ecc1f9f7050d0d851a03f725813152", "commitAfterChange": "730caa252c0447802cd9dbe163cdf0f853f36524", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Override \tpublic TypeMirror getSuperclass()", "signatureAfterChange": "  \t@Override \tpublic TypeMirror getSuperclass()", "diff": ["-\t\treturn _env.getFactory().newDeclaredType(superBinding);", "+\t\treturn _env.getFactory().newTypeMirror(superBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4afd22a25e3699fc71f97fb2af19e1cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/StringLiteral.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic String getLiteralValue()", "signatureAfterChange": "  \tpublic String getLiteralValue()", "diff": ["-\t\t\t\tcase Scanner.TokenNameStringLiteral:", "+\t\t\t\tcase TerminalTokens.TokenNameStringLiteral:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b08b4adb88d2e039dd23687593c6661", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/SourceParameterDeclarationImpl.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public IResource getResource()", "signatureAfterChange": "      public IFile getResource()", "diff": ["-    public IResource getResource(){", "+    public IFile getResource(){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b1d425090ad090e86738312495fde70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected Member(int type, IJavaElement parent, String name)", "signatureAfterChange": " protected Member(int type, JavaElement parent, String name)", "diff": ["-protected Member(int type, IJavaElement parent, String name) {", "+protected Member(int type, JavaElement parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b3428aa0ddbd150634f375a73ea1cde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ASTBasedDeclarationImpl.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public Collection<AnnotationMirror> getAnnotationMirrors()", "signatureAfterChange": "      public Collection<AnnotationMirror> getAnnotationMirrors()", "diff": ["-\t\tfinal IResolvedAnnotation[] instances = getAnnotationInstancesFromAST();", "+\t\tfinal IAnnotationBinding[] instances = getAnnotationInstancesFromAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b3485594c3672495c216542cc0d5e3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "d7e7bb059880a6c87ea3290708d2d0a9f9e7ebe8", "commitAfterChange": "a415220ad0bdc743d286b40ccc481ededfe8132e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tConstant conditionalConstant = condition.conditionalConstant();", "+\t\tConstant conditionalConstant = condition.optimizedBooleanConstant();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b3877bcdae3be7965520d1bacb6e63c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/PreferencesTests.java", "commitBeforeChange": "98f970f58fc61208a8cdd52e3b9981ef32c5937b", "commitAfterChange": "29a8044fc706583901ff89364d428dff04f6a567", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\t \t \tpublic void testFactoryPathEncodingAndDecoding() throws Exception", "signatureAfterChange": "\t \t \tpublic void testFactoryPathEncodingAndDecoding() throws Exception", "diff": ["-\t\tFactoryContainer pluginFactory = FactoryPathUtil.getPluginFactoryContainer(\"org.eclipse.jdt.apt.tests\"); //$NON-NLS-1$", "+\t\tFactoryContainer pluginFactory = FactoryPluginManager.getPluginFactoryContainer(\"org.eclipse.jdt.apt.tests\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b596aaaa6d7e57d78c70a95d6af61e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblemFactory.java", "commitBeforeChange": "e50176ac66d1a7529fcc4f22df4fc6af9ae874e5", "commitAfterChange": "26d0b65ea7fa61139646a894306e08399cfe4e56", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static String[] loadMessageTemplates(Locale loc)", "signatureAfterChange": " public static String[] loadMessageTemplates(Locale loc)", "diff": ["-\tString[] templates = new String[500];", "+\tString[] templates = new String[MAX_MESSAGES];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b6ce7e5a3e851c20718ad0ff1551f07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testRenameIncludedPackage1() throws CoreException", "signatureAfterChange": " public void testRenameIncludedPackage1() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b75a9aac3dd430dada7328c334aa744", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/ProcessorTestStatus.java", "commitBeforeChange": "30a2184af409b8d4a806fe280f3d3747a3fc0ed1", "commitAfterChange": "d1124c61c8f3ff39bbe128bdbccc90a8a92cba7f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static void reset()", "signatureAfterChange": " \tpublic static void reset()", "diff": ["-\t\ts_errorStatus = NO_ERRORS;", "+\t\ts_errorStatus = NOT_RUN;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b77aa2448b7f459480325f406355210", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 207, "methodNumberAfterChange": 207, "signatureBeforeChange": " protected void ignoreInterfaceDeclaration()", "signatureAfterChange": " protected void ignoreInterfaceDeclaration()", "diff": ["-\t// mark fields and initializer with local type mark if needed", "-\tmarkFieldsWithLocalType(typeDecl);", "+\t// mark initializers with local type mark if needed", "+\tmarkInitializersWithLocalType(typeDecl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7a25468bbaffe6aa5f6480bf8ee9ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CodeCorrectionTestsRequestor.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic void acceptField(char[] declaringTypePackageName,char[] declaringTypeName,char[] name,char[] typePackageName,char[] typeName,char[] correctionName,int modifiers,int correctionStart,int correctionEnd)", "signatureAfterChange": " \t \tpublic void acceptField(char[] declaringTypePackageName,char[] declaringTypeName,char[] name,char[] typePackageName,char[] typeName,char[] correctionName,int modifiers,int correctionStart,int correctionEnd)", "diff": ["-\t\tfSuggestions.addElement(new Suggestion(correctionName, correctionStart, correctionEnd));", "+\t\tsuggestions.addElement(new Suggestion(correctionName, correctionStart, correctionEnd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7a5f2e80715a66d36e69805972eeb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchGenericTests.java", "commitBeforeChange": "f6fa3be1145d6296c15fb372e60410ee5b7af8f2", "commitAfterChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprotected void search(String patternString, int searchFor, int limitTo, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "signatureAfterChange": " \tprotected void search(String patternString, int searchFor, int limitTo, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "diff": ["-\t\tsearch(patternString, searchFor, limitTo, ERASURE_RULE, scope, requestor);", "+\t\tsearch(patternString, searchFor, limitTo, matchRule, scope, requestor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b7d7e2eb0beeba6b7f8ae33f7698fb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SingleTypeRequestor.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void acceptType(IType type)", "signatureAfterChange": " public void acceptType(IType type)", "diff": ["-\tfElement= type;", "+\telement= type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b94f91a108997b6ce658e69a0828b7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tASTNode clone0(AST target)", "signatureAfterChange": " \tASTNode clone0(AST target)", "diff": ["-\t\tif (this.ast.apiLevel >= AST.JLS4) {", "+\t\tif (this.ast.apiLevel >= AST.JLS4_INTERNAL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bab159848dbee92a5867d869f7a98cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding checkFieldAccess(BlockScope scope)", "signatureAfterChange": " public TypeBinding checkFieldAccess(BlockScope scope)", "diff": ["-\t\t&& ms.fieldDeclarationIndex != ms.NotInFieldDecl", "+\t\t&& ms.fieldDeclarationIndex != MethodScope.NotInFieldDecl"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bc3517980a3bdd1d8268eef564d78a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic IPackageFragmentRoot getPackageFragmentRoot(String jarPath)", "signatureAfterChange": " \tpublic IPackageFragmentRoot getPackageFragmentRoot(String jarPath)", "diff": ["-\t\treturn getPackageFragmentRoot0(this.canonicalizedPath(new Path(jarPath)).toString());", "+\t\treturn getPackageFragmentRoot0(JavaProject.canonicalizedPath(new Path(jarPath)).toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4be143ecddb04b097dbb907c5b92b992", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexBinaryFolder.java", "commitBeforeChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "commitAfterChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\tString[] paths = index.queryInDocumentNames(\"\"); // all file names //$NON-NLS-1$", "+\t\t\tString[] paths = index.queryDocumentNames(\"\"); // all file names //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4beeca2e11103e1fd45c579bdd692d9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexInput.java", "commitBeforeChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "commitAfterChange": "82730fa91cab84d990d4e3898f46564d654b224e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic abstract IEntryResult[] queryEntriesPrefixedBy(char[] prefix) throws IOException;", "signatureAfterChange": " \tpublic abstract EntryResult[] queryEntriesPrefixedBy(char[] prefix) throws IOException;", "diff": ["-\tpublic abstract IEntryResult[] queryEntries(char[] pattern, int matchRule) throws IOException;", "-\tpublic abstract IEntryResult[] queryEntriesPrefixedBy(char[] prefix) throws IOException;", "+\tpublic abstract EntryResult[] queryEntries(char[] pattern, int matchRule) throws IOException;", "+\tpublic abstract EntryResult[] queryEntriesPrefixedBy(char[] prefix) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c3dec3ab1884a1041e2ed7f62593de7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "c2c9899514741103674136b061d37380904756e0", "commitAfterChange": "1d631cdc6d8aa97d297a027f3883f9c7312c678d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r protected void addDependentsOf(IPath path, boolean hasStructuralChanges)", "signatureAfterChange": "\r \r protected void addDependentsOf(IPath path, boolean hasStructuralChanges)", "diff": ["-\t\tnewState.hasStructuralChanges();\r", "+\t\tnewState.tagAsStructurallyChanged();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c46d23c5840cbbf81216e8a6d87beb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPath.java", "commitBeforeChange": "98f970f58fc61208a8cdd52e3b9981ef32c5937b", "commitAfterChange": "29a8044fc706583901ff89364d428dff04f6a567", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void disablePlugin(String pluginId)", "signatureAfterChange": " \tpublic void disablePlugin(String pluginId)", "diff": ["-\t\tFactoryContainer fc = FactoryPathUtil.getPluginFactoryContainer(pluginId);", "+\t\tFactoryContainer fc = FactoryPluginManager.getPluginFactoryContainer(pluginId);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c4a550e212da81c278ee63cb30d410e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageDeclaration.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c52390bfc3589e88015c7ca9190d0c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void match(TypeReference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(TypeReference node, MatchingNodeSet nodeSet)", "diff": ["-\tif (level >= POTENTIAL_MATCH)", "+\tif (level >= POSSIBLE_MATCH)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c5780541bed8fff34195a23e2d5c81c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": " \tpublic void endVisit(WildcardType node)", "signatureAfterChange": " \tpublic void endVisit(TypeMethodReference node)", "diff": ["+\t */", "+\tpublic void endVisit(TypeMethodReference node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c6b2ddf843fe711f2e0505680eaf9ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SaveIndex.java", "commitBeforeChange": "7139526b453f0e67eab8762699884060db7f0843", "commitAfterChange": "2acf337b771d06ad716c2ae54bdb8443b5b5d1d6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic boolean belongsTo(String jobFamily)", "signatureAfterChange": " \tpublic boolean belongsTo(String jobFamily)", "diff": ["-\t", "-\tpublic boolean belongsTo(String jobFamily) {", "-\t\treturn jobFamily.equals(this.path.segment(0));", "-\t}", "+\t}", "+\tpublic boolean belongsTo(String jobFamily) {", "+\t\treturn jobFamily.equals(this.indexPath.segment(0));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c6c1457723ed0d55503664acd93e320", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptUtil.java", "commitBeforeChange": "98f970f58fc61208a8cdd52e3b9981ef32c5937b", "commitAfterChange": "29a8044fc706583901ff89364d428dff04f6a567", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static AnnotationProcessorFactory getFactoryForAnnotation( \t\t\tfinal String fullyQualifiedAnnotation, \t\t\tfinal IJavaProject jproj)", "signatureAfterChange": " \tpublic static AnnotationProcessorFactory getFactoryForAnnotation( \t\t\tfinal String fullyQualifiedAnnotation, \t\t\tfinal IJavaProject jproj)", "diff": ["-\t\tList<AnnotationProcessorFactory> factories = loader.getFactoriesForProject( jproj );", "+\t\tList<AnnotationProcessorFactory> factories = loader.getJava5FactoriesForProject( jproj );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c760adb4a8f064109579ecdfbe19db5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": "\r final public void ifgt(Label lbl)", "signatureAfterChange": "\r final public void ifgt(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_ifgt, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_ifgt, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c7f7d0d9c8462d0cd2f27c1c3532647", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \t \tprivate void format(TypeDeclaration typeDeclaration)", "diff": ["-\t\tif (class_declaration_brace.equals(FormattingPreferences.NEXT_LINE_SHIFTED)) {", "+\t\tif (class_declaration_brace.equals(DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c87ed7638acb7e1920dbb8340eb922e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testCreateResourceIncludedCompilationUnit2() throws CoreException", "signatureAfterChange": " public void testCreateResourceIncludedCompilationUnit2() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ca989d7c9908f162ddbc415efb5b29d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LabeledStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cae1bc961102e2da0308d80d3385de0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void endVisit(AnnotationQualifiedTypeReference typeRef, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(JavadocArraySingleTypeReference typeRef, BlockScope scope)", "diff": ["+\tpublic void endVisit(JavadocArraySingleTypeReference typeRef, BlockScope scope) {", "-\tpublic void endVisit(AnnotationQualifiedTypeReference typeRef, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cb824df9f15294414fa45c87aa45af7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 799, "methodNumberAfterChange": 799, "signatureBeforeChange": "  \tpublic void testNodeTypeConstants() throws Exception", "signatureAfterChange": "  \tpublic void testNodeTypeConstants() throws Exception", "diff": ["-\t\t\tASTNode.EXTRA_DIMENSION,", "+\t\t\tASTNode.DIMENSION,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cbd2a0d9b2796b256b62365efc92a7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "9fff7ba189be037b4cf4f61956b7e287259b8f6d", "commitAfterChange": "8f52c3e814b7d9e86327e186704f1c7e2be78c75", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateSubRoutineInvocation( \t\t\tBlockScope currentScope, \t\t\tCodeStream codeStream)", "signatureAfterChange": " \tpublic void generateSubRoutineInvocation( \t\t\tBlockScope currentScope, \t\t\tCodeStream codeStream)", "diff": ["-\t\t\tif (currentScope.environment().options.targetJDK < ClassFileConstants.JDK1_5) {", "+\t\t\tif (currentScope.environment().options.targetJDK < ClassFileConstants.JDK_DEFERRED) { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cd51a1344683ab0140ff781b28a2558", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "a8f2b9d6f31a63759a85bef6a1ed8cbb23fbd3fa", "commitAfterChange": "ce41f66e0706b1b71981331d2b2667a0940a3697", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\t\t\t\t\tswitch (ScannerHelper.ObviousIdentCharNatures[c]) {", "+\t\t\t\t\t\t\tswitch (ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c]) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cdb8faae04de9ec46643b70dccba46f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "diff": ["-\t\treturn (constructorDeclaration.bits & ASTNode.HasLocalTypeMASK) != 0; // continue only if it has local type", "+\t\treturn (constructorDeclaration.bits & ASTNode.HasLocalType) != 0; // continue only if it has local type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf59716c4ecbe44875bd397232e2171", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank)", "signatureAfterChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank)", "diff": ["-\tpublic TypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank) {", "+\tpublic ITypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d0a322ba71f65423c7157c3498f9242", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocImplicitTypeReference.java", "commitBeforeChange": "7aa41fe639eb46a740b35e612973cada9ba8267f", "commitAfterChange": "7ec8f457fa5afa1822c5c5a2c51b29731a82c4ce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": " \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\t\treturn this.resolvedType = scope.enclosingSourceType();", "+\t\treturn this.resolvedType = scope.enclosingReceiverType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d32190e5a6f1697e1241dfea7230ff2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "fbf1dc74111046346637967ca91e93e8fc0c5f38", "commitAfterChange": "30b5f4681e6bde6cf7c8af9cdfc4f18b157d7133", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " \tpublic ISearchableNameEnvironment newSearchableNameEnvironment(WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " \tpublic SearchableEnvironment newSearchableNameEnvironment(WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\tpublic ISearchableNameEnvironment newSearchableNameEnvironment(WorkingCopyOwner owner) throws JavaModelException {", "+\tpublic SearchableEnvironment newSearchableNameEnvironment(WorkingCopyOwner owner) throws JavaModelException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d55ca28d61b108510d7a9049df332d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/QualifiedType.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static List propertyDescriptors(int apiLevel)", "signatureAfterChange": " \tpublic static List propertyDescriptors(int apiLevel)", "diff": ["-\t\t\tcase AST.JLS4:", "+\t\t\tcase AST.JLS4_INTERNAL:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4da18d04c4d970818fd3dd60c2da4aeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThrowStatement.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\treturn FlowInfo.DeadEnd;", "+\t\treturn FlowInfo.DEAD_END;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4da63ad66c31a02b62ff856092493179", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 442, "methodNumberAfterChange": 442, "signatureBeforeChange": " \tpublic void test423()", "signatureAfterChange": " \tpublic void test423()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TYPE_DECLARATION_BRACE_POSITION, DefaultCodeFormatterConstants.END_OF_LINE);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_BRACE_POSITION_FOR_TYPE_DECLARATION, DefaultCodeFormatterConstants.END_OF_LINE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4db89851c4b48a1ecb7b528c8fab0c1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testAccessRestriction1() throws Exception", "signatureAfterChange": " public void testAccessRestriction1() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.DISABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.DISABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dbc9d4f56c6d8452695c1282d3b1995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void test030() throws JavaModelException", "signatureAfterChange": " public void test030() throws JavaModelException", "diff": ["-\t\t\"foo[JAVADOC_FIELD_REF]{{@link #foo}, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\"foo[JAVADOC_FIELD_REF]{{@link #foo}, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dca43cf4cbc478be73a18e7a9db308a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 344, "methodNumberAfterChange": 344, "signatureBeforeChange": " \tpublic void test324()", "signatureAfterChange": " \tpublic void test324()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de20a88d2b15cc30833c8d45a811a8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "b5b90ec2f42e0eb7ce3ad684f46b8d872887e632", "commitAfterChange": "9144806e49f76b29608474c4bebb2700b5c20faa", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static void setFactoryPath(IJavaProject jproj, IFactoryPath path)\t \t\t\tthrows CoreException", "signatureAfterChange": " \tpublic static void setFactoryPath(IJavaProject jproj, IFactoryPath path)\t \t\t\tthrows CoreException", "diff": ["-\t\tAnnotationProcessorFactoryLoader.getLoader().reset();", "+\t\tAnnotationProcessorFactoryLoader.getLoader().resetAll();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de4b9aca251d2829cde30db9ed32030", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void locateMatches(SearchDocument[] searchDocuments) throws CoreException", "signatureAfterChange": " public void locateMatches(SearchDocument[] searchDocuments) throws CoreException", "diff": ["-\tif (SearchBasicEngine.VERBOSE) {", "+\tif (BasicSearchEngine.VERBOSE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4de565d2efe13b723395732e3c9ff2f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 246, "methodNumberAfterChange": 246, "signatureBeforeChange": " public void testBug109695g() throws CoreException", "signatureAfterChange": " public void testBug109695g() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"UTF1DSS\", SearchPattern.R_CAMEL_CASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"UTF1DSS\", SearchPattern.R_CAMELCASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dea72caa418799fb738c5760195b26f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelStatus.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic String getString()", "signatureAfterChange": " \tpublic String getString()", "diff": ["-\t\treturn fString;", "+\t\treturn string;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4dff01a0d3cc649cf5374c5f2dcfeeb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e0af19e02e8d5a3763347e5a1da134b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "cc1b983a8e90a6eb8909a42b004cd126e56bf76f", "commitAfterChange": "400176b3d00d9671a0c4aab9bab4779b3ff7bf8e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t    this.genericCast = this.binding.returnType;", "+\t\t\t    this.valueCast = this.binding.returnType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e1aecffe24df539e8affb25941aa42b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testSuggestGetterName002()", "signatureAfterChange": " public void testSuggestGetterName002()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e1d1ce5aa9ee8eb455b783a57409b54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "3a42960d70f16619a40a10161fc61740ab2695a4", "commitAfterChange": "cc929f3469a692f60e0ad9a87acada002c5a602b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void setSource(ICompilationUnit source)", "signatureAfterChange": " \tpublic void setSource(ICompilationUnit source)", "diff": ["-\t\tsetTypeRoot(source);", "+\t\tsetSource(source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e29d7fc67e226eafb3dc6ac18dc8300", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \t\r \tprivate ReferenceBinding findSupertype(TypeReference typeReference)", "signatureAfterChange": "\r \t\r \tprivate ReferenceBinding findSupertype(TypeReference typeReference)", "diff": ["-\t\tcompilationUnitScope().recordReference(compoundName);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(compoundName);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e3ccf81a0f6356b299f309f8d47b950", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate ArrayType(AST ast, int dimensions)", "signatureAfterChange": " \tprivate ArrayType(AST ast, int dimensions)", "diff": ["-\t\t\tthis.dimensions().add(this.ast.newExtraDimension());", "+\t\t\tthis.dimensions().add(this.ast.newDimension());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e45da55b75362536f57f1b12f2415dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t\tpublic boolean match(FieldDeclaration node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(EnhancedForStatement node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(EnhancedForStatement node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e558fc63db6014af02783d8c3ea4535", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "f4680a34e1f2039b2a192d0a537b3157d981aa26", "commitAfterChange": "41f0eedac440a5a7408e664ba09866184ebddd55", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "  \tpublic void setLineSeparatorAndIdentationLevel(DefaultCodeFormatterOptions preferences)", "signatureAfterChange": "  \tpublic void setLineSeparatorAndIdentationLevel(DefaultCodeFormatterOptions preferences)", "diff": ["-\t\tthis.lineSeparator = preferences.line_delimiter;", "+\t\tthis.lineSeparator = preferences.line_separator;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e57ceacce34f7b96b456cd9af38d83e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void setUp() throws Exception", "signatureAfterChange": " protected void setUp() throws Exception", "diff": ["-\tthis.attachSource(this.root, \"/AttachSourceTests/attachsrc.zip\", \"\");", "+\tthis.attachSource(this.pkgFragmentRoot, \"/AttachSourceTests/attachsrc.zip\", \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e585cc573095c147bd221e8f3fc23ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0390be1950bcdfa43b629ba946ffaaaee0d5d33f", "commitAfterChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprivate void formatTypeMembers(TypeDeclaration typeDeclaration)", "signatureAfterChange": " \tprivate void formatTypeMembers(TypeDeclaration typeDeclaration)", "diff": ["-\t\t\t\t\t\t\t\tthis.scribe.printNewLines(newLineBeforeChunk);", "+\t\t\t\t\t\t\t\tthis.scribe.printEmptyLines(newLineBeforeChunk);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e5c319e3b9b88a904e9e793b97360ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "6f4f90e2451f9fcdb6af6941acb2518968bd5fec", "commitAfterChange": "140d5208fae36b92de255acde8dd7fe538818d2b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\tmanager.add((IFile) value, this.project.getFullPath());\r", "+\t\t\t\t\tmanager.addSource((IFile) value, this.project.getFullPath());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e6c335cccb9c37f409a96d3f0dfb1b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testAttachSourceRetrievalMethod() throws JavaModelException", "signatureAfterChange": " public void testAttachSourceRetrievalMethod() throws JavaModelException", "diff": ["-\tIClassFile cf = this.jarRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e8458fa51f543048d600b328a7fc419", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestMixed.java", "commitBeforeChange": "6ee69a27bb90b4501869adce2a7020b0fadb9402", "commitAfterChange": "886d0f0c1c856616883aceae38186164d207f2a8", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic void testBug51529b()", "signatureAfterChange": " \tpublic void testBug51529b()", "diff": ["-\t\tthis.localDocCommentSupport = CompilerOptions.DISABLED;", "+\t\tthis.docCommentSupport = CompilerOptions.DISABLED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e8d1c4c3f38ddbcd59f88d2bd6c5e5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testAccessRestriction8() throws Exception", "signatureAfterChange": " public void testAccessRestriction8() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.ENABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e8f8be1e1a6caa83a65902884ac698d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2c7f17232300c7fbbf0be41f27d83e269dc11422", "commitAfterChange": "4ee7521407adee0dd67769699b7546434316be93", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \t \tprivate void findImportsOfStaticMethods(char[] methodName, ReferenceBinding ref)", "signatureAfterChange": " \t \tprivate void findImportsOfStaticMethods(char[] methodName, ReferenceBinding ref)", "diff": ["-\t\tMethodBinding[] methods = ref.methods();", "+\t\tMethodBinding[] methods = ref.availableMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ea6047e50d080b18a41b56b1af1f3e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void testInvalidTagsFieldErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsFieldErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ea655a641439876d92063d52279e68d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["-\t\tswitch (originalInherited.returnType.leafComponentType().bindingType()) {", "+\t\tswitch (originalInherited.returnType.leafComponentType().kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ea987a405e109a748b20cce118c8532", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Object getDefaultValue()", "signatureAfterChange": "  \tpublic Object getDefaultValue()", "diff": ["-\t\t\treturn ResolvedMemberValuePair.buildDOMValue(this.binding.getDefaultValue(), this.resolver);", "+\t\t\treturn MemberValuePairBinding.buildDOMValue(this.binding.getDefaultValue(), this.resolver);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eb0f57025c5ff56eab71684400d01ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "6f559832866ec7957220224e260ced70fbcf727a", "commitAfterChange": "f3a6f459efd2ac1aed8a2fbc164dee41b4c19dd6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tint operatorSignature = ResolveTypeTables[EQUAL_EQUAL][ (leftType.id << 4) + rightType.id];", "+\t\tint operatorSignature = OperatorSignatures[EQUAL_EQUAL][ (leftType.id << 4) + rightType.id];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ebde53ee677f3129fa1fc74ae075e14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "3d4c80327c4bd6f61a1ef852d9f8cb11ff6d9d62", "commitAfterChange": "a00d0694a5797c69eb50145f1a65c73c676a067b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected Object createTypeReference(int primitiveToken)", "signatureAfterChange": " \tprotected Object createTypeReference(int primitiveToken)", "diff": ["-\t\t\ttypeRef = this.ast.newName(identifiers);", "+\t\t\ttypeRef = this.ast.internalNewName(identifiers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eceb730c0100b01f3525b9c28930f7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15JLS8Test.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void test0050() throws JavaModelException", "signatureAfterChange": " \tpublic void test0050() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(arrayType.getComponentType(), \"String\", source);", "+\t\tcheckSourceRange(arrayType.getElementType(), \"String\", source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ee0783470c1c2c331642394fc33ece7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "a08b4c389632f0f20a50182ded68880addc0de18", "commitAfterChange": "5cb40e1ad24651b50221770b935dfa647cb41f4d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void performDefaults()", "signatureAfterChange": " \tpublic void performDefaults()", "diff": ["-\t\tMap<FactoryContainer, Boolean> defaults = AptConfig.getDefaultFactoryPath(fJProj);", "+\t\tMap<FactoryContainer, Boolean> defaults = FactoryPath.getDefaultFactoryPath(fJProj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ee57458cd932b434a0b5821c68284a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testClassFileGetElementAt() throws JavaModelException", "signatureAfterChange": " public void testClassFileGetElementAt() throws JavaModelException", "diff": ["-\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIClassFile cf = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4eea9ead00c75ef755bbb2cd628c0043", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "013620872bf40676bc99a8d4e511d32c437edce3", "commitAfterChange": "287b4c9e54d4bce062e6eecece35b8e7ce844a76", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void endVisit(NormalAnnotation node)", "signatureAfterChange": " \tpublic void endVisit(Modifier node)", "diff": ["+\t}", "+\tpublic void endVisit(Modifier node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ef5396cd2f5a07f11d20e000279c38b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "bf17807076522b492d9a582c812c5e15d78b5fff", "commitAfterChange": "7499dd3309f66badc0b9a54f55f1bb48d32b67b2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprotected JarPackageFragmentRoot(IPath jarPath, IJavaProject project)", "signatureAfterChange": " \tprotected JarPackageFragmentRoot(IPath jarPath, IJavaProject project)", "diff": ["-\t\tsuper(null, project, jarPath.toString());", "+\t\tsuper(null, project, jarPath.lastSegment());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f083a4579074daccbd4fb285fbc3340", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void analyseCode(ClassScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public void analyseCode(ClassScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f172e800acacdc82c0a0e3abb35c066", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  public void markedAsNullOrNonNullInAssertExpression(LocalVariableBinding local)", "signatureAfterChange": "  public void markedAsNullOrNonNullInAssertExpression(VariableBinding local)", "diff": ["-public void markedAsNullOrNonNullInAssertExpression(LocalVariableBinding local) {", "+public void markedAsNullOrNonNullInAssertExpression(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f20f97d0d30b6e118c5770b13c3d4ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 454, "methodNumberAfterChange": 453, "signatureBeforeChange": " \tpublic void test434()", "signatureAfterChange": " \tpublic void test434()", "diff": ["-\t\tpreferences.indentation_size = 3;", "+\t\tpreferences.tab_size = 3;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f3ec11f60830aac763866adb80e48a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeMirrorImpl.java", "commitBeforeChange": "73197a47274e75e8fe1581fdac3a086fb2ddf471", "commitAfterChange": "340440fc2f9b9eb03b89c385f562976def2c6c0e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic List<? extends AnnotationMirror> getAnnotationMirrors()", "signatureAfterChange": "  \tpublic List<? extends AnnotationMirror> getAnnotationMirrors()", "diff": ["-\t\t\t\t\t\t\t\t_env.getFactory().getAnnotationMirrors(getAnnotationBindings());", "+\t\t\t\t\t\t\t\t_env.getFactory().getAnnotationMirrors(getPackedAnnotationBindings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f5fa334a23266c4b0c36d74ae72bfda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void reportAccurateReference(int sourceStart, int sourceEnd, char[][] qualifiedName, IJavaElement element, int accuracy) throws CoreException", "signatureAfterChange": " public void reportAccurateReference(int sourceStart, int sourceEnd, char[][] qualifiedName, IJavaElement element, int accuracy) throws CoreException", "diff": ["-\tscanner.setSource(this.currentPotentialMatch.getContents());", "+\tscanner.setSource(this.currentPossibleMatch.getContents());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f6e952a569c3a8b1e0b4f48a60a9a2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "90ccf89195ab29ecb5a569cf526f683aefa3263d", "commitAfterChange": "90c4f87ff9590171c32b9a9ab9aa13acdfe2086c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "\r public IJavaElement getSharedWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": "\r public IJavaElement getSharedWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-\t\t\tSystem.out.println(\"Creating shared working copy \" + workingCopy.toDebugString()); //$NON-NLS-1$\r", "+\t\t\tSystem.out.println(\"Creating shared working copy \" + workingCopy.toStringWithAncestors()); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f70ddf5b06169765ae94301aa0337f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tASTParser(int level)", "signatureAfterChange": " \tASTParser(int level)", "diff": ["-\t\t\tcase AST.JLS4:", "+\t\t\tcase AST.JLS4_INTERNAL:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f983ec356d3598e660fcd2d3e0dd6b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "f41df9b6ac9b62f616470e8ec0968732d823137f", "commitAfterChange": "2f379667b4f33f336f0003d6b2911b5403125b74", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ArrayBinding(TypeBinding type, int dimensions, LookupEnvironment environment)", "signatureAfterChange": " \t public ArrayBinding(TypeBinding type, int dimensions, LookupEnvironment environment)", "diff": ["-    \tthis.tagBits |= type.tagBits & (HasTypeVariable | HasWildcard);", "+    \tthis.tagBits |= type.tagBits & (HasTypeVariable | HasDirectWildcard);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fa8ae42e739721be315ba7ba5d3478e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocPackageCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void test021() throws JavaModelException", "signatureAfterChange": "  public void test021() throws JavaModelException", "diff": ["-\t\t\"FIELD[FIELD_REF]{FIELD, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, I, FIELD, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"FIELD[FIELD_REF]{FIELD, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, I, FIELD, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4faf9ea64f6e2303ebc5e853dd11752e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tArrayType(AST ast)", "signatureAfterChange": " \tArrayType(AST ast)", "diff": ["-\t\t\tthis.dimensions().add(this.ast.newExtraDimension());", "+\t\t\tthis.dimensions().add(this.ast.newDimension());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb74d5bdedbfb89513cca358b112738", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST8Test.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " \tpublic void test0126() throws JavaModelException", "signatureAfterChange": " \tpublic void test0126() throws JavaModelException", "diff": ["-\t\tvariableDeclarationFragment.extraDimensions().add(this.ast.newExtraDimension());", "+\t\tvariableDeclarationFragment.extraDimensions().add(this.ast.newDimension());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fc2820c886e6931dd41421a24548303", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentInfo.java", "commitBeforeChange": "4a181894176f3a1eccc3e35147ddca845e353389", "commitAfterChange": "546372dd9318b0aed3b01864163b2d25dd30110a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " Object[] getNonJavaResources(IResource underlyingResource, PackageFragmentRoot rootHandle)", "signatureAfterChange": " Object[] getNonJavaResources(IResource underlyingResource, PackageFragmentRoot rootHandle)", "diff": ["-\t\t\t\t\trootHandle.getExclusionPatterns());", "+\t\t\t\t\trootHandle.fullExclusionPatternChars());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fd7db81701d7cdcbe5b2355c1c71daa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testCreateExcludedPackage() throws CoreException", "signatureAfterChange": " public void testCreateExcludedPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fdadcc3cd86add416203eac1482d1d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic DefaultCodeFormatter()", "signatureAfterChange": " \t \tpublic DefaultCodeFormatter()", "diff": ["-\t\tthis(FormattingPreferences.getDefault(), JavaCore.getOptions());", "+\t\tthis(DefaultCodeFormatterOptions.getDefault(), JavaCore.getOptions());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fee0f38ccde42a79f8d233aa13d4c81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank)", "signatureAfterChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank)", "diff": ["-\tpublic TypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank) {", "+\tpublic ITypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501665869c26ef65e02dbfd10612aecb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 74, "signatureBeforeChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] entries,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] entries,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "diff": ["-\t\tsetRawClasspath(entries, monitor, true, getResolvedClasspath(true));\r", "+\t\tsetRawClasspath(entries, monitor, true, getExpandedClasspath(true));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5017da79bf64e5d41e3276251cfeab86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/InitializationFlowContext.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic InitializationFlowContext( \t\tFlowContext parent, \t\tAstNode associatedNode, \t\tBlockScope scope)", "signatureAfterChange": " \t \tpublic InitializationFlowContext( \t\tFlowContext parent, \t\tAstNode associatedNode, \t\tBlockScope scope)", "diff": ["-\t\t\tFlowInfo.DeadEnd);", "+\t\t\tFlowInfo.DEAD_END);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "501f3a8659f8ebedf665d357a135b9b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50260e61928a57ced516033f6b16abc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t\tpublic boolean match(BooleanLiteral node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(BlockComment node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(BlockComment node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5032eeeb2333bc438614c53a7e962320", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " \t \t \tprotected void setModifiers(EnumDeclaration enumDeclaration, org.eclipse.jdt.internal.compiler.ast.EnumDeclaration enumDeclaration2)", "signatureAfterChange": " \t \t \tprotected void setModifiers(EnumDeclaration enumDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDeclaration2)", "diff": ["-\tprotected void setModifiers(EnumDeclaration enumDeclaration, org.eclipse.jdt.internal.compiler.ast.EnumDeclaration enumDeclaration2) {", "+\tprotected void setModifiers(EnumDeclaration enumDeclaration, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration enumDeclaration2) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50350fb52eb096cd55bb52c0c8230e1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "79857ed757b181d48665a94a07c64e0c91436988", "commitAfterChange": "b4916c8f35b2ab82b89bdd487e86be6ffb499cd9", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tsynchronized IVariableBinding resolveVariable(EnumConstantDeclaration enumConstant)", "signatureAfterChange": " \tsynchronized IVariableBinding resolveVariable(EnumConstantDeclaration enumConstant)", "diff": ["-\t\t\tthis.bindingsToAstNodes.put(variableBinding, node);", "+\t\t\tthis.bindingsToAstNodes.put(variableBinding, enumConstant);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "504e0dcb32026016775bf8d65ba51147", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "89ef11ec011f9af7bdb69bd7a99a99fee0fb8db3", "commitAfterChange": "ba69d22a0556f7a9cfe93e083652f61a196c0285", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "signatureAfterChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "diff": ["-\t\t\t\t\t\tcreateFolder(outputFolder);", "+\t\t\t\t\t\tcreateOutputFolder(outputFolder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5058d83fd863661051cb8633da2b3199", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank)", "signatureAfterChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank)", "diff": ["-\tpublic ITypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank) {", "+\tpublic TypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "505c17ef9294e9881c1cb21beffe509c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall)", "diff": ["-\t\t\t\t\tif (!scope.areTypesCompatible(argTypes[a], method.parameters[a])) {", "+\t\t\t\t\tif (!Scope.areTypesCompatible(argTypes[a], method.parameters[a])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "505f613a550cfe74e17e727e939c35c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  public void test047() throws JavaModelException", "signatureAfterChange": "  public void test047() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "506e3b9a35407d4c10808fb6eef01974", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/BooleanConstant.java", "commitBeforeChange": "91221983c955b9d0c8db212c3f9bfad0ff63717a", "commitAfterChange": "fb3648d5daf5dd036e13dd7df13755e136f238e8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic String stringValue()", "signatureAfterChange": "  \tpublic String stringValue()", "diff": ["-\t\tString s = Util.valueOf(value).toString();", "+\t\tString s = Util.toBoolean(value).toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5087e6a87deefef943cf8cbc5f227296", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnParameterizedQualifiedTypeReference.java", "commitBeforeChange": "159e8ad6d8421b49efbcfb424fe9327481d95b23", "commitAfterChange": "8abe8838e4f5c3f829e8d4a716d1798a8812906f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic boolean isException()", "signatureAfterChange": " \t \tpublic boolean isException()", "diff": ["-\t\treturn this.kind == EXCEPTION;", "+\t\treturn this.kind == K_EXCEPTION;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5090182c03c6afd591baca2e6cf6477d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testCreateExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testCreateExcludedCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5090bb0128ddbfb65affd203a60058f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "79ba8909e6fb493bccdc7e946328fba0e05dda44", "commitAfterChange": "96034fe817e13ad8ad9a79f805301309c3ac46ca", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r public String toString()", "signatureAfterChange": "\r public String toString()", "diff": ["-\t\t\"OverflowingLRUCache \" + this.fillingRate() + \"% full\\n\" + //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\t\"OverflowingLRUCache \" + this.fillingRatio() + \"% full\\n\" + //$NON-NLS-1$ //$NON-NLS-2$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "509332927a9f426ff766b32540a18513", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void testDeltaDiscardNonPrimaryWorkingCopy() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaDiscardNonPrimaryWorkingCopy() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50981291d5b3336891a8eb248a731289", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedTypesPattern.java", "commitBeforeChange": "b34a79aea557f53b7f18bd9181d2f1aa9458b4f9", "commitAfterChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public DeclarationOfReferencedTypesPattern(\r \tchar[] qualification,\r \tchar[] simpleName,\r \tint matchMode, \r \tboolean isCaseSensitive)", "signatureAfterChange": "\r public DeclarationOfReferencedTypesPattern(\r \tchar[] qualification,\r \tchar[] simpleName,\r \tint matchMode, \r \tboolean isCaseSensitive)", "diff": ["-\tObjectSet knownTypes;\r", "+\tHashSet knownTypes;\r", "-\tthis.knownTypes = new ObjectSet();\r", "+\tthis.knownTypes = new HashSet();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50a35752bdb52d7c86897d4e3616e1f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteResourceElementsOperation.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void processElement(IJavaElement element) throws JavaModelException", "signatureAfterChange": " protected void processElement(IJavaElement element) throws JavaModelException", "diff": ["-\t\t\tdeleteResource(element.getCorrespondingResource(), fForce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY);", "+\t\t\tdeleteResource(element.getResource(), fForce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50af46fbe091b12d3c2b0742288f4683", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "87b777c1fc477e9b3f12a1e072f005600f998f84", "commitAfterChange": "f66fb438b9cc0be7e04e5e7cd4ac6af72beb4f11", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " \tpublic void testWkspDomAstCreationJLS2() throws JavaModelException", "signatureAfterChange": " \tpublic void testWkspDomAstCreationJLS2() throws JavaModelException", "diff": ["-\t\trunAstCreation(AST.JLS2);", "+\t\trunAllProjectsAstCreation(AST.JLS2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50b6d8bfc736539296c5736a19422f45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "3a42960d70f16619a40a10161fc61740ab2695a4", "commitAfterChange": "cc929f3469a692f60e0ad9a87acada002c5a602b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void setSource(IClassFile source)", "signatureAfterChange": " \tpublic void setSource(IClassFile source)", "diff": ["-\t\tsetTypeRoot(source);", "+\t\tsetSource(source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50d29dae878a74f4fb9d6033a0e03893", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefMethodErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefMethodErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50f232504cd2c2f3e6bee770c89629da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "6e5ceb8786f5ada5e37df504e04cd8d390bc4075", "commitAfterChange": "27e2724327c75ddbe7646447a4af212947b149ed", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012_compiler_problems_tuning()", "signatureAfterChange": " public void test012_compiler_problems_tuning()", "diff": ["-\t\texpectedProblemAttributes.put(\"DiscouragedInvocationArgumentNotCastable\", new ProblemAttributes(JavaCore.COMPILER_PB_DISCOURAGED_INVOCATION_UNLIKELY_ARGUMENT_NOT_CASTABLE));", "+\t\texpectedProblemAttributes.put(\"DiscouragedInvocationArgumentNotCastable\", new ProblemAttributes(JavaCore.COMPILER_PB_DISCOURAGED_INVOCATION_UNLIKELY_ARGUMENT_TYPE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50f689f74fbbc88c3f5d576201aa498d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void testTypeRefQualifiedAll_MethodParameter() throws CoreException", "signatureAfterChange": " public void testTypeRefQualifiedAll_MethodParameter() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, PARAMETER_TYPE_DECLARATION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());", "+\tsearch(\"*\", TYPE, PARAMETER_DECLARATION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51060346a151853d082864947b848f63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfObject.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic Object get(char[] key)", "signatureAfterChange": "  \tpublic Object get(char[] key)", "diff": ["-\t\t\tif (currentKey.length == keyLength", "-\t\t\t\t&& CharOperation.prefixEquals(currentKey, key))", "+\t\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5107dc0b26e88c91196be577bda1e8e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PolyTypeBinding.java", "commitBeforeChange": "c232f63e38d9fdcfc4841ab866a4e36091735ec4", "commitAfterChange": "8dc325b5ad83fe486573fca06bedec7b37f7c533", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic PolyTypeBinding(PolyExpression expression)", "signatureAfterChange": " \t \tpublic PolyTypeBinding(Expression expression)", "diff": ["-\tpublic PolyTypeBinding(PolyExpression expression) {", "+\tpublic PolyTypeBinding(Expression expression) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "510fbd68c51d38521d14b1f976c1c4a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "aceb05c101263dc060e91421bb0612ca16cf79a8", "commitAfterChange": "64ba92850f447b4ccaa1dbec17b32044cad9470c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void checkTaskTag(int commentStart, int commentEnd)", "signatureAfterChange": " public void checkTaskTag(int commentStart, int commentEnd)", "diff": ["-\t\tint msgStart = nextPos;", "+\t\tint msgStart = i; // to exlude tag use:   int msgStart = nextPos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5139000b52104635ce16da9c1c3d8387", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "6ca82f1a54d472af29c424861c5280a8ebc7b028", "commitAfterChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void match(Expression node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(Expression node, MatchingNodeSet nodeSet)", "diff": ["-\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "+\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "515ff630ad0b9fb1fc9eeff556312b59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SelectionJavadocTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(SelectionJavadocTest.class);", "+\t\treturn buildAllCompliancesTestSuite(SelectionJavadocTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5163eef5dc08f97b13881cadf1e918c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement buildInitialRecoveryState()", "signatureAfterChange": " public RecoveredElement buildInitialRecoveryState()", "diff": ["-\t\t\t\tlastCheckPoint = initializer.bodyStart;\t\t\t\t", "+\t\t\t\tlastCheckPoint = initializer.sourceStart;\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51684d6251c856fa88bc7bef5f5933ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic boolean visit(LocalTypeDeclaration localTypeDeclaration, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(LocalTypeDeclaration localTypeDeclaration, BlockScope scope)", "diff": ["-\t\tpatternLocator.match(localTypeDeclaration, matchSet);", "+\t\tpatternLocator.match(localTypeDeclaration, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5178a9cb1239729033d7dd56d677506b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tvoid setLineEndTable(int[] lineEndTable)", "signatureAfterChange": " \tvoid setLineEndTable(int[] lineEndTable)", "diff": ["-\t\tmodifying();", "+\t\t// alternate root is *not* considered a structural property", "+\t\t// but we protect them nevertheless", "+\t\tcheckModifiable();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5186b3255923935f9fe8ca6947406011", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tpublic boolean visit(AnnotationArraySingleTypeReference typeRef, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(JavadocQualifiedTypeReference typeRef, BlockScope scope)", "diff": ["-\tpublic boolean visit(AnnotationArraySingleTypeReference typeRef, BlockScope scope) {", "+\tpublic boolean visit(JavadocQualifiedTypeReference typeRef, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5189257cd3d4ed6ebff2833bb4f85c81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/TypeNameMatchRequestorWrapper.java", "commitBeforeChange": "e4f6d0091f68bf4b6ecb46943ad5d4d6a5ce0095", "commitAfterChange": "3a73dbc8d9839c0eb87857ef97f640371d15a626", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public TypeNameMatchRequestorWrapper(TypeNameMatchRequestor requestor, IJavaSearchScope scope)", "signatureAfterChange": "  public TypeNameMatchRequestorWrapper(TypeNameMatchRequestor requestor, IJavaSearchScope scope)", "diff": ["-\tif (!(scope instanceof JavaSearchScope)) {", "+\tif (!(scope instanceof AbstractJavaSearchScope)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51964430eafbe528022a279070460478", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "0b996c62d78a14d0f0ee5313e3a85270bb3aeb0f", "commitAfterChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic boolean hasGeneratedSourceFiles()", "signatureAfterChange": " \tpublic boolean hasGeneratedSourceFiles()", "diff": ["-\tpublic boolean hasGeneratedSourceFiles(){ return !_allGeneratedFiles.isEmpty();  }", "+\tpublic boolean hasGeneratedSourceFiles(){ return !_allGeneratedSourceFiles.isEmpty();  }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51a90c8df1f3df8ffa0a3de9b912ec92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t\tpublic boolean match(DoStatement node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(UnionType node, Object other)", "diff": ["+\t\tpublic boolean match(UnionType node, Object other) {", "+\t\t\treturn standardBody(node, other, this.superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51ae9786b996d21da7d6f11a623fbbbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public TypeBinding computeBoxingType(TypeBinding type)", "signatureAfterChange": " public TypeBinding computeBoxingType(TypeBinding type)", "diff": ["-\t\tcase Binding.INTERSECTION_CAST_TYPE:", "+\t\tcase Binding.INTERSECTION_TYPE18:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51b7a6c444d4e95b1f0bfa9bbc9268a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "89b15ba6d3aa28748d29d9d1d4b083699e7539bb", "commitAfterChange": "4a19373fcf0b223c67accf2e0e240651b8f7bc94", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject3() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject3() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_BUILDPATH)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51dd6b381001c0209b1872c3a4c7a695", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tpublic static final Constant computeConstantOperationOR_OR(Constant left, int leftId, Constant right, int rightId)", "signatureAfterChange": " \t \tpublic static final Constant computeConstantOperationOR_OR(Constant left, int leftId, Constant right, int rightId)", "diff": ["-\t\treturn Constant.fromValue(left.booleanValue() || right.booleanValue());", "+\t\treturn BooleanConstant.fromValue(left.booleanValue() || right.booleanValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51f0b2cd8a4038600e1f528563e446b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "e1051acac48de2e59e4c3d2d0f46898b4067bf9a", "commitAfterChange": "25dbd9e17c7b6920dccf1b458296dbbe00f382de", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t\tpublic boolean visit(PackageQualifiedType node)", "signatureAfterChange": " \t\tpublic boolean visit(NameQualifiedType node)", "diff": ["-\t\tpublic boolean visit(PackageQualifiedType node) {", "+\t\tpublic boolean visit(NameQualifiedType node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5210771ec10fb42173481f0a2506e37c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "74638c6ba2ff749df371c0b7b5765b684e3c7bae", "commitAfterChange": "b7b6a243304e66fe9d0d477b8b6306031c8fd484", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  private void writeRestriction(AccessRuleSet accessRuleSet, DataOutputStream out) throws IOException", "signatureAfterChange": "  private void writeRestriction(AccessRuleSet accessRuleSet, DataOutputStream out) throws IOException", "diff": ["-\t\t\t\tout.writeInt(accessRule.severity);", "+\t\t\t\tout.writeInt(accessRule.problemId);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5217eb145cfa56b639f12683afb1056f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " public void test111() throws JavaModelException", "signatureAfterChange": " public void test111() throws JavaModelException", "diff": ["-\t\t\t\"ZBasicTestTypes[JAVADOC_TYPE_REF]{{@link ZBasicTestTypes}, javadoc.types, Ljavadoc.types.ZBasicTestTypes;, null, null, \"+this.positions+R_DICNRIT+\"}\"", "+\t\t\t\"ZBasicTestTypes[JAVADOC_TYPE_REF]{{@link ZBasicTestTypes}, javadoc.types, Ljavadoc.types.ZBasicTestTypes;, null, null, \"+this.positions+R_DRICNRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5220beaaca9b2fec4143615ed79cea8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementBuilder.java", "commitBeforeChange": "92a1bed0a525f065b3afa8ca4370b68c7dfc54cc", "commitAfterChange": "b6e5ae943550075226ab72b52ecddee830556320", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void enterInterface( \t\tint declarationStart, \t\tint modifiers, \t\tchar[] name, \t\tint nameSourceStart, \t\tint nameSourceEnd, \t\tchar[][] superinterfaces)", "signatureAfterChange": " \tpublic void enterInterface( \t\tint declarationStart, \t\tint modifiers, \t\tchar[] name, \t\tint nameSourceStart, \t\tint nameSourceEnd, \t\tchar[][] superinterfaces)", "diff": ["-\t\t\t\trecordLastLineNumber(declarationStart);", "+\t\t\t\trecordLastLineNumber(nameSourceStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5232b8dcc8e1b3562ad59bae37ab67cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public IJavaElement[] codeSelect(String codeSnippet, int offset, int length) throws JavaModelException", "signatureAfterChange": "\r public IJavaElement[] codeSelect(String codeSnippet, int offset, int length) throws JavaModelException", "diff": ["-\t\tJavaModelManager.getOptions()\r", "+\t\tJavaCore.getOptions()\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5234673d7f1550f7817ef6369ec41b5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "d168d92f8c83bd9d84b7f6639f5b38b88fe1d1b6", "commitAfterChange": "02ccd94f273725b0397f84578d3996b081b8d7d7", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52367ec48779feb3c36fa0861940b5d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "7480a7a028b761dd989d906922ba7da2f58b3ecc", "commitAfterChange": "5f48b836100d16675ff9516915919cff43a3aa50", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static ICodeFormatter createDefaultCodeFormatter(Map options)", "signatureAfterChange": " \tpublic static ICodeFormatter createDefaultCodeFormatter(Map options)", "diff": ["-\t\t\tcodeFormatter = new NewCodeFormatter();", "+\t\t\tcodeFormatter = new DefaultCodeFormatter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "523a8a2928a00f693e773e2c1df72fc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public SyntheticFieldBinding addSyntheticFieldForSwitchEnum(char[] fieldName, String key)", "signatureAfterChange": " public SyntheticFieldBinding addSyntheticFieldForSwitchEnum(char[] fieldName, String key)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "525352ea6d6d9663d25adcea97198156", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_5.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_5);", "+\t\treturn buildMinimalComplianceTestSuite(testClass(), F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5256de451ea7cf2650cd4f55dabe2268", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleType.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static List propertyDescriptors(int apiLevel)", "signatureAfterChange": " \tpublic static List propertyDescriptors(int apiLevel)", "diff": ["-\t\t\tcase AST.JLS4:", "+\t\t\tcase AST.JLS4_INTERNAL:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5258fa87c0a0475761253a277b82d442", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "a8ebe98c7b687ea450305732efa25afb0944336e", "commitAfterChange": "96a09d96e56ab454cb92b7163871c6f3413e482e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  final public boolean isDefinitelyAssigned(LocalVariableBinding local)", "signatureAfterChange": "  final public boolean isDefinitelyAssigned(LocalVariableBinding local)", "diff": ["-\tif ((this.tagBits & UNREACHABLE) != 0 && (local.declaration.bits & ASTNode.IsLocalDeclarationReachable) != 0) {", "+\tif ((this.tagBits & UNREACHABLE_OR_DEAD) != 0 && (local.declaration.bits & ASTNode.IsLocalDeclarationReachable) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "528b2f8f87907720230cc7c3d8e8e9ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "8245bd73c0aef7bf5f6de5def8941104b56db6f7", "commitAfterChange": "79409f1d9ef0d6d5db654afe6f7513cc394afcd6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\tunitInfo.fTimestamp = ((IFile)underlyingResource).getModificationStamp();", "+\tunitInfo.timestamp = ((IFile)underlyingResource).getModificationStamp();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "528c86ee3cdd0d2518c22d3dd4cf40c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic synchronized void enable()", "signatureAfterChange": " \tpublic synchronized void enable()", "diff": ["-\t\t\tJobManager.verbose(\"ENABLING  background indexing\"); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"ENABLING  background indexing\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "528d55da68554eb699bd59393c260fe3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileObject.java", "commitBeforeChange": "559e5f2f8f5db2c53b837aedd1782f0020008093", "commitAfterChange": "a256ec457e5133c78e70ccd040a0f76b1f8e178c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t@Override \tpublic CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException", "signatureAfterChange": " \t@Override \tpublic CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException", "diff": ["-\t\treturn Util.getCharContents(this, ignoreEncodingErrors, org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(this.f), this.charset.toString());", "+\t\treturn Util.getCharContents(this, ignoreEncodingErrors, org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(this.f), this.charset.name());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "528f710dd5bbbf9044b27c2f8a2c4a29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator)", "signatureAfterChange": " \t \tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator)", "diff": ["-\tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator) {", "+\tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ab32c0d3d1623056214de364f81c33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " boolean isUnsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " boolean isUnsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["-\t\t&& currentMethod.returnType.erasure().findSuperTypeWithSameErasure(inheritedMethod.returnType.erasure()) != null) {", "+\t\t&& currentMethod.returnType.erasure().findSuperTypeOriginatingFrom(inheritedMethod.returnType.erasure()) != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b9bf24364bd9dc93939bff69bfce98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "c99d716fa975f313809c9a758c093b0027fd52fe", "commitAfterChange": "cb63167d7ae8e51f68c8f4ae8680682adf1ffd54", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public int match(MessageSend node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(LocalDeclaration node, MatchingNodeSet nodeSet)", "diff": ["+public int match(LocalDeclaration node, MatchingNodeSet nodeSet) {", "+\t// each subtype should override if needed", "+\treturn IMPOSSIBLE_MATCH;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52bbbdc00e82c74ed564d6e6ae52bb0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "e6009de9b4d4a2d7c4c60a3948647861fa518186", "commitAfterChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": "  \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\t\t\t\tif (((ClassScope) scope).detectCycle(this.resolvedType, this, null)) // must connect hierarchy to find inherited member types", "+\t\t\t\tif (((ClassScope) scope).detectHierarchyCycle(this.resolvedType, this, null)) // must connect hierarchy to find inherited member types"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52bf25355eab61063d6b0e0ece7e52df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cff20a526b50465a2f348a1a5575e634a801a7d8", "commitAfterChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "diff": ["-\t\tint extraDimensions = getExtraDimension();", "+\t\tint extraDimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52c5db02307550e9689627f77d01ce5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " protected void consumeClassHeaderName()", "signatureAfterChange": " protected void consumeClassHeaderName()", "diff": ["-\t\tmarkCurrentMethodWithLocalType();", "+\t\tmarkEnclosingMemberWithLocalType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52c6d97060499605b934f095c87ec19c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testNestedSourceFolder1() throws CoreException", "signatureAfterChange": " public void testNestedSourceFolder1() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52da042b6a8dc7fd9663d81d83820cc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuiteWithMinimalCompliance(testClass(), F_1_4);", "+\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52ea027bd37b23901942bdc9fa26311e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InternalHexFloatTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_5);", "+\t\treturn buildMinimalComplianceTestSuite(testClass(), F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52f475b63716150b7c1c3d8c4524939a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \r \tpublic final ReferenceBinding getJavaLangClass()", "signatureAfterChange": "\r \r \tpublic final ReferenceBinding getJavaLangClass()", "diff": ["-\t\tcompilationUnitScope().recordReference(JAVA_LANG_CLASS);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(JAVA_LANG_CLASS);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52fef86c8a0d5203133ebfd345cdc252", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope scope)", "diff": ["-public class TypeDeclarationVisitor extends AbstractSyntaxTreeVisitorAdapter {", "-\tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope) {", "-\t\tReferenceBinding binding = typeDeclaration.binding;", "-\t\tif (SuperTypeNamesCollector.this.matches(binding))", "-\t\t\tSuperTypeNamesCollector.this.collectSuperTypeNames(binding);", "-\t\treturn true;", "-\t}", "+public class TypeDeclarationVisitor extends ASTVisitor {", "+\tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5303a8b6cdc73252bbca57965cd0a8b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Initializer.java", "commitBeforeChange": "f9a4c5f780ccc033033669bed4f77a44848743bc", "commitAfterChange": "19bb48af1dec4043850b84028c761722ecbdc87d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void traverse(IAbstractSyntaxTreeVisitor visitor, MethodScope scope)", "signatureAfterChange": "  \tpublic void traverse(IAbstractSyntaxTreeVisitor visitor, MethodScope scope)", "diff": ["-\t\tvisitor.visit(this, scope);", "+\t\tvisitor.endVisit(this, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "530a11a89c20ecb45e5bac48c26262bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "ec1408476a66b2a958a4e514cbefd2cf0438efc9", "commitAfterChange": "593b7c498e35f1adb3620eff493d0f4b5e771b68", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "signatureAfterChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "diff": ["-\t\treturn (isConditionTrue || isConditionOptimizedTrue) && (this.action == null || !this.action.breaksOutOfLoop());", "+\t\treturn (isConditionTrue || isConditionOptimizedTrue) && (this.action == null || !this.action.breaksOut());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "530fe93a812d76c8ea55f89bd5083b0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": "  \tpublic void test147()", "signatureAfterChange": "  \tpublic void test147()", "diff": ["-\t\tpreferences.insert_space_before_assignment_operators = false;", "+\t\tpreferences.insert_space_before_assignment_operator = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5311c030a5ceebfbe6a856a5068c5056", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": "\r final public void if_acmpeq(Label lbl)", "signatureAfterChange": "\r final public void if_acmpeq(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_if_acmpeq, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_if_acmpeq, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "533073ffb931235915fe63d5293c00e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptProject.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void projectClosed()", "signatureAfterChange": " \tpublic void projectClosed()", "diff": ["-\t\t_gfm.discardWorkingCopyState();", "+\t\t_gfm.projectClosed();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "533611b29e64f8d4a4446b67baf562cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testRemoveInclusionOnCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRemoveInclusionOnCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "533796432cb4a0c60e14a2455ee3ac3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 399, "methodNumberAfterChange": 399, "signatureBeforeChange": " \tpublic void test380()", "signatureAfterChange": " \tpublic void test380()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, \"4\");", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, \"4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "533b1efa0d064f7cc95fb35886ec3434", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tBinding existingVariable = scope.getBinding(name, BindingIds.VARIABLE, this, false /*do not resolve hidden field*/);", "+\t\tBinding existingVariable = scope.getBinding(name, Binding.VARIABLE, this, false /*do not resolve hidden field*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "533e6a10ffa7f18dd77752de75428f67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchGenericTests.java", "commitBeforeChange": "f6fa3be1145d6296c15fb372e60410ee5b7af8f2", "commitAfterChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected void search(IJavaElement element, int limitTo, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "signatureAfterChange": " \tprotected void search(IJavaElement element, int limitTo, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "diff": ["+\t */", "-\t\tsearch(element, limitTo, ERASURE_RULE, scope, requestor);", "+\t\tsearch(element, limitTo, matchRule, scope, requestor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5342c6186815065983fb7a48cec119f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "b62a1c02d1cac5bc56799a98df58d39d3e512bc5", "commitAfterChange": "073664afca32defc5172330f897e41d2a0156071", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tscope.problemReporter().incompatibleTargetForAnnotation(this);", "+\t\t\t\tscope.problemReporter().disallowedTargetForAnnotation(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53544123ff555269ab2b1700c2730d45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "10518f28338383dcf260412fe5f8c8c5e1a47294", "commitAfterChange": "fd28a44502a8841bfde7f574b37611ca063f4958", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testGetUnderlyingResource() throws CoreException", "signatureAfterChange": " public void testGetUnderlyingResource() throws CoreException", "diff": ["-\t\tassertEquals(\"Unexpected underlying resource 2\", null, copy.getBuffer().getUnderlyingResource());", "+\t\tassertEquals(\"Unexpected underlying resource 2\", file, copy.getBuffer().getUnderlyingResource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "535e408602615bd66ef3a93c3a02b640", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tMethodDeclaration(AST ast)", "signatureAfterChange": " \tMethodDeclaration(AST ast)", "diff": ["-\t\t\tthis.extraDimensionInfos = new ASTNode.NodeList(EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\t\tthis.extraDimensions = new ASTNode.NodeList(EXTRA_DIMENSION_INFOS_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "536758d93b1524d99883c10cd2fb3706", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "d7e7bb059880a6c87ea3290708d2d0a9f9e7ebe8", "commitAfterChange": "a415220ad0bdc743d286b40ccc481ededfe8132e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tConstant opConstant = left.conditionalConstant();", "+\t\tConstant opConstant = left.optimizedBooleanConstant();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5367e8cf736fdaa722d874a1ee1fa6a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests_1_5.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 219, "methodNumberAfterChange": 219, "signatureBeforeChange": " public void test0215() throws JavaModelException", "signatureAfterChange": " public void test0215() throws JavaModelException", "diff": ["-\t\t\t\t\"foo[METHOD_DECLARATION]{public <M extends test0215.SuperClass<Z>> test0215.SuperClass<?> foo(test0215.p.ParamClass.MemberParamClass<? super Z> p1, int p2) throws Exception, Ltest0215.SuperClass<TZ;>;, <M:Ltest0215.SuperClass<TZ;>;>(Ltest0215.p.ParamClass$MemberParamClass<-TZ;>;I)Ltest0215.SuperClass<*>;, foo, (p1, p2), \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_NON_STATIC_OVERIDE + R_NON_RESTRICTED) + \"}\",", "+\t\t\t\t\"foo[METHOD_DECLARATION]{public <M extends test0215.SuperClass<Z>> test0215.SuperClass<?> foo(test0215.p.ParamClass.MemberParamClass<? super Z> p1, int p2) throws Exception, Ltest0215.SuperClass<TZ;>;, <M:Ltest0215.SuperClass<TZ;>;>(Ltest0215.p.ParamClass$MemberParamClass<-TZ;>;I)Ltest0215.SuperClass<*>;, foo, (p1, p2), \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME + R_METHOD_OVERIDE + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "537678ad400e0d3634b12988b1682fec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationFragment.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "signatureAfterChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "diff": ["-\t\t\t\tsetExtraDimensions(value);", "+\t\t\t\tinternalSetExtraDimensions(value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5381ddc513637161698e8ca6aed26c74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public void markPotentiallyUnknownBit(LocalVariableBinding local)", "signatureAfterChange": "  public void markPotentiallyUnknownBit(VariableBinding local)", "diff": ["-public void markPotentiallyUnknownBit(LocalVariableBinding local) {", "+public void markPotentiallyUnknownBit(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53910e74e91c2c33fc68a68b1b5d491e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultValuePairBinding.java", "commitBeforeChange": "65014b9edcd64bc51154fcb1b47074eec77a5977", "commitAfterChange": "7109b1b8695adc90efc89b381fbef11f66adc5d7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic Object getValue()", "signatureAfterChange": "  \tpublic Object getValue()", "diff": ["-\t\treturn this.domValue;", "+\t\treturn this.value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53962f32c9ff673721ca2d640c89037b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java", "commitBeforeChange": "5c72ddaa5e79d3bcf534f5780ca88a7a97636e7a", "commitAfterChange": "488a4d6e7cacdc0e333c16a8fdbbfb759cc631cd", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void test1001() throws JavaModelException", "signatureAfterChange": " public void test1001() throws JavaModelException", "diff": ["-\tassertEquals(\"unexpected generated by attribute\", \"missing\", problems[0].getGeneratedBy());", "+\tassertEquals(\"unexpected generated by attribute\", \"missing\", problems[0].getSourceId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "539b9c4edd7099f85810c18039c0c705", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic Object getConstantValue()", "signatureAfterChange": " \tpublic Object getConstantValue()", "diff": ["-\t\t\tcase TypeIds.T_String:", "+\t\t\tcase TypeIds.T_JavaLangString:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53aedc499333c30d2a60deede791345e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "03026f75f39f11c89ea1f29e4a5f2b9760be3045", "commitAfterChange": "fa3a52963a70298064a79818b9188ed1e3795a34", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic ConstructorDeclaration parseStatements(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "signatureAfterChange": " \t \tpublic ConstructorDeclaration parseStatements(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "diff": ["-\t\tparser.scanner.setSource(source);", "+\t\tparser.scanner.setSource(compilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53b6d94afda89f2533170107a8cc0209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchGenericTests.java", "commitBeforeChange": "ff4953718f4a4fa66bb0922d1821b22a0e2fdd84", "commitAfterChange": "b48f366c7cd622655a48ea734bdcd0016d20ec8b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void assertSearchResults(String message, String expected, Object collector)", "signatureAfterChange": " \tprotected void assertSearchResults(String message, String expected, JavaSearchResultCollector collector)", "diff": ["-\tprotected void assertSearchResults(String message, String expected, Object collector) {", "+\tprotected void assertSearchResults(String message, String expected, JavaSearchResultCollector collector) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53d1be77c9b2945c83de22baada0b410", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "7b0f09fd73b49ba4dc507ba4a634d425ab3e92c2", "commitAfterChange": "90ccf89195ab29ecb5a569cf526f683aefa3263d", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "\r public IJavaElement getSharedWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": "\r public IJavaElement getSharedWorkingCopy(IProgressMonitor pm, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-\t\t\tSystem.out.println(\"Incrementing use count of shared working copy \" + workingCopy.toDebugString()); //$NON-NLS-1$\r", "+\t\t\tSystem.out.println(\"Incrementing use count of shared working copy \" + workingCopy.toStringWithAncestors()); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53e5c04bd01ad33d2424bd116b3f1e06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "9fb326cf9292ef697cc0b0a821a4d5b0ffa7d58e", "commitAfterChange": "0a632290335585dcfcbc973314f95aa73bf77586", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "signatureAfterChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "diff": ["-\t\t\tMethodBinding[] existingMethods = receiverType.methods();\r", "+\t\t\tMethodBinding[] existingMethods = receiverType.availableMethods();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "540157e3ce3f2018dc5c12069f47d864", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(javadocTestClass());", "+\t\treturn buildAllCompliancesTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "540a755f404e7e6c8cad8cb257bb5d31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void test_nonnull_parameter_008()", "signatureAfterChange": " public void test_nonnull_parameter_008()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5414d445f997f9a94885cf001fee2570", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "c0e1e1c2d0d55cd15c5294fbd89785d2ab8aa5fc", "commitAfterChange": "985d711c4d0025a5a5339070a94d4c12c56e272f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, RawTypeBinding rawType, LookupEnvironment environment)", "signatureAfterChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, RawTypeBinding rawType, LookupEnvironment environment)", "diff": ["-\t\t\trawArguments[i] = originalVariables[i].erasure();", "+\t\t\trawArguments[i] = originalVariables[i].upperBound();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5416d4823582ffae49df11273dde3714", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchParticipant.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic abstract void indexDocument(SearchDocument document, String indexPath);", "signatureAfterChange": " \tpublic abstract void indexDocument(SearchDocument document, IPath indexPath);", "diff": ["-\tpublic abstract void indexDocument(SearchDocument document, String indexPath);", "+\tpublic abstract void indexDocument(SearchDocument document, IPath indexPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "546b960c69d13f58e768b3cf37a5040f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "309be04a155363e9f398875d6734d13ff5334b6c", "commitAfterChange": "6b58c2063066f4462a27490669b336c2263fae86", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void reportDeclaration(TypeBinding typeBinding, int maxType, MatchLocator locator, SimpleSet knownTypes) throws CoreException", "signatureAfterChange": " protected void reportDeclaration(ReferenceBinding typeBinding, int maxType, MatchLocator locator, SimpleSet knownTypes) throws CoreException", "diff": ["-protected void reportDeclaration(TypeBinding typeBinding, int maxType, MatchLocator locator, SimpleSet knownTypes) throws CoreException {", "+protected void reportDeclaration(ReferenceBinding typeBinding, int maxType, MatchLocator locator, SimpleSet knownTypes) throws CoreException {", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "546e736892697c5312cdc693a6c046f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "d36a5b020e7b8fc57d912810db0ffb9dd045eb9a", "commitAfterChange": "1d6474f198cfda0185e1f27f180063cfe10c6940", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration process( \t\t\tCompilationUnit unitElement, \t\t\tSourceElementParser parser, \t\t\tWorkingCopyOwner workingCopyOwner, \t\t\tHashMap problems, \t\t\tboolean creatingAST, \t\t\tint reconcileFlags, \t\t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration process( \t\t\tCompilationUnit unitElement, \t\t\tSourceElementParser parser, \t\t\tWorkingCopyOwner workingCopyOwner, \t\t\tHashMap problems, \t\t\tboolean creatingAST, \t\t\tint reconcileFlags, \t\t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\t\t\tCategorizedProblem[] unitProblems = unitResult.getProblems();", "+\t\t\t\tCategorizedProblem[] unitProblems = unitResult.getCUProblems();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5473552ea950f5141b3e5c7ba9f1f8ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "66cd4232d0ab1e96e3a07f02c56b8bad9d7784af", "commitAfterChange": "c4f302586af8fb051e0ee3dd72d43fa433091810", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void acceptInterface(char[] packageName, char[] interfaceName, boolean needQualification)", "signatureAfterChange": "\r public void acceptInterface(char[] packageName, char[] interfaceName, boolean needQualification)", "diff": ["-\tacceptType(packageName, interfaceName, INameLookup.ACCEPT_INTERFACES, needQualification);\r", "+\tacceptType(packageName, interfaceName, NameLookup.ACCEPT_INTERFACES, needQualification);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54803153fe3df8e0a7acf7e6a8c3acce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuite(testClass());", "+\t\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "548c81d3d83793071c31888ba9017cf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": " \tpublic void testSuperConstructorInvocation()", "signatureAfterChange": " \tpublic void testSuperConstructorInvocation()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "549f9e09d87cd31560e9380b7fa88c17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void endVisit(AnnotationArraySingleTypeReference typeRef, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(JavadocQualifiedTypeReference typeRef, BlockScope scope)", "diff": ["-\tpublic void endVisit(AnnotationArraySingleTypeReference typeRef, BlockScope scope) {", "+\tpublic void endVisit(JavadocQualifiedTypeReference typeRef, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a7549d787654cc93c7e9836404f7d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void test105() throws JavaModelException", "signatureAfterChange": " public void test105() throws JavaModelException", "diff": ["-\t\t\t\"foo[JAVADOC_METHOD_REF]{{@link ZBasicTestTypes#foo()}, Ljavadoc.types.ZBasicTestTypes;, ()V, foo, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\t\"foo[JAVADOC_METHOD_REF]{{@link ZBasicTestTypes#foo()}, Ljavadoc.types.ZBasicTestTypes;, ()V, foo, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54a9759c82c0a1ade74363f48be036a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentInfo.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r protected void setEntryNames(Vector entries)", "signatureAfterChange": "\r protected void setEntryNames(ArrayList entries)", "diff": ["-protected void setEntryNames(Vector entries) {\r", "+protected void setEntryNames(ArrayList entries) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54ac6bd455cefec84f065bf2236e4c8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "60205bed5116ad3496dacec47d060779de36e647", "commitAfterChange": "af3a6832e3b1c1003f856c7a02d77d240881ed44", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r protected WorkingCopy(IPackageFragment parent, String name, IBufferFactory bufferFactory)", "signatureAfterChange": "\r protected WorkingCopy(IPackageFragment parent, String name, IBufferFactory bufferFactory)", "diff": ["-\tthis.managedCount = 1;\r", "+\tthis.useCount = 1;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54af505edb66b06d3f3d86fb327b4af8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BufferCache.java", "commitBeforeChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "commitAfterChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected boolean close(LRUCacheEntry entry)", "signatureAfterChange": " protected boolean close(LRUCacheEntry entry)", "diff": ["-\tIBuffer buffer= (IBuffer) entry._fValue;", "+\tIBuffer buffer= (IBuffer) entry.value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54b34ec1cf223e7412905e0d803c66ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "28020d0b0ceb0e665c1071bfd968796eb9e2e394", "commitAfterChange": "def990b8509828ed437909a92c80eeb89428931a", "methodNumberBeforeChange": 621, "methodNumberAfterChange": 621, "signatureBeforeChange": " \tpublic void test606()", "signatureAfterChange": " \tpublic void test606()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_EXPRESSION_IN_RETURN, JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_PARENTESIZED_EXPRESSION_IN_RETURN, JavaCore.DO_NOT_INSERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54b986d9a1fe8cabcaf26c12bf80bc33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6ed6becc4fd53e7d1da742b5c31941d1e72ebac3", "commitAfterChange": "5dcefe623702748a359807058d8605577453405d", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\tcase ScannerHelper.C_LETTER :", "+\t\t\t\t\t\t\tcase ScannerHelper.C_IDENT_PART :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54bf3c1c5f2c65e21e8240edb78bf7eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0)\treturn;", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0)\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55000fb4d543beb6c7fe790b7f477452", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "24d2b526806e9f4be8e8354c9cfa88d403c9a6eb", "commitAfterChange": "d53a2d819e95fc8b3e7890836ae6fc96fe99691f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate Map getDefaultCompilerOptions()", "signatureAfterChange": "  \tprivate Map getDefaultCompilerOptions()", "diff": ["-\t\t\toptionsMap.put(CompilerOptions.OPTION_ReportSuperfluousSemicolon, CompilerOptions.IGNORE);", "+\t\t\toptionsMap.put(CompilerOptions.OPTION_ReportEmptyStatement, CompilerOptions.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "550510852adaa951d3a89539388bcabc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "031774399eed50847f433b5425b7551aed0c6cbc", "commitAfterChange": "30ba2db951e79b89a330e1209e461b1c083d6de3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public MethodScope(ClassScope parent, ReferenceContext context, boolean isStatic)", "signatureAfterChange": "  public MethodScope(Scope parent, ReferenceContext context, boolean isStatic)", "diff": ["-public MethodScope(ClassScope parent, ReferenceContext context, boolean isStatic) {", "+public MethodScope(Scope parent, ReferenceContext context, boolean isStatic) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5516116be9621186f4df00200de027d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void endVisit(QualifiedName node)", "signatureAfterChange": " \tpublic void endVisit(MemberRef node)", "diff": ["+\t */", "+\tpublic void endVisit(MemberRef node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "552c4384a6038e5b463feeea86a38e3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ImportDeclaration.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected ImportDeclaration(IImportContainer parent, String name)", "signatureAfterChange": " protected ImportDeclaration(ImportContainer parent, String name)", "diff": ["-protected ImportDeclaration(IImportContainer parent, String name) {", "+protected ImportDeclaration(ImportContainer parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "552d1a35dd87b8af407e8ecf8db35e94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprivate boolean connectSuperInterfaces()", "signatureAfterChange": " \tprivate boolean connectSuperInterfaces()", "diff": ["-\t\t\treferenceContext.superInterfaces[i].binding = superInterface;", "+\t\t\treferenceContext.superInterfaces[i].resolvedType = superInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55314f7d2325c5920cc5056bd3ca184a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "daa096617d4294add6bd8531102c2906f3417dbb", "commitAfterChange": "f97b24f3f8e94d8f54a74d9a196551c56851e735", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tprotected IClasspathEntry[] readClasspathFile(boolean createMarker, boolean logProblems)", "signatureAfterChange": " \tprotected IClasspathEntry[] readClasspathFile(boolean createMarker, boolean logProblems)", "diff": ["-\t\t\t\t\t\t\t\texclusionPatterns[i] = new String(patterns[j]);", "+\t\t\t\t\t\t\t\texclusionPatterns[j] = new String(patterns[j]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "553588c23881e5bdd751716591510f5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeSignatureTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_5);", "+\t\treturn buildMinimalComplianceTestSuite(testClass(), F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "553b869e24b6d03f9c39e0ebe807aacd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/ClasspathUtil.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static void removeFromProjectClasspath( IJavaProject jp, IFolder folder, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic static void removeFromProjectClasspath( IJavaProject jp, IFolder folder, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "diff": ["-\t\tboolean found = isProjectClassPathUpToDate(jp, cp, workspaceRelativePath, progressMonitor);", "+\t\tboolean found = doesClasspathContainEntry(jp, cp, workspaceRelativePath, progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "554340467a23f12058f7f8207f81e8d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/BinaryParameterDeclarationImpl.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public Collection<AnnotationMirror> getAnnotationMirrors()", "signatureAfterChange": "      public Collection<AnnotationMirror> getAnnotationMirrors()", "diff": ["-\t\tfinal IResolvedAnnotation[] paramAnnos = methodBinding.getParameterAnnotations(_paramIndex); ", "+\t\tfinal IAnnotationBinding[] paramAnnos = methodBinding.getParameterAnnotations(_paramIndex); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55439e29b67588831a09bb7ec6f87080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " private int sourceEnd(TypeDeclaration typeDeclaration)", "signatureAfterChange": " private int sourceEnd(TypeDeclaration typeDeclaration)", "diff": ["-\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\tif ((typeDeclaration.bits & ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5557e95f162b6f69558c1fa2f80e00e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 325, "methodNumberAfterChange": 325, "signatureBeforeChange": "  \tpublic void test305()", "signatureAfterChange": "  \tpublic void test305()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556b3d885a1ed221f4c8071b90d352ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void test_parameter_specification_inheritance_011()", "signatureAfterChange": " public void test_parameter_specification_inheritance_011()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556cc89ce50178c6f1e54055c28a87ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \t\tpublic boolean match(TypeLiteral node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(TagElement node, Object other)", "diff": ["+\t\tpublic boolean match(TagElement node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "556cce93e7eb63fbeb92ecb0661431b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testAnnotations1() throws JavaModelException", "signatureAfterChange": " public void testAnnotations1() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55739411a2f8306fca88d0d9237f98e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testLocalType1() throws JavaModelException", "signatureAfterChange": " public void testLocalType1() throws JavaModelException", "diff": ["-\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55a60969885e6751390b5428c711b0e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeArgument(int rank)", "signatureAfterChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeArgument(int rank)", "diff": ["-\tpublic TypeAnnotationWalker toTypeArgument(int rank) {", "+\tpublic ITypeAnnotationWalker toTypeArgument(int rank) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55b6dd7fa07e491c0fbd188ad3bc295a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "358c2d9eead1a2ad620bfd0dec02e0a53d937fcb", "commitAfterChange": "b7259e61ad84f1dda95b63bf74b4b4f38727c3a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, JavaFileManager fileManager, DiagnosticListener<? super JavaFileObject> someDiagnosticListener, Iterable<String> options, Iterable<String> classes, Iterable<? extends JavaFileObject> compilationUnits)", "signatureAfterChange": " \t@Override \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, JavaFileManager fileManager, DiagnosticListener<? super JavaFileObject> someDiagnosticListener, Iterable<String> options, Iterable<String> classes, Iterable<? extends JavaFileObject> compilationUnits)", "diff": ["-\t\t\twriterOut = new PrintWriter(System.out);", "+\t\t\twriterOut = new PrintWriter(System.err);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55c03e73532609ce73a964609948a405", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected TypeAnnotationWalker restrict(long newMatches, int newPathPtr)", "signatureAfterChange": "  \tprotected ITypeAnnotationWalker restrict(long newMatches, int newPathPtr)", "diff": ["-\tprotected TypeAnnotationWalker restrict(long newMatches, int newPathPtr) {", "+\tprotected ITypeAnnotationWalker restrict(long newMatches, int newPathPtr) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55d2420b5c8d9d7252c139ef7bd2df38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchJavadocTests.java", "commitBeforeChange": "876aa677201567f6dd87fe8c0b5a5326661e4029", "commitAfterChange": "955478e6d2220d787f88d27b5ca186d67f088e58", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void disableJavadocOptions()", "signatureAfterChange": " \tprivate void disableJavadocOptions()", "diff": ["-\t\tjavaProject.setOption(JavaCore.COMPILER_DOC_COMMENT_SUPPORT, JavaCore.DISABLED);", "+\t\tJAVA_PROJECT.setOption(JavaCore.COMPILER_DOC_COMMENT_SUPPORT, JavaCore.DISABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55e026f9d30f19eea80270ac36d9913c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocPackageCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void test030() throws JavaModelException", "signatureAfterChange": " public void test030() throws JavaModelException", "diff": ["-\t\t\"method[METHOD_REF]{method(), Ljavadoc.tags.OtherTypes;, ()V, method, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"method[METHOD_REF]{method(), Ljavadoc.tags.OtherTypes;, ()V, method, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55fb097a64c92bc5e819f71175ba62a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredElement.java", "commitBeforeChange": "3649f3f6d703fd53c9c12b41cdc037f657d98134", "commitAfterChange": "28746d11ccbd26f27de3e6f37e37aa3059c91ec1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r public int previousAvailableLineEnd(int position)", "signatureAfterChange": "\r public int previousAvailableLineEnd(int position)", "diff": ["-\tint index = scanner.searchLineNumber(position);\r", "+\tint index = scanner.getLineNumber(position);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "560accd310723eaedb911bc42825f7eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddClassFileToIndex.java", "commitBeforeChange": "ac6a9f56760bba7aec9ca8548c00a789a95fdc11", "commitAfterChange": "f238d59edecc5d87c39084d60c9040567d09deaf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic AddClassFileToIndex(\r \t\tIFile resource,\r \t\tIndexManager manager,\r \t\tIResource indexedContainer)", "signatureAfterChange": "\r \tpublic AddClassFileToIndex(\r \t\tIFile resource,\r \t\tIndexManager manager,\r \t\tIPath indexedContainer)", "diff": ["-\t\tIResource indexedContainer) {\r", "+\t\tIPath indexedContainer) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "560b668f290633ce235b8b836ec0ab8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic ArrayType newArrayType(Type elementType, int dimensions)", "signatureAfterChange": " \tpublic ArrayType newArrayType(Type elementType, int dimensions)", "diff": ["-\t\t\tresult.dimensions().add(new ExtraDimension(this));", "+\t\t\tresult.dimensions().add(new Dimension(this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "561b4af67dfeb50d80b558f6a4361c8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "6b5b085e3e9563b154e5009244bbcc6d1d33692f", "commitAfterChange": "049dab9c31d1b1f51426de321e572c2d874350bd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "signatureAfterChange": "\r \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "diff": ["-\t\tif (this.newRawPath == ReuseClasspath || !this.mayChangeProjectDependencies) return;\r", "+\t\tif (this.newRawPath == ReuseClasspath || !this.needCycleCheck) return;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "562e1674ce3d0440279fc0c66f4d46f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DeprecatedTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5630dd443ad828fc1329178d4b7b80aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "56fd729d2f45ec0b9c9fda262c4722902ccba4f8", "commitAfterChange": "880fcfdc9d3f451c53fbdd4300c71ec2c6ba2a25", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic char[] computeUniqueKey()", "signatureAfterChange": " \tpublic char[] computeUniqueKey()", "diff": ["-\t\tgetKey(scope, buffer);", "+\t\tgetScopeKey(scope, buffer);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "563c95dbe8f39e07a4c3b936529be3c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NullAnnotationModelTests.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testMissingAnnotation4() throws CoreException, InterruptedException", "signatureAfterChange": " \tpublic void testMissingAnnotation4() throws CoreException, InterruptedException", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS4);", "+\t\t\tASTParser parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5647704793cc29d0e0aeefbb306175b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ff17444fcc31fe021d6a45c4b051acce1b3894e3", "commitAfterChange": "eb15457015da4dfaee5df4c21a851b245805072a", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 59, "signatureBeforeChange": " \t \tpublic synchronized String intern(String s)", "signatureAfterChange": " \t \tpublic synchronized String intern(String s)", "diff": ["+\t", "-\t\treturn (String) this.symbols.add(new String(s));", "+\t\treturn (String) this.stringSymbols.add(new String(s));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "564c5933881869b222ebbb256afd7579", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "ae7797d27bfed7c3f6e7630a551ffec98598a05e", "commitAfterChange": "b5a62e48da3d2bb054c313f16e0e1c0a1279b4a4", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tpublic void init()", "signatureAfterChange": "\r \tpublic void init()", "diff": ["-\t\tfiles= new ObjectVector();\r", "+\t\tfiles= new ObjectVector(); // want to change this to a lookup table\r", "-\t\tsortedWords= null;\r", "+\t\tsortedWordEntries= null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "565eec64b0ade7357936b2327ac24260", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tsynchronized IMethodBinding resolveConstructor(ClassInstanceCreation expression)", "signatureAfterChange": " \tsynchronized IMethodBinding resolveConstructor(ClassInstanceCreation expression)", "diff": ["-\t\tif (node != null && (node.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsAnonymousTypeMASK) != 0) {", "+\t\tif (node != null && (node.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5664ab1cc535adee7f60c6ce40700068", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "9528b13b60b5267a27dfdeac3b8ea9a804476535", "commitAfterChange": "ef0d751764a03bfb7b7e9d8838fc454e1e51fa0c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void setActualReceiverType(ReferenceBinding receiverType)", "signatureAfterChange": " public void setActualReceiverType(ReferenceBinding receiverType)", "diff": ["-\tthis.qualifyingType = receiverType;", "+\tthis.actualReceiverType = receiverType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5664bbffcd2a2ec00976441b28fb13b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic boolean match(PackageDeclaration node, Object other)", "signatureAfterChange": " \tpublic boolean match(PackageDeclaration node, Object other)", "diff": ["-\t\tif (node.getAST().apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5666e27b145a58f60513b41d99e43934", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "35bd4e1ac4b1e11c036461a7309d887d1527f75a", "commitAfterChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "diff": ["-\t\tif (!areReturnTypesEqual(currentMethod, inheritedMethod))", "+\t\tif (!areReturnTypesCompatible(currentMethod, inheritedMethod))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "567820d24aa0ab4b6b8817922e5635f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "commitAfterChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic Object peek(Object key)", "signatureAfterChange": " \tpublic Object peek(Object key)", "diff": ["-\t\treturn entry._fValue;", "+\t\treturn entry.value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "567c76498cb6406132816730e4b4b211", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "79620cc5a2ab93e8afb2f50dfb60d3aac3ac52a1", "commitAfterChange": "bb83bb6bb9594ac07e759b1e208acbe513439625", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException", "signatureAfterChange": " public final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException", "diff": ["-\t\treturn ScannerHelper.isWhitespace(this.currentCharacter);", "+\t\treturn CharOperation.isWhitespace(this.currentCharacter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5690c4eb311345e5c4f04497a95f25c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "18811c004d543a3728cc5dfc4e05503a79b434ee", "commitAfterChange": "96cbe57b16442df110d3b0ecde11c12b456820b8", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "signatureAfterChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "diff": ["-\t\t\t\t&& !method.canBeSeenBy(receiverType, false, scope)) continue next;\r", "+\t\t\t\t&& !method.canBeSeenBy(receiverType, FakeInvocationSite , scope)) continue next;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56a89361074c9a24a395e07d6d029c48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, boolean checkNull)", "signatureAfterChange": "  \tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, boolean checkNull)", "diff": ["-\tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, boolean checkNull) {", "+\tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, boolean checkNull) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c07c549b72d8f937bfba35e7962865", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotatableTypeSystem.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic TypeBinding getAnnotatedType(TypeBinding type, AnnotationBinding[][] annotations)", "signatureAfterChange": " \tpublic TypeBinding getAnnotatedType(TypeBinding type, AnnotationBinding[][] annotations)", "diff": ["-\t\t\tcase Binding.INTERSECTION_CAST_TYPE:", "+\t\t\tcase Binding.INTERSECTION_TYPE18:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56c83b48a2348a550c3cdbfe46b74935", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "e1051acac48de2e59e4c3d2d0f46898b4067bf9a", "commitAfterChange": "25dbd9e17c7b6920dccf1b458296dbbe00f382de", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic boolean visit(PackageQualifiedType node)", "signatureAfterChange": " \tpublic boolean visit(NameQualifiedType node)", "diff": ["+\t */", "+\tpublic boolean visit(NameQualifiedType node) {", "+\t\treturn true;", "+\t}", "-\t */", "-\tpublic boolean visit(PackageQualifiedType node) {", "-\t\treturn true;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56e790f32e2f6ae2e0c2e9092914a5a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": "  public void test152() throws JavaModelException", "signatureAfterChange": "  public void test152() throws JavaModelException", "diff": ["-\t\t\"float[KEYWORD]{float, null, null, float, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"float[KEYWORD]{float, null, null, float, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56e9dac04e80308e026730b3802f907c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " public void test162() throws JavaModelException", "signatureAfterChange": " public void test162() throws JavaModelException", "diff": ["-\t\t\"oneTwoThree[METHOD_REF]{oneTwoThree(Object...), Ljavadoc.methods.tags.BasicTestMethods;, ([Ljava.lang.Object;)V, oneTwoThree, (o), \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"oneTwoThree[METHOD_REF]{oneTwoThree(Object...), Ljavadoc.methods.tags.BasicTestMethods;, ([Ljava.lang.Object;)V, oneTwoThree, (o), \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56f6b6c4a417ddd21af4e50c5d4b1756", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "a6b76fc7d7890cbbcb2fc001b8031466dd0ad995", "commitAfterChange": "8c05bff0d88a6a537ed2accc1c62c5430e927aee", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate void buildMemberTypes(AccessRestriction accessRestriction)", "signatureAfterChange": " \t \tprivate void buildMemberTypes(AccessRestriction accessRestriction)", "diff": ["-\t\t\t\t\t\tproblemReporter().hidingEnclosingType(memberContext);", "+\t\t\t\t\t\tproblemReporter().typeCollidesWithEnclosingType(memberContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5707d7b5b3a959adc591c180e010f614", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "3e46d275b92d309fd1fe675f261b23afc851c7bf", "commitAfterChange": "829046a361301380cac04e3af6844e4acd156d61", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void resolve()", "signatureAfterChange": "  public void resolve()", "diff": ["-\t\tif (!this.compilationResult.hasErrors()) checkUnusedImports();", "+\t\tif (!this.compilationResult.hasMandatoryErrors()) checkUnusedImports();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5710c084269a350a0793df0d9bbaa8b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \t\tpublic boolean match(ThisExpression node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(SingleMemberAnnotation node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(SingleMemberAnnotation node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571d0525cbdaaeca89bdaa27126e2e2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": " \tpublic void endVisit(SuperMethodInvocation node)", "signatureAfterChange": " \tpublic void endVisit(MarkerAnnotation node)", "diff": ["+\t */", "+\tpublic void endVisit(MarkerAnnotation node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5730fd954abc5bfb638b919fe1c3721d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 450, "methodNumberAfterChange": 450, "signatureBeforeChange": " \tpublic void test431()", "signatureAfterChange": " \tpublic void test431()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5737f8b76fcdca70a9d34fa5eb0d585f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "98f970f58fc61208a8cdd52e3b9981ef32c5937b", "commitAfterChange": "29a8044fc706583901ff89364d428dff04f6a567", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void processAnnotations(BuildContext[] allfiles)", "signatureAfterChange": " \t \tpublic void processAnnotations(BuildContext[] allfiles)", "diff": ["-\t\t\t\tAnnotationProcessorFactoryLoader.getLoader().getFactoriesAndAttributesForProject(javaProject);", "+\t\t\t\tAnnotationProcessorFactoryLoader.getLoader().getJava5FactoriesAndAttributesForProject(javaProject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5740406b9b2ef63c9d589cb436834c40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRootInfo.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public PackageFragmentRootInfo()", "signatureAfterChange": " public PackageFragmentRootInfo()", "diff": ["-\tthis.fNonJavaResources = null;", "+\tthis.nonJavaResources = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "574737d2cda6d2a8d1950ce551ac4909", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "49a66f9a973247a981c10aeaef835e85ffcc455f", "commitAfterChange": "e08c40cf1dd83a4533badddfba88090397fd7a51", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public LookupEnvironment(ITypeRequestor typeRequestor, CompilerOptions globalOptions, ProblemReporter problemReporter, INameEnvironment nameEnvironment)", "signatureAfterChange": "   public LookupEnvironment(ITypeRequestor typeRequestor, CompilerOptions globalOptions, ProblemReporter problemReporter, INameEnvironment nameEnvironment)", "diff": ["-\t\tthis.typeSystem = new UnannotatedTypeSystem(this);", "+\t\tthis.typeSystem = new TypeSystem(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "575325032e442ce81d8e01f9ba5768ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "af4e6d900d5d8e7a9bf4d8017d7710df7047045e", "commitAfterChange": "f7f0c26c94c2835a4e4e5f46a3cd63b53d559a6d", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tprotected int firstActionWithID(String id, int start)", "signatureAfterChange": " \tprotected int firstActionWithID(String id, int start)", "diff": ["-\t\tfor (int i = start; i <= this.actionsPtr; i++) {", "+\t\tfor (int i = start; i <= this.actionsEnd; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57744172061cff771b70ec84112d6015", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void test_nonnull_parameter_006()", "signatureAfterChange": " public void test_nonnull_parameter_006()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "577ed600c7a76db7541cd5d01b64dfcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public void test036() throws JavaModelException", "signatureAfterChange": "  public void test036() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "579fdb3bc8ce27ae358771bd16d8ae76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRootInfo.java", "commitBeforeChange": "4a181894176f3a1eccc3e35147ddca845e353389", "commitAfterChange": "546372dd9318b0aed3b01864163b2d25dd30110a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private Object[] computeNonJavaResources(IJavaProject project, IResource underlyingResource, PackageFragmentRoot handle)", "signatureAfterChange": " private Object[] computeNonJavaResources(IJavaProject project, IResource underlyingResource, PackageFragmentRoot handle)", "diff": ["-\t\t\t\t\thandle.getExclusionPatterns());", "+\t\t\t\t\thandle.fullExclusionPatternChars());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57c151d5c5c3ee5a2fcb7b8a000798bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 272, "methodNumberAfterChange": 272, "signatureBeforeChange": " protected void consumeStatementSwitch()", "signatureAfterChange": " protected void consumeStatementSwitch()", "diff": ["-\t\tswitchStatement.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\tswitchStatement.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57c63cd0e49c6b7b7a9b90f628fecd5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefMethodErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefMethodErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57c8531388e4549fe830cc289f2386ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/RunBuilderTests.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tsuite.addTest(Tests.suite());", "+\tsuite.addTest(BuilderTests.suite());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57dbe17ffcc6fd1d3a1668677f8b44cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "a9ee2df3848b37b13b74a0d6fb58548ce231875e", "commitAfterChange": "2a16e8a2e7b943b242b9959c374c8d7819b6b3a0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void setDefaultSettings()", "signatureAfterChange": "  \tpublic void setDefaultSettings()", "diff": ["-\t\tthis.insert_new_line_at_end_of_file = false;", "+\t\tthis.insert_new_line_at_end_of_file_if_missing = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57dec8e0be6cf425e8b84689231170f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "30692448718de71df165cc52c018bee7df31a8fb", "commitAfterChange": "7fbd6c6645520ea8c438436fb3626bdc9d3414b8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void enterEnum(TypeInfo typeInfo)", "signatureAfterChange": " \tpublic void enterEnum(TypeInfo typeInfo)", "diff": ["-\t\tenterClass(typeInfo);", "+\t\tenterType(typeInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57f4fd40c2a3c528a268fc0d9041b6ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static SearchParticipant getDefaultSearchParticipant()", "signatureAfterChange": " \tpublic static SearchParticipant getDefaultSearchParticipant()", "diff": ["-\t\treturn SearchBasicEngine.getDefaultSearchParticipant();", "+\t\treturn BasicSearchEngine.getDefaultSearchParticipant();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5803b3518d292f81c030fc527f2677db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "e5e6f9097f2c3bf7294bd658643d6be9f7aaa5ef", "commitAfterChange": "d00bc48524f3df289951f11fca95cb39820be47f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "\r \tpublic void generateCode(\r \t\tBlockScope currentScope,\r \t\tCodeStream codeStream,\r \t\tboolean valueRequired)", "diff": ["- */\r", "-public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired) {\r", "-\tint pc = codeStream.position;\r", "-\tLabel falseLabel, endLabel;\r", "-\tif (constant != Constant.NotAConstant) {\r", "-\t\t// inlined value\r", "-\t\tif (valueRequired)\r", "-\t\t\tcodeStream.generateConstant(constant, implicitConversion);\r", "-\t\tcodeStream.recordPositionsFrom(pc, this);\r", "-\t\treturn;\r", "-\t}\r", "-\tbits |= OnlyValueRequiredMASK;\r", "-\tgenerateOptimizedConditionalAnd(currentScope, codeStream, null, (falseLabel = new Label(codeStream)), valueRequired);\r", "-\t/* improving code gen for such a case: boolean b = i < 0 && false\r", "-\t * since the label has never been used, we have the inlined value on the stack. */\r", "-\tif (falseLabel.hasForwardReferences()) {\r", "-\t\tif (valueRequired) {\r", "-\t\t\tcodeStream.iconst_1();\r", "-\t\t\tif ((bits & ValueForReturnMASK) != 0) {\r", "-\t\t\t\tcodeStream.ireturn();\r", "-\t\t\t\tfalseLabel.place();\r", "-\t\t\t\tcodeStream.iconst_0();\r", "-\t\t\t} else {\r", "-\t\t\t\tcodeStream.goto_(endLabel = new Label(codeStream));\r", "-\t\t\t\tcodeStream.decrStackSize(1);\r", "-\t\t\t\tfalseLabel.place();\r", "-\t\t\t\tcodeStream.iconst_0();\r", "-\t\t\t\tendLabel.place();\r", "-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\tfalseLabel.place();\r", "-\t\t}\r", "-\t}\r", "-\tif (valueRequired) {\r", "-\t\tcodeStream.generateImplicitConversion(implicitConversion);\r", "-\t}\r", "-\tcodeStream.recordPositionsFrom(pc, this);\r", "-}\r", "+\t */\r", "+\tpublic void generateCode(\r", "+\t\tBlockScope currentScope,\r", "+\t\tCodeStream codeStream,\r", "+\t\tboolean valueRequired) {\r", "+\t\t\t\r", "+\t\tLabel falseLabel, endLabel;\r", "+\t\tif (constant != Constant.NotAConstant) {\r", "+\t\t\t// inlined value\r", "+\t\t\tif (valueRequired)\r", "+\t\t\t\tcodeStream.generateConstant(constant, implicitConversion);\r", "+\t\t\tcodeStream.recordPositionsFrom(pc, this);\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t\tbits |= OnlyValueRequiredMASK;\r", "+\t\tgenerateOptimizedBoolean(\r", "+\t\t\tcurrentScope,\r", "+\t\t\tcodeStream,\r", "+\t\t\tnull,\r", "+\t\t\t(falseLabel = new Label(codeStream)),\r", "+\t\t\tvalueRequired);\r", "+\t\t/* improving code gen for such a case: boolean b = i < 0 && false\r", "+\t\t * since the label has never been used, we have the inlined value on the stack. */\r", "+\t\tif (falseLabel.hasForwardReferences()) {\r", "+\t\t\t\tcodeStream.iconst_1();\r", "+\t\t\t\tif ((bits & ValueForReturnMASK) != 0) {\r", "+\t\t\t\t\tcodeStream.ireturn();\r", "+\t\t\t\t\tfalseLabel.place();\r", "+\t\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tcodeStream.goto_(endLabel = new Label(codeStream));\r", "+\t\t\t\t\tcodeStream.decrStackSize(1);\r", "+\t\t\t\t\tfalseLabel.place();\r", "+\t\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t\t\tendLabel.place();\r", "+\t\t\t} else {\r", "+\t\t\t\tfalseLabel.place();\r", "+\t\tif (valueRequired) {\r", "+\t\t\tcodeStream.generateImplicitConversion(implicitConversion);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58059f75f74422a795f164e08af0dd39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void selectType(char[] typeName, IType context) throws JavaModelException", "signatureAfterChange": " \tpublic void selectType(char[] typeName, IType context) throws JavaModelException", "diff": ["-\t\t\t\tClassFileReader reader = (ClassFileReader) classFile.getBinaryTypeInfo((IFile) classFile.getResource(), false/*don't fully initialize so as to keep constant pool (used below)*/);", "+\t\t\t\tClassFileReader reader = (ClassFileReader) classFile.getBinaryTypeInfo((IFile) classFile.resource(), false/*don't fully initialize so as to keep constant pool (used below)*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "580eb8527231ce4ed9d80d48a66a18d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "38c895fd64a92567249832dd2a8d427fc1bcacc2", "commitAfterChange": "47b4b871bf6d388352229c39f2d0357c2b36e470", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " \tpublic void test089()", "signatureAfterChange": " \tpublic void test089()", "diff": ["-\t\tpreferences.insert_space_after_open_paren_in_parenthesized_expression = true;", "+\t\tpreferences.insert_space_after_opening_paren_in_parenthesized_expression = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "583ab3e2e243bd7055309771574cd1d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "130a55997b08af356a22f13721ef702eb35b7557", "commitAfterChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "\r protected NameReference getUnspecifiedReferenceOptimized()", "signatureAfterChange": "\r protected NameReference getUnspecifiedReferenceOptimized()", "diff": ["-\treference.bits &= ~NameReference.RestrictiveFlagMASK;\r", "+\treference.bits &= ~AstNode.RestrictiveFlagMASK;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585e95effe04255cf00853960c8e54e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public Object[] getNonJavaResources() throws JavaModelException", "signatureAfterChange": " public Object[] getNonJavaResources() throws JavaModelException", "diff": ["-\t\treturn ((PackageFragmentInfo) getElementInfo()).getNonJavaResources(getUnderlyingResource());", "+\t\treturn ((PackageFragmentInfo) getElementInfo()).getNonJavaResources(getResource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5860188b53ff6a401e31d98e458b036f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " private boolean hasStructuralFieldChanges(FieldInfo currentFieldInfo, FieldInfo otherFieldInfo)", "signatureAfterChange": " private boolean hasStructuralFieldChanges(FieldInfo currentFieldInfo, FieldInfo otherFieldInfo)", "diff": ["-\t\t\tcase TypeIds.T_String :", "+\t\t\tcase TypeIds.T_JavaLangString :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5864213219b074014fd21ccba49b45e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void testRenameResourceIncludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRenameResourceIncludedCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5865aedec8aece2ddf75fa809f1e4c41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": " \tprivate void findLocalMethods( \t\tchar[] methodName, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\tReferenceBinding superTypeWithSameErasure = (ReferenceBinding)receiverType.findSuperTypeWithSameErasure(method.declaringClass);", "+\t\t\tReferenceBinding superTypeWithSameErasure = (ReferenceBinding)receiverType.findSuperTypeOriginatingFrom(method.declaringClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5883ee537e54964ffb76629c241c05e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " protected NameReference getUnspecifiedReference()", "signatureAfterChange": " protected NameReference getUnspecifiedReference()", "diff": ["-\tthis.patternLocator.match(nameRef, this.matchSet); // NB: Don't check container since unspecified reference can happen anywhere", "+\tthis.patternLocator.match(nameRef, this.nodeSet); // NB: Don't check container since unspecified reference can happen anywhere"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5893bbd8181b8b2cb506e0ac535fb9ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/src/javadoc/test000/Test.java", "commitBeforeChange": "6defd2b79520062f5150164ded77c2d030acc168", "commitAfterChange": "d351702f3561d64a024c15ffbed0faad48ce2838", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " int foo(String str, int var, Vector list, char[] array) throws IllegalAccessException", "signatureAfterChange": " int foo(String str, int var, Vector list, char[] array) throws IOException", "diff": ["-int foo(String str, int var, Vector list, char[] array) throws IllegalAccessException { return 0; }", "+int foo(String str, int var, Vector list, char[] array) throws IOException { return 0; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58c3dbcec47a2df4d82ca5bb6096b0ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "70effe9371786cf1a847541cdf58189d17ea0795", "commitAfterChange": "91a5b49121a22c32ff81484145fe6ce15b755e81", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": " protected void consumeMemberValueArrayInitializer()", "signatureAfterChange": " protected void consumeMemberValueArrayInitializer()", "diff": ["-\tmemberValueArrayInitializer(this.expressionLengthStack[this.expressionLengthPtr--]);", "+\tarrayInitializer(this.expressionLengthStack[this.expressionLengthPtr--]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58c89bb9b90f4cc22da8fe4e3d602135", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 166, "signatureBeforeChange": " public void ifne(Label lbl)", "signatureAfterChange": " public void ifne(BranchLabel lbl)", "diff": ["-public void ifne(Label lbl) {", "+public void ifne(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58dfc5fb68b21cbbc803ad10bc878bf9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void parseMethod( \t\tTypeDeclaration type, \t\tCompilationUnitDeclaration unit, \t\tint position)", "signatureAfterChange": "  \tprivate void parseMethod( \t\tTypeDeclaration type, \t\tCompilationUnitDeclaration unit, \t\tint position)", "diff": ["-\t\t\t\tif (initializer.bodyStart > position)", "+\t\t\t\tif (initializer.sourceStart > position)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58e0474382e804959cfe64135c89eb47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RunJavaSearchTests.java", "commitBeforeChange": "997a25bfb062d5e13ab988c44d8a015d4710ad9a", "commitAfterChange": "fa16fc80b475f974c3040ef90f01075968f51405", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tAbstractJavaModelTests.TESTS_SEARCH = null;", "+\tAbstractJavaModelTests.TESTS_RANGE = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58eeec12775734196fd681d4390cf8df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InternalHexFloatTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuiteWithMinimalCompliance(testClass(), F_1_5);", "+\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59146420a40db6cf9fad0beda4c42d13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NullAnnotationModelTests.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void testAnnotationAST1() throws CoreException, InterruptedException", "signatureAfterChange": " \tpublic void testAnnotationAST1() throws CoreException, InterruptedException", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS4);", "+\t\t\tASTParser parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5915ff713eb60c2b45871df5b2a2ad2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/SampleASTs.java", "commitBeforeChange": "26f568ac8c33647ac64f84b5eee920325d870fe8", "commitAfterChange": "89fead2e35034778cb1cda34e7f362e4b63427a2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static List oneOfEachList(AST target)", "signatureAfterChange": " \tpublic static List oneOfEachList(AST target)", "diff": ["-\t\t\t} catch (RuntimeException e) {", "+\t\t\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59513591abb5294f0ca1e706cee61745", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "35bd4e1ac4b1e11c036461a7309d887d1527f75a", "commitAfterChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " boolean checkInheritedReturnTypes(MethodBinding[] methods, int length)", "signatureAfterChange": " boolean checkInheritedReturnTypes(MethodBinding[] methods, int length)", "diff": ["-\twhile (--index > 0 && areReturnTypesEqual(first, methods[index])){/*empty*/}", "+\twhile (--index > 0 && areReturnTypesCompatible(first, methods[index])){/*empty*/}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5958f1ce7d3d1657a761fb8cec344a0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\tif (currentArg.endsWith(\".java\")) { //$NON-NLS-1$", "+\t\t\tif (currentArg.endsWith(SUFFIX_STRING_java)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5960794f13220af0175b4ace54791669", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "7367314a95da2f657c13cbe7f3aa70c5993c571d", "commitAfterChange": "145339ee2b4949d611d9a4c76be5ec2591f71194", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate JavaElement getUnresolvedJavaElement(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding )", "signatureAfterChange": " \tprivate JavaElement getUnresolvedJavaElement(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding )", "diff": ["-\t\t\t\tdeclaringTypeBinding = this.getComponentType().getDeclaringClass();", "+\t\t\t\tdeclaringTypeBinding = this.getElementType().getDeclaringClass();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59748ca7c8da9e6d29138cb6c3094403", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0)\t{", "+\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0)\t{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "598591799ee159283a4b2d082a10c2e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/core/formatter/IndentManipulation.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static String extractIndentString(String line, int tabWidth, int indentWidth)", "signatureAfterChange": " \tpublic static String extractIndentString(String line, int tabWidth, int indentWidth)", "diff": ["-\t\t\treturn Scribe2.EMPTY_STRING;", "+\t\t\treturn Util.EMPTY_STRING;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59b32c313f7d3f06e391888e896782f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected int determineKind(IResource underlyingResource) throws JavaModelException", "signatureAfterChange": "\r protected int determineKind(IResource underlyingResource) throws JavaModelException", "diff": ["-\tIClasspathEntry[] entries= getJavaProject().getResolvedClasspath(true);\r", "+\tIClasspathEntry[] entries= getJavaProject().getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59b40906b6a07bb82d9966a2265cbc44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/type/ArrayTypeImpl.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public TypeMirror getComponentType()", "signatureAfterChange": "      public TypeMirror getComponentType()", "diff": ["-\t\t\tcomponentType = _env.getTypeBinding(componentKey);", "+\t\t\tcomponentType = _env.getTypeBindingFromKey(componentKey);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59ba29d93144518a81ba3b490d95b7ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "3b80ff647411b20503d367972b9a6ddd83c803ed", "commitAfterChange": "e2af824aeec88cb7db3fc9a60fe3065181c8cab2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static File createAndAddExternalAnnotationJar(  \t\t\tIJavaProject project  ) \t\tthrows IOException, JavaModelException", "signatureAfterChange": " \tpublic static File createAndAddExternalAnnotationJar(  \t\t\tIJavaProject project  ) \t\tthrows IOException, JavaModelException", "diff": ["-\t\tFile extBinDir = getFileInPlugin( AptTestsPlugin.getDefault(), new Path(\"/binext\")); ", "+\t\tFile extBinDir = getFileInPlugin( AptTestsPlugin.getDefault(), new Path(BIN_EXT)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59bb0720875bc9208f9f1e5c14fe9b8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 182, "signatureBeforeChange": " protected void consumeTypeImportOnDemandDeclaration()", "signatureAfterChange": " protected void consumeTypeImportOnDemandDeclaration()", "diff": ["-\t// flush annotations defined prior to import statements", "+\t// flush comments defined prior to import statements", "-\t\tthis.flushAnnotationsDefinedPriorTo(impt.declarationSourceEnd); ", "+\t\tthis.flushCommentsDefinedPriorTo(impt.declarationSourceEnd); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59c059910c358211f1635aee64b02b05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public void markAsDefinitelyUnknown(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyUnknown(VariableBinding local)", "diff": ["-public void markAsDefinitelyUnknown(LocalVariableBinding local) {", "+public void markAsDefinitelyUnknown(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59c8f26c77c8f1348886e71e3241f5e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "5f97e12f962e721b3d706fc12b2c5617a3adbc7d", "commitAfterChange": "f179c68e167c14230d1517ad0b6adc68e8bc0742", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate void checkNullComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse)", "signatureAfterChange": " \tprivate void checkNullComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse)", "diff": ["-\t\tboolean contextualCheckEquality = checkEquality ^ ((flowContext.tagBits & FlowContext.INSIDE_NEGATIVE_ASSERT) != 0);", "+\t\tboolean contextualCheckEquality = checkEquality ^ ((flowContext.tagBits & FlowContext.INSIDE_NEGATION) != 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d1c982c7e0ec49bb9c6b1a155fa6c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 324, "methodNumberAfterChange": 324, "signatureBeforeChange": "  \tpublic void test304()", "signatureAfterChange": "  \tpublic void test304()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d5b45a16513d5028fed88b1a84bdd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/RunAllTests.java", "commitBeforeChange": "a520fbebd0fffdd9ae00eeb9ec609a81241ec8bb", "commitAfterChange": "afe8e7c03c9e057a9ab6bf025b43a423a4494448", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tTestCase.ONLY_SUFFIX = null;", "+\tTestCase.RUN_ONLY_ID = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59dff9c73b3fba855cec09a05ec366b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForAssert(BlockScope blockScope)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForAssert(BlockScope blockScope)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59ef4262299072d719d0c69c0c34fa4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tfinal void unsupportedIn2()", "signatureAfterChange": " \tfinal void unsupportedIn2()", "diff": ["-\t  if (this.owner.API_LEVEL == AST.LEVEL_2_0) {", "+\t  if (this.ast.API_LEVEL == AST.LEVEL_2_0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59facee67b0ba2b2d41bb9baa973d538", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "a73c1b70646c33788c416636d54ca7b824b36c44", "commitAfterChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "signatureAfterChange": " \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "diff": ["-\t\t\ttabWidthVal= Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE));", "+\t\t\ttabWidthVal= Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a237b32d622d89e06e9c0c3fc69d302", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "4412fcf3d168e3c5cc3b92c0b70e5bcf2376f3fc", "commitAfterChange": "8bf9953e1351888d8d186166d8f2000b15a08f07", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void cleanUpIndexes()", "signatureAfterChange": " public void cleanUpIndexes()", "diff": ["-\tSearchParticipant[] participants = SearchEngine.getSearchParticipants();", "+\tSearchParticipant[] participants = SearchEngine.getAvailableSearchParticipants();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a2b1399e7164ee6e184bc02ba29f694", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "c9c5f11eddd07d2a8299046a3df03585e022db6e", "commitAfterChange": "f9e9347d6997c4c27eb7e36ed44c76f0701d7ce2", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, List lubStack)", "signatureAfterChange": " \tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, ArrayList lubStack)", "diff": ["-\tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, List lubStack) {", "+\tprivate TypeBinding leastContainingTypeArgument(TypeBinding u, TypeBinding v, ReferenceBinding genericType, int rank, ArrayList lubStack) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a2fdfd5e0e010db727f51c383063e8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 356, "methodNumberAfterChange": 356, "signatureBeforeChange": " \tpublic void test336()", "signatureAfterChange": " \tpublic void test336()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a471f2fd19452d8c3837b2499fb11e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 371, "signatureBeforeChange": " public void wildcardInvocation(ASTNode location, TypeBinding receiverType, MethodBinding method, TypeBinding[] arguments)", "signatureAfterChange": " public void wildcardInvocation(ASTNode location, TypeBinding receiverType, MethodBinding method, TypeBinding[] arguments)", "diff": ["-\t\tif (parameter.isWildcard() && (((WildcardBinding) parameter).kind != Wildcard.SUPER)) {", "+\t\tif (parameter.isWildcard() && (((WildcardBinding) parameter).boundKind != Wildcard.SUPER)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a5ddac038db7294cedd75b9e1a60192", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "\r \t\r \tprivate void findNestedTypes(\r \t\tchar[] typeName,\r \t\tSourceTypeBinding currentType,\r \t\tScope scope)", "signatureAfterChange": "\r \t\r \tprivate void findNestedTypes(\r \t\tchar[] typeName,\r \t\tSourceTypeBinding currentType,\r \t\tScope scope)", "diff": ["-\t\t\t\t\t\t\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\t\t\t\t\t\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a7fb9fb34d38fb82b3b1e853c885325", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \t\tpublic boolean match(VariableDeclarationExpression node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(TextElement node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(TextElement node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a83987fa7f3356bdb8f70636695b3b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "ec455405a83bfb36b65a1594dcc37928d4b0bc3b", "commitAfterChange": "79b8d8f9507454c772f9092ea04ba032447d4b59", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic void testNewWorkingCopy06() throws CoreException", "signatureAfterChange": " \tpublic void testNewWorkingCopy06() throws CoreException", "diff": ["-\t\tthis.workingCopy =  newWorkingCopy(", "+\t\tthis.workingCopy =  newExternalWorkingCopy("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a923f2522903c8089a7f32c65794143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testRenameResourceExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRenameResourceExcludedCompilationUnit() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a93c76656fd5e89b27409d363ca1b97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java", "commitBeforeChange": "fd7de82f6da7ed292619b2fd7babad1ecc33c07d", "commitAfterChange": "9b07605b74dfd3ac5271b7960b546733093468c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic SyntheticMethodBinding(MethodBinding overridenMethodToBridge, MethodBinding targetMethod, SourceTypeBinding declaringClass)", "signatureAfterChange": " \tpublic SyntheticMethodBinding(MethodBinding overridenMethodToBridge, MethodBinding targetMethod, SourceTypeBinding declaringClass)", "diff": ["-\t    this.modifiers = (overridenMethodToBridge.modifiers | ClassFileConstants.AccBridge | ClassFileConstants.AccSynthetic) & ~(ClassFileConstants.AccAbstract | ClassFileConstants.AccNative | ExtraCompilerModifiers.AccGenericSignature);", "+\t    // also use the modifiers from the target method, as opposed to inherited one (147690)", "+\t    this.modifiers = (targetMethod.modifiers | ClassFileConstants.AccBridge | ClassFileConstants.AccSynthetic) & ~(ClassFileConstants.AccAbstract | ClassFileConstants.AccNative | ExtraCompilerModifiers.AccGenericSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aa69a2ca421675a7e92329576c98ad1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\t\t\t\tIPath sourceFilePath = getPath().removeFileExtension().addFileExtension(\"java\"); //$NON-NLS-1$", "+\t\t\t\tIPath sourceFilePath = getPath().removeFileExtension().addFileExtension(EXTENSION_java);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ad188877c3e31b00394f90c79ef79ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "da39b69e72c50baaaa7ca77863d468ca697fcf61", "commitAfterChange": "ff204ce3a41738619b4636be750fa00b8770f7a8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic boolean visit(\r \t\t\tLocalTypeDeclaration localTypeDeclaration,\r \t\t\tMethodScope scope)", "signatureAfterChange": "\r \tpublic boolean visit(\r \t\t\tLocalTypeDeclaration localTypeDeclaration,\r \t\t\tBlockScope scope)", "diff": ["-\t\t\tMethodScope scope) {\r", "+\t\t\tBlockScope scope) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae35c5741f7576425aa42fe1ffa974c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticAccessMethodBinding.java", "commitBeforeChange": "cd6ca384f57ea36233e4caca220f18e53912b7cf", "commitAfterChange": "9ee33691ed28522cbc2852e39f3c0e623d310200", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void initializeMethodAccessor(MethodBinding targetMethod, boolean isSuperAccess, ReferenceBinding declaringClass)", "signatureAfterChange": " \tpublic void initializeMethodAccessor(MethodBinding targetMethod, boolean isSuperAccess, ReferenceBinding declaringClass)", "diff": ["-\t\t\t\tthis.selector(CharOperation.concat(AccessMethodPrefix, String.valueOf(++methodId).toCharArray()));", "+\t\t\t\tthis.setSelector(CharOperation.concat(AccessMethodPrefix, String.valueOf(++methodId).toCharArray()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5af4e063d895d71d990fd2cbae76ab6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementRequestor.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public IType[] getMemberTypes()", "signatureAfterChange": "\r public IType[] getMemberTypes()", "diff": ["-\tfMemberTypes.copyInto(results);\r", "+\tfMemberTypes.toArray(results);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b08776ebd0a1019c035055894a4b9ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "a8ebe98c7b687ea450305732efa25afb0944336e", "commitAfterChange": "96a09d96e56ab454cb92b7163871c6f3413e482e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\tactionInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tactionInfo.setReachMode(FlowInfo.UNREACHABLE_OR_DEAD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b0fa0c47dd4da39163f2a6e76b4a095", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionRecoveryTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(CompletionRecoveryTest.class);", "+\treturn buildAllCompliancesTestSuite(CompletionRecoveryTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b17675ec9edb14edb8485fe066ccdb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "4dd777707c2803e1e51e44f3ccb37074b166c552", "commitAfterChange": "bb0062c9650742fadc1d35f4bf3fa1b174bd1969", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void match(Reference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(MessageSend node, MatchingNodeSet nodeSet)", "diff": ["+public void match(MessageSend node, MatchingNodeSet nodeSet) {", "+\t// each subtype should override if needed", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b21c3d037acfcec58e240a54b65b91d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a755b9b5d2c47e573f93949b7ba266e231861f6a", "commitAfterChange": "fb81444b48d29335bf6401bfa1fd6a736fab868e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tprotected MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tObjectVector found, \t\tMethodBinding concreteMatch)", "signatureAfterChange": " \tprotected MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tObjectVector found, \t\tMethodBinding concreteMatch)", "diff": ["-\t\t\t\t\t\tif (concreteMatch != null && environment().methodVerifier().doesMethodOverride(concreteMatch, compatibleMethod))", "+\t\t\t\t\t\tif (concreteMatch != null && environment().methodVerifier().areMethodsCompatible(concreteMatch, compatibleMethod))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b24bbde9b2c3f83e648eb7e5b230a7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ProblemReferenceBinding.java", "commitBeforeChange": "b8c2347031edf431b74ee176b67b65bece3e7d69", "commitAfterChange": "bafbb633d88463daeda3b6346c0ba869c26d4bef", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public ProblemReferenceBinding(char[] name, Binding original, int problemId)", "signatureAfterChange": " public ProblemReferenceBinding(char[] name, ReferenceBinding original, int problemId)", "diff": ["-public ProblemReferenceBinding(char[] name, Binding original, int problemId) {", "+public ProblemReferenceBinding(char[] name, ReferenceBinding original, int problemId) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b41534bea37df2485088b025fa467b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void markPotentiallyNullBit(LocalVariableBinding local)", "signatureAfterChange": "  public void markPotentiallyNullBit(VariableBinding local)", "diff": ["-public void markPotentiallyNullBit(LocalVariableBinding local) {", "+", "+public void markPotentiallyNullBit(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b459de4922669d961bea65ea97c372e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceRefElementInfo.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public int getDeclarationSourceStart()", "signatureAfterChange": " public int getDeclarationSourceStart()", "diff": ["-\treturn fSourceRangeStart;", "+\treturn sourceRangeStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b4ca0deeb71834ba31b23e95dabbf28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \r \tpublic final ReferenceBinding getJavaLangCloneable()", "signatureAfterChange": "\r \r \tpublic final ReferenceBinding getJavaLangCloneable()", "diff": ["-\t\tcompilationUnitScope().recordReference(JAVA_LANG_CLONEABLE);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(JAVA_LANG_CLONEABLE);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b568cf33f14cb02eb3353cdaccd0ba1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "ab36391231f1ea61e75e0e00b3dc8ffe91eda55e", "commitAfterChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r private String getLineSeparator(char[] text)", "signatureAfterChange": "\r private String getLineSeparator(char[] text)", "diff": ["-\t\t\t\treturn JavaModelManager.LINE_SEPARATOR;\r", "+\t\t\t\treturn Util.LINE_SEPARATOR;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5a18079e76611c29c1a6ccb5ead176", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic synchronized Set<IFile> getGeneratedFilesForParent( IFile parent )", "signatureAfterChange": " \tpublic synchronized Set<IFile> getGeneratedFilesForParent( IFile parent )", "diff": ["-\t\tSet<IFile> s = _parent2DerivedFiles.get( parent ); ", "+\t\tSet<IFile> s = _parentFile2GeneratedFiles.get( parent ); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b5a96956e0c940da5c0a5b8e278fa28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "1d93c592655130ee83ccf569199d32491937354e", "commitAfterChange": "b60bff4501141ce0e7ed5fab43805b77b52b5e19", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public IJavaProject javaProject()", "signatureAfterChange": " public IJavaProject javaProject()", "diff": ["-\treturn this.type.getJavaProject();", "+\treturn this.focusType.getJavaProject();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b608c445345bcbac7263fe27933e47e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testSuggestFieldName015()", "signatureAfterChange": " public void testSuggestFieldName015()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b68b90f62bb76301ddff0e9b6d7301e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST8Test.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic void test0127() throws JavaModelException", "signatureAfterChange": " \tpublic void test0127() throws JavaModelException", "diff": ["-\t\tvariableDeclarationFragment.extraDimensions().add(this.ast.newExtraDimension());", "+\t\tvariableDeclarationFragment.extraDimensions().add(this.ast.newDimension());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b6f7acee1a57a7ce3b1bfa7c71173bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 243, "methodNumberAfterChange": 243, "signatureBeforeChange": " public void testBug109695d() throws CoreException", "signatureAfterChange": " public void testBug109695d() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"IPS2\", SearchPattern.R_CAMEL_CASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"IPS2\", SearchPattern.R_CAMELCASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8034a78442a0e5bf11d132c7b6707a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ParameterizedSourceType.java", "commitBeforeChange": "a5c56b9d9a1a6a7a2412b9e4fe79595e9a454729", "commitAfterChange": "808f8a4c125739a8b2d2237ba90c04dc1390f0b7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic String getFullyQualifiedParameterizedName() throws JavaModelException", "signatureAfterChange": " \t \tpublic String getFullyQualifiedParameterizedName() throws JavaModelException", "diff": ["-\t\treturn getFullyQualifiedParameterizedName(getFullyQualifiedName(), this.genericTypeSignature);", "+\t\treturn getFullyQualifiedParameterizedName(getFullyQualifiedName(), this.uniqueKey);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b887d17693b432ef4f2d2874ed62aad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void generateInnerClassInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList children)", "signatureAfterChange": " private void generateInnerClassInfos(IType type, IBinaryType typeInfo, HashMap newElements, ArrayList children)", "diff": ["-\t\t\tIClassFile classFile= ((IPackageFragment)fClassFile.getParent()).getClassFile(new String(ClassFile.unqualifiedName(binaryType.getName())) + \".class\"); //$NON-NLS-1$", "+\t\t\tIClassFile classFile= ((IPackageFragment)fClassFile.getParent()).getClassFile(new String(ClassFile.unqualifiedName(binaryType.getName())) + SUFFIX_STRING_class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b892289ddb569c3501c5a8cb4e92499", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["-\t\t\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).original;", "+\t\t\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b8ada98d71d096bf44b07b384b49cf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic boolean visit(LocalTypeDeclaration localTypeDeclaration, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration localTypeDeclaration, BlockScope scope)", "diff": ["-\t}", "-\tpublic boolean visit(LocalTypeDeclaration localTypeDeclaration, BlockScope scope) {", "+\tpublic boolean visit(TypeDeclaration localTypeDeclaration, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b9c2a1239f62f06f647dd8fa8db9fc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " public void testTypeRefGenericAll02_Parameterizedl() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAll02_Parameterizedl() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, PARAMETERIZED_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());", "+\tsearch(\"*\", TYPE, TYPE_ARGUMENT_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bcbf7a0d3a138dcc91dbe6668213ff2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "147aad43f7900f9d4f22271c9fe4f288f16528d9", "commitAfterChange": "820af9e764943dadd04b7516b2f121c6aaa1d26b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic InMemoryIndex()", "signatureAfterChange": "\r \tpublic InMemoryIndex()", "diff": ["-\t\tsuper();\r", "+\t\tinit();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd549e8bd96ed91d367ee88c61fe653", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "ab8c02c44a008f2de315de55f5173248fa4552c7", "commitAfterChange": "312080ad16a6bef0ac87ef3aa13c9fc56f80f732", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic static String getPluginExtClassesDir()", "signatureAfterChange": "  \tpublic static String getPluginExtClassesDir()", "diff": ["-\t\treturn getFileInPlugin( AptTestsPlugin.getDefault(), new Path( \"/binext\" ) ) //$NON-NLS-1$", "+\t\treturn getFileInPlugin( AptTestsPlugin.getDefault(), new Path( BIN_EXT ) ) //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bd8efde7eda0e60e69ce10fc215b7c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeArgument(int rank)", "signatureAfterChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeArgument(int rank)", "diff": ["-\tpublic TypeAnnotationWalker toTypeArgument(int rank) {", "+\tpublic ITypeAnnotationWalker toTypeArgument(int rank) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bf66dd880db2cf4580165e8d41c920e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic boolean visit(AnnotationReturnStatement statement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(JavadocReturnStatement statement, BlockScope scope)", "diff": ["-\tpublic boolean visit(AnnotationReturnStatement statement, BlockScope scope) {", "+\tpublic boolean visit(JavadocReturnStatement statement, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bf9053d95d6cd5fc7f6137158bc5e36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\t\tblock.sourceStart = ((Initializer)fieldDeclaration).bodyStart;", "+\t\tblock.sourceStart = ((Initializer)fieldDeclaration).sourceStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bfd74b824f9ac211edda2009e131ec9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "900c13d17fd147c187a2b319111ff0c850c4ae89", "commitAfterChange": "f02cc00df615ce0df96d2675e50465c713b4b942", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "signatureAfterChange": "  \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "diff": ["-\t\t\tAlignment assignmentAlignment = this.scribe.createAlignment(\"fieldDeclarationAssignmentAlignment\", this.preferences.alignment_for_assignment, Alignment.R_OUTERMOST, 1, this.scribe.scanner.currentPosition); //$NON-NLS-1$", "+\t\t\tAlignment assignmentAlignment = this.scribe.createAlignment(\"fieldDeclarationAssignmentAlignment\", this.preferences.alignment_for_assignment, Alignment.R_INNERMOST, 1, this.scribe.scanner.currentPosition); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c0558adfab2ccd4f9c1d727402263ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "24c681585ef2f4b155e3d0f5cb2c551e612e2484", "commitAfterChange": "1075c02575f13a345cda8e06bd18891df8b3e61e", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tAnnotationMethodDeclaration annotationTypeMemberDeclaration, \t\t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tAnnotationMethodDeclaration annotationTypeMemberDeclaration, \t\t\tClassScope scope)", "diff": ["-        this.scribe.printModifiers(annotationTypeMemberDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_MEMBER);", "+        this.scribe.printModifiers(annotationTypeMemberDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_METHOD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c0ffebabfecf502afbe7ecb0cd9134f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionParserTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(CompletionParserTest.class);", "+\treturn buildAllCompliancesTestSuite(CompletionParserTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c101b5595e9bc72e60479fa44ac5e86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "signatureAfterChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceType(), computePackageFrom(compoundName));\r", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c2b53d23cc6f70b21defff85b12771c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ab887d57001c56847b048951c3a4d17601aad067", "commitAfterChange": "b1b6c60124587fbd079fe4c3037f97398ed2c792", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic MethodBinding findMethodForArray( \t\tArrayBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethodForArray( \t\tArrayBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\treturn new ProblemMethodBinding(selector, argumentTypes, ProblemReasons.NotFound);", "+\t\t\treturn new ProblemMethodBinding(selector, argumentTypes, ProblemReasons.NoSuchMethodOnArray);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c2cacf6f962c909cf9d1b33da968dc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7183d81a2458b7a9ecc9004f74bf12b52ac2eafc", "commitAfterChange": "54eb6fa8730358fcf98285db139cf9edbd02f92a", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 73, "signatureBeforeChange": " \t \tfinal void doCopySourcePreVisit(CopySourceInfo[] infos, Stack nodeEndStack)", "signatureAfterChange": " \t \tfinal void doCopySourcePreVisit(CopySourceInfo[] infos, Stack nodeEndStack)", "diff": ["-\t\t\t\tnodeEndStack.push(curr.getEndNode());", "+\t\t\t\tnodeEndStack.push(curr.getNode());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c381dba319e9b2f840a0dab3998bdb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "40a85c2d4c57226c917bc0f991a26ac5a5d8b085", "commitAfterChange": "a256960ed4710f2897d78e274a4eaeebfce80126", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  \tpublic InfixExpression convert(StringLiteralConcetanation expression)", "signatureAfterChange": "  \tpublic InfixExpression convert(StringLiteralConcatenation expression)", "diff": ["-\tpublic InfixExpression convert(StringLiteralConcetanation expression) {", "+\tpublic InfixExpression convert(StringLiteralConcatenation expression) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c503ca5b39ec8c66376e433d3a7751b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public SyntheticFieldBinding addSyntheticFieldForSwitchEnum(char[] fieldName, String key)", "signatureAfterChange": " public SyntheticFieldBinding addSyntheticFieldForSwitchEnum(char[] fieldName, String key)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c57e173203da1f4beab2e6b058e24fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testBug68757b() throws JavaModelException", "signatureAfterChange": " public void testBug68757b() throws JavaModelException", "diff": ["-\t\t\"OtherType[TYPE_REF]{javadoc.tests.OtherType, javadoc.tests, Ljavadoc.tests.OtherType;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"OtherType[TYPE_REF]{javadoc.tests.OtherType, javadoc.tests, Ljavadoc.tests.OtherType;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7043256858aa5525f13bfcc3e82e1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testSuggestFieldName001()", "signatureAfterChange": " public void testSuggestFieldName001()", "diff": ["-\t", "-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7491f95490d06fdb53b1f970b1e9f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationFragment.java", "commitBeforeChange": "a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8", "commitAfterChange": "7df061f9da0ab96be87e5851cb157a28c5f5bca0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (this.extraDimensionInfos == null ? 0 : getExtraDimensionInfos().size());", "+\t\t\t+ (this.extraDimensionInfos == null ? 0 : extraDimensionInfos().size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c7c69077d83dd3147e717320807de2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e85892c253838af833bc92f9299167abe8a2daf4", "commitAfterChange": "594cd83ff88684fe048c67afeebfbae2953dc7be", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate void assertLineEquals(String actualContents, String originalSource, String expectedContents, boolean checkNull)", "signatureAfterChange": "  \tprivate void assertLineEquals(String actualContents, String originalSource, String expectedContents, boolean checkNull)", "diff": ["-\t\t\t\tSystem.out.println(Util.displayString(expectedContents, 2));", "+\t\t\t\tSystem.out.println(Util.displayString(actualContents, 2));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c896e49bebf7aa2b3eb9036412a4baf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest.java", "commitBeforeChange": "9608f18cebf8754825a0dfb19f5331e058693585", "commitAfterChange": "bb00fa606e0fd8f3e90baadd6636bd41e8fd0084", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprotected String[] getDefaultClassPaths()", "signatureAfterChange": " \t \tprotected String[] getDefaultClassPaths()", "diff": ["-\t\t\tnewClassPaths[length] = getClass().getResource(zipFile).getPath();", "+\t\t\tnewClassPaths[length] = getClass().getResource(ZIP_FILE).getPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c9e758cd7da3a682c684c164911135e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "c6d868d8783a57da635a4ee823bfa99a77283712", "commitAfterChange": "eb94d4f8322ccc35580c2be98b06636564603ba3", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic boolean visit(ParameterizedType node)", "signatureAfterChange": " \tpublic boolean visit(ParameterizedType node)", "diff": ["-\t\tnode.getName().accept(this);", "+\t\tnode.getType().accept(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ca032fdd6008c82e61a9c3a9aef5061", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\t public void searchDeclarationsOfReferencedTypes(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": "\t public void searchDeclarationsOfReferencedTypes(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\t\tMatchLocator locator = new MatchLocator2(", "+\t\tMatchLocator locator = new MatchLocator("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cab0d0c5b0d4703c635d0d410c4014b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b34a79aea557f53b7f18bd9181d2f1aa9458b4f9", "commitAfterChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tpublic void computePackageFragmentRoots(\r \t\tObjectVector accumulatedRoots, \r \t\tObjectSet rootIDs, \r \t\tboolean insideOriginalProject,\r \t\tboolean checkExistency,\r \t\tboolean retrieveExportedRoots)", "signatureAfterChange": "\r \tpublic void computePackageFragmentRoots(\r \t\tObjectVector accumulatedRoots, \r \t\tHashSet rootIDs, \r \t\tboolean insideOriginalProject,\r \t\tboolean checkExistency,\r \t\tboolean retrieveExportedRoots)", "diff": ["-\t\tObjectSet rootIDs, \r", "+\t\tHashSet rootIDs, \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cb21817e36d0fb46ba5a29794800a0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "          public AnnotationMirrorImpl(IResolvedAnnotation annotationAstNode, EclipseDeclarationImpl decl, BaseProcessorEnv env)", "signatureAfterChange": "          public AnnotationMirrorImpl(IAnnotationBinding annotationAstNode, EclipseDeclarationImpl decl, BaseProcessorEnv env)", "diff": ["-    public AnnotationMirrorImpl(IResolvedAnnotation annotationAstNode, EclipseDeclarationImpl decl, BaseProcessorEnv env)", "+    public AnnotationMirrorImpl(IAnnotationBinding annotationAstNode, EclipseDeclarationImpl decl, BaseProcessorEnv env)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cb7d528aa1fddbb76cf9621948eb630", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "f5937020c6b957eed03745f57cfee671f23dd9b8", "commitAfterChange": "ad2aca1c2960107e50013b8f7866125addb168b4", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  private void scanTypeForContainerAnnotation(IBinaryType binaryType, char[][][] missingTypeNames)", "signatureAfterChange": "  private void scanTypeForContainerAnnotation(IBinaryType binaryType, char[][][] missingTypeNames)", "diff": ["-\t\t\t\t\t\tthis.containerAnnotation = (ReferenceBinding) this.environment.getTypeFromSignature(((ClassSignature)value).getTypeName(), 0, -1, false, null, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\t\t\t\tthis.containingAnnotation = (ReferenceBinding) this.environment.getTypeFromSignature(((ClassSignature)value).getTypeName(), 0, -1, false, null, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cd2e4205286bb4ddf0309014613cd76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic DefaultCodeFormatter(FormattingPreferences preferences, Map options)", "signatureAfterChange": "  \tpublic DefaultCodeFormatter(DefaultCodeFormatterOptions preferences, Map options)", "diff": ["-\tpublic DefaultCodeFormatter(FormattingPreferences preferences, Map options) {", "+\tpublic DefaultCodeFormatter(DefaultCodeFormatterOptions preferences, Map options) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cd84ae0b748fffe2edb4f5f1668a087", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected OpenableElementInfo createElementInfo()", "signatureAfterChange": " protected Object createElementInfo()", "diff": ["-protected OpenableElementInfo createElementInfo() {", "+protected Object createElementInfo() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cd9506dbad3cb199509b0f26f8487ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "8eff811a28d835d940585e1dd6e43b7e81d9c25c", "commitAfterChange": "ecd6b6b03e84e16fa2ef3316475695c9990930d4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "signatureAfterChange": " \tprivate IPath[] computeProjectsAndJars(IType type) throws JavaModelException", "diff": ["-\t\t\t\t\t\tIPackageFragmentRoot[] roots = project.getPackageFragmentRoots();", "+\t\t\t\t\t\tIPackageFragmentRoot[] roots = project.getAllPackageFragmentRoots();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ce17c34fe602b387b95e258b1d5b2de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void testInvalidTagsMethodNoSupport()", "signatureAfterChange": " \tpublic void testInvalidTagsMethodNoSupport()", "diff": ["-\t\trunConformTest(InvalidReferencesMethodJavadocComments);", "+\t\trunConformTest(METHODS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cf2d40b504f1f3a18b9e688a14ae1ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CreateImportsTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test007() throws JavaModelException", "signatureAfterChange": " \tpublic void test007() throws JavaModelException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d00c66b3b5b336b1c6e2d43a5885106", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "bcb907ad93b1202cb7679b9dabebf16d872cd1bf", "commitAfterChange": "3ef93f23afcd2f32a7f2e702fed5d9d29c70e752", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \tpublic boolean visit(Initializer node)", "signatureAfterChange": "\r \tpublic boolean visit(InstanceofExpression node)", "diff": ["+\tpublic boolean visit(InstanceofExpression node) {\r", "+\t\treturn true;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d07bd43fd384a1bd565d00a335bbb53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "87ba3addb06e0bd690b97dd2e305fffcc5db74fe", "commitAfterChange": "8046249ea5657bdf56e1ad6e70f968e6217d4dd0", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \r public void shutdown()", "signatureAfterChange": "\r \r public void shutdown()", "diff": ["-\t\t\t\t\tJobManager.log(\"Deleting index file \" + indexesFiles[i]); //$NON-NLS-1$\r", "+\t\t\t\t\tJobManager.verbose(\"Deleting index file \" + indexesFiles[i]); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d54635343f4b522888a8497038cdcfa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_6);", "+\t\treturn buildMinimalComplianceTestSuite(testClass(), F_1_6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d5646d90765e0174aa7c3ba74f38159", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocPackageCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void test010() throws JavaModelException", "signatureAfterChange": " public void test010() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d5cea7ec0ed8b8a2b8b80d7294154d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel)", "signatureAfterChange": "  \tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel)", "diff": ["-\tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel) {", "+\tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d6095d8ec7f011e2a4f93ce2254a0a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope) {", "+\tpublic void traverse(ASTVisitor visitor, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d956b299bfdeca829619360bfd03bc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ddd224fb46a93d2d42c51b540573c4ff473b8c5", "commitAfterChange": "185794a74ce9e7c2b47a4b8dbd2f41e89a7a469e", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": "\r \tpublic void endVisit(ArrayCreation node)", "signatureAfterChange": "\r \r \tpublic void endVisit(AnonymousClassDeclaration node)", "diff": ["+\tpublic void endVisit(AnonymousClassDeclaration node) {\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d9834c8f5b49cadf0ecea9b9b14cfa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceRefElement.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["-public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner) {", "+public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dbbeb75d21b55f3fa6d1b5c204bc83d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompoundAssignment.java", "commitBeforeChange": "6f559832866ec7957220224e260ced70fbcf727a", "commitAfterChange": "f3a6f459efd2ac1aed8a2fbc164dee41b4c19dd6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tint result = OperatorExpression.ResolveTypeTables[operator][ (lhsId << 4) + expressionId];", "+\t\tint result = OperatorExpression.OperatorSignatures[operator][ (lhsId << 4) + expressionId];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de6dac02462cdb10d03b174056b6ea6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void test103() throws JavaModelException", "signatureAfterChange": " public void test103() throws JavaModelException", "diff": ["-\t\t\t\"foo[JAVADOC_METHOD_REF]{{@link ZBasicTestTypes#foo()}, Ljavadoc.types.ZBasicTestTypes;, ()V, foo, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\t\"foo[JAVADOC_METHOD_REF]{{@link ZBasicTestTypes#foo()}, Ljavadoc.types.ZBasicTestTypes;, ()V, foo, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dea1a254ecc354d94b292e52610b8c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tpublic void testMissingTagsErrorProtected()", "signatureAfterChange": " \tpublic void testMissingTagsErrorProtected()", "diff": ["-\t\trunNegativeTest(MissingTags, resultForMissingTags(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(MISSING_TAGS, resultForMissingTags(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df3e88970818b53bdd48a0a836ae2aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/dom/StandAloneASTParserTest.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void test5()", "signatureAfterChange": "  \tpublic void test5()", "diff": ["-\t\tASTParser parser = ASTParser.newParser(JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(JLS_LATEST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df44c3a844097102c176b82360b550a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "93095c2a7ab7ebf10c67a53f522d196aee31692f", "commitAfterChange": "68da60f848d452f075f2d3f68dd3b898ded50b7e", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \tpublic IPath getOutputLocation() throws JavaModelException", "signatureAfterChange": "\r \tpublic IPath getOutputLocation() throws JavaModelException", "diff": ["-\t\t\tif (this.getProject().isOpen()){\r", "+\t\t\tif (this.getProject().isAccessible()){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df4e5704571c8510bf68473fb6e0429", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected TypeAnnotationWalker toTarget(int targetType)", "signatureAfterChange": " \tprotected ITypeAnnotationWalker toTarget(int targetType)", "diff": ["-\tprotected TypeAnnotationWalker toTarget(int targetType) {", "+\tprotected ITypeAnnotationWalker toTarget(int targetType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5df613ea224f1f7509a8aaaf27284fb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "a8ebe98c7b687ea450305732efa25afb0944336e", "commitAfterChange": "96a09d96e56ab454cb92b7163871c6f3413e482e", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public FlowInfo setReachMode(int reachMode)", "signatureAfterChange": "  public FlowInfo setReachMode(int reachMode)", "diff": ["-\t\tthis.tagBits |= UNREACHABLE;", "+\t\tthis.tagBits |= reachMode;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e063cd7edb59797d5b2b4ffb2bbfca1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "20f7fb10212f4f53eb2b3bbb2b168dd6022d4a59", "commitAfterChange": "ce69f7c31466a90f877dec99ede18113f1e111e2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void compile(SourceFile[] units)", "signatureAfterChange": " protected void compile(SourceFile[] units)", "diff": ["-\tBuildContext[] participantResults = this.javaBuilder.participants == null ? null : notifyParticipants(units);", "+\tCompilationParticipantResult[] participantResults = this.javaBuilder.participants == null ? null : notifyParticipants(units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e0aa12b63d89ed9b403e7947c0745e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \t\tpublic boolean match(VariableDeclarationExpression node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(TextElement node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(TextElement node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e0d06acba4cb5246ca89036e407947d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceElementParserTest.java", "commitBeforeChange": "cd8a825e0763d05692512bf2d61b656a1da5c5d8", "commitAfterChange": "54beaf9a0ac7e8e91c308765e4aff36ce5749605", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " protected void enterAbtractMethod(MethodInfo methodInfo)", "signatureAfterChange": " protected void enterAbtractMethod(MethodInfo methodInfo)", "diff": ["-\t\t\taddTypeParameter(typeParameterInfo);", "+\t\t\taddTypeParameterToMethod(typeParameterInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e23a3ee788812bb98f23a2af0324130", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "bfcd45867d04fefcde8c411b2c4f613fed962f2b", "commitAfterChange": "8360857ac96415dcd60ac94fbc284e7801424ade", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     ProcessorEnvImpl( \t\t\tfinal ICompilationParticipantResult[] filesWithAnnotations, \t\t\tfinal IFile[] additionalFiles, \t\t\tfinal IJavaProject javaProj)", "signatureAfterChange": "     ProcessorEnvImpl( \t\t\tfinal ICompilationParticipantResult[] filesWithAnnotations, \t\t\tfinal ICompilationParticipantResult[] additionalFiles, \t\t\tfinal IJavaProject javaProj)", "diff": ["-\t\t\tfinal IFile[] additionalFiles,", "+\t\t\tfinal ICompilationParticipantResult[] additionalFiles,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e544492f519de3d4d4ca6c9916f9f5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticAccessMethodBinding.java", "commitBeforeChange": "3a463f275914c0b0458a281ec5dc56963f900bba", "commitAfterChange": "377a3fde6f55f6083922d74da518425af8bf8632", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void initializeConstructorAccessor(MethodBinding targetConstructor)", "signatureAfterChange": " \t public void initializeConstructorAccessor(MethodBinding targetConstructor)", "diff": ["- */", "- public void initializeConstructorAccessor(MethodBinding targetConstructor) {", "-", "-\tthis.targetMethod = targetConstructor;", "-\tthis.modifiers = AccDefault | AccSynthetic;", "-\tSourceTypeBinding sourceType = ", "-\t\t(SourceTypeBinding) targetConstructor.declaringClass; ", "-\tSyntheticAccessMethodBinding[] knownAccessMethods = ", "-\t\tsourceType.syntheticAccessMethods(); ", "-\tthis.index = knownAccessMethods == null ? 0 : knownAccessMethods.length;", "-", "-\tthis.selector = targetConstructor.selector;", "-\tthis.returnType = targetConstructor.returnType;", "-\tthis.accessType = ConstructorAccess;", "-\tthis.parameters = new TypeBinding[targetConstructor.parameters.length + 1];", "-\tSystem.arraycopy(", "-\t\ttargetConstructor.parameters, ", "-\t\t0, ", "-\t\tthis.parameters, ", "-\t\t0, ", "-\t\ttargetConstructor.parameters.length); ", "-\tparameters[targetConstructor.parameters.length] = ", "-\t\ttargetConstructor.declaringClass; ", "-\tthis.thrownExceptions = targetConstructor.thrownExceptions;", "-\tthis.declaringClass = sourceType;", "-", "-\t// check for method collision", "-\tboolean needRename;", "-\tdo {", "-\t\tcheck : {", "-\t\t\tneedRename = false;", "-\t\t\t// check for collision with known methods", "-\t\t\tMethodBinding[] methods = sourceType.methods;", "-\t\t\tfor (int i = 0, length = methods.length; i < length; i++) {", "-\t\t\t\tif (this.selector == methods[i].selector", "-\t\t\t\t\t&& this.areParametersEqual(methods[i])) {", "-\t\t\t\t\tneedRename = true;", "-\t\t\t\t\tbreak check;", "-\t\t\t// check for collision with synthetic accessors", "-\t\t\tif (knownAccessMethods != null) {", "-\t\t\t\tfor (int i = 0, length = knownAccessMethods.length; i < length; i++) {", "-\t\t\t\t\tif (knownAccessMethods[i] == null)", "-\t\t\t\t\t\tcontinue;", "-\t\t\t\t\tif (this.selector == knownAccessMethods[i].selector", "+\t */", "+\t public void initializeConstructorAccessor(MethodBinding targetConstructor) {", "+\t", "+\t\tthis.targetMethod = targetConstructor;", "+\t\tthis.modifiers = AccDefault | AccSynthetic;", "+\t\tSourceTypeBinding sourceType = ", "+\t\t\t(SourceTypeBinding) targetConstructor.declaringClass; ", "+\t\tSyntheticAccessMethodBinding[] knownAccessMethods = ", "+\t\t\tsourceType.syntheticAccessMethods(); ", "+\t\tthis.index = knownAccessMethods == null ? 0 : knownAccessMethods.length;", "+\t", "+\t\tthis.selector = targetConstructor.selector;", "+\t\tthis.returnType = targetConstructor.returnType;", "+\t\tthis.accessType = ConstructorAccess;", "+\t\tthis.parameters = new TypeBinding[targetConstructor.parameters.length + 1];", "+\t\tSystem.arraycopy(", "+\t\t\ttargetConstructor.parameters, ", "+\t\t\t0, ", "+\t\t\tthis.parameters, ", "+\t\t\t0, ", "+\t\t\ttargetConstructor.parameters.length); ", "+\t\tparameters[targetConstructor.parameters.length] = ", "+\t\t\ttargetConstructor.declaringClass; ", "+\t\tthis.thrownExceptions = targetConstructor.thrownExceptions;", "+\t\tthis.declaringClass = sourceType;", "+\t", "+\t\t// check for method collision", "+\t\tboolean needRename;", "+\t\tdo {", "+\t\t\tcheck : {", "+\t\t\t\tneedRename = false;", "+\t\t\t\t// check for collision with known methods", "+\t\t\t\tMethodBinding[] methods = sourceType.methods;", "+\t\t\t\tfor (int i = 0, length = methods.length; i < length; i++) {", "+\t\t\t\t\tif (this.selector == methods[i].selector", "-\t\t\t}", "-\t\t}", "-\t\tif (needRename) { // retry with a new extra argument", "-\t\t\tint length = this.parameters.length;", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tthis.parameters, ", "-\t\t\t\t0, ", "-\t\t\t\tthis.parameters = new TypeBinding[length + 1], ", "-\t\t\t\t0, ", "-\t\t\t\tlength); ", "-\t\t\tthis.parameters[length] = this.declaringClass;", "-\t\t}", "-\t} while (needRename);", "-", "-\t// retrieve sourceStart position for the target method for line number attributes", "-\tAbstractMethodDeclaration[] methodDecls = ", "-\t\tsourceType.scope.referenceContext.methods; ", "-\tif (methodDecls != null) {", "-\t\tfor (int i = 0, length = methodDecls.length; i < length; i++) {", "-\t\t\tif (methodDecls[i].binding == targetConstructor) {", "-\t\t\t\tthis.sourceStart = methodDecls[i].sourceStart;", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t}", "-\t}", "-}", "+\t\t\t\t// check for collision with synthetic accessors", "+\t\t\t\tif (knownAccessMethods != null) {", "+\t\t\t\t\tfor (int i = 0, length = knownAccessMethods.length; i < length; i++) {", "+\t\t\t\t\t\tif (knownAccessMethods[i] == null)", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\tif (this.selector == knownAccessMethods[i].selector", "+\t\t\t\t\t\t\t&& this.areParametersEqual(knownAccessMethods[i])) {", "+\t\t\t\t\t\t\tneedRename = true;", "+\t\t\t\t\t\t\tbreak check;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\tif (needRename) { // retry with a new extra argument", "+\t\t\t\tint length = this.parameters.length;", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tthis.parameters, ", "+\t\t\t\t\t0, ", "+\t\t\t\t\tthis.parameters = new TypeBinding[length + 1], ", "+\t\t\t\t\t0, ", "+\t\t\t\t\tlength); ", "+\t\t\t\tthis.parameters[length] = this.declaringClass;", "+\t\t\t}", "+\t\t} while (needRename);", "+\t", "+\t\t// retrieve sourceStart position for the target method for line number attributes", "+\t\tAbstractMethodDeclaration[] methodDecls = ", "+\t\t\tsourceType.scope.referenceContext.methods; ", "+\t\tif (methodDecls != null) {", "+\t\t\tfor (int i = 0, length = methodDecls.length; i < length; i++) {", "+\t\t\t\tif (methodDecls[i].binding == targetConstructor) {", "+\t\t\t\t\tthis.sourceStart = methodDecls[i].sourceStart;", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e5587f6b7d92875b37f72ff6145eac7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "f6a20c30e007a8356ebe3368f563d0b2f3eb9676", "commitAfterChange": "5a18d76040d7f3f834842dfa666bffbfd5367c85", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tvoid buildMethods()", "signatureAfterChange": "  \tvoid buildMethods()", "diff": ["-\t\t\tFieldBinding[] fields = sourceType.fields();", "+\t\t\tFieldBinding[] fields = sourceType.unResolvedFields(); // https://bugs.eclipse.org/bugs/show_bug.cgi?id=301683"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e5c08a9e9dcb9ce1ba8dab86cb1be09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "a601b6b1bd0055831cf914eda4a394af5ff40421", "commitAfterChange": "aae3a2ae7793bc4970c4033658428e24ab5d11f5", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 88, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "diff": ["-\t\t\tICompilationUnit original = new CompilationUnit((IPackageFragment)getParent(), getElementName(), DefaultCompilationUnitOwner.PRIMARY);", "+\t\t\tICompilationUnit original = new CompilationUnit((IPackageFragment)getParent(), getElementName(), DefaultWorkingCopyOwner.PRIMARY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e5dc46ebb64e74e5a6788f92f7c2d80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testExternalJarChanged5() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarChanged5() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e620602be3fa6874723b492c70f2633", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e6fa51310fbf9da8d3ccb80c7e06e3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_5);", "+\treturn buildMinimalComplianceTestSuite(testClass(), F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e7b8b5d1adde87bdd5b88b432b3f068", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["-\t\tcase IProblem.UnsafeRawConversion:", "+\t\tcase IProblem.UnsafeTypeConversion:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e7f7e933e9efbc6a3e3fbdade51f299", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void testAnnotations3() throws JavaModelException", "signatureAfterChange": " public void testAnnotations3() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e897d3f5ababedf2d89ab6b8d207e9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "94dcb6652f514256018e8c1f7dcc1acc7030201c", "commitAfterChange": "c1caadb3e97f0c5d02c6ad3748ed5e3373af3f00", "methodNumberBeforeChange": 236, "methodNumberAfterChange": 236, "signatureBeforeChange": " protected void reportSyntaxErrors(boolean isDietParse, int oldFirstToken)", "signatureAfterChange": " protected void reportSyntaxErrors(boolean isDietParse, int oldFirstToken)", "diff": ["-\t\tint[][] intervalToSkip = org.eclipse.jdt.internal.compiler.parser.diagnose.Util.computeDietRange(types);", "+\t\tint[][] intervalToSkip = org.eclipse.jdt.internal.compiler.parser.diagnose.RangeUtil.computeDietRange(types);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e91378d030f34d6c069e556a59c4fee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": " \t \tpublic boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\t\t\t\t\t\t\t\tTypeBinding genericMatch = genericCastType.findSuperTypeWithSameErasure(expressionType);", "+\t\t\t\t\t\t\t\tTypeBinding genericMatch = genericCastType.findSuperTypeOriginatingFrom(expressionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e97766b2ffe5a581e9e0ef664d6c135", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void testBug70598() throws JavaModelException, CoreException, IOException", "signatureAfterChange": " \tpublic void testBug70598() throws JavaModelException, CoreException, IOException", "diff": ["-\t\tdeleteFile(file);", "+\t\tdeleteResource(file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e99b219cef374a4fd17e5aa6fbfbccc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "234e90f1063594cbfe450e6804c5db0a515eda2c", "commitAfterChange": "0af096b2d34684a162b7a195205699b7a15a3c32", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings)", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings)", "diff": ["-\t\tParser parser =", "+\t\tCommentRecorderParser parser ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e9c50faf698c071f88ba4728b1b8c13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \t \tprivate void computeExpectedTypesForMessageSend( \t\tReferenceBinding binding, \t\tchar[] selector, \t\tExpression[] arguments, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean isStatic)", "signatureAfterChange": " \t \tprivate void computeExpectedTypesForMessageSend( \t\tReferenceBinding binding, \t\tchar[] selector, \t\tExpression[] arguments, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean isStatic)", "diff": ["-\t\t\t\tTypeBinding argType = argument.expressionType;", "+\t\t\t\tTypeBinding argType = argument.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5eca20eed8d7f8cb6ef3f56eb83692c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void testInvalidTagsMethodErrorNotags()", "signatureAfterChange": " \tpublic void testInvalidTagsMethodErrorNotags()", "diff": ["-\t\trunConformTest(InvalidReferencesMethodJavadocComments);", "+\t\trunConformTest(METHODS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ede065cd4f4f2636e71d823193ca35c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "53aa3826abf5a6d0c6d46ffdf5ca06318e0e608e", "commitAfterChange": "3a45bbbeb56dfb4a2b74aec609db313f8b4d8387", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic CodeFormatterVisitor()", "signatureAfterChange": "  \tpublic CodeFormatterVisitor()", "diff": ["-\t\tthis(new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSetttings()), JavaCore.getDefaultOptions(), 0, -1);", "+\t\tthis(new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSettings()), JavaCore.getDefaultOptions(), 0, -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ee5a64065172a3a264ce4abf9add8d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "7c6fe4f21cb5ba3a5ee61e01b5b0b2742e043690", "commitAfterChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void endVisit(IntersectionType node)", "signatureAfterChange": " \tpublic void endVisit(IntersectionType node)", "diff": ["-\t\tendVisit(node);", "+\t\tendVisitNode(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f00361e7d32002a7643d79a4e67571c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " public void if_icmple(Label lbl)", "signatureAfterChange": " public void if_icmple(BranchLabel lbl)", "diff": ["-public void if_icmple(Label lbl) {", "+public void if_icmple(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f05d4aeeb79c272a9abd3910c3ce54c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "030eb4fda54a6751c1b822374d11bd8e8163881c", "commitAfterChange": "ec1201be6eb9490fec9fdaa6f4ea5d677aacc407", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void addSyntheticConstructorAccessMethod(SyntheticMethodBinding methodBinding)", "signatureAfterChange": " \tpublic void addSyntheticConstructorAccessMethod(SyntheticMethodBinding methodBinding)", "diff": ["-\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tint attributeNumber = generateMethodInfoAttributes(methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1220a52f08cec10ce7645d13808c29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "d8ceda9e2c634a0a60e12aec6892fc13a5bff2e9", "commitAfterChange": "9cdab174a8259404397626ec55d5a28c70fc3d9f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass, String testPrefix, String suiteName)", "signatureAfterChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass, String testPrefix, String suiteName)", "diff": ["-\t\tMethod[] methods = evaluationTestClass.getMethods();", "+\t\tMethod[] methods = evaluationTestClass.getDeclaredMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f23af9fd88a1417df126a6a82641ff0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public boolean exists()", "signatureAfterChange": " public boolean exists()", "diff": ["-\treturn validateExistence(getResource()).isOK();", "+\treturn validateExistence(resource()).isOK();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f4c819c4c0885ce204f3a6367e38082", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate TypeBinding getTypeFromSignature(String typeSignature, Scope scope)", "signatureAfterChange": "  \tprivate TypeBinding getTypeFromSignature(String typeSignature, Scope scope)", "diff": ["-\t\t\tassignableTypeBinding = this.lookupEnvironment.getTypeFromTypeSignature(wrapper, typeVariables, this.assistScope.enclosingClassScope().referenceContext.binding, null, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\tassignableTypeBinding = this.lookupEnvironment.getTypeFromTypeSignature(wrapper, typeVariables, this.assistScope.enclosingClassScope().referenceContext.binding, null, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f5d9998a28e8bbab616ab8b0505855c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "3c1df96cd104b0fc430e4dc2bba86da9035261e4", "commitAfterChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["-\t\toptionsMap.put(OPTION_ReportAmbiguousVarargsArgument, getSeverityString(AmbiguousVarargsArgument)); ", "+\t\toptionsMap.put(OPTION_ReportAmbiguousVarargsArgument, getSeverityString(CastVarargsArgument)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f5ee591b9357ca20a46459203f80efe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "0ce30fa1efeccdb8f098a9dcf15c46f705a57e6f", "commitAfterChange": "59a26b3b3e45e8769323a82cc5fccc64fe9d5f4a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": " \tpublic FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t\t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(fieldBinding)) {", "+\t\t\t\t\t\t\t&& currentScope.needBlankFinalFieldInitializationCheck(fieldBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f6819af2169e8afc3f05fd454871030", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public void test032() throws JavaModelException", "signatureAfterChange": "  public void test032() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f69558e717e74e83bcdce76c17354d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "957977037bae1c5fe509d6f5b83d064a1bf50d04", "commitAfterChange": "78430308e7d45c151f6732314055fefd33935867", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected void locateMatches(JavaProject javaProject, PossibleMatchSet matchSet) throws JavaModelException", "signatureAfterChange": " protected void locateMatches(JavaProject javaProject, PossibleMatchSet matchSet) throws JavaModelException", "diff": ["-\tPossibleMatch[] possibleMatches = matchSet.getPossiblelMatches(javaProject.getPackageFragmentRoots());", "+\tPossibleMatch[] possibleMatches = matchSet.getPossibleMatches(javaProject.getPackageFragmentRoots());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f6eab94853690aea11ae110b151a3e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testMethodWithError8() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError8() throws JavaModelException, CoreException", "diff": ["-\tthis.workingCopy.destroy(); // don't use the one created in setUp()", "+\tthis.workingCopy.discardWorkingCopy(); // don't use the one created in setUp()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f76ce917da9a400bbb4c1f17ebfc4a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InternalScannerTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\t\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f771552e614e1f1b27774cdc0d3ce9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "35bd4e1ac4b1e11c036461a7309d887d1527f75a", "commitAfterChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\t\t\tif (method.declaringClass == method2.declaringClass && areMethodsEqual(method, method2)) {", "+\t\t\tif (method.declaringClass == method2.declaringClass && areMethodsCompatible(method, method2)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f7d5be7f1809c6954050472aaad6b23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void testTypeRefGenericAllG5_Parameterized() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAllG5_Parameterized() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, PARAMETERIZED_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);", "+\tsearch(\"*\", TYPE, TYPE_ARGUMENT_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f988e39ca576850760fe843e4181cdf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "e5bce80011e3833bbea45afb8cd4fb116b193fc5", "commitAfterChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic IVariableBinding[] getDeclaredFields()", "signatureAfterChange": " \tpublic IVariableBinding[] getDeclaredFields()", "diff": ["-\t\t} catch (AbortCompilation e) {", "-\t\t\t// in case a field cannot be resolvable due to missing jars on the classpath", "-\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t} catch (RuntimeException e) {", "+\t\t\t/* in case a method cannot be resolvable due to missing jars on the classpath", "+\t\t\t * see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=63550", "+\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=64299", "+\t\t\t */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5faeba0ed7d097d330021dbd633671d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConstantTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb22c278ffe32b018ac4c1295abfebf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["-\t\tif (patternFineGrain == 0 || (patternFineGrain & IJavaSearchConstants.FIELD_TYPE_DECLARATION_TYPE_REFERENCE) != 0) {", "+\t\tif (patternFineGrain == 0 || (patternFineGrain & IJavaSearchConstants.FIELD_DECLARATION_TYPE_REFERENCE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fb2b2f45e3262ce3b526134eec8aab8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testParameterizedTypeSingleArgument02() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeSingleArgument02() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedSourceType(unit, \"g1.t.s.def.Generic<Exception>.Member\"); //$NON-NLS-1$", "+\t\tParameterizedSourceType type = selectParameterizedType(unit, \"g1.t.s.def.Generic<Exception>.Member\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fbed617b111665b707b4d977c5b9880", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tsynchronized IBinding resolveImport(ImportDeclaration importDeclaration)", "signatureAfterChange": " \tsynchronized IBinding resolveImport(ImportDeclaration importDeclaration)", "diff": ["-\t\t\t\t\t\tif ((binding.bindingType() & Binding.PACKAGE) != 0) {", "+\t\t\t\t\t\tif ((binding.kind() & Binding.PACKAGE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fc9f849b5fc414d8789598e4d261af0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic TypeBinding[] getNonWildcardParameterization(Scope scope)", "signatureAfterChange": " \tpublic TypeBinding[] getNonWildcardParameterization(Scope scope)", "diff": ["-\t\t\t\t\t\t\t\ttypes[i] = this.environment.createIntersectionCastType(refs);", "+\t\t\t\t\t\t\t\ttypes[i] = this.environment.createIntersectionType18(refs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fd72524e65ae57c9294f3aa77d721cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t \tpublic synchronized boolean isGeneratedFile( IFile f )", "signatureAfterChange": "  \t \tpublic synchronized boolean isGeneratedFile( IFile f )", "diff": ["-\t\tSet<IFile> s = _derivedFile2Parents.get( f ); ", "+\t\tSet<IFile> s = _generatedFile2ParentFiles.get( f ); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fdcc7446b31e972f389032e52d404e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/core/formatter/IndentManipulation.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static String trimIndent(String line, int indentUnitsToRemove, int tabWidth, int indentWidth)", "signatureAfterChange": " \tpublic static String trimIndent(String line, int indentUnitsToRemove, int tabWidth, int indentWidth)", "diff": ["-\t\t\ttrimmed= Scribe2.EMPTY_STRING;", "+\t\t\ttrimmed= Util.EMPTY_STRING;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5fee6cf394e673b79b0f08ad4109bafa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tTypeBinding typeBinding = qTypeRef.binding;", "+\tTypeBinding typeBinding = qTypeRef.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ffb1776e9302074ad7b4127ae0cba97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic boolean visit(ConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(ConstructorInvocation node)", "diff": ["-\t\t\tpos= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameLPAREN, pos);", "+\t\t\tpos= getScanner().getTokenEndOffset(TerminalTokens.TokenNameLPAREN, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60177a3af5f8205eea6af219f7b18f90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "dfed7f1b9ca73af170ad52dc060f4fca93f91582", "commitAfterChange": "24d2b526806e9f4be8e8354c9cfa88d403c9a6eb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportSuperfluousSemicolon,", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportEmptyStatement,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "601b85a779d73226a10ed6232417820e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationBinding.java", "commitBeforeChange": "ee7a9f184cb78c9a997b3d97c102d52d6cad8cc9", "commitAfterChange": "5ce130e25c355987e77b700c026948aca2c3cdd7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tAnnotationBinding(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding annotation, BindingResolver resolver)", "signatureAfterChange": "  \tAnnotationBinding(org.eclipse.jdt.internal.compiler.lookup.AnnotationBinding annotation, BindingResolver resolver)", "diff": ["-\t\tinternalAnnotation = annotation;", "+\t\tbinding = annotation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602b486681d7d2c5ec4e58d4f347c1c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Override \tpublic ITypeAnnotationWalker toMethodReturn()", "signatureAfterChange": "  \t@Override \tpublic TypeAnnotationWalker toMethodReturn()", "diff": ["-\tpublic ITypeAnnotationWalker toMethodReturn() {", "+\tpublic TypeAnnotationWalker toMethodReturn() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602c04e65ab55ba8ee5f6d34a44a7b62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "c57d63e48d2e13925643b8ebe6a288202f202e6b", "commitAfterChange": "e2a159c6596c04bca6bcd93e61dded936d044196", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t\t\t \t\tpublic CompilationParticipant[] getCompilationParticipants(IJavaProject project)", "signatureAfterChange": " \t\t\t\t \t\tpublic CompilationParticipant[] getCompilationParticipants(IJavaProject project)", "diff": ["-\t\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\t\tSafeRunner.run(new ISafeRunnable() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6050421ef3b61f0b0886adf9a27a3c4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "eb5c674616fb78a01d2f52e1347da4c921d981ae", "commitAfterChange": "d1eee17b22e6a5c7fead90ad113c3a52618d279b", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 162, "signatureBeforeChange": " \t \tprivate Set loadClasspathListCache(String cacheName)", "signatureAfterChange": " \t \tprivate Set loadClasspathListCache(String cacheName)", "diff": ["-\t\tFile cacheFile = getClasspathCacheFile(cacheName);", "+\t\tFile cacheFile = getClasspathListFile(cacheName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60a669770284bf4e035636c40ad52b07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic Argument(char[] name, long posNom, TypeReference tr, int modifiers)", "signatureAfterChange": " \t \tpublic Argument(char[] name, long posNom, TypeReference tr, int modifiers)", "diff": ["-\t\tthis.bits |= IsLocalDeclarationReachableMASK;", "+\t\tthis.bits |= IsLocalDeclarationReachable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60a6a5c766e770cea2c82d921b87d603", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate LocalTypeBinding buildLocalType( \t\tSourceTypeBinding enclosingType, \t\tPackageBinding packageBinding)", "signatureAfterChange": " \t \tprivate LocalTypeBinding buildLocalType( \t\tSourceTypeBinding enclosingType, \t\tPackageBinding packageBinding)", "diff": ["-\t\t\t\tif (memberContext.kind() == IGenericType.INTERFACE) {", "+\t\t\t\tif (memberContext.kind() == IGenericType.INTERFACE_DECL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60bebb168c27a78ee7de465bb3fa328c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/QualifiedTypeDeclarationPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public QualifiedTypeDeclarationPattern( \tchar[] qualification, \tchar[] simpleName, \tchar classOrInterface, \tint matchMode,  \tboolean isCaseSensitive)", "signatureAfterChange": " \t public QualifiedTypeDeclarationPattern( \tchar[] qualification, \tchar[] simpleName, \tchar classOrInterface, \tint matchMode,  \tboolean isCaseSensitive)", "diff": ["-\tthis.needsResolve = qualification != null;", "+\tthis.mustResolve = qualification != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60cd55635494a672c20a49361a1af48b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "bcb46990486d868577608d099b51c359510600ab", "commitAfterChange": "76641371763d25b26245b79d3162c6759e069b9e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public int match(MessageSend node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(MemberValuePair node, MatchingNodeSet nodeSet)", "diff": ["+public int match(MemberValuePair node, MatchingNodeSet nodeSet) {", "+\t// each subtype should override if needed", "+\treturn IMPOSSIBLE_MATCH;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60df6be8aa45e985c16a0fc09b6e9615", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "4e88e1625bb1c2659a2ee4ba931e466f5126f9f4", "commitAfterChange": "075da32620f3ceb13a370a8be8550de2baf091f1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \r protected char[] writeClassFile(ClassFile classFile, boolean isSecondaryType) throws CoreException", "signatureAfterChange": "\r \r protected char[] writeClassFile(ClassFile classFile, boolean isSecondaryType) throws CoreException", "diff": ["-\tString fileName = new String(classFile.fileName());\r", "+\tString fileName = new String(classFile.fileName()); // the qualified type name \"p1/p2/A\"\r", "-\tif (isClassFileChanged(file, fileName, bytes, isSecondaryType)) {\r", "+\tif (writeClassFileCheck(file, fileName, bytes, isSecondaryType)) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60e96ec585a21ec190b7050ee1cb8dca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "commitAfterChange": "2aa78105ee4089b7ff1a9a2c35425f71b0b156d5", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": "\r protected Expression getTypeReference(Expression exp)", "signatureAfterChange": "\r protected Expression getTypeReference(Expression exp)", "diff": ["-\texp.bits &= ~NameReference.RestrictiveFlagMASK;\r", "+\texp.bits &= ~AstNode.RestrictiveFlagMASK;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6103136808ad2f6b7e68db4a412fc8cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocFieldCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void test023() throws JavaModelException", "signatureAfterChange": "  public void test023() throws JavaModelException", "diff": ["-\t\t\"other[FIELD_REF]{other, Ljavadoc.fields.tags.OtherFields;, I, other, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"other[FIELD_REF]{other, Ljavadoc.fields.tags.OtherFields;, I, other, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "611e54790002d3352ed35c2c4bd766af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ListRewrite.java", "commitBeforeChange": "a2d2be92ededb467e24ec541264fdd8abe9bb244", "commitAfterChange": "0325089db3ca0a8e6a36752438c4d3b535f031b0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate ListRewriteEvent getEvent()", "signatureAfterChange": "  \tprivate ListRewriteEvent getEvent()", "diff": ["-\t\treturn getRewriteStore().getListEvent(this.parent, this.childProperty, true);", "+\t\treturn getRewriteStore().getListEvent(this.parent, this.childListProperty, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6135f35b80dddd63f409275228ecf0b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a3e63b72d2efd2058d202d3e2711391afc827fec", "commitAfterChange": "f0131d199789fbf75036ba10803faed4ef08b399", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \t \tprivate void completionOnFieldName(ASTNode astNode, Scope scope)", "signatureAfterChange": " \t \tprivate void completionOnFieldName(ASTNode astNode, Scope scope)", "diff": ["-\t\t\t\t\t\t\t\t\t\tInternalNamingConventions.VK_CONSTANT_FIELD;", "+\t\t\t\t\t\t\t\t\t\tInternalNamingConventions.VK_STATIC_FINAL_FIELD;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "613986bbc01d3e9f12bad09af95e3ae5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "e593164022433d17467e437ca5f1d1580fcf9c34", "commitAfterChange": "1ca61ba390ea54fcabd09223853d7a3d6816c249", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic ArrayCreation convert(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression expression)", "signatureAfterChange": "  \tpublic ArrayCreation convert(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression expression)", "diff": ["-\t\t\t\t\tsetArrayTypeAnnotationsAndSource(arrayType, expression.annotationsOnDimensions);", "+\t\t\t\t\tsetTypeAnnotationsAndSourceRangeOnArray(arrayType, expression.annotationsOnDimensions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61448f1a500c0f161118cd68e24c8eee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "9033b38dbde8d5f7ad2f8e95220a29f0a229ea8f", "commitAfterChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (this.componentType == null ? 0 : (this.ast.apiLevel() < AST.JLS8 ? getComponentType().treeSize() : getElementType().treeSize())", "+\t\t\t+ (this.type == null ? 0 : (this.ast.apiLevel() < AST.JLS8 ? getComponentType().treeSize() : getElementType().treeSize())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "614a88f6792e1ae7e88bf6b920a91cae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic void endVisit(VariableDeclarationFragment node)", "signatureAfterChange": " \tpublic void endVisit(TypeMethodReference node)", "diff": ["+\t}", "+\tpublic void endVisit(TypeMethodReference node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "614f29b976d215b58318ac9cc857183f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "40e34144bfe8e7e8c932e0e2ef34e62f16627ee7", "commitAfterChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \tprivate void findKeywordsForMember(char[] token, int modifiers)", "signatureAfterChange": " \t \tprivate void findKeywordsForMember(char[] token, int modifiers)", "diff": ["-\t\t\t\tkeywords[count++] = Keywords.ABSTARCT;", "+\t\t\t\tkeywords[count++] = Keywords.ABSTRACT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6168adb3d41f899c3a0146391ce498c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "a2a25daab3f792071cba7e3d51c3d2abf00c6c2a", "commitAfterChange": "8bffc680730baeb75a0764c02d5d9479eee4502e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-\t\t\t\tInvocationRecord prevInvocation = inferenceContext.enterPolyInvocation(invocation, invocation.arguments());", "+\t\t\t\tSuspendedInferenceRecord prevInvocation = inferenceContext.enterPolyInvocation(invocation, invocation.arguments());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "618f843a18b17dbff7e298935ab4e651", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "bac18f086dd9a87e1d5b6dea3b31ca1c92463a84", "commitAfterChange": "1b53a525120894192853120c7678edb264d25490", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\t\t\t\tmethodScope.resetDeclaringClassMethodStaticFlag(receiverType);", "+\t\t\t\t\t\t\t\t\t\tmethodScope.tagAsAccessingInstanceStateOf(receiverType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a3732ecf53b1f986fc490cd4ed8b24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " public void testNoChanges2() throws JavaModelException", "signatureAfterChange": " public void testNoChanges2() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61a62763ea8abda4470fe5e657c0f758", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "3631cf47f01fc0da1be7732f6c067adbe5bd4214", "commitAfterChange": "bcf1522935dfbdb0bc359777ceee5d7211666ccc", "methodNumberBeforeChange": 224, "methodNumberAfterChange": 226, "signatureBeforeChange": " protected static int original_state(int state)", "signatureAfterChange": " protected static int original_state(int state)", "diff": ["-\treturn -check(state);", "+\treturn -base_check(state);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61acde41c87244b0ced682e865c221ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "06e527d01f24b8076c8c7c3a4d049f8d32180f31", "commitAfterChange": "2ae762125645f01c4ad47da973faf039d215565a", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  protected void updateProblemsFor(SourceFile sourceFile, CompilationResult result) throws CoreException", "signatureAfterChange": "  protected void updateProblemsFor(SourceFile sourceFile, CompilationResult result) throws CoreException", "diff": ["-\t\tpkgResource.deleteMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, false, IResource.DEPTH_INFINITE);", "+\t\tpkgResource.deleteMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, false, IResource.DEPTH_ZERO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61b9aa20619ebf26fe6122451648fed0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopySearchTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testAddNewType() throws CoreException", "signatureAfterChange": " public void testAddNewType() throws CoreException", "diff": ["-\tnew SearchEngine(new IWorkingCopy[] {this.workingCopy}).search(", "+\tnew SearchEngine(new ICompilationUnit[] {this.workingCopy}).search("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61c25d009a74a81d0d970451a05b8e56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6fdaa2b9d78c89a1ed2269f5279c3e02cee4b6cd", "commitAfterChange": "8ec1d344fc5f9b16a04a2a15e36cb4db52cac4eb", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void closeZipFile(ZipFile zipFile)", "signatureAfterChange": " \tpublic void closeZipFile(ZipFile zipFile)", "diff": ["-\t\tif (this.zipFiles.getCurrent() != null) {", "+\t\tif (this.zipFiles.get() != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61c87e9e5744fe0808bd93946e018aad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tReferenceBinding typeBinding = null;", "+\tTypeBinding typeBinding = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61deaa155199b92ca8c0fe2abcb753a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void locateMatches( \t\tString[] filePaths,  \t\tIWorkspace workspace, \t\torg.eclipse.jdt.core.ICompilationUnit[] copies) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void locateMatches( \t\tString[] filePaths,  \t\tIWorkspace workspace, \t\torg.eclipse.jdt.core.ICompilationUnit[] copies) \t\tthrows JavaModelException", "diff": ["-\t\t\t\tif (this.pattern.needsResolve) {", "+\t\t\t\tif (this.pattern.mustResolve) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61df78e4e609c3defb89fd53e3f9b0d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testGetCategories09() throws CoreException", "signatureAfterChange": " public void testGetCategories09() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61f7e0911ccb2c7b6506cfed695b2b4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "649631b834e755f12bf40b9c916ce9dfc765a8d0", "commitAfterChange": "19a679a95bc1c8afc10cb50ce5a617f6914888ae", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 77, "signatureBeforeChange": " \t \tprivate CompletionProposal createRequiredTypeProposal(Binding binding, int start, int end, int relevance)", "signatureAfterChange": " \t \tprivate CompletionProposal createRequiredTypeProposal(Binding binding, int start, int end, int relevance)", "diff": ["-\t\t\tproposal.setSignature(getSignature(typeBinding));", "+\t\t\tproposal.setSignature(getRequiredTypeSignature(typeBinding));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61f8e0111f26691dfefede583330ad00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SaveIndex.java", "commitBeforeChange": "7139526b453f0e67eab8762699884060db7f0843", "commitAfterChange": "2acf337b771d06ad716c2ae54bdb8443b5b5d1d6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\treturn \"saving index for \" + this.path; //$NON-NLS-1$", "-\t}\t", "+\t\treturn \"saving index for \" + this.indexPath; //$NON-NLS-1$", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6213c433f34de62260e7b81a17c493f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tIBinding createBinding(String key)", "signatureAfterChange": " \t \tIBinding createBinding(String key)", "diff": ["-\t\tif (compilerBinding.bindingType() == Binding.ARRAY_TYPE) {", "+\t\tif (compilerBinding.kind() == Binding.ARRAY_TYPE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62380af7e5e63d573af448ac133a7ea8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "03026f75f39f11c89ea1f29e4a5f2b9760be3045", "commitAfterChange": "fa3a52963a70298064a79818b9188ed1e3795a34", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings, boolean recordParsingInformation)", "signatureAfterChange": "  \tpublic CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings, boolean recordParsingInformation)", "diff": ["-\t\tparser.scanner.setSource(source);", "+\t\tparser.scanner.setSource(compilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "623d7256c4046f627e195b64dac6bc8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/WildcardType.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static List propertyDescriptors(int apiLevel)", "signatureAfterChange": " \tpublic static List propertyDescriptors(int apiLevel)", "diff": ["-\t\t\tcase AST.JLS4:", "+\t\t\tcase AST.JLS4_INTERNAL:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "623fbe7c60d01d2459944c97d688a6f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": "\r final public void if_icmpeq(Label lbl)", "signatureAfterChange": "\r final public void if_icmpeq(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_if_icmpeq, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_if_icmpeq, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62482e6f77a4d4fa9789e5bd1d560395", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public boolean isPotentiallyNonNull(VariableBinding local)", "signatureAfterChange": "  public boolean isPotentiallyNonNull(LocalVariableBinding local)", "diff": ["-public boolean isPotentiallyNonNull(VariableBinding local) {", "+", "+public boolean isPotentiallyNonNull(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "624dd47c674f2acb44cc4681d81a77bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "fec6027ca1c6247426252a7173b9c0a11f4d6b8c", "commitAfterChange": "231626db7da3a6ad45ce8225b8c3274868f9ab3c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic void resolveAnnotation()", "signatureAfterChange": "  \tpublic void resolveAnnotation()", "diff": ["-\t\t\tthis.scope.problemReporter().annotationMissingForPublic(this.sourceStart, this.sourceEnd);", "+\t\t\tthis.scope.problemReporter().annotationMissing(this.sourceStart, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "626f308f1838212a94d113231dfa33b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldDeclaration.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62729adebd205d9fbbeccb2241a77077", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "98a24097737828240f1d21a0b23b90c66df1d2e5", "commitAfterChange": "515941cbbde92f8090f4b974fb001627443d0027", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tprivate void formatMessageSend( \t\tMessageSend messageSend, \t\tBlockScope scope, \t\tAlignment messageAlignment)", "signatureAfterChange": "  \tprivate void formatMessageSend( \t\tMessageSend messageSend, \t\tBlockScope scope, \t\tAlignment messageAlignment)", "diff": ["-\t\t\t// TODO use the new option once 49298 is fixed", "-\t\t\t// this.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments);", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6275a988da33390528875cf69dc84b82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public boolean isEnum() throws JavaModelException", "signatureAfterChange": " public boolean isEnum() throws JavaModelException", "diff": ["-\treturn info.getKind() == IGenericType.ENUM;", "+\treturn info.getKind() == IGenericType.ENUM_DECL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6278f4686cbcdb9a3a6726f2b873f96e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "3b13a694f0c24345235e66b7f3469dc6379ac475", "commitAfterChange": "4c1b22412761c802ce5c0da8c2ddd0883711c6e0", "methodNumberBeforeChange": 360, "methodNumberAfterChange": 360, "signatureBeforeChange": " public void initialize(boolean initializeNLS)", "signatureAfterChange": " public void initialize(boolean initializeNLS)", "diff": ["-\tthis.scanner.unnecessaryNONNLSTags = null;", "+\tthis.scanner.unnecessaryNLSTags = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "627aa3c9ad7963dea9a58bcc7b51223e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 384, "signatureBeforeChange": " public void testBug148215_Types() throws CoreException", "signatureAfterChange": " public void testBug148215_Types() throws CoreException", "diff": ["-\t\tremoveLibraryEntry(JAVA_PROJECT, new Path(\"/JavaSearchBugs/lib/b148215.jar\"));", "+\t\tremoveClasspathEntry(JAVA_PROJECT, new Path(\"/JavaSearchBugs/lib/b148215.jar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "627e468cd6d5b2b7deea8090a045a422", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "\r final public void if_icmple(Label lbl)", "signatureAfterChange": "\r final public void if_icmple(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_if_icmple, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_if_icmple, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6285aed808b07324b7bc5c6a87169774", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ComplianceDiagnoseTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "629035e0416175b391fb3ee6cf148da2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/ManifestAnalyzer.java", "commitBeforeChange": "cacbd7d9edc7e71649beb6acc6f822d5f25ebd5c", "commitAfterChange": "d00cfb93873eb3ce8d400ade4fc2ec8c8a27a894", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int getClasspathSectionsCount()", "signatureAfterChange": "   \tpublic int getClasspathSectionsCount()", "diff": ["+", "-\t\treturn this.ClasspathSectionsCount;", "+\t\treturn this.classpathSectionsCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62b99047936789ccf6c30298ba9a634f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c22ae4e2acd996824ff94a2b0edaa0df69d9b3b1", "commitAfterChange": "1eeba055c4a858ddea83f6c85864678280808173", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void cannotInstantiate(TypeReference typeRef, TypeBinding type)", "signatureAfterChange": " public void cannotInstantiate(Expression typeRef, TypeBinding type)", "diff": ["-public void cannotInstantiate(TypeReference typeRef, TypeBinding type) {", "+public void cannotInstantiate(Expression typeRef, TypeBinding type) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62bba29ef650b2b90dbd878821eedf77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\t\t public String getElementName()", "signatureAfterChange": "\t\t public String getElementName()", "diff": ["-\tIResource res = getResource();", "+\tIResource res = resource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62c9c0042c0120fef4b4c35b90519083", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "35bd4e1ac4b1e11c036461a7309d887d1527f75a", "commitAfterChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkTypeVariableMethods(TypeParameter typeParameter)", "signatureAfterChange": " void checkTypeVariableMethods(TypeParameter typeParameter)", "diff": ["-\t\t\t\twhile (--count > 0 && areReturnTypesEqual(first, matchingInherited[count])){/*empty*/}", "+\t\t\t\twhile (--count > 0 && areReturnTypesCompatible(first, matchingInherited[count])){/*empty*/}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d044025a2d705902b5a17330309df6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testTypeRef_MethodParameter() throws CoreException", "signatureAfterChange": " public void testTypeRef_MethodParameter() throws CoreException", "diff": ["-\tsearch(setUpTypeRef(0), PARAMETER_TYPE_DECLARATION_TYPE_REFERENCE);", "+\tsearch(setUpTypeRef(0), PARAMETER_DECLARATION_TYPE_REFERENCE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d7d6450f2947c7c0aeb8d37401a294", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements)", "signatureAfterChange": " \tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements)", "diff": ["-\t\treturn SearchBasicEngine.createJavaSearchScope(elements);", "+\t\treturn BasicSearchEngine.createJavaSearchScope(elements);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d7ed8552282c15c0a7dc3ec68181d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public IType getType(String name)", "signatureAfterChange": " public IType getType(String name)", "diff": ["-\tIClassFile classFile= getPackageFragment().getClassFile(getTypeQualifiedName() + \"$\" + name + \".class\"); //$NON-NLS-2$ //$NON-NLS-1$", "+\tIClassFile classFile= getPackageFragment().getClassFile(getTypeQualifiedName() + \"$\" + name + SUFFIX_STRING_class); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d8ce89a98e74d73a257aecb83acbe1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/EclipseDeclarationImpl.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   \t \tCollection<AnnotationMirror> _getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation> annoInstances)", "signatureAfterChange": "   \t \tCollection<AnnotationMirror> _getAnnotationMirrors(List<org.eclipse.jdt.core.dom.Annotation> annoInstances)", "diff": ["-\t\t\t\t(AnnotationMirrorImpl)Factory.createAnnotationMirror(annoInstance.resolveAnnotation(), this, _env);", "+\t\t\t\t(AnnotationMirrorImpl)Factory.createAnnotationMirror(annoInstance.resolveAnnotationBinding(), this, _env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e33a6f697073daa984a85916da52c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testSuggestFieldName016()", "signatureAfterChange": " public void testSuggestFieldName016()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e4dc19857fbec399acb5bb395e2d6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": " public void ifge(Label lbl)", "signatureAfterChange": " public void ifge(BranchLabel lbl)", "diff": ["-public void ifge(Label lbl) {", "+public void ifge(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e5a76c4dcc1fba7744c835c569f839", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic boolean visit(NullLiteral node)", "signatureAfterChange": " \tpublic boolean visit(MarkerAnnotation node)", "diff": ["+\t */", "+\tpublic boolean visit(MarkerAnnotation node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62f6dbcaf29c14ca5e2389c0f2386b48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public TypeDeclaration updatedTypeDeclaration()", "signatureAfterChange": " public TypeDeclaration updatedTypeDeclaration()", "diff": ["-\t\tif (!hasConstructor && typeDeclaration.getKind() != IGenericType.INTERFACE) {// if was already reduced, then constructor", "+\t\tif (!hasConstructor && typeDeclaration.kind() != IGenericType.INTERFACE) {// if was already reduced, then constructor"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63014e2ce1adaff5ba897cd0d76bc299", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapExecutor.java", "commitBeforeChange": "2073ae07201f3b4750a106d0cadf90473710a63d", "commitAfterChange": "10545bbf89db4e21cbdfaf0260ea872d78aa91e9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate WrapResult findWrapsCached(int startTokenIndex, int indent) throws WrapRestartException", "signatureAfterChange": "  \tprivate WrapResult findWrapsCached(int startTokenIndex, int indent) throws WrapRestartThrowable", "diff": ["-\tprivate WrapResult findWrapsCached(int startTokenIndex, int indent) throws WrapRestartException {", "+\tprivate WrapResult findWrapsCached(int startTokenIndex, int indent) throws WrapRestartThrowable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63093b4afd913175b5b735ee1e8afde7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMBuilder.java", "commitBeforeChange": "fb418767dd9874bf03fdf865fcd1b7840e00f2cf", "commitAfterChange": "a00a15a3737081b81f8b394349202f8a1efc6aa3", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r protected DocumentElementParser getParser()", "signatureAfterChange": "\r protected DocumentElementParser getParser()", "diff": ["-\treturn new DocumentElementParser(this, new NullProblemFactory(), new CompilerOptions(JavaCore.getOptions()));\r", "+\treturn new DocumentElementParser(this, new DefaultProblemFactory(), new CompilerOptions(JavaCore.getOptions()));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "632ef1d72a912670e5e65907b6af2194", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/CompilationResult.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void discardSuppressedWarnings()", "signatureAfterChange": "  \tpublic void discardSuppressedWarnings()", "diff": ["-\t\t\t\tlong position = this.suppressWarningPositions[j];", "+\t\t\t\tlong position = this.suppressWarningScopePositions[j];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63555d7b56ea1c9a69f1c802cf9196ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testGetNameRange() throws JavaModelException", "signatureAfterChange": " public void testGetNameRange() throws JavaModelException", "diff": ["-\tassertEquals(\"name should be 'A'\", \"A\", source);", "+\tassertSourceEquals(\"name should be 'A'\", \"A\", source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63586acc572eda3dedca3db33b30521a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "ea916b0462fec6996e619f84c30f348e2877686a", "commitAfterChange": "558c64a899c0debc518d6eb92e85f37b05902eba", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ReferenceExpression(NameReference name, TypeReference[] typeArguments, int sourceEnd)", "signatureAfterChange": " \t \tpublic ReferenceExpression(NameReference name, TypeReference[] typeArguments, int sourceEnd)", "diff": ["-\t\tthis.typeArguments = typeArguments;", "+\t\tthis.typeParameters = typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "637b07f35d67fe857a9b5415c4253e2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Map<String, AnnotationTypeDeclaration> getAllAnnotationTypes(     \t\tfinal Map<ICompilationParticipantResult, Set<AnnotationTypeDeclaration>> file2Annotations)", "signatureAfterChange": "     public Map<String, AnnotationTypeDeclaration> getAllAnnotationTypes(     \t\tfinal Map<BuildContext, Set<AnnotationTypeDeclaration>> file2Annotations)", "diff": ["-    \t\tfinal Map<ICompilationParticipantResult, Set<AnnotationTypeDeclaration>> file2Annotations) {", "+    \t\tfinal Map<BuildContext, Set<AnnotationTypeDeclaration>> file2Annotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "637c0abb2b44743c7173e61148987072", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testCreateExcludedAndIncludedPackages() throws CoreException", "signatureAfterChange": " public void testCreateExcludedAndIncludedPackages() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "638faa2d6a08cb3b9bdc65950184f136", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testExternalJarChanged4() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarChanged4() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "639532e7d8d35c42bac291a6d9254d98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public final char[] signature()", "signatureAfterChange": " public final char[] signature()", "diff": ["-\t\tbuffer.append(QualifiedNamesConstants.JavaLangStringSignature);", "+\t\tbuffer.append(ConstantPool.JavaLangStringSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ad54628324be9dd2597219a852a810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\ttypeBinding = pbBinding.original;", "+\t\t\ttypeBinding = pbBinding.closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63b66ba38a32d8329ccf1fc3171752e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "abc14013a8fd8f8040bc625a426663caf110b8a2", "commitAfterChange": "f04bcab2628ef5d21c040097a5d26e48d3262568", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tprivate int computeRelevanceForExpectingType(char[] packageName, char[] typeName)", "signatureAfterChange": " \tprivate int computeRelevanceForExpectingType(char[] packageName, char[] typeName)", "diff": ["-\t\t\tfor (int i = 0; i <= expectedTypesCount; i++) {", "+\t\t\tfor (int i = 0; i <= expectedTypesPtr; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63bc5237c34acb590623729b857edf62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "3b80ff647411b20503d367972b9a6ddd83c803ed", "commitAfterChange": "e2af824aeec88cb7db3fc9a60fe3065181c8cab2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic static String getPluginExtClassesDir()", "signatureAfterChange": "  \tpublic static String getPluginExtClassesDir()", "diff": ["-\t\treturn getFileInPlugin( AptTestsPlugin.getDefault(), new Path( \"/binext\" ) ) //$NON-NLS-1$", "+\t\treturn getFileInPlugin( AptTestsPlugin.getDefault(), new Path( BIN_EXT ) ) //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63be4e0074465d02822289410b6b8b03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "b60a608dbabf8b5f04fae21c808d5a97597a41f6", "commitAfterChange": "0812715fc31639c278d6b4cb2dea448517c247bf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildSuite(javadocTestClass());", "+\t\treturn buildTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63cbfe82bf2b832975bd058e422044b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void testChangeInternalJar() throws CoreException, IOException", "signatureAfterChange": " public void testChangeInternalJar() throws CoreException, IOException", "diff": ["-\t\tdeleteFile(new File(jarName));", "+\t\tdeleteResource(new File(jarName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63cd150e707315268030f68fb9b42f75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThisReference.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\treturn this.expressionType = scope.enclosingSourceType();", "+\treturn this.resolvedType = scope.enclosingSourceType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63d6aa963dc55b9aa825560928523c0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "9cd8ac9158e8cf65a77f69d8bfcd62dc9418f984", "commitAfterChange": "c8ff3cbc92fbc03cd36a58b694b93e2376e6a266", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate final void addDeleteEdit(int start, int end)", "signatureAfterChange": " \t \tprivate final void addDeleteEdit(int start, int end)", "diff": ["-\t\taddOptimizedReplaceEdit(start, end - start + 1, \"\"); //$NON-NLS-1$", "+\t\taddOptimizedReplaceEdit(start, end - start + 1, EMPTY_STRING); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63daec9c1298ec52fcf8367d43752b29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testAnonymousType3() throws JavaModelException", "signatureAfterChange": " public void testAnonymousType3() throws JavaModelException", "diff": ["-\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63e7b6728cfe4229901481c8b6ebaedd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic boolean visit(TagElement node)", "signatureAfterChange": " \tpublic boolean visit(QualifiedType node)", "diff": ["+\t */", "+\tpublic boolean visit(QualifiedType node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63ee903236e07e4319057ca132cec8b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnParameterizedQualifiedTypeReference.java", "commitBeforeChange": "159e8ad6d8421b49efbcfb424fe9327481d95b23", "commitAfterChange": "8abe8838e4f5c3f829e8d4a716d1798a8812906f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic boolean isInterface()", "signatureAfterChange": " \t \tpublic boolean isInterface()", "diff": ["-\t\treturn this.kind == INTERFACE;", "+\t\treturn this.kind == K_INTERFACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63f92c1ee61f717fea7deb1b46f760a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \t\tpublic boolean match(QualifiedName node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(NormalAnnotation node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(NormalAnnotation node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64012ab69bff791db9a179949fda55c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \t\tpublic boolean match(MethodRefParameter node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(MarkerAnnotation node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(MarkerAnnotation node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6406473621fe0b320b4a0174f4f8565c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "65a63579ebc9b37573db7995b64988407cf25ede", "commitAfterChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void test005() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test005() throws JavaModelException, CoreException", "diff": ["-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, null));", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, systemEncoding));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "641c855a6fc0d8e99397e8315243c747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void generateInfos(Object info, HashMap newElements, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " protected void generateInfos(Object info, HashMap newElements, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tIResource underlResource = getResource();", "+\tIResource underlResource = resource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6449e8e68d4777ba6bae693fe069f0fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testSuggestFieldName002()", "signatureAfterChange": " public void testSuggestFieldName002()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6456926bd1231f4ffc724cd1d8064c10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "7aac6f03ecf70666410b0e689c91dafd6d67757a", "commitAfterChange": "465d091146b1d6997709777ea444048487da1d8d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate void checkAndSetModifiers()", "signatureAfterChange": " \t \tprivate void checkAndSetModifiers()", "diff": ["-\t\t\t\t\t\tproblemReporter().illegalModifierForMemberAnnotationType(sourceType);", "+\t\t\t\t\t\tproblemReporter().illegalModifierForAnnotationMemberType(sourceType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64608e1c3433bba0185bb8e9c953b83c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": " final public void goto_(Label label)", "signatureAfterChange": " final public void goto_(BranchLabel label)", "diff": ["-final public void goto_(Label label) {", "+final public void goto_(BranchLabel label) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "646bf4e34fb9063e94f78c425823988b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void generateOptimizedNonBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedNonBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\t\t\t\t\t\tif ((bits & OnlyValueRequiredMASK) != 0) {", "+\t\t\t\t\t\tif ((bits & OnlyValueRequired) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6473f732ed5a768d070dae7a6e23593a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "24c681585ef2f4b155e3d0f5cb2c551e612e2484", "commitAfterChange": "1075c02575f13a345cda8e06bd18891df8b3e61e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "   \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "signatureAfterChange": "   \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "diff": ["-\t\tthis.scribe.printModifiers(multiFieldDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_MEMBER);", "+\t\tthis.scribe.printModifiers(multiFieldDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_FIELD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6480115e1a0309ff79b1a7c06741d9a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/Index.java", "commitBeforeChange": "e8fbf4db76f3cb4cdf82ad5223795b2651c6d983", "commitAfterChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic IQueryResult[] queryPrefix(char[] prefix) throws IOException", "signatureAfterChange": " \tpublic String[] queryPrefix(char[] prefix) throws IOException", "diff": ["-\tpublic IQueryResult[] queryPrefix(char[] prefix) throws IOException {", "+\tpublic String[] queryPrefix(char[] prefix) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6488d3a366ce864bdf18a5ce7f3e542f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeDeclaration convert(SourceTypeElementInfo typeInfo, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert(SourceTypeElementInfo typeInfo, CompilationResult compilationResult)", "diff": ["-\t\t\tint kind = type.getKind();", "+\t\t\tint kind = type.kind();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6493a8dba1de2a93b9c98794dbc1ebc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "91034ff1e172016bce6a7020dbe631cf5a6565af", "commitAfterChange": "8f7b70c4a0fb633a4aa1052cf8a36e7d065ee52a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "signatureAfterChange": " private void computeClasspathLocations( \tIWorkspaceRoot root, \tJavaProject javaProject, \tSimpleLookupTable binaryLocationsPerProject) throws CoreException", "diff": ["-\t\t\t\t\t} else if (resource instanceof IFolder) {", "+\t\t\t\t\t} else if (resource instanceof IContainer) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64a2140519f33cbd756388c032120c97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "e5dee4f66ab3257e0d9e4e34690323cf2d5f7c21", "commitAfterChange": "ba7f55d89dcf40f0d2718397b348f39209d50c3a", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic PrimitiveTypeImpl getDoubleType()", "signatureAfterChange": " \tpublic PrimitiveTypeImpl getDoubleType()", "diff": ["-\tpublic PrimitiveTypeImpl getCharType(){ return _primitives[2]; }", "-\tpublic PrimitiveTypeImpl getDoubleType(){ return _primitives[3]; }", "+\tpublic PrimitiveTypeImpl getCharType(){ return _primitives[CHAR_INDEX]; }", "+\tpublic PrimitiveTypeImpl getDoubleType(){ return _primitives[DOUBLE_INDEX]; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64a8a114db99dc9cfe9225e5f46caafc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FineGrainVisitor.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "signatureAfterChange": "  public boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "diff": ["-\tif ((this.fineGrain & PARAMETER_TYPE_DECLARATION_TYPE_REFERENCE) != 0) {", "+\tif ((this.fineGrain & PARAMETER_DECLARATION_TYPE_REFERENCE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64b4644f63f6be41e8f4b332de5bf81b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "ff2ce7ba762e2eec757b19bca0c26a9090be4769", "commitAfterChange": "6c4e0b9fc2cd3b073c19e8c3c351a076ddb1dfcc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprotected ASTNode findNode(CompilationUnit unit, final MarkerInfo markerInfo)", "signatureAfterChange": " \t \tprotected ASTNode findNode(CompilationUnit unit, final MarkerInfo markerInfo)", "diff": ["-\t\t\tprivate static final long serialVersionUID = 1L;", "+\t\t\tprivate static final long serialVersionUID = 6009335074727417445L;", "-\t\treturn null;", "+\t\treturn unit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64c02dd26578b926aa461d1f1b7d0e80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "075f0337e26b45d6db80c1a335ec63cbf2bb29bc", "commitAfterChange": "8763fd61fbb9bac9c60358b19ee8908fb0b49d4b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate IPackageFragmentRoot getPkgFragmentRoot(String pathString)", "signatureAfterChange": " \tprivate PackageFragmentRoot getPkgFragmentRoot(String pathString)", "diff": ["-\tprivate IPackageFragmentRoot getPkgFragmentRoot(String pathString) {", "+\tprivate PackageFragmentRoot getPkgFragmentRoot(String pathString) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64c395be229c5f5013ead8fa454c77e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ecaa55a5b0fdf5b2969e187f9c7ea64fe41466b3", "commitAfterChange": "195b7f74c2847e766faf55780f87d7733eaf87d5", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic MethodBinding findExactMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findExactMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\tif (isSubtypeOfRawType(argumentTypes[i]))", "+\t\t\t\t\tif (isPossibleSubtypeOfRawType(argumentTypes[i]))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64d068f6dee6488ee4ba4b62e4b29847", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "4582114353aa3904268b70cdd42dc3781becfb01", "commitAfterChange": "7b316625d96d66e552d608c4488c77581168d213", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule)", "signatureAfterChange": " public static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule)", "diff": ["-\t */", "-\tpublic static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule) {", "-\t\tif (stringPattern == null || stringPattern.length() == 0) return null;", "-", "-\t\tif ((matchRule = verifyPatternMatchRule(stringPattern, matchRule)) == -1) {", "-\t\t\treturn null;", "-\t\t}", "-", "-\t\t// Ignore additional nature flags", "-\t\tlimitTo &= ~(IJavaSearchConstants.IGNORE_DECLARING_TYPE+IJavaSearchConstants.IGNORE_RETURN_TYPE);", "-\t", "-\t\tswitch (searchFor) {", "-\t\t\tcase IJavaSearchConstants.CLASS:", "-\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.CLASS_SUFFIX);", "-\t\t\tcase IJavaSearchConstants.CLASS_AND_INTERFACE:", "-\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.CLASS_AND_INTERFACE_SUFFIX);", "-\t\t\tcase IJavaSearchConstants.CLASS_AND_ENUM:", "-\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.CLASS_AND_ENUM_SUFFIX);", "-\t\t\tcase IJavaSearchConstants.INTERFACE:", "-\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.INTERFACE_SUFFIX);", "-\t\t\tcase IJavaSearchConstants.ENUM:", "-\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.ENUM_SUFFIX);", "-\t\t\tcase IJavaSearchConstants.ANNOTATION_TYPE:", "-\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.ANNOTATION_TYPE_SUFFIX);", "-\t\t\tcase IJavaSearchConstants.TYPE:", "-\t\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.TYPE_SUFFIX);", "-\t\t\tcase IJavaSearchConstants.METHOD:", "-\t\t\t\treturn createMethodOrConstructorPattern(stringPattern, limitTo, matchRule, false/*not a constructor*/);", "-\t\t\tcase IJavaSearchConstants.CONSTRUCTOR:", "-\t\t\t\treturn createMethodOrConstructorPattern(stringPattern, limitTo, matchRule, true/*constructor*/);", "-\t\t\tcase IJavaSearchConstants.FIELD:", "-\t\t\t\treturn createFieldPattern(stringPattern, limitTo, matchRule);", "-\t\t\tcase IJavaSearchConstants.PACKAGE:", "-\t\t\t\treturn createPackagePattern(stringPattern, limitTo, matchRule);", "-\t\t}", "-\t\treturn null;", "-\t}", "+ */", "+public static SearchPattern createPattern(String stringPattern, int searchFor, int limitTo, int matchRule) {", "+\tif (stringPattern == null || stringPattern.length() == 0) return null;", "+", "+\tif ((matchRule = validateMatchRule(stringPattern, matchRule)) == -1) {", "+\t// Ignore additional nature flags", "+\tlimitTo &= ~(IJavaSearchConstants.IGNORE_DECLARING_TYPE+IJavaSearchConstants.IGNORE_RETURN_TYPE);", "+\tswitch (searchFor) {", "+\t\tcase IJavaSearchConstants.CLASS:", "+\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.CLASS_SUFFIX);", "+\t\tcase IJavaSearchConstants.CLASS_AND_INTERFACE:", "+\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.CLASS_AND_INTERFACE_SUFFIX);", "+\t\tcase IJavaSearchConstants.CLASS_AND_ENUM:", "+\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.CLASS_AND_ENUM_SUFFIX);", "+\t\tcase IJavaSearchConstants.INTERFACE:", "+\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.INTERFACE_SUFFIX);", "+\t\tcase IJavaSearchConstants.ENUM:", "+\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.ENUM_SUFFIX);", "+\t\tcase IJavaSearchConstants.ANNOTATION_TYPE:", "+\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.ANNOTATION_TYPE_SUFFIX);", "+\t\tcase IJavaSearchConstants.TYPE:", "+\t\t\treturn createTypePattern(stringPattern, limitTo, matchRule, IIndexConstants.TYPE_SUFFIX);", "+\t\tcase IJavaSearchConstants.METHOD:", "+\t\t\treturn createMethodOrConstructorPattern(stringPattern, limitTo, matchRule, false/*not a constructor*/);", "+\t\tcase IJavaSearchConstants.CONSTRUCTOR:", "+\t\t\treturn createMethodOrConstructorPattern(stringPattern, limitTo, matchRule, true/*constructor*/);", "+\t\tcase IJavaSearchConstants.FIELD:", "+\t\t\treturn createFieldPattern(stringPattern, limitTo, matchRule);", "+\t\tcase IJavaSearchConstants.PACKAGE:", "+\t\t\treturn createPackagePattern(stringPattern, limitTo, matchRule);", "+\t}", "+\treturn null;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64de664111c1e27f0e52e677cbedabb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "57cf491b286e3d9f46551508630844a6df8590d1", "commitAfterChange": "2ea79cd27b58b7099f6b996d041a39e3044047e1", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": " public void invokeSystemArraycopy()", "signatureAfterChange": " public void invokeSystemArraycopy()", "diff": ["-\t\t\tOPC_invokevirtual,", "+\t\t\tOPC_invokestatic,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "651b4f5203bd43d58b4064d587a033b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public void markAsDefinitelyNull(VariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyNull(LocalVariableBinding local)", "diff": ["-public void markAsDefinitelyNull(VariableBinding local) {", "+public void markAsDefinitelyNull(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6522b31bee89342422e4cb42238221ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tpublic void acceptInterface(\r \t\tchar[] packageName,\r \t\tchar[] interfaceName,\r \t\tint modifiers)", "signatureAfterChange": "\r \tpublic void acceptInterface(\r \t\tchar[] packageName,\r \t\tchar[] interfaceName,\r \t\tint modifiers)", "diff": ["-\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "653698ad4497b93ee87ce137e7f98f3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic void test073()", "signatureAfterChange": " \tpublic void test073()", "diff": ["-\t\tpreferences.format_guardian_clause_on_one_line = true;", "+\t\tpreferences.keep_guardian_clause_on_one_line = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "653a4025cfdcde8dcc6556e6e24858d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "1bb29de87657371d6b2e9a01ac3484f13516eab9", "commitAfterChange": "b208e61b699229b414f76c3c9bfed66b1f92d991", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tPackageReferenceMatch packageReferenceMatch = locator.newPackageReferenceMatch(element, accuracy, sourceStart, sourceEnd-sourceStart+1, reference);", "+\tInternalPackageReferenceMatch packageReferenceMatch = locator.newPackageReferenceMatch(element, accuracy, sourceStart, sourceEnd-sourceStart+1, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65457513cae32b9ae1116c6950de4363", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "c67e828d3788591f96003d3b6db18c20724f7bf4", "commitAfterChange": "31085e35ec6546fd0ce14d2c37082b7385a37318", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\tvisitExtraDimensions(node, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, MethodDeclaration.EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\tvisitExtraDimensions(node, INTERNAL_METHOD_EXTRA_DIMENSIONS_PROPERTY, MethodDeclaration.EXTRA_DIMENSIONS2_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65468986ed67165da1fe8f20d5fea663", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testInvalidTagsFieldErrorNotags()", "signatureAfterChange": " \tpublic void testInvalidTagsFieldErrorNotags()", "diff": ["-\t\trunConformTest(InvalidReferencesFieldJavadocComments);", "+\t\trunConformTest(FIELDS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "654d9078459bf8e83b3495bb56f6048c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThisReference.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tif ((this.bits & IsImplicitThisMask) == 0) codeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\tif ((this.bits & IsImplicitThis) == 0) codeStream.recordPositionsFrom(pc, this.sourceStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "655174ee04af8c28645336d769d8789f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "a2380c5dc7487191ba2f073fdb6868b729cb0c57", "commitAfterChange": "6c3b6971f88c7f6d5be3c70fdaf936700dc7f94b", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\t\tAnnotatableType receiverType = node.getReceiverType();", "+\t\t\tType receiverType = node.getReceiverType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65759a13b075182440d39fb64c1f1e5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tpublic boolean visit(IResourceDelta delta) throws CoreException", "signatureAfterChange": " \t\tpublic boolean visit(IResourceDelta delta) throws CoreException", "diff": ["-\t\t\t\t\t\tgsfm.generatedSourceFolderDeleted();", "+\t\t\t\t\t\tgsfm.folderDeleted();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6587ee1593a6392096fda87b95162f0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t|| ((this.action.bits & IsUsefulEmptyStatementMASK) != 0))) {", "+\t\t\t\t|| ((this.action.bits & IsUsefulEmptyStatement) != 0))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "658f54ce2d295fa70b7ed014534d0fb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void testRemoveExclusionOnPackage() throws CoreException", "signatureAfterChange": " public void testRemoveExclusionOnPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6590b75f61806a50838fae67dc514e11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t\t&& this.binding.declaringClass.id != T_Object) // no change for Object methods", "+\t\t\t\t&& this.binding.declaringClass.id != T_JavaLangObject) // no change for Object methods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "659533af62d368d65f91089a5522f4ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void endVisit(FieldAccess node)", "signatureAfterChange": " \tpublic void endVisit(ExtraDimension node)", "diff": ["+\t}", "+\tpublic void endVisit(ExtraDimension node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "659f5647ef2c477118a5eafae6c48b36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "740d8a3bbf7d827a9782a8704551b5892c828d42", "commitAfterChange": "37fa53fe1bcd1db81d377f564f101511c07818f5", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public FieldBinding getSyntheticField(ReferenceBinding targetEnclosingType, boolean onlyExactMatch)", "signatureAfterChange": " public FieldBinding getSyntheticField(ReferenceBinding targetEnclosingType, boolean onlyExactMatch)", "diff": ["-\t\t\t\t&& ((ReferenceBinding) field.type).findSuperTypeErasingTo(targetEnclosingType) != null)", "+\t\t\t\t&& ((ReferenceBinding) field.type).findSuperTypeWithSameErasure(targetEnclosingType) != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65a03a40d4af9ad7be65c54477fd03a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationFragment node)", "signatureAfterChange": " \tpublic boolean visit(VariableDeclarationFragment node)", "diff": ["-\t\t\t\tvisit((ExtraDimension) dimensions.get(i));", "+\t\t\t\tvisit((Dimension) dimensions.get(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65ad14d7a46ba76b6dc0d4078c9947cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "commitAfterChange": "a7a4bb422b80975020031dc2489c1287582f5bac", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tpublic CastExpression convert(org.eclipse.jdt.internal.compiler.ast.CastExpression expression)", "signatureAfterChange": "  \tpublic CastExpression convert(org.eclipse.jdt.internal.compiler.ast.CastExpression expression)", "diff": ["-\t\tremoveExtraBlanks(type);", "+\t\ttrimWhiteSpacesAndComments(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65bffaa1cedf139eee5e9d246b1b1de9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBalanceValue)", "diff": ["-\tif ((memberTypeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0){", "+\tif ((memberTypeDeclaration.bits & ASTNode.IsAnonymousType) != 0){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65c41e9116d900ca3f2bd6c34152f646", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "2c7f17232300c7fbbf0be41f27d83e269dc11422", "commitAfterChange": "4ee7521407adee0dd67769699b7546434316be93", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate void selectStaticMethodFromStaticImport(CompilationUnitDeclaration parsedUnit, char[] lastToken, ReferenceBinding ref)", "signatureAfterChange": " \t \tprivate void selectStaticMethodFromStaticImport(CompilationUnitDeclaration parsedUnit, char[] lastToken, ReferenceBinding ref)", "diff": ["-\t\tMethodBinding[] methods = ref.methods();", "+\t\tMethodBinding[] methods = ref.availableMethods();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65ce4f306f9466dbcf8115e55646da81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " public void if_icmpgt(Label lbl)", "signatureAfterChange": " public void if_icmpgt(BranchLabel lbl)", "diff": ["-public void if_icmpgt(Label lbl) {", "+public void if_icmpgt(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65fc798b357b63666d3b4059cc9e080f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " private int[] readStreamDocumentArray(FileInputStream stream, int arraySize) throws IOException", "signatureAfterChange": " private int[] readStreamDocumentArray(InputStream stream, int arraySize) throws IOException", "diff": ["-private int[] readStreamDocumentArray(FileInputStream stream, int arraySize) throws IOException {", "+private int[] readStreamDocumentArray(InputStream stream, int arraySize) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66019a3f8d7cf5bf98533d67b133bc4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "a8f2b9d6f31a63759a85bef6a1ed8cbb23fbd3fa", "commitAfterChange": "ce41f66e0706b1b71981331d2b2667a0940a3697", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["-\t\t\t\tswitch (ScannerHelper.ObviousIdentCharNatures[c]) {", "+\t\t\t\tswitch (ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c]) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "661de5546fb7990c7120cea68cc89ade", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testClassRetrieval() throws JavaModelException", "signatureAfterChange": " public void testClassRetrieval() throws JavaModelException", "diff": ["-\tIClassFile objectCF = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIClassFile objectCF = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6623acb665536f404407948bf5e85489", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic boolean visit(IfStatement node)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration node)", "diff": ["+\t */", "+\tpublic boolean visit(EnumDeclaration node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662f421793ab581fbe00d810dadf100e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ListRewrite.java", "commitBeforeChange": "1a4eed4ffa5088e3ebe92ac8897cc3720d983860", "commitAfterChange": "f1f25c6cdf998a1ec590849c8e88206d0ec0f3ca", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "   \tprivate ASTNode createTargetNode(ASTNode first, ASTNode last, boolean isMove, ASTNode replacingNode, TextEditGroup editGroup)", "signatureAfterChange": "   \tprivate ASTNode createTargetNode(ASTNode first, ASTNode last, boolean isMove, ASTNode replacingNode, TextEditGroup editGroup)", "diff": ["-\t\tCopySourceInfo info= getRewriteStore().createRangeCopy(this.parent, this.childProperty, first, last, isMove, internalPlaceHolder, replacingNode, editGroup);", "+\t\tCopySourceInfo info= getRewriteStore().createRangeCopy(this.parent, this.childListProperty, first, last, isMove, internalPlaceHolder, replacingNode, editGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66318e88a4c06f8122ef3203ae23701c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "af611344f45ed75fde1b18f8c5abcb58f8227db0", "commitAfterChange": "b2ae5b84e851673c2a38346fddf34788249a797b", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "signatureAfterChange": " \tpublic void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "diff": ["-\t\t\t\tif (delta.getKind() == IResourceDelta.CHANGED && this.hasJavaNature(resource)) {", "+\t\t\t\tif (delta.getKind() == IResourceDelta.CHANGED && JavaProject.hasJavaNature(resource)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "663599ddab36d670cc3e6a93cb64de35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ecd1acbeaec0e8dc5942e2fe22475a0cae159335", "commitAfterChange": "10ab53f81571907009e57d9a00518324cb1c7bf2", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic boolean saveClasspath(IClasspathEntry[] newClasspath, IPath newOutputLocation) throws JavaModelException", "signatureAfterChange": " \tpublic boolean saveClasspath(IClasspathEntry[] newClasspath, IPath newOutputLocation) throws JavaModelException", "diff": ["-\t\tif (!getProject().exists()) return false;", "+\t\tif (!getProject().isAccessible()) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "663a31a78b63f63299da808c37f444fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "663a641b48f051db1e5cb5bc474f43bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "7ae354e6ac18bf8a8ac35886608abf13bc4e11ea", "commitAfterChange": "53deeb1f8956ced87ebbbe7314813eefbd7a8825", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tchar[][] extractMethodArguments(IMethod method)", "signatureAfterChange": " \tchar[][] extractMethodArguments(IMethod method)", "diff": ["-\t\tif (method.isResolved() && (key = new BindingKey(method.getKey())).isParameterizedType()) {", "+\t\tif (method.isResolved() && (key = new BindingKey(method.getKey())).isParameterizedMethod()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66516e6d8aaa9017b22dade85fa7d3e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "3cbc5a17035fd93e630a5ce3a447371924b2eaec", "commitAfterChange": "2fbac062d3f933d7974166e3d20ea9843fdd9750", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "diff": ["-\t\t\tthis.scribe.printComment(CodeFormatter.K_UNKNOWN, Scribe.BASIC_TRAILING_COMMENT);", "+\t\t\tthis.scribe.printComment(CodeFormatter.K_UNKNOWN, Scribe.COMPLEX_TRAILING_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66592fa708acb58b7aca5edac326a77a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public IType createTypeHandle(char[] simpleTypeName)", "signatureAfterChange": " public IType createTypeHandle(char[] simpleTypeName)", "diff": ["-\tOpenable currentOpenable = this.currentPotentialMatch.openable;", "+\tOpenable currentOpenable = this.currentPossibleMatch.openable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6660f2e6c39293a9cb04a772a420e93d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ASTImplTests.java", "commitBeforeChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "commitAfterChange": "9d8f1ed123fbe8bd94c62a19d7bf62f396b087ea", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void endVisit(MarkerAnnotation annotation, ClassScope scope)", "signatureAfterChange": " public void endVisit(MarkerAnnotation annotation, BlockScope scope)", "diff": ["-public void endVisit(MarkerAnnotation annotation, ClassScope scope) {", "+public void endVisit(MarkerAnnotation annotation, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667838ecba3a8e814bd59a8d060d8d3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public char[] genericTypeSignature()", "signatureAfterChange": "     public char[] genericTypeSignature()", "diff": ["-            switch (this.kind) {", "+            switch (this.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "667d73ea930088191642d1d1df64fb04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r     public static AnnotationMirror createAnnotationMirror(final Annotation annotation,\r                                                           final DeclarationImpl annotated,\r                                                           final ProcessorEnvImpl env)", "signatureAfterChange": "     public static AnnotationMirror createAnnotationMirror(final IResolvedAnnotation annotation,                                                           final DeclarationImpl annotated,                                                           final ProcessorEnvImpl env)", "diff": ["-     */\r", "-    public static AnnotationMirror createAnnotationMirror(final Annotation annotation,\r", "-                                                          final DeclarationImpl annotated,\r", "-                                                          final ProcessorEnvImpl env)\r", "-    {\r", "-        return new AnnotationMirrorImpl(annotation, annotated, env);\r", "-    }\r", "+     */", "+    public static AnnotationMirror createAnnotationMirror(final IResolvedAnnotation annotation,", "+                                                          final DeclarationImpl annotated,", "+                                                          final ProcessorEnvImpl env)", "+    {", "+        return new AnnotationMirrorImpl(annotation, annotated, env);\t\t", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "668b6f1a10c6965453bafc77cf12ee80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprivate void reportResult( \t\t\tBuildContext curResult, \t\t\tSet<IFile> lastGeneratedFiles, \t\t\tSet<IFile> generatedFiles, \t\t\tSet<IFile> modifiedGeneratedFiles, \t\t\tList<? extends CategorizedProblem> problems, \t\t\tSet<String> deps, \t\t\tGeneratedFileManager gfm,  \t\t\tProcessorEnvImpl processorEnv)", "signatureAfterChange": " \tprivate void reportResult( \t\t\tBuildContext curResult, \t\t\tSet<IFile> lastGeneratedFiles, \t\t\tSet<IFile> generatedFiles, \t\t\tSet<IFile> modifiedGeneratedFiles, \t\t\tList<? extends CategorizedProblem> problems, \t\t\tSet<String> deps, \t\t\tGeneratedFileManager gfm,  \t\t\tBuildEnv processorEnv)", "diff": ["-\t\t\tProcessorEnvImpl processorEnv){", "+\t\t\tBuildEnv processorEnv){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "669f247eb1a2af53ee6ba3baa8ba78b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "6fdaa2b9d78c89a1ed2269f5279c3e02cee4b6cd", "commitAfterChange": "8ec1d344fc5f9b16a04a2a15e36cb4db52cac4eb", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected void seekTypesInSourcePackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "signatureAfterChange": " \tprotected void seekTypesInSourcePackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "diff": ["-\t\tMap workingCopies = (Map) this.unitsToLookInside.getCurrent();", "+\t\tMap workingCopies = (Map) this.unitsToLookInside.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66a3d01825a3b2aa5f1467f825bef53e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaExpression.java", "commitBeforeChange": "cfb9e308b9934bc0d4a17e2d4604db46f20af164", "commitAfterChange": "592b135627e5a06d1b39aee23540f897beee493f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \t@Override \tpublic ISourceRange getNameRange() throws JavaModelException", "signatureAfterChange": "  \t@Override \tpublic ISourceRange getNameRange() throws JavaModelException", "diff": ["-\t\treturn new SourceRange(this.lambdaExpression.sourceStart, this.lambdaExpression.getArrowPosition() - this.lambdaExpression.sourceStart + 1);", "+\t\treturn new SourceRange(this.lambdaExpression.sourceStart, this.lambdaExpression.arrowPosition() - this.lambdaExpression.sourceStart + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66ae471953c957c0fa7d87fcb72e2f5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "signatureAfterChange": " private int matchLevel(QualifiedTypeReference typeRef, boolean resolve)", "diff": ["-\t\treturn this.matchLevel(typeRef.binding);", "+\t\treturn this.matchLevel(typeRef.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c2b3a20c5c7b625e98987ca394035f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/RunAllJava8Tests.java", "commitBeforeChange": "073c195d4829bd3ee6e06c1d3c0bfc4a1c7046ee", "commitAfterChange": "677bf3763b6e383c756f5ca8cbbd80c6dec30c1f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Class[] getAllTestClasses()", "signatureAfterChange": " \tpublic static Class[] getAllTestClasses()", "diff": ["-\t\t\tCastingContextTest.class,", "+\t\t\tExpressionContextTests.class,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c3fe08b0b93c8485746b1c24dcc871", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedReferenceBinding.java", "commitBeforeChange": "9775053c06b88abc4990b96720855b4d26f13ab7", "commitAfterChange": "61d6a0379a06ef6680e82e7f6a32f04040234762", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "signatureAfterChange": " ReferenceBinding resolve(LookupEnvironment environment, boolean convertGenericToRawType)", "diff": ["-\t\ttargetType = (ReferenceBinding) environment.convertToRawType(targetType);", "+\t\ttargetType = (ReferenceBinding) environment.convertUnresolvedBinaryToRawType(targetType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c778f25c846a7b0d37e6d263099814", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tCompilationUnit buildCompilationUnit(ICompilationParticipantResult file)", "signatureAfterChange": "  \tCompilationUnit buildCompilationUnit(BuildContext file)", "diff": ["-\tCompilationUnit buildCompilationUnit(ICompilationParticipantResult file) {", "+\tCompilationUnit buildCompilationUnit(BuildContext file) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c7ee5f6b4c7de01607eeb2384516be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprotected JavaElement(int type, IJavaElement parent, String name) throws IllegalArgumentException", "signatureAfterChange": " \tprotected JavaElement(int type, JavaElement parent, String name) throws IllegalArgumentException", "diff": ["-\tprotected JavaElement(int type, IJavaElement parent, String name) throws IllegalArgumentException {", "+\tprotected JavaElement(int type, JavaElement parent, String name) throws IllegalArgumentException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66c89e328a1ceb83b51167925a5f4219", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public static Object getWorkspaceTarget(IPath path)", "signatureAfterChange": " public static IResource getWorkspaceTarget(IPath path)", "diff": ["-public static Object getWorkspaceTarget(IPath path) {", "+public static IResource getWorkspaceTarget(IPath path) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66ccba4bcfbcb6c732153e65467107f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void test085()", "signatureAfterChange": " \tpublic void test085()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66f13ae192deb5a9dcfe8505c729907c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMImport.java", "commitBeforeChange": "ab36391231f1ea61e75e0e00b3dc8ffe91eda55e", "commitAfterChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r protected void appendFragmentedContents(CharArrayBuffer buffer)", "signatureAfterChange": "\r protected void appendFragmentedContents(CharArrayBuffer buffer)", "diff": ["-\t\t\t.append(JavaModelManager.LINE_SEPARATOR);\r", "+\t\t\t.append(Util.LINE_SEPARATOR);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66f189833cb842a02b2aaca4f2627648", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/core/formatter/CodeFormatter.java", "commitBeforeChange": "c2f0554c826ed78a65c1025711fc6a0df2b79308", "commitAfterChange": "473e73e956d6ff2c0ecfedc365eaef22bfab27ea", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic String createIndentationString(int indentationLevel)", "signatureAfterChange": " \tpublic String createIndentationString(int indentationLevel)", "diff": ["-\t\treturn Scribe2.EMPTY_STRING;", "+\t\treturn Util.EMPTY_STRING;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67159851bba0eb653f0deb5f6f4a35cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": " \tpublic void endVisit(ExtraDimension node)", "signatureAfterChange": " \tpublic void endVisit(Dimension node)", "diff": ["-\tpublic void endVisit(ExtraDimension node) {", "+\tpublic void endVisit(Dimension node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6736b9c7babb59c1f2b124ee2b155572", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkTypeVariableMethods(TypeParameter typeParameter)", "signatureAfterChange": " void checkTypeVariableMethods(TypeParameter typeParameter)", "diff": ["-\t\t\t\t\tif (otherInheritedMethod != null && doesSubstituteMethodOverride(inheritedMethod, otherInheritedMethod)) {", "+\t\t\t\t\tif (otherInheritedMethod != null && isSubstituteParameterSubsignature(inheritedMethod, otherInheritedMethod)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6746448b6eec1fee4be56d5754be957c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "f4680a34e1f2039b2a192d0a537b3157d981aa26", "commitAfterChange": "41f0eedac440a5a7408e664ba09866184ebddd55", "methodNumberBeforeChange": 336, "methodNumberAfterChange": 336, "signatureBeforeChange": " \t \tpublic void test317()", "signatureAfterChange": " \t \tpublic void test317()", "diff": ["-\t\tpreferences.line_delimiter = \"\\n\";", "+\t\tpreferences.line_separator = \"\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67545b04b4bebe69c915cc46a7dd4fcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testGetCategories04() throws CoreException", "signatureAfterChange": " public void testGetCategories04() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "676d692feb301c2376f112db89a4311d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \t \tpublic void test029()", "signatureAfterChange": " \t \tpublic void test029()", "diff": ["-\t\tpreferences.format_guardian_clause_on_one_line = true;", "+\t\tpreferences.keep_guardian_clause_on_one_line = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6780359d00410054b75e3ac36c9af134", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "72b6116017ad54924e550f806f31977764727c6d", "commitAfterChange": "777e51e4cb2ecaa945a1477b071fe596cfa792b6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  protected void updateProblemsFor(SourceFile sourceFile, CompilationResult result) throws CoreException", "signatureAfterChange": "  protected void updateProblemsFor(SourceFile sourceFile, CompilationResult result) throws CoreException", "diff": ["-\t\tpkgResource.deleteMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, false, IResource.DEPTH_INFINITE);", "+\t\tpkgResource.deleteMarkers(IJavaModelMarker.JAVA_MODEL_PROBLEM_MARKER, false, IResource.DEPTH_ZERO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6787a485f4bec70d847adcb9905f357c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public void markAsDefinitelyNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyNull(VariableBinding local)", "diff": ["-public void markAsDefinitelyNull(LocalVariableBinding local) {", "+public void markAsDefinitelyNull(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6789ff12426ffe3c97cf7327607eabd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "fb29abb0d0a936af02dd0f8c5ff7d07933a07e52", "commitAfterChange": "961e45cbdd9129afb5c74c3451723a388fb5f038", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t\t \tpublic void testPerfBuildCompilerUsingBatchCompiler() throws IOException", "signatureAfterChange": "  \tpublic void testPerfBuildCompilerUsingBatchCompiler() throws IOException", "diff": ["-\t\t", "+", "-\t\tfinal String targetWorkspacePath =  workspaceRoot.getProject(JavaCore.PLUGIN_ID).getLocation().toFile().getCanonicalPath();", "+\t\tfinal String targetWorkspacePath = workspaceRoot.getProject(JavaCore.PLUGIN_ID)", "+\t\t\t.getLocation()", "+\t\t\t.toFile()", "+\t\t\t.getCanonicalPath();", "-\t\t// Note this test is not a finger print test, so we don't want to use tagAsGlobalSummary(...)", "+\t\t// Note this test is not a finger print test, so we don't want to use", "+\t\t// tagAsGlobalSummary(...)", "-\t\t", "+", "-\t\tfor (int i = 0; i < 10; i++) {", "+\t\tfor (int i = 0; i < REPEAT; i++) {", "-\t\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "678d1c8f06d385835409ea6466696fc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void generateOptimizedStringConcatenation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "signatureAfterChange": " \tpublic void generateOptimizedStringConcatenation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "diff": ["-\t\tif (typeID == T_String && this.constant != NotAConstant && this.constant.stringValue().length() == 0) {", "+\t\tif (typeID == T_JavaLangString && this.constant != NotAConstant && this.constant.stringValue().length() == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "679ebe0478a61dcb7915c564a2c086c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testContainerInitializer06() throws CoreException", "signatureAfterChange": " public void testContainerInitializer06() throws CoreException", "diff": ["-\t\tassertDeltas(", "+\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67cb75dabcb5b611da482fe0c177b6c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " public void ifgt(Label lbl)", "signatureAfterChange": " public void ifgt(BranchLabel lbl)", "diff": ["-public void ifgt(Label lbl) {", "+public void ifgt(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d0239401da26f21f669e2f2801c4e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "87d4fd7980451e90652820b5860e6399b708ef2c", "commitAfterChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic TextEdit format(String string, ASTNode[] nodes)", "signatureAfterChange": " \tpublic TextEdit format(String string, ASTNode[] nodes)", "diff": ["-\t\tthis.scribe.initializeScanner(compilationUnitSource);", "+\t\tthis.scribe.resetScanner(compilationUnitSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d5d973b4f511476f419d6cd23ea9e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tsynchronized IBinding resolveImport(ImportDeclaration importDeclaration)", "signatureAfterChange": " \tsynchronized IBinding resolveImport(ImportDeclaration importDeclaration)", "diff": ["-\t\t\t\t\t\tif (binding.bindingType() == BindingIds.PACKAGE) {", "+\t\t\t\t\t\tif (binding.bindingType() == Binding.PACKAGE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67d6c6ecca0d218f5e57e84935a7d934", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfAccessedFieldsPattern.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void reportDeclaration(FieldBinding fieldBinding, MatchLocator locator) throws CoreException", "signatureAfterChange": " private void reportDeclaration(FieldBinding fieldBinding, MatchLocator locator) throws CoreException", "diff": ["-\tif (fieldBinding == ArrayBinding.LengthField) return;", "+\tif (fieldBinding == ArrayBinding.ArrayLength) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67ebc38425aefeb3cb01ce3f10adba0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic synchronized boolean isGeneratedFile(IFile f)", "signatureAfterChange": " \tpublic synchronized boolean isGeneratedFile(IFile f)", "diff": ["-\t\treturn _parentToGenFiles.containsValue(f);", "+\t\treturn _buildDeps.containsValue(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67eecf888cc5a1578ba1defdad208ba2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void testParameterizedTypeSingleArgument03() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeSingleArgument03() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedType(unit, \"NonGeneric.GenericMember<Exception>\"); //$NON-NLS-1$", "+\t\tResolvedSourceType type = selectParameterizedType(unit, \"NonGeneric.GenericMember<Exception>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67f021d4e7f8ce209673cd60bcf1b491", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BufferManager.java", "commitBeforeChange": "7b0f09fd73b49ba4dc507ba4a634d425ab3e92c2", "commitAfterChange": "90ccf89195ab29ecb5a569cf526f683aefa3263d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected void removeBuffer(IBuffer buffer)", "signatureAfterChange": "\r protected void removeBuffer(IBuffer buffer)", "diff": ["-\tfOpenBuffers.remove(buffer.getOwner());\r", "+\topenBuffers.remove(buffer.getOwner());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67f263983457187e37cf8446bf9b229b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\tif (binding.isVararg()) {", "+\tif (binding.isVarargs()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67fa32e1e9cfadf83590fdce159b094c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/src/javadoc/testBug54424/Test.java", "commitBeforeChange": "cc44d533509199a22dee3cb03412b30282a18add", "commitAfterChange": "dee23bd4f5a65ed282a3f4a7e19b637fd72cfc3b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic AbstractList getList(int from, long to) throws IOException", "signatureAfterChange": " \tpublic ArrayList getList(int from, long to) throws IOException", "diff": ["-\tpublic AbstractList getList(int from, long to) throws IOException {return null;}", "+\tpublic ArrayList getList(int from, long to) throws IOException {return null;}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6802fd8767da09ee0ef7c4f25a57fb64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "commitAfterChange": "7d45b883ec69848a56f546daa0819092ba819185", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public IJavaElement getElementAtConsideringSibling(int position) throws JavaModelException", "signatureAfterChange": " public IJavaElement getElementAtConsideringSibling(int position) throws JavaModelException", "diff": ["-\t\t\t\tif (range == SourceMapper.fgUnknownRange) continue; ", "+\t\t\t\tif (range == SourceMapper.UNKNOWN_RANGE) continue; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "680aaf4b8353d3b76e213525c8d745c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic boolean isUnboundWildcard()", "signatureAfterChange": " \tpublic boolean isUnboundWildcard()", "diff": ["-\t    return this.kind == Wildcard.UNBOUND;", "+\t    return this.boundKind == Wildcard.UNBOUND;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68220e048792ee80cc7f8b6d594973cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic void openEmptyWorkspace()", "signatureAfterChange": " \tpublic void openEmptyWorkspace()", "diff": ["-\t\tfProjects = new Hashtable(10);", "+\t\tprojects = new Hashtable(10);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6823790d2c93159c50592c50d6b4094d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "32a99f8c41e7f6505e98564a2fe955f48d80f711", "commitAfterChange": "38819b0397930dbfdcf4973c1bb1a5b3cfbe15eb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tMap settings)", "signatureAfterChange": "\r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tMap settings)", "diff": ["-\t\tthis.identifierScanner =\r", "+\t\tthis.nameScanner =\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68307d9e42c0cefcce3cc80d9cd0fa0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "40a1ed0c9dc0ab688d5293676f8aa97f01174e41", "commitAfterChange": "9295475f17ec96b15242bc49ff91f42882579f94", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void setExtraDimensions(int dimensions)", "signatureAfterChange": "  \tpublic void setExtraDimensions(int dimensions)", "diff": ["-\t\tthis.displacedArrayDimensions = dimensions;", "+\t\tthis.extraArrayDimensions = dimensions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "683bf3a24d80d2648efb5ce0cf829cfa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "8245bd73c0aef7bf5f6de5def8941104b56db6f7", "commitAfterChange": "79409f1d9ef0d6d5db654afe6f7513cc394afcd6", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public boolean isBasedOn(IResource resource)", "signatureAfterChange": " public boolean isBasedOn(IResource resource)", "diff": ["-\treturn ((CompilationUnitElementInfo)info).fTimestamp == ((IFile) resource).getModificationStamp();", "+\treturn ((CompilationUnitElementInfo)info).timestamp == ((IFile) resource).getModificationStamp();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "684a4cc1414c282e944e20fd94b9daa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \t\tpublic boolean match(PostfixExpression node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(MethodRefParameter node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(MethodRefParameter node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68526f064a9faa2a88f3ac8c632fd362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "4b0e88ec5088c7c00e913a56a58f9a382d280fe7", "commitAfterChange": "f6137b93a40a8e368787ac8bd88599a4c23a379b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testMissingInterface() throws JavaModelException", "signatureAfterChange": " public void testMissingInterface() throws JavaModelException", "diff": ["-\t\thierarchy = type.newSupertypeHierarchy(null);", "+\t\thierarchy = type.newTypeHierarchy(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68599bf73e0788ca4b5adfe4052925ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void disable()", "signatureAfterChange": " \tpublic void disable()", "diff": ["-\t\t\tJobManager.verbose(\"DISABLING background indexing\"); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"DISABLING background indexing\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "685cf91c3bfb526de7079a1e483d4252", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "d16e32b1bfbbab8deee5f229ab908fe246be9b08", "commitAfterChange": "ba2e1a54949e37e6604f66209c22c1ddf9840619", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  protected IncrementalImageBuilder(JavaBuilder javaBuilder, State buildState)", "signatureAfterChange": "  protected IncrementalImageBuilder(JavaBuilder javaBuilder, State buildState)", "diff": ["-\t\tjavaBuilder.javaProject.getOption(JavaCore.CORE_JAVA_BUILD_MAKE_OUTPUT_FOLDER_CONSISTENT, true));", "+\t\tjavaBuilder.javaProject.getOption(JavaCore.CORE_JAVA_BUILD_RECREATE_MODIFIED_CLASS_FILES_IN_OUTPUT_FOLDER, true));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68a27efc8a0472d050ddf5e49a6938c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public void testCreateSharedWorkingCopy() throws CoreException", "signatureAfterChange": "  public void testCreateSharedWorkingCopy() throws CoreException", "diff": ["-\t\tassertDeltas(", "+\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68ae31c3f5953a8a24524d42f5c011bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "949f1bbe84622faa807866412d26a5bdb0f64fe4", "commitAfterChange": "ecd2d9d0e14c2688e43c7c452930452fe7a77cc0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t\tcatchInfo.setReachMode(FlowInfo.FAKE_REACHABLE);", "+\t\t\t\t\tcatchInfo.setReachMode(FlowInfo.UNREACHABLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68af82e6167f77fc9986cd35aa203e72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t@Override \tpublic ITypeAnnotationWalker toMethodParameter(short index)", "signatureAfterChange": " \t \t@Override \tpublic TypeAnnotationWalker toMethodParameter(short index)", "diff": ["-\tpublic ITypeAnnotationWalker toMethodParameter(short index) {", "+\tpublic TypeAnnotationWalker toMethodParameter(short index) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68bd5d9f1efceccfdeefe0d3ed179aea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject1() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject1() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68c23379f5fbe6060774a89bac0431bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "98a24097737828240f1d21a0b23b90c66df1d2e5", "commitAfterChange": "515941cbbde92f8090f4b974fb001627443d0027", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "diff": ["-// TODO add again once 49298 is fixed\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments);", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68d28eaf0bb6fa59fe462b8ae95d5773", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/EncodedFileOutputStream.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic EncodedFileOutputStream(IFile file, ProcessorEnvImpl env, String charsetName)", "signatureAfterChange": " \t \tpublic EncodedFileOutputStream(IFile file, BuildEnv env, String charsetName)", "diff": ["-\tpublic EncodedFileOutputStream(IFile file, ProcessorEnvImpl env, String charsetName) {", "+\tpublic EncodedFileOutputStream(IFile file, BuildEnv env, String charsetName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68de87a800d9bb898c992ff86c21ab5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e5b12ec1408e2618b733c6c861e62935e5acf3d0", "commitAfterChange": "37e61f9384ee5953f318d77bcc2385588cc0d237", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tfinal private String getIndentOfLine(int pos)", "signatureAfterChange": " \t \tfinal private String getIndentOfLine(int pos)", "diff": ["-\t\tif (pos >= 0) {", "+\t\tif (line >= 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68e0807fc862779bdadf2a15821568e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/InsideSubRoutineFlowContext.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic InsideSubRoutineFlowContext( \t\tFlowContext parent, \t\tAstNode associatedNode)", "signatureAfterChange": " \t \tpublic InsideSubRoutineFlowContext( \t\tFlowContext parent, \t\tAstNode associatedNode)", "diff": ["-\t\tthis.initsOnReturn = FlowInfo.DeadEnd;\t\t\t\t", "+\t\tthis.initsOnReturn = FlowInfo.DEAD_END;\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68e29c7d22771c4701cda3924c0c11f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "13a2bff8811ff586bab60fddd157d395e6533570", "commitAfterChange": "4e8c06d42dcf2a91f77056993fc995ad49c4f7d9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "signatureAfterChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "diff": ["-\t\t\tif ((fieldBinding = (FieldBinding) binding).isFinal() && currentScope.allowBlankFinalFieldAssignment(fieldBinding)) {", "+\t\t\tif ((fieldBinding = (FieldBinding) binding).isBlankFinal() ", "+\t\t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(fieldBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68ee0e81b5b1eff2a3981de57c7b683e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "0ce30fa1efeccdb8f098a9dcf15c46f705a57e6f", "commitAfterChange": "59a26b3b3e45e8769323a82cc5fccc64fe9d5f4a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, \tFlowContext flowContext, \tFlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, \tFlowContext flowContext, \tFlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t&& currentScope.allowBlankFinalFieldAssignment(binding)", "+\t\t\t&& currentScope.needBlankFinalFieldInitializationCheck(binding)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68f08ef8fac3596f0a2b6075c847324e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceImplTransformations.java", "commitBeforeChange": "43881a0ccbbbd25a833bdafa015084820237a7ca", "commitAfterChange": "a45ae3e7ece9f194d45e66f0f249a64adf7b92a5", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " void printTruthTables(File outputDirectory)", "signatureAfterChange": " void printTruthTables(File outputDirectory)", "diff": ["-\t\t\tif (false) { // checking row names", "+\t\t\tif (CHECKING_ROW_NAMES) { // checking row names"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68f82120f9c8dfb16f385e33aec1f5f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "commitAfterChange": "7234934f3efed703cbf030a33d03d36a447aeef6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public int bodyEnd(AbstractMethodDeclaration method)", "signatureAfterChange": " public int bodyEnd(AbstractMethodDeclaration method)", "diff": ["-\treturn method.declarationSourceEnd;", "+\treturn method.bodyEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68fcb99ca4f8ca09556f8c121deb873f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic boolean visit(NullLiteral node)", "signatureAfterChange": " \tpublic boolean visit(MemberRef node)", "diff": ["+\t */", "+\tpublic boolean visit(MemberRef node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68fd54fd3b1560b4145120c1146b17f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "d1facd69b9dc2127e7162415007081afa0f4348b", "commitAfterChange": "a31fc41a761266e1336ef1dbd295debe293f4d81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "signatureAfterChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "diff": ["-\t\t\t\t} else if (targetType.isNormalBaseType()) {", "+\t\t\t\t} else if (targetType.isPrimitiveType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6902768d5ac16059cb90b3efe1b6f2f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void jobWasCancelled(IPath path)", "signatureAfterChange": " public void jobWasCancelled(IPath path)", "diff": ["-\tif (o instanceof IIndex) {", "+\tif (o instanceof Index) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "691012b53bee98f0e25d35f0f67fb487", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticMethod(FieldBinding targetField, boolean isReadAccess)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethod(FieldBinding targetField, boolean isReadAccess)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6927a00a5bdb05a0e885dd83f9a67fa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaCorePreferenceInitializer.java", "commitBeforeChange": "3f92e8a5a07dd9ede4257e502806d13fe53cd5fa", "commitAfterChange": "ef611461f875a680b17b8fa198a6386473d15159", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void initializeDefaultPreferences()", "signatureAfterChange": " \tpublic void initializeDefaultPreferences()", "diff": ["-\t\tdefaultOptionsMap.put(JavaCore.CODEASSIST_CAMEL_CASE_MATCH, JavaCore.ENABLED);", "+\t\tdefaultOptionsMap.put(JavaCore.CODEASSIST_CAMEL_CASE_MATCH, JavaCore.DISABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6932f150f41bcb4312ced7a1872a2072", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMBuilder.java", "commitBeforeChange": "6667f48fb414bf631c6788d57b69b16addac46f0", "commitAfterChange": "c62484c76d34e1754fa4fc8cfcdf45889f18f642", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void acceptPackage(int declarationStart, int declarationEnd, int[] javaDocPositions, char[] name,  \tint nameStartPosition)", "signatureAfterChange": " public void acceptPackage(int declarationStart, int declarationEnd, int[] javaDocPositions, char[] name,  \tint nameStartPosition)", "diff": ["-\tfNode= new DOMPackage(fDocument, sourceRange, CharArrayOps.charToString(name), nameRange);", "+\tfNode= new DOMPackage(fDocument, sourceRange, CharOperation.charToString(name), nameRange);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "693d1d5939a7d2a03dc26105b04cca34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": " public synchronized boolean resetIndex(IPath containerPath)", "signatureAfterChange": " public synchronized boolean resetIndex(IPath containerPath)", "diff": ["-\t\tIPath indexLocation = computeIndexLocation(containerPath);", "+\t\tIndexLocation indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69408e01d94471f85eec45028888d762", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuilderTests.java", "commitBeforeChange": "bbf4c65896774d7094a1b0af184fa5e65fff430e", "commitAfterChange": "88a272a79e1a01de59a7879ee7d861a289fe8315", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprotected void expectingSpecificProblemsFor(IPath root, Problem[] problems)", "signatureAfterChange": " \tprotected void expectingSpecificProblemsFor(IPath root, Problem[] problems)", "diff": ["-\t\t\tSystem.out.println(\"\t- current: \" + problemsToString(rootProblems));", "+\t\t\tSystem.out.println(\"\t- current: \" + arrayToString(rootProblems));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69576f3f72934f14794db12c68515fc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9a76fb8f9434ae4b71dc267e686b050759ff3536", "commitAfterChange": "e5d54da7cf77d6614acfbbcede23df9b9dad68f9", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": " public void initialize()", "signatureAfterChange": " public void initialize()", "diff": ["-\tscanner.todoCount = 0;", "+\tscanner.taskCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "696893025e3240815f1e011c682e7be2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public void testSearchPatternValidMatchRule35()", "signatureAfterChange": " public void testSearchPatternValidMatchRule35()", "diff": ["-\t\tSearchPattern.R_CAMEL_CASE_MATCH);", "+\t\tSearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69730d62532c385d9a27182cca144a39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LookupTest.java", "commitBeforeChange": "8c74a3636e0546bf8eb1a118e3bc8aec30caedcb", "commitAfterChange": "15601490c7fcfbf1d5cd50b2b9fcc08187c1f0d2", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void test049()", "signatureAfterChange": " public void test049()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "697ba73ef09f76114a1ed14dbef2420c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, boolean assignVariables, char[][][] missingTypeNames, \t\t\t\t\t\t\t\t\t\t\t\t\tTypeAnnotationWalker walker, boolean isClassTypeParameter)", "signatureAfterChange": "  private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, boolean assignVariables, char[][][] missingTypeNames, \t\t\t\t\t\t\t\t\t\t\t\t\tITypeAnnotationWalker walker, boolean isClassTypeParameter)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\t\tTypeAnnotationWalker walker, boolean isClassTypeParameter)", "+\t\t\t\t\t\t\t\t\t\t\t\t\tITypeAnnotationWalker walker, boolean isClassTypeParameter)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "697cf3b98ca640479c2c5ff171712ed2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "e749248b2d171474b4cec0b274f15c474b2172fa", "commitAfterChange": "49bbfb9368cdcf7ee010de91440ff4d54ad31533", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic MethodBinding getMethod( \t\tTypeBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getMethod( \t\tTypeBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\treturn new ProblemMethodBinding(selector, argumentTypes, NotVisible);", "-\t\t// *** Need a new problem id - TypeNotVisible?", "+\t\t\treturn new ProblemMethodBinding(selector, argumentTypes, ReceiverTypeNotVisible);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6997ec4d3f9eea2201756c0d69ed6a41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tprivate void findTypesAndPackages(char[] token, Scope scope, boolean proposeBaseTypes, boolean proposeVoidType, ObjectVector typesFound)", "signatureAfterChange": " \tprivate void findTypesAndPackages(char[] token, Scope scope, boolean proposeBaseTypes, boolean proposeVoidType, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a4abe9b090ec214a4f17303c38e5ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void test106() throws JavaModelException", "signatureAfterChange": " public void test106() throws JavaModelException", "diff": ["-\t\t\t\"foo[JAVADOC_FIELD_REF]{{@link ZBasicTestTypes#foo}, Ljavadoc.types.ZBasicTestTypes;, I, foo, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\t\"foo[JAVADOC_FIELD_REF]{{@link ZBasicTestTypes#foo}, Ljavadoc.types.ZBasicTestTypes;, I, foo, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69a678cf1f296af6480c72d185a6bd84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\t\targument.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+\t\t\t\t\t\targument.bits |= DisableUnnecessaryCastCheck; // will check later on"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69adffcfc1222afccd4f99cf0140d486", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "diff": ["-\t\treturn (methodDeclaration.bits & ASTNode.HasLocalTypeMASK) != 0; // continue only if it has local type", "+\t\treturn (methodDeclaration.bits & ASTNode.HasLocalType) != 0; // continue only if it has local type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69c3c03eb2def977e75467e996bc622c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " public void ifnull(Label lbl)", "signatureAfterChange": " public void ifnull(BranchLabel lbl)", "diff": ["-public void ifnull(Label lbl) {", "+public void ifnull(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69da836274acfa1a6616fdf6b79e1196", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "a2a25daab3f792071cba7e3d51c3d2abf00c6c2a", "commitAfterChange": "8bffc680730baeb75a0764c02d5d9479eee4502e", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tpublic void leavePolyInvocation(InvocationRecord record)", "signatureAfterChange": "  \tpublic void leavePolyInvocation(SuspendedInferenceRecord record)", "diff": ["-\tpublic void leavePolyInvocation(InvocationRecord record) {", "+\tpublic void leavePolyInvocation(SuspendedInferenceRecord record) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69f39e1dc2df481db0fd657bc0e08c77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "fd8b9a432900e078bd3ec0b84289455beeec7157", "commitAfterChange": "727ece7c4e37d8cf0a8a8c9e31dcb1989a9402e6", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  public SearchMatch newMethodReferenceMatch( \t\tIJavaElement enclosingElement, \t\tBinding enclosingBinding, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tboolean isConstructor, \t\tboolean isSynthetic, \t\tASTNode reference)", "signatureAfterChange": "  public SearchMatch newMethodReferenceMatch( \t\tIJavaElement enclosingElement, \t\tBinding enclosingBinding, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tboolean isConstructor, \t\tboolean isSynthetic, \t\tASTNode reference)", "diff": ["-\tboolean isOverridden = (accuracy & PatternLocator.OVERRIDDEN_FLAVOR) != 0;", "+\tboolean isOverridden = (accuracy & PatternLocator.SUPER_INVOCATION_FLAVOR) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a03f34d8f41feb775a0ae12ede92bee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": " \tprotected void setModifiers(MethodDeclaration methodDecl, AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " \tprotected void setModifiers(MethodDeclaration methodDecl, AbstractMethodDeclaration methodDeclaration)", "diff": ["-\t\t\t\tmethodDecl.internalSetModifiers(methodDeclaration.modifiers & CompilerModifiers.AccJustFlag);", "+\t\t\t\tmethodDecl.internalSetModifiers(methodDeclaration.modifiers & ExtraCompilerModifiers.AccJustFlag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a0b4a081881f02036e8b00e1894bcc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "3d59334f5fb40926c8512874251a24cf438a401b", "commitAfterChange": "fa04bcc7aeac1403aeb17877212985395c1541ca", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic boolean visit( \t\tAllocationExpression allocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tAllocationExpression allocationExpression, \t\tBlockScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); ", "+// TODO add again once 49298 is fixed\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a298453a79dff7e9928618eed3150e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "9fff7ba189be037b4cf4f61956b7e287259b8f6d", "commitAfterChange": "8f52c3e814b7d9e86327e186704f1c7e2be78c75", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t} else if (scope.environment().options.targetJDK < ClassFileConstants.JDK1_5) {", "+\t\t\t} else if (scope.environment().options.targetJDK < ClassFileConstants.JDK_DEFERRED) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a31bf2dc6893c3f2ed0c2857f460334", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "89b15ba6d3aa28748d29d9d1d4b083699e7539bb", "commitAfterChange": "4a19373fcf0b223c67accf2e0e240651b8f7bc94", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testIgnoreIfBetterNonAccessibleRule2() throws JavaModelException", "signatureAfterChange": " \tpublic void testIgnoreIfBetterNonAccessibleRule2() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project3Path, new Problem(\"\", \"Discouraged access: The type A is not accessible due to restriction on required project Project2\", b, 35, 38, CategorizedProblem.CAT_BUILDPATH)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project3Path, new Problem(\"\", \"Discouraged access: The type A is not accessible due to restriction on required project Project2\", b, 35, 38, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a33a4b43f833674363958030b7e18a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelStatus.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic IJavaElement[] getElements()", "signatureAfterChange": " \tpublic IJavaElement[] getElements()", "diff": ["-\t\treturn fElements;", "+\t\treturn elements;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a346cd793b79997f921ecc06b14bd87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testChangeSourceAttachmentFile() throws CoreException", "signatureAfterChange": " public void testChangeSourceAttachmentFile() throws CoreException", "diff": ["-\tIClassFile cf = this.jarRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a359582ddc96b9238e7b5c1cf3399d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testExternalJarChanged2() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarChanged2() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a383253d3a6254de00542ef605b5729", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefClassErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefClassErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a4b39643f2418162ed28824f2a02b46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 443, "methodNumberAfterChange": 443, "signatureBeforeChange": " \tpublic void test424()", "signatureAfterChange": " \tpublic void test424()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TYPE_DECLARATION_BRACE_POSITION, DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_BRACE_POSITION_FOR_TYPE_DECLARATION, DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a5abcf34863c961e18789dc2b38cbc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "6ca7b05ef1b6b0934e3b4a61271beb56d55912f0", "commitAfterChange": "c531b3f0c052a6b596da13730fb589efa2e45e52", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tvoid postRemoveChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "signatureAfterChange": " \tvoid postRemoveChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "diff": ["-\t\t\tthis.eventHandler.preRemoveChildEvent(node, child, property);", "+\t\t\tthis.eventHandler.postRemoveChildEvent(node, child, property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a69b33dd1f69739e96db99fe6ded3f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public IPath[] enclosingProjectsAndJars()", "signatureAfterChange": "\r public IPath[] enclosingProjectsAndJars()", "diff": ["-\t\t\t\t\tIClasspathEntry[] entries = javaProject.getResolvedClasspath(true);\r", "+\t\t\t\t\tIClasspathEntry[] entries = javaProject.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a728aca7c6301071aa55898872daa4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic IPackageFragmentRoot findPackageFragmentRoot(IPath path) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IPackageFragmentRoot findPackageFragmentRoot(IPath path) \t\tthrows JavaModelException", "diff": ["-\t\treturn findPackageFragmentRoot0(this.canonicalizedPath(path));", "+\t\treturn findPackageFragmentRoot0(JavaProject.canonicalizedPath(path));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a8645bf51789be4898c12b0df2edcad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ScannerTest.java", "commitBeforeChange": "451f820dc0247eba7c37bf74780f9db9334c820a", "commitAfterChange": "3bbe023d2fca1841b10d4650366cb2e72fef8e96", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["+\t", "-\t\treturn setupSuite(testClass());", "+\t\treturn buildTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6aa1804f8bfbf175958d756228e32df3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-    switch(otherType.bindingType()) {", "+    switch(otherType.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ab82ec34968d8ef7702f4658f675f4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public TypeDeclarationPattern( \tchar[] pkg, \tchar[][] enclosingTypeNames, \tchar[] simpleName, \tchar classOrInterface, \tint matchMode,  \tboolean isCaseSensitive)", "signatureAfterChange": " public TypeDeclarationPattern( \tchar[] pkg, \tchar[][] enclosingTypeNames, \tchar[] simpleName, \tchar classOrInterface, \tint matchMode,  \tboolean isCaseSensitive)", "diff": ["-\tthis.needsResolve = pkg != null && enclosingTypeNames != null;", "+\tthis.mustResolve = pkg != null && enclosingTypeNames != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6acd09c5569c9175a18678e31ede506c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "1c9dd0c7c62444ebc1bc37a1835309baea249f6c", "commitAfterChange": "6170ff16a0b9356e10e327f799b882e2c8677920", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic MethodBinding tiebreakMethod()", "signatureAfterChange": " \tpublic MethodBinding tiebreakMethod()", "diff": ["-\t\t\t\tnewArguments[i] = isStatic ? ", "-\t\t\t\t\toriginalVariables[i].upperBound() : // do not rawify for statics", "+\t\t\t\tnewArguments[i] = isStatic ?", "+\t\t\t\t\toriginalVariables[i].semiRawifiedFirstUpperBound() :", "+\t\t\t\t\t\t// full rawification too much for statics", "-\t}\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ad2c480f6251b997fc3330aca655ad2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2193765f6a14f1428523dab68858768ca623c9d3", "commitAfterChange": "5450463d69e66bedc3d0797b782f5dab3b9072d6", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 197, "signatureBeforeChange": "  \tpublic void removePerProjectInfo(JavaProject javaProject)", "signatureAfterChange": "  \tpublic void removePerProjectInfo(JavaProject javaProject)", "diff": ["-\t\tresetNonChainingJarsCache();", "+\t\tresetClasspathListCache();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ad890009313e21830123770bf3e38c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NullAnnotationModelTests.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void _testMissingAnnotation3() throws CoreException", "signatureAfterChange": " \tpublic void _testMissingAnnotation3() throws CoreException", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS4);", "+\t\t\tASTParser parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ada0a2e7595a382b3550fe518d15e07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tprivate void findJavadocInlineTags(CompletionOnJavadocTag javadocTag)", "signatureAfterChange": " \tprivate void findJavadocInlineTags(CompletionOnJavadocTag javadocTag)", "diff": ["-\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.JAVADOC_INLINE_TAG, this.actualCompletionPosition);", "+\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.JAVADOC_INLINE_TAG, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ae638f27eeff8510ea78dd1f538b799", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayTypeReference arrayTypeReference, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayTypeReference arrayTypeReference, \t\tClassScope scope)", "diff": ["-\t\t\tif (this.preferences.insert_space_before_bracket_in_array_type_reference) {", "+\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b05e011c9ac221eebaf1ad884810426", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic QualifiedAllocationExpression(AnonymousLocalTypeDeclaration anonymousType)", "signatureAfterChange": "  \tpublic QualifiedAllocationExpression(TypeDeclaration anonymousType)", "diff": ["-\tpublic QualifiedAllocationExpression(AnonymousLocalTypeDeclaration anonymousType) {", "+\tpublic QualifiedAllocationExpression(TypeDeclaration anonymousType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b29f62ad8a3ec4f52c114f656806662", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CharOperationTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b3f808b741125b84b69a564de7fc204", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryTypeConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static TypeDeclaration buildTypeDeclaration(IType type, CompilationUnitDeclaration compilationUnit, CompilationResult compilationResult)  throws JavaModelException", "signatureAfterChange": " \tpublic static TypeDeclaration buildTypeDeclaration(IType type, CompilationUnitDeclaration compilationUnit, CompilationResult compilationResult)  throws JavaModelException", "diff": ["-\t\t\tcompilationUnit.currentPackage = new ImportReference(packageName, new long[]{0}, false, CompilerModifiers.AccDefault);", "+\t\t\tcompilationUnit.currentPackage = new ImportReference(packageName, new long[]{0}, false, ClassFileConstants.AccDefault);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b52a635569e2f6b7019b513f66efe63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/LabelStatementCompletionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(LabelStatementCompletionTest.class);", "+\treturn buildAllCompliancesTestSuite(LabelStatementCompletionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b54e67fac8b4351d77d9f9508299438", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "0c486e9f722d5cf66150a2a8bb111fadf3c196f6", "commitAfterChange": "5e6cea593f4be5a13a34ce02970d8b34d029a673", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " protected void enterTypeParameter(TypeParameterInfo typeParameterInfo)", "signatureAfterChange": " protected void enterTypeParameter(TypeParameterInfo typeParameterInfo)", "diff": ["-\tinfo.bounds = typeParameterInfo.typeParameterBounds;", "+\tinfo.bounds = typeParameterInfo.bounds;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b570f5f473a65d983e09ada4e254684", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/ScannerHelper.java", "commitBeforeChange": "118e5eb4508f6d2b84c25d214f5e8ed4bfed5b18", "commitAfterChange": "d5c3de1bf49901f78640f1692fd5e63eca3fdc62", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public static char toUpperCase(char c)", "signatureAfterChange": " public static char toUpperCase(char c)", "diff": ["-\treturn Character.toLowerCase(c);", "+\treturn Character.toUpperCase(c);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b5bc073db24a0d9eefd0b4f159943bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "7aac6f03ecf70666410b0e689c91dafd6d67757a", "commitAfterChange": "465d091146b1d6997709777ea444048487da1d8d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void endVisit( \t\t\tAnnotationTypeMemberDeclaration annotationTypeDeclaration, \t\t\tClassScope classScope)", "signatureAfterChange": " \tpublic void endVisit( \t\t\tAnnotationMethodDeclaration annotationTypeDeclaration, \t\t\tClassScope classScope)", "diff": ["-\t\t\tAnnotationTypeMemberDeclaration annotationTypeDeclaration,", "+\t\t\tAnnotationMethodDeclaration annotationTypeDeclaration,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b60df3452a1ab58be5b101aedbd9432", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragment.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected JarPackageFragment(IPackageFragmentRoot root, String name)", "signatureAfterChange": " protected JarPackageFragment(PackageFragmentRoot root, String name)", "diff": ["-protected JarPackageFragment(IPackageFragmentRoot root, String name) {", "+protected JarPackageFragment(PackageFragmentRoot root, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b65158329435fa8f9582095b82d1d90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     private static Object performNecessaryTypeConversion(final TypeMirror expectedType, \t    \t\t\t\t\t\t\t\t\t\t\t     final Object value, \t    \t\t\t\t\t\t\t\t\t\t\t     final String name, \t    \t\t\t\t\t\t\t\t\t\t\t     final EclipseMirrorImpl parent, \t    \t\t\t\t\t\t\t\t\t\t\t     final BaseProcessorEnv env)", "signatureAfterChange": "     private static Object performNecessaryTypeConversion(final TypeMirror expectedType, \t    \t\t\t\t\t\t\t\t\t\t\t     final Object value, \t    \t\t\t\t\t\t\t\t\t\t\t     final String name, \t    \t\t\t\t\t\t\t\t\t\t\t     final EclipseMirrorObject parent, \t    \t\t\t\t\t\t\t\t\t\t\t     final BaseProcessorEnv env)", "diff": ["-\t    \t\t\t\t\t\t\t\t\t\t\t     final EclipseMirrorImpl parent,", "+\t    \t\t\t\t\t\t\t\t\t\t\t     final EclipseMirrorObject parent,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b65737c43a9709a2c14e12e7317cd72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "81c62d5935a591fe4cf87abbebf09e04755572ce", "commitAfterChange": "18c9ee28439dc99049f5f8ecbf6109b62307dc52", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static long getIrritant(int problemID)", "signatureAfterChange": " \t \tpublic static long getIrritant(int problemID)", "diff": ["-\t\t\tcase IProblem.JavadocNotVisibleReference:", "+\t\t\tcase IProblem.JavadocHiddenReference:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b6cc6520db02de8a3123db2334ddf0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceField.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected SourceField(IType parent, String name)", "signatureAfterChange": " protected SourceField(JavaElement parent, String name)", "diff": ["-protected SourceField(IType parent, String name) {", "+protected SourceField(JavaElement parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b7078e1f4c7b6e400ff290e37e9a9fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void testDeleteMethod1() throws JavaModelException", "signatureAfterChange": " public void testDeleteMethod1() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b74482201d23a16dc6f7fe97cb4f703", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationFragment.java", "commitBeforeChange": "a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8", "commitAfterChange": "7df061f9da0ab96be87e5851cb157a28c5f5bca0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tfinal List internalGetChildListProperty(ChildListPropertyDescriptor property)", "signatureAfterChange": " \tfinal List internalGetChildListProperty(ChildListPropertyDescriptor property)", "diff": ["-\t\t\treturn getExtraDimensionInfos();", "+\t\t\treturn extraDimensionInfos();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b9a54a9dff9fcd5054077f6acac8f5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, boolean assignVariables, char[][][] missingTypeNames, \t\t\t\t\t\t\t\t\t\t\t\t\tITypeAnnotationWalker walker, boolean isClassTypeParameter)", "signatureAfterChange": "  private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, boolean assignVariables, char[][][] missingTypeNames, \t\t\t\t\t\t\t\t\t\t\t\t\tTypeAnnotationWalker walker, boolean isClassTypeParameter)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\t\tITypeAnnotationWalker walker, boolean isClassTypeParameter)", "+\t\t\t\t\t\t\t\t\t\t\t\t\tTypeAnnotationWalker walker, boolean isClassTypeParameter)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b9b5ce525b61a1e45eec9a4c510f001", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " public void iflt(Label lbl)", "signatureAfterChange": " public void iflt(BranchLabel lbl)", "diff": ["-public void iflt(Label lbl) {", "+public void iflt(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bb034adb70325f2cd81ebbd90f4ef16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " \tpublic boolean visit(MethodRef node)", "signatureAfterChange": " \tpublic boolean visit(MethodRef node)", "diff": ["-\t\t\t\tint startOffset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameLPAREN, pos);", "+\t\t\t\tint startOffset= getScanner().getTokenEndOffset(TerminalTokens.TokenNameLPAREN, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bb0ec5d5f412bbd2667692cd45bf005", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceTypeElementInfo.java", "commitBeforeChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "commitAfterChange": "7234934f3efed703cbf030a33d03d36a447aeef6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public IType getHandle()", "signatureAfterChange": " public IType getHandle()", "diff": ["-\treturn this.fHandle;", "+\treturn this.handle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bc5efeee449e63e3e1967a3bcda0ba9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "85c0cf008dd1b5241c61c9fe1a844baa6951a8f3", "commitAfterChange": "8d2d50bf52f3a634d35e42a58029fdbb46ec188a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tTypeBinding receiverType)", "signatureAfterChange": "\r \tprivate void findLocalMethodDeclarations(\r \t\tchar[] methodName,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType)", "diff": ["-\t\tTypeBinding receiverType) {\r", "+\t\tReferenceBinding receiverType) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bc6a73a9a1dbebaeae9eb7522886566", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public void build(boolean computeSubtypes)", "signatureAfterChange": "\r \t\r \tpublic void build(boolean computeSubtypes)", "diff": ["-}\r", "-public void build(boolean computeSubtypes) {\r", "-\tif (this.hierarchy.fType == null || computeSubtypes) {\r", "-\t\tVector allTypesInRegion = determineTypesInRegion();\r", "-\t\tthis.hierarchy.initialize(allTypesInRegion.size());\r", "-\t\tcreateTypeHierarchyBasedOnRegion(allTypesInRegion);\r", "-\t} else {\r", "-\t\tthis.hierarchy.initialize(1);\r", "-\t\tthis.buildSupertypes();\r", "-\t}\r", "-}\r", "+\t\r", "+\tpublic void build(boolean computeSubtypes) {\r", "+\t\t\r", "+\t\tif (this.hierarchy.fType == null || computeSubtypes) {\r", "+\t\t\tArrayList allTypesInRegion = determineTypesInRegion();\r", "+\t\t\tthis.hierarchy.initialize(allTypesInRegion.size());\r", "+\t\t\tcreateTypeHierarchyBasedOnRegion(allTypesInRegion);\r", "+\t\t} else {\r", "+\t\t\tthis.hierarchy.initialize(1);\r", "+\t\t\tthis.buildSupertypes();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bdf63d2e0c04af6312dbb355f1a7003", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": "\r final public void ifeq(Label lbl)", "signatureAfterChange": "\r final public void ifeq(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_ifeq, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_ifeq, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bee8f9c9fd96b50cd391a5e5b8237dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "1d9c797e2d535a723d97129a4995a501f060e8fc", "commitAfterChange": "45457c087850a9bcb1e2d528c971be662d0a4e96", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tpublic void resolve(ClassScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(ClassScope upperScope)", "diff": ["-\t\t\tvalidateAnnotations();", "+\t\t\tvalidateNullAnnotations();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bf4e928691085cf18f08afcd82a14ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NumericTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bfb29e8cf04ab83aca5a80917b83872", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "a2380c5dc7487191ba2f073fdb6868b729cb0c57", "commitAfterChange": "6c3b6971f88c7f6d5be3c70fdaf936700dc7f94b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void setReceiverType(AnnotatableType receiverType)", "signatureAfterChange": " \tpublic void setReceiverType(Type receiverType)", "diff": ["-\tpublic void setReceiverType(AnnotatableType receiverType) {", "+\tpublic void setReceiverType(Type receiverType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c100ad0d0d9eafdc02332e696f2c1ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c1318ed0dd86470fe4007e32326442e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "0307cad3f1b01ed5d7ce67bc78cd9b706e4819f3", "commitAfterChange": "7a57dee588cd632418aaf1f630bac2c2a5d6439a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testASTParsing2() throws JavaModelException", "signatureAfterChange": " public void testASTParsing2() throws JavaModelException", "diff": ["-\t} catch(IllegalArgumentException e) {", "+\t} catch(IllegalStateException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c175121fb7b8da153015e42b4ba67b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public DocumentElementParser( \tfinal IDocumentElementRequestor requestor,  \tIProblemFactory problemFactory, \tCompilerOptions options)", "signatureAfterChange": " \t public DocumentElementParser( \tfinal IDocumentElementRequestor requestor,  \tIProblemFactory problemFactory, \tCompilerOptions options)", "diff": ["-\tthis.javadocParser.checkJavadoc = false;", "+\tthis.javadocParser.checkDocComment = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c1af40b8a111c0ee5c1404e4d83804f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefMethodErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefMethodErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3332bc53fe8a08dfc9bd2afe5933c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3697df4bfaeb88a76021e0a632a430", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference)", "signatureAfterChange": " \tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding local, int nullStatus, Expression reference)", "diff": ["-\tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, LocalVariableBinding local, int nullStatus, Expression reference) {", "+\tprivate void checkVariableComparison(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo, FlowInfo initsWhenTrue, FlowInfo initsWhenFalse, VariableBinding local, int nullStatus, Expression reference) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c3ce1473ec6b8e1b9466da5ab8a997e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tpublic boolean visit( \t\tInstanceOfExpression instanceOfExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tInstanceOfExpression instanceOfExpression, \t\tBlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameinstanceof, true);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameinstanceof, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c456f8d5932cc4285fa9cddbc940fee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ClasspathJar.java", "commitBeforeChange": "bd66f33da6dcc33c67153a2129d6fec0fda88ac8", "commitAfterChange": "dc4de554479d1bd7115bbb51a83f104f76dfaa9e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t\r \r ClasspathJar(String zipFilename)", "signatureAfterChange": "\t\r \r ClasspathJar(String zipFilename)", "diff": ["-\t\tdirectoryCache = new LookupTable();\r", "+\t\tdirectoryCache = new SimpleLookupTable();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8f1010b80023b8e0b0ae4c12c1eb09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "53b5fe3415daa91888a4dcef6f73ef37da327c9d", "commitAfterChange": "74e1d8b9e6c95d8da27ff2820561d7a82f16f71b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tNameLookup newNameLookup(JavaProject project, ICompilationUnit[] workingCopies)", "signatureAfterChange": " \tNameLookup newNameLookup(JavaProject project, ICompilationUnit[] workingCopies)", "diff": ["-\t\treturn new NameLookup(cache.allPkgFragmentRootsCache, cache.allPkgFragmentsCache, workingCopies, cache.pathToResolvedEntries);", "+\t\treturn new NameLookup(cache.allPkgFragmentRootsCache, cache.allPkgFragmentsCache, workingCopies, cache.rootToResolvedEntries);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c9b6e00a15786a73f87fb29303f86cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic void test073()", "signatureAfterChange": " \tpublic void test073()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ca62e18a598dd20c45d618bb1ae2fa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragment.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected boolean computeChildren(OpenableElementInfo info)", "signatureAfterChange": " protected boolean computeChildren(OpenableElementInfo info)", "diff": ["-\t\tinfo.setChildren(JavaElementInfo.fgEmptyChildren);", "+\t\tinfo.setChildren(JavaElementInfo.NO_CHILDREN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ca8636d4495c08bafa375b74a8024dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " public void if_icmpeq(Label lbl)", "signatureAfterChange": " public void if_icmpeq(BranchLabel lbl)", "diff": ["-public void if_icmpeq(Label lbl) {", "+public void if_icmpeq(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cbe8c9736d60c7a014631e9e40d6465", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "39ff9f74e7d15911f4d6035f122df4ccc5c0c639", "commitAfterChange": "4565c4d11214ff6c3b1816642f5ab9e9c25eeecc", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tvoid storeTypeSignaturesAndArguments(IType type)", "signatureAfterChange": " \tvoid storeTypeSignaturesAndArguments(IType type)", "diff": ["-\t\t\tString signature = key.toSignature();", "+\t\t\tString signature = key.internalToSignature();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc2150e5dc6061a9f3aa3c705070f42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc7b2d15aa80c7dd9edabfdf41261da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "97568f9c37f129641284bb42b0df485d8547693d", "commitAfterChange": "359b062d76b50af2a7ba63a16c2b2133308ca095", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic IMethodBinding[] getDeclaredMethods()", "signatureAfterChange": " \tpublic IMethodBinding[] getDeclaredMethods()", "diff": ["-\t\t\treturn NO_DECLARED_METHODS;", "+\t\t\treturn NO_METHOD_BINDINGS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cef5874903d0036a5b63804b78b32f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public void resetNullInfo(LocalVariableBinding local)", "signatureAfterChange": "  public void resetNullInfo(VariableBinding local)", "diff": ["-public void resetNullInfo(LocalVariableBinding local) {", "+public void resetNullInfo(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cf102a31849bfc8a51620ed65499088", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "cba4a74f046a7c7d43d81e11b279554f1ab8b4ad", "commitAfterChange": "2a01994b0addf3b51b8cc85382b32cfdc277de6c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void add(IJavaElement element) throws JavaModelException", "signatureAfterChange": "\r public void add(IJavaElement element) throws JavaModelException", "diff": ["-\t\tthis.add((IJavaProject)element, true, new Hashtable(2));\r", "+\t\tthis.add((IJavaProject)element, true, new HashSet(2));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cf7c9185a499f8868e8b9d69a7405b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "5b571c10f6bc3362562e3394fe138c118abcca9f", "commitAfterChange": "c0648c986bd8f9b4b5c031105639a6f9119992bf", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public InferenceContext18 getInferenceContext(ParameterizedGenericMethodBinding method)", "signatureAfterChange": " public InferenceContext18 getInferenceContext(ParameterizedMethodBinding method)", "diff": ["-public InferenceContext18 getInferenceContext(ParameterizedGenericMethodBinding method) {", "+public InferenceContext18 getInferenceContext(ParameterizedMethodBinding method) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cfd2b8468672969054ea7a5ac4550f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "commitAfterChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void configurePluginDebugOptions()", "signatureAfterChange": " \tpublic void configurePluginDebugOptions()", "diff": ["-\t\t\tif(option != null) IndexManager.VERBOSE = option.equalsIgnoreCase(\"true\") ; //$NON-NLS-1$", "+\t\t\tif(option != null) JobManager.VERBOSE = option.equalsIgnoreCase(\"true\") ; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d063a63d1275aa3e780e907fc69f6ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tvoid buildAnonymousTypeBinding(SourceTypeBinding enclosingType, ReferenceBinding supertype)", "signatureAfterChange": " \t \tvoid buildAnonymousTypeBinding(SourceTypeBinding enclosingType, ReferenceBinding supertype)", "diff": ["-\t\t\tsourceType.superInterfaces = TypeBinding.NoSuperInterfaces;", "+\t\t\tsourceType.superInterfaces = TypeConstants.NoSuperInterfaces;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d10447529bd17842ebfd50433435624", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/FieldInfo.java", "commitBeforeChange": "8b559ddce6982a78fabc126c4d719f68c189bfdb", "commitAfterChange": "99f1f2030748a78aa47d20289420461bb423e8b1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r private boolean isSynthetic()", "signatureAfterChange": "\r public boolean isSynthetic()", "diff": ["-private boolean isSynthetic() {\r", "+public boolean isSynthetic() {\r", "-\t\tint utf8Offset = constantPoolOffsets[u2At(8)] - structOffset;\r", "+\t\tint utf8Offset = constantPoolOffsets[u2At(readOffset)] - structOffset;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d20adac59b316261a58064111ef0a1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic IndexedFile addDocument(IDocument document)", "signatureAfterChange": "  \tpublic IndexedFile addDocument(SearchDocument document)", "diff": ["-\tpublic IndexedFile addDocument(IDocument document) {", "+\tpublic IndexedFile addDocument(SearchDocument document) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d23295f1ec9505e26b780b3f1cab727", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "8c3c66471763201137503760710e54e98c86a2ff", "commitAfterChange": "187b51c698ed19fcae521771e99092d2e75d91e0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void checkPackagePrivateAbstractMethod(MethodBinding abstractMethod)", "signatureAfterChange": " private void checkPackagePrivateAbstractMethod(MethodBinding abstractMethod)", "diff": ["-\t\t\tif (!areReturnTypeErasuresEqual(method, abstractMethod) || !areParameterErasuresEqual(method, abstractMethod))", "+\t\t\tif (!isReturnTypeSubstituable(method, abstractMethod) || !areParameterErasuresEqual(method, abstractMethod))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d2e3d19dffef0a0aec5879fc09ae09a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic SearchEngine(WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " \tpublic SearchEngine(WorkingCopyOwner workingCopyOwner)", "diff": ["-\t\tthis.basicEngine = new SearchBasicEngine(workingCopyOwner);", "+\t\tthis.basicEngine = new BasicSearchEngine(workingCopyOwner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d343e8214ab4f2bef60a1dd75ca27a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefClassErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefClassErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d5f42f36fb6155650311d929d8ad57e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "08440b11a85f5921d0cf1d4a29cf7b273dac9dd4", "commitAfterChange": "64b2400918fa9c980503c07d6eedfc52178c580c", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "diff": ["-\t\t\tthis.preferences.insert_space_before_method_declaration_open_paren,", "+\t\t\tthis.preferences.insert_space_before_constructor_declaration_open_paren,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d76142ab8cda88ec608118d02a14c01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprivate void dispatchToFileBasedProcessor( \t\t\tfinal CompilationProcessorEnv processorEnv)", "signatureAfterChange": " \t \tprivate void dispatchToFileBasedProcessor( \t\t\tfinal AbstractCompilationEnv processorEnv)", "diff": ["-\t\t\tfinal CompilationProcessorEnv processorEnv){", "+\t\t\tfinal AbstractCompilationEnv processorEnv){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d810741a0c05655a17a2b630c6b60d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testAddExternalLibFolder2() throws CoreException", "signatureAfterChange": " public void testAddExternalLibFolder2() throws CoreException", "diff": ["-\t\tIPath path = new Path(getExternalFolderPath(\"externalLib\"));", "+\t\tIPath path = new Path(getExternalResourcePath(\"externalLib\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d93ab056bdf0ae13c2685b78c88d96c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeletePackageFragmentRootOperation.java", "commitBeforeChange": "2431fcce5ad38081147c6e09cb53c7dc03a305b0", "commitAfterChange": "a63bfebd93eba501c5c19d6b8b77603d7591de09", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected void updateReferingProjectClasspaths(IPath rootPath) throws JavaModelException", "signatureAfterChange": " \tprotected void updateReferingProjectClasspaths(IPath rootPath) throws JavaModelException", "diff": ["-\t\t\t\t\t\tnewCPIndex = 0;", "+\t\t\t\t\t\tnewCPIndex = j;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d9a7746cb7d9efb5e1619564a8b40c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Continue.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\treturn FlowInfo.DeadEnd;", "+\t\treturn FlowInfo.DEAD_END;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d9bfbdc204b93a2c8920ac98b08e638", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "signatureAfterChange": "   public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "diff": ["-\tif (binaryType.getKind() == IGenericType.INTERFACE)", "+\tif (binaryType.getKind() == IGenericType.INTERFACE_DECL)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6da630ec93802b322c8e3b7e4208836e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.actualReceiverType = scope.enclosingSourceType();", "+\t\tthis.actualReceiverType = scope.enclosingReceiverType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6da9dc77f4d62556e3de497a27c3036b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6fdaa2b9d78c89a1ed2269f5279c3e02cee4b6cd", "commitAfterChange": "8ec1d344fc5f9b16a04a2a15e36cb4db52cac4eb", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic synchronized Object getInfo(IJavaElement element)", "signatureAfterChange": " \tpublic synchronized Object getInfo(IJavaElement element)", "diff": ["-\t\tHashMap tempCache = (HashMap)this.temporaryCache.getCurrent();", "+\t\tHashMap tempCache = (HashMap)this.temporaryCache.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6dd6c053cb8e7c914ec7bfc8f9f2cd09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic abstract void traverse(ASTVisitor visitor, CompilationUnitScope scope);", "signatureAfterChange": " \tpublic abstract void traverse(ASTVisitor visitor, ClassScope scope);", "diff": ["-\tpublic abstract void traverse(ASTVisitor visitor, CompilationUnitScope scope);", "+\tpublic abstract void traverse(ASTVisitor visitor, ClassScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6de183b0096137221cb753913699049a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  public void test036() throws JavaModelException", "signatureAfterChange": "  public void test036() throws JavaModelException", "diff": ["-\t\t\"BasicTestTypesSecondary[TYPE_REF]{BasicTestTypesSecondary, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypesSecondary;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"BasicTestTypesSecondary[TYPE_REF]{BasicTestTypesSecondary, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypesSecondary;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0620f19d7165edf34134dd721419b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationFragment node)", "signatureAfterChange": " \tpublic boolean visit(VariableDeclarationFragment node)", "diff": ["-\t\tvisitExtraDimensions(node, INTERNAL_FRAGMENT_EXTRA_DIMENSIONS_PROPERTY, VariableDeclarationFragment.EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\tvisitExtraDimensions(node, INTERNAL_FRAGMENT_EXTRA_DIMENSIONS_PROPERTY, VariableDeclarationFragment.EXTRA_DIMENSIONS2_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0845bc26468c693f4167f02f20ca9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0cd073506907379ee426cb97fd8c6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testAccessRestriction11() throws Exception", "signatureAfterChange": " public void testAccessRestriction11() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.ENABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e1afacd9ea0107641a4500b8399c2e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MovePackageFragmentRootOperation.java", "commitBeforeChange": "e9c7ae15a8e3444e0a4d915eee6d3b7013c1ef90", "commitAfterChange": "7ccdb219c998345b81552f167498fc76ce4f9f3c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected void updateReferringProjectClasspaths(IPath rootPath, IJavaProject projectOfRoot) throws JavaModelException", "signatureAfterChange": " \tprotected void updateReferringProjectClasspaths(IPath rootPath, IJavaProject projectOfRoot) throws JavaModelException", "diff": ["-\t\t\tupdateProjectClasspath(rootPath, project);", "+\t\t\trenameEntryInClasspath(rootPath, project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e299994723211746615cf6539acd45c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "645b7bfaa2fa6e51ee8178c0b98a65d610d989c2", "commitAfterChange": "6cb5df5deb874bcd03782569c94840e1aa61cfba", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo)", "signatureAfterChange": "\r public boolean matchesBinary(Object binaryInfo, Object enclosingBinaryInfo)", "diff": ["-\tif (!this.matchesType(this.simpleName, this.qualification, enclosingTypeName, typeName)) {\r", "+\tif (!this.matchesType(this.simpleName, this.pkg, enclosingTypeName, typeName)) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e49b04d6952afb83852404f11c94215", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 281, "methodNumberAfterChange": 289, "signatureBeforeChange": " public void testBug110060_ConstructorPattern01() throws CoreException", "signatureAfterChange": " public void testBug110060_ConstructorPattern01() throws CoreException", "diff": ["-\tsearch(\"AA\", CONSTRUCTOR, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\tsearch(\"AA\", CONSTRUCTOR, REFERENCES, SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e57c365a2147b8ea69b49b0c521ed09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r public  boolean isSourceType()", "signatureAfterChange": "\r \tpublic boolean isSourceType()", "diff": ["-public  boolean isSourceType() {\r", "-\treturn sourceType != null;\r", "-}\r", "+\t */\r", "+\tpublic boolean isSourceType() {\r", "+\t\treturn sourceTypes != null;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e6548edc136f95de07b2fdb22dccdcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprotected JarPackageFragmentRoot(IPath jarPath, IJavaProject project)", "signatureAfterChange": " \tprotected JarPackageFragmentRoot(IPath jarPath, JavaProject project)", "diff": ["-\tprotected JarPackageFragmentRoot(IPath jarPath, IJavaProject project) {", "+\tprotected JarPackageFragmentRoot(IPath jarPath, JavaProject project) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e674485a506216b659d7605a998ab9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": "  \tpublic boolean visit(VariableDeclarationFragment node)", "signatureAfterChange": "  \tpublic boolean visit(UnionType node)", "diff": ["+\tpublic boolean visit(UnionType node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e6796d9ca1bce759e4361e3ce61f43a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrLocator.java", "commitBeforeChange": "425b0c5314087893896fa849d0ee8761b973ef60", "commitAfterChange": "340d840f950775980b46fcf21979bc21f0e19016", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public int match(TypeParameter node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(ReferenceExpression node, MatchingNodeSet nodeSet)", "diff": ["+public int match(ReferenceExpression node, MatchingNodeSet nodeSet) {", "+\tint level = IMPOSSIBLE_MATCH;", "+\tfor (int i = 0, length = this.patternLocators.length; i < length; i++) {", "+\t\tint newLevel = this.patternLocators[i].match(node, nodeSet);", "+\t\tif (newLevel > level) {", "+\t\t\tif (newLevel == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t\t\tlevel = newLevel;", "+\t\t}", "+\t}", "+\treturn level;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e68a04ff19b2da6b7ae97fc17cde473", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "commitAfterChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\tString[] paths = index.queryInDocumentNames(\"\"); // all file names //$NON-NLS-1$", "+\t\t\t\tString[] paths = index.queryDocumentNames(\"\"); // all file names //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e7fac3307bb91562396ca786bd95cd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void test_parameter_specification_inheritance_013()", "signatureAfterChange": " public void test_parameter_specification_inheritance_013()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e86a67b31bb609d8efea34a05c9e61a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "97568f9c37f129641284bb42b0df485d8547693d", "commitAfterChange": "359b062d76b50af2a7ba63a16c2b2133308ca095", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic IVariableBinding[] getDeclaredFields()", "signatureAfterChange": " \tpublic IVariableBinding[] getDeclaredFields()", "diff": ["-\t\t\treturn NO_DECLARED_FIELDS;", "+\t\t\treturn NO_VARIABLE_BINDINGS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e8ba02376758fbf6658a5669237b392", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrLocator.java", "commitBeforeChange": "4dd777707c2803e1e51e44f3ccb37074b166c552", "commitAfterChange": "bb0062c9650742fadc1d35f4bf3fa1b174bd1969", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void match(Reference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(MessageSend node, MatchingNodeSet nodeSet)", "diff": ["+public void match(MessageSend node, MatchingNodeSet nodeSet) {", "+\tfor (int i = 0, length = this.patternLocators.length; i < length; i++)", "+\t\tthis.patternLocators[i].match(node, nodeSet);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e920dac074b98127def5ddafb78675e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "8725686e4322c27855e28a436fd50d8fdf140d60", "commitAfterChange": "4a181894176f3a1eccc3e35147ddca845e353389", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "signatureAfterChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "diff": ["-\t\t\t\t\texclusionPatterns = ((ClasspathEntry)entry).fulExclusionPatternChars();", "+\t\t\t\t\texclusionPatterns = ((ClasspathEntry)entry).fullExclusionPatternChars();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e937db873b38c3466f1781a2627da11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java", "commitBeforeChange": "ca140a64ea9dab827de00f91eb7113ac00964828", "commitAfterChange": "2918b5cc2ced910135a27ce367db19e3d162582b", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " public void test0095() throws JavaModelException", "signatureAfterChange": " public void test0095() throws JavaModelException", "diff": ["-\tString signature = new BindingKey(key).internalToSignature();", "+\tString signature = new BindingKey(key).toSignature();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e95eef605d9f9f1e0bfd9efa2a9c5f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tASTNode clone0(AST target)", "signatureAfterChange": " \tASTNode clone0(AST target)", "diff": ["-\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ea4d1a6ad28c1b1c86df2a8483f2407", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public void test035() throws JavaModelException", "signatureAfterChange": "  public void test035() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ebf591e7b3fb736515b0b8742395205", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Javadoc.java", "commitBeforeChange": "dfc91d56806c456b9b3ccf18b7180e0ffe937730", "commitAfterChange": "b2cc128bda23f9f1345b0f7e7b16cc0855af3cea", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\treturn memSize() + fragments.listSize();", "+\t\treturn memSize() + tags.listSize();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ec1ae856aebeb052133368aa29b8a8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/InternalSearchPattern.java", "commitBeforeChange": "b8323ccd49cf224a0070d2cb1a7a617400e273ad", "commitAfterChange": "79a2912d77b5ac9bf55d643f1f89285b3b152140", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tEntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " \tEntryResult[] queryIn(Index index) throws IOException", "diff": ["-\t\treturn index.query(pattern.getMatchCategories(), pattern.getIndexKey(), pattern.getMatchRule());", "+\t\treturn index.query(pattern.getIndexCategories(), pattern.getIndexKey(), pattern.getMatchRule());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ecbe4828f095315e4586625f0c203a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 515, "methodNumberAfterChange": 515, "signatureBeforeChange": " public void testCompletionKeywordFinal16() throws JavaModelException", "signatureAfterChange": " public void testCompletionKeywordFinal16() throws JavaModelException", "diff": ["-\t\t\t\"element:finalize    completion:protected void finalize() throws Throwable    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\t\t\t\"element:finalize    completion:protected void finalize() throws Throwable    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ecca84ed048f35f66bf077b23d3c1c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "0d5d4b61217e2b3559edf7001ae24c184bef94b8", "commitAfterChange": "2ead4bdcbfe85e4d5b336d70f2ec655c30027212", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "signatureAfterChange": " \tprotected void generateClasspathChangeDeltas( \t\tIClasspathEntry[] oldResolvedPath, \t\tIClasspathEntry[] newResolvedPath, \t\tJavaModelManager manager, \t\tfinal JavaProject project)", "diff": ["-\t\t\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,", "+\t\t\t\t\t\t\tIJavaElementDelta.F_REORDER,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ed4ca44b7548ae33f2cfff9fe9725c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "  public void test135() throws JavaModelException", "signatureAfterChange": "  public void test135() throws JavaModelException", "diff": ["-\t\t\"OtherTypes[METHOD_REF<CONSTRUCTOR>]{OtherTypes(), Ljavadoc.methods.tags.OtherTypes;, ()V, OtherTypes, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"OtherTypes[METHOD_REF<CONSTRUCTOR>]{OtherTypes(), Ljavadoc.methods.tags.OtherTypes;, ()V, OtherTypes, null, \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ede193102aa875e75cf92732ee4c58e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "f41df9b6ac9b62f616470e8ec0968732d823137f", "commitAfterChange": "2f379667b4f33f336f0003d6b2911b5403125b74", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tpublic boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " \t \tpublic boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t            if ((otherType.tagBits & HasWildcard) == 0 && (!this.isMemberType() || !otherType.isMemberType())) ", "+\t            if ((otherType.tagBits & HasDirectWildcard) == 0 && (!this.isMemberType() || !otherType.isMemberType())) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ee60eea8b239dc1ba29b58b5e63e0c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedMethodsPattern.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void reportDeclaration(MethodBinding methodBinding, MatchLocator locator) throws CoreException", "signatureAfterChange": " private void reportDeclaration(MethodBinding methodBinding, MatchLocator locator) throws CoreException", "diff": ["-\tIResource resource = type.getUnderlyingResource();", "+\tIResource resource = type.getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f1079a292d4389e35ec9ec51165c1fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "commitAfterChange": "74ac0014c1ede0ba61ac73f39089ab641618bf5d", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " \t\t \tprivate int findTagNameEnd(TagElement tagNode)", "signatureAfterChange": " \t\t \tprivate int findTagNameEnd(TagElement tagNode)", "diff": ["-\t\t\twhile (i < len && !Indents.isIndentChar(cont[i])) {", "+\t\t\twhile (i < len && !IndentManipulation.isIndentChar(cont[i])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f1090c80a26ccadd1950301d9da0d99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "100013bece0eb4f533563100e2e2c492eafe5eed", "commitAfterChange": "a836581cacf8d7a555ca92aa4df554df081b1e09", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic StringBuffer print(int indent, StringBuffer output)", "signatureAfterChange": " \tpublic StringBuffer print(int indent, StringBuffer output)", "diff": ["-\t\t\t.append(token)", "+\t\t\t.append(name)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f37878637b55aae01cc2692965d049e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter15/src/test0031/X.java", "commitBeforeChange": "a08dcb71c251f4a65da174f08c5aedb4a1c21fbd", "commitAfterChange": "c70a62bc8ce7399e134785e02dbb98fae8410d19", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public int goo(int param0)", "signatureAfterChange": "     public int goo(int param0)", "diff": ["-        class C extends E.A {", "+        class C extends X.A {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f3b893ecd03777518a134b87d15d1c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testAccessRestriction5() throws Exception", "signatureAfterChange": " public void testAccessRestriction5() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.ENABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f3e12c3eb6db8e6e8e3b01d668b8baa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBound.java", "commitBeforeChange": "06cedbd8bd184e3f34c939385e2cbddd9e3aedca", "commitAfterChange": "0d09a2966f3cebfb8d6601000e2b64259fed7dd8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate TypeBinding safeType(TypeBinding type)", "signatureAfterChange": " \t \tprivate TypeBinding safeType(TypeBinding type)", "diff": ["-\t\t\tif (enclosingMethod != null && CharOperation.equals(TypeConstants.ANONYMOUS_METHOD, enclosingMethod.selector))", "+\t\t\tif (enclosingMethod != null && CharOperation.prefixEquals(TypeConstants.ANONYMOUS_METHOD, enclosingMethod.selector))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f55e5833163703b4b3ba65c096dcec2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/UnresolvedAnnotationBinding.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public ElementValuePair[] getElementValuePairs()", "signatureAfterChange": "  public ElementValuePair[] getElementValuePairs()", "diff": ["-\t\t\tgetAnnotationType(); // resolve the annotation type", "+\t\t\tresolve();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f561f3918a884b3f59ad382fa5abf18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public ReferenceBinding superclass()", "signatureAfterChange": "     public ReferenceBinding superclass()", "diff": ["-\t\t\tif (this.kind == Wildcard.EXTENDS && !this.bound.isInterface()) {", "+\t\t\tif (this.boundKind == Wildcard.EXTENDS && !this.bound.isInterface()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f57fdf45437e6135cf7bf9932779f07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " protected void consumeFieldDeclaration()", "signatureAfterChange": " protected void consumeFieldDeclaration()", "diff": ["-\tint endPos = flushAnnotationsDefinedPriorTo(endStatementPosition);", "+\tint endPos = flushCommentsDefinedPriorTo(endStatementPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f5e5d8863e39f1beda006714cda7fef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic boolean visit(TypeLiteral node)", "signatureAfterChange": " \tpublic boolean visit(TagElement node)", "diff": ["+\t */", "+\tpublic boolean visit(TagElement node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f61b338f94926c88c329cbd0ed96805", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void testInvalidTagsClassErrorNotags()", "signatureAfterChange": " \tpublic void testInvalidTagsClassErrorNotags()", "diff": ["-\t\trunConformTest(InvalidReferencesClassJavadocComments);", "+\t\trunConformTest(CLASSES_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f75dc56d6779a19b17c377647344520", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tif (receiverErasure.findSuperTypeWithSameErasure(this.binding.declaringClass) == null) {", "+\t\t\t\tif (receiverErasure.findSuperTypeOriginatingFrom(this.binding.declaringClass) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f772f971d26514ac016b7a280d8170b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void run(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic void run(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\tfMonitor = monitor;", "+\t\t\tprogressMonitor = monitor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f838094a78a4d50ae74d1878370edd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["-\t\tpatternLocator.match(fieldDeclaration, matchSet);", "+\t\tpatternLocator.match(fieldDeclaration, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f842597325dfcd12dd8cebc95e9c7b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate Initializer convert(InitializerElementInfo initializerInfo, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate Initializer convert(InitializerElementInfo initializerInfo, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\tInitializer initializer = new Initializer(block, IConstants.AccDefault);", "+\t\tInitializer initializer = new Initializer(block, ClassFileConstants.AccDefault);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f86ab1ce461ca345736d258cfca8be1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected String evaluateRewrite(ICompilationUnit cu, NewASTRewrite rewrite) throws Exception", "signatureAfterChange": " \tprotected String evaluateRewrite(ICompilationUnit cu, ASTRewrite rewrite) throws Exception", "diff": ["-\tprotected String evaluateRewrite(ICompilationUnit cu, NewASTRewrite rewrite) throws Exception {", "+\tprotected String evaluateRewrite(ICompilationUnit cu, ASTRewrite rewrite) throws Exception {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f95938737a7d3d348ba6cad064d625e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static IType getTopLevelType(IType binaryType)", "signatureAfterChange": "  \tpublic static IType getTopLevelType(IType binaryType)", "diff": ["-\t\t\t\tIClassFile classFile = binaryType.getPackageFragment().getClassFile(typeName+\".class\"); //$NON-NLS-1$", "+\t\t\t\tIClassFile classFile = binaryType.getPackageFragment().getClassFile(typeName+SUFFIX_STRING_class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fa1f4c6445a9ed201eaf1b053aae379", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": " public boolean needsUncheckedConversion(TypeBinding targetType)", "signatureAfterChange": " public boolean needsUncheckedConversion(TypeBinding targetType)", "diff": ["-\tif (!this.isPartOfRawType()) return false;", "+\tif (!compatible.isPartOfRawType()) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fa41b6417e8a41fedb9caff123c5b96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/modifying/ASTRewritingModifyingTest.java", "commitBeforeChange": "a73c1b70646c33788c416636d54ca7b824b36c44", "commitAfterChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void setUpSuite() throws Exception", "signatureAfterChange": " \t \tpublic void setUpSuite() throws Exception", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, \"4\");", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, \"4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fa8ffe9ffade68c83f31e31489cf5b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "dcdb11f13a905cc2d9eed5c3bf38034e243f753b", "commitAfterChange": "454e4bb996219ce871816b02f759355d9d6facb0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "signatureAfterChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceType(), packageBinding);\r", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), packageBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6faff6b0e59639ae32cb6ea928391f50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "     public static AnnotationMirror createAnnotationMirror(final IResolvedAnnotation annotation,                                                           final DeclarationImpl annotated,                                                           final BaseProcessorEnv env)", "signatureAfterChange": "     public static AnnotationMirror createAnnotationMirror(final IResolvedAnnotation annotation,                                                           final EclipseDeclarationImpl annotated,                                                           final BaseProcessorEnv env)", "diff": ["-                                                          final DeclarationImpl annotated,", "+                                                          final EclipseDeclarationImpl annotated,", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fbfefc1e8a43f200eb66e6f6dc9e241", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testSuggestFieldName011()", "signatureAfterChange": " public void testSuggestFieldName011()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fd0e12ff98e5a997c63d5ada4ecd370", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleMemberAnnotation.java", "commitBeforeChange": "96a8824b1e471f1db4dd22f336aec5c7ff8c583e", "commitAfterChange": "45a4bf71a614f82f4a9506597605186918f4c34e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope)", "diff": ["-\t}", "-\tpublic void traverse(ASTVisitor visitor, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fe9939e1031eda513fab25d11822679", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "commitAfterChange": "2aa78105ee4089b7ff1a9a2c35425f71b0b156d5", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "\r protected void consumeInterfaceDeclaration()", "signatureAfterChange": "\r protected void consumeInterfaceDeclaration()", "diff": ["-\t\ttypeDecl.bits |= Statement.AddAssertionMASK;\r", "+\t\ttypeDecl.bits |= AstNode.AddAssertionMASK;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fee540bccb0a391d73c98ca506b991d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "signatureAfterChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "diff": ["-\t\tswitch (originalType.bindingType()) {", "+\t\tswitch (originalType.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ff2338811517fa68ff5376530f4d9d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void testAccessRestriction2() throws Exception", "signatureAfterChange": "  public void testAccessRestriction2() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.DISABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.DISABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffb60368d800d3fda5c1592a608f3fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public void test038() throws JavaModelException", "signatureAfterChange": "  public void test038() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.text.OtherFields;, I, foo, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.text.OtherFields;, I, foo, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ffea30e7cd832407cc353c819ebc3c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testGetCategories03() throws CoreException", "signatureAfterChange": " public void testGetCategories03() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70033716b9d9f3c828115c808882901d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \tprotected boolean generateInfos(\r \t\tOpenableElementInfo info,\r \t\tIProgressMonitor pm,\r \t\tHashtable newElements,\r \t\tIResource underlyingResource)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tprotected boolean generateInfos(\r \t\tOpenableElementInfo info,\r \t\tIProgressMonitor pm,\r \t\tMap newElements,\r \t\tIResource underlyingResource)\r \t\tthrows JavaModelException", "diff": ["-\t\tHashtable newElements,\r", "+\t\tMap newElements,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70049e7a407140ddf67e986a63a9eabd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelStatus.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic static IJavaModelStatus newMultiStatus(IJavaModelStatus[] children)", "signatureAfterChange": " \tpublic static IJavaModelStatus newMultiStatus(IJavaModelStatus[] children)", "diff": ["-\t\tjms.fChildren = children;", "+\t\tjms.children = children;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7021ae875d98e618fdc6820f682d1c6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "ac6a9f56760bba7aec9ca8548c00a789a95fdc11", "commitAfterChange": "f238d59edecc5d87c39084d60c9040567d09deaf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r public void remove(String resourceName, IResource indexedContainer)", "signatureAfterChange": "\r public void remove(String resourceName, IPath indexedContainer)", "diff": ["-public void remove(String resourceName, IResource indexedContainer){\r", "+public void remove(String resourceName, IPath indexedContainer){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7032c77fae8385a00c712be37d7c668b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic boolean visit(ImportDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(ImportDeclaration node)", "diff": ["-\t\tif (node.getAST().apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "704eff7be9d81e4e6e95ea3da36175e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void checkComment()", "signatureAfterChange": "  public void checkComment()", "diff": ["-\tif (this.reportReferenceInfo && this.javadocParser.checkJavadoc && this.javadoc != null) {", "+\tif (this.reportReferenceInfo && this.javadocParser.checkDocComment && this.javadoc != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7051e875176955c6d503cca6e5aca0bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "12f65faa0a3b984e9751d243a3eab6e6ab078ed7", "commitAfterChange": "36d2cf066100445cbe45dd4cf851204404f7d76f", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 371, "signatureBeforeChange": " public void initialize(boolean initializeNLS)", "signatureAfterChange": " public void initialize(boolean initializeNLS)", "diff": ["-\tthis.scanner.lastPosistion = -1;", "+\tthis.scanner.lastPosition = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "706818e7075c1c3a33fed47f4f6d156a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 545, "methodNumberAfterChange": 545, "signatureBeforeChange": "  public void nullAnnotationIsRedundant(FieldDeclaration sourceField)", "signatureAfterChange": "  public void nullAnnotationIsRedundant(FieldDeclaration sourceField)", "diff": ["-\tAnnotation annotation = findAnnotation(sourceField.annotations, TypeIds.T_ConfiguredAnnotationNonNull);", "+\tAnnotation annotation = findAnnotation(sourceField.annotations, TypeIds.BitNonNullAnnotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7074725be37b526c2514df0c8db9eac1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefClassErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefClassErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70788d780f5a3f1ac38a03fdf1e9adab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BatchOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tthis.runnable.run(fMonitor);", "+\t\t\tthis.runnable.run(progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "707f30c46a0a4a93b2258d4b81d12b9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public FieldBinding getUpdatedFieldBinding(FieldBinding targetField, ReferenceBinding newDeclaringClass)", "signatureAfterChange": " public FieldBinding getUpdatedFieldBinding(FieldBinding targetField, ReferenceBinding newDeclaringClass)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7082d2f075b40cf3838ac8d12fbcbe55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tprotected IFile searchLocallyForIFile(final IBinding binding)", "signatureAfterChange": " \tprotected IFile searchLocallyForIFile(final IBinding binding)", "diff": ["-\t\t\t\treturn _files[i];", "+\t\t\t\treturn _filesWithAnnotation[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7082efcd01b08e457a3eb573d4f96584", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected void consumeUnaryExpression(int op, boolean post)", "signatureAfterChange": " protected void consumeUnaryExpression(int op, boolean post)", "diff": ["-\tthis.patternLocator.match(this.expressionStack[this.expressionPtr], this.matchSet);", "+\tthis.patternLocator.match(this.expressionStack[this.expressionPtr], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70864facb020010032196707185d9b90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTRecoveryPropagator.java", "commitBeforeChange": "dd0b58c7da2efb058b899adc1ba13ccae09a4594", "commitAfterChange": "dc74bbda99d44eb7c9bf5e21853e09a003a72218", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprotected boolean visitNode(ASTNode node)", "signatureAfterChange": " \t \tprotected boolean visitNode(ASTNode node)", "diff": ["-\t\t\t\tfor (int i = 0; i <= this.data.removedTokensPtr; i++) {", "+\t\t\t\tfor (int i = 0; i <= this.data.replacedTokensPtr; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "709c89d3df94c2479f51e7af521dcacd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "  public AnnotationHolder retrieveAnnotationHolder(Binding binding, boolean forceInitialization)", "signatureAfterChange": "  public AnnotationHolder retrieveAnnotationHolder(Binding binding, boolean forceInitialization)", "diff": ["-\tSimpleLookupTable store = storedAnnotations(false);", "+\tSimpleLookupTable store = storedAnnotations(forceInitialization);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70ac45708c56729ea5d58ef182e0098e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "526f595144dc3e8be2bacbfcf836a6dd30a39f84", "commitAfterChange": "f4fac2a7e69cf336c94105a7eeaf8b6bd2b7e9f2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\tbuf.append(\"\\n-uncommented empty block: \").append(getSeverityString(UncommentedEmptyBlock)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n-uncommented empty block: \").append(getSeverityString(UndocumentedEmptyBlock)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70b0f4f97803e35ee5044a68ee3f1e9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tpublic void testPackageDeclaration()", "signatureAfterChange": " \tpublic void testPackageDeclaration()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70d29b4ce64b3354c1f4becaa126448a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\tif (typeDeclaration.kind() == IGenericType.INTERFACE) {", "+\tif (typeDeclaration.kind() == IGenericType.INTERFACE_DECL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70f34ee8c62cf29aaae72ad6d997fc21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "d6c28471243bc992d18db0170807eeb69edcbea6", "commitAfterChange": "17404692b6e0a539da1d06059648c128f8d0f7d8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void generateMethodInfoHeaderForClinit()", "signatureAfterChange": " \tpublic void generateMethodInfoHeaderForClinit()", "diff": ["-\t\t\tresizePoolContents(10);", "+\t\t\tresizeContents(10);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710539ef1b6c871237f9b9b1c0696bc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "6d93b4bb6f9802710e765aaa00d3450185e4689f", "commitAfterChange": "b4c2385c81cd66eb677f15796da3c5ed6a182754", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void consumeField(char[] fieldName)", "signatureAfterChange": "  \tpublic void consumeField(char[] fieldName)", "diff": ["-\t\tFieldBinding[] fields = ((ReferenceBinding) this.typeBinding).fields();", "+\t\tFieldBinding[] fields = ((ReferenceBinding) this.typeBinding).availableFields(); // resilience"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71093c1efaebd34c93b24a063de9f6e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elements/Java8ElementProcessor.java", "commitBeforeChange": "73197a47274e75e8fe1581fdac3a086fb2ddf471", "commitAfterChange": "340440fc2f9b9eb03b89c385f562976def2c6c0e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testSE8Specifics()", "signatureAfterChange": "  \tpublic void testSE8Specifics()", "diff": ["-\t\tverifyTypeAnnotations(typeMirror, new String[]{\"@Type(value=f1)\"});", "+\t\tverifyAnnotations(typeMirror, new String[]{\"@Type(value=f1)\"});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71575f67a86637c5d9748f89aef6e659", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/VariablesEvaluator.java", "commitBeforeChange": "da8689e6058c8df72d6de5be59efe4e5eaaa5d49", "commitAfterChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void addEvaluationResultForCompilationProblem(Hashtable resultsByIDs, IProblem problem, char[] cuSource)", "signatureAfterChange": "\r protected void addEvaluationResultForCompilationProblem(Map resultsByIDs, IProblem problem, char[] cuSource)", "diff": ["-protected void addEvaluationResultForCompilationProblem(Hashtable resultsByIDs, IProblem problem, char[] cuSource) {\r", "+protected void addEvaluationResultForCompilationProblem(Map resultsByIDs, IProblem problem, char[] cuSource) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "715c32126e4b07e8fb1dafc2ce1e97f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9bef3f15c43b07a14e76957980f62386b2bcee10", "commitAfterChange": "73f504e7d77d95d8fc2d6621b5727e1e3ab07530", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": " protected void consumeExplicitConstructorInvocation(int flag, int recFlag)", "signatureAfterChange": " protected void consumeExplicitConstructorInvocation(int flag, int recFlag)", "diff": ["-\tecc.sourceEnd = this.endPosition;", "+\tecc.sourceEnd = this.endStatementPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7168293216513ab43db377dbb74d0d1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "b9cb873d4449d2f10b10f7985e564b1f6bad691b", "commitAfterChange": "1ffd93ec138fc38a22c082921b3ee25a9e75ba37", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic void endVisit(FieldDeclaration node)", "signatureAfterChange": " \tpublic void endVisit(EnumConstantDeclaration node)", "diff": ["+\tpublic void endVisit(EnumConstantDeclaration node) {", "+\t\tendVisitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71822713189e0d680fd61cd3a0ff8677", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tprivate static void trace( String s, CompilationProcessorEnv processorEnv )", "signatureAfterChange": " \t \tprivate static void trace( String s, AbstractCompilationEnv processorEnv )", "diff": ["-\tprivate static void trace( String s, CompilationProcessorEnv processorEnv )", "+\tprivate static void trace( String s, AbstractCompilationEnv processorEnv )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71b3566f6eb8bee0119a38aaf0432730", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "      public com.sun.mirror.type.DeclaredType getDeclaredType(DeclaredType containing, TypeDeclaration decl, TypeMirror... typeArgs)", "signatureAfterChange": "      public com.sun.mirror.type.DeclaredType getDeclaredType(DeclaredType containing, TypeDeclaration decl, TypeMirror... typeArgs)", "diff": ["-\t\t\tfinal ITypeBinding resultBinding = _env.getTypeBinding(typeKey);", "+\t\t\tfinal ITypeBinding resultBinding = _env.getTypeBindingFromKey(typeKey);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71e301619b7c570ace260e69a8f8f482", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "a8ebe98c7b687ea450305732efa25afb0944336e", "commitAfterChange": "96a09d96e56ab454cb92b7163871c6f3413e482e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\trightInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\trightInfo.setReachMode(FlowInfo.UNREACHABLE_OR_DEAD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "720aa4abaeed6e266b36bcc0db93be89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "721962d02fbb0068894b60fb63a18ee3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompletionRequestorWrapper.java", "commitBeforeChange": "5cc4b8c969b380e215352115b7cc4d2697d8011e", "commitAfterChange": "fef767ead34860def5c5969bff47bc76e721609d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \t\r public CompletionRequestorWrapper(ICodeCompletionRequestor clientRequestor, NameLookup nameLookup)", "signatureAfterChange": "\r \t\r public CompletionRequestorWrapper(ICompletionRequestor clientRequestor, NameLookup nameLookup)", "diff": ["-public CompletionRequestorWrapper(ICodeCompletionRequestor clientRequestor, NameLookup nameLookup){\r", "+public CompletionRequestorWrapper(ICompletionRequestor clientRequestor, NameLookup nameLookup){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7220ae3dafada15267d5eb428a8c9959", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "  \tpublic void test056()", "signatureAfterChange": "  \tpublic void test056()", "diff": ["-\t\tpreferences.format_guardian_clause_on_one_line = true;", "+\t\tpreferences.keep_guardian_clause_on_one_line = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "723904e0c7e2d48fa123113bb0ff6069", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void endVisit(ExtraDimension node)", "signatureAfterChange": " \tpublic void endVisit(Dimension node)", "diff": ["+\tpublic void endVisit(Dimension node) {", "+\t\tendVisitNode(node);", "+\t}", "-\t}", "-\tpublic void endVisit(ExtraDimension node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7250032e9f4cfdc2d454e2437d9801d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24071af935ae982264becd6377e49aeb82ae6605", "commitAfterChange": "630841750ec7fd372d10d6a06da2b09122e947d0", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "  \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "signatureAfterChange": "  \tprivate void computeExpectedTypes(ASTNode parent, ASTNode node, Scope scope)", "diff": ["-\t\t\tExpression e = ((CastExpression)parent).type;", "+\t\t\tTypeReference e = ((CastExpression)parent).type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7258b65268ab3ba74f40267be5625886", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tprivate void findTypesAndPackages(char[] token, Scope scope, boolean proposeBaseTypes, boolean proposeVoidType, ObjectVector typesFound)", "signatureAfterChange": " \tprivate void findTypesAndPackages(char[] token, Scope scope, boolean proposeBaseTypes, boolean proposeVoidType, ObjectVector typesFound)", "diff": ["-\t\t\t\t\tif (sourceType.findSuperTypeErasingTo(TypeIds.T_JavaLangThrowable, true) == null) {", "+\t\t\t\t\tif (sourceType.findSuperTypeOriginatingFrom(TypeIds.T_JavaLangThrowable, true) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "726a7135063c497276c57822fe5acf55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TryStatement.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tTryStatement(AST ast)", "signatureAfterChange": " \tTryStatement(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.JLS4) {", "+\t\tif (ast.apiLevel >= AST.JLS4_INTERNAL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "727d9025409a6238d5009750dd67fa76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tpublic MethodBinding getConstructor(\r \t\tReferenceBinding receiverType,\r \t\tTypeBinding[] argumentTypes,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \tpublic MethodBinding getConstructor(\r \t\tReferenceBinding receiverType,\r \t\tTypeBinding[] argumentTypes,\r \t\tInvocationSite invocationSite)", "diff": ["-\t\tcompilationUnitScope().recordReferences(argumentTypes);\r", "+\t\tcompilationUnitScope().recordTypeReferences(argumentTypes);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "727fbd274a503eb0cab3c7f0a63fdd3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDeltaBuilder.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r private void added(IJavaElement element)", "signatureAfterChange": "\r private void added(IJavaElement element)", "diff": ["-\tthis.added.addElement(element);\r", "+\tthis.added.add(element);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72a0ee476cb2051661f2890e2e6a595d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "030eb4fda54a6751c1b822374d11bd8e8163881c", "commitAfterChange": "ec1201be6eb9490fec9fdaa6f4ea5d677aacc407", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void addSyntheticFieldWriteAccessMethod(SyntheticMethodBinding methodBinding)", "signatureAfterChange": " \tpublic void addSyntheticFieldWriteAccessMethod(SyntheticMethodBinding methodBinding)", "diff": ["-\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tint attributeNumber = generateMethodInfoAttributes(methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72b4281b185a58fbcfe4ea58c8dab88f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  public void test046() throws JavaModelException", "signatureAfterChange": "  public void test046() throws JavaModelException", "diff": ["-\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72b9f677d125575cfe29eab88ca539c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void buildResourceVector() throws JavaModelException", "signatureAfterChange": " \tprivate void buildResourceVector() throws JavaModelException", "diff": ["-\t\t\tIResource resource = type.getUnderlyingResource();", "+\t\t\tIResource resource = type.getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c74714e804c476ee1802c8e468bda5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findExplicitConstructors( \t\tchar[] name, \t\tReferenceBinding currentType, \t\tMethodScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.METHOD_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.METHOD_REF, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72d3bea7f53ac4442cb1394a3fa0ad55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "b9de5f3466a9b4d6687de837720c445097067b16", "commitAfterChange": "39416e9e4305b172d90b88aed3085d98ded0a86c", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r public void parseCompilationUnit(\r \tICompilationUnit unit, \r \tint start, \r \tint end, \r \tboolean needReferenceInfo)", "signatureAfterChange": "\r public void parseCompilationUnit(\r \tICompilationUnit unit, \r \tint start, \r \tint end, \r \tboolean needReferenceInfo)", "diff": ["-\t\t\trequestor.acceptLineSeparatorPositions(scanner.lineEnds());\r", "+\t\t\trequestor.acceptLineSeparatorPositions(scanner.getLineEnds());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72dae390eb80de7cf4e1ae019cfc1091", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72e1c206e0f9902c3023c5b4259caa5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testImplementBinaryInnerInterface() throws JavaModelException", "signatureAfterChange": " public void testImplementBinaryInnerInterface() throws JavaModelException", "diff": ["-\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72eaf038542dbab6f69c0963c5556bd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/JavaSourceFilePrintWriter.java", "commitBeforeChange": "0b996c62d78a14d0f0ee5313e3a85270bb3aeb0f", "commitAfterChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t     public void close()", "signatureAfterChange": " \t     public void close()", "diff": ["-\t        \t_env.addGeneratedFile(result.getFile(), result.isModified());", "+\t        \t_env.addGeneratedSourceFile(result.getFile(), result.isModified());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72ecb2d9eeda5f4ddd24ae81b061b1b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": "  public void test154() throws JavaModelException", "signatureAfterChange": "  public void test154() throws JavaModelException", "diff": ["-\t\t\"Class[TYPE_REF]{Class, java.lang, Ljava.lang.Class;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"Class[TYPE_REF]{Class, java.lang, Ljava.lang.Class;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72fa4f64d5b251692049f00b31e5b7ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/JavaBuilder.java", "commitBeforeChange": "1ba7705f71feef74dc0ca175ead9eff0c63c9469", "commitAfterChange": "4b920f313b3312879e8621d76a0a9195bffa755e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r private boolean hasOutputLocationChanged()", "signatureAfterChange": "\r \r private boolean hasOutputLocationChanged()", "diff": ["-\treturn !outputFolder.getLocation().toString().equals(lastState.outputLocationString);\r", "+\treturn !outputFolder.getLocation().toString().equalsIgnoreCase(lastState.outputLocationString);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "730019c587623a1e51dd2dfce5cb37f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testBug67732() throws JavaModelException", "signatureAfterChange": " public void testBug67732() throws JavaModelException", "diff": ["-\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7309dcfe75ef0dfcde3be263bd1fa376", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "a8ebe98c7b687ea450305732efa25afb0944336e", "commitAfterChange": "96a09d96e56ab454cb92b7163871c6f3413e482e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\trightInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\trightInfo.setReachMode(FlowInfo.UNREACHABLE_OR_DEAD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "730de350acb4059719e5773fdba530da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompoundAssignment.java", "commitBeforeChange": "c986b0f978be08ca5c6279c4e65ad1a7f4c62b60", "commitAfterChange": "be7acf5c57ef3c4a15433f3f4f0191da4eed3774", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.assignmentImplicitConversion =  (unboxedLhs ? BOXING : 0) | (lhsID << 4) | (result & 0x0000F);", "+\t\tthis.preAssignImplicitConversion =  (unboxedLhs ? BOXING : 0) | (lhsID << 4) | (result & 0x0000F);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "731de4cfbeb3cb78ce2fe1f77f1babf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8ba21086e6a431e8af4d5d6a4e096596414baea9", "commitAfterChange": "bdbfa5b74cd31bcdfeab2fc6974ba4e96597b32a", "methodNumberBeforeChange": 906, "methodNumberAfterChange": 906, "signatureBeforeChange": " public void test900()", "signatureAfterChange": " public void test900()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73448c7ab84b3f71b9705cbf3287a624", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testDeleteEnd() throws CoreException", "signatureAfterChange": " public void testDeleteEnd() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7346c6403b31d973acfe69b0ca08115d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/TypeDeclarationImpl.java", "commitBeforeChange": "12d466f946b0693eba415177a4b180457224f6e7", "commitAfterChange": "3db2518a1c0256947da814b102a6f89c20e343c1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     public Collection<TypeMirror> getActualTypeArguments()", "signatureAfterChange": "     public Collection<TypeMirror> getActualTypeArguments()", "diff": ["-            if(arg == null)", "+            if (mirror == null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73471c385c71cb91668cbb015d13ce5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tboolean visit(AnnotationArrayQualifiedTypeReference typeRef, BlockScope scope);", "signatureAfterChange": " \tboolean visit(JavadocSingleTypeReference typeRef, BlockScope scope);", "diff": ["-\tboolean visit(AnnotationArgumentExpression expression, BlockScope scope);", "-\tboolean visit(AnnotationArrayQualifiedTypeReference typeRef, BlockScope scope);", "+\tboolean visit(JavadocSingleNameReference argument, BlockScope scope);", "+\tboolean visit(JavadocSingleTypeReference typeRef, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "734db60b935abb7137c40f4850185c0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected void consumeMethodInvocationPrimary()", "signatureAfterChange": " protected void consumeMethodInvocationPrimary()", "diff": ["-\tthis.patternLocator.match((MessageSend) this.expressionStack[this.expressionPtr], this.matchSet);", "+\tthis.patternLocator.match((MessageSend) this.expressionStack[this.expressionPtr], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73514b05b3b8786f073e7aea44a7652e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 96, "signatureBeforeChange": " \tpublic void endVisit(NormalAnnotation annotation, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic void endVisit(NormalAnnotation annotation, ClassScope scope)", "diff": ["-\tpublic void endVisit(NormalAnnotation annotation, CompilationUnitScope scope) {", "+\tpublic void endVisit(NormalAnnotation annotation, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "736d9767123062c1498ed5dfe8bc476a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForField.java", "commitBeforeChange": "886d0f0c1c856616883aceae38186164d207f2a8", "commitAfterChange": "3bb52dd94a6650dc05eccd3db55f82a70954db23", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildSuite(javadocTestClass());", "+\t\treturn buildTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7376c43f504e7eea484ce04cdbcccd89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CollisionCase.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7387ac9f378a8b71e1608c9edd5106e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "da3abb814c31b6e1c2d43312de494af316e19273", "commitAfterChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Javadoc parse(int start, int length)", "signatureAfterChange": " \tpublic Javadoc parse(int start, int length)", "diff": ["-\t\t\tparseComment(start, start+length-1);", "+\t\t\tcommentParse(start, start+length-1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73965c350a9bf3e1494e471e7d5899c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateElementInCUOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void checkCanceled()", "signatureAfterChange": " \tprotected void checkCanceled()", "diff": ["-\t\tif (!fNested) {", "+\t\tif (!isNested) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73f0f3017fc757e2d702cf25033b7860", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  private void visitIfNeeded(AbstractMethodDeclaration method)", "signatureAfterChange": "  private void visitIfNeeded(AbstractMethodDeclaration method)", "diff": ["-\t\t&& (method.bits & ASTNode.HasLocalTypeMASK) != 0) {", "+\t\t&& (method.bits & ASTNode.HasLocalType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73f6eb3ad098048583c913ebef8617c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public int hashCode()", "signatureAfterChange": "  public int hashCode()", "diff": ["-\treturn getResource().hashCode();", "+\treturn resource().hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73f847f69cef19ef8c5070a5f8a6f7b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["-    return buildAllCompliancesRegressionTestSetupSuite(testClass());", "+    return buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73fa2cfe7932b67012d9c4846a3194ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "cd290957c2bd8d760411805c481ea53ade57f09d", "commitAfterChange": "c235f0d68d13055cb9237a3b54fd2255553fe602", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public int match(ASTNode node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(Annotation node, MatchingNodeSet nodeSet)", "diff": ["+public int match(Annotation node, MatchingNodeSet nodeSet) {", "+\t// each subtype should override if needed", "+\treturn IMPOSSIBLE_MATCH;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740714e841cc82d9c376d40078cc9695", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "9441d034118827fbb3e16e6cfe2024cfd076f19f", "commitAfterChange": "c840a34d9a6ef7170c744446571f30f0390d5b3c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator)", "signatureAfterChange": " \tpublic String disassemble(IClassFileReader classFileReader, String lineSeparator)", "diff": ["-\t\treturn disassemble(classFileReader, lineSeparator, IClassFileDisassembler.DEFAULT);", "+\t\treturn disassemble(classFileReader, lineSeparator, ClassFileBytesDisassembler.DEFAULT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "740c00a49a974bb3505455c8ae5c8a3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietCompletionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(DietCompletionTest.class);", "+\treturn buildAllCompliancesTestSuite(DietCompletionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7417e15254efe2d694ef10b91e1628e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LabeledStatement.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t\t\t(targetLabel = new Label()),", "+\t\t\t\t\t\t\t\t(targetLabel = new BranchLabel()),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "741e7776e36744aee2b67296559d4124", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/TestVerifier.java", "commitBeforeChange": "a48e75f04164175f754e5a12c66f6007a59c2844", "commitAfterChange": "7c117e96e6dd4f4dd7cd3b7899edae5055896b1d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private void launchAndRun(String className, String[] classpaths, String[] programArguments, String[] vmArguments)", "signatureAfterChange": " private void launchAndRun(String className, String[] classpaths, String[] programArguments, String[] vmArguments)", "diff": ["-\tthis.classpaths = null;", "+\tthis.classpathCache = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "742f9740601d4b0cd1648df7d029902a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \t \tpublic void testNoFormat1()", "signatureAfterChange": " \t \tpublic void testNoFormat1()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_FORMAT, \"false\");", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_FORMAT_JAVADOC_COMMENT, \"false\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7430221a35ec1e3e3025e29403d8e378", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": " \tpublic void test181()", "signatureAfterChange": " \tpublic void test181()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "743abd5cf07b545cf87c5d765d4b9b8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\t\tacceptChildren(visitor, this.extraDimensionInfos);", "+\t\t\t\tacceptChildren(visitor, this.extraDimensions);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74506cdbc6e0e4489459ab86aab7ba3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "4ca8e70bed14e96e6dc8b42cf80502f0648186c2", "commitAfterChange": "6b1fefbf29b5039465837c914a1040c8ff9712df", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "signatureAfterChange": " \tpublic static IClasspathContainer getClasspathContainer(final IPath containerPath, final IJavaProject project) throws JavaModelException", "diff": ["-\t\t\tfinal ClasspathContainerInitializer initializer = JavaModelManager.getClasspathContainerInitializer(containerPath.segment(0));", "+\t\t\tfinal ClasspathContainerInitializer initializer = JavaCore.getClasspathContainerInitializer(containerPath.segment(0));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "747b63cc518a628d80d9f92964117870", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic void test108()", "signatureAfterChange": " \tpublic void test108()", "diff": ["-\t\tcustomOptions.put(CompilerOptions.OPTION_ReportUnsafeTypeOperation, CompilerOptions.ERROR);\t\t\t    ", "+\t\tcustomOptions.put(CompilerOptions.OPTION_ReportUncheckedTypeOperation, CompilerOptions.ERROR);\t\t\t    "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7484e9e0772b8f598d002014ab4fb291", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void completeCodeAttributeForClinit(int codeAttributeOffset)", "signatureAfterChange": " \tpublic void completeCodeAttributeForClinit(int codeAttributeOffset)", "diff": ["-\t\t\t\tif (exceptionHandler.exceptionType == TypeBinding.NullBinding) {", "+\t\t\t\tif (exceptionHandler.exceptionType == BaseTypes.NullBinding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74994645404b51d18f43975032c1d210", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "0c486e9f722d5cf66150a2a8bb111fadf3c196f6", "commitAfterChange": "5e6cea593f4be5a13a34ce02970d8b34d029a673", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " private ISourceElementRequestor.TypeParameterInfo[] getTypeParameterInfos(TypeParameter[] typeParameters)", "signatureAfterChange": " private ISourceElementRequestor.TypeParameterInfo[] getTypeParameterInfos(TypeParameter[] typeParameters)", "diff": ["-\t\ttypeParameterInfo.typeParameterBounds = typeParameterBounds;", "+\t\ttypeParameterInfo.bounds = typeParameterBounds;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74b6cefd66cd79d00bda94431acc70dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/IIndex.java", "commitBeforeChange": "e8fbf4db76f3cb4cdf82ad5223795b2651c6d983", "commitAfterChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tIQueryResult[] query(String word) throws IOException;", "signatureAfterChange": " \tString[] query(String word) throws IOException;", "diff": ["-\tIQueryResult[] query(String word) throws IOException;", "+\tString[] query(String word) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74c12890595714b617691c5d264f91b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "60205bed5116ad3496dacec47d060779de36e647", "commitAfterChange": "af3a6832e3b1c1003f856c7a02d77d240881ed44", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public void restore() throws JavaModelException", "signatureAfterChange": "\r public void restore() throws JavaModelException", "diff": ["-\tif (this.managedCount > 0) {\r", "+\tif (this.useCount > 0) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74c631091e4af5a4ea61206f9cab623f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public boolean isDefinitelyNull(LocalVariableBinding local)", "signatureAfterChange": "  public boolean isDefinitelyNull(VariableBinding local)", "diff": ["-public boolean isDefinitelyNull(LocalVariableBinding local) {", "+public boolean isDefinitelyNull(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e4444bc21dad28bacdfa4eb67aa02c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b208e61b699229b414f76c3c9bfed66b1f92d991", "commitAfterChange": "52b692ed21634a88100b21eba7894614726adbcf", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tprivate void buildTokenLocationContext(CompletionContext context, Scope scope, ASTNode astNode, ASTNode astNodeParent)", "signatureAfterChange": "  \tprivate void buildTokenLocationContext(InternalCompletionContext context, Scope scope, ASTNode astNode, ASTNode astNodeParent)", "diff": ["-\tprivate void buildTokenLocationContext(CompletionContext context, Scope scope, ASTNode astNode, ASTNode astNodeParent) {", "+\tprivate void buildTokenLocationContext(InternalCompletionContext context, Scope scope, ASTNode astNode, ASTNode astNodeParent) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74e49bd31d40f4236c89507c959575a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  private void visitIfNeeded(FieldDeclaration field, TypeDeclaration declaringType)", "signatureAfterChange": "  private void visitIfNeeded(FieldDeclaration field, TypeDeclaration declaringType)", "diff": ["-\t\t&& (field.bits & ASTNode.HasLocalTypeMASK) != 0) {", "+\t\t&& (field.bits & ASTNode.HasLocalType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74fc4cfcf5b743e9c218bb6724c2dcf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["-public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner) {", "+public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "750c543fcd7989ad3bda9435b0820f73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocFieldCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void test020() throws JavaModelException", "signatureAfterChange": " public void test020() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.fields.tags.BasicTestFields;, I, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.fields.tags.BasicTestFields;, I, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7512d6158af90d7894841e6967240763", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclaration.java", "commitBeforeChange": "39efbf0f3eb32e59d7a65e03590993d59dc6817b", "commitAfterChange": "84bab690fce0d07b753bfc05c56b8e56d168a1a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "signatureAfterChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "diff": ["-\t\t\t\tsetModifiers(value);", "+\t\t\t\tinternalSetModifiers(value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7521d86ac3e5585057515c787d05fce3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic void test084()", "signatureAfterChange": " \tpublic void test084()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75375a03e5d89d4d43ab7ba3926fe5d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 316, "methodNumberAfterChange": 316, "signatureBeforeChange": " public void testCompletionKeywordFinal5() throws JavaModelException", "signatureAfterChange": " public void testCompletionKeywordFinal5() throws JavaModelException", "diff": ["-\t\t\t\"element:finalize    completion:protected void finalize() throws Throwable    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\t\t\t\"element:finalize    completion:protected void finalize() throws Throwable    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75381eb5a6fdeed9136a7df6d10c40c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "1c3298c6e059e091058be85e5c193be4f3e2bb5c", "commitAfterChange": "1604c4cb884aee860a1cc5ef654a628a5e36afd0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tprivate void removeFromFileMaps( IFile generatedFile, IFile parentFile )  \t    throws CoreException", "signatureAfterChange": " \t \tprivate void removeFromFileMaps( IFile generatedFile, IFile parentFile )  \t    throws JavaModelException", "diff": ["-\t    throws CoreException ", "+\t    throws JavaModelException "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "753a31e730a391da5c606fdf911f6c7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t\treturn buildTestSuiteUniqueCompliance(testClass(), COMPLIANCE_1_3);", "+\t\treturn buildComplianceRegressionSetupSuite(testClass(), COMPLIANCE_1_3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "755231fe9c3a60d7c973aabde93cff4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner)", "diff": ["-public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner) {", "+public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7553482a69037d5f0c098328eb1758e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected ITypeAnnotationWalker toTarget(int targetType)", "signatureAfterChange": " \tprotected TypeAnnotationWalker toTarget(int targetType)", "diff": ["-\tprotected ITypeAnnotationWalker toTarget(int targetType) {", "+\tprotected TypeAnnotationWalker toTarget(int targetType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "757bb812591c770e628398c9d0439f80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public String[] getSuperInterfaceTypeSignatures() throws JavaModelException", "signatureAfterChange": " public String[] getSuperInterfaceTypeSignatures() throws JavaModelException", "diff": ["-\t\treturn fgEmptyList;", "+\t\treturn EmptyStringList;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75bb8ee39e5b0d21c0702bbf61077766", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tprivate void findLocalMethodsFromFavorites( \t\t\tchar[] methodName, \t\t\tMethodBinding[] methods, \t\t\tScope scope, \t\t\tObjectVector methodsFound, \t\t\tReferenceBinding receiverType, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope)", "signatureAfterChange": " \t \tprivate void findLocalMethodsFromFavorites( \t\t\tchar[] methodName, \t\t\tMethodBinding[] methods, \t\t\tScope scope, \t\t\tObjectVector methodsFound, \t\t\tReferenceBinding receiverType, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope)", "diff": ["-\t\t\t\tReferenceBinding superTypeWithSameErasure = (ReferenceBinding)receiverType.findSuperTypeWithSameErasure(method.declaringClass);", "+\t\t\t\tReferenceBinding superTypeWithSameErasure = (ReferenceBinding)receiverType.findSuperTypeOriginatingFrom(method.declaringClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75c713dd9693094d5f397979423ec851", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/MessagerTests.java", "commitBeforeChange": "7c18a9763024ad321fbd37c2e6b52a79b1b2fb7c", "commitAfterChange": "42f7a750991845ea38763c1731c7ef38a727c093", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void testMessagerWithSystemCompiler() throws IOException", "signatureAfterChange": " \tpublic void testMessagerWithSystemCompiler() throws IOException", "diff": ["-\t\tassertTrue(\"Wrong number of reported errors\", diagnosticListener.errors >= 3);", "+\t\tassertTrue(\"Wrong number of reported errors\", diagnosticListener.count >= 3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75cdf90c4365a189d0fa0f5ef2e6e9ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4b789cce073900ae2230dbe0f789324e98194a6d", "commitAfterChange": "9b9796dc13d13c6aea20f969bc47f5a4b5fbd490", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " protected void consumeArrayCreationExpressionWithInitializer()", "signatureAfterChange": " protected void consumeArrayCreationExpressionWithInitializer()", "diff": ["-\t\tarrayAllocation.sourceEnd = this.endPosition;", "+\t\tarrayAllocation.sourceEnd = this.endStatementPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75cf2bafcebae2d89a756033d39fcd32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "d15dc8a6fc83ef9fee5daa23caeb708d6773e9ba", "commitAfterChange": "06064c92d09e456594a894c34405825ceb63b7a3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected IJavaProject createJavaProject(String projectName) throws CoreException", "signatureAfterChange": " protected IJavaProject createJavaProject(String projectName) throws CoreException", "diff": ["-\treturn this.createJavaProject(\"P\", new String[] {\"\"}, \"\");", "+\treturn this.createJavaProject(projectName, new String[] {\"\"}, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75dce5d20d3277c79998be1a19dea921", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "bac18f086dd9a87e1d5b6dea3b31ca1c92463a84", "commitAfterChange": "1b53a525120894192853120c7678edb264d25490", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tscope.resetDeclaringClassMethodStaticFlag(this.currentCompatibleType);", "+\t\t\tscope.tagAsAccessingInstanceStateOf(this.currentCompatibleType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75eb5bbd7caf504051bf30dadc87bed6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tpublic boolean visit(SingleMemberAnnotation annotation, \t\t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit(SingleMemberAnnotation annotation, ClassScope scope)", "diff": ["-\tpublic boolean visit(SingleMemberAnnotation annotation,", "-\t\t\tCompilationUnitScope scope) {", "+\tpublic boolean visit(SingleMemberAnnotation annotation, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75fe96bcafc9b733fa22d44bd3bb0f4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "commitAfterChange": "831d96bc5763622ed503192c35bfd6688abedd96", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 89, "signatureBeforeChange": " protected void consumeInsideCastExpressionWithQualifiedGenerics()", "signatureAfterChange": " protected void consumeInsideCastExpressionWithQualifiedGenerics()", "diff": ["+}", "-\tTypeReference rightSide = getTypeReference(0);", "+\tTypeReference rightSide = getUnannotatedTypeReference(0); // by design the type after . is not annotated."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76116e76acc962359101340b5fbd69af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void testMethodWithError5() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError5() throws JavaModelException, CoreException", "diff": ["-\t\tIWorkingCopy wc = (ICompilationUnit)compilationUnit.getWorkingCopy(null, null, pbReq);", "+\t\tICompilationUnit wc = (ICompilationUnit)compilationUnit.getWorkingCopy(null, null, pbReq);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "761840bad640b2c68ee90bb8fe4b6706", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "a3e63b72d2efd2058d202d3e2711391afc827fec", "commitAfterChange": "f0131d199789fbf75036ba10803faed4ef08b399", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void testSuggestFieldName028()", "signatureAfterChange": " public void testSuggestFieldName028()", "diff": ["-\t\t\tNamingConventions.VK_CONSTANT_FIELD,", "+\t\t\tNamingConventions.VK_STATIC_FINAL_FIELD,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "761b4ae62a4dc8f442f0b82252c113b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic boolean visit(PackageDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodRefParameter node)", "diff": ["+\t */", "+\tpublic boolean visit(MethodRefParameter node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7623af19cebba285bd003b928068ef92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["-\t\tparser.javadocParser.checkJavadoc = true;", "+\t\tparser.javadocParser.checkDocComment = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7683aefff690fc50f2eca430f78ece48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/ClasspathUtil.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static boolean updateProjectClasspath( IJavaProject jp, IFolder folder, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic static boolean updateProjectClasspath( IJavaProject jp, IFolder folder, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "diff": ["-\t\tboolean found = ClasspathUtil.isProjectClassPathUpToDate(jp, cp, path, progressMonitor);", "+\t\tboolean found = ClasspathUtil.doesClasspathContainEntry(jp, cp, path, progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "768841805357263dc264bae35aff4014", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void compile(SourceFile[] units)", "signatureAfterChange": " protected void compile(SourceFile[] units)", "diff": ["-\tCompilationParticipantResult[] participantResults = this.javaBuilder.participants == null ? null : notifyParticipants(units);", "+\tBuildContext[] participantResults = this.javaBuilder.participants == null ? null : notifyParticipants(units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "769499c8a3573e61889bac57b6ab8deb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(CreationReference node)", "diff": ["+\tpublic boolean visit(CreationReference node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76b2a711ed4b7332824a2239263a5325", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "commitAfterChange": "369ffd3db09511488e039ba2575df2eeea055320", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tprotected void elementOpened(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void elementOpened(Openable element, IResourceDelta delta)", "diff": ["-\t\t\t\tbasicElementAdded(element, delta);\r", "+\t\t\t\telementAdded(element, delta);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76df95971d63ffb52926713875f55736", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void endVisit(DoStatement node)", "signatureAfterChange": " \tpublic void endVisit(CreationReference node)", "diff": ["+\tpublic void endVisit(CreationReference node) {", "+\t\tendVisitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76eeda65c91b7bc473a5f65242f08fdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThrowStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0)", "+\t\tif ((bits & IsReachable) == 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "770c0e86264283657a7d475114510803", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \t\tpublic boolean match(IfStatement node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(EnumDeclaration node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(EnumDeclaration node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "770cda972d4527505b969b7e70986576", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "bb811cafdba11489b23b9c8cd6c46c237bf0db24", "commitAfterChange": "2a64f816a9e1e382be3c6f39875e5c587a7235c0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void mergeCategories(DiskIndex onDisk, int[] positions, DataOutputStream stream) throws IOException", "signatureAfterChange": " private void mergeCategories(DiskIndex onDisk, int[] positions, FileOutputStream stream) throws IOException", "diff": ["-private void mergeCategories(DiskIndex onDisk, int[] positions, DataOutputStream stream) throws IOException {", "+private void mergeCategories(DiskIndex onDisk, int[] positions, FileOutputStream stream) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77349057e10a09b5c1e8d0811cde6d4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests_1_5.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " public void test0114() throws Exception", "signatureAfterChange": " public void test0114() throws Exception", "diff": ["-\t\tdeleteFile(rootLocation.append(\"test0114\").toFile());", "+\t\tdeleteResource(rootLocation.append(\"test0114\").toFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7739d0dff1b833d428b658c1682047e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tprivate IFile createFile(IPath path, byte[] contents)", "signatureAfterChange": "  \tprivate IFile createFile(IPath path, byte[] contents)", "diff": ["-\t\t\tIFile file = fWorkspace.getRoot().getFile(path);", "+\t\t\tIFile file = workspace.getRoot().getFile(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "773a74e65f173bb21af0926721515f57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tremoveProblemsFor(currentProject); // make this the only problem for this project", "+\t\tremoveProblemsAndTasksFor(currentProject); // make this the only problem for this project"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "774471c0a0a09c61721d578769252423", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "8c3c66471763201137503760710e54e98c86a2ff", "commitAfterChange": "187b51c698ed19fcae521771e99092d2e75d91e0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " private void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": " private void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\twhile (--index > 0 && areReturnTypeErasuresEqual(first, methods[index])) {/*empty*/}", "+\twhile (--index > 0 && isReturnTypeSubstituable(first, methods[index])) {/*empty*/}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "776df94fd3ea900bcc245ca300c3f98e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " private boolean isAffectedByPackageFragment(IJavaElementDelta delta, IJavaElement element)", "signatureAfterChange": " private boolean isAffectedByPackageFragment(IJavaElementDelta delta, PackageFragment element)", "diff": ["-private boolean isAffectedByPackageFragment(IJavaElementDelta delta, IJavaElement element) {", "+private boolean isAffectedByPackageFragment(IJavaElementDelta delta, PackageFragment element) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "777d56caadef992a59f72ab54ab636e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r     public Object getReflectionValue(String memberName, Method method)\r         throws Throwable", "signatureAfterChange": "      public Object getReflectionValue(String memberName, Method method)         throws Throwable", "diff": ["-\r", "-    public Object getReflectionValue(String memberName, Method method)\r", "-        throws Throwable\r", "-    {\r", "-        if(memberName == null || memberName.length() == 0 ) return null;\r", "-        final Class targetType = method.getReturnType();\r", "-        final Expression value = getValue(memberName);\r", "-\r", "-        return getReflectionValue(value, targetType);\r", "-    }\r", "+", "+    public Object getReflectionValue(String memberName, Method method)", "+        throws Throwable", "+    {", "+        if(memberName == null || memberName.length() == 0 ) return null;", "+        final Class targetType = method.getReturnType();", "+        final Object value = getValue(memberName);", "+", "+        return getReflectionValue(value, targetType);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7785c58565b8c5bc02af00f4094dd96e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AllJavaModelTests.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tsuite.addTest(JavaSearchAnnotationTests.suite());", "+\tsuite.addTest(JavaSearchJavadocTests.suite());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7790c800e1a51a5f33d1f2f0fc42e314", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\t\tif (exceptionType.findSuperTypeErasingTo(TypeIds.T_JavaLangThrowable, true) == null) {", "+\t\t\tif (exceptionType.findSuperTypeOriginatingFrom(TypeIds.T_JavaLangThrowable, true) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77ab074403122192b76321bd0dd8ac56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tfinal List internalGetChildListProperty(ChildListPropertyDescriptor property)", "signatureAfterChange": " \tfinal List internalGetChildListProperty(ChildListPropertyDescriptor property)", "diff": ["-\t\t\treturn extraDimensionInfos();", "+\t\t\treturn extraDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77b0a880633f468735f5bdabdc1c78ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Requestor.java", "commitBeforeChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "commitAfterChange": "3a10f90d587275b68cb248facf53e1ae26bb70b8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void outputClassFiles(CompilationResult unitResult)", "signatureAfterChange": " protected void outputClassFiles(CompilationResult unitResult)", "diff": ["-\tif ((unitResult != null) && (!unitResult.hasErrors() || generateOutput)) {", "-\t\tClassFile[]classFiles = unitResult.getClassFiles();", "+\tif ((unitResult != null) && (!unitResult.hasErrors() || forceOutputGeneration)) {", "+\t\tClassFile[] classFiles = unitResult.getClassFiles();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77b8c5b8e9b1c058909a9b9cce2a9e72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefConstructorErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefConstructorErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77c761650e3270558e4b843e4f191206", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " \tpublic boolean visit(IfStatement node)", "signatureAfterChange": " \tpublic boolean visit(ExpressionMethodReference node)", "diff": ["+\t}", "+\tpublic boolean visit(ExpressionMethodReference node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77efa0f7312ecdef5201d729309c5c58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void initializeParser()", "signatureAfterChange": " \tpublic void initializeParser()", "diff": ["-\t\tthis.parser = new DOMParser(this.problemReporter, false);", "+\t\tthis.parser = new CommentRecorderParser(this.problemReporter, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77f9298f7afed74586e7a60bddab6f93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrLocator.java", "commitBeforeChange": "425b0c5314087893896fa849d0ee8761b973ef60", "commitAfterChange": "340d840f950775980b46fcf21979bc21f0e19016", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public int match(LocalDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(LambdaExpression node, MatchingNodeSet nodeSet)", "diff": ["+public int match(LambdaExpression node, MatchingNodeSet nodeSet) {", "+\tint level = IMPOSSIBLE_MATCH;", "+\tfor (int i = 0, length = this.patternLocators.length; i < length; i++) {", "+\t\tint newLevel = this.patternLocators[i].match(node, nodeSet);", "+\t\tif (newLevel > level) {", "+\t\t\tif (newLevel == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t\t\tlevel = newLevel;", "+\t\t}", "+\t}", "+\treturn level;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77fe736053d9ea6822ff5d7435445d11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateFieldOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected IJavaElement generateResultHandle()", "signatureAfterChange": " protected IJavaElement generateResultHandle()", "diff": ["-\treturn getType().getField(getDOMNodeName());", "+\treturn getType().getField(getASTNodeName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77ff5007da0996a0a0fa727092d2e843", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TestAll.java", "commitBeforeChange": "f041a95e804fa0b26cd4f55b03c8572e9e742dad", "commitAfterChange": "15e4d25d59c8a4322c2a033f58582a1471db63ef", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tsince_1_8.add(DefaultMethodsTest.class);", "+\tsince_1_8.add(InterfaceMethodsTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781abbbdfac1742e35e2760ab33e4cbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void consumeExplicitConstructorInvocation(int flag, int recFlag)", "signatureAfterChange": " protected void consumeExplicitConstructorInvocation(int flag, int recFlag)", "diff": ["-\tthis.patternLocator.match(this.astStack[this.astPtr], this.matchSet);", "+\tthis.patternLocator.match(this.astStack[this.astPtr], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781d25eb80e0d187d14b56700df19563", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "6b93bc47c94f281cdece9370a844218715786de0", "commitAfterChange": "5a74a1c87d1830c88bea417813f995a5ae4e1a46", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic final ReferenceBinding findLocalType(char[] name)", "signatureAfterChange": " \tpublic final ReferenceBinding findLocalType(char[] name)", "diff": ["-\t\tfor (int i = 0, length = scopeIndex; i < length; i++) {", "+\t\tfor (int i = 0, length = subscopeCount; i < length; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "781fba0c0d2262ff2e5b5f9f2a9c0a73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "af79dfe4ab6f88841082d7727b71d3b65b4f7778", "commitAfterChange": "e097bd9e8b95f2f5601006e28238301c69bf5baf", "methodNumberBeforeChange": 511, "methodNumberAfterChange": 511, "signatureBeforeChange": "  public void nullityMismatch(Expression expression, TypeBinding providedType, TypeBinding requiredType, int nullStatus, char[][] annotationName)", "signatureAfterChange": "  public void nullityMismatch(Expression expression, TypeBinding providedType, TypeBinding requiredType, int nullStatus, char[][] annotationName)", "diff": ["-\t\tnullityMismatchingTypeAnnotation(expression, providedType, requiredType, Statement.NULL_ANNOTATIONS_UNCHECKED);", "+\t\tnullityMismatchingTypeAnnotation(expression, providedType, requiredType, NullAnnotationMatching.NULL_ANNOTATIONS_UNCHECKED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7825652be2ade08f1f969d7ba314b2f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTSyntaxErrorPropagator.java", "commitBeforeChange": "959aae3fee7a061c3e53022fde606d266442480e", "commitAfterChange": "438cd79e8f80d544a06b9ea7f1f6d0cd36c3d8a3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic boolean visit(Initializer node)", "signatureAfterChange": " \tpublic boolean visit(AnnotationTypeDeclaration node)", "diff": ["+\tpublic boolean visit(AnnotationTypeDeclaration node) {", "+\t\treturn checkAndTagAsMalformed(node);\t\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7838d795f98b29306b7b93df24d2fa80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "b14a6c4d09a9bece1bab75937908ff44df19fa09", "commitAfterChange": "a846071c58f9098177eef02be0134294158f9c4f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t\tcheckNPE(currentScope, flowContext, flowInfo, true);", "+\t\t\t\tcheckInternalNPE(currentScope, flowContext, flowInfo, true);", "+\t// note: not covering def.assign for @NonNull: QNR cannot provably refer to a variable of the current object"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7841c51154a0c2a5525cc5230d3e1fe2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic boolean visit(NullLiteral nullLiteral, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(NullLiteral nullLiteral, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNamenull);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNamenull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7843aae929aab79b6db4edb05de0db0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r public  boolean isSourceType()", "signatureAfterChange": "\r \tpublic boolean isSourceType()", "diff": ["-public  boolean isSourceType() {\r", "-\treturn sourceType != null;\r", "-}\r", "+\t */\r", "+\tpublic boolean isSourceType() {\r", "+\t\treturn sourceTypes != null;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "784e9c3885fcb017e2989c46c4b25d94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationExpression node)", "signatureAfterChange": " \tpublic boolean visit(UnionType node)", "diff": ["+\t */", "+\tpublic boolean visit(UnionType node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "788bb276ece488a24a6f2f1491de5873", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/EnumCompletionParserTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(EnumCompletionParserTest.class);", "+\treturn buildAllCompliancesTestSuite(EnumCompletionParserTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7894e41f4f85f6143ca82f755cfdf62a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1924cfa5e4209a8742be0104afe1beaad86d0922", "commitAfterChange": "dfe897878a3115c90160783084107f96dcd301be", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals)", "signatureAfterChange": "  public Parser(ProblemReporter problemReporter, boolean optimizeStringLiterals)", "diff": ["-\tthis.options = problemReporter.globalOptions;", "+\tthis.options = problemReporter.options;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78958fd4ee7f7d7ac1d3603d645c579e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForClassLiteral(TypeBinding targetType, BlockScope blockScope)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForClassLiteral(TypeBinding targetType, BlockScope blockScope)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78a07506f1b7f1a61d2611de4baa2fd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t\t&& methodScope.fieldDeclarationIndex != methodScope.NotInFieldDecl", "+\t\t\t\t\t\t\t&& methodScope.fieldDeclarationIndex != MethodScope.NotInFieldDecl"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78a64a75300f81e197ae976e6527bc7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public boolean isDefinitelyNonNull(LocalVariableBinding local)", "signatureAfterChange": "  public boolean isDefinitelyNonNull(VariableBinding local)", "diff": ["-", "-public boolean isDefinitelyNonNull(LocalVariableBinding local) {", "+public boolean isDefinitelyNonNull(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78ee8bb5cf5352209de29c0e73a27bb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/AccessRuleSet.java", "commitBeforeChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "commitAfterChange": "d5df66f62f879926d0ab37840f8644f7133a2a54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public AccessRestriction getViolatedRestriction(char[] targetTypeFilePath)", "signatureAfterChange": " public AccessRestriction getViolatedRestriction(char[] targetTypeFilePath)", "diff": ["-\t\t\t\t\treturn new AccessRestriction(accessRule, this.messageTemplate);", "+\t\t\t\t\treturn new AccessRestriction(accessRule, this.messageTemplates);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78f246d43ef7ec0b81bae7b1bf1fc3e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EmptyStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t\t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tif ((bits & IsUsefulEmptyStatementMASK) == 0) {", "+\t\tif ((bits & IsUsefulEmptyStatement) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78fbe3c119746e62289a7df2e888f2e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.expressionType = BooleanBinding;", "+\t\tthis.resolvedType = BooleanBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78fbec9bbf2f57a310a595875086f2c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9bef3f15c43b07a14e76957980f62386b2bcee10", "commitAfterChange": "73f504e7d77d95d8fc2d6621b5727e1e3ab07530", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 268, "signatureBeforeChange": " protected void consumeStatementDo()", "signatureAfterChange": " protected void consumeStatementDo()", "diff": ["-\t\t\tthis.endPosition); ", "+\t\t\tthis.endStatementPosition); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7905e988f6e445ace9ac03415a3c76c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate boolean dumpBinaryExpression( \t\tBinaryExpression binaryExpression, \t\tint operator, \t\tBlockScope scope)", "signatureAfterChange": " \t \tprivate boolean dumpBinaryExpression( \t\tBinaryExpression binaryExpression, \t\tint operator, \t\tBlockScope scope)", "diff": ["-\t\t\tAlignment binaryExpressionAlignment = this.scribe.createAlignment(\"binaryExpressionAlignment\", this.preferences.binary_expression_alignment, Alignment.R_OUTERMOST, fragmentsSize, this.scribe.scanner.currentPosition); //$NON-NLS-1$", "+\t\t\tAlignment binaryExpressionAlignment = this.scribe.createAlignment(\"binaryExpressionAlignment\", this.preferences.alignment_for_binary_expression, Alignment.R_OUTERMOST, fragmentsSize, this.scribe.scanner.currentPosition); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "791d353bcb3a3c76d1f554559f34edd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BufferManager.java", "commitBeforeChange": "df078329218bf2c1a32b5241c9545d932f017e46", "commitAfterChange": "b807535043a8e4f63fd714ed5c671846765013dc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public synchronized static IBufferManager getDefaultBufferManager()", "signatureAfterChange": "\r public synchronized static BufferManager getDefaultBufferManager()", "diff": ["-public synchronized static IBufferManager getDefaultBufferManager() {\r", "+public synchronized static BufferManager getDefaultBufferManager() {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79215f292b369004c4ef4aa997f57737", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "96fa446ace217ec5da85623b6abab4f25644f258", "commitAfterChange": "ad31221e6afb7c1991fc463fecd91e975fcf07fe", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "\r \tpublic String[] getRequiredProjectNames() throws JavaModelException", "signatureAfterChange": "\r \tpublic String[] getRequiredProjectNames() throws JavaModelException", "diff": ["-\t\treturn this.projectPrerequisites(getExpandedClasspath(true));\r", "+\t\treturn this.projectPrerequisites(getResolvedClasspath(true));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79312961500e1d379f7c95e3620bdfd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "e1051acac48de2e59e4c3d2d0f46898b4067bf9a", "commitAfterChange": "25dbd9e17c7b6920dccf1b458296dbbe00f382de", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic void endVisit(PackageQualifiedType node)", "signatureAfterChange": " \tpublic void endVisit(NameQualifiedType node)", "diff": ["-\tpublic void endVisit(PackageQualifiedType node) {", "+\tpublic void endVisit(NameQualifiedType node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79318802e97b0270ab560ae55313a06c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "da0372488a7d84e7cb9c4ca0733fb42f30faa604", "commitAfterChange": "f4bb90e126352ba58699dc135199884ab2b69a00", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tloopingContext.complainOnFinalAssignmentsInLoop(currentScope, flowInfo);", "+\t\t\tloopingContext.complainOnDeferredChecks(currentScope, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79332523b741b1627a1b009fc1b14eb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefFieldErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefFieldErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7937e01365e65dbb5b6a00a03d769083", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompletionRequestorWrapper.java", "commitBeforeChange": "66cd4232d0ab1e96e3a07f02c56b8bad9d7784af", "commitAfterChange": "c4f302586af8fb051e0ee3dd72d43fa433091810", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r private char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "signatureAfterChange": "\r \r private char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "diff": ["-\tIType type = nameLookup.findType(new String(typeName),false,INameLookup.ACCEPT_CLASSES &NameLookup.ACCEPT_INTERFACES);\r", "+\tIType type = nameLookup.findType(new String(typeName), false, NameLookup.ACCEPT_CLASSES & NameLookup.ACCEPT_INTERFACES);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79383ca3d9cbf2e2cd99a54703c69d43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CreateTypeSourceExamplesTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testCreateClassWithImplements2()", "signatureAfterChange": " public void testCreateClassWithImplements2()", "diff": ["-\tassertEquals(", "+\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "793a35ad1708b4aa759b6146a72d714d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteElementsOperation.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void initASTParser()", "signatureAfterChange": "  \tprivate void initASTParser()", "diff": ["-\t\tthis.parser = ASTParser.newParser(AST.JLS3);", "+\t\tthis.parser = ASTParser.newParser(AST.JLS4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7942e389b12d21449874b07889521b39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": "  \tprotected void retrieveDimensionAndSetPositions(int start, int end, ExtraDimension dim)", "signatureAfterChange": "  \tprotected void retrieveDimensionAndSetPositions(int start, int end, Dimension dim)", "diff": ["-\tprotected void retrieveDimensionAndSetPositions(int start, int end, ExtraDimension dim) {", "+\tprotected void retrieveDimensionAndSetPositions(int start, int end, Dimension dim) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "794a784f82ce3fb0b2d3b2932fe37904", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void test030() throws JavaModelException", "signatureAfterChange": " public void test030() throws JavaModelException", "diff": ["-\t\t\"BasicTestTypes.BasicTestTypesMember[TYPE_REF]{BasicTestTypesMember, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes$BasicTestTypesMember;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"BasicTestTypes.BasicTestTypesMember[TYPE_REF]{BasicTestTypesMember, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes$BasicTestTypesMember;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "795527ca8548c8367b712089567c62e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "730ec55536b5ef142bbace222c0f6429c2cdd532", "commitAfterChange": "7b8b5171c862e2fd7e3a610686386f5127430137", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void acceptType( \t\tchar[] packageName, \t\tchar[] simpleTypeName, \t\tchar[][] enclosingTypeNames, \t\tint modifiers, \t\tAccessRestriction accessRestriction)", "signatureAfterChange": " \tpublic void acceptType( \t\tchar[] packageName, \t\tchar[] simpleTypeName, \t\tchar[][] enclosingTypeNames, \t\tint modifiers, \t\tAccessRestriction accessRestriction)", "diff": ["-\t\tif (isForbiddenType(packageName, simpleTypeName, enclosingTypeNames)) {", "+\t\tif (isForbidden(packageName, simpleTypeName, enclosingTypeNames)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7955fb2b3808480b864914d91e40d3a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "27a11ce8ecc325901777098d9d0eafdb0be3dc5b", "commitAfterChange": "413506076b5eca1e8bff0fe05f1ae6ca89cdfda0", "methodNumberBeforeChange": 177, "methodNumberAfterChange": 177, "signatureBeforeChange": "  \tpublic void removePerProjectInfo(JavaProject javaProject)", "signatureAfterChange": "  \tpublic void removePerProjectInfo(JavaProject javaProject)", "diff": ["-\t\t\t\tinfo.forgetExternalTimestamps();", "+\t\t\t\tinfo.forgetExternalTimestampsAndIndexes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "795870af1a1fc50e7977b33c09e229c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "207ee9452fd93bac118ef54e81b9d1aad5d49a34", "commitAfterChange": "7480a7a028b761dd989d906922ba7da2f58b3ecc", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tpublic void space()", "signatureAfterChange": "  \tpublic void space()", "diff": ["-\t\tif (NewCodeFormatter.DEBUG) {", "+\t\tif (CodeFormatterVisitor.DEBUG) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "797bab771a33e8d5454ff125bb0aa2ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9bef3f15c43b07a14e76957980f62386b2bcee10", "commitAfterChange": "73f504e7d77d95d8fc2d6621b5727e1e3ab07530", "methodNumberBeforeChange": 264, "methodNumberAfterChange": 264, "signatureBeforeChange": " protected void consumeStatementBreakWithLabel()", "signatureAfterChange": " protected void consumeStatementBreakWithLabel()", "diff": ["-\t\t\tthis.endPosition)); ", "+\t\t\tthis.endStatementPosition)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "798eed54e1e6a6ce31837c100fdcff18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tpublic void testMissingTagsErrorPrivateOverriding()", "signatureAfterChange": " \tpublic void testMissingTagsErrorPrivateOverriding()", "diff": ["-\t\trunNegativeTest(MissingTags, resultForMissingTags(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(MISSING_TAGS, resultForMissingTags(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79a30d4dd2e0338fe6b8b32d37f2c5f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/AptUIPlugin.java", "commitBeforeChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "commitAfterChange": "75a1e994888330022017b20e200adbe75bfe0c3e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static ImageDescriptor getImageDescriptor(String path)", "signatureAfterChange": " \tpublic static ImageDescriptor getImageDescriptor(String path)", "diff": ["-\t\treturn AbstractUIPlugin.imageDescriptorFromPlugin(\"org.eclipse.jdt.apt.ui\", path); //$NON-NLS-1$", "+\t\treturn AbstractUIPlugin.imageDescriptorFromPlugin(PLUGIN_ID, path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79ab23ddc7806d89f13842850b48ba3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "6b1f52d06754e9410aa789dbd826f9d303675356", "commitAfterChange": "b62ba1f827cf4ea86ca5f1a1ddb9504a62920662", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 181, "signatureBeforeChange": " public void invalidField(QualifiedNameReference nameRef, FieldBinding field, int index, TypeBinding searchedType)", "signatureAfterChange": " public void invalidField(QualifiedNameReference nameRef, FieldBinding field, int index, TypeBinding searchedType)", "diff": ["-\tif (containEmptyName(nameRef.tokens)) return;", "+\tif (isRecoveredName(nameRef.tokens)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79af193aac471005b21fd189c7726f76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ce0574029788b33026db9472a710468c9674b11f", "commitAfterChange": "3d73760dc9e0c52d27b28aa6b5ee7c1a07bc4ccf", "methodNumberBeforeChange": 215, "methodNumberAfterChange": 220, "signatureBeforeChange": "  \tprivate void saveClasspathListCache(String cacheName) throws CoreException", "signatureAfterChange": "  \tprivate void saveClasspathListCache(String cacheName) throws CoreException", "diff": ["-\t\tFile file = getClasspathListFile(cacheName);", "+\t\tFile file = getClasspathCacheFile(cacheName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79b9247294fd0823f5b055933256736d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "24c681585ef2f4b155e3d0f5cb2c551e612e2484", "commitAfterChange": "1075c02575f13a345cda8e06bd18891df8b3e61e", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration enumConstant, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(FieldDeclaration enumConstant, MethodScope scope)", "diff": ["-        this.scribe.printModifiers(enumConstant.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_MEMBER);", "+        this.scribe.printModifiers(enumConstant.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_FIELD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79ce1056634c18ead92696d1b17cac02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldDeclaration.java", "commitBeforeChange": "84bab690fce0d07b753bfc05c56b8e56d168a1a6", "commitAfterChange": "72404957161b9a06b0beff261255d6fcbe542913", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "signatureAfterChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "diff": ["-\t\t\t\tsetModifiers(value);", "+\t\t\t\tinternalSetModifiers(value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79d16748138e11f8da37ca6578ef7c12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate void buildMethods()", "signatureAfterChange": " \t \tprivate void buildMethods()", "diff": ["-\t\tboolean isEnum = referenceContext.getKind() == IGenericType.ENUM;", "+\t\tboolean isEnum = referenceContext.kind() == IGenericType.ENUM;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79d3270ac9ad24c19e4f75cad7c8eff8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/TypeAnnotationCodeStream.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void instance_of(TypeReference typeReference, TypeBinding typeBinding)", "signatureAfterChange": " \t \tpublic void instance_of(TypeReference typeReference, TypeBinding typeBinding)", "diff": ["+\t", "-\t\t\taddAnnotationContext(typeReference, this.position, AnnotationTargetTypeConstants.TYPE_INSTANCEOF);", "+\t\t\taddAnnotationContext(typeReference, this.position, AnnotationTargetTypeConstants.INSTANCEOF);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79d5a7893f47c1564666238ee1a5e93b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate void buildMemberTypes(AccessRestriction accessRestriction)", "signatureAfterChange": " \t \tprivate void buildMemberTypes(AccessRestriction accessRestriction)", "diff": ["-\t\t\t\tif (memberContext.getKind() == IGenericType.INTERFACE", "+\t\t\t\tif (memberContext.kind() == IGenericType.INTERFACE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79e65fb01aa54c2ce57445a337cc043b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic IfStatement(Expression condition, Statement thenStatement, Statement elseStatement, int sourceStart, int sourceEnd)", "signatureAfterChange": "  \tpublic IfStatement(Expression condition, Statement thenStatement, Statement elseStatement, int sourceStart, int sourceEnd)", "diff": ["-\t\tif (thenStatement instanceof EmptyStatement) thenStatement.bits |= IsUsefulEmptyStatementMASK;", "+\t\tif (thenStatement instanceof EmptyStatement) thenStatement.bits |= IsUsefulEmptyStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79f95042a78baddd5d1e6faf81bc14f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableBinding.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic boolean isEnumConstant()", "signatureAfterChange": " \tpublic boolean isEnumConstant()", "diff": ["-\t\treturn (this.binding.modifiers & IConstants.AccEnum) != 0;", "+\t\treturn (this.binding.modifiers & ClassFileConstants.AccEnum) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a07b7d654e3c410ef677933e38cbf0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefFieldErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefFieldErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a0a7eec0a9043f218c87a4671c35c80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "2763b65f87dc2fdaee2c7f0af31c2acf6f8b9c28", "commitAfterChange": "6f4f90e2451f9fcdb6af6941acb2518968bd5fec", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public JavaModelCache()", "signatureAfterChange": " \t public JavaModelCache()", "diff": ["-\tthis.pkgCache = new ElementCache(PKG_CACHE_SIZE);", "+\tthis.pkgCache = new HashMap(PKG_CACHE_SIZE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a26ac420ea635c99a2def2f63e9e44a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "ca140a64ea9dab827de00f91eb7113ac00964828", "commitAfterChange": "2918b5cc2ced910135a27ce367db19e3d162582b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tvoid storeTypeSignaturesAndArguments(IType type)", "signatureAfterChange": " \tvoid storeTypeSignaturesAndArguments(IType type)", "diff": ["-\t\t\tString signature = key.internalToSignature();", "+\t\t\tString signature = key.toSignature();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a280fe60ba6b59c8585d58d1dd33f41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "baa7fd9094564ae885658f8eb2f97816e25b4ae3", "commitAfterChange": "6f39dc304165240291300643235f5b9968c25188", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \r \r private void initializeBuilder() throws CoreException", "signatureAfterChange": " \r \r private void initializeBuilder() throws CoreException", "diff": ["-\t\t? CharOperation.splitOn(',', filterSequence.toCharArray())\r", "+\t\t? CharOperation.splitAndTrimOn(',', filterSequence.toCharArray())\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a37d2b6babe3710df96cb71a128a0dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public boolean isProtectedNonNull(LocalVariableBinding local)", "signatureAfterChange": "  public boolean isProtectedNonNull(VariableBinding local)", "diff": ["-public boolean isProtectedNonNull(LocalVariableBinding local) {", "+public boolean isProtectedNonNull(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a3b1c7b890906f4a87209fde5739c13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/InternalSearchPattern.java", "commitBeforeChange": "e8cacd88901a2db4847583e02d8ea7b228c3c39f", "commitAfterChange": "5e4ea8ac03b51c08067ab35c8af60e3999ca1301", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tvoid acceptMatch(String documentName, SearchPattern pattern, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope)", "signatureAfterChange": " \t \tvoid acceptMatch(String documentName, SearchPattern pattern, IndexQueryRequestor requestor, SearchParticipant participant, IJavaSearchScope scope)", "diff": ["-\t\t\tif (JavaSearchScope.UNINIT_RESTRICTION != access) { // scope encloses the document path", "+\t\t\tif (JavaSearchScope.NOT_INITIALIZED_RESTRICTION != access) { // scope encloses the document path"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a460371815923182344548a8a9f384e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic int getCurrentSpace()", "signatureAfterChange": " \tpublic int getCurrentSpace()", "diff": ["-\t\treturn fCurrentSpace;", "+\t\treturn currentSpace;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a49c2c504b378607e4e159d263e07bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/UnresolvedReferenceNameFinder.java", "commitBeforeChange": "83a89658caebe02428391b44cda60d0c881e9e2d", "commitAfterChange": "084792986a184eb522c2b0979d8faf076d06bee4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate ASTNode getEnclosingDeclaration()", "signatureAfterChange": " \t \tprivate ASTNode getEnclosingDeclaration()", "diff": ["-\t\t\tASTNode parent = parentsz[i];", "+\t\t\tASTNode parent = parents[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a5040eeab7cb4fc6b6677950cf67309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public void test056() throws JavaModelException", "signatureAfterChange": "  public void test056() throws JavaModelException", "diff": ["-\t\t\"foo[METHOD_REF]{foo(String), Ljavadoc.methods.tags.OtherTypes;, (Ljava.lang.String;)V, foo, (str), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"foo[METHOD_REF]{foo(String), Ljavadoc.methods.tags.OtherTypes;, (Ljava.lang.String;)V, foo, (str), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a530e81b4bb0f9dc68e5d32260a1f2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "56242f2c4a4e3fdfdcffa7d9541655946a7953f8", "commitAfterChange": "40f76b3d0fb01a4a7fa1aad4b09c356c31458c94", "methodNumberBeforeChange": 509, "methodNumberAfterChange": 509, "signatureBeforeChange": "  public void nullityMismatch(Expression expression, TypeBinding providedType, TypeBinding requiredType, int nullStatus, char[][] annotationName)", "signatureAfterChange": "  public void nullityMismatch(Expression expression, TypeBinding providedType, TypeBinding requiredType, int nullStatus, char[][] annotationName)", "diff": ["-\t\tnullityMismatchIsNull(expression, requiredType, annotationName);", "+\t\tnullityMismatchIsNull(expression, requiredType);", "-\t\tnullityMismatchingTypeAnnotation(expression, providedType, requiredType, 2/*unchecked*/);", "+\t\tnullityMismatchingTypeAnnotation(expression, providedType, requiredType, 1/*unchecked*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a715042e6174fbb03db0e61611ba3a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 171, "methodNumberAfterChange": 171, "signatureBeforeChange": " \tpublic void test0170() throws JavaModelException", "signatureAfterChange": " \tpublic void test0170() throws JavaModelException", "diff": ["-\t\tassertEquals(\"wrong type\", IPackageBinding.PACKAGE, packageBinding.getKind()); //$NON-NLS-1$", "+\t\tassertEquals(\"wrong type\", IBinding.PACKAGE, packageBinding.getKind()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a8d8f877ae0e62d60b22ffc67d3e210", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " protected void consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()", "signatureAfterChange": " protected void consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()", "diff": ["-\t\t\tanonymousTypeDeclaration.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\t\tanonymousTypeDeclaration.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a8f0e94f9bac081083c1bf7f96cdb9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   \tpublic void diagnoseParse()", "signatureAfterChange": "   \tpublic void diagnoseParse()", "diff": ["-\t\t\t\tif(this.parser.problemReporter().options.maxProblemsPerUnit < this.parser.compilationUnit.compilationResult.problemCount) {", "+\t\t\t\tif(this.parser.problemReporter().globalOptions.maxProblemsPerUnit < this.parser.compilationUnit.compilationResult.problemCount) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a9e446433287941db1cbe42a22288ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testAnonymousType5() throws JavaModelException", "signatureAfterChange": " public void testAnonymousType5() throws JavaModelException", "diff": ["-\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa601e7e787fc86085e944bf2c2903f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public static DeclarationImpl createDeclaration(IBinding binding, BaseProcessorEnv env)", "signatureAfterChange": "      public static EclipseDeclarationImpl createDeclaration(IBinding binding, BaseProcessorEnv env)", "diff": ["-    public static DeclarationImpl createDeclaration(IBinding binding, BaseProcessorEnv env)", "+    public static EclipseDeclarationImpl createDeclaration(IBinding binding, BaseProcessorEnv env)", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ab19c9e991d13119f58c6610ac02e0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "7a5fa6d4e7beb7ad1bc8fa652ccd4c2cc1dd4339", "commitAfterChange": "89483d0e271e99c67b18df19eba41f6a1cf15383", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportPredicateThrowingException,", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportBooleanMethodThrowingException,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ab99d7f9cf15af6c6deda29f755d350", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void test_nonnull_return_013()", "signatureAfterChange": " public void test_nonnull_return_013()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7abe217b6a6f7c587e1942f483127f92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testSuggestFieldName019()", "signatureAfterChange": " public void testSuggestFieldName019()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ac26aabf3334f166bd5b6b5858cb8d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "e61056764c810f3e091dc38a5b2c377e283821a9", "commitAfterChange": "2ed80629ac2deb70ae8b8f65c52c0fee7ade8d07", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012_compiler_problems_tuning()", "signatureAfterChange": " public void test012_compiler_problems_tuning()", "diff": ["-\t\texpectedProblemAttributes.put(\"ParameterLackingNonNullAnnotation\", new ProblemAttributes(JavaCore.COMPILER_PB_NULL_SPECIFICATION_VIOLATION));", "+\t\texpectedProblemAttributes.put(\"ParameterLackingNonNullAnnotation\", new ProblemAttributes(JavaCore.COMPILER_PB_NONNULL_PARAMETER_ANNOTATION_DROPPED));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ad30ca3448b2528efe09b64e3a95fef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ImportContainer.java", "commitBeforeChange": "379c3ab0afe7d308730ac607ecd986483ce1e39a", "commitAfterChange": "57f58e2a83bf12a567b63842cf84a5fc12572160", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected void toString(int tab, StringBuffer buffer)", "signatureAfterChange": "\r protected void toString(int tab, StringBuffer buffer)", "diff": ["-\tObject info = fgJavaModelManager.getInfo(this);\r", "+\tObject info = fgJavaModelManager.peekAtInfo(this);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ad726fa2c430a6786e29a0f0674bf2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/VariablesEvaluator.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected char[] getClassName()", "signatureAfterChange": " protected char[] getClassName()", "diff": ["-\treturn CharOperation.concat(EvaluationContext.GLOBAL_VARS_CLASS_NAME_PREFIX, Integer.toString(EvaluationContext.VAR_CLASS_COUNTER + 1).toCharArray());", "+\treturn CharOperation.concat(EvaluationConstants.GLOBAL_VARS_CLASS_NAME_PREFIX, Integer.toString(EvaluationContext.VAR_CLASS_COUNTER + 1).toCharArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ad823d2dc503834afb6b811f11ad961", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void testInferBinaryName()", "signatureAfterChange": " \tpublic void testInferBinaryName()", "diff": ["-\t\t\tStandardJavaFileManager fileManager = Compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "+\t\t\tStandardJavaFileManager fileManager = compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ae3adc6bf5d9031de93613c9c2e0b65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "signatureAfterChange": "   public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "diff": ["-\tchar[] typeSignature = environment.options.sourceLevel >= ClassFileConstants.JDK1_5 ? binaryType.getGenericSignature() : null;", "+\tchar[] typeSignature = environment.globalOptions.sourceLevel >= ClassFileConstants.JDK1_5 ? binaryType.getGenericSignature() : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ae861036a1757c509d3ed9d38806bc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testClasspathReordering() throws CoreException", "signatureAfterChange": " public void testClasspathReordering() throws CoreException", "diff": ["-\tIJavaProject proj = this.createJavaProject(\"P\", new String[] {\"src\"}, new String[] {getExternalJCLPath()}, \"bin\");", "+\tIJavaProject proj = this.createJavaProject(\"P\", new String[] {\"src\"}, new String[] {getExternalJCLPathString()}, \"bin\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aeb510569041947b0083088e3a73368", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "commitAfterChange": "da25131cabd17a48ed55149d76a1e2be2aabb378", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void createTypeHierarchyBasedOnRegion(ArrayList allTypesInRegion, IProgressMonitor monitor)", "signatureAfterChange": " private void createTypeHierarchyBasedOnRegion(ArrayList allTypesInRegion, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\tnameLookup.setUnitsToLookInside(new IWorkingCopy[] {unitToLookInside}); // NB: this uses a PerThreadObject, so it is thread safe", "+\t\t\t\t\tnameLookup.setUnitsToLookInside(new ICompilationUnit[] {unitToLookInside}); // NB: this uses a PerThreadObject, so it is thread safe"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aee387008e10eeb6e285c2fe137e6c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "6f6bc9d0562d23a055ee9e986cf21155795a29ff", "commitAfterChange": "7f289b483e1414e7141e9f94307fbe445e3b1b34", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void printNotice(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printNotice(ASTNode node, String msg)", "diff": ["-\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, Severity.INFO, msg, line, null );", "+\t\t_env.addMessage(_env.getFile(), start, node.getLength() + start, Severity.INFO, msg, line, null );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7af34a5e8d4ea51e37637521ab107018", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "1f82fbfe681e32018e530b8aaba28b5eaf34206f", "commitAfterChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void printError(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printError(ASTNode node, String msg)", "diff": ["-\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Error, msg, line, null );", "+\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.ERROR, msg, line, null );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7af8bb298720698d1ad96349e452a4f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " \tpublic void testMissingCommentsErrorProtectedOverriding()", "signatureAfterChange": " \tpublic void testMissingCommentsErrorProtectedOverriding()", "diff": ["-\t\trunNegativeTest(MissingComments, resultForMissingComments(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(MISSING_COMMENTS, resultForMissingComments(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b012b0577a5504b187b64394b02fe90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ElementCache.java", "commitBeforeChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "commitAfterChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected boolean close(LRUCacheEntry entry)", "signatureAfterChange": " protected boolean close(LRUCacheEntry entry)", "diff": ["-\tOpenable element = (Openable) entry._fKey;", "+\tOpenable element = (Openable) entry.key;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b0e51f6c51d451765c978ddfb2f156e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTypeDeclTest.java", "commitBeforeChange": "5066a165665c172193991ef548a06f9b6acd680e", "commitAfterChange": "c808b96946babe7971ac678c8d580ce253c8257a", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void testBug419057a() throws Exception", "signatureAfterChange": " \tpublic void testBug419057a() throws Exception", "diff": ["-\t\tCompilationUnit astRoot= createAST(AST.JLS4, cu, true, false);", "+\t\tCompilationUnit astRoot= createAST(AST.JLS8, cu, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b14d04212305d1ff6a97d3903f1b570", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "abc14013a8fd8f8040bc625a426663caf110b8a2", "commitAfterChange": "f04bcab2628ef5d21c040097a5d26e48d3262568", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tprivate int computeRelevanceForExpectingType(TypeBinding proposalType)", "signatureAfterChange": " \tprivate int computeRelevanceForExpectingType(TypeBinding proposalType)", "diff": ["-\t\t\tfor (int i = 0; i <= expectedTypesCount; i++) {", "+\t\t\tfor (int i = 0; i <= expectedTypesPtr; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b16e410f9ef01832429cab51c49e452", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public synchronized void aboutToUpdateIndex(IPath containerPath, Integer newIndexState)", "signatureAfterChange": "  public synchronized void aboutToUpdateIndex(IPath containerPath, Integer newIndexState)", "diff": ["-\tString indexLocation = computeIndexLocation(containerPath);", "+\tIPath indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b24f469aa44ce89b73e0286e117496d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " \tpublic boolean visit(EnhancedForStatement node)", "signatureAfterChange": " \tpublic boolean visit(EnhancedForStatement node)", "diff": ["-\t\t\t\tstartOffset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameRPAREN, pos);", "+\t\t\t\tstartOffset= getScanner().getTokenEndOffset(TerminalTokens.TokenNameRPAREN, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b26be6800894cdccd8d1164e0d34aef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/IncrementalImageBuilder.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public void applySourceDelta(Hashtable deltas)", "signatureAfterChange": "\r public void applySourceDelta(Hashtable deltas)", "diff": ["-\tfCompilerOptions = JavaModelManager.getOptions();\r", "+\tfCompilerOptions = JavaCore.getOptions();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b2cd00e4c7b2908168434b66bc2d5d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "e1051acac48de2e59e4c3d2d0f46898b4067bf9a", "commitAfterChange": "25dbd9e17c7b6920dccf1b458296dbbe00f382de", "methodNumberBeforeChange": 799, "methodNumberAfterChange": 799, "signatureBeforeChange": "  \tpublic void testNodeTypeConstants() throws Exception", "signatureAfterChange": "  \tpublic void testNodeTypeConstants() throws Exception", "diff": ["-\t\t\tASTNode.PACKAGE_QUALIFIED_TYPE,", "+\t\t\tASTNode.NAME_QUALIFIED_TYPE,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b3ebdcb3988e10438b255e65a3ebb00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocFieldCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void test022() throws JavaModelException", "signatureAfterChange": "  public void test022() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.fields.tags.BasicTestFields;, I, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.fields.tags.BasicTestFields;, I, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b6ba1c4402e2210e9e98022e9321f25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  public void test084() throws JavaModelException", "signatureAfterChange": "  public void test084() throws JavaModelException", "diff": ["-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE_IT+\"}\"", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+R_DRINRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b6d5056802095bebb4b3180b409445a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 88, "signatureBeforeChange": " \tpublic void endVisit(MarkerAnnotation annotation, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic void endVisit(MarkerAnnotation annotation, ClassScope scope)", "diff": ["-\tpublic void endVisit(MarkerAnnotation annotation, CompilationUnitScope scope) {", "+\tpublic void endVisit(MarkerAnnotation annotation, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b7f69f875c4403d21cd14d47845aa03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15JLS8Test.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": "     public void test0143() throws CoreException", "signatureAfterChange": "     public void test0143() throws CoreException", "diff": ["-    \ttype = arrayType.getComponentType();", "+    \ttype = arrayType.getElementType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b81c85edc0c76ecf352fa59eef81fb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \t \tpublic void beginFileProcessing(ICompilationParticipantResult result)", "signatureAfterChange": " \t \tpublic void beginFileProcessing(BuildContext result)", "diff": ["-\tpublic void beginFileProcessing(ICompilationParticipantResult result){\t\t", "+\tpublic void beginFileProcessing(BuildContext result){\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bad17444b68dbc01390eb9c47b0c4a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "058f4956c302999db0dab277cf91883f2d016e2b", "commitAfterChange": "27d9d524a3b624cfc1260a727d1dfb92d53ae22a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCast(BlockScope scope, int operator, int operatorSignature, Expression expression, int expressionTypeId)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCast(BlockScope scope, int operator, int operatorSignature, Expression expression, int expressionTypeId)", "diff": ["-\t\tif ((expression.bits & UnnecessaryCastMask) == 0 && expression.resolvedType.isBaseType()) {", "+\t\tif ((expression.bits & UnnecessaryCastMASK) == 0 && expression.resolvedType.isBaseType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bc49adb34e782b06474628a531994e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "99721e4b150d4129ca339c356f1ffc5191978b56", "commitAfterChange": "258934f1c54d2b465231481daf72639d0983c8ef", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic void inferFromExpectedType(TypeBinding expectedType, Scope scope)", "signatureAfterChange": " \t \tpublic void inferFromExpectedType(TypeBinding expectedType, Scope scope)", "diff": ["-\t\t\tTypeBinding mostSpecificSubstitute = scope.mostSpecificCommonType(variableSubstitutes);", "+\t\t\tTypeBinding mostSpecificSubstitute = scope.lowerUpperBound(variableSubstitutes);", "+\t\t\t//TypeBinding mostSpecificSubstitute = scope.mostSpecificCommonType(variableSubstitutes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bd75e3845a3632080f3cc71734cf3df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void generateCode( \t\tClassScope classScope, \t\tClassFile classFile, \t\tint clinitOffset)", "signatureAfterChange": " \tprivate void generateCode( \t\tClassScope classScope, \t\tClassFile classFile, \t\tint clinitOffset)", "diff": ["-\t\tif (declaringType.kind() == IGenericType.ENUM) {", "+\t\tif (declaringType.kind() == IGenericType.ENUM_DECL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7be01daf99227c83fc9bf92f6ca581ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "a44da875619e9b43e770f0d2c99bb868bc453e29", "commitAfterChange": "5653db0871a030c7f9e856b0346b3dd631ca6156", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r \tprivate void generateCode(ClassFile classFile)", "signatureAfterChange": "\r \r \tprivate void generateCode(ClassFile classFile)", "diff": ["-\t\t\tcodeStream.recordPositionsFrom(0, this.sourceStart);\r", "+\t\t\tcodeStream.recordPositionsFrom(0, this.bodyEnd);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bfdb7c9e7826e00b245205234970e2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "e6009de9b4d4a2d7c4c60a3948647861fa518186", "commitAfterChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprotected TypeBinding getTypeBinding(Scope scope)", "signatureAfterChange": "  \tprotected TypeBinding getTypeBinding(Scope scope)", "diff": ["-\t\t\tif (((ClassScope) scope).detectCycle(this.resolvedType, this, null))", "+\t\t\tif (((ClassScope) scope).detectHierarchyCycle(this.resolvedType, this, null))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c031e8b5774ef7dc3896abe0290f509", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " private ReferenceBinding typeToRecord(TypeBinding type)", "signatureAfterChange": " private ReferenceBinding typeToRecord(TypeBinding type)", "diff": ["-\tswitch (type.bindingType()) {", "+\tswitch (type.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c2b77716843fd961169ee2ece88b3dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/SourcePositionImpl.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     public IResource getResource()", "signatureAfterChange": "     public IFile getResource()", "diff": ["-    public IResource getResource(){", "+    public IFile getResource(){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c37205dac66eb83ddbb587d6ba213cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "signatureAfterChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "diff": ["-\t\t\t\tTypeBinding gbeta = inferenceContext.environment.createParameterizedType(", "+\t\t\t\tParameterizedTypeBinding gbeta = inferenceContext.environment.createParameterizedType("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c38f0b4b5d4a6563489bed6395fae0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c468a84736c8217274dd2c9cea7da1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public boolean isProtectedNull(VariableBinding local)", "signatureAfterChange": "  public boolean isProtectedNull(LocalVariableBinding local)", "diff": ["-public boolean isProtectedNull(VariableBinding local) {", "+public boolean isProtectedNull(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c47c5e975a1a19ef6eab68e18e15734", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ClasspathDirectory.java", "commitBeforeChange": "6fd2d27e76da885e08b25f5a065ea5e0c622d413", "commitAfterChange": "8b76fbadc737bd965aca978e0e3517802f9a8476", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r public boolean equals(Object o)", "signatureAfterChange": "\r \r public boolean equals(Object o)", "diff": ["-\treturn binaryPath.equalsIgnoreCase(((ClasspathDirectory) o).binaryPath);\r", "-}\r", "+\treturn binaryPath.equals(((ClasspathDirectory) o).binaryPath);\r", "+} \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c56c1b851bbd172d055f41defc9d9e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "526f595144dc3e8be2bacbfcf836a6dd30a39f84", "commitAfterChange": "f4fac2a7e69cf336c94105a7eeaf8b6bd2b7e9f2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "\t  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\tscope.problemReporter().uncommentedEmptyBlock(finallyBlock);", "+\t\t\t\t\tscope.problemReporter().undocumentedEmptyBlock(finallyBlock);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c571c48fee0d0b785cceec8ae195cb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tpublic boolean match(ArrayAccess node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(AnnotationTypeMemberDeclaration node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(AnnotationTypeMemberDeclaration node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c5ae72a994b73bbfe9c471c9dc342fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding checkFieldAccess(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding checkFieldAccess(BlockScope scope)", "diff": ["-\t\t\t&& methodScope.fieldDeclarationIndex != methodScope.NotInFieldDecl", "+\t\t\t&& methodScope.fieldDeclarationIndex != MethodScope.NotInFieldDecl"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c68cc80e43fc42160e8e324dcde7da1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0){", "+\tif ((typeDeclaration.bits & ASTNode.IsAnonymousType) != 0){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c779cac7744dbf9cbb24ef1cf3d6630", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistOptions.java", "commitBeforeChange": "b428d30d2bac99132857bf6839162f87945a9c64", "commitAfterChange": "2292d96d982a21ac668b3edcff1d774c928dd59d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void set(Map optionsMap)", "signatureAfterChange": " \tpublic void set(Map optionsMap)", "diff": ["-\t\tif ((optionValue = optionsMap.get(OPTION_PerformForbiddenReferenceCheck)) != null) {", "+\t\tif ((optionValue = optionsMap.get(OPTION_PerformDiscouragedReferenceCheck)) != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c7c0da611e64afe2854e4241e20abed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tvoid initialize(ReferenceBinding someType, TypeBinding[] someArguments)", "signatureAfterChange": "  \tvoid initialize(ReferenceBinding someType, TypeBinding[] someArguments)", "diff": ["-\t\t\t\tif (!isWildcardArgument || ((WildcardBinding) someArgument).kind != Wildcard.UNBOUND) {", "+\t\t\t\tif (!isWildcardArgument || ((WildcardBinding) someArgument).boundKind != Wildcard.UNBOUND) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c81c65ca28f6297642e76aa5a4c2ed9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "ea916b0462fec6996e619f84c30f348e2877686a", "commitAfterChange": "558c64a899c0debc518d6eb92e85f37b05902eba", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic ReferenceExpression(Expression primary, TypeReference [] typeArguments, SingleNameReference method)", "signatureAfterChange": "  \tpublic ReferenceExpression(Expression primary, TypeReference [] typeArguments, SingleNameReference method)", "diff": ["-\t\tthis.typeArguments = typeArguments;", "+\t\tthis.typeParameters = typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c907927687d83ffc5ff138d95d0682d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "758f55a5a64497d7398f91effe575e974d834411", "commitAfterChange": "a920298c522cfd65cad97a6c929cd34516c3baed", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void append(char[] text)", "signatureAfterChange": "\r public void append(char[] text)", "diff": ["-\t\tadjustGap(length, text.length);\r", "+\t\tmoveAndResizeGap(length, text.length);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cad29f759704560ec08b0608a47557c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "ec455405a83bfb36b65a1594dcc37928d4b0bc3b", "commitAfterChange": "79b8d8f9507454c772f9092ea04ba032447d4b59", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void testNewWorkingCopy02() throws CoreException", "signatureAfterChange": " \tpublic void testNewWorkingCopy02() throws CoreException", "diff": ["-\t\tthis.workingCopy =  newWorkingCopy(", "+\t\tthis.workingCopy =  newExternalWorkingCopy("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7cb0b5a2e9558c40e7c7fec89758b076", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "beded9a15cf855138f3e1c6f627196409b012ec5", "commitAfterChange": "d447d64200493d4e1d6a7b99f9c357ac6aadcf48", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t&& (currentScope.enclosingSourceType().isLocalType() || currentScope.isLambdaScope())) {", "+\t\t&& (currentScope.enclosingSourceType().isLocalType() || currentScope.isLambdaSubscope())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ceba1799d357a1ac614e05c57ce9298", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "d6f02f07429dae5d9415421b0a1fb951b3ab04e0", "commitAfterChange": "bd118e51270d54e48ef1b8d76bf62d7f013d8051", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public CompilationUnit getCompilationUnitForBinding(final IBinding binding)", "signatureAfterChange": "     public CompilationUnit getCompilationUnitForBinding(final IBinding binding)", "diff": ["-                final ASTParser parser =  ASTParser.newParser(AST.JLS4);", "+                final ASTParser parser =  ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d081aea223c946d7c2d9563c90ac78a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyPackageFragmentRootOperation.java", "commitBeforeChange": "e9c7ae15a8e3444e0a4d915eee6d3b7013c1ef90", "commitAfterChange": "7ccdb219c998345b81552f167498fc76ce4f9f3c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tupdateDestProjectClasspath(rootEntry, workspaceRoot);", "+\t\t\taddEntryToClasspath(rootEntry, workspaceRoot);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d16f3579e0479e8a3a80ebdb735805f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r \tpublic String[] getRequiredProjectNames() throws JavaModelException", "signatureAfterChange": "\r \tpublic String[] getRequiredProjectNames() throws JavaModelException", "diff": ["-\t\treturn this.projectPrerequisites(getResolvedClasspath(true));\r", "+\t\treturn this.projectPrerequisites(getExpandedClasspath(true));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d2a1a1f44d1d5285cefa8631f9250b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  protected void consumeEnterVariable()", "signatureAfterChange": "  protected void consumeEnterVariable()", "diff": ["-\tint grain = IJavaSearchConstants.FIELD_TYPE_DECLARATION_TYPE_REFERENCE | IJavaSearchConstants.LOCAL_VARIABLE_DECLARATION_TYPE_REFERENCE;", "+\tint grain = IJavaSearchConstants.FIELD_DECLARATION_TYPE_REFERENCE | IJavaSearchConstants.LOCAL_VARIABLE_DECLARATION_TYPE_REFERENCE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d321813b6084cabbb71fd95218158d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public boolean isReifiable()", "signatureAfterChange": " public boolean isReifiable()", "diff": ["-\t\tswitch(current.bindingType()) {", "+\t\tswitch(current.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d367f3b1903a1bce8043819f8bb850a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "1f82fbfe681e32018e530b8aaba28b5eaf34206f", "commitAfterChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void printError(String msg)", "signatureAfterChange": "      public void printError(String msg)", "diff": ["-        print(APTProblem.Severity.Error, msg, null);", "+        print(APTProblem.Severity.ERROR, msg, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d36ac1d43e102a4063756373a284466", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public Label breakLabel()", "signatureAfterChange": "  public BranchLabel breakLabel()", "diff": ["-public Label breakLabel() {", "+public BranchLabel breakLabel() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d3bbf7017964122310b707e22bcc193", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic IPackageFragment findPackageFragment(IPath path) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IPackageFragment findPackageFragment(IPath path) \t\tthrows JavaModelException", "diff": ["-\t\treturn findPackageFragment0(this.canonicalizedPath(path));", "+\t\treturn findPackageFragment0(JavaProject.canonicalizedPath(path));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d4cdb8c4d3991a66914b1d1448ca71b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 470, "methodNumberAfterChange": 468, "signatureBeforeChange": " \tpublic void test434()", "signatureAfterChange": " \tpublic void test434()", "diff": ["-\t\tpreferences.tab_size = 3;", "+\t\tpreferences.indentation_size = 3;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d51b3d2524f3da861c77e28384f9a29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected TypeAnnotationWalker toNextDetail(int detailKind)", "signatureAfterChange": " \tprotected ITypeAnnotationWalker toNextDetail(int detailKind)", "diff": ["-\tprotected TypeAnnotationWalker toNextDetail(int detailKind) {", "+\tprotected ITypeAnnotationWalker toNextDetail(int detailKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d53a19c361c9c8d3a26b95bb369daa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "bac18f086dd9a87e1d5b6dea3b31ca1c92463a84", "commitAfterChange": "1b53a525120894192853120c7678edb264d25490", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tcurrentScope.resetDeclaringClassMethodStaticFlag(this.binding.declaringClass.enclosingType());", "+\t\tcurrentScope.tagAsAccessingInstanceStateOf(this.binding.declaringClass.enclosingType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d5f209179b9c15272fd28c5394c81d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "bf20c4733b5ba628131f77425b6d1ad646dfd787", "commitAfterChange": "4fece3d5714f1973bb889af985f57d3ae8f56e20", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " private void writeCategories(FileOutputStream stream) throws IOException", "signatureAfterChange": " private void writeCategories(FileOutputStream stream) throws IOException", "diff": ["-\t\t\twriteCategoryTable(categoryNames[i], (CategoryTable) tables[i], stream);", "+\t\t\twriteCategoryTable(categoryNames[i], (HashtableOfObject) tables[i], stream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d614185743597fcbe72ad27da5bb19c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void tearDown() throws Exception", "signatureAfterChange": " protected void tearDown() throws Exception", "diff": ["-\tif (this.copy != null) this.copy.destroy();", "+\tif (this.copy != null) this.copy.discardWorkingCopy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d6319669c677a1c502aeac56750f572", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic CopyResourceElementsOperation(IJavaElement[] resourcesToCopy, IJavaElement[] destContainers, boolean force)", "signatureAfterChange": " \tpublic CopyResourceElementsOperation(IJavaElement[] resourcesToCopy, IJavaElement[] destContainers, boolean force)", "diff": ["-\t\tinitializeDOMFactory();", "+\t\tinitializeASTParser();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d718e35e79a34a6ce512eaf4a351186", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICodeCompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICodeCompletionRequestor requestor) throws JavaModelException", "diff": ["-\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor), JavaModelManager.getOptions());\r", "+\tCompletionEngine engine = new CompletionEngine(environment, new CompletionRequestorWrapper(requestor), JavaCore.getOptions());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d78ad2986af8f51e493b4b39295c3b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrame.java", "commitBeforeChange": "9b1fcd23ff081eff51095c88c564eedd01574dc9", "commitAfterChange": "e8930029b77e0476bcc546eb53a911b883170f0a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void printFrame(StringBuffer buffer, StackMapFrame frame)", "signatureAfterChange": " private void printFrame(StringBuffer buffer, StackMapFrame frame)", "diff": ["-\t\tnew String[] {", "+\t\tnew Object[] {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d967984ffa957e7374504de20bfe1c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 317, "methodNumberAfterChange": 317, "signatureBeforeChange": "  \tpublic void test297()", "signatureAfterChange": "  \tpublic void test297()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d98f71d5560546412d6f8c766e87d26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0)\t{", "+\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0)\t{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d9af41c4d9dbb27a8443ffdb13b21b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": "     public boolean visit(     \tConditionalExpression conditionalExpression,     \tBlockScope scope)", "signatureAfterChange": "     public boolean visit(     \tConditionalExpression conditionalExpression,     \tBlockScope scope)", "diff": ["-    \t\t\tthis.preferences.conditional_expression_alignment,", "+    \t\t\tthis.preferences.alignment_for_conditional_expression,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da3a8e8fce4f04d68c0f55edaa57c27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public void testCategories2() throws JavaModelException", "signatureAfterChange": " public void testCategories2() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dbaf6824a538049c5c470589b046b7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "1f82fbfe681e32018e530b8aaba28b5eaf34206f", "commitAfterChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void printNotice(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printNotice(ASTNode node, String msg)", "diff": ["-\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Info, msg, line, null );", "+\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.INFO, msg, line, null );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dc5b8f39590bc5bce813018f96ed17e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tpublic void testMissingTagsDefaults()", "signatureAfterChange": " \tpublic void testMissingTagsDefaults()", "diff": ["-\t\trunConformTest(MissingTags);", "+\t\trunConformTest(MISSING_TAGS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dddd77d71c5c4e45215639ba3484b13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "d6f02f07429dae5d9415421b0a1fb951b3ab04e0", "commitAfterChange": "bd118e51270d54e48ef1b8d76bf62d7f013d8051", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic static CompilationUnit createAST( \t\t\tIJavaProject javaProject,  \t\t\tfinal ICompilationUnit compilationUnit)", "signatureAfterChange": " \tpublic static CompilationUnit createAST( \t\t\tIJavaProject javaProject,  \t\t\tfinal ICompilationUnit compilationUnit)", "diff": ["-\t\tASTParser p = ASTParser.newParser( AST.JLS4 );", "+\t\tASTParser p = ASTParser.newParser( AST.JLS8 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7de1b80486335c28b6730f97b05af964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "ea035aff9493ec8381c8d6bd9548845ad9f81e22", "commitAfterChange": "3c8b95412c50bb73a8372fbf9db9df68231cc311", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": "  private void scanTypeForContainerAnnotation(IBinaryType binaryType, char[][][] missingTypeNames)", "signatureAfterChange": "  private void scanTypeForContainerAnnotation(IBinaryType binaryType, char[][][] missingTypeNames)", "diff": ["-\t\t\t\t\t\tthis.containingAnnotation = (ReferenceBinding) this.environment.getTypeFromSignature(((ClassSignature)value).getTypeName(), 0, -1, false, null, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\t\t\t\tthis.containerAnnotationType = (ReferenceBinding) this.environment.getTypeFromSignature(((ClassSignature)value).getTypeName(), 0, -1, false, null, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7de1f46c1a742156fdb4ca869cd71a2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " public ReadWriteMonitor getMonitorFor(IIndex index)", "signatureAfterChange": " public ReadWriteMonitor getMonitorFor(Index index)", "diff": ["-public ReadWriteMonitor getMonitorFor(IIndex index){", "+public ReadWriteMonitor getMonitorFor(Index index){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7df91d9febbaddb5f25674172bc9e3e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " public ICompilationUnit getWorkingCopy(WorkingCopyOwner workingCopyOwner, IProblemRequestor problemRequestor, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ICompilationUnit getWorkingCopy(WorkingCopyOwner workingCopyOwner, IProblemRequestor problemRequestor, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tworkingCopy = new CompilationUnit((IPackageFragment)getParent(), getElementName(), workingCopyOwner);", "+\tworkingCopy = new CompilationUnit((PackageFragment)getParent(), getElementName(), workingCopyOwner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e04f6958f3fff3adfb0df3a5eeb0df2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testDelete2Fields() throws CoreException", "signatureAfterChange": " public void testDelete2Fields() throws CoreException", "diff": ["-\t\tassertDeltas(", "+\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e077367d9c4a0b96966223e94fe7d5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0390be1950bcdfa43b629ba946ffaaaee0d5d33f", "commitAfterChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "diff": ["-\t\t\t\tthis.scribe.printNewLines(numberOfBlankLinesAtBeginningOfMethodBody);", "+\t\t\t\tthis.scribe.printEmptyLines(numberOfBlankLinesAtBeginningOfMethodBody);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e12da182964fd60744ef41c3b03204f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testBug118397d() throws JavaModelException", "signatureAfterChange": " public void testBug118397d() throws JavaModelException", "diff": ["-\t\t\"BasicTestBugs.Inner.Level2[TYPE_REF]{Level2, bugs.b118397, Lbugs.b118397.BasicTestBugs$Inner$Level2;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"BasicTestBugs.Inner.Level2[TYPE_REF]{Level2, bugs.b118397, Lbugs.b118397.BasicTestBugs$Inner$Level2;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e1732e69966a49e0462af09da7cd5a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e36f67a08e1d329ab9a36807fa46c70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/util/JdtCorePerformanceMeterPlugin.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic JdtCorePerformanceMeterPlugin()", "signatureAfterChange": " \t \tpublic JdtCorePerformanceMeterPlugin()", "diff": ["-\t\tfgDefault= this;", "+\t\tDEFAULT= this;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e3f74ac755a57d5a6742e032cb33976", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic TypeDeclarationStatement  \t\t\tnewTypeDeclarationStatement(TypeDeclaration decl)", "signatureAfterChange": " \tpublic TypeDeclarationStatement  \t\t\tnewTypeDeclarationStatement(TypeDeclaration decl)", "diff": ["-\t\tresult.setTypeDeclaration(decl);", "+\t\tresult.setDeclaration(decl);", "+\t\treturn result;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e5b8400364bb7a832e03f5e620bdeb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void testSuggestSetterName002()", "signatureAfterChange": " public void testSuggestSetterName002()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e6134f6b271a10f500f8a13680933b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AptReconcileTests.java", "commitBeforeChange": "ec541dd033ad27d9ab55acb5cb4211fa3af9e906", "commitAfterChange": "5bc936c43945cd38fd8a7444d6690225eec1af93", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void tearDown() throws Exception", "signatureAfterChange": " \tpublic void tearDown() throws Exception", "diff": ["-\t\tdeleteProject( TEST_PROJECT );", "+\t\tdeleteProject( _testProject );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e8848f75306cb8a9c326876750a2c6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfType.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public ReferenceBinding put(char[] key, ReferenceBinding value)", "signatureAfterChange": " public ReferenceBinding put(char[] key, ReferenceBinding value)", "diff": ["-\t\tif (currentKey.length == keyLength && CharOperation.prefixEquals(currentKey, key))", "+\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e96ef61ac79e9bfd7b2818e0aebca17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "039d5ebb17d9b09ae245ba628ad4d0e9cf747b63", "commitAfterChange": "1745fe20399b6a7284c025a8e1750403718486c9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "\t  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\tif ((finallyBlock.bits & UncommentedEmptyBlockMASK) != 0) {", "+\t\t\t\tif ((finallyBlock.bits & UndocumentedEmptyBlockMASK) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ea5669e6d21c830ffe3ca70dd236043", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "commitAfterChange": "2aa78105ee4089b7ff1a9a2c35425f71b0b156d5", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "\r protected void consumeClassDeclaration()", "signatureAfterChange": "\r protected void consumeClassDeclaration()", "diff": ["-\t\ttypeDecl.bits |= Statement.AddAssertionMASK;\r", "+\t\ttypeDecl.bits |= AstNode.AddAssertionMASK;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ebc267f66e444b6734dc5e4991d0bf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "6febc04f00603747029f2ea9616afd5b682c9f03", "commitAfterChange": "ba65adb7228709772812cc43f8ccb14a824acf89", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public RecoveredElement add(AbstractMethodDeclaration methodDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(AbstractMethodDeclaration methodDeclaration, int bracketBalanceValue)", "diff": ["-\tthis.insiseEnumConstantPart = false;", "+\tthis.insideEnumConstantPart = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ec50d268d4ccfcffd78a5a95ac71be9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void _testExtraJavaLikeExtension2() throws CoreException", "signatureAfterChange": " public void _testExtraJavaLikeExtension2() throws CoreException", "diff": ["-\t\tassertResourcesEqual(", "+\t\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ed8f13a3fc0e2c40b5b38a5c117eb1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "b05f11036c5fc9a3a486da6c0863d6bd70431cad", "commitAfterChange": "5e8f8786ccf28052c702abe0af59f88c241f4715", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic boolean visit(WildcardType node)", "signatureAfterChange": " \tpublic boolean visit(WildcardType node)", "diff": ["-\t\t\tif (getBooleanAttribute(node, WildcardType.BOUND_PROPERTY)) {", "+\t\t\tif (getBooleanAttribute(node, WildcardType.UPPER_BOUND_PROPERTY)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7edefd6ef814aeae4fe4f450feb00a3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 448, "methodNumberAfterChange": 448, "signatureBeforeChange": " \tpublic void test429()", "signatureAfterChange": " \tpublic void test429()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_BLOCK_BRACE_POSITION, DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_BRACE_POSITION_FOR_BLOCK, DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ee7e7cfe7138f0e023e8c9933317d3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic void testMethod12() throws Exception", "signatureAfterChange": " \tpublic void testMethod12() throws Exception", "diff": ["-\t\t\tassertElementEquals(", "+\t\t\tassertElementExists("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eea0e5d10bf3a75a02201d7ba5fc526", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 69, "signatureBeforeChange": " protected boolean resumeAfterRecovery()", "signatureAfterChange": " protected boolean resumeAfterRecovery()", "diff": ["-\t\t\t\t|| insideFieldInitialization())) {", "+\t\t\t\t|| isIndirectlyInsideFieldInitialization())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f03a35eb7e48bf547590763eb32a2c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "  public void test052() throws JavaModelException", "signatureAfterChange": "  public void test052() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f1f4c40a5d3e59480a2e6ed5249510a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f35a0e8c70b754746fed7282e57f978", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "\t\t  \tpublic void test061()", "signatureAfterChange": "\t\t  \tpublic void test061()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f4feef07aea97c75887c771b3a4c48a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SnippetCompletionTests.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "   public void testCodeSnippetAssistForCompilationUnit() throws JavaModelException", "signatureAfterChange": "   public void testCodeSnippetAssistForCompilationUnit() throws JavaModelException", "diff": ["-\tint[] modifiers = {CompilerModifiers.AccDefault, CompilerModifiers.AccFinal};", "+\tint[] modifiers = {CompilerModifiers.AccDefault, IConstants.AccFinal};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f632d7f5653081e8836eaeecda2064b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "fdaafe32db6fb8160ac96735f3629164c831f24b", "commitAfterChange": "1819c30a56affd533a48985d222f687b6215e066", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\tthis.indexManager.removeIndexFamily(res.getFullPath());\r", "+\t\t\t\t\t\t\tthis.indexManager.removeIndex(res.getFullPath());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f6e04deb7e2d81331a203bfad3822fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "21e62100e74b3df49c1103d1bbce0c63e8dc45e6", "commitAfterChange": "a8ccda3999813cf8b680932b34931533f6d250a7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "\t  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\tif (upperScope.environment().options.targetJDK < ClassFileConstants.JDK1_5) {", "+\t\t\t\tif (upperScope.environment().options.targetJDK < ClassFileConstants.JDK_DEFERRED) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f756b548402ef78f776317532d15404", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForInterface.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(javadocTestClass());", "+\t\treturn buildAllCompliancesTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f8c6f648500ae23fa21989bc60d2c74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "  public void test058() throws JavaModelException", "signatureAfterChange": "  public void test058() throws JavaModelException", "diff": ["-\t\t\"paramMethod[JAVADOC_METHOD_REF]{{@link #paramMethod(String, boolean, Object)}, Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICENUNRIT+\"}\"", "+\t\t\"paramMethod[JAVADOC_METHOD_REF]{{@link #paramMethod(String, boolean, Object)}, Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DRICENUNRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7facaf949d2d9da502b51c996febf707", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/InternalSearchDocument.java", "commitBeforeChange": "9cd1ab49783c2213611dcbe2939a387e78b83c79", "commitAfterChange": "92aee8d421610703027ca2a5b652beed8fbe4ac3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void removeAllIndexEntries()", "signatureAfterChange": " \tpublic void removeAllIndexEntries()", "diff": ["-\t\t\tindex.remove(getPath());", "+\t\t\tindex.remove(getContainerRelativePath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb3d94282928b4869a53e4bccb75b59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public String[] getSuperInterfaceNames() throws JavaModelException", "signatureAfterChange": " public String[] getSuperInterfaceNames() throws JavaModelException", "diff": ["-\t\treturn fgEmptyList;", "+\t\treturn EmptyStringList;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fd24e51e97b5ba11d582f89cab9eca8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatch.java", "commitBeforeChange": "372799d5bd955eabbf1069fe0bbf8aba8ea8af85", "commitAfterChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tAPTResult()", "signatureAfterChange": " \t\tAPTResult()", "diff": ["-\t\t\t_newDependencies = Collections.emptySet();", "+\t\t\t_newDependencies = Collections.emptyMap();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "800068ef0a2b8a913d2d12bf2a42685c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void branchChainTo(Label label)", "signatureAfterChange": " \tpublic void branchChainTo(BranchLabel label)", "diff": ["-\tpublic void branchChainTo(Label label) {", "+\tpublic void branchChainTo(BranchLabel label) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "801d694a2a917214ed6afa6b3807e6e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void testMultiLineCommentBlankLineBeforeJavadoctags2()", "signatureAfterChange": " \tpublic void testMultiLineCommentBlankLineBeforeJavadoctags2()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES, \"true\"); //$NON-NLS-1$", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_JAVADOC_COMMENT, \"true\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "802e45f87e0f0842960233bd2573bd6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "commitAfterChange": "82730fa91cab84d990d4e3898f46564d654b224e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic IEntryResult[] queryEntries(char[] pattern, int matchRule)", "signatureAfterChange": " \tpublic EntryResult[] queryEntries(char[] pattern, int matchRule)", "diff": ["-\tpublic IEntryResult[] queryEntries(char[] pattern, int matchRule) {", "+\tpublic EntryResult[] queryEntries(char[] pattern, int matchRule) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "802ee4f64df9c96098114b2927a40e6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationLocator.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public int resolveLevel(Binding binding)", "signatureAfterChange": " public int resolveLevel(Binding binding)", "diff": ["-\tswitch (this.pattern.classOrInterface) {", "+\tswitch (this.pattern.typeSuffix) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80470b61df435bac52d96d6298a63b4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "474eb5356258f18fd9cfbd1a24f6dbe20ed6eea5", "commitAfterChange": "b0f361db26dd11f4be4974027111b70136b11d5b", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tprotected static MethodDeclaration createNewMethod(AST ast, String name, boolean isAbstract)", "signatureAfterChange": "  \tprotected static MethodDeclaration createNewMethod(AST ast, String name, boolean isAbstract)", "diff": ["-\t\tif (ast.apiLevel() == AST_INTERNAL_JLS2) {", "+\t\tif (ast.apiLevel() == JLS2_INTERNAL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "805bce778c544b16a5db5660f05a8881", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MultiOperation.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r protected MultiOperation(IJavaElement[] elementsToProcess, IJavaElement[] parentElements, boolean force)", "signatureAfterChange": "\r protected MultiOperation(IJavaElement[] elementsToProcess, IJavaElement[] parentElements, boolean force)", "diff": ["-\tfParentElements = new Hashtable(elementsToProcess.length);\r", "+\tfParentElements = new HashMap(elementsToProcess.length);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "807f4d262f0b1ca8c72cb842dc8c96dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tMethodInvocation(AST ast)", "signatureAfterChange": " \tMethodInvocation(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8087bbe5ad31714ffb0c3f2c0f952e1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "cf8685fad06f6d01d8cf4df923db245655e1c3c9", "commitAfterChange": "944bb3067c1ad2fb58614f5ef3b1d7b681cd52ff", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "signatureAfterChange": "\r public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\t\t\t&& ((operation.left.implicitConversion >> 4) != T_String)) { // exclude string concatenation which would occur backwards\r", "+\t\t\t&& ((operation.right.implicitConversion >> 4) != T_String)) { // exclude string concatenation which would occur backwards\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80984e22bbc54f48226f7ecfbdd2a13f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/RunAllJava8Tests.java", "commitBeforeChange": "4da206fbf61a10e973b62f504ebc9e4e8671589b", "commitAfterChange": "b56ee0a29e919d047b98aed991f4d73be016ed08", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Class[] getAllTestClasses()", "signatureAfterChange": " \tpublic static Class[] getAllTestClasses()", "diff": ["-\t\t\tFormatter18Tests.class,", "+\t\t\tFormatterJSR335Tests.class,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d1d0c11329de7fd134cababd921d1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tprotected ParameterizedSourceType selectParameterizedType(ICompilationUnit unit, String selection) throws JavaModelException", "signatureAfterChange": " \tprotected ResolvedSourceType selectParameterizedType(ICompilationUnit unit, String selection) throws JavaModelException", "diff": ["-\tprotected ParameterizedSourceType selectParameterizedType(ICompilationUnit unit, String selection) throws JavaModelException {", "+\tprotected ResolvedSourceType selectParameterizedType(ICompilationUnit unit, String selection) throws JavaModelException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d8760679ca876c3a035047b3688ce0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 266, "signatureBeforeChange": "  public void testBug110060_TypePattern10() throws CoreException", "signatureAfterChange": " public void testBug110060_TypePattern10() throws CoreException", "diff": ["-", "+/** @deprecated As using a depreciated constant */", "-\tsearch(\"AxAx\", TYPE, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\tsearch(\"AxAx\", TYPE, REFERENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\tassertSearchResults(\"\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80d9d7d110a993d3ede2af2664c7aca5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c6a89cac15445646187d10a54bec662eb0dc6e5c", "commitAfterChange": "4fffe7a6b4f3fe87b8b0d05b68d3cdb31ecb7df4", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void formatClassBodyDeclarations(AstNode[] nodes)", "signatureAfterChange": " \tprivate void formatClassBodyDeclarations(AstNode[] nodes)", "diff": ["-\t\tthis.scribe.printComment();", "+\t\tthis.scribe.printLastComment();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80da426b3e047cc290c04a524cd24b56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " public MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\t\t\tif (resolvedExceptionType.findSuperTypeErasingTo(TypeIds.T_JavaLangThrowable, true) == null) {", "+\t\t\tif (resolvedExceptionType.findSuperTypeOriginatingFrom(TypeIds.T_JavaLangThrowable, true) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80deb2a27a94243afe37a715a9c3de7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testChangeContentOfReadOnlyCU2() throws CoreException", "signatureAfterChange": " public void testChangeContentOfReadOnlyCU2() throws CoreException", "diff": ["-\t\tthis.copy.commit(true, null);", "+\t\tthis.copy.commitWorkingCopy(true, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80e1e8d29c153f4f0893c5c774c6e10c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected void consumeDefaultModifiers()", "signatureAfterChange": " protected void consumeDefaultModifiers()", "diff": ["-\tcheckAnnotation(); // might update modifiers with AccDeprecated", "+\tcheckComment(); // might update modifiers with AccDeprecated"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80f0df5cd6b9ced9519dbfce8d11cdea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationBinding.java", "commitBeforeChange": "ee7a9f184cb78c9a997b3d97c102d52d6cad8cc9", "commitAfterChange": "5ce130e25c355987e77b700c026948aca2c3cdd7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic boolean isDeprecated()", "signatureAfterChange": " \t \tpublic boolean isDeprecated()", "diff": ["-\t\tReferenceBinding typeBinding = this.internalAnnotation.getAnnotationType();", "+\t\tReferenceBinding typeBinding = this.binding.getAnnotationType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80f66aa310a17602e6e2c875f1de5fcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic StringBuffer print(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer print(int indent, StringBuffer output)", "diff": ["-\t\tif ((this.bits & IsAnonymousTypeMASK) == 0) {", "+\t\tif ((this.bits & IsAnonymousType) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "810334105a43fe301673baf26b7d799d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "e6009de9b4d4a2d7c4c60a3948647861fa518186", "commitAfterChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\t\tif (((ClassScope) scope).detectCycle(currentType, this, argTypes))", "+\t\t\tif (((ClassScope) scope).detectHierarchyCycle(currentType, this, argTypes))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "810a57f2c6717968c99b92d00d799013", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 248, "methodNumberAfterChange": 248, "signatureBeforeChange": " public void testBug109695i() throws CoreException", "signatureAfterChange": " public void testBug109695i() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"UTFDSS\", SearchPattern.R_CAMEL_CASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"UTFDSS\", SearchPattern.R_CAMELCASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "810e93611c054e24cdf060fe1ee062c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForMethod.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(javadocTestClass());", "+\t\treturn buildAllCompliancesTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8114e718af2e059b3879a32b6308c4b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void test_nonnull_return_011()", "signatureAfterChange": " public void test_nonnull_return_011()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8115273c833c2d7a2563900a337cbf88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaCorePreferenceInitializer.java", "commitBeforeChange": "0ba5e2f2851455c016407d133933070e588be146", "commitAfterChange": "c9df47e6bc4127d80d1e16ea8353f464e792fda3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void initializeDefaultPreferences()", "signatureAfterChange": " \tpublic void initializeDefaultPreferences()", "diff": ["-\t\tdefaultOptionsMap.put(JavaCore.ENABLE_JAVADOC_ATTACHMENTS, JavaCore.ENABLED);", "+\t\tdefaultOptionsMap.put(JavaCore.ENABLE_JAVADOC_ATTACHMENTS_ACCESSES, JavaCore.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "812e638f95061b3114d6ede74cd304ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SingleTypeRequestor.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public boolean isCanceled()", "signatureAfterChange": " public boolean isCanceled()", "diff": ["-\treturn fElement != null;", "+\treturn element != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "813873318105c43e80744315d3e7733e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testSuggestLocalName002()", "signatureAfterChange": " public void testSuggestLocalName002()", "diff": ["-\t\tassertEquals(", "+\t\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "814ba2baed5643fd24438d157795ae63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void testBug139621b() throws JavaModelException", "signatureAfterChange": " public void testBug139621b() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81666292d53496c87b512f605fc955a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 143, "methodNumberAfterChange": 143, "signatureBeforeChange": "\r final public void if_icmpgt(Label lbl)", "signatureAfterChange": "\r final public void if_icmpgt(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_if_icmpgt, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_if_icmpgt, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8180cbd14bcb4272720f734350f40ac2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tITypeAnnotationWalker walker)", "signatureAfterChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tTypeAnnotationWalker walker)", "diff": ["-\t\tITypeAnnotationWalker walker) {", "+\t\tTypeAnnotationWalker walker) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8185d669e20a1b15c01149b423114905", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((this.bits & IsReachableMASK) == 0) {", "+\t\tif ((this.bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81877928cb2cd434b6c2c3d7a3669b1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void endVisit(Continue continueStatement, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(ContinueStatement continueStatement, BlockScope scope)", "diff": ["-\tpublic void endVisit(Continue continueStatement, BlockScope scope) {", "+\tpublic void endVisit(ContinueStatement continueStatement, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "819e26b5a7c2eb822860ada252732d83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "3c8db8654fc8e2927c75863ec1232c9bc3800c9b", "commitAfterChange": "533660d1560f1a7aff4c5ccabdcd0cb35c0194c1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate static void checkContainerAnnotationTypeTarget(ASTNode culpritNode, Scope scope, ReferenceBinding containerType, ReferenceBinding repeatableAnnotationType)", "signatureAfterChange": " \tprivate static void checkContainerAnnotationTypeTarget(ASTNode culpritNode, Scope scope, ReferenceBinding containerType, ReferenceBinding repeatableAnnotationType)", "diff": ["-\t\t\t\tscope.problemReporter().repeatableAnnotationTargetMismatch(culpritNode, repeatableAnnotationType, containerType, builder.toString());", "+\t\t\t\tscope.problemReporter().repeatableAnnotationTypeTargetMismatch(culpritNode, repeatableAnnotationType, containerType, builder.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81a47e4f5004926ae1be47ebab6eb19b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "8f5b67bd80ff7e72bd80828779ffdbdb5bad5276", "commitAfterChange": "50d8267275b181894c19c15246b42f9711f997ad", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected void resetDefaults()", "signatureAfterChange": "  \tprotected void resetDefaults()", "diff": ["-\t\tthis.suppressNullInfoFromAsserts = false;", "+\t\tthis.includeNullInfoFromAsserts = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81b950a8ac7c7cbaa163d4b8b66c7394", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "ddef7455b6d2859e2814f04b379ed85f78251da8", "commitAfterChange": "4bfc4576f7e9ee9845064540264f52af92a08a1c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected int determineKind(IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected int determineKind(IResource underlyingResource) throws JavaModelException", "diff": ["-\tIClasspathEntry[] entries= ((JavaProject)getJavaProject()).getExpandedClasspath(true);", "+\tIClasspathEntry[] entries= ((JavaProject)getJavaProject()).getResolvedClasspath(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81befab4d236a4ddd9c65dc677af308c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "e5bce80011e3833bbea45afb8cd4fb116b193fc5", "commitAfterChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tsynchronized IBinding resolveImport(ImportDeclaration importDeclaration)", "signatureAfterChange": " \tsynchronized IBinding resolveImport(ImportDeclaration importDeclaration)", "diff": ["-\t\t} catch(AbortCompilation e) {", "+\t\t} catch(RuntimeException e) {", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=63550", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=64299"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81cc7a434be4a0c298975e4e4d6a8588", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST8Test.java", "commitBeforeChange": "a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8", "commitAfterChange": "7df061f9da0ab96be87e5851cb157a28c5f5bca0", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic void test0129() throws JavaModelException", "signatureAfterChange": " \tpublic void test0129() throws JavaModelException", "diff": ["-\t\tfragment.getExtraDimensionInfos().clear();", "+\t\tfragment.extraDimensionInfos().clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ed0e8e43574ff05593173f625fe150", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "6f02ff89bd237cb51746120df758993eba407273", "commitAfterChange": "66f427e04d93bd85a2e18dda798afd4b18637e27", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testOnClassFile() throws JavaModelException", "signatureAfterChange": " public void testOnClassFile() throws JavaModelException", "diff": ["-\t\tassertTrue(\"Unexpected buffer\", buffer instanceof Buffer);\t", "+\t\tassertTrue(\"Unexpected buffer\", buffer instanceof TestBuffer);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ee0ba9aa75368800c139f8d56029a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void testFileManager()", "signatureAfterChange": " \tpublic void testFileManager()", "diff": ["-\t\t\tStandardJavaFileManager fileManager = Compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "+\t\t\tStandardJavaFileManager fileManager = compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81f1c582fc782aae9ba50df6cfbc2eb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "4c63cc3384193b40f8ecd10e816b8df4cb59320a", "commitAfterChange": "0307cad3f1b01ed5d7ce67bc78cd9b706e4819f3", "methodNumberBeforeChange": 442, "methodNumberAfterChange": 442, "signatureBeforeChange": " \tvoid tModifiers(final BodyDeclaration x)", "signatureAfterChange": " \tvoid tModifiers(final BodyDeclaration x)", "diff": ["-\t\tgenericPropertyListTest(x, x.modifiers(), new Property(\"Modifiers\", true, ExtendedModifier.class) { //$NON-NLS-1$", "+\t\tgenericPropertyListTest(x, x.modifiers(), new Property(\"Modifiers\", true, IExtendedModifier.class) { //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81faab022f4b67d7c90ab70191896477", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "edd951b2efc6b8f7b24cb3f178fd99c174eb6c7a", "commitAfterChange": "dec2dac6f78a5ffa915ffd3b73cb386c60b72cae", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tprivate void initializeRoots(IJavaModel model)", "signatureAfterChange": " \t \tprivate void initializeRoots(IJavaModel model)", "diff": ["-\t\t\t\t\tthis.exclusionPatterns.put(path, ((ClasspathEntry)entry).charBasedExclusionPatterns());", "+\t\t\t\t\tthis.exclusionPatterns.put(path, ((ClasspathEntry)entry).fulExclusionPatternChars());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8209aa44be3f3221a97f2ba5e0b565d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "abd7eb8067d05a106270885f602de8a64d08c556", "commitAfterChange": "51349b07c2a6f70ec333ca325c91564e571e10b7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public LocalTypeBinding(ClassScope scope, SourceTypeBinding enclosingType, CaseStatement switchCase)", "signatureAfterChange": " \t public LocalTypeBinding(ClassScope scope, SourceTypeBinding enclosingType, CaseStatement switchCase)", "diff": ["-\tthis.switchCase = switchCase;", "+\tthis.enclosingCase = switchCase;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "820e84a700d1a50b1157b013497b09bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "dfed7f1b9ca73af170ad52dc060f4fca93f91582", "commitAfterChange": "24d2b526806e9f4be8e8354c9cfa88d403c9a6eb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\tbuf.append(\"\\n\\t- superfluous semicolon: \").append(getSeverityString(SuperfluousSemicolon)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- superfluous semicolon: \").append(getSeverityString(EmptyStatement)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "820f79e0a59f79924ad49e2107a6ab0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfIntValues.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic boolean containsKey(char[] key)", "signatureAfterChange": "  \tpublic boolean containsKey(char[] key)", "diff": ["-\t\t\tif (currentKey.length == keyLength", "-\t\t\t\t&& CharOperation.prefixEquals(currentKey, key))", "+\t\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "823a2eb3102d941a3bcbf9557bd5a87a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "9156e33be70429042b1d72217c4197f996fdfb3a", "commitAfterChange": "0bbc1f10f38c090526549c38a7d30ff164b71a76", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public void resetTo(int begin, int end)", "signatureAfterChange": "  public void resetTo(int begin, int end)", "diff": ["-\ttaskCount = 0;", "+\tfoundTaskCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824eb0b39d0ddf859868ff327061ca46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "149c538751123b079a5874a00aba83297561ab5c", "commitAfterChange": "7bd675acf4007077bf6bd84b82139719c7a8ca75", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["-\t\t\t\t\tif (scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) { // below 1.5, already reported as syntax error", "+\t\t\t\t\tif (scope.compilerOptions().originalSourceLevel >= ClassFileConstants.JDK1_5) { // below 1.5, already reported as syntax error"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8258e4a6eb563965944510a0429ab021", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \t \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\tif ((this.bits & IsAssignmentWithNoEffectMASK) != 0) {", "+\t\tif ((this.bits & AssignmentHasNoEffect) != 0) {", "+//\t\t\t\tif (this.expression instanceof PostfixExpression) {", "+//\t\t\t\t\t// discard entire assignment and rhs for cases like: \"b = b++\"", "+//\t\t\t\t\tthis.lhs.generateCode(currentScope, codeStream, true);", "+//\t\t\t\t} else {", "+//\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "825a348feb7f435954cc72c6e843472f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AbstractTypeDeclaration.java", "commitBeforeChange": "6f922f250ef2374f899c98ff1322d58474d771bf", "commitAfterChange": "3c95961338c3c4b8547e98f97ab6852359cf22ed", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tstatic final ChildPropertyDescriptor internalNamePropertyFactory(Class nodeClass)", "signatureAfterChange": " \tstatic final ChildPropertyDescriptor internalNamePropertyFactory(Class nodeClass)", "diff": ["-\t\treturn new ChildPropertyDescriptor(nodeClass, \"name\", Name.class, MANDATORY, NO_CYCLE_RISK); //$NON-NLS-1$", "+\t\treturn new ChildPropertyDescriptor(nodeClass, \"name\", SimpleName.class, MANDATORY, NO_CYCLE_RISK); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "826369ddbd8a9cfaf540ea6e311223c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 183, "signatureBeforeChange": " \tpublic void test161()", "signatureAfterChange": " \tpublic void test161()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "829bcc0a2c5534460b549d9be4b6dd0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AptBuilderTests.java", "commitBeforeChange": "bfcd45867d04fefcde8c411b2c4f613fed962f2b", "commitAfterChange": "8360857ac96415dcd60ac94fbc284e7801424ade", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void testGeneratedFileInBuilder_ProjectRootAsSourceDir() throws Exception", "signatureAfterChange": "  \tpublic void testGeneratedFileInBuilder_ProjectRootAsSourceDir() throws Exception", "diff": ["-\t\t_testGeneratedFileInBuilder( getProjectName_ProjectRootAsSrcDir() );", "+\t\t_testGeneratedFileInBuilder0( getProjectName_ProjectRootAsSrcDir() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a08470d49f852b32398017f27d0fb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "f97b24f3f8e94d8f54a74d9a196551c56851e735", "commitAfterChange": "edd951b2efc6b8f7b24cb3f178fd99c174eb6c7a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic String[] getExclusionPatterns()", "signatureAfterChange": " \tpublic IPath[] getExclusionPatterns()", "diff": ["-\tpublic String[] getExclusionPatterns() {", "+\tpublic IPath[] getExclusionPatterns() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a667767a905ac8889f71c653bed40e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " protected void openWhenClosed(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected void openWhenClosed(IProgressMonitor pm) throws JavaModelException", "diff": ["-\t\tIResource resource = getCorrespondingResource();", "+\t\tIResource resource = getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82b1419e23ac87af972147fdb48ba2d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathJar.java", "commitBeforeChange": "30961650a033c638f3a768401431bcd77f1a4058", "commitAfterChange": "7d1e8775d87112012e8a87b6995e3b0bfd71512c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 2, "signatureBeforeChange": "  ClasspathJar(String zipFilename)", "signatureAfterChange": "  ClasspathJar(String zipFilename)", "diff": ["-\tthis.packageCache = null;", "+\tthis.knownPackageNames = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82b6143fe48fdcb54580b67fbf1f5dd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic void buildStarting(ICompilationParticipantResult[] files, boolean isBatch)", "signatureAfterChange": " \t \tpublic void buildStarting(BuildContext[] files, boolean isBatch)", "diff": ["-\tpublic void buildStarting(ICompilationParticipantResult[] files, boolean isBatch){", "+\tpublic void buildStarting(BuildContext[] files, boolean isBatch){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82bb84e310eb973408e8d39f2d0a8f9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "ca140a64ea9dab827de00f91eb7113ac00964828", "commitAfterChange": "2918b5cc2ced910135a27ce367db19e3d162582b", "methodNumberBeforeChange": 210, "methodNumberAfterChange": 210, "signatureBeforeChange": " \tpublic void test0196() throws JavaModelException", "signatureAfterChange": " \tpublic void test0196() throws JavaModelException", "diff": ["-\t\tString signature = new BindingKey(key).internalToSignature();", "+\t\tString signature = new BindingKey(key).toSignature();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82bf07a48daaf4987200b2f7518f60ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "616a41b14ead174db92c630ec6ed7f1d666a9b67", "commitAfterChange": "645b7eff21d5db2b90380f1d4478beb9fa33f107", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject3() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject3() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82d5f6bae407e860b034bf967d041187", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachedJavadocTests.java", "commitBeforeChange": "f33fe27819e8270eb24d0e5a64c8fba3d823b0e8", "commitAfterChange": "a8f2b68f1354490b767be2be2c0da4ef0e316375", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void tearDownSuite() throws Exception", "signatureAfterChange": " \tpublic void tearDownSuite() throws Exception", "diff": ["-\t\tsuper.tearDown();", "+\t\tsuper.tearDownSuite();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82e12581a7fd7bd72d5c247071f0939b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "35bd4e1ac4b1e11c036461a7309d887d1527f75a", "commitAfterChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " boolean checkInheritedReturnTypes(MethodBinding[] methods, int length)", "signatureAfterChange": " boolean checkInheritedReturnTypes(MethodBinding[] methods, int length)", "diff": ["-\t\t\tif (!areReturnTypesEqual(method, methods[j])) {", "+\t\t\tif (!areReturnTypesCompatible(method, methods[j])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8306ae741e91954867c90bd2814e9b61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tprivate void buildMemberTypes(AccessRestriction accessRestriction)", "signatureAfterChange": " \t \tprivate void buildMemberTypes(AccessRestriction accessRestriction)", "diff": ["-\t\t\t\tif (memberContext.kind() == IGenericType.INTERFACE", "+\t\t\t\tif (memberContext.kind() == IGenericType.INTERFACE_DECL"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8309cc9986775e1e75fe5d7faa9c2746", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCodeStream.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void generateEmulationForMethod(Scope scope, MethodBinding methodBinding)", "signatureAfterChange": " public void generateEmulationForMethod(Scope scope, MethodBinding methodBinding)", "diff": ["-\tthis.newArray(scope, new ArrayBinding(scope.getType(TypeBinding.JAVA_LANG_CLASS), 1));", "+\tthis.newArray(scope, new ArrayBinding(scope.getType(TypeConstants.JAVA_LANG_CLASS), 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "830b0293cd9b4ab27b54f4e61c1aa041", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedMethodsPattern.java", "commitBeforeChange": "b34a79aea557f53b7f18bd9181d2f1aa9458b4f9", "commitAfterChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \t\r public DeclarationOfReferencedMethodsPattern(\r \tchar[] selector, \r \tint matchMode, \r \tboolean isCaseSensitive,\r \tchar[] declaringQualification,\r \tchar[] declaringSimpleName,\t\r \tchar[] returnQualification, \r \tchar[] returnSimpleName,\r \tchar[][] parameterQualifications, \r \tchar[][] parameterSimpleNames,\r \tIType declaringType)", "signatureAfterChange": "\r \t\r public DeclarationOfReferencedMethodsPattern(\r \tchar[] selector, \r \tint matchMode, \r \tboolean isCaseSensitive,\r \tchar[] declaringQualification,\r \tchar[] declaringSimpleName,\t\r \tchar[] returnQualification, \r \tchar[] returnSimpleName,\r \tchar[][] parameterQualifications, \r \tchar[][] parameterSimpleNames,\r \tIType declaringType)", "diff": ["-\tthis.knownMethods = new ObjectSet();\r", "+\tthis.knownMethods = new HashSet();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "831a6f6ebdae51bf8e45a1661cada183", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r private boolean haveSameParent(IPath jarPath1, IPath jarPath2, IJavaModel model)", "signatureAfterChange": "\r private boolean haveSameParent(IPath jarPath1, IPath jarPath2, IJavaModel model)", "diff": ["-\t\t\tIClasspathEntry[] entries = project.getResolvedClasspath(true);\r", "+\t\t\tIClasspathEntry[] entries = project.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "831f1ad3bbe44238257ce320ddad3937", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void testInvalidTagsConstructorNoSupport()", "signatureAfterChange": " \tpublic void testInvalidTagsConstructorNoSupport()", "diff": ["-\t\trunConformTest(InvalidReferencesConstructorJavadocComments);", "+\t\trunConformTest(CONSTRUCTORS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "832361c2f2b533d8b764f4375575fad5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 262, "methodNumberAfterChange": 262, "signatureBeforeChange": "  public void newJavaLangAssertionError()", "signatureAfterChange": "  public void newJavaLangAssertionError()", "diff": ["-\twriteUnsignedShort(constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangAssertionErrorConstantPoolName));", "+\twriteUnsignedShort(constantPool.literalIndexForType(ConstantPool.JavaLangAssertionErrorConstantPoolName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "832ab0c2e6b4428d2baba947b575d723", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMember.java", "commitBeforeChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "commitAfterChange": "7d45b883ec69848a56f546daa0819092ba819185", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public ISourceRange getSourceRange() throws JavaModelException", "signatureAfterChange": " public ISourceRange getSourceRange() throws JavaModelException", "diff": ["-\t\treturn SourceMapper.fgUnknownRange;", "+\t\treturn SourceMapper.UNKNOWN_RANGE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "832d47687cec2be5e36d8174568e2c2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected void codeSelect(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, int offset, int length, ISelectionRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r protected void codeSelect(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, int offset, int length, ISelectionRequestor requestor) throws JavaModelException", "diff": ["-\tSelectionEngine engine = new SelectionEngine(environment, requestor, JavaModelManager.getOptions());\r", "+\tSelectionEngine engine = new SelectionEngine(environment, requestor, JavaCore.getOptions());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833099aae1785aec9ea96a234a115ded", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "1534c3fb9312be746c807d9f0aa370d7a2598284", "commitAfterChange": "f9b5a54e0afa9af686e707bcc0c484de0728c860", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic boolean visit(CreationReference node)", "signatureAfterChange": " \tpublic boolean visit(CreationReference node)", "diff": ["-\t\tnode.getExpression().accept(this);", "+\t\tnode.getType().accept(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8341b028c917025f9d22f1b2c5b92cd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void testBug118105() throws JavaModelException", "signatureAfterChange": " public void testBug118105() throws JavaModelException", "diff": ["-\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "835bfcd2ee872668e37afbcc582a9a23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMember.java", "commitBeforeChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "commitAfterChange": "7d45b883ec69848a56f546daa0819092ba819185", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public ISourceRange getNameRange() throws JavaModelException", "signatureAfterChange": " public ISourceRange getNameRange() throws JavaModelException", "diff": ["-\t\treturn SourceMapper.fgUnknownRange;", "+\t\treturn SourceMapper.UNKNOWN_RANGE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83607e72d14fae5dad696f340df115d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": "  \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\tthis.type.binding = this.binding.type; // update binding for type reference", "+\t\t\tthis.type.resolvedType = this.binding.type; // update binding for type reference"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8366fc8a9da328004d255c7bc04f665b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexBinaryFolder.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\tIIndex index = this.manager.getIndexForUpdate(this.containerPath, true, /*reuse index file*/ true /*create if none*/);", "+\t\tIndex index = this.manager.getIndexForUpdate(this.containerPath, true, /*reuse index file*/ true /*create if none*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8376f2d202bd361bc12ffdda38b03571", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteElementsOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic DeleteElementsOperation(IJavaElement[] elementsToDelete, boolean force)", "signatureAfterChange": " \tpublic DeleteElementsOperation(IJavaElement[] elementsToDelete, boolean force)", "diff": ["-\t\tfFactory = new DOMFactory();", "+\t\tfactory = new DOMFactory();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "838948ec9c033bc7b46f8835440a3c52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, boolean didAlreadyComplain)", "signatureAfterChange": " \tpublic boolean complainIfUnreachable(FlowInfo flowInfo, BlockScope scope, boolean didAlreadyComplain)", "diff": ["-\t\t\tthis.bits &= ~ASTNode.IsReachableMASK;", "+\t\t\tthis.bits &= ~ASTNode.IsReachable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "838a08d4ac271f7c107cd717404e0a90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "bc331c3c1c9987384cec8a101a070b308c8c75c4", "commitAfterChange": "5c9c9d13f21ca2b350289c522fa9a28827d49ab1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void setDefaultSettings()", "signatureAfterChange": "  \tpublic void setDefaultSettings()", "diff": ["-\t\tthis.alignment_for_arguments_in_annotation = Alignment.M_COMPACT_SPLIT;", "+\t\tthis.alignment_for_arguments_in_annotation = Alignment.M_NO_ALIGNMENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "839a38893ab96870804da3d0e93aa5f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void testAddPartialMethod1() throws JavaModelException", "signatureAfterChange": " public void testAddPartialMethod1() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83a36045c3309045b85efa08ff0f19a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void testTypeRefGenericAllG1_Parameterized() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAllG1_Parameterized() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, PARAMETERIZED_TYPE_REFERENCE, scope);", "+\tsearch(\"*\", TYPE, TYPE_ARGUMENT_TYPE_REFERENCE, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d1e8884a417c7f663a438fda3a1b51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "7234934f3efed703cbf030a33d03d36a447aeef6", "commitAfterChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected void closing(Object info) throws JavaModelException", "signatureAfterChange": " \tprotected void closing(Object info) throws JavaModelException", "diff": ["-\t\tObject[] children = ((JavaElementInfo)info).fChildren;", "+\t\tObject[] children = ((JavaElementInfo)info).children;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83d61dd0ef586dabb584bb43a884171d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\tbits |= IsReachableMASK;", "+\t\t\t\tbits |= IsReachable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83e46d3dd82698f45406d6fff8573d97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "95cb60d325cbf487c877d2ee73069bb93ae4326a", "commitAfterChange": "b34003668f0f78b104bc2b84b4ccbe996d2e1864", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\t\t \tprivate void fireReconcileDelta( \t\tIElementChangedListener[] listeners, \t\tint[] listenerMask, \t\tint listenerCount)", "signatureAfterChange": "\t\t \tprivate void fireReconcileDelta( \t\tIElementChangedListener[] listeners, \t\tint[] listenerMask, \t\tint listenerCount)", "diff": ["-\t\tif (VERBOSE){", "+\t\tif (DEBUG){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83e5ecef975b315d8caca1ad891ffa64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic boolean visit(MarkerAnnotation annotation, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit(MarkerAnnotation annotation, ClassScope scope)", "diff": ["-\tpublic boolean visit(MarkerAnnotation annotation, CompilationUnitScope scope) {", "+\tpublic boolean visit(MarkerAnnotation annotation, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8419ce1777d0ecb314bcbaed8cacb8ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "6a22aca625969383c16110c2f231ad75730f0d23", "commitAfterChange": "52ec5e5910757b6546015a0dcaa60e633b7917f4", "methodNumberBeforeChange": 295, "methodNumberAfterChange": 295, "signatureBeforeChange": " public void recordPositionsFrom(int startPC, int sourcePos)", "signatureAfterChange": " public void recordPositionsFrom(int startPC, int sourcePos)", "diff": ["-\tint lineNumber = ClassFile.searchLineNumber(lineSeparatorPositions, sourcePos);", "+\tint lineNumber = Util.searchLineNumber(lineSeparatorPositions, sourcePos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8420f9f8ac687699dbb3cabf361d2266", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BinaryFileOutputStream.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t@Override \tpublic void close() throws IOException", "signatureAfterChange": " \t \t@Override \tpublic void close() throws IOException", "diff": ["-\t\t\t_env.getAptProject().getGeneratedFileManager().addEntryToFileMaps(parentFile, _file);", "+\t\t\t_env.getAptProject().getGeneratedFileManager().addGeneratedFileDependency(parentFile, _file);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "842f453c1269b80b65e368e4f43ba002", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "7a5fa6d4e7beb7ad1bc8fa652ccd4c2cc1dd4339", "commitAfterChange": "89483d0e271e99c67b18df19eba41f6a1cf15383", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t// check if predicate throwing exception", "+\t\t// check if boolean method throwing exception", "-\t\t\tscope.problemReporter().predicateThrowingException(this);", "+\t\t\tscope.problemReporter().booleanMethodThrowingException(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8437f5b210b5db408846c0343dbc44bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/Tests.java", "commitBeforeChange": "159977c9a767e3da13292b63f27cae9054622bb7", "commitAfterChange": "1d6292e297fc077c361c678e7e75367b7df0fe6e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(ClasspathTests.suite());", "+\t\tsuite.addTest(BuildpathTests.suite());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "843b581c8a757a34c4e4a3287be13d6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static List propertyDescriptors(int apiLevel)", "signatureAfterChange": " \tpublic static List propertyDescriptors(int apiLevel)", "diff": ["-\t\t\tcase AST.JLS4:", "+\t\t\tcase AST.JLS4_INTERNAL:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "843d9396d6faebaaea2ad5a17e2ecc7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfAccessedFieldsPattern.java", "commitBeforeChange": "b34a79aea557f53b7f18bd9181d2f1aa9458b4f9", "commitAfterChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public DeclarationOfAccessedFieldsPattern(\r \tchar[] name, \r \tint matchMode, \r \tboolean isCaseSensitive,\r \tchar[] declaringQualification,\r \tchar[] declaringSimpleName,\t\r \tchar[] typeQualification, \r \tchar[] typeSimpleName,\r \tboolean readAccess,\r \tboolean writeAccess)", "signatureAfterChange": "\r public DeclarationOfAccessedFieldsPattern(\r \tchar[] name, \r \tint matchMode, \r \tboolean isCaseSensitive,\r \tchar[] declaringQualification,\r \tchar[] declaringSimpleName,\t\r \tchar[] typeQualification, \r \tchar[] typeSimpleName,\r \tboolean readAccess,\r \tboolean writeAccess)", "diff": ["-\tObjectSet knownFields;\r", "+\tHashSet knownFields;\r", "-\tthis.knownFields = new ObjectSet();\r", "+\tthis.knownFields = new HashSet();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8444128d8fc069af18c53a3b28a1eee3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Flags.java", "commitBeforeChange": "8a2a28b44267beff0fdfbe7d6582425d224ea02d", "commitAfterChange": "ac894da9b0ea3c039ce6982330527517abe54897", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic static boolean isDefaultMethod(int flags)", "signatureAfterChange": " \tpublic static boolean isDefaultMethod(int flags)", "diff": ["-\t\treturn (flags & AccDefaultFlag) != 0;", "+\t\treturn (flags & AccDefaultMethod) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8457ad98f52bcd1f8e2762834392ee97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "commitAfterChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic void testBug73352a()", "signatureAfterChange": " \tpublic void testBug73352a()", "diff": ["-\t\treportMissingJavadocDescription = CompilerOptions.ALL_TAGS;", "+\t\treportMissingJavadocDescription = CompilerOptions.ALL_STANDARD_TAGS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "845c3303d3204adbd3d21915465c43bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public Object[] getNonJavaResources() throws JavaModelException", "signatureAfterChange": " public Object[] getNonJavaResources() throws JavaModelException", "diff": ["-\treturn ((PackageFragmentRootInfo) getElementInfo()).getNonJavaResources(getJavaProject(), getResource(), this);", "+\treturn ((PackageFragmentRootInfo) getElementInfo()).getNonJavaResources(getJavaProject(), resource(), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "846fcb860787f499b06030ea4ce45ee3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tTypeAnnotationWalker walker)", "signatureAfterChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tITypeAnnotationWalker walker)", "diff": ["-\t\tTypeAnnotationWalker walker) {", "+\t\tITypeAnnotationWalker walker) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8495e12466dac56bd22a8dffaa9fe258", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " public void generateStringConcatenationAppend(BlockScope blockScope, Expression oper1, Expression oper2)", "signatureAfterChange": " public void generateStringConcatenationAppend(BlockScope blockScope, Expression oper1, Expression oper2)", "diff": ["-\t\tthis.invokeStringValueOf(T_Object);", "+\t\tthis.invokeStringValueOf(T_JavaLangObject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84a13185bd9ede575a400ec7bd2d5e06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ASTImplTests.java", "commitBeforeChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "commitAfterChange": "9d8f1ed123fbe8bd94c62a19d7bf62f396b087ea", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 55, "signatureBeforeChange": " public void endVisit(MemberValuePair pair, ClassScope scope)", "signatureAfterChange": " public void endVisit(MemberValuePair pair, BlockScope scope)", "diff": ["-public void endVisit(MemberValuePair pair, ClassScope scope) {", "+public void endVisit(MemberValuePair pair, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84a1f50549b01d437f3d87ad77bec8ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 342, "methodNumberAfterChange": 342, "signatureBeforeChange": "  \tpublic void test322()", "signatureAfterChange": "  \tpublic void test322()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84a9143d8f3dd88e0d01be38b3e94d0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic boolean isUpperbound()", "signatureAfterChange": " \tpublic boolean isUpperbound()", "diff": ["-\t\treturn this.binding.isWildcard() && ((WildcardBinding) this.binding).kind == Wildcard.EXTENDS;", "+\t\treturn this.binding.isWildcard() && ((WildcardBinding) this.binding).boundKind == Wildcard.EXTENDS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84ab76dc0f3b566650ae462ea9d5d538", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteResourceElementsOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void processElement(IJavaElement element) throws JavaModelException", "signatureAfterChange": " protected void processElement(IJavaElement element) throws JavaModelException", "diff": ["-\t\t\tdeleteResource(element.getResource(), fForce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY);", "+\t\t\tdeleteResource(element.getResource(), force ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84d48021960c81b3f1b49e1bc54505f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void test_parameter_specification_inheritance_012()", "signatureAfterChange": " public void test_parameter_specification_inheritance_012()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e6235fa6ac6c0fdd7f9e141dc5e520", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/align/Alignment.java", "commitBeforeChange": "409264d50eecf680ff5ff7183418360d91524101", "commitAfterChange": "c9b41a51584b0a4b8cbae83e380daef609822331", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void performFragmentEffect()", "signatureAfterChange": " \tpublic void performFragmentEffect()", "diff": ["-\t\tif (this.fragmentBreaks[this.fragmentIndex] == 1) {", "+\t\tif (this.fragmentBreaks[this.fragmentIndex] == BREAK) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e729fe607053b7879a04c9cd939c09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaExpression.java", "commitBeforeChange": "30e4c5ad25b16737805018035a844b26e4b87890", "commitAfterChange": "fce949b99d272770d0ef99d0fd14291b59c28cff", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic LambdaExpression(JavaElement parent, org.eclipse.jdt.internal.compiler.ast.LambdaExpression lambdaExpression)", "signatureAfterChange": " \tpublic LambdaExpression(JavaElement parent, org.eclipse.jdt.internal.compiler.ast.LambdaExpression lambdaExpression)", "diff": ["-\t\tthis.interphase = new String(lambdaExpression.descriptor.declaringClass.sourceName());", "+\t\tthis.interphase = new String(lambdaExpression.descriptor.declaringClass.readableName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e981d61450b492c7774399dd5beaee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9bef3f15c43b07a14e76957980f62386b2bcee10", "commitAfterChange": "73f504e7d77d95d8fc2d6621b5727e1e3ab07530", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 263, "signatureBeforeChange": " protected void consumeStatementBreak()", "signatureAfterChange": " protected void consumeStatementBreak()", "diff": ["-\tpushOnAstStack(new BreakStatement(null, this.intStack[this.intPtr--], this.endPosition));", "+\tpushOnAstStack(new BreakStatement(null, this.intStack[this.intPtr--], this.endStatementPosition));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8504778bce79fcf0e486816ba00bcbae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "fbf1dc74111046346637967ca91e93e8fc0c5f38", "commitAfterChange": "30b5f4681e6bde6cf7c8af9cdfc4f18b157d7133", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public String[][] resolveType(String typeName, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " public String[][] resolveType(String typeName, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\tISearchableNameEnvironment environment = project.newSearchableNameEnvironment(owner);", "+\tSearchableEnvironment environment = project.newSearchableNameEnvironment(owner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85081faca9c84edc2f3d71089e787c41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "b0acd443a36e322f7afa5778ad381a3437727af2", "commitAfterChange": "342a0847eab95d8ca2e8608616a2c691828b55df", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void movedFrom(IJavaElement movedFromElement, IJavaElement movedToElement)", "signatureAfterChange": " public void movedFrom(IJavaElement movedFromElement, IJavaElement movedToElement)", "diff": ["-\tremovedDelta.fMovedToHandle = movedToElement;", "+\tremovedDelta.movedToHandle = movedToElement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "850d9537a754221fb34dbd48b1856905", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " public IJavaElement getWorkingCopy(IProgressMonitor monitor, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "signatureAfterChange": " public IJavaElement getWorkingCopy(IProgressMonitor monitor, IBufferFactory factory, IProblemRequestor problemRequestor) throws JavaModelException", "diff": ["-\t\t\t(IPackageFragment)getParent(), ", "+\t\t\t(PackageFragment)getParent(), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8513f7862442eb7311bed5958be49710", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "89b15ba6d3aa28748d29d9d1d4b083699e7539bb", "commitAfterChange": "4a19373fcf0b223c67accf2e0e240651b8f7bc94", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject3() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject3() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_BUILDPATH)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8525319254876f9bae14e76bd2da9e53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "31a11bbd60b21d06048936d8583b71ce7a9836d4", "commitAfterChange": "7da9b5064331c4c6b75ae18710dd820f0420436c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tprivate void generateCode(ClassFile classFile)", "signatureAfterChange": "  \tprivate void generateCode(ClassFile classFile)", "diff": ["-\t\t\tcodeStream.recordPositionsFrom(0, this.bodyEnd);", "+\t\t\tcodeStream.recordPositionsFrom(0, this.declarationSourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "852dc8d1b35a272247d8f3a85585dd32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationBinding.java", "commitBeforeChange": "6d93b4bb6f9802710e765aaa00d3450185e4689f", "commitAfterChange": "b4c2385c81cd66eb677f15796da3c5ed6a182754", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic IMemberValuePairBinding[] getAllMemberValuePairs()", "signatureAfterChange": "  \tpublic IMemberValuePairBinding[] getAllMemberValuePairs()", "diff": ["-\t\tMethodBinding[] methods = typeBinding.methods();", "+\t\tMethodBinding[] methods = typeBinding.availableMethods(); // resilience"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85409353da4103b01cae13dc8babd288", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/Util.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprivate static void computeDietRange0(TypeDeclaration[] types, RangeResult result)", "signatureAfterChange": " \t \tprivate static void computeDietRange0(TypeDeclaration[] types, RangeResult result)", "diff": ["-\t\t\tMemberTypeDeclaration[] memberTypeDeclarations = types[j].memberTypes;", "+\t\t\tTypeDeclaration[] memberTypeDeclarations = types[j].memberTypes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "854273fb86b86ff155b32547faf005f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "commitAfterChange": "831d96bc5763622ed503192c35bfd6688abedd96", "methodNumberBeforeChange": 247, "methodNumberAfterChange": 258, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayPrimitiveArrayType()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayPrimitiveArrayType()", "diff": ["-\t\tnew ClassLiteralAccess(this.intStack[this.intPtr--], getTypeReference(this.intStack[this.intPtr--])));", "+\t\tnew ClassLiteralAccess(this.intStack[this.intPtr--], getUnannotatedTypeReference(this.intStack[this.intPtr--])));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85512660b6bffffd5454569aadc24666", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "100013bece0eb4f533563100e2e2c492eafe5eed", "commitAfterChange": "a836581cacf8d7a555ca92aa4df554df081b1e09", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": "  \tpublic MemberValuePair convert(org.eclipse.jdt.internal.compiler.ast.MemberValuePair memberValuePair)", "signatureAfterChange": "  \tpublic MemberValuePair convert(org.eclipse.jdt.internal.compiler.ast.MemberValuePair memberValuePair)", "diff": ["-\t\tSimpleName simpleName = this.ast.newSimpleName(new String(memberValuePair.token));", "+\t\tSimpleName simpleName = this.ast.newSimpleName(new String(memberValuePair.name));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85744d8181fa9f97773d0d7c2a2a3f73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest_1_4.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionSetupSuite(testClass(), COMPLIANCE_1_4);", "+\t\treturn buildUniqueComplianceTestSuite(testClass(), COMPLIANCE_1_4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8578f43bb2fc2328f9691fb34cacd5ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void testChangeExternalJar() throws CoreException, IOException", "signatureAfterChange": " public void testChangeExternalJar() throws CoreException, IOException", "diff": ["-\t\tdeleteFile(new File(jarPath));", "+\t\tdeleteResource(new File(jarPath));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "857b3979cf16b2711b12080e61ffd08b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/IClasspathEntry.java", "commitBeforeChange": "f97b24f3f8e94d8f54a74d9a196551c56851e735", "commitAfterChange": "edd951b2efc6b8f7b24cb3f178fd99c174eb6c7a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tString[] getExclusionPatterns();", "signatureAfterChange": " \tIPath[] getExclusionPatterns();", "diff": ["-\tString[] getExclusionPatterns();", "+\tIPath[] getExclusionPatterns();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8591cc2da9d37d917a9464b29005ba23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "beded9a15cf855138f3e1c6f627196409b012ec5", "commitAfterChange": "d447d64200493d4e1d6a7b99f9c357ac6aadcf48", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " \tpublic void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t&& (currentScope.enclosingSourceType().isLocalType() || currentScope.isLambdaScope())) {", "+\t\t\t&& (currentScope.enclosingSourceType().isLocalType() || currentScope.isLambdaSubscope())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "859c6ecf5e33e595f44b5f32f2f20068", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "db9dfebaf2bb57059c298fd4e86dfeca8f8f76ab", "commitAfterChange": "779b1857b0d7576ef8ddefa7d01c95bb6a719a8e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void recordReturnFrom(UnconditionalFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void recordReturnFrom(FlowInfo flowInfo)", "diff": ["-\tpublic void recordReturnFrom(UnconditionalFlowInfo flowInfo) {", "+\tpublic void recordReturnFrom(FlowInfo flowInfo) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85a378ba21f6d45ce6327fd24411aa8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public synchronized void ensureIndexExists(IPath indexLocation, IPath containerPath)", "signatureAfterChange": " public synchronized void ensureIndexExists(IndexLocation indexLocation, IPath containerPath)", "diff": ["-public synchronized void ensureIndexExists(IPath indexLocation, IPath containerPath) {", "+public synchronized void ensureIndexExists(IndexLocation indexLocation, IPath containerPath) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85b1625b10407268048b57fd5e372cad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " protected void consumeClassInstanceCreationExpressionWithTypeArguments()", "signatureAfterChange": " protected void consumeClassInstanceCreationExpressionWithTypeArguments()", "diff": ["-\t\t\tanonymousTypeDeclaration.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\t\tanonymousTypeDeclaration.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85b5d50a80d9767a63aa65035bd85d46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Initializer.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  protected Initializer(IType parent, int occurrenceCount)", "signatureAfterChange": "  protected Initializer(JavaElement parent, int occurrenceCount)", "diff": ["-protected Initializer(IType parent, int occurrenceCount) {", "+protected Initializer(JavaElement parent, int occurrenceCount) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85c073b6cfdc93e06f34873021750758", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "0307cad3f1b01ed5d7ce67bc78cd9b706e4819f3", "commitAfterChange": "7a57dee588cd632418aaf1f630bac2c2a5d6439a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testASTParsing() throws JavaModelException", "signatureAfterChange": " public void testASTParsing() throws JavaModelException", "diff": ["-\t} catch(IllegalArgumentException e) {", "+\t} catch(IllegalStateException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85c6b5ed55b09e5998f985b2746b0788", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceRefElementInfo.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void setSourceRangeEnd(int end)", "signatureAfterChange": " protected void setSourceRangeEnd(int end)", "diff": ["-\tfSourceRangeEnd = end;", "+\tsourceRangeEnd = end;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85cb6193ec5b36bef9dd4a1cb9deba43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/env/EnvironmentFactory.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static AnnotationProcessorEnvironment getEnvironment(ICompilationUnit compilationUnit, IJavaProject javaProject )", "signatureAfterChange": " \tpublic static AnnotationProcessorEnvironment getEnvironment(ICompilationUnit compilationUnit, IJavaProject javaProject )", "diff": ["-\t\tCompilationUnit node = BaseProcessorEnv.createDietAST( javaProject, compilationUnit);", "+\t\tCompilationUnit node = BaseProcessorEnv.createAST( javaProject, compilationUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ce2543a20e4989136917f104e63339", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTNodesCollectorVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void endVisit(BooleanLiteral node)", "signatureAfterChange": " \tpublic void endVisit(BlockComment node)", "diff": ["+\t */", "+\tpublic void endVisit(BlockComment node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85cf1ee8a9d80def3ad19c368bbf178a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/TokenScanner.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int readNext(boolean ignoreComments) throws CoreException", "signatureAfterChange": " \tpublic int readNext(boolean ignoreComments) throws CoreException", "diff": ["-\t\t\t\tif (curr == ITerminalSymbols.TokenNameEOF) {", "+\t\t\t\tif (curr == TerminalTokens.TokenNameEOF) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85fc7ce31e327c61f3381616ec9f7a21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "9bca6c64d5f06e09288bbe705f432c80b6768f11", "commitAfterChange": "1f165d30a1b65384e3ec245ff2ecd9c2f700ae13", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic static CompilationUnit createDietAST( \t\t\tIJavaProject javaProject,  \t\t\tfinal ICompilationUnit compilationUnit)", "signatureAfterChange": " \tpublic static CompilationUnit createDietAST( \t\t\tIJavaProject javaProject,  \t\t\tfinal ICompilationUnit compilationUnit)", "diff": ["-\t\t\tCompilationUnit domUnit = null;", "+\t\t\tCompilationUnit domUnit = EMPTY_AST_UNIT;", "-\t\t\t\t\tdomUnit = ast;\t\t\t}", "+\t\t\t\t\tdomUnit = ast;\t\t\t", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8602d5934f33693c7e4c0bb94bb2277c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "a601b6b1bd0055831cf914eda4a394af5ff40421", "commitAfterChange": "aae3a2ae7793bc4970c4033658428e24ab5d11f5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\tchildElement = new CompilationUnit(this, child.getName(), DefaultCompilationUnitOwner.PRIMARY);", "+\t\t\t\t\t\t\tchildElement = new CompilationUnit(this, child.getName(), DefaultWorkingCopyOwner.PRIMARY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86060565a286457a09255b07a175001f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "952d6b17244ae1d0ee2f63b42ee4e3a1ef3411a9", "commitAfterChange": "9e99dfd97eaf9264bcdd3b675b4c9f32dbc2a956", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \t \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\tproposal.setDeclarationUniqueKey(currentType.computeUniqueKey());", "+\t\t\t\tproposal.setDeclarationKey(currentType.computeUniqueKey());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8608666c822f67305bfaf122f8f521c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "66cd4232d0ab1e96e3a07f02c56b8bad9d7784af", "commitAfterChange": "c4f302586af8fb051e0ee3dd72d43fa433091810", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r \tpublic INameLookup getNameLookup() throws JavaModelException", "signatureAfterChange": "\r \tpublic NameLookup getNameLookup() throws JavaModelException", "diff": ["-\tpublic INameLookup getNameLookup() throws JavaModelException {\r", "+\tpublic NameLookup getNameLookup() throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86336665060e6925feb3f4ed16713715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NullAnnotationModelTests.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void _testMissingAnnotation5() throws CoreException, InterruptedException", "signatureAfterChange": " \tpublic void _testMissingAnnotation5() throws CoreException, InterruptedException", "diff": ["-\t\t\tASTParser parser = ASTParser.newParser(AST.JLS4);", "+\t\t\tASTParser parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86418abeb7f74ebb0efffed73e4b3331", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void testInvalidTagsFieldWithMissingTagsOption()", "signatureAfterChange": " \tpublic void testInvalidTagsFieldWithMissingTagsOption()", "diff": ["-\t\trunConformTest(InvalidReferencesFieldJavadocComments);", "+\t\trunConformTest(FIELDS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "864291901275427e3aa58ef712857d5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfPackage.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public PackageBinding put(char[] key, PackageBinding value)", "signatureAfterChange": " public PackageBinding put(char[] key, PackageBinding value)", "diff": ["-\t\tif (currentKey.length == keyLength && CharOperation.prefixEquals(currentKey, key))", "+\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8646a843075b9161b16fd5a2a7b09822", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "40a1ed0c9dc0ab688d5293676f8aa97f01174e41", "commitAfterChange": "9295475f17ec96b15242bc49ff91f42882579f94", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic int getExtraDimensions()", "signatureAfterChange": "  \tpublic int getExtraDimensions()", "diff": ["-\t\treturn displacedArrayDimensions;", "+\t\treturn extraArrayDimensions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "866bac6335f16acdb0c8d14d3b9e96a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public Map<String, AnnotationTypeDeclaration> getAllAnnotationTypes(     \t\tfinal Map<BuildContext, Set<AnnotationTypeDeclaration>> file2Annotations)", "signatureAfterChange": "     public Map<String, AnnotationTypeDeclaration> getAllAnnotationTypes(     \t\tfinal Map<BuildContext, Set<AnnotationTypeDeclaration>> file2Annotations)", "diff": ["-\t\t\t\tif (decl.kind() == EclipseMirrorImpl.MirrorKind.TYPE_ANNOTATION){", "+\t\t\t\tif (decl.kind() == EclipseMirrorObject.MirrorKind.TYPE_ANNOTATION){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "868c1af71f3a695933882be6ff1d39c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "4e36742dc9fa0e7f9b45e123c8a72b7d9673b2ee", "commitAfterChange": "c68561900839d22ed60d27add792729a269fc650", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public void testContainerInitializer24() throws Exception", "signatureAfterChange": " public void testContainerInitializer24() throws Exception", "diff": ["-\t\tthread.resume();", "+\t\tthread.runToEnd();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a88600b0fddc708def4c9c0004ff2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic void testMissingCommentsErrorPrivateOverriding()", "signatureAfterChange": " \tpublic void testMissingCommentsErrorPrivateOverriding()", "diff": ["-\t\trunNegativeTest(MissingComments, resultForMissingComments(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(MISSING_COMMENTS, resultForMissingComments(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86c2948d1ad4329daa4a1ab8b09cb8db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  public void test058() throws JavaModelException", "signatureAfterChange": "  public void test058() throws JavaModelException", "diff": ["-\t\t\"method[METHOD_REF]{method(), Ljavadoc.methods.tags.BasicTestMethods;, ()V, method, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"method[METHOD_REF]{method(), Ljavadoc.methods.tags.BasicTestMethods;, ()V, method, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86e0ffd7ce793032f6a5f727764568df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public void testBug114341f() throws JavaModelException", "signatureAfterChange": "  public void testBug114341f() throws JavaModelException", "diff": ["-\t\t\"Secondary.Member[TYPE_REF]{Member, javadoc.text, Ljavadoc.text.Secondary$Member;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"Secondary.Member[TYPE_REF]{Member, javadoc.text, Ljavadoc.text.Secondary$Member;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86e61b3dc8bbb04336373c2f356e8222", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConditionalExpressionTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn setupSuite(testClass());", "+\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86f163e39f792ffedf6e12f5026bf392", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 252, "methodNumberAfterChange": 248, "signatureBeforeChange": " public void testBug109695i() throws CoreException", "signatureAfterChange": " public void testBug109695i() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"UTFDSS\", SearchPattern.R_CAMELCASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"UTFDSS\", SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86fba9bfdc26d2f6a939de495782f84c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tboolean visit(AnnotationFieldReference fieldRef, BlockScope scope);", "signatureAfterChange": " \tboolean visit(JavadocFieldReference fieldRef, BlockScope scope);", "diff": ["-\tboolean visit(AnnotationArraySingleTypeReference typeRef, BlockScope scope);", "-\tboolean visit(AnnotationFieldReference fieldRef, BlockScope scope);", "+\tboolean visit(JavadocArraySingleTypeReference typeRef, BlockScope scope);", "+\tboolean visit(JavadocFieldReference fieldRef, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87265090c44d6ae94a7eaa3eb17016c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " protected void consumePackageDeclaration()", "signatureAfterChange": " protected void consumePackageDeclaration()", "diff": ["-\t// flush annotations defined prior to import statements", "+\t// flush comments defined prior to import statements", "-\timpt.declarationSourceEnd = this.flushAnnotationsDefinedPriorTo(impt.declarationSourceEnd);", "+\timpt.declarationSourceEnd = this.flushCommentsDefinedPriorTo(impt.declarationSourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87471380a2badba3c9796581788ea040", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testDeltaBecomeWorkingCopy1() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaBecomeWorkingCopy1() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "875d30ca587dee00038e3f365043d0ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "commitAfterChange": "831d96bc5763622ed503192c35bfd6688abedd96", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 79, "signatureBeforeChange": " protected void consumeCastExpressionWithQualifiedGenericsArray()", "signatureAfterChange": " protected void consumeCastExpressionWithQualifiedGenericsArray()", "diff": ["+}", "-\tTypeReference rightSide = getTypeReference(0);", "+\tTypeReference rightSide = getUnannotatedTypeReference(0); // by design the type after . is not annotated.", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87607f5a850a6ec641d75baf7a0866e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "0aeb22995e46f30c358e82b0f30fbb77f85d3cde", "commitAfterChange": "8f9fbe48639f547ef5e11d2ef3b8f942596a7f36", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " private static SearchPattern createTypePattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\twhile (token != ITerminalSymbols.TokenNameEOF){", "+\twhile (token != TerminalTokens.TokenNameEOF){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8775fd45d25667ec6e2c483a4bcc2b22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "87058c7b8de4589df280101b3da29cf4946e087b", "commitAfterChange": "54978bea547a77e401fedd9bbb6f5ac5bee26141", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tprotected void verifyAttachSource(IPath zipPath) throws JavaModelException", "signatureAfterChange": "\r \tprotected void verifyAttachSource(IPath zipPath) throws JavaModelException", "diff": ["-\t\tif (!exists0()) {\r", "+\t\tif (!exists()) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8776725ccb217ecc9c34ae5dbed91af8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ElementInfoConverter.java", "commitBeforeChange": "44cc03459f9020b4da0ebdb14fa0624b7d8dfc4d", "commitAfterChange": "57799a8beed7490f3a4382e24299a6b44ffe4faf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration buildCompilationUnit( \t\tISourceType[] sourceTypes, \t\tboolean needLocalTypes, \t\tProblemReporter problemReporter, \t\tCompilationResult compilationResult)", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration buildCompilationUnit( \t\tSourceTypeElementInfo[] sourceTypes, \t\tboolean needLocalTypes, \t\tProblemReporter problemReporter, \t\tCompilationResult compilationResult)", "diff": ["-\t\tISourceType[] sourceTypes,", "+\t\tSourceTypeElementInfo[] sourceTypes,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "877f3a96e8ad60de4f8079540cb1fa00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SaveIndex.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\tIIndex index = this.manager.getIndex(this.containerPath, true /*reuse index file*/, false /*don't create if none*/);", "+\t\tIndex index = this.manager.getIndex(this.containerPath, true /*reuse index file*/, false /*don't create if none*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87811c9200dc9594d35abd1284787af7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexedFileHashedArray.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public IndexedFile add(IDocument document)", "signatureAfterChange": "  public IndexedFile add(SearchDocument document)", "diff": ["-public IndexedFile add(IDocument document) {", "+public IndexedFile add(SearchDocument document) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8789af43a3dd8facdbedf0c45ddf6cf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexerOutput.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void addDocument(IDocument document)", "signatureAfterChange": "  \tpublic void addDocument(SearchDocument document)", "diff": ["-\tpublic void addDocument(IDocument document) {", "+\tpublic void addDocument(SearchDocument document) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878f1139368ffc43ce9045672772a06a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "ad704373cea78f3c29e047ad44aaf6e254d7c32f", "commitAfterChange": "1a9cac53d4ac29d3f80117ac2f0972315a7c6461", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": "  \tpublic Type convertType(TypeReference typeReference)", "signatureAfterChange": "  \tpublic Type convertType(TypeReference typeReference)", "diff": ["-\t\t\t\t\t\tint end = (int) positions[0];", "+\t\t\t\t\t\tint end = (int) positions[firstTypeIndex];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "879b95547c1029e6066ffbda2cdce04b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " protected static byte[] readUntil(InputStream input, byte separator, int offset) throws IOException, JavaModelException", "signatureAfterChange": " protected static byte[] readUntil(InputStream input, byte separator, int offset) throws IOException, JavaModelException", "diff": ["-\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatus.ERROR));", "+\t\tthrow new JavaModelException(new JavaModelStatus(IStatus.ERROR));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "879f0d1633dd2511371fa84b10ac0225", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void testMethodWithError7() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError7() throws JavaModelException, CoreException", "diff": ["-\tthis.workingCopy.destroy(); // don't use the one created in setUp()", "+\tthis.workingCopy.discardWorkingCopy(); // don't use the one created in setUp()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87bb7dd5ce80db350b643b4029f956e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "commitAfterChange": "9d8f1ed123fbe8bd94c62a19d7bf62f396b087ea", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void traverse(ASTVisitor visitor, CompilationUnitScope unitScope)", "signatureAfterChange": " public void traverse(ASTVisitor visitor, CompilationUnitScope unitScope)", "diff": ["-\t\t\t\t\tthis.annotations[i].traverse(visitor, this.scope);", "+\t\t\t\t\tthis.annotations[i].traverse(visitor, this.staticInitializerScope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87c78695997013de533256c484320da9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/RunAllJava8Tests.java", "commitBeforeChange": "f041a95e804fa0b26cd4f55b03c8572e9e742dad", "commitAfterChange": "15e4d25d59c8a4322c2a033f58582a1471db63ef", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Class[] getAllTestClasses()", "signatureAfterChange": " \tpublic static Class[] getAllTestClasses()", "diff": ["-\t\t\tDefaultMethodsTest.class,", "+\t\t\tInterfaceMethodsTest.class,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87cd50dccc8024703b4061109cf1da70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "79a04f0263e415b136533a7e632b02dffebf48e5", "commitAfterChange": "8c655f859def8b91d9fbbf468abc4fac2e5cd18e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void assertSourceEquals(String message, String expected, String actual)", "signatureAfterChange": " protected void assertSourceEquals(String message, String expected, String actual)", "diff": ["-\tassertEquals(message, expected, org.eclipse.jdt.core.tests.util.Util.convertToIndependantLfs(actual));", "+\tassertEquals(message, expected, org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(actual));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87eaa5332e753a172c92991c31c3d0a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic boolean visit(AnnotationMessageSend messageSend, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(JavadocMessageSend messageSend, BlockScope scope)", "diff": ["-\tpublic boolean visit(AnnotationMessageSend messageSend, BlockScope scope) {", "+\tpublic boolean visit(JavadocMessageSend messageSend, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87eb8a344e79d54c2c981da6ed0e7af0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/StringAsserts.java", "commitBeforeChange": "41ef4898bfd4399802c4b7fddb8b2e4f958ada78", "commitAfterChange": "28a0f94188bd26e1014d346f5919c1c6d87c7904", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds)", "signatureAfterChange": "  \tpublic static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds)", "diff": ["-\t\t\tAssert.assertEquals(message, expected, actual);", "+\t\t\tTestCase.assertEquals(message, expected, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87ec1e9102d02c2e36a4d5c88b577d92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "91221983c955b9d0c8db212c3f9bfad0ff63717a", "commitAfterChange": "fb3648d5daf5dd036e13dd7df13755e136f238e8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  protected void storeTasksFor(SourceFile sourceFile, IProblem[] tasks) throws CoreException", "signatureAfterChange": "  protected void storeTasksFor(SourceFile sourceFile, IProblem[] tasks) throws CoreException", "diff": ["-\t\t\t\t\torg.eclipse.jdt.internal.compiler.util.Util.valueOf(false),", "+\t\t\t\t\torg.eclipse.jdt.internal.compiler.util.Util.toBoolean(false),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f10dee9c86ebb040bb4f348b7b9870", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testNestedSourceFolder1() throws CoreException", "signatureAfterChange": " public void testNestedSourceFolder1() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f50a632e7d04e16c956efb57028d6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "commitAfterChange": "2aa78105ee4089b7ff1a9a2c35425f71b0b156d5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r private int matchLevel(QualifiedNameReference qNameRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(QualifiedNameReference qNameRef, boolean resolve)", "diff": ["-\t\t\tswitch (qNameRef.bits & Statement.RestrictiveFlagMASK) {\r", "+\t\t\tswitch (qNameRef.bits & AstNode.RestrictiveFlagMASK) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f9cc1425b385bb5b51fc5f6a2e40a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "b8323ccd49cf224a0070d2cb1a7a617400e273ad", "commitAfterChange": "79a2912d77b5ac9bf55d643f1f89285b3b152140", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\treturn index.query(getMatchCategories(), key, matchRule); // match rule is irrelevant when the key is null", "+\treturn index.query(getIndexCategories(), key, matchRule); // match rule is irrelevant when the key is null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87fb31ad8491b55aec7fbcd298475ef8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefClassErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8809f0898d5b3047b741ea19b4583541", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "cd5ec8c17cdfceb4de927833e5a540f62cfa8d72", "commitAfterChange": "a4657a1df055a272f769463c9d20e50f1888cccd", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tpublic void test081()", "signatureAfterChange": " \tpublic void test081()", "diff": ["-\t\tpreferences.array_initializer_expressions_alignment = Alignment.M_NEXT_PER_LINE_SPLIT;", "+\t\tpreferences.array_initializer_expressions_alignment = Alignment.M_ONE_PER_LINE_SPLIT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88168f53b543e863a6a89c61e76c336c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeBound(short boundIndex)", "signatureAfterChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeBound(short boundIndex)", "diff": ["-\tpublic TypeAnnotationWalker toTypeBound(short boundIndex) {", "+\tpublic ITypeAnnotationWalker toTypeBound(short boundIndex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88187958b2730b698f66d588afbd81c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "ea1fe8ed052821b2b1ca5a7ad0079411db5ede64", "commitAfterChange": "a2a0577109951f3af96b6ee7e6f23d457b52d52d", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": " \tpublic void endVisit(VariableDeclarationStatement node)", "signatureAfterChange": " \tpublic void endVisit(IntersectionType node)", "diff": ["+\t */", "+\tpublic void endVisit(IntersectionType node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "882d0155b48cb6748a19c30683ded111", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "8a55616a15f0e12ee24162781746f45ed8c24b78", "commitAfterChange": "d7c285a09f8cde2ba05e7f838f10ce545b90c736", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public final boolean areTypesCastCompatible(BlockScope scope, TypeBinding castTb, TypeBinding expressionTb)", "signatureAfterChange": "\r public final boolean areTypesCastCompatible(BlockScope scope, TypeBinding castTb, TypeBinding expressionTb)", "diff": ["-\t\t\tif (castTb != expressionTb && (scope.compareTypes(castTb, expressionTb) == NotRelated)) {\r", "+\t\t\tif (castTb != expressionTb && (Scope.compareTypes(castTb, expressionTb) == NotRelated)) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88378d6d3887062cece48b1c717cdb40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "6b93bc47c94f281cdece9370a844218715786de0", "commitAfterChange": "5a74a1c87d1830c88bea417813f995a5ae4e1a46", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tvoid computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "signatureAfterChange": " \tvoid computeLocalVariablePositions(int ilocal, int initOffset, CodeStream codeStream)", "diff": ["-\t\tint iscope = 0, maxScopes = this.scopeIndex;", "+\t\tint iscope = 0, maxScopes = this.subscopeCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8852fa81396b36fc060f57effacdfa15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/IIndex.java", "commitBeforeChange": "e8fbf4db76f3cb4cdf82ad5223795b2651c6d983", "commitAfterChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tIQueryResult[] queryPrefix(char[] prefix) throws IOException;", "signatureAfterChange": " \tString[] queryPrefix(char[] prefix) throws IOException;", "diff": ["-\tIQueryResult[] queryPrefix(char[] prefix) throws IOException;", "+\tString[] queryPrefix(char[] prefix) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886a284f69bc52adb41bd2a51a42148f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testClasspathDeleteNestedRootParent() throws CoreException", "signatureAfterChange": " public void testClasspathDeleteNestedRootParent() throws CoreException", "diff": ["-\tIJavaProject project = this.createJavaProject(\"P\", new String[] {\"nested/src\"}, new String[] {getExternalJCLPath()}, \"bin\");", "+\tIJavaProject project = this.createJavaProject(\"P\", new String[] {\"nested/src\"}, new String[] {getExternalJCLPathString()}, \"bin\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "886f1e1a1d5700640366670afc5a8917", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c2ffe8ad8d598fb546a580542eaede433f8f8195", "commitAfterChange": "997cc1d41c2226e34baef319ef2ec522841d939f", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "\r \tpublic boolean hasClasspathCycle(IClasspathEntry[] entries)", "signatureAfterChange": "\r \tpublic boolean hasClasspathCycle(IClasspathEntry[] entries)", "diff": ["-\t\tupdateCycleParticipants(entries, new HashSet(), cycleParticipants, getWorkspace().getRoot());\r", "+\t\tupdateCycleParticipants(entries, new ArrayList(), cycleParticipants, getWorkspace().getRoot());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88716c8e55b2989866deefce986038cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "a8f2b9d6f31a63759a85bef6a1ed8cbb23fbd3fa", "commitAfterChange": "ce41f66e0706b1b71981331d2b2667a0940a3697", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\tswitch (ScannerHelper.ObviousIdentCharNatures[c]) {", "+\t\t\t\t\t\tswitch (ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c]) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88767cdb7f5b0679b0ba0e3b27a8f2b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a1ff28ac223849c97245f375d1a90ff15a9f8909", "commitAfterChange": "ad9419ce2b413384a1310dd9b222d0ccd125407d", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding, \t\tScope scope)", "signatureAfterChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding, \t\tScope scope)", "diff": ["-\t\t\t\t//TODO(david) update this code once bug 157177 will be fixed. ", "-\t\t\t\t//searchFor = IJavaSearchConstants.INTERFACE;", "-\t\t\t\tsearchFor = IJavaSearchConstants.TYPE;", "+\t\t\t\tsearchFor = IJavaSearchConstants.INTERFACE_AND_ANNOTATION;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8893d95030b9794525e0ac3d8ed9c6ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/InnerTypeCompletionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(InnerTypeCompletionTest.class);", "+\treturn buildAllCompliancesTestSuite(InnerTypeCompletionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "889c9b5d0336813cdbc9a6070106e6fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "20fa95b73616c543b99afd6d679821c3656bc2c0", "commitAfterChange": "352a6b3632e783ec973d0eb1934de53298ffaf7d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected boolean isVirtualInvoke(MethodBinding method, MessageSend messageSend)", "signatureAfterChange": " protected boolean isVirtualInvoke(MethodBinding method, MessageSend messageSend)", "diff": ["-\t\t\t&& !CharOperation.equals(this.pattern.declaringQualification, method.declaringClass.qualifiedPackageName()));", "+\t\t\t&& !CharOperation.equals(this.pattern.declaringPackageName, method.declaringClass.qualifiedPackageName()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88b2bafaa8fb568998620adc674cb156", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 244, "methodNumberAfterChange": 240, "signatureBeforeChange": " public void testBug109695() throws CoreException", "signatureAfterChange": " public void testBug109695() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"IDE3\", SearchPattern.R_CAMELCASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"IDE3\", SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88c2b277badef1c798992df7a1e716e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SortCompilationUnitElementsTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void setUpSuite() throws Exception", "signatureAfterChange": " public void setUpSuite() throws Exception", "diff": ["-\tthis.createJavaProject(\"P\", new String[] {\"src\"}, new String[] {getExternalJCLPath()}, \"bin\");", "+\tthis.createJavaProject(\"P\", new String[] {\"src\"}, new String[] {getExternalJCLPathString()}, \"bin\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e41d4760e2883b2e79df17c996451e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "a2a25daab3f792071cba7e3d51c3d2abf00c6c2a", "commitAfterChange": "8bffc680730baeb75a0764c02d5d9479eee4502e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "signatureAfterChange": "  \tprivate Object reduceReferenceExpressionCompatibility(ReferenceExpression reference, InferenceContext18 inferenceContext)", "diff": ["-\t\t\t\tInvocationRecord prevInvocation = inferenceContext.enterPolyInvocation(reference, null/*no invocation arguments available*/);", "+\t\t\t\tSuspendedInferenceRecord prevInvocation = inferenceContext.enterPolyInvocation(reference, null/*no invocation arguments available*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88e789d27c037992430e88d7429d7fff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "8cb3365a924e5869d5c8a5715a80d4cd8189b243", "commitAfterChange": "4ec04ec7ec987de2e86c2ac8cdacbf6a8acd72a4", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public ReferenceBinding superclass()", "signatureAfterChange": " public ReferenceBinding superclass()", "diff": ["-\t\tthis.typeBits |= applyCloseableWhitelists();", "+\t\tthis.typeBits |= applyCloseableClassWhitelists();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88f022cff0d570cf3012070280c9e818", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/FieldInfo.java", "commitBeforeChange": "8b559ddce6982a78fabc126c4d719f68c189bfdb", "commitAfterChange": "99f1f2030748a78aa47d20289420461bb423e8b1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r private void readConstantAttribute()", "signatureAfterChange": "\r private void readConstantAttribute()", "diff": ["-\t\tint utf8Offset = constantPoolOffsets[u2At(8)] - structOffset;\r", "+\t\tint utf8Offset = constantPoolOffsets[u2At(readOffset)] - structOffset;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88f9d1c72f2324bb4903f7fd5d30742b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": " public boolean hasIncompatibleSuperType(ReferenceBinding otherType)", "signatureAfterChange": " public boolean hasIncompatibleSuperType(ReferenceBinding otherType)", "diff": ["-\tReferenceBinding match;", "+\tTypeBinding match;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88fc0aed5c4beecb7cbfc182e95c3f5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "0050ce1e7f4e1aa09d2a0680eb2a656c745b9584", "commitAfterChange": "c557f8e28df32d4f3742c65d1f4547b281353194", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tpublic void init()", "signatureAfterChange": "\r \tpublic void init()", "diff": ["-\t\tfiles= new ArrayList(101);\r", "+\t\tfiles= new IndexedFileHashedArray(101);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88fc14f5c3969ba29b2315ba3c088a23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "8ee98e6a6bea64a8753c8da0062862e8729bd32e", "commitAfterChange": "7757a5934fde86433c9c42221d6117d1b7f29e23", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "diff": ["-\t\t\tif (node.isVariableArity()) {", "+\t\t\tif (node.isVarargs()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "891e2c1bcce8dfc4195da7676e6b9697", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "signatureAfterChange": "  \tprivate void findConstructors( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean forAnonymousType)", "diff": ["-\t\t\t\t\t\t\tif (!scope.areTypesCompatible(argTypes[a], constructor.parameters[a]))", "+\t\t\t\t\t\t\tif (!Scope.areTypesCompatible(argTypes[a], constructor.parameters[a]))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89210b2915a242fae4221431d4eca2a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic final void computeConstant(TypeBinding leftType, TypeBinding rightType)", "signatureAfterChange": " \t \tpublic final void computeConstant(TypeBinding leftType, TypeBinding rightType)", "diff": ["-\t\t\t\tconstant = Constant.fromValue(!constant.booleanValue());", "+\t\t\t\tconstant = BooleanConstant.fromValue(!constant.booleanValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8925e8ed621a7c964f4b60ff5e64188d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "b7270c3ed9751063a7847ef78467ed5c4c4a29fb", "commitAfterChange": "977e8ed039bc5fdb82d37a11a403feebdf8e113c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public AnnotationBinding[][] getParameterAnnotations()", "signatureAfterChange": " public AnnotationBinding[][] getParameterAnnotations()", "diff": ["-\t\t\t\tAbstractMethodDeclaration methodDecl = sourceType.scope.referenceType().declarationOf(this);", "+\t\t\t\tAbstractMethodDeclaration methodDecl = sourceType.scope.referenceType().declarationOf(originalMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89308f87fc026d17518d7b56319eadae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "\r \tprotected final MethodBinding mostSpecificClassMethodBinding(MethodBinding[] visible, int visibleSize)", "signatureAfterChange": "\r \tprotected final MethodBinding mostSpecificClassMethodBinding(MethodBinding[] visible, int visibleSize)", "diff": ["-\t\t\tcompilationUnitScope().recordReferences(method.thrownExceptions);\r", "+\t\t\tcompilationUnitScope().recordTypeReferences(method.thrownExceptions);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8937599f2ca177a6092b8433f2cab3de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void writeState()", "signatureAfterChange": " \tpublic void writeState()", "diff": ["-\t\t_parentToGenFiles.writeState();", "+\t\t_buildDeps.writeState();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "893dacf42b12a03380523d1240ac86ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " protected CompilationUnitDeclaration endParse(int act)", "signatureAfterChange": " protected CompilationUnitDeclaration endParse(int act)", "diff": ["-\t\t\t\tconsumeTypeDeclarationsopt();", "+\t\t\t\tconsumeInternalCompilationUnitWithTypes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "894284d4ed394a679dce0027d5f9f4e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic MethodBinding findExactMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findExactMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\tif (receiverType.id != T_Object", "+\t\t\t\tif (receiverType.id != T_JavaLangObject"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8942a8e80ef9d44de689b441f3798f2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "0aeb22995e46f30c358e82b0f30fbb77f85d3cde", "commitAfterChange": "8f9fbe48639f547ef5e11d2ef3b8f942596a7f36", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void format()", "signatureAfterChange": " \tprivate void format()", "diff": ["-\t\t\t\t\tif (token == ITerminalSymbols.TokenNameCOMMENT_LINE) {", "+\t\t\t\t\tif (token == TerminalTokens.TokenNameCOMMENT_LINE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "895d9265e386a020ae79b4deec9c643c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject2() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject2() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "895f0a1fdaf8d4b5f17d1fc4ceef8efd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "fe94bdafb4bfe9680e0611bb6d3516015883724d", "commitAfterChange": "36e008ae8c0787e84c5baff75eebd30e31e47cce", "methodNumberBeforeChange": 465, "methodNumberAfterChange": 465, "signatureBeforeChange": " \tpublic void test463()", "signatureAfterChange": " \tpublic void test463()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "898c00b4b2b95289ba943dfe8e251c38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Javadoc.java", "commitBeforeChange": "9528b13b60b5267a27dfdeac3b8ea9a804476535", "commitAfterChange": "ef0d751764a03bfb7b7e9d8838fc454e1e51fa0c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void resolve(MethodScope methScope)", "signatureAfterChange": " \tpublic void resolve(MethodScope methScope)", "diff": ["-\t\t\t\t\t\t\tif (methDecl.binding.declaringClass.isCompatibleWith(messageSend.receiverType) &&", "+\t\t\t\t\t\t\tif (methDecl.binding.declaringClass.isCompatibleWith(messageSend.actualReceiverType) &&"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8999ca2f40fb04d7c0955035a2f24cd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  public void testCompletionMethodDeclaration8() throws JavaModelException", "signatureAfterChange": "  public void testCompletionMethodDeclaration8() throws JavaModelException", "diff": ["-\t\t\"element:clone    completion:protected Object clone() throws CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\t\t\"element:clone    completion:protected Object clone() throws CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "899c500391cc6a9db453a64d403a4b63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e76466b5729fd993ef3dcc80ae6ab76bd33e5dcd", "commitAfterChange": "e0c80c2b16b54e5a1c86d6779d617fb326a5c618", "methodNumberBeforeChange": 288, "methodNumberAfterChange": 288, "signatureBeforeChange": " public void optimizeBranch(int oldPosition, BranchLabel lbl)", "signatureAfterChange": " public void optimizeBranch(int oldPosition, BranchLabel lbl)", "diff": ["-\t\t\t\t\tthis.writeWidePosition(forwardPosition, offset);", "+\t\t\t\t\tthis.writeSignedShort(forwardPosition, offset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89a52e1a33d5ee0e095bb6fb0b000c2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuiteWithMinimalCompliance(testClass(), F_1_3);", "+\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89c9717384ce286aef88c388c4906c4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic boolean visit( \t\tLocalTypeDeclaration localTypeDeclaration, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tTypeDeclaration localTypeDeclaration, \t\tBlockScope scope)", "diff": ["-\t */", "-\tpublic boolean visit(", "-\t\tLocalTypeDeclaration localTypeDeclaration,", "-\t\tBlockScope scope) {", "-", "-\t\t\tformat(localTypeDeclaration);", "-\t\t\treturn false;", "-\t}", "+\t */", "+\tpublic boolean visit(", "+\t\tTypeDeclaration localTypeDeclaration,", "+\t\tBlockScope scope) {", "+", "+\t\t\tformat(localTypeDeclaration);", "+\t\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89d38147a24df251e2b6f35f08969be6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tprotected void updateCycleMarkersIfNecessary()", "signatureAfterChange": " \tprotected void updateCycleMarkersIfNecessary()", "diff": ["-\t\tif (!this.canChangeResource) return;", "+\t\tif (!this.canChangeResources) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89f95a1ff52e55c1dc21ae0cfb734d0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "a3e63b72d2efd2058d202d3e2711391afc827fec", "commitAfterChange": "f0131d199789fbf75036ba10803faed4ef08b399", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void testSuggestFieldName025()", "signatureAfterChange": " public void testSuggestFieldName025()", "diff": ["-\t\t\tNamingConventions.VK_CONSTANT_FIELD,", "+\t\t\tNamingConventions.VK_STATIC_FINAL_FIELD,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a03982c1f5ced6af2751cfd0d876c49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void testDeltaDiscardPrimaryWorkingCopy3() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaDiscardPrimaryWorkingCopy3() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a48336943f126223131ee75ffb338f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest_1_4.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuiteUniqueCompliance(testClass(), COMPLIANCE_1_4);", "+\t\treturn buildComplianceRegressionSetupSuite(testClass(), COMPLIANCE_1_4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a4c6cd1fb863e0120bdec552f2cf167", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "f60c0face3ba2b87651b85d85b64101707cb246a", "commitAfterChange": "0500d43a75bf65b406995baa7b110dc9d0f7b60c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\tbuf.append(\"\\n\\t- autoboxing: \").append(getSeverityString(Autoboxing)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- autoboxing: \").append(getSeverityString(AutoBoxing)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a4e6345b2942b4b1811d95eb862ac0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 513, "methodNumberAfterChange": 513, "signatureBeforeChange": " public void testCompletionKeywordFinal14() throws JavaModelException", "signatureAfterChange": " public void testCompletionKeywordFinal14() throws JavaModelException", "diff": ["-\t\t\t\"element:finalize    completion:protected void finalize() throws Throwable    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\t\t\t\"element:finalize    completion:protected void finalize() throws Throwable    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a704155226a90c523c74c676812f183", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LocalVariableTest.java", "commitBeforeChange": "4eaa1f1fc9e841c11eaca436ac06f8635b8543bd", "commitAfterChange": "f73fdb0a354f2f38e3faeb7d9eceabb3d85530d5", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void test412119b()", "signatureAfterChange": " public void test412119b()", "diff": ["-\toptions.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.ERROR);", "+\toptions.put(CompilerOptions.OPTION_ReportUnusedExceptionParameter, CompilerOptions.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a7f8f0aaa7c4a6a3052853bd9e763ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " private void remember(IType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private void remember(IType type, ReferenceBinding typeBinding)", "diff": ["-\t\t\ttypeDeclaration.getKind(),", "+\t\t\ttypeDeclaration.kind(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a8b514cc602b7f65245829e046ff24f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": " \tpublic void testFieldDeclaration()", "signatureAfterChange": " \tpublic void testFieldDeclaration()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a8c08913ef0c5da16ada21957602907", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "7a1c3f0abab2342889b25f645c23994ef13ac53b", "commitAfterChange": "e8dcb35615461f6a094496cfd7d96ef4f177fce5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tpublic boolean isPackage(String[] pkgName)", "signatureAfterChange": " \t \tpublic boolean isPackage(String[] pkgName)", "diff": ["-\t\treturn this.isPackageCache.get(pkgName) != null;", "+\t\treturn this.packageFragments.get(pkgName) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a9232a435abf56fa0a75e1dff6f7f2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "3f7005a0871fcb7d7a1699e425a2f234bc953d0d", "commitAfterChange": "68a2bffb2ef113791e7865f758ad7b89513dbbfb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration parse( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap settings, \t\t\tint flags)", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration parse( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap settings, \t\t\tint flags)", "diff": ["-\t\t\treturn null;", "+\t\t\treturn compilationUnitDeclaration;", "-\t \t\t\treturn compilationUnitDeclaration;", "+\t\t\t\treturn compilationUnitDeclaration;", "-\t \t\tif (node == null) {", "-\t \t\t\treturn compilationUnitDeclaration;", "-\t \t\t}", "+\t\t\tif (node == null) {", "+\t\t\t\treturn compilationUnitDeclaration;", "+\t\t\t}", "-\t \t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration enclosingTypeDeclaration = nodeSearcher.enclosingType;", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration enclosingTypeDeclaration = nodeSearcher.enclosingType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ace0bc0bfe74e456853fd5c3be077f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected Openable[] createElements(IResource resource)", "signatureAfterChange": "\r protected Openable[] createElements(IResource resource)", "diff": ["-\t\t\t\tIClasspathEntry[] entries = project.getResolvedClasspath(true);\r", "+\t\t\t\tIClasspathEntry[] entries = project.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ad14ce191d8ab44463c6bf47232908b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "6c8a21e16cbda0092cdd37cfe45b5e7adb8a3039", "commitAfterChange": "1aec0ecbb4ca25bac2a6fb4145ea7c0b2ac36a74", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "signatureAfterChange": " public void notifySourceElementRequestor(TypeDeclaration typeDeclaration, boolean notifyTypePresence)", "diff": ["-\t\t\t\t\t\t\tCharOperation.concatWith(bounds[i].getParameterizedTypeName(), '.'); ", "+\t\t\t\t\t\t\tCharOperation.concatWith(bounds[j].getParameterizedTypeName(), '.'); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b1faabad956d97aac69f0fb14372080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "058f4956c302999db0dab277cf91883f2d016e2b", "commitAfterChange": "27d9d524a3b624cfc1260a727d1dfb92d53ae22a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "diff": ["-\t\t\t\tif ((argument.bits & UnnecessaryCastMask) == 0 && argument.resolvedType.isBaseType()) {", "+\t\t\t\tif ((argument.bits & UnnecessaryCastMASK) == 0 && argument.resolvedType.isBaseType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b209b7cf14e410941da49e66f576797", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "24134b187b46ea16212a45107324227f46ba3e4a", "commitAfterChange": "496121d0ad975842fb45544aac592b8195531ce7", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 40, "signatureBeforeChange": "  \tpublic void printComment()", "signatureAfterChange": "  \tpublic void printComment()", "diff": ["-\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tthis.printLineComment(this.scanner.getRawTokenSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b22e78b513d2c601f0765acad43811b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForAssert(BlockScope blockScope)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForAssert(BlockScope blockScope)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b2dd53f1468005391e99dd440153fab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CodeCorrectionTestsRequestor.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate Suggestion[] getSortedSuggestions()", "signatureAfterChange": " \t \tprivate Suggestion[] getSortedSuggestions()", "diff": ["-\t\tObject[] unsorted = fSuggestions.toArray();", "+\t\tObject[] unsorted = suggestions.toArray();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b503c7acb70462aaa37f7752d79a7cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "62ce2e8c5f0cb8acac7a47921bf6e9ae7974c7a1", "commitAfterChange": "3c755125fb6d43834cd7c6dfb58024a6d397b566", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  public void test058() throws JavaModelException", "signatureAfterChange": "  public void test058() throws JavaModelException", "diff": ["-\t\t\"method[METHOD_REF]{method(), Ljavadoc.methods.tags.BasicTestMethods;, ()V, method, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"method[METHOD_REF]{method(), Ljavadoc.methods.tags.BasicTestMethods;, ()V, method, null, \"+this.positions+R_DICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b541c51b2d18611aad13dcce3b1f63c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "commitAfterChange": "9d8f1ed123fbe8bd94c62a19d7bf62f396b087ea", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void traverse(ASTVisitor visitor, ClassScope classScope)", "signatureAfterChange": " public void traverse(ASTVisitor visitor, ClassScope classScope)", "diff": ["-\t\t\t\t\tthis.annotations[i].traverse(visitor, this.scope);", "+\t\t\t\t\tthis.annotations[i].traverse(visitor, this.staticInitializerScope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b5e09a1feec14a3fe9209ebeca718dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/NestedTypeBinding.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic SyntheticArgumentBinding addSyntheticArgumentAndField(LocalVariableBinding actualOuterLocalVariable)", "signatureAfterChange": " \tpublic SyntheticArgumentBinding addSyntheticArgumentAndField(LocalVariableBinding actualOuterLocalVariable)", "diff": ["-\t\t\tsynthLocal.matchingField = addSyntheticField(actualOuterLocalVariable);", "+\t\t\tsynthLocal.matchingField = addSyntheticFieldForInnerclass(actualOuterLocalVariable);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b6076e0b26594466b30823f102be3d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": "\r final public void ifnull(Label lbl)", "signatureAfterChange": "\r final public void ifnull(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_ifnull, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_ifnull, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b6c6b9271dcad266388723f84668129", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "b31cd8ccd51413655d3e805905e8dd7d1404f391", "commitAfterChange": "56279d048bf630d57d8fac349861b864730cf774", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tfinal ASTNode internalGetSetChildProperty(ChildPropertyDescriptor property, boolean get, ASTNode child)", "signatureAfterChange": " \tfinal ASTNode internalGetSetChildProperty(ChildPropertyDescriptor property, boolean get, ASTNode child)", "diff": ["-\t\t\t\tsetReceiverType((AnnotatableType) child);", "+\t\t\t\tsetReceiverType((Type) child);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b75258c8e5d5fe66d0ab4d72fd762e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "0f3488dac4b5e77709c2ba33d94446481058e6f7", "commitAfterChange": "99350dc001d49db8dc24214c00ce73e1cd4de055", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\taddInitializationsFrom(condInfo.initsWhenFalse());", "+\t\t\t\t\taddNullInfoFrom(condInfo.initsWhenFalse());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8bc8099c18a039debf4d7f7cbac70c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public boolean isCompatibleWith(TypeBinding otherType)", "signatureAfterChange": " public boolean isCompatibleWith(TypeBinding otherType)", "diff": ["-\tif (otherType.id == T_Object)", "+\tif (otherType.id == T_JavaLangObject)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b8ceee346350f4d71c0b4914eb7cbee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public void test045() throws JavaModelException", "signatureAfterChange": "  public void test045() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b93543d6da5a7ce0c08b0997cd02a57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic TypeBinding resolveTypeExpecting( \t\t\tBlockScope scope, \t\t\tTypeBinding expectedType)", "signatureAfterChange": " \tpublic TypeBinding resolveTypeExpecting( \t\t\tBlockScope scope, \t\t\tTypeBinding expectedType)", "diff": ["-\t\t\t\t&& (this.lhs.bits & IsStrictlyAssignedMASK) != 0) {", "+\t\t\t\t&& (this.lhs.bits & IsStrictlyAssigned) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8baf74cb3c249b779d24c4c52b8a6e9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "985bbf877eb7f0470a093f3a8cf5e47ddbe7045f", "commitAfterChange": "6d56fa2ff304c66dffb3921f7844c0b14acec01a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public void completeTypeBindings()", "signatureAfterChange": "  public void completeTypeBindings()", "diff": ["-\t\tunitScope.checkParameterizedTypeBounds();", "+\t\tunitScope.checkParameterizedTypes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bb950f78bb2ed0c684f14e3576f47a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "signatureAfterChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceType(), packageBinding);\r", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), packageBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bc07e8f0dcacb2914b66e224a3ca599", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.pluggable.core/src/org/eclipse/jdt/internal/apt/pluggable/core/filer/IdeJavaSourceFileWriter.java", "commitBeforeChange": "4aad3541005b227c1c4489d6142b68e14885b9dc", "commitAfterChange": "c69c700b22ba98a95d56e16f7365ecaf28392cdd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic IdeJavaSourceFileWriter(IdeProcessingEnvImpl env, CharSequence name, List<IFile> parentFiles)", "signatureAfterChange": "  \tpublic IdeJavaSourceFileWriter(IdeProcessingEnvImpl env, CharSequence name, Collection<IFile> parentFiles)", "diff": ["-\tpublic IdeJavaSourceFileWriter(IdeProcessingEnvImpl env, CharSequence name, List<IFile> parentFiles) {", "+\tpublic IdeJavaSourceFileWriter(IdeProcessingEnvImpl env, CharSequence name, Collection<IFile> parentFiles) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bcb4af6bdda36dc54a9a87418b61808", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 383, "methodNumberAfterChange": 383, "signatureBeforeChange": "  public void parse( \tInitializer initializer,  \tTypeDeclaration type,  \tCompilationUnitDeclaration unit)", "signatureAfterChange": "  public void parse( \tInitializer initializer,  \tTypeDeclaration type,  \tCompilationUnitDeclaration unit)", "diff": ["-\tif(this.options.performStatementsRecovery) {", "+\tif(this.options.performMethodsFullRecovery) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bda57a6cee455c01f39b1ed98b61d6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrLocator.java", "commitBeforeChange": "da751e82ab0e645d2074c217491c32d335824364", "commitAfterChange": "1c323836aef7c6d21afe597642c9f7a415d72ddd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public int match(MethodDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(LocalDeclaration node, MatchingNodeSet nodeSet)", "diff": ["+public int match(LocalDeclaration node, MatchingNodeSet nodeSet) {", "+\tint level = IMPOSSIBLE_MATCH;", "+\tfor (int i = 0, length = this.patternLocators.length; i < length; i++) {", "+\t\tint newLevel = this.patternLocators[i].match(node, nodeSet);", "+\t\tif (newLevel > level) {", "+\t\t\tif (newLevel == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t\t\tlevel = newLevel;", "+\t\t}", "+\t}", "+\treturn level;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bddd50c2dc421b7fc1717f2c56cd161", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "76a2ec884825e9edb380555c61500f23750ece32", "commitAfterChange": "0dc9f4a7cc769fd0c2e397d6cc32c352b61f03b4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void set(Map optionsMap)", "signatureAfterChange": "  \tpublic void set(Map optionsMap)", "diff": ["-\t\tif ((optionValue = optionsMap.get(OPTION_ReportUnusedTypeArgumentsForMethodInvocation)) != null) updateSeverity(UnusedTypeArgumentsForMethodInvocation, optionValue);", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportUnusedTypeArgumentsForMethodInvocation)) != null) updateSeverity(UnusedTypeArguments, optionValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bfec66a0315c018bf01cdd49cf0128a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/BatchFilerImpl.java", "commitBeforeChange": "70c7b91219f1abe7757608bdb335ee87fa26cb28", "commitAfterChange": "4f113d7aa945e602017e7829c71f3e73f6f0d8c6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t@Override \tpublic JavaFileObject createSourceFile(CharSequence name, \t\t\tElement... originatingElements) throws IOException", "signatureAfterChange": " \t@Override \tpublic JavaFileObject createSourceFile(CharSequence name, \t\t\tElement... originatingElements) throws IOException", "diff": ["-\t\t\t\tStandardLocation.SOURCE_OUTPUT, name.toString(), JavaFileObject.Kind.CLASS, null);", "+\t\t\t\tStandardLocation.SOURCE_OUTPUT, name.toString(), JavaFileObject.Kind.SOURCE, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c051a7bb84c99a77cede84582997dae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/State.java", "commitBeforeChange": "75c0ccb1e2c68587a8e2efbb2a478d71f7d635f3", "commitAfterChange": "609fffed3b87f52a54bf7c5a8d78a7d4a163c8cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r void cleanup()", "signatureAfterChange": "\r \r void cleanup()", "diff": ["-\t\tclasspathLocations[i].clear();\r", "+\t\tclasspathLocations[i].cleanup();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c0f336a49e38e975ea4e9ba7ab4e1db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "458161dc550c876a0d717a9a36eda696046c367f", "commitAfterChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public void reportReference( \tAstNode reference, \tTypeDeclaration typeDeclaration, \tFieldDeclaration fieldDeclaration, \tIJavaElement parent, \tint accuracy) \tthrows CoreException", "signatureAfterChange": " public void reportReference( \tAstNode reference, \tTypeDeclaration typeDeclaration, \tFieldDeclaration fieldDeclaration, \tIJavaElement parent, \tint accuracy) \tthrows CoreException", "diff": ["-\tthis.pattern.matchReportReference(reference, enclosingElement, accuracy, this);", "+\tthis.patternLocator.matchReportReference(reference, enclosingElement, accuracy, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c17dc2fc26e229c004441e18b8090ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyElementsOperation.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected JavaModelOperation getNestedOperation(IJavaElement element)", "signatureAfterChange": " protected JavaModelOperation getNestedOperation(IJavaElement element)", "diff": ["-\t\t\t\t\treturn new RenameResourceElementsOperation(new IJavaElement[] {dest}, new IJavaElement[] {dest.getParent()}, new String[]{getNewNameFor(element) + \".java\"}, fForce); //$NON-NLS-1$", "+\t\t\t\t\treturn new RenameResourceElementsOperation(new IJavaElement[] {dest}, new IJavaElement[] {dest.getParent()}, new String[]{getNewNameFor(element) + SUFFIX_STRING_java}, fForce); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1acee43d5a168106d2b86ce764a844", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ProblemReferenceBinding.java", "commitBeforeChange": "fe80e0e35769c28ef9eab3d756180ade13a59126", "commitAfterChange": "8bbab36b30f52fd2cf2185f7c9fd80a985623079", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r public char[] readableName()", "signatureAfterChange": "\r \r public char[] readableName()", "diff": ["-\t\treturn super.readableName();\r", "+\t\treturn original.readableName();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c1c48606d17daf8563164ffad9ec802", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "7a73f29da5ea73cce41fc54b0fc3ad302149f476", "commitAfterChange": "01023454337af8ada2f5699e5de8fcd7a8d40840", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "  \tprivate void annotateType(Type type, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations)", "signatureAfterChange": "  \tprivate void annotateType(AnnotatableType type, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations)", "diff": ["-\tprivate void annotateType(Type type, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations) {", "+\tprivate void annotateType(AnnotatableType type, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c27faf9efdc4bb4c3c7cae2c68b2ab9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c46748ab800a2e04d3b0e325d1930aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": " public void if_icmpeq(Label lbl)", "signatureAfterChange": " public void if_icmpeq(BranchLabel lbl)", "diff": ["-public void if_icmpeq(Label lbl) {", "+public void if_icmpeq(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c52d7c74c0929b5de854468587cb850", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic ISchedulingRule getSchedulingRule()", "signatureAfterChange": " \tpublic ISchedulingRule getSchedulingRule()", "diff": ["-\t\tIResource resource = getResource();", "+\t\tIResource resource = resource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c97b76f769dd2fa9875f665d77cf795", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "e6029c8b1adfe1296ee554ed42f00e5a663cecbf", "commitAfterChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic void endVisit(ParameterizedType node)", "signatureAfterChange": " \tpublic void endVisit(PackageQualifiedType node)", "diff": ["+\tpublic void endVisit(PackageQualifiedType node) {", "+\t\tendVisitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ca9c58b7b1c980844828f3d5e7a2220", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, HashMap packageFragments, ICompilationUnit[] workingCopies)", "signatureAfterChange": "  \tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, Map packageFragments, ICompilationUnit[] workingCopies)", "diff": ["-\tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, HashMap packageFragments, ICompilationUnit[] workingCopies) {", "+\tpublic NameLookup(IPackageFragmentRoot[] packageFragmentRoots, Map packageFragments, ICompilationUnit[] workingCopies) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cc7a8bec0db5991e1432672190f1bcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefConstructorErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefConstructorErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ccda993ecc70253fd989de790e33d4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "b109cd3d462ef2ec88eb96486f6150cd6e4478d8", "commitAfterChange": "d2154b0683428d3e74f4d64059d8a56744656f26", "methodNumberBeforeChange": 178, "methodNumberAfterChange": 178, "signatureBeforeChange": "  \tpublic void shutdown ()", "signatureAfterChange": "  \tpublic void shutdown ()", "diff": ["-\t\t\tPlatform.getJobManager().join(JavaCore.PLUGIN_ID, null);", "+\t\t\tJob.getJobManager().join(JavaCore.PLUGIN_ID, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cd65ac663f88919390ddc357f3880e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 233, "methodNumberAfterChange": 233, "signatureBeforeChange": " public void optimizeBranch(int oldPosition, Label lbl)", "signatureAfterChange": " public void optimizeBranch(int oldPosition, BranchLabel lbl)", "diff": ["-public void optimizeBranch(int oldPosition, Label lbl) {", "+public void optimizeBranch(int oldPosition, BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cf1316e5cc99a4e57e2fd76fae4a028", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/SwitchTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d073bc497dc3b43ef8d087bbcb91557", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "e1051acac48de2e59e4c3d2d0f46898b4067bf9a", "commitAfterChange": "25dbd9e17c7b6920dccf1b458296dbbe00f382de", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 147, "signatureBeforeChange": " \tpublic void endVisit(PackageQualifiedType node)", "signatureAfterChange": " \tpublic void endVisit(NameQualifiedType node)", "diff": ["+\t */", "+\tpublic void endVisit(NameQualifiedType node) {", "+\t\t// default implementation: do nothing", "+\t}", "-\t */", "-\tpublic void endVisit(PackageQualifiedType node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d1521f9975a6b139a4de4e22178645a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tif ((thenFlowInfo.tagBits & FlowInfo.UNREACHABLE) != 0) {", "+\tif ((thenFlowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d24a8229dcac2a37a678960efc6c49a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\treturn this.expressionType = binding.returnType;", "+\treturn this.resolvedType = binding.returnType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d28853d1ac7df31fe718d3f394b9c36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "diff": ["-\t\t\tif (method_declaration_brace.equals(FormattingPreferences.NEXT_LINE_SHIFTED)) {", "+\t\t\tif (method_declaration_brace.equals(DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d2dbf6690e08905e8647e213251cd35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy.java", "commitBeforeChange": "1d93c592655130ee83ccf569199d32491937354e", "commitAfterChange": "b60bff4501141ce0e7ed5fab43805b77b52b5e19", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element)", "signatureAfterChange": " protected boolean isAffectedByOpenable(IJavaElementDelta delta, IJavaElement element)", "diff": ["-\tif (this.type == null) {", "+\tif (this.focusType == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d32a1b52b437f0d1ecb85dc681427bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "20d87d7260da51837a3bc4f2cefbc874868e947f", "commitAfterChange": "b780374be3c7661000af7572b9b8f18e78e84d97", "methodNumberBeforeChange": 181, "methodNumberAfterChange": 181, "signatureBeforeChange": " public void invalidType(ASTNode location, TypeBinding type)", "signatureAfterChange": " public void invalidType(ASTNode location, TypeBinding type)", "diff": ["-\t\t\tid = IProblem.TypeVariableReferenceFromStaticContext;", "+\t\t\tid = IProblem.NonStaticTypeFromStaticInvocation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d3433a24f55f6b808acc1037db9b7f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "7bf89e29c34a348a2ed388f7cdb6c1016941cf61", "commitAfterChange": "cd5adcef3921beea7df4f6703ab58225bdb4ec39", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " public void invalidUsageOfAnnotationDeclarations(AnnotationTypeDeclaration annotationTypeDeclaration)", "signatureAfterChange": " public void invalidUsageOfAnnotationDeclarations(TypeDeclaration annotationTypeDeclaration)", "diff": ["-public void invalidUsageOfAnnotationDeclarations(AnnotationTypeDeclaration annotationTypeDeclaration) {", "+public void invalidUsageOfAnnotationDeclarations(TypeDeclaration annotationTypeDeclaration) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d5c873796e4dcb1e1a3af9259a39b3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/StringAsserts.java", "commitBeforeChange": "bcd9f90c4bf8ea31b98c4f2aa0b3396ae50236cb", "commitAfterChange": "44a4773fe1e43ab7b0b1007569e920d404685d06", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds)", "signatureAfterChange": "  \tpublic static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds)", "diff": ["-\t\t\tAssert.assertEquals(message, expected, actual);", "+\t\t\tTestCase.assertEquals(message, expected, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d6514a454f09fdef7434c4807b9c2b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": "  \tpublic void test030()", "signatureAfterChange": "  \tpublic void test030()", "diff": ["-\t\tpreferences.format_guardian_clause_on_one_line = true;", "+\t\tpreferences.keep_guardian_clause_on_one_line = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d667b2873044bd033602f888d702b7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NormalAnnotation.java", "commitBeforeChange": "96a8824b1e471f1db4dd22f336aec5c7ff8c583e", "commitAfterChange": "45a4bf71a614f82f4a9506597605186918f4c34e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope)", "diff": ["-\tpublic void traverse(ASTVisitor visitor, ClassScope scope) {", "-\t\tif (visitor.visit(this, scope)) {", "-\t\t\tif (this.memberValuePairs != null) {", "-\t\t\t\tint memberValuePairsLength = this.memberValuePairs.length;", "-\t\t\t\tfor (int i = 0; i < memberValuePairsLength; i++)", "-\t\t\t\t\tthis.memberValuePairs[i].traverse(visitor, scope);", "-\t\t\t}", "-\t\t}", "-\t\tvisitor.endVisit(this, scope);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d72482f3c6865cf11da40d5e0b8c3db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryTypeConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate static AbstractMethodDeclaration convert(IMethod method, IType type, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \t \tprivate static AbstractMethodDeclaration convert(IMethod method, IType type, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\t\tCompilerModifiers.AccDefault);", "+\t\t\t\tClassFileConstants.AccDefault);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d7422f3b9d992ea1c7a885e62afb4e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic boolean visit(ReturnStatement node)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation node)", "diff": ["+\t */", "+\tpublic boolean visit(NormalAnnotation node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d802c3032077baafdcca5a047080101", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public boolean isPotentiallyNull(VariableBinding local)", "signatureAfterChange": "  public boolean isPotentiallyNull(LocalVariableBinding local)", "diff": ["-public boolean isPotentiallyNull(VariableBinding local) {", "+public boolean isPotentiallyNull(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d8069cda392bbad885bd26ab210634a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "c57d63e48d2e13925643b8ebe6a288202f202e6b", "commitAfterChange": "e2a159c6596c04bca6bcd93e61dded936d044196", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void notifyParticipants(final CompilationUnit workingCopy)", "signatureAfterChange": " \tprivate void notifyParticipants(final CompilationUnit workingCopy)", "diff": ["-\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\tSafeRunner.run(new ISafeRunnable() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d842c5c13022433ee9aab7f7b869dcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \t\tpublic boolean match(StringLiteral node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(ParameterizedType node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(ParameterizedType node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8db6e89be89c524cdb32c7950064bd85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/EclipseFileManager.java", "commitBeforeChange": "a2ea0fcdb64df5f36a0bf2ffec84669e3f62dfd4", "commitAfterChange": "9db80bfa8f5d6f7bab214c95a4d83c3bdedb2628", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate Iterable<? extends File> getEndorsedDirsFrom(String path)", "signatureAfterChange": "  \tprivate Iterable<? extends File> getEndorsedDirsFrom(String path)", "diff": ["-\t\t} catch (InvalidInputException e) {", "+\t\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dc570d6301cc249f0e7bf686d159a0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryTypeConverter.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\ttypeDeclaration.bits |= ASTNode.IsMemberTypeMASK;", "+\t\t\ttypeDeclaration.bits |= ASTNode.IsMemberType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dda477d9b83b17a8014734a63518dfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void testInvalidTagsConstructorErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsConstructorErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dedfdc2e413620cd139ecddb6bf8d1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0) return;", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8df58edf2c0c3e01d27a8971751b3ef2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic void endVisit(ClassInstanceCreation node)", "signatureAfterChange": " \tpublic void endVisit(AnnotationTypeDeclaration node)", "diff": ["+\t */", "+\tpublic void endVisit(AnnotationTypeDeclaration node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dff76c59590bb4c9ca533bea42cb423", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 88, "signatureBeforeChange": " \tpublic boolean visit(AnnotationQualifiedTypeReference typeRef, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(JavadocArraySingleTypeReference typeRef, BlockScope scope)", "diff": ["+\tpublic boolean visit(JavadocArraySingleTypeReference typeRef, BlockScope scope) {", "-\tpublic boolean visit(AnnotationQualifiedTypeReference typeRef, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8dffbc94e12ef0f9b331b51bafa92b3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void flush (Object key)", "signatureAfterChange": " \tpublic void flush (Object key)", "diff": ["-\t\tentry = (LRUCacheEntry) fEntryTable.get(key);", "+\t\tentry = (LRUCacheEntry) entryTable.get(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e1c642bb0b57e43e25f7c95bc396c8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "ec455405a83bfb36b65a1594dcc37928d4b0bc3b", "commitAfterChange": "79b8d8f9507454c772f9092ea04ba032447d4b59", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void testNewWorkingCopy01() throws JavaModelException", "signatureAfterChange": " \tpublic void testNewWorkingCopy01() throws JavaModelException", "diff": ["-\t\tthis.workingCopy =  newWorkingCopy(", "+\t\tthis.workingCopy =  newExternalWorkingCopy("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e3de70f87b956448f37957c5985b7c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 34, "signatureBeforeChange": " protected OpenableElementInfo createElementInfo()", "signatureAfterChange": " protected Object createElementInfo()", "diff": ["- */", "-protected OpenableElementInfo createElementInfo() {", "-\treturn new CompilationUnitElementInfo();", "-}", "+ */", "+protected Object createElementInfo() {", "+\treturn new CompilationUnitElementInfo();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e3f3c9d990b8f087c7e688124fd751d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "c1c274932491e0be8f680c6ad9f4ab9bacdf19f5", "commitAfterChange": "0c46c5213b09d0da0f69c7b26f904c0f9c4b8264", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public IJavaProject findJavaProject(IProject project)", "signatureAfterChange": "\r public IJavaProject findJavaProject(IProject project)", "diff": ["-\t\tIJavaProject[] projects = this.getJavaProjects();\r", "+\t\tIJavaProject[] projects = this.getOldJavaProjectsList();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e61772700913bb7ef1503e9a7d52b0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceRefElement.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected SourceRefElement(int type, IJavaElement parent, String name)", "signatureAfterChange": " protected SourceRefElement(int type, JavaElement parent, String name)", "diff": ["-protected SourceRefElement(int type, IJavaElement parent, String name) {", "+protected SourceRefElement(int type, JavaElement parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e68f56c0408840a37f774a035baccae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "f97b24f3f8e94d8f54a74d9a196551c56851e735", "commitAfterChange": "edd951b2efc6b8f7b24cb3f178fd99c174eb6c7a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean equals(Object object)", "signatureAfterChange": " \tpublic boolean equals(Object object)", "diff": ["-\t\t\t\tString[] otherExcludes = otherEntry.getExclusionPatterns();", "+\t\t\t\tIPath[] otherExcludes = otherEntry.getExclusionPatterns();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e7389c56f49dcba2862f2638c805de5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  public void test035() throws JavaModelException", "signatureAfterChange": "  public void test035() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e74e40627ec865afbabdca722556275", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TestProgressMonitor.java", "commitBeforeChange": "421333df924e824d9a387af5995df2c7b41074aa", "commitAfterChange": "c7529f73b947c3db96e8d513b4c29b957d02901f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static IProgressMonitor getInstance()", "signatureAfterChange": " public static TestProgressMonitor getInstance()", "diff": ["-public static IProgressMonitor getInstance() {", "+public static TestProgressMonitor getInstance() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e82da5a618b718232098233b967f8a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "09344c3511ec65da3ebc80e49387be9bef2842c9", "commitAfterChange": "784fb3dfd6aad9e1272ee168af202a1a299ea44b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void fire(IJavaElementDelta customDelta, int eventType)", "signatureAfterChange": " \tpublic void fire(IJavaElementDelta customDelta, int eventType)", "diff": ["-\t\t\tIterator scopes = this.scopes.keySet().iterator();", "+\t\t\tIterator scopes = this.searchScopes.keySet().iterator();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e888888d130ea3e405b9b4b98c68733", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InternalScannerTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn setupSuite(testClass());", "+\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e88ea55988df72960966b5f4a463cca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.pluggable.tests/src/org/eclipse/jdt/apt/pluggable/tests/processors/genclass6/GenClass6Proc.java", "commitBeforeChange": "cae1ac0076053182a150a9a6566741ab9c075217", "commitAfterChange": "976283265acccc4408306834f2f927413343ea11", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void round(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "signatureAfterChange": " \tprivate void round(Set<? extends TypeElement> annotations, RoundEnvironment roundEnv)", "diff": ["-\t\t\tgenerateType(genClassMirror, e);", "+\t\t\tprocessType(genClassMirror, e);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8c40daa291bfddfb2c002369827d37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void locateMatchesInClassFile() throws CoreException", "signatureAfterChange": " \tpublic void locateMatchesInClassFile() throws CoreException", "diff": ["-\t\tif (this.locator.pattern.needsResolve) {", "+\t\tif (this.locator.pattern.mustResolve) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8f2151632e002ebb0583058d7d8460", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedTypeReference.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprotected TypeBinding findNextTypeBinding(int tokenIndex, Scope scope, PackageBinding packageBinding)", "signatureAfterChange": "  \tprotected TypeBinding findNextTypeBinding(int tokenIndex, Scope scope, PackageBinding packageBinding)", "diff": ["-\t\t\t\t\t\tproblemBinding.original,", "+\t\t\t\t\t\tproblemBinding.closestMatch,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e9521eb72b9c7199bac7bd1efe8e424", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testExternalJarAdded3() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarAdded3() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eb5e82b2d3159a6625d07c5a2b2496b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\t public void searchDeclarationsOfAccessedFields(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": "\t public void searchDeclarationsOfAccessedFields(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\t\tMatchLocator locator = new MatchLocator2(", "+\t\tMatchLocator locator = new MatchLocator("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eb8fddd2261328179fcf7fa0806c659", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eca602caff1bdbae66e6666026a2db6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": " public synchronized IIndex getIndexForUpdate(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndexForUpdate(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-public synchronized IIndex getIndexForUpdate(IPath path, boolean reuseExistingFile, boolean createIfMissing) {", "+public synchronized Index getIndexForUpdate(IPath path, boolean reuseExistingFile, boolean createIfMissing) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ecf2443a77b6a7e03b5da2312674a8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "d71fdba9ee04a18b4ba90d2de9f18705b0eb1b86", "commitAfterChange": "bf4c275853d6cbca9c69231dbfec6762ed3d8018", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void buildFields()", "signatureAfterChange": " \t \tprivate void buildFields()", "diff": ["-\t\t\t\t\tnew FieldBinding(IncompleteHierarchy, VoidBinding, AccPrivate, referenceContext.binding, null);", "+\t\t\t\t\tnew FieldBinding(IncompleteHierarchy, IntBinding, AccPrivate, referenceContext.binding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ed3f844dfb2ad44a4986a72e444ff88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForInterface.java", "commitBeforeChange": "886d0f0c1c856616883aceae38186164d207f2a8", "commitAfterChange": "3bb52dd94a6650dc05eccd3db55f82a70954db23", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildSuite(javadocTestClass());", "+\t\treturn buildTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ed5311b1f1e27fcc5749c79041985f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " \tpublic void test163()", "signatureAfterChange": " \tpublic void test163()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8edb2cc30632fdc7b452cd0e2e98b28e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " public void if_icmpgt(Label lbl)", "signatureAfterChange": " public void if_icmpgt(BranchLabel lbl)", "diff": ["-public void if_icmpgt(Label lbl) {", "+public void if_icmpgt(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee4487042252ca078250b8d679ac758", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperMethodInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tSuperMethodInvocation(AST ast)", "signatureAfterChange": " \tSuperMethodInvocation(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee65b0aa6282a7b7d52dca3a4b6fb5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSkeleton.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\tpublic int getModifiers()", "signatureAfterChange": " \t\tpublic int getModifiers()", "diff": ["-\t\t\treturn IConstants.AccPublic;", "+\t\t\treturn ClassFileConstants.AccPublic;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ee719d31e2891171b9de04b1460be27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  \tpublic String typeName()", "signatureAfterChange": "  \tpublic String typeName()", "diff": ["-\t\t\tcase T_String : return \"java.lang.String\"; //$NON-NLS-1$", "+\t\t\tcase T_JavaLangString : return \"java.lang.String\"; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eedccddbfcda16310e6039c6834b220", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "4eaa1f1fc9e841c11eaca436ac06f8635b8543bd", "commitAfterChange": "f73fdb0a354f2f38e3faeb7d9eceabb3d85530d5", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012_compiler_problems_tuning()", "signatureAfterChange": " public void test012_compiler_problems_tuning()", "diff": ["-\t\texpectedProblemAttributes.put(\"ExceptionParameterIsNeverUsed\", new ProblemAttributes(JavaCore.COMPILER_PB_UNUSED_PARAMETER));", "+\t\texpectedProblemAttributes.put(\"ExceptionParameterIsNeverUsed\", new ProblemAttributes(JavaCore.COMPILER_PB_UNUSED_EXCEPTION_PARAMETER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ef75724acb494199283beb069a35d57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "a2380c5dc7487191ba2f073fdb6868b729cb0c57", "commitAfterChange": "6c3b6971f88c7f6d5be3c70fdaf936700dc7f94b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic AnnotatableType getReceiverType()", "signatureAfterChange": " \tpublic Type getReceiverType()", "diff": ["-\tpublic AnnotatableType getReceiverType() {", "+\tpublic Type getReceiverType() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f02c840d964ee58767c199e7dca2dc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tstatic void checkNewChild(ASTNode node, ASTNode newChild, \t\t\tboolean cycleCheck, Class nodeType)", "signatureAfterChange": "  \tstatic void checkNewChild(ASTNode node, ASTNode newChild, \t\t\tboolean cycleCheck, Class nodeType)", "diff": ["-\t\tif ((newChild.flags & PROTECT) != 0) {", "+\t\tif ((newChild.typeAndFlags & PROTECT) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f054b98e6993b6b233f5b86db174554", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 75, "signatureBeforeChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] entries,\r \t\tIProgressMonitor monitor,\r \t\tboolean saveClasspath)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] entries,\r \t\tIProgressMonitor monitor,\r \t\tboolean saveClasspath)\r \t\tthrows JavaModelException", "diff": ["-\t\tsetRawClasspath(entries, monitor, saveClasspath, getResolvedClasspath(true));\r", "+\t\tsetRawClasspath(entries, monitor, saveClasspath, getExpandedClasspath(true));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f191135a761014a260b19daca773be3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "5f85e7ad56b4ff0557c2bf2c999084f9107f0617", "commitAfterChange": "0a4aef6498056b8c56c187a24a4c92d14d399d01", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r private void matchReportReference(QualifiedTypeReference typeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": "\r private void matchReportReference(QualifiedTypeReference typeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tlocator.reportQualifiedReference(typeRef.sourceStart, typeRef.sourceEnd, qualifiedName, element, accuracy);\r", "+\tlocator.reportAccurateReference(typeRef.sourceStart, typeRef.sourceEnd, qualifiedName, element, accuracy);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f2655a46a8ddce31bbee281b8931115", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteElementsOperation.java", "commitBeforeChange": "b0d31e6c3e1c680e07131773758a36c78b2f553b", "commitAfterChange": "9f89ba73b700aee0d67ac8a5b9556d443c556591", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected void verify(IJavaElement element) throws JavaModelException", "signatureAfterChange": " \tprotected void verify(IJavaElement element) throws JavaModelException", "diff": ["-\t\t\tif (child.getCorrespondingResource() != null)", "+\t\t\tif (child.getResource() != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f294d702c00a769f6b405ed719ade9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\tif ((finallyBlock.bits & UndocumentedEmptyBlockMASK) != 0) {", "+\t\t\t\tif ((finallyBlock.bits & UndocumentedEmptyBlock) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f2bba8dc3a63ffd6abc7018608a2627", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic boolean visit(StringLiteral stringLiteral, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(StringLiteral stringLiteral, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameStringLiteral);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameStringLiteral);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f323b54c9272ab16f52d81bef44c94d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "caead2c6488f232c99b522820aa80d0eed7f2116", "commitAfterChange": "4c1d448229be9b75331fa5d60ed6daf1dfef9f55", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.BinaryExpression expression)", "signatureAfterChange": " \t \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.BinaryExpression expression)", "diff": ["-\t\t\tfinal org.eclipse.jdt.internal.compiler.ast.StringLiteral[] stringLiterals = literal.literals;", "+\t\t\tfinal org.eclipse.jdt.internal.compiler.ast.Expression[] stringLiterals = literal.literals;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f55533b5758f9b99d96beefbab12d7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuite(testClass());", "+\t\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f5713576f819c86b0471b9a76f3606c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testClassFileGetElementAt02() throws JavaModelException", "signatureAfterChange": " public void testClassFileGetElementAt02() throws JavaModelException", "diff": ["-\tassertElementEquals(", "+\tassertElementExists("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fa23785f0d0f1683b45961dd006b9f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "450ac4aedb8355a9d82b9ee453a37907cf0a13d7", "commitAfterChange": "697ae3cd02972b51930953dd6e5db4514f1fcad8", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tpublic IJavaModelStatus verify()", "signatureAfterChange": "  \tpublic IJavaModelStatus verify()", "diff": ["-\t\t\treturn JavaConventions.validateClasspath(", "+\t\t\treturn ClasspathEntry.validateClasspath("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8faaaee7d0a029de13e838e1a6df26da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic boolean visit( \t\tAND_AND_Expression and_and_Expression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tAND_AND_Expression and_and_Expression, \t\tBlockScope scope)", "diff": ["-\t\treturn dumpBinaryExpression(and_and_Expression, ITerminalSymbols.TokenNameAND_AND, scope);", "+\t\treturn dumpBinaryExpression(and_and_Expression, TerminalTokens.TokenNameAND_AND, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fb7ef2f6de1c518711c9430aa238410", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BodyDeclaration.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tBodyDeclaration(AST ast)", "signatureAfterChange": " \tBodyDeclaration(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fb9d7c14415ee74d1aa62a4aab7bef3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories(  \t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "signatureAfterChange": " \tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories(  \t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "diff": ["-\t\tJarClassLoader batchClassLoader = _batchLoaders.get(project);", "+\t\tClassLoader batchClassLoader = _batchLoaders.get(project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fc80668ae43babe7915b880d9406706", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "3ea68e3d465e2db503f32911235b79fc28e0b277", "commitAfterChange": "cb7e1f0df8a87f2b400ca058ed57dff2a93cd223", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["-\t\ttestExpression.printExpression(0, output).append(\") {\"); //$NON-NLS-1$", "+\t\texpression.printExpression(0, output).append(\") {\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ff08b0ad0b489c4d705712d5bb1522c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " \tpublic void endVisit(SwitchStatement node)", "signatureAfterChange": " \tpublic void endVisit(MemberValuePair node)", "diff": ["+\t */", "+\tpublic void endVisit(MemberValuePair node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ff66817ef0ead923902d27075f64fa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 385, "methodNumberAfterChange": 385, "signatureBeforeChange": " public void testBug148215_Messages() throws CoreException", "signatureAfterChange": " public void testBug148215_Messages() throws CoreException", "diff": ["-\t\tremoveLibraryEntry(JAVA_PROJECT, new Path(\"/JavaSearchBugs/lib/b148215.jar\"));", "+\t\tremoveClasspathEntry(JAVA_PROJECT, new Path(\"/JavaSearchBugs/lib/b148215.jar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90057d49c54b1bd94e8b9f5a8c10b06f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/AnnotationComponentValue.java", "commitBeforeChange": "3413778e1bd5154fc1bb3b2fe41a2f5c159f06ae", "commitAfterChange": "b6700c6040587d6a407e0aa87172122e678ac070", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic AnnotationComponentValue( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "signatureAfterChange": " \t \tpublic AnnotationComponentValue( \t\t\tbyte[] classFileBytes, \t\t\tIConstantPool constantPool, \t\t\tint offset) throws ClassFormatException", "diff": ["-\t\t\t\t\tif (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_Class) {", "+\t\t\t\t\tif (constantPoolEntry.getKind() != IConstantPoolConstant.CONSTANT_Utf8) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90086c7e7fbe551de0e5b51a93aaf763", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ImportContainer.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["-public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner) {", "+public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "900a86b997126218564b1b236a3e3b63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptProject.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void projectClean( boolean deleteFiles )", "signatureAfterChange": " \t \tpublic void projectClean( boolean deleteFiles )", "diff": ["-\t\t_gfm.discardAllState();", "+\t\t_gfm.projectCleaned();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90147233afbf0ce745c0c7db8350238c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "a6b76fc7d7890cbbcb2fc001b8031466dd0ad995", "commitAfterChange": "8c05bff0d88a6a537ed2accc1c62c5430e927aee", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate LocalTypeBinding buildLocalType(SourceTypeBinding enclosingType, PackageBinding packageBinding)", "signatureAfterChange": " \t \tprivate LocalTypeBinding buildLocalType(SourceTypeBinding enclosingType, PackageBinding packageBinding)", "diff": ["-\t\t\t\t\t\tproblemReporter().hidingEnclosingType(memberContext);", "+\t\t\t\t\t\tproblemReporter().typeCollidesWithEnclosingType(memberContext);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90283f1076b6b78149989d79db376afe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tvoid endVisit(AnnotationArgumentExpression expression, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(JavadocArgumentExpression expression, BlockScope scope);", "diff": ["-\tvoid endVisit(AnnotationArgumentExpression expression, BlockScope scope);", "+\tvoid endVisit(JavadocArgumentExpression expression, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "902ef984e6c24f23e2b85bf2182ad964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "54f3e7caaa3150d871f7d11c1e610492c84f6dde", "commitAfterChange": "f700051affab74804180d3a8bb296f6cabd751a0", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "   \tprivate ConstraintFormula[] deriveTypeArgumentConstraints(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": "   \tprivate ConstraintTypeFormula[] deriveTypeArgumentConstraints(TypeBound boundS, TypeBound boundT)", "diff": ["-\tprivate ConstraintFormula[] deriveTypeArgumentConstraints(TypeBound boundS, TypeBound boundT) {", "+\tprivate ConstraintTypeFormula[] deriveTypeArgumentConstraints(TypeBound boundS, TypeBound boundT) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "903bc22546d821350d7c2957f8c85d47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BinaryFileOutputStream.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic BinaryFileOutputStream(IFile file, ProcessorEnvImpl env)", "signatureAfterChange": " \t \tpublic BinaryFileOutputStream(IFile file, BuildEnv env)", "diff": ["-\tpublic BinaryFileOutputStream(IFile file, ProcessorEnvImpl env) {", "+\tpublic BinaryFileOutputStream(IFile file, BuildEnv env) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "903cd9d40309fe9bb5265989ade0e873", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6fdaa2b9d78c89a1ed2269f5279c3e02cee4b6cd", "commitAfterChange": "8ec1d344fc5f9b16a04a2a15e36cb4db52cac4eb", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tprotected synchronized Object peekAtInfo(IJavaElement element)", "signatureAfterChange": " \tprotected synchronized Object peekAtInfo(IJavaElement element)", "diff": ["-\t\tHashMap tempCache = (HashMap)this.temporaryCache.getCurrent();", "+\t\tHashMap tempCache = (HashMap)this.temporaryCache.get();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "903d233a64bb220252b5bd08be1605b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "0848b8a6a9afff16623dfc6b0821adb833326b41", "commitAfterChange": "29d4a1149e392c0b5c052a9202992e800f5506a5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t\tcheckNPE(currentScope, flowContext, flowInfo, true);", "+\t\t\t\tcheckInternalNPE(currentScope, flowContext, flowInfo, true);", "+\t// note: not covering def.assign for @NonNull: QNR cannot provably refer to a variable of the current object"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "904a2207cb4ed8897c2213d4f17be16d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": " private int readStreamInt(FileInputStream stream) throws IOException", "signatureAfterChange": " private int readStreamInt(InputStream stream) throws IOException", "diff": ["-private int readStreamInt(FileInputStream stream) throws IOException {", "+private int readStreamInt(InputStream stream) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "904e6345c27f935a0fffbb7b3dd5e2b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "5a5343d072b2cb86340fcbc8c8552768748b4c47", "commitAfterChange": "e1e0753030e4f2c77bd2b8f4a42a1bc4bc76176e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r protected boolean isOnClasspath()", "signatureAfterChange": "\r protected boolean isOnClasspath()", "diff": ["-\t\t\tif (entry.getPath().isPrefixOf(path)) {\r", "+\t\t\tif (entry.getPath().equals(path)) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9082b49e7f805cafe617689573a4f3b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "5a1719bf0af9420f5608be57209358e2c77d892f", "commitAfterChange": "96bf1a9e2ee14d6938d23f375dc557eb131baf1b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public int match(LocalDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(LambdaExpression node, MatchingNodeSet nodeSet)", "diff": ["+public int match(LambdaExpression node, MatchingNodeSet nodeSet) {", "+\t// each subtype should override if needed", "+\treturn IMPOSSIBLE_MATCH;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9087c97ae79789275ef046a04015d785", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " \tpublic void testMissingCommentsErrorPrivate()", "signatureAfterChange": " \tpublic void testMissingCommentsErrorPrivate()", "diff": ["-\t\trunNegativeTest(MissingComments, resultForMissingComments(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(MISSING_COMMENTS, resultForMissingComments(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9098429fccafb8c3ff0d18717718b02a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexBinaryFolder.java", "commitBeforeChange": "6f4f90e2451f9fcdb6af6941acb2518968bd5fec", "commitAfterChange": "140d5208fae36b92de255acde8dd7fe538818d2b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\tmanager.add((IFile) value, this.folder.getFullPath());\r", "+\t\t\t\t\tmanager.addBinary((IFile) value, this.folder.getFullPath());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90ad7b87cd9e28bfb306a3208febeefd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "ee6e442281c6adfce6f28a674af1fb9f7f9d707f", "commitAfterChange": "9d88e07972fdc72c8f68cd0cc8f036c691b75fb7", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void resolve(IGenericType suppliedType)", "signatureAfterChange": " public void resolve(IGenericType suppliedType)", "diff": ["-\t\t\treportHierarchy(this.requestor.getType(), null, binaryTypeBinding);", "+\t\t\treportHierarchy(this.builder.getType(), null, binaryTypeBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90b88121b0f3cd1b7dc4e6731cabab49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "commitAfterChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic Object removeKey (Object key)", "signatureAfterChange": " \tpublic Object removeKey (Object key)", "diff": ["-\t\tObject value = entry._fValue;", "+\t\tObject value = entry.value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90ca697d3c2d2912687ef1222d4fbbb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void testSuggestGetterName007()", "signatureAfterChange": " public void testSuggestGetterName007()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90d1d4a006091e7dd513b8e44dd17d02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void match(AstNode node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(AstNode node, MatchingNodeSet nodeSet)", "diff": ["-\tif (level >= POTENTIAL_MATCH)", "+\tif (level >= POSSIBLE_MATCH)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90d8fdf325bb05ad764e2f0b8b8a7b42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "aba5db418de65ea21899bfdf893833cd0fc3f586", "commitAfterChange": "7aba284c4ea53048ed9ad4ccc85fef0f7294903a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic RoundEnvImpl(CompilationUnitDeclaration[] units, BinaryTypeBinding[] binaryTypeBindings, boolean isLastRound, BaseProcessingEnvImpl env)", "signatureAfterChange": "  \tpublic RoundEnvImpl(CompilationUnitDeclaration[] units, ReferenceBinding[] binaryTypeBindings, boolean isLastRound, BaseProcessingEnvImpl env)", "diff": ["-\tpublic RoundEnvImpl(CompilationUnitDeclaration[] units, BinaryTypeBinding[] binaryTypeBindings, boolean isLastRound, BaseProcessingEnvImpl env) {", "+\tpublic RoundEnvImpl(CompilationUnitDeclaration[] units, ReferenceBinding[] binaryTypeBindings, boolean isLastRound, BaseProcessingEnvImpl env) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e5754a85e4dd413e51a30f4d531a44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testAttachSourceRetrievalClass() throws JavaModelException", "signatureAfterChange": " public void testAttachSourceRetrievalClass() throws JavaModelException", "diff": ["-\tIClassFile objectCF = this.jarRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIClassFile objectCF = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e59d7478437cbdface182455e2ae24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SelectionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(SelectionTest.class);", "+\treturn buildAllCompliancesTestSuite(SelectionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90f06433027064db7008b76acd5bf807", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected TypeAnnotationWalker restrict(long newMatches, int newPathPtr)", "signatureAfterChange": "  \tprotected ITypeAnnotationWalker restrict(long newMatches, int newPathPtr)", "diff": ["-\tprotected TypeAnnotationWalker restrict(long newMatches, int newPathPtr) {", "+\tprotected ITypeAnnotationWalker restrict(long newMatches, int newPathPtr) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90ff75054684372173aebfbc2231d5ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfAccessedFieldsPattern.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void reportDeclaration(FieldBinding fieldBinding, MatchLocator locator) throws CoreException", "signatureAfterChange": " private void reportDeclaration(FieldBinding fieldBinding, MatchLocator locator) throws CoreException", "diff": ["-\tIResource resource = type.getUnderlyingResource();", "+\tIResource resource = type.getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91035d8bfd2ee6321b3d2586375b7f65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "cd5ec8c17cdfceb4de927833e5a540f62cfa8d72", "commitAfterChange": "a4657a1df055a272f769463c9d20e50f1888cccd", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tpublic void test068()", "signatureAfterChange": " \tpublic void test068()", "diff": ["-\t\tpreferences.allocation_expression_arguments_alignment = Alignment.M_NEXT_PER_LINE_SPLIT;", "+\t\tpreferences.allocation_expression_arguments_alignment = Alignment.M_ONE_PER_LINE_SPLIT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "910d3262fdbdca14a65a3a457176b51a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 445, "methodNumberAfterChange": 445, "signatureBeforeChange": " \tpublic void test426()", "signatureAfterChange": " \tpublic void test426()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9123eb4f4f1b29de6e4a7f12b7903a91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperConstructorInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912dee7ce177027c8a8e658054536416", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeParameter.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static List propertyDescriptors(int apiLevel)", "signatureAfterChange": " \tpublic static List propertyDescriptors(int apiLevel)", "diff": ["-\t\t\tcase AST.JLS4:", "+\t\t\tcase AST.JLS4_INTERNAL:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912e25b4b9f6a926963c81e4f3812e1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/RequestorWrapper.java", "commitBeforeChange": "7ca67653aa31549676d923c2433f1b6bd21af328", "commitAfterChange": "9304c874b5bad76dab47ec7e1ae11627c16f27ce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void acceptProblem(CategorizedProblem problem, char[] fragmentSource, int fragmentKind)", "signatureAfterChange": " public void acceptProblem(CategorizedProblem problem, char[] fragmentSource, int fragmentKind)", "diff": ["-\t\tmarker.setAttribute(IMarker.GENERATED_BY, JavaBuilder.SOURCE_ID);", "+\t\tmarker.setAttribute(IMarker.SOURCE_ID, JavaBuilder.SOURCE_ID);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91462e5a7a1241c3fd619a97375c5b95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  protected Openable(int type, IJavaElement parent, String name)", "signatureAfterChange": "  protected Openable(int type, JavaElement parent, String name)", "diff": ["-protected Openable(int type, IJavaElement parent, String name) {", "+protected Openable(int type, JavaElement parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91471676e9c26ffefae2b15f7b7fe590", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public boolean isPotentiallyUnknown(LocalVariableBinding local)", "signatureAfterChange": "  public boolean isPotentiallyUnknown(VariableBinding local)", "diff": ["-public boolean isPotentiallyUnknown(LocalVariableBinding local) {", "+public boolean isPotentiallyUnknown(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "914c341b469ea7d24d816549c38ce1b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void endVisit(AnnotationArrayQualifiedTypeReference typeRef, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(JavadocSingleTypeReference typeRef, BlockScope scope)", "diff": ["-\tpublic void endVisit(AnnotationArrayQualifiedTypeReference typeRef, BlockScope scope) {", "+\tpublic void endVisit(JavadocSingleTypeReference typeRef, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "915468fd6278469327deaed8dd69216a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void match(Reference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(Reference node, MatchingNodeSet nodeSet)", "diff": ["-\tif (level >= POTENTIAL_MATCH)", "+\tif (level >= POSSIBLE_MATCH)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9167139830348d6e33dfecb5c064f3d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testSuggestFieldName012()", "signatureAfterChange": " public void testSuggestFieldName012()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "916d1e7e27a9ce8664b00820514feac3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "f9e1e520523019e969eacf451222621b96e96623", "commitAfterChange": "6ab8a052a7d8ac7a830c6733e19e9b30c380dad7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprivate JavaElement getJavaElement(LocalVariableBinding binding)", "signatureAfterChange": "  \tprivate JavaElement getJavaElement(LocalVariableBinding binding)", "diff": ["-\t\t\t\tlocal.type == null ? Signature.createTypeSignature(binding.type.readableName(), true) : Util.typeSignature(local.type),", "+\t\t\t\tlocal.type == null ? Signature.createTypeSignature(binding.type.signableName(), true) : Util.typeSignature(local.type),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "917286e3f60638b585ad5ca3196e84a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "41815f8cf5aaf4cafc9d1b521d125669f579d0c8", "commitAfterChange": "73634b8ac97f7186ab0eebd8bd1579a0b8326e2a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void abortDueToInternalError(String errorMessage, AstNode location)", "signatureAfterChange": "\r public void abortDueToInternalError(String errorMessage, AstNode location)", "diff": ["-\t\tIProblem.UnclassifiedProblem,\r", "+\t\tIProblem.Unclassified,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91877a0767d0fed27fe1cd175eae01e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "87ba3addb06e0bd690b97dd2e305fffcc5db74fe", "commitAfterChange": "8046249ea5657bdf56e1ad6e70f968e6217d4dd0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\tJobManager.log(\"-> execution time: \" + executionTime + \"ms - \" + this);//$NON-NLS-1$//$NON-NLS-2$\r", "+\t\t\t\tJobManager.verbose(\"-> execution time: \" + executionTime + \"ms - \" + this);//$NON-NLS-1$//$NON-NLS-2$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91942f92a76e1f301c4d12e87adaeeb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testRenameExcludedPackage() throws CoreException", "signatureAfterChange": " public void testRenameExcludedPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9199acc913c3c612e2f2355e2d0e832b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Region.java", "commitBeforeChange": "da8689e6058c8df72d6de5be59efe4e5eaaa5d49", "commitAfterChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public Region()", "signatureAfterChange": "\r public Region()", "diff": ["-\tfRootElements = new Vector(1);\r", "+\tfRootElements = new ArrayList(1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "919e03519b422e064eae61c763d32153", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/ReadAnnotationTests2.java", "commitBeforeChange": "6d1c57fb2448b115bc8f96943cd4e4f07a42d11a", "commitAfterChange": "d4217008a0577ef6139e05a418f311a9a8588da7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate ITypeBinding getTypeBinding(final String key, final IJavaProject javaProj)", "signatureAfterChange": " \t \tprivate ITypeBinding getTypeBinding(final String key, final IJavaProject javaProj)", "diff": ["-\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS3);", "+\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91b89f59ba6727034119b249c4a44adb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "54f3e7caaa3150d871f7d11c1e610492c84f6dde", "commitAfterChange": "f700051affab74804180d3a8bb296f6cabd751a0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \tprivate ConstraintFormula combineEqualSupers(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": " \t \tprivate ConstraintTypeFormula combineEqualSupers(TypeBound boundS, TypeBound boundT)", "diff": ["-\tprivate ConstraintFormula combineEqualSupers(TypeBound boundS, TypeBound boundT) {", "+\tprivate ConstraintTypeFormula combineEqualSupers(TypeBound boundS, TypeBound boundT) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91c1cd4bad0cfb2c0672f7ecceeb7b85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t\treturn buildTestSuite(testClass());", "+\t\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91ca2a41c08990dc0d4f3e0479e83c9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate void initializeASTParser()", "signatureAfterChange": " \tprivate void initializeASTParser()", "diff": ["-\t\tthis.parser = ASTParser.newParser(AST.JLS3);", "+\t\tthis.parser = ASTParser.newParser(AST.JLS4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91d70970e56e1d97f615a3690ae934cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "a601b6b1bd0055831cf914eda4a394af5ff40421", "commitAfterChange": "aae3a2ae7793bc4970c4033658428e24ab5d11f5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected CompilationUnit(IPackageFragment parent, String name, CompilationUnitOwner owner)", "signatureAfterChange": " protected CompilationUnit(IPackageFragment parent, String name, WorkingCopyOwner owner)", "diff": ["-protected CompilationUnit(IPackageFragment parent, String name, CompilationUnitOwner owner) {", "+protected CompilationUnit(IPackageFragment parent, String name, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "920486ec282ade41e6a4ddcc059fff4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThrowStatement.java", "commitBeforeChange": "8d1ff9b80d2587df4aa2d0a1ee1f5a75472a5feb", "commitAfterChange": "625e6a1264761bd4361336704c7e67e6666444a5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "\r \r \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t&& scope.problemReporter().options.complianceLevel <= CompilerOptions.JDK1_3){\r", "+\t\t\t\t&& scope.environment().options.complianceLevel <= CompilerOptions.JDK1_3){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "921d40997268ba16ff249212ac04aca1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \t\tpublic boolean match(NullLiteral node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(MarkerAnnotation node, Object other)", "diff": ["+\t\tpublic boolean match(MarkerAnnotation node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "923032b4df913d30f74394ad46cb4b79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "b60a608dbabf8b5f04fae21c808d5a97597a41f6", "commitAfterChange": "0812715fc31639c278d6b4cb2dea448517c247bf", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void testMissingCommentsJavadocSupportDisabled()", "signatureAfterChange": " \tpublic void testMissingCommentsJavadocSupportDisabled()", "diff": ["-\t\tthis.localDocCommentSupport = CompilerOptions.DISABLED;", "+\t\tthis.docCommentSupport = CompilerOptions.DISABLED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9237f3ad7a576565c309c66b748533bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "60507801da6a601cb9ccd1a6711dd6f2c042109a", "commitAfterChange": "ce85ea384272e2d2a973888e0c9a4872544d60c3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic boolean enclosesFineGrained(IJavaElement element)", "signatureAfterChange": " \tpublic boolean enclosesFineGrained(IJavaElement element)", "diff": ["-\t\tif ((this.subTypes == null) && this.allowMemberTypes) ", "+\t\tif ((this.subTypes == null) && this.allowMemberAndEnclosingTypes) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9242520c6b06343ec838757b09b477f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "a00e6eb31425a8647b43db8ab18e7ffa598e36ab", "commitAfterChange": "473caccfd9ed330c0dc0a96a8172124ff7556099", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "signatureAfterChange": "\r protected void storeProblemsFor(IResource resource, IProblem[] problems) throws CoreException", "diff": ["-\t\t\tthrow new IncompleteClassPathException(missingClassFile);\r", "+\t\t\tthrow new MissingClassFileException(missingClassFile);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "924388bfc3b7902689f2641c39524944", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testSuggestFieldName017()", "signatureAfterChange": " public void testSuggestFieldName017()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9248905e77a2f99bf0674e6a4bf30af6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void addMatch(AstNode node, int matchLevel)", "signatureAfterChange": " public void addMatch(AstNode node, int matchLevel)", "diff": ["-\t\tcase PatternLocator.POTENTIAL_MATCH:", "+\t\tcase PatternLocator.POSSIBLE_MATCH:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9255bb7b6c9020cb0e6898c4766c65fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapExecutor.java", "commitBeforeChange": "2073ae07201f3b4750a106d0cadf90473710a63d", "commitAfterChange": "10545bbf89db4e21cbdfaf0260ea872d78aa91e9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprivate double getWrapPenalty(int lineStartIndex, int lineIndent, int wrapIndex, int wrapIndent, \t\t\tWrapResult wrapResult) throws WrapRestartException", "signatureAfterChange": "  \tprivate double getWrapPenalty(int lineStartIndex, int lineIndent, int wrapIndex, int wrapIndent, \t\t\tWrapResult wrapResult) throws WrapRestartThrowable", "diff": ["-\t\t\tWrapResult wrapResult) throws WrapRestartException {", "+\t\t\tWrapResult wrapResult) throws WrapRestartThrowable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9257dcdcb5fe136f5abad7c8dbe415de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "c67e828d3788591f96003d3b6db18c20724f7bf4", "commitAfterChange": "31085e35ec6546fd0ce14d2c37082b7385a37318", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\t\t\tpos= rewriteExtraDimensionsInfo(node, pos, MethodDeclaration.EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\t\t\tpos= rewriteExtraDimensionsInfo(node, pos, MethodDeclaration.EXTRA_DIMENSIONS2_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92642bfed68d5e0207b1bd9dd62ba50e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected Openable getCurrentOpenable()", "signatureAfterChange": " \tprotected Openable getCurrentOpenable()", "diff": ["+\tprotected Openable getCurrentOpenable() {", "+\t\treturn this.currentPotentialMatch.openable;", "+\t}", "-}", "-\tprotected Openable getCurrentOpenable() {", "-\t\treturn this.currentMatchingOpenable.openable;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92dd6a1e08c1dc2c615ac2cbcec5cd8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MarkerAnnotation.java", "commitBeforeChange": "96a8824b1e471f1db4dd22f336aec5c7ff8c583e", "commitAfterChange": "45a4bf71a614f82f4a9506597605186918f4c34e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope)", "diff": ["-\tpublic void traverse(ASTVisitor visitor, ClassScope scope) {", "-\t\tvisitor.visit(this, scope);", "-\t\tvisitor.endVisit(this, scope);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e0c761ba655db1b5eb027a3e808562", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tpublic boolean visit(AnnotationArgumentExpression expression, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(JavadocArgumentExpression expression, BlockScope scope)", "diff": ["-\tpublic boolean visit(AnnotationArgumentExpression expression, BlockScope scope) {", "+\tpublic boolean visit(JavadocArgumentExpression expression, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f87ba77a239b58d883c2f0b6698578", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "e5dee4f66ab3257e0d9e4e34690323cf2d5f7c21", "commitAfterChange": "ba7f55d89dcf40f0d2718397b348f39209d50c3a", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic PrimitiveTypeImpl getCharType()", "signatureAfterChange": " \tpublic PrimitiveTypeImpl getCharType()", "diff": ["-\tpublic PrimitiveTypeImpl getByteType(){ return _primitives[1]; }", "-\tpublic PrimitiveTypeImpl getCharType(){ return _primitives[2]; }", "+\tpublic PrimitiveTypeImpl getByteType(){ return _primitives[BYTE_INDEX]; }", "+\tpublic PrimitiveTypeImpl getCharType(){ return _primitives[CHAR_INDEX]; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93033f1fc99814b5d2118e539fc921d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " private void initializeTypeVariable(TypeVariableBinding variable, TypeVariableBinding[] existingVariables, SignatureWrapper wrapper, char[][][] missingTypeNames, ITypeAnnotationWalker walker)", "signatureAfterChange": " private void initializeTypeVariable(TypeVariableBinding variable, TypeVariableBinding[] existingVariables, SignatureWrapper wrapper, char[][][] missingTypeNames, TypeAnnotationWalker walker)", "diff": ["-private void initializeTypeVariable(TypeVariableBinding variable, TypeVariableBinding[] existingVariables, SignatureWrapper wrapper, char[][][] missingTypeNames, ITypeAnnotationWalker walker) {", "+private void initializeTypeVariable(TypeVariableBinding variable, TypeVariableBinding[] existingVariables, SignatureWrapper wrapper, char[][][] missingTypeNames, TypeAnnotationWalker walker) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93061e20790b6c984d9d025fb4ca31e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "fe94bdafb4bfe9680e0611bb6d3516015883724d", "commitAfterChange": "36e008ae8c0787e84c5baff75eebd30e31e47cce", "methodNumberBeforeChange": 466, "methodNumberAfterChange": 466, "signatureBeforeChange": " \tpublic void test464()", "signatureAfterChange": " \tpublic void test464()", "diff": ["-\t\tthis.runConformTest(", "+\t\tthis.runNegativeTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "930f548f0bc6c281765d7f584f32c5ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 449, "methodNumberAfterChange": 449, "signatureBeforeChange": " \tpublic void test430()", "signatureAfterChange": " \tpublic void test430()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9310b8b63d43c5fc4c2977a557603747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testSupertypeHierarchyGetSubclasses() throws JavaModelException", "signatureAfterChange": " public void testSupertypeHierarchyGetSubclasses() throws JavaModelException", "diff": ["-\tIType type = getClassFile(\"TypeHierarchy\", getExternalJCLPath(), \"java.lang\", \"Object.class\").getType();", "+\tIType type = getClassFile(\"TypeHierarchy\", getExternalJCLPathString(), \"java.lang\", \"Object.class\").getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "931c8871ba84e8181791dd5b827109ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "35bd4e1ac4b1e11c036461a7309d887d1527f75a", "commitAfterChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void checkPackagePrivateAbstractMethod(MethodBinding abstractMethod)", "signatureAfterChange": " void checkPackagePrivateAbstractMethod(MethodBinding abstractMethod)", "diff": ["-\t\t\t\tif (areMethodsEqual(method, abstractMethod))", "+\t\t\t\tif (areMethodsCompatible(method, abstractMethod))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "931c9f23bff5bbffb3e848ab62e8fd4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 123, "signatureBeforeChange": " public void ifle(Label lbl)", "signatureAfterChange": " public void ifle(BranchLabel lbl)", "diff": ["-public void ifle(Label lbl) {", "+public void ifle(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "931d73feeb3cac02372f0ecb403f9b39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic Object getKey(Object key)", "signatureAfterChange": " \tpublic Object getKey(Object key)", "diff": ["-\t\tLRUCacheEntry entry = (LRUCacheEntry) fEntryTable.get(key);", "+\t\tLRUCacheEntry entry = (LRUCacheEntry) entryTable.get(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9327c03ac75d526d0f4d9f2aa6aeae87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "5d2e6e466ee272d62f273fff98dd2423f77bd2f3", "commitAfterChange": "e702e6a53e23b4f475e9578e987e56b628fcf8d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "signatureAfterChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "diff": ["-\t\t\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, expression);", "+\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, expression);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932c162f04f11f89eaa077dc777f5268", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  \tpublic void test042()", "signatureAfterChange": "  \tpublic void test042()", "diff": ["-\t\tpreferences.insert_space_before_block_open_brace = true;", "+\t\tpreferences.insert_space_before_opening_brace_in_block = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9333f97cfd03b06677b426ccfff99f38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildTestSuite(testClass());", "+\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9345636dd45fe86a56b6cb43f8c85616", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b9de5f3466a9b4d6687de837720c445097067b16", "commitAfterChange": "39416e9e4305b172d90b88aed3085d98ded0a86c", "methodNumberBeforeChange": 191, "methodNumberAfterChange": 191, "signatureBeforeChange": "\r \r private boolean isKeyword(char[] tokenSource)", "signatureAfterChange": "\r \r private boolean isKeyword(char[] tokenSource)", "diff": ["-\t\tif (nextToken == TerminalSymbols.TokenNameEOF\r", "+\t\tif (nextToken == ITerminalSymbols.TokenNameEOF\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9362bf147c20a0466841fa604c233f31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void manageEnclosingInstanceAccessIfNecessary(ClassScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageEnclosingInstanceAccessIfNecessary(ClassScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "936b24b496cab14c3d5c2e2cc1cf1008", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 278, "signatureBeforeChange": " protected void consumeStaticInitializer()", "signatureAfterChange": " protected void consumeStaticInitializer()", "diff": ["-\tif (this.diet) block.bits &= ~ASTNode.UndocumentedEmptyBlockMASK; // clear bit set since was diet", "+\tif (this.diet) block.bits &= ~ASTNode.UndocumentedEmptyBlock; // clear bit set since was diet"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "938345a124411f4be403d269f2ac1b12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "ec8fd000a880e2393010eb5c8b67439f8ecd914b", "commitAfterChange": "de4b7bdd89919457ca271598365f7ba9556cd997", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "signatureAfterChange": "\t  \tpublic TypeBinding resolveForCatch(BlockScope scope)", "diff": ["-\t\tif (exceptionType.isGenericType() || exceptionType.isParameterizedType()) {", "+\t\tif (exceptionType.isGenericType() || exceptionType.isBoundParameterizedType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93924ac0736931f8a3c5b9001cbb3f72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void testSuggestSetterName001()", "signatureAfterChange": " public void testSuggestSetterName001()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93a31f3376bfc4499dcbe7fc3daeafcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected String generateSyntaxIncorrectAST()", "signatureAfterChange": " protected String generateSyntaxIncorrectAST()", "diff": ["-\tASTParser parser = ASTParser.newParser(AST.JLS4);", "+\tASTParser parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93a470e9395281f90048da3055cdc8f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "e1051acac48de2e59e4c3d2d0f46898b4067bf9a", "commitAfterChange": "25dbd9e17c7b6920dccf1b458296dbbe00f382de", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic boolean visit(PackageQualifiedType node)", "signatureAfterChange": " \tpublic boolean visit(NameQualifiedType node)", "diff": ["-\tpublic boolean visit(PackageQualifiedType node) {", "+\tpublic boolean visit(NameQualifiedType node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93a5d0d7392b5df27df1f2bdefdede62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "fec6027ca1c6247426252a7173b9c0a11f4d6b8c", "commitAfterChange": "231626db7da3a6ad45ce8225b8c3274868f9ab3c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": "  \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\t\tinitializationScope.problemReporter().annotationMissingForPublic(this.sourceStart, this.sourceEnd);", "+\t\t\t\t\tinitializationScope.problemReporter().annotationMissing(this.sourceStart, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93eb6788f0b56ae33b7009618e35d579", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic SimpleName getReceiverQualifier()", "signatureAfterChange": " \tpublic SimpleName getReceiverQualifier()", "diff": ["-\t\treturn this.receiverQualifier;", "+\t\treturn this.optionalReceiverQualifier;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93f704ff7eb7b578c2173ad3b870a91f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "198d94bedf8984594355707af3b11dd0e060bd78", "commitAfterChange": "ebf5deb17f462a2a1a50c9b4076f1d52394081e1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic boolean visit(AnnotationTypeMemberDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(DimensionInfo node)", "diff": ["+\t */", "+\tpublic boolean visit(DimensionInfo node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93f80296a574236249e091aeccd78d57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void endVisit(AnnotationSingleNameReference argument, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(JavadocSingleNameReference argument, BlockScope scope)", "diff": ["-\tpublic void endVisit(AnnotationSingleNameReference argument, BlockScope scope) {", "+\tpublic void endVisit(JavadocSingleNameReference argument, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94067540bb79d5965d832a6440064a06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 414, "methodNumberAfterChange": 414, "signatureBeforeChange": " \tpublic void test395()", "signatureAfterChange": " \tpublic void test395()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9411de86e3b9949576d47c73c478a68f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \r \tprivate void findFieldsAndMethods(\r \t\tchar[] token,\r \t\tTypeBinding receiverType,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \r \tprivate void findFieldsAndMethods(\r \t\tchar[] token,\r \t\tTypeBinding receiverType,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\t\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "942a95824c4d54a3a2247a0ac997530d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "6e47268ed79fd7b89fd58e0a5c1b77470c0792ef", "commitAfterChange": "dcb63c7bea407ce9399b33fb2441f8ca456fabd4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \tprivate static ClasspathVariableInitializer getClasspathVariableInitializer(String variable)", "signatureAfterChange": "\r \tprivate static ClasspathVariableInitializer getClasspathVariableInitializer(String variable)", "diff": ["-\t\t\t\t\t\t\t\t\tif (JavaModelManager.VARIABLE_VERBOSE) {\r", "+\t\t\t\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "944d47da8002e1de223dffbda9cf9373", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "0d5d4b61217e2b3559edf7001ae24c184bef94b8", "commitAfterChange": "2ead4bdcbfe85e4d5b336d70f2ec655c30027212", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testClasspathReordering() throws CoreException", "signatureAfterChange": " public void testClasspathReordering() throws CoreException", "diff": ["-\t\t\t&& (d.getFlags() & IJavaElementDelta.F_CLASSPATH_REORDER) > 0);", "+\t\t\t&& (d.getFlags() & IJavaElementDelta.F_REORDER) > 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9456d723ce280ba035cbc612acfc08a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject1() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject1() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "945b2b57e335aec4191bc6aa5a8f9cb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexInput.java", "commitBeforeChange": "e8fbf4db76f3cb4cdf82ad5223795b2651c6d983", "commitAfterChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic abstract IQueryResult[] query(String word) throws IOException;", "signatureAfterChange": " \tpublic abstract String[] query(String word) throws IOException;", "diff": ["-\tpublic abstract IQueryResult[] query(String word) throws IOException;", "+\tpublic abstract String[] query(String word) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "945b2c8e55661713c962f65efd641ad2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CorrectionEngine.java", "commitBeforeChange": "0aeb22995e46f30c358e82b0f30fbb77f85d3cde", "commitAfterChange": "8f9fbe48639f547ef5e11d2ef3b8f942596a7f36", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void correct(char[] argument) throws JavaModelException", "signatureAfterChange": "  \tprivate void correct(char[] argument) throws JavaModelException", "diff": ["-\t\t\t\tif (token == ITerminalSymbols.TokenNameEOF) return;", "+\t\t\t\tif (token == TerminalTokens.TokenNameEOF) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "945dc67c300993f2f5fe3558de6abc9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "2acf337b771d06ad716c2ae54bdb8443b5b5d1d6", "commitAfterChange": "28f793f875e5d5b5aa1f2b69f1f41ea8e36715ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean belongsTo(String jobFamily)", "signatureAfterChange": " \tpublic boolean belongsTo(String jobFamily)", "diff": ["-\t// can be found either by project name or JAR path name", "+\t}", "-\t\treturn jobFamily.equals(projectName) || this.path.toString().equals(jobFamily);", "+\t\t// can be found either by project name or JAR path name", "+\t\treturn jobFamily.equals(projectName) || this.indexPath.toString().equals(jobFamily);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "946c3cb002f4eff4b823dba98377fa12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "28020d0b0ceb0e665c1071bfd968796eb9e2e394", "commitAfterChange": "def990b8509828ed437909a92c80eeb89428931a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void setJavaConventionsSettings()", "signatureAfterChange": "  \tpublic void setJavaConventionsSettings()", "diff": ["-\t\tthis.insert_space_before_expression_in_return = true;", "+\t\tthis.insert_space_before_parenthesized_expression_in_return = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9472c3497cd7342141323578ae982321", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": " \t \tprivate void manageClosingParenthesizedExpression(Expression expression, int numberOfParens)", "signatureAfterChange": " \t \tprivate void manageClosingParenthesizedExpression(Expression expression, int numberOfParens)", "diff": ["-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRPAREN, this.preferences.insert_space_before_closing_paren_in_parenthesized_expression);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_before_closing_paren_in_parenthesized_expression);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "947352a40bd26ae28c3615e5ad3fa24d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic boolean overrides(IMethodBinding overridenMethod)", "signatureAfterChange": " \tpublic boolean overrides(IMethodBinding overridenMethod)", "diff": ["-\t\t\tTypeBinding match = this.binding.declaringClass.findSuperTypeWithSameErasure(overridenCompilerBinding.declaringClass);", "+\t\t\tTypeBinding match = this.binding.declaringClass.findSuperTypeOriginatingFrom(overridenCompilerBinding.declaringClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "948931db5d5dd459e2936a8e4680ea0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \r \tpublic final ReferenceBinding getJavaLangAssertionError()", "signatureAfterChange": "\r \r \tpublic final ReferenceBinding getJavaLangAssertionError()", "diff": ["-\t\tcompilationUnitScope().recordReference(JAVA_LANG_ASSERTIONERROR);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(JAVA_LANG_ASSERTIONERROR);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "948ba00e522073d81daf2093f38fec11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "33b6ddc355225393e9c9a4c6f58c7187e9dd64c0", "commitAfterChange": "ac5139f97b2ef313a03ae57144bf0ffdd5bcb6f8", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "\t\t\t \t \tpublic void test0088()", "signatureAfterChange": "\t\t\t \t \tpublic void test0088()", "diff": ["-\t\tcustomOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.DISABLED);", "+\t\tcustomOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94a5d08814cebde7536fafc60fbeddf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementRequestor.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public boolean isCanceled()", "signatureAfterChange": " public boolean isCanceled()", "diff": ["-\treturn fCanceled;", "+\treturn canceled;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94e229e4f4ef156b12213c95876f774b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 152, "methodNumberAfterChange": 152, "signatureBeforeChange": " \tpublic boolean visit(WhileStatement node)", "signatureAfterChange": " \tpublic boolean visit(WhileStatement node)", "diff": ["-\t\t\t\tint startOffset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameRPAREN, pos);", "+\t\t\t\tint startOffset= getScanner().getTokenEndOffset(TerminalTokens.TokenNameRPAREN, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94e951d5d93f50ae8e24c8f0024a89c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyElementsOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void processElement(IJavaElement element) throws JavaModelException", "signatureAfterChange": " protected void processElement(IJavaElement element) throws JavaModelException", "diff": ["-\t\tDeleteElementsOperation deleteOp = new DeleteElementsOperation(new IJavaElement[] { element }, fForce);", "+\t\tDeleteElementsOperation deleteOp = new DeleteElementsOperation(new IJavaElement[] { element }, force);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94e974a3b58a6937ebae56e287ecbcfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic String getQualifiedName()", "signatureAfterChange": " \tpublic String getQualifiedName()", "diff": ["-\t\t\t\tif (isAnonymous() || this.binding.isLocalType() || this.binding.isIntersectionCastType()) {", "+\t\t\t\tif (isAnonymous() || this.binding.isLocalType() || this.binding.isIntersectionType18()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "950637bd556c4ea3750314d91f8b9355", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "96a8824b1e471f1db4dd22f336aec5c7ff8c583e", "commitAfterChange": "45a4bf71a614f82f4a9506597605186918f4c34e", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic void endVisit(MarkerAnnotation annotation, ClassScope scope)", "signatureAfterChange": " \tpublic void endVisit(MarkerAnnotation annotation, CompilationUnitScope scope)", "diff": ["-\tpublic void endVisit(MarkerAnnotation annotation, ClassScope scope) {", "-\t\t// do nothing by default", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "950a6e83db2afb8ae490022a4c7771dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " private void rebuildIndex(String indexName, IPath path)", "signatureAfterChange": " private void rebuildIndex(String indexName, IPath path)", "diff": ["-\t\tJobManager.verbose(\"-> request to rebuild index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tUtil.verbose(\"-> request to rebuild index: \"+indexName+\" path: \"+path.toOSString()); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9531393722b5a894bc32d1a403aca4b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefFieldErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefFieldErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95402007bee3b877ee1605aee4ca6ea3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationBinding.java", "commitBeforeChange": "ee7a9f184cb78c9a997b3d97c102d52d6cad8cc9", "commitAfterChange": "5ce130e25c355987e77b700c026948aca2c3cdd7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic IMemberValuePairBinding[] getDeclaredMemberValuePairs()", "signatureAfterChange": " \t \tpublic IMemberValuePairBinding[] getDeclaredMemberValuePairs()", "diff": ["-\t\tElementValuePair[] internalPairs = this.internalAnnotation.getElementValuePairs();", "+\t\tElementValuePair[] internalPairs = this.binding.getElementValuePairs();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "954f53efb6c63663612684af0ba796bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "44745746fe14ee21b76846ff0560d4bd8139889c", "commitAfterChange": "bf5fdbab3898ef946bf2a56347acd790a3f7a7bd", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public char[] normalizedPath()", "signatureAfterChange": " public char[] normalizedPath()", "diff": ["-\t\tchar[] rawName = this.file.getPath().toCharArray();", "+\t\tchar[] rawName = this.file.getAbsolutePath().toCharArray();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95572214b739d4f1ea6bd6008c479a94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CharLiteral.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void computeConstant()", "signatureAfterChange": " public void computeConstant()", "diff": ["-\tconstant = Constant.fromValue(value);", "+\tconstant = CharConstant.fromValue(value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "955b9195911d86cdcbcd385a93b6ce8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "e5bce80011e3833bbea45afb8cd4fb116b193fc5", "commitAfterChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic IMethodBinding[] getDeclaredMethods()", "signatureAfterChange": " \tpublic IMethodBinding[] getDeclaredMethods()", "diff": ["-\t\t} catch (AbortCompilation e) {", "-\t\t\t// in case a method cannot be resolvable due to missing jars on the classpath", "-\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t} catch (RuntimeException e) {", "+\t\t\t/* in case a method cannot be resolvable due to missing jars on the classpath", "+\t\t\t * see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=63550", "+\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=64299", "+\t\t\t */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "958db9404f7904ea3327ce1868a5ce25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tsynchronized ITypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding referenceBinding)", "signatureAfterChange": " \tsynchronized ITypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding referenceBinding)", "diff": ["-\t\t\t\t\t\tBinding binding2 = problemReferenceBinding.original;", "+\t\t\t\t\t\tBinding binding2 = problemReferenceBinding.closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9591109e4392f59082e18c91b0704c0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedTypesPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public DeclarationOfReferencedTypesPattern(IJavaElement enclosingElement)", "signatureAfterChange": " public DeclarationOfReferencedTypesPattern(IJavaElement enclosingElement)", "diff": ["-\tthis.needsResolve = true;", "+\tthis.mustResolve = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95afa9ca2ac3aaba4e1889fbe2d64b66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testClassFileGetElementAt03() throws JavaModelException", "signatureAfterChange": " public void testClassFileGetElementAt03() throws JavaModelException", "diff": ["-\tassertElementEquals(", "+\tassertElementExists("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95b0f38b4f1bd3bba6820152fe9e58a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testRenameResourceExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRenameResourceExcludedCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95b5dbdf71aa5929644f1804deb6e57e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FineGrainVisitor.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public boolean visit(SingleTypeReference singleTypeReference, BlockScope scope)", "signatureAfterChange": "  public boolean visit(SingleTypeReference singleTypeReference, BlockScope scope)", "diff": ["-\tif (((this.fineGrain & PARAMETERIZED_TYPE_REFERENCE) != 0 && this.parameterizedTypeRef > 0 && this.wildcardTypeRef == 0) ||", "+\tif (((this.fineGrain & TYPE_ARGUMENT_TYPE_REFERENCE) != 0 && this.parameterizedTypeRef > 0 && this.wildcardTypeRef == 0) ||"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95cb3bc4fe05447626cc4255330950c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tboolean visit(AnnotationArraySingleTypeReference typeRef, BlockScope scope);", "signatureAfterChange": " \tboolean visit(JavadocQualifiedTypeReference typeRef, BlockScope scope);", "diff": ["-\tboolean visit(AnnotationArrayQualifiedTypeReference typeRef, BlockScope scope);", "-\tboolean visit(AnnotationArraySingleTypeReference typeRef, BlockScope scope);", "+\tboolean visit(JavadocMessageSend messageSend, BlockScope scope);", "+\tboolean visit(JavadocQualifiedTypeReference typeRef, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95de09b759436fd6715221926c57fc0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \t\tpublic boolean match(ExtraDimension node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(Dimension node, Object other)", "diff": ["-\t\tpublic boolean match(ExtraDimension node, Object other) {", "+\t\tpublic boolean match(Dimension node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e32a4818be346a444c145c387ba974", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "6febc04f00603747029f2ea9616afd5b682c9f03", "commitAfterChange": "ba65adb7228709772812cc43f8ccb14a824acf89", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBalanceValue)", "diff": ["-\tthis.insiseEnumConstantPart = false;", "+\tthis.insideEnumConstantPart = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95f290a54d653b9b1121447a8b395dfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "57be54931a21775011b9d46837f226f82fd878f2", "commitAfterChange": "69b7d322507c416d24ecb0826f4b72b49ddbac45", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public final int recordInitializationStates(FlowInfo flowInfo)", "signatureAfterChange": "  public final int recordInitializationStates(FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0) return -1;", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0) return -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95f3c2cec45bf635a583fb8d2d07ecbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "645b7bfaa2fa6e51ee8178c0b98a65d610d989c2", "commitAfterChange": "6cb5df5deb874bcd03782569c94840e1aa61cfba", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public int matchLevel(Binding binding)", "signatureAfterChange": "\r public int matchLevel(Binding binding)", "diff": ["-\treturn this.matchLevelForType(this.simpleName, this.qualification, enclosingTypeName, type);\r", "+\treturn this.matchLevelForType(this.simpleName, this.pkg, enclosingTypeName, type);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95f627e2ac163005678c08a4e8a288c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tprivate void updateClasspath() throws JavaModelException", "signatureAfterChange": "  \tprivate void updateClasspath() throws JavaModelException", "diff": ["-\t\t\tthis.newResolvedPath = project.getResolvedClasspath(true, this.canChangeResource);", "+\t\t\tthis.newResolvedPath = project.getResolvedClasspath(true, this.canChangeResources);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "961c156362f0de900907b759443d105f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IntLiteral.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.expressionType = null;", "+\t\tthis.resolvedType = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9621bafb2428cd6750a1cc71ec5d9799", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tbits |= IsLocalDeclarationReachableMASK; // only set if actually reached", "+\t\t\tbits |= IsLocalDeclarationReachable; // only set if actually reached"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "962ea6474aacd1ac4d0d566f825e40eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void markPotentiallyNullBit(VariableBinding local)", "signatureAfterChange": "  public void markPotentiallyNullBit(LocalVariableBinding local)", "diff": ["-", "-public void markPotentiallyNullBit(VariableBinding local) {", "+public void markPotentiallyNullBit(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "963dd1044c7e980824ab8e820dc79c89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "3aa96cd0f03615774b8ac0aa730f24089285336b", "commitAfterChange": "a6bc9b89c0f99b3b1a760aa351e68b2be5cc2b5f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r protected RuntimeException internalException(Throwable t)", "signatureAfterChange": "\r \r protected RuntimeException internalException(CoreException t)", "diff": ["-protected RuntimeException internalException(Throwable t) {\r", "+protected RuntimeException internalException(CoreException t) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96574a53325af1b3fae6b44b75560c6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "94a425e221148886c840b4d545bf87183980be4b", "commitAfterChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \t\t \tprivate IPackageFragmentRoot getPackageFragmentRoot(IResource resource, IPath entryPath)", "signatureAfterChange": " \t\t \tprivate IPackageFragmentRoot getPackageFragmentRoot(IResource resource, IPath entryPath)", "diff": ["-\t\t\t\tif (ExternalFoldersManager.isExternal(resource.getFullPath()))", "+\t\t\t\tif (ExternalFoldersManager.isInternalPathForExternalFolder(resource.getFullPath()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "965caf35e58651d5ba17efa7e8fabc51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "936873189a673f91477e64a06e9731a3cafbccf3", "commitAfterChange": "1edc36a4ebb65def36b11761a06c820026a9e573", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializerFlowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void analyseCode( \t\tClassScope classScope, \t\tInitializationFlowContext initializerFlowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\tflowInfo = flowInfo.mergedWith(initializerFlowContext.initsOnReturn);", "+\t\t\t\tflowInfo = flowInfo.mergedWith(constructorContext.initsOnReturn);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "965d2b9d6285d3199be042727ced77b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic boolean visit(QualifiedName node)", "signatureAfterChange": " \tpublic boolean visit(Modifier node)", "diff": ["+\t */", "+\tpublic boolean visit(Modifier node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "966ded6baf0f3d22c6d8d375aa54a65c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public boolean isMarkedAsNullOrNonNullInAssertExpression(LocalVariableBinding local)", "signatureAfterChange": "  public boolean isMarkedAsNullOrNonNullInAssertExpression(VariableBinding local)", "diff": ["-public boolean isMarkedAsNullOrNonNullInAssertExpression(LocalVariableBinding local) {", "+public boolean isMarkedAsNullOrNonNullInAssertExpression(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "967e7eae6daa9146459c482857636a61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void checkComment()", "signatureAfterChange": "  public void checkComment()", "diff": ["-\t\t\t\t\tchar[][] compoundName = constructor.type.getTypeName();", "+\t\t\t\t\tchar[][] compoundName = constructor.type.getParameterizedTypeName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9694116cc45f01a3d5c011d9656084e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-        switch (this.kind) {", "+        switch (this.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "969e9a427e29eb7178a678f68d469cb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testCreateResourceExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testCreateResourceExcludedCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96b4ddd23cc1b24f2973213a36ef2461", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "signatureAfterChange": " public void generateAssignment(BlockScope currentScope, CodeStream codeStream, Assignment assignment, boolean valueRequired)", "diff": ["-\t\t\tif ((this.bits & FirstAssignmentToLocalMASK) != 0) { // for local variable debug attributes", "+\t\t\tif ((this.bits & FirstAssignmentToLocal) != 0) { // for local variable debug attributes"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96b52b16a6d9d481f509a79b0f613463", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9775053c06b88abc4990b96720855b4d26f13ab7", "commitAfterChange": "61d6a0379a06ef6680e82e7f6a32f04040234762", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public static TypeBinding resolveType(TypeBinding type, LookupEnvironment environment, ParameterizedTypeBinding parameterizedType, int rank)", "signatureAfterChange": " public static TypeBinding resolveType(TypeBinding type, LookupEnvironment environment, ParameterizedTypeBinding parameterizedType, int rank)", "diff": ["-\t\t\t\treturn environment.convertToRawType(type);", "+\t\t\t\treturn environment.convertUnresolvedBinaryToRawType(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96d4660699330eb14ba02b8a8e4c8627", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelInfo.java", "commitBeforeChange": "69166fc4e41eda18ba3ac0adb7fbc59250ec70c0", "commitAfterChange": "55ee0265171c95e2014ca1f0a8ad4553c7329fc1", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected IJavaModel getJavaModel()", "signatureAfterChange": "\r protected JavaModel getJavaModel()", "diff": ["-protected IJavaModel getJavaModel() {\r", "+protected JavaModel getJavaModel() {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96e7660e9533f4e9262cbd0f6f2832b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/src/javadoc/testBug54424/Test.java", "commitBeforeChange": "0e82ee49505f2dc8f593e7f3ceaaaad649781096", "commitAfterChange": "ff2e8db00b946d4e04413d311e660b68bb65b08b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ArrayList getList(int from, long to) throws IOException", "signatureAfterChange": " \tpublic AbstractList getList(int from, long to) throws IOException", "diff": ["-\tpublic ArrayList getList(int from, long to) throws IOException {return null;}", "+\tpublic AbstractList getList(int from, long to) throws IOException {return null;}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96f916d86a936f2983b9e843d905e34c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "24c681585ef2f4b155e3d0f5cb2c551e612e2484", "commitAfterChange": "1075c02575f13a345cda8e06bd18891df8b3e61e", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "diff": ["-\t\tthis.scribe.printModifiers(constructorDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_MEMBER);", "+\t\tthis.scribe.printModifiers(constructorDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_METHOD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96fa1c616e58ce5e1bef727f55512ccd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeParameter.java", "commitBeforeChange": "1c367f9da4b67ddc705e012aa9c952ee4bdfc663", "commitAfterChange": "7974f4a5911052c39ead36f51d3952ab684e5130", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\t\tacceptChildren(visitor, this.annotations);", "+\t\t\t\tacceptChildren(visitor, this.modifiers);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "970a3cc2455d6cdb96b7c49863364738", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "7315a9946428ac17ed2f3c53c5f292f76322b904", "commitAfterChange": "62f8132aa6e66bc79d2cfcc69b7efa69d325d62b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected boolean commentParse()", "signatureAfterChange": " \tprotected boolean commentParse()", "diff": ["-\t\t\t\t\t\t\t\trefreshInlineTagPosition(textEndPosition);", "+\t\t\t\t\t\t\t\trefreshInlineTagPosition(previousPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "971042978f8afbac24d7ba051d3ce8fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/PatternSearchJob.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\tIIndex[] indexes = getIndexes(progressMonitor);", "+\t\tIndex[] indexes = getIndexes(progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "971dad0dd91862c5004ec37469f6a812", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void testParameterizedTypeMultipleArguments04() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeMultipleArguments04() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedSourceType(unit,  \"g1.t.m.def.Generic<? super RuntimeException, ? super IllegalMonitorStateException, ? super IllegalMonitorStateException>.MemberGeneric<? extends Throwable, ? extends Exception, ? extends RuntimeException>\"); //$NON-NLS-1$", "+\t\tParameterizedSourceType type = selectParameterizedType(unit,  \"g1.t.m.def.Generic<? super RuntimeException, ? super IllegalMonitorStateException, ? super IllegalMonitorStateException>.MemberGeneric<? extends Throwable, ? extends Exception, ? extends RuntimeException>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "971ddf648b6f8901d911cc08bf8ed0e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void testSuggestGetterName006()", "signatureAfterChange": " public void testSuggestGetterName006()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "972a718f05d112c57616b4838679faa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes)", "signatureAfterChange": "  public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes)", "diff": ["-\t\tif (method.selector.length == selectorLength && CharOperation.prefixEquals(method.selector, selector)) {", "+\t\tif (method.selector.length == selectorLength && CharOperation.equals(method.selector, selector)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "972ca50177ad37602f89b79a732c9f11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "signatureAfterChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName));\r", "+\t\ttypeRequestor.accept(answer.getSourceType(), computePackageFrom(compoundName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97346b876045ddc28f1e62747909379a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tprivate void findTrueOrFalseKeywords(char[][] choices)", "signatureAfterChange": " \tprivate void findTrueOrFalseKeywords(char[][] choices)", "diff": ["-\t\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.KEYWORD, this.actualCompletionPosition);", "+\t\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.KEYWORD, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "973b71eb513263944c24c3c97fc21172", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(EnhancedForStatement node)", "diff": ["+\t */", "+\tpublic boolean visit(EnhancedForStatement node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9744e7e3e87829aaf7dfadad319c48ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cff20a526b50465a2f348a1a5575e634a801a7d8", "commitAfterChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tClassScope scope)", "diff": ["-\t\t\tint dimensions = getExtraDimension();", "+\t\t\tint dimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9750f1174979b4e741e6bca912fd716e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void testMultiLineCommentBlankLineBeforeJavadoctags1()", "signatureAfterChange": " \tpublic void testMultiLineCommentBlankLineBeforeJavadoctags1()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES, \"false\"); //$NON-NLS-1$", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_JAVADOC_COMMENT, \"false\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9751db7f5659b894759cd2fac856b7f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "ace714201cbfe59dcdd43c79db3b1739ee1f02aa", "commitAfterChange": "41184a6e110f669cb023c613b10191b68792d70c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate void checkClassFile(String className, String source, String expectedOutput)", "signatureAfterChange": "  \tprivate void checkClassFile(String className, String source, String expectedOutput)", "diff": ["-\t\t\t\tSystem.out.println(Util.displayString(result, 3));", "+\t\t\t\tSystem.out.print(Util.displayString(result, 3));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9752e8cd803623fcb5e34cbbcef73d95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void cleanupNoLongerGeneratedFiles( \t\t\tBuildContext parent, \t\t\tSet<IFile> lastGeneratedFiles,  \t\t\tSet<IFile> newGeneratedFiles, \t\t\tGeneratedFileManager gfm,\t\t \t\t\tProcessorEnvImpl processorEnv, \t\t\tCollection<IFile> deleted)", "signatureAfterChange": " \tprivate void cleanupNoLongerGeneratedFiles( \t\t\tBuildContext parent, \t\t\tSet<IFile> lastGeneratedFiles,  \t\t\tSet<IFile> newGeneratedFiles, \t\t\tGeneratedFileManager gfm,\t\t \t\t\tBuildEnv processorEnv, \t\t\tCollection<IFile> deleted)", "diff": ["-\t\t\tProcessorEnvImpl processorEnv,", "+\t\t\tBuildEnv processorEnv,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "977b5d807c074cfaac96e49d1d60db18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 546, "methodNumberAfterChange": 546, "signatureBeforeChange": "  public void nullDefaultAnnotationIsRedundant(ASTNode location, Annotation[] annotations, Binding outer)", "signatureAfterChange": "  public void nullDefaultAnnotationIsRedundant(ASTNode location, Annotation[] annotations, Binding outer)", "diff": ["-\tAnnotation annotation = findAnnotation(annotations, TypeIds.T_ConfiguredAnnotationNonNullByDefault);", "+\tAnnotation annotation = findAnnotation(annotations, TypeIds.BitNonNullByDefaultAnnotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97817e31a2f30767dd645b2c28dbf38d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic boolean visit(AnnotationSingleNameReference argument, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(JavadocSingleNameReference argument, BlockScope scope)", "diff": ["-\tpublic boolean visit(AnnotationSingleNameReference argument, BlockScope scope) {", "+\tpublic boolean visit(JavadocSingleNameReference argument, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "978693fdb7d82c45fd13695dc13293ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "da39b69e72c50baaaa7ca77863d468ca697fcf61", "commitAfterChange": "ff204ce3a41738619b4636be750fa00b8770f7a8", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 150, "signatureBeforeChange": "\r \tpublic void endVisit(\r \t\tLocalTypeDeclaration localTypeDeclaration,\r \t\tMethodScope scope)", "signatureAfterChange": "\r \tpublic void endVisit(\r \t\tLocalTypeDeclaration localTypeDeclaration,\r \t\tBlockScope scope)", "diff": ["-\tpublic void endVisit(\r", "-\t\tLocalTypeDeclaration localTypeDeclaration,\r", "-\t\tMethodScope scope) {\r", "-\t}\r", "+\t}\r", "+\tpublic void endVisit(\r", "+\t\tLocalTypeDeclaration localTypeDeclaration,\r", "+\t\tBlockScope scope) {\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "978ce49fa2239a1b2ebfc807bff7ff3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TrueLiteral.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void computeConstant()", "signatureAfterChange": " public void computeConstant()", "diff": ["-\tthis.constant = Constant.fromValue(true);", "+\tthis.constant = BooleanConstant.fromValue(true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "978eeda067eda0afa79ce430dce3314e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexedFile.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static String convertPath(String pathString)", "signatureAfterChange": " \tpublic static String convertPath(String pathString)", "diff": ["-\t\tint index = pathString.indexOf(JarFileEntryDocument.JAR_FILE_ENTRY_SEPARATOR);", "+\t\tint index = pathString.indexOf(IJavaSearchScope.JAR_FILE_ENTRY_SEPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979ef1ada7853ff12b4cfb3c73bbb9d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "df078329218bf2c1a32b5241c9545d932f017e46", "commitAfterChange": "b807535043a8e4f63fd714ed5c671846765013dc", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r protected IBufferManager getBufferManager()", "signatureAfterChange": "\r protected BufferManager getBufferManager()", "diff": ["-protected IBufferManager getBufferManager() {\r", "+protected BufferManager getBufferManager() {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97a0530702d2ae4bdfe9e326fcc83b2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfType.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public ReferenceBinding get(char[] key)", "signatureAfterChange": " public ReferenceBinding get(char[] key)", "diff": ["-\t\tif (currentKey.length == keyLength && CharOperation.prefixEquals(currentKey, key))", "+\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97a33e1dccb066cb7bf02027433f4bd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "c0e1e1c2d0d55cd15c5294fbd89785d2ab8aa5fc", "commitAfterChange": "985d711c4d0025a5a5339070a94d4c12c56e272f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\t \t \tprotected void initializeArguments()", "signatureAfterChange": "\t \t \tprotected void initializeArguments()", "diff": ["-\t\t    typeArguments[i] = typeVariables[i].erasure();", "+\t\t    typeArguments[i] = typeVariables[i].upperBound();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97aecf30852946acfc65a9e916954b0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "ab8c02c44a008f2de315de55f5173248fa4552c7", "commitAfterChange": "312080ad16a6bef0ac87ef3aa13c9fc56f80f732", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static File createAndAddExternalAnnotationJar(  \t\t\tIJavaProject project  ) \t\tthrows IOException, JavaModelException", "signatureAfterChange": " \tpublic static File createAndAddExternalAnnotationJar(  \t\t\tIJavaProject project  ) \t\tthrows IOException, JavaModelException", "diff": ["-\t\tFile extBinDir = getFileInPlugin( AptTestsPlugin.getDefault(), new Path(\"/binext\")); ", "+\t\tFile extBinDir = getFileInPlugin( AptTestsPlugin.getDefault(), new Path(BIN_EXT)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97f593b5bf11174e166f02324451f608", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "9bf79c7ef87f9bb276696a699c24ee7886d82109", "commitAfterChange": "de2cee4ff7b76fb31a04f1c1b724977d8ef8d10e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tBinding getBinaryBinding()", "signatureAfterChange": " \tTypeBinding getBinaryBinding()", "diff": ["-\tBinding getBinaryBinding() {", "+\tTypeBinding getBinaryBinding() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9804aca4e415153ab5c7f66c950086bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "9edf0a990e69fc752ead21c476a00fb874aa8f40", "commitAfterChange": "a5351a8c92738db988d5e1c19e4b7b0af64944e3", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 52, "signatureBeforeChange": "\r \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": "\r \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\t\t\t\t\tregisterResourceDelta(translatedDeltas[i]);\r", "+\t\t\t\t\t\t\t\t\tregisterJavaModelDelta(translatedDeltas[i]);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9816238c2b31ce7c91fdf1b4fb66b6e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\tbinding = ((ProblemReferenceBinding) binding).original;", "+\t\t\t\tbinding = ((ProblemReferenceBinding) binding).closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "983cde68b3bb3b39adde68e88db02962", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected void recordNullReference(LocalVariableBinding local, \tExpression expression, int status)", "signatureAfterChange": " protected void recordNullReference(VariableBinding local, \tExpression expression, int status)", "diff": ["-protected void recordNullReference(LocalVariableBinding local,", "+protected void recordNullReference(VariableBinding local,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9853cfc8930fa0667aa5c95e2504c354", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ASTNodeFinder.java", "commitBeforeChange": "79595bc8e3c8f30e8c21788264b1a2858fc4a5c5", "commitAfterChange": "93f02dc8fee116123b433670b020252814159420", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Initializer findInitializer(IInitializer initializerHandle)", "signatureAfterChange": " \tpublic Initializer findInitializer(IInitializer initializerHandle)", "diff": ["-\t\t\tint occurenceCount = ((JavaElement)initializerHandle).occurrenceCount;", "+\t\t\tint occurenceCount = ((SourceRefElement)initializerHandle).occurrenceCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "985ae63266ea53d05e820cea80f58867", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic CodeFormatterVisitor(FormattingPreferences preferences, Map settings, int offset, int length)", "signatureAfterChange": "  \tpublic CodeFormatterVisitor(DefaultCodeFormatterOptions preferences, Map settings, int offset, int length)", "diff": ["-\tpublic CodeFormatterVisitor(FormattingPreferences preferences, Map settings, int offset, int length) {", "+\tpublic CodeFormatterVisitor(DefaultCodeFormatterOptions preferences, Map settings, int offset, int length) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "986d61847f05510187025020ed87b15f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "signatureAfterChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, \t\tchar[][][] missingTypeNames, ITypeAnnotationWalker walker)", "diff": ["-\t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "+\t\tchar[][][] missingTypeNames, ITypeAnnotationWalker walker)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "989541b375670b78fc58ee518c7229df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/ProjectBinaryOutput.java", "commitBeforeChange": "99342a278896e2f8caf142911ce817f7cc97d106", "commitAfterChange": "2ae41539e386d12d9e7c121e231730e370deda2f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public void scrubOutput()", "signatureAfterChange": "\r public void scrubOutput()", "diff": ["-\t\tentries = projectElement.getExpandedClasspath(true);\r", "+\t\tentries = projectElement.getResolvedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "989c81b244b1c0a19ed90a5c08997e2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \t \tpublic IPath setExternalOutputFolder(IPath projectPath, String name, IPath externalOutputLocation)", "signatureAfterChange": " \t \tpublic IPath setExternalOutputFolder(IPath projectPath, String name, IPath externalOutputLocation)", "diff": ["-\t\t\tf.createLink(externalOutputLocation, IFolder.ALLOW_MISSING_LOCAL, null);", "+\t\t\tf.createLink(externalOutputLocation, IResource.ALLOW_MISSING_LOCAL, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98aa2dec54e3aacfa12cc1ba91066cbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  private void createFields(IBinaryField[] iFields, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": "  private void createFields(IBinaryField[] iFields, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-\t\t\t\tTypeAnnotationWalker walker = getTypeAnnotationWalker(binaryField.getTypeAnnotations()).toField();", "+\t\t\t\tITypeAnnotationWalker walker = getTypeAnnotationWalker(binaryField.getTypeAnnotations()).toField();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98b2cb0d077f653c6081ba552ae2091c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\tpublic boolean match(AnonymousClassDeclaration node, Object other)", "signatureAfterChange": "  \t\tpublic boolean match(AnnotationTypeDeclaration node, Object other)", "diff": ["+\t\tpublic boolean match(AnnotationTypeDeclaration node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98d24cdac1ffe98c490619329437ab07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "40a85c2d4c57226c917bc0f991a26ac5a5d8b085", "commitAfterChange": "a256960ed4710f2897d78e274a4eaeebfce80126", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void endVisit(StringLiteralConcetanation literal, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(StringLiteralConcatenation literal, BlockScope scope)", "diff": ["-\tpublic void endVisit(StringLiteralConcetanation literal, BlockScope scope) {", "+\tpublic void endVisit(StringLiteralConcatenation literal, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98d57f65a9cf68a2f245474f568364fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "985bbf877eb7f0470a093f3a8cf5e47ddbe7045f", "commitAfterChange": "6d56fa2ff304c66dffb3921f7844c0b14acec01a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void completeTypeBindings(CompilationUnitDeclaration parsedUnit, boolean buildFieldsAndMethods)", "signatureAfterChange": "  public void completeTypeBindings(CompilationUnitDeclaration parsedUnit, boolean buildFieldsAndMethods)", "diff": ["-\tparsedUnit.scope.checkParameterizedTypeBounds();\t", "+\tparsedUnit.scope.checkParameterizedTypes();\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98df170d77bce55bd60d9d482c937701", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tpublic boolean visit(ExtraDimension node)", "signatureAfterChange": "  \tpublic boolean visit(Dimension node)", "diff": ["+\tpublic boolean visit(Dimension node) {", "+\t\tthis.buffer.append(\" \");//$NON-NLS-1$", "+\t\tvisitAnnotationsList(node.annotations());", "+\t\tthis.buffer.append(\"[]\"); //$NON-NLS-1$", "+\t\treturn false;", "+\t}", "-", "-\tpublic boolean visit(ExtraDimension node) {", "-\t\tthis.buffer.append(\" \");//$NON-NLS-1$", "-\t\tvisitAnnotationsList(node.annotations());", "-\t\tthis.buffer.append(\"[]\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98e3310d8264fa0afc952ce6773e9725", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "76a2ec884825e9edb380555c61500f23750ece32", "commitAfterChange": "0dc9f4a7cc769fd0c2e397d6cc32c352b61f03b4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static String warningTokenFromIrritant(long irritant)", "signatureAfterChange": " \tpublic static String warningTokenFromIrritant(long irritant)", "diff": ["-\t\t\t\tcase (int) (UnusedTypeArgumentsForMethodInvocation >>> 32) :", "+\t\t\t\tcase (int) (UnusedTypeArguments >>> 32) :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98f936042a0c79e9bab19a32dbfdebb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "7cfb4bfd9c67c4c665ace614d9daab2e82251245", "commitAfterChange": "61a911361035b160c72d8803e32dda7fd6bd7bb6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \tpublic IJavaElement getHandleFromMemento(String memento) throws JavaModelException", "signatureAfterChange": "\r \tpublic IJavaElement getHandleFromMemento(String memento) throws JavaModelException", "diff": ["-\t\t\troot= proj.getPackageFragmentRoot(rootName);\r", "+\t\t\troot= proj.getPackageFragmentRoot(rootPath);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98fe14fd7b87322973b0563491fd7e38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "207ee9452fd93bac118ef54e81b9d1aad5d49a34", "commitAfterChange": "7480a7a028b761dd989d906922ba7da2f58b3ecc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tScribe(NewCodeFormatter formatter, Map settings)", "signatureAfterChange": " \t \tScribe(CodeFormatterVisitor formatter, Map settings)", "diff": ["-\tScribe(NewCodeFormatter formatter, Map settings) {", "+\tScribe(CodeFormatterVisitor formatter, Map settings) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9910376689f80addb566058a694eae36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "  \tprivate void annotateTypeParameter(TypeParameter typeParameter, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations)", "signatureAfterChange": "  \tprivate void annotateTypeParameter(TypeParameter typeParameter, org.eclipse.jdt.internal.compiler.ast.Annotation[] annotations)", "diff": ["-\t\t\tcase AST.JLS4:", "+\t\t\tcase AST.JLS4_INTERNAL:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9913b4056b46bfc33e22f0837d4a0bf7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "97568f9c37f129641284bb42b0df485d8547693d", "commitAfterChange": "359b062d76b50af2a7ba63a16c2b2133308ca095", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic ITypeBinding[] getExceptionTypes()", "signatureAfterChange": " \tpublic ITypeBinding[] getExceptionTypes()", "diff": ["-\t\t\treturn NO_PARAMETERS;", "+\t\t\treturn NO_TYPE_BINDINGS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9915f586610b77c44195fbe6e6367dc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "d504c33cb53fd701eee6eebd11f7e3631ddea7fc", "commitAfterChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "methodNumberBeforeChange": 188, "methodNumberAfterChange": 188, "signatureBeforeChange": " \tpublic static void waitForAutoBuild()", "signatureAfterChange": " \tpublic static void waitForAutoBuild()", "diff": ["-\t\t\t\tPlatform.getJobManager().join(ResourcesPlugin.FAMILY_AUTO_BUILD, null);", "+\t\t\t\tJob.getJobManager().join(ResourcesPlugin.FAMILY_AUTO_BUILD, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991e7b841579bf990dc0722444daff50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 470, "methodNumberAfterChange": 468, "signatureBeforeChange": " \tpublic void test434()", "signatureAfterChange": " \tpublic void test434()", "diff": ["-\t\tpreferences.tab_size = 3;", "+\t\tpreferences.indentation_size = 3;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99217dd9cb6edb02593f95fe24b3de52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerStatementsRecoveryTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testStatementsRecovery01() throws CoreException", "signatureAfterChange": " public void testStatementsRecovery01() throws CoreException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "992a329ad59c51512a35cce7d0b74c9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/FieldAccessCompletionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(FieldAccessCompletionTest.class);", "+\treturn buildAllCompliancesTestSuite(FieldAccessCompletionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9943a5211f144c30f1cf05f1b428952c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "     public static ITypeBinding getTypeBinding(TypeDeclaration type)         throws NonEclipseImplementationException", "signatureAfterChange": "     public static ITypeBinding getTypeBinding(TypeDeclaration type)         throws NonEclipseImplementationException", "diff": ["-        if( type instanceof EclipseMirrorImpl ){           ", "+        if( type instanceof EclipseMirrorObject ){           "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "994598787b9314a1e380b2465673c838", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/MethodInvocationCompletionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(MethodInvocationCompletionTest.class);", "+\treturn buildAllCompliancesTestSuite(MethodInvocationCompletionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "994b03de89113de5e5b66476607cde77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end)", "signatureAfterChange": "  ReferenceBinding getTypeFromConstantPoolName(char[] signature, int start, int end)", "diff": ["-\t} else if (binding == theNotFoundType) {", "+\t} else if (binding == TheNotFoundType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "994b8305acd63a942425ec61e3b72077", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "df078329218bf2c1a32b5241c9545d932f017e46", "commitAfterChange": "b807535043a8e4f63fd714ed5c671846765013dc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected IBuffer openBuffer(IProgressMonitor pm) throws JavaModelException", "diff": ["-\t\t\tIBufferManager bufManager = getBufferManager();\r", "+\t\t\tBufferManager bufManager = getBufferManager();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99648d01f89c55c862a477e7c461506d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AllJavaModelTests.java", "commitBeforeChange": "c840a34d9a6ef7170c744446571f30f0390d5b3c", "commitAfterChange": "37826410a0b5b2dce9e8aafe156b734f571b927f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tsuite.addTest(NameComputerTests.suite());", "+\tsuite.addTest(NamingConventionTests.suite());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99968743512b8bbb48096e25ef314995", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \r \tpublic final ReferenceBinding getJavaIoSerializable()", "signatureAfterChange": "\r \r \tpublic final ReferenceBinding getJavaIoSerializable()", "diff": ["-\t\tcompilationUnitScope().recordReference(JAVA_IO_SERIALIZABLE);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(JAVA_IO_SERIALIZABLE);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99a598d19042db442babb03eeacac72a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected void consumeMethodInvocationSuper()", "signatureAfterChange": " protected void consumeMethodInvocationSuper()", "diff": ["-\tthis.patternLocator.match((MessageSend) this.expressionStack[this.expressionPtr], this.matchSet);", "+\tthis.patternLocator.match((MessageSend) this.expressionStack[this.expressionPtr], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b3220508b665d684dbd7e43a5d7e93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testInvalidTagsConstructorDefaults()", "signatureAfterChange": " \tpublic void testInvalidTagsConstructorDefaults()", "diff": ["-\t\trunConformTest(InvalidReferencesConstructorJavadocComments);", "+\t\trunConformTest(CONSTRUCTORS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99c9330a52b5de14b4572c0cd90faa06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testCompletionNullRequestor() throws JavaModelException", "signatureAfterChange": " public void testCompletionNullRequestor() throws JavaModelException", "diff": ["-\t\tcu.codeComplete(5, (ICompletionRequestor)null);", "+\t\tcu.codeComplete(5, (CompletionRequestor)null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99cdd47b6356585b6688e15189980f61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9775053c06b88abc4990b96720855b4d26f13ab7", "commitAfterChange": "61d6a0379a06ef6680e82e7f6a32f04040234762", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static ReferenceBinding resolveType(ReferenceBinding type, LookupEnvironment environment, boolean convertGenericToRawType)", "signatureAfterChange": " public static ReferenceBinding resolveType(ReferenceBinding type, LookupEnvironment environment, boolean convertGenericToRawType)", "diff": ["-\t\treturn (ReferenceBinding) environment.convertToRawType(type);", "+\t\treturn (ReferenceBinding) environment.convertUnresolvedBinaryToRawType(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d53a375234bc52a30b6daae55efd01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuite(testClass());", "+\t\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99dce1a82eaf04c969c05834afc44eb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public void testBug114341e() throws JavaModelException", "signatureAfterChange": "  public void testBug114341e() throws JavaModelException", "diff": ["-\t\t\"Secondary.Member[TYPE_REF]{Member, javadoc.text, Ljavadoc.text.Secondary$Member;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"Secondary.Member[TYPE_REF]{Member, javadoc.text, Ljavadoc.text.Secondary$Member;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99dd365f5364e07f6f96c9da5fd85825", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic java.util.Hashtable getEntryTable()", "signatureAfterChange": " \tpublic java.util.Hashtable getEntryTable()", "diff": ["-\t\treturn fEntryTable;", "+\t\treturn entryTable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a01a23210dfc0982eb98f6362a3f6a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " boolean areMethodsCompatible(MethodBinding one, MethodBinding two)", "signatureAfterChange": " boolean areMethodsCompatible(MethodBinding one, MethodBinding two)", "diff": ["-\treturn doesMethodOverride(one, two) && areReturnTypesCompatible(one, two);", "+\treturn isParameterSubsignature(one, two) && areReturnTypesCompatible(one, two);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a044a08fb4516f7ec8891d87175e568", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ListRewrite.java", "commitBeforeChange": "1a4eed4ffa5088e3ebe92ac8897cc3720d983860", "commitAfterChange": "f1f25c6cdf998a1ec590849c8e88206d0ec0f3ca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic StructuralPropertyDescriptor getLocationInParent()", "signatureAfterChange": " \tpublic StructuralPropertyDescriptor getLocationInParent()", "diff": ["-\t\treturn this.childProperty;", "+\t\treturn this.childListProperty;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0d95f9cef4b9c6901113241a14ca4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testRenameExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRenameExcludedCompilationUnit() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a19f1a43c65bd1e0f0d60a8186e8594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedSuperReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (currentCompatibleType.id == T_Object) {", "+\t\tif (currentCompatibleType.id == T_JavaLangObject) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a2176361c505149105b2e80ded74b06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "3973964fa15a8c49d459282ce0d949753f7e2224", "commitAfterChange": "be99a78ebde70e086535a722e0c99b2c26590dce", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 21, "signatureBeforeChange": "          public static void setGenSrcDir(IJavaProject jproject, String dirString)", "signatureAfterChange": "          public static void setGenSrcDir(IJavaProject jproject, String dirString)", "diff": ["-    \t\tthrow new IllegalStateException(\"Cannot set the Generated Source Directory to null\"); //$NON-NLS-1$", "+    \t\tthrow new IllegalArgumentException(\"Cannot set the Generated Source Directory to null\"); //$NON-NLS-1$", "-    \t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a334956b000feec74b36fd9a7fd86fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "9033b38dbde8d5f7ad2f8e95220a29f0a229ea8f", "commitAfterChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic Type getElementType()", "signatureAfterChange": " \tpublic Type getElementType()", "diff": ["-\t\treturn internalGetComponentType(ELEMENT_TYPE_PROPERTY);", "+\t\treturn internalGetType(ELEMENT_TYPE_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a3dabc775d0f0775d09d033b761a5a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "30692448718de71df165cc52c018bee7df31a8fb", "commitAfterChange": "7fbd6c6645520ea8c438436fb3626bdc9d3414b8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void exitConstructor(int declarationEnd)", "signatureAfterChange": " \tpublic void exitConstructor(int declarationEnd)", "diff": ["-\t\texitMethod(declarationEnd);", "+\t\texitAbstractMethod(declarationEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a3f51a80ead320efe0ebb8e6d5499d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/Evaluator.java", "commitBeforeChange": "da8689e6058c8df72d6de5be59efe4e5eaaa5d49", "commitAfterChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r abstract protected void addEvaluationResultForCompilationProblem(Hashtable resultsByIDs,IProblem problem, char[] cuSource);", "signatureAfterChange": "\r abstract protected void addEvaluationResultForCompilationProblem(Map resultsByIDs,IProblem problem, char[] cuSource);", "diff": ["-abstract protected void addEvaluationResultForCompilationProblem(Hashtable resultsByIDs,IProblem problem, char[] cuSource);\r", "+abstract protected void addEvaluationResultForCompilationProblem(Map resultsByIDs,IProblem problem, char[] cuSource);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a424f0f20814a4800005f35b61973dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "c7f6d299ed8c40f551e9a2897713e6aad0e44d7d", "commitAfterChange": "255624dabbb8a75ea753cb0f0ee256979a0c4c9f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["+//\t}", "-\t\treturn setupSuite(testClass());", "+\t\treturn buildTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4c372168eea714ea7b1342c2cdf803", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "33b6ddc355225393e9c9a4c6f58c7187e9dd64c0", "commitAfterChange": "ac5139f97b2ef313a03ae57144bf0ffdd5bcb6f8", "methodNumberBeforeChange": 114, "methodNumberAfterChange": 114, "signatureBeforeChange": " \tpublic void test0108()", "signatureAfterChange": " \tpublic void test0108()", "diff": ["-\t\tcustomOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.DISABLED);", "+\t\tcustomOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4c3ef37dee091fb7865d2651570ba5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelInfo.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r protected JavaModelInfo(IJavaModel javaModel, IWorkspace workspace)", "signatureAfterChange": "\r protected JavaModelInfo(IJavaModel javaModel, IWorkspace workspace)", "diff": ["-\tthis.fChildrenCache= new Hashtable(30000);\r", "+\tthis.fChildrenCache= new HashMap(30000);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4c6878465ea443ef6ec171eada00a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "13991702fc2c3e2b678aa9ef22a4a03b29ad808b", "commitAfterChange": "3a8b2107b944f5a4646c23d5049199496436bc6e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\t\tboolean isCompliant15 = scope.compilerOptions().originalSourceLevel >= ClassFileConstants.JDK1_5;", "+\t\t\tboolean isCompliant15 = scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a58c8f55d28fe4db7503654ab555ecc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a9ee2df3848b37b13b74a0d6fb58548ce231875e", "commitAfterChange": "2a16e8a2e7b943b242b9959c374c8d7819b6b3a0", "methodNumberBeforeChange": 531, "methodNumberAfterChange": 531, "signatureBeforeChange": " \tpublic void test512()", "signatureAfterChange": " \tpublic void test512()", "diff": ["-\t\tpreferences.insert_new_line_at_end_of_file = true;", "+\t\tpreferences.insert_new_line_at_end_of_file_if_missing = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a5d2163452d4d23f6548cf71e98e5e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test setupSuite(Class clazz)", "signatureAfterChange": " \tpublic static Test setupSuite(Class clazz)", "diff": ["-\t\treturn buildAllCompliancesSetupSuite(clazz, DebugEvaluationSetup.class, testClasses);", "+\t\treturn buildAllCompliancesTestSuite(clazz, DebugEvaluationSetup.class, testClasses);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a7e1d328198e24b28084204e237d91f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner)", "diff": ["-public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner) {", "+public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a880e79b1f2fb6261cc322e52679945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 341, "methodNumberAfterChange": 341, "signatureBeforeChange": " \t \tpublic void test321()", "signatureAfterChange": " \t \tpublic void test321()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a89cfa20fc70bf82653c87040b4fafd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "commitAfterChange": "a7a4bb422b80975020031dc2489c1287582f5bac", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic ParenthesizedExpression convertToParenthesizedExpression(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "signatureAfterChange": "  \tpublic ParenthesizedExpression convertToParenthesizedExpression(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "diff": ["-\t\tremoveExtraBlanks(expression);", "+\t\ttrimWhiteSpacesAndComments(expression);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a8e39174bc89a983e5c8e084f1c22f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryField.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected BinaryField(IType parent, String name)", "signatureAfterChange": " protected BinaryField(JavaElement parent, String name)", "diff": ["-protected BinaryField(IType parent, String name) {", "+protected BinaryField(JavaElement parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aa0cbf0c1e82484f0643d688370449f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void test114() throws JavaModelException", "signatureAfterChange": " public void test114() throws JavaModelException", "diff": ["-\t\t\t\"ZBasicTestTypes.Inner[JAVADOC_TYPE_REF]{{@link Inner}, javadoc.types, Ljavadoc.types.ZBasicTestTypes$Inner;, null, null, \"+this.positions+R_DICNRIT+\"}\"", "+\t\t\t\"ZBasicTestTypes.Inner[JAVADOC_TYPE_REF]{{@link Inner}, javadoc.types, Ljavadoc.types.ZBasicTestTypes$Inner;, null, null, \"+this.positions+R_DRICNRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aa724b8484ccded8d8bdf84108d1d8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddCompilationUnitToIndex.java", "commitBeforeChange": "ac6a9f56760bba7aec9ca8548c00a789a95fdc11", "commitAfterChange": "f238d59edecc5d87c39084d60c9040567d09deaf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic AddCompilationUnitToIndex(\r \t\tIFile resource,\r \t\tIndexManager manager,\r \t\tIResource indexedContainer)", "signatureAfterChange": "\r \tpublic AddCompilationUnitToIndex(\r \t\tIFile resource,\r \t\tIndexManager manager,\r \t\tIPath indexedContainer)", "diff": ["-\t\tIResource indexedContainer) {\r", "+\t\tIPath indexedContainer) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ace4ef92fee67c8d3626d8109d5101e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tsynchronized ASTNode findDeclaringNode(IResolvedAnnotation instance)", "signatureAfterChange": "  \tsynchronized ASTNode findDeclaringNode(IAnnotationBinding instance)", "diff": ["-\tsynchronized ASTNode findDeclaringNode(IResolvedAnnotation instance) {", "+\tsynchronized ASTNode findDeclaringNode(IAnnotationBinding instance) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9aeca796304ffbd87a5f8329692049d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected OpenableElementInfo createElementInfo()", "signatureAfterChange": " \tprotected Object createElementInfo()", "diff": ["-\tprotected OpenableElementInfo createElementInfo() {", "-", "+\tprotected Object createElementInfo() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b1b0075eb7525e16cb8a251cf0ab5c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void consumeClassHeaderName()", "signatureAfterChange": " protected void consumeClassHeaderName()", "diff": ["-\t\tmarkCurrentMethodWithLocalType();", "+\t\tmarkEnclosingMemberWithLocalType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b2333072a4554f3b0d9d1176910af86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ParameterizedBinaryType.java", "commitBeforeChange": "a37d99b9b3d877f46f13e7d7f9e0829405d7a851", "commitAfterChange": "562f566c1c2b8bfedaad7117a5b53ae2f781bec9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic String getFullyQualifiedParameterizedName() throws JavaModelException", "signatureAfterChange": "  \tpublic String getFullyQualifiedParameterizedName() throws JavaModelException", "diff": ["-\t\treturn getFullyQualifiedParameterizedName(getFullyQualifiedName(), this.uniqueKey);", "+\t\treturn getFullyQualifiedParameterizedName(getFullyQualifiedName(), this.genericTypeSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b2cec280172274c41b59fa7f8666fd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tprivate void configureFromProject(IJavaProject project) throws JavaModelException", "signatureAfterChange": "\r \tprivate void configureFromProject(IJavaProject project) throws JavaModelException", "diff": ["-\t\tfPackageFragments= new Hashtable();\r", "+\t\tfPackageFragments= new HashMap();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b3d39c500dee7d7c1a483ec707ea01d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ba388ee53170dee91fb2402f317f8b352855c459", "commitAfterChange": "d043ef6776b1e3fad1bb618496ee2a48a9410e4b", "methodNumberBeforeChange": 484, "methodNumberAfterChange": 484, "signatureBeforeChange": " protected boolean resumeOnSyntaxError()", "signatureAfterChange": " protected boolean resumeOnSyntaxError()", "diff": ["-\tif (this.dontResumeOnSyntaxError)", "+\tif (this.haltOnSyntaxError)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b44486639d76ebd72aa82e62fd923c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testLocalType3() throws JavaModelException", "signatureAfterChange": " public void testLocalType3() throws JavaModelException", "diff": ["-\t\t\"      Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"      Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b586d6ecd6292d45e2b8116c952adbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "1de8e2f6bc728cee690d70795383b83c1f0d652a", "commitAfterChange": "cccafe00dbf29f156949d8f0d0aec370b02aa048", "methodNumberBeforeChange": 196, "methodNumberAfterChange": 196, "signatureBeforeChange": " public void copyState(CommitRollbackParser from)", "signatureAfterChange": " public void copyState(Parser from)", "diff": ["-public void copyState(CommitRollbackParser from) {", "+public void copyState(Parser from) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b6b4c3795601f58efd38012375b0d2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopySearchTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void tearDown() throws Exception", "signatureAfterChange": " protected void tearDown() throws Exception", "diff": ["-\tthis.workingCopy.destroy();", "+\tthis.workingCopy.discardWorkingCopy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b77c82bd4a0e0d72343607f21baa8ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope)", "diff": ["-\t\tpatternLocator.match(anonymousTypeDeclaration, matchSet);", "+\t\tpatternLocator.match(anonymousTypeDeclaration, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b98f46400227fdba5e69d2e7c542022", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testInnerType2() throws JavaModelException", "signatureAfterChange": " public void testInnerType2() throws JavaModelException", "diff": ["-\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b9b197928d66856e1b448bec3e1b662", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticMethodForSwitchEnum(TypeBinding enumBinding)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethodForSwitchEnum(TypeBinding enumBinding)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b9e15667e7cc9bf0a6517ffa04ada70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "fa66834f9f4ec8541916655f7830d28cd8630692", "commitAfterChange": "47466daad88774b9542c26be2fa2eb0f129ed0bd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private FlowInfo analyseBooleanAssertion(BlockScope currentScope, Expression argument, \t\tFlowContext flowContext, FlowInfo flowInfo, boolean wasInsideAssert, boolean passOnTrue)", "signatureAfterChange": " private FlowInfo analyseBooleanAssertion(BlockScope currentScope, Expression argument, \t\tFlowContext flowContext, FlowInfo flowInfo, boolean wasInsideAssert, boolean passOnTrue)", "diff": ["-\t\tflowContext.tagBits |= FlowContext.INSIDE_NEGATIVE_ASSERT; // this affects syntactic analysis for fields in EqualExpression", "+\t\tflowContext.tagBits |= FlowContext.INSIDE_NEGATION; // this affects syntactic analysis for fields in EqualExpression"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9baa7d5a78dc22498475ee29cb18b118", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeAnnotationWalker toField()", "signatureAfterChange": " \tpublic ITypeAnnotationWalker toField()", "diff": ["-\tpublic TypeAnnotationWalker toField() {", "+\tpublic ITypeAnnotationWalker toField() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bb24905c00f53596048571c64fb26b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "458161dc550c876a0d717a9a36eda696046c367f", "commitAfterChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void reportReference( \tAstNode reference, \tAbstractMethodDeclaration methodDeclaration, \tIJavaElement parent, \tint accuracy) \tthrows CoreException", "signatureAfterChange": " public void reportReference( \tAstNode reference, \tAbstractMethodDeclaration methodDeclaration, \tIJavaElement parent, \tint accuracy) \tthrows CoreException", "diff": ["-\tthis.pattern.matchReportReference(reference, enclosingElement, accuracy, this);", "+\tthis.patternLocator.matchReportReference(reference, enclosingElement, accuracy, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bdef98aead81a3d6efa6c8a66c0da5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r public void exitCompilationUnit(int declarationEnd)", "signatureAfterChange": "\r public void exitCompilationUnit(int declarationEnd)", "diff": ["-\t\t\tIProblem problem= (IProblem)fProblems.elementAt(i);\r", "+\t\t\tIProblem problem= (IProblem)fProblems.get(i);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9bdf56f1977167a2bdd986c727725936", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 169, "signatureBeforeChange": " \tpublic void test0168() throws JavaModelException", "signatureAfterChange": " \tpublic void test0168() throws JavaModelException", "diff": ["-\t\tassertEquals(\"wrong type\", IPackageBinding.PACKAGE, packageBinding.getKind()); //$NON-NLS-1$", "+\t\tassertEquals(\"wrong type\", IBinding.PACKAGE, packageBinding.getKind()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c115aa7cdf2a23abe9cb324cc5eb0b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic Object removeKey (Object key)", "signatureAfterChange": " \tpublic Object removeKey (Object key)", "diff": ["-\t\tLRUCacheEntry entry = (LRUCacheEntry) fEntryTable.get(key);", "+\t\tLRUCacheEntry entry = (LRUCacheEntry) entryTable.get(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c1d0c128df3ef2e3f2c8fb95357f501", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void markAsDefinitelyNonNull(VariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyNonNull(LocalVariableBinding local)", "diff": ["-public void markAsDefinitelyNonNull(VariableBinding local) {", "+", "+public void markAsDefinitelyNonNull(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c1d2698579e8ad4a62aff62a6aed740", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void setJavaConventionsSettings()", "signatureAfterChange": "  \tpublic void setJavaConventionsSettings()", "diff": ["-\t\tthis.alignment_for_enum_constants = Alignment.M_NO_ALIGNMENT;", "+\t\tthis.alignment_for_enum_constants = Alignment.NONE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c295169c11afef6221b688bc38f33c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "88a92ad336846ea63f9a423e130d868364502f04", "commitAfterChange": "2eafa96dbc524655d257daae0d268d7827d97a05", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries) throws JavaModelException", "signatureAfterChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet visitedProjects,  \t\tObjectVector accumulatedEntries) throws JavaModelException", "diff": ["-\t\tIWorkspaceRoot workspaceRoot = this.getWorkspace().getRoot();", "+\t\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c2f594b45b1609a02f7a9d2b5a9a63c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "030eb4fda54a6751c1b822374d11bd8e8163881c", "commitAfterChange": "ec1201be6eb9490fec9fdaa6f4ea5d677aacc407", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void addSyntheticEnumValueOfMethod(SyntheticMethodBinding methodBinding)", "signatureAfterChange": " \tpublic void addSyntheticEnumValueOfMethod(SyntheticMethodBinding methodBinding)", "diff": ["-\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tint attributeNumber = generateMethodInfoAttributes(methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c33878273f910e447b856f19f406e33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testChangeContentOfReadOnlyCU1() throws CoreException", "signatureAfterChange": " public void testChangeContentOfReadOnlyCU1() throws CoreException", "diff": ["-\t\tthis.copy.commit(true, null);", "+\t\tthis.copy.commitWorkingCopy(true, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c3eb0d24fedcaa51df84a7a0f52bb72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageDeclaration.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tPackageDeclaration(AST ast)", "signatureAfterChange": " \tPackageDeclaration(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c440fa0fdf20c66c99b91826e057faa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void testBug139621e() throws JavaModelException", "signatureAfterChange": " public void testBug139621e() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c483c7099fba000002c455433deb4aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "ea1fe8ed052821b2b1ca5a7ad0079411db5ede64", "commitAfterChange": "a2a0577109951f3af96b6ee7e6f23d457b52d52d", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationExpression node)", "signatureAfterChange": " \tpublic boolean visit(IntersectionType node)", "diff": ["+\t */", "+\tpublic boolean visit(IntersectionType node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c495a500472a7cbd0b0b50479049ecd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "8257947b843e715f21b92a87dc4b423cbc1eed03", "commitAfterChange": "00cae100ff4808e2019f6a4d94df4143c8fabbd0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " \tprotected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\t\t\t\tMap externalTimeStamps = JavaModelManager.getJavaModelManager().deltaProcessor.externalTimeStamps;", "+\t\t\t\t\tMap externalTimeStamps = JavaModelManager.getJavaModelManager().deltaState.externalTimeStamps;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c4fa7f6db8b947744424eb51a18586e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cff20a526b50465a2f348a1a5575e634a801a7d8", "commitAfterChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "signatureAfterChange": " \t \tprivate void format(MultiFieldDeclaration multiFieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "diff": ["-\t\t\t\t\tint extraDimensions = getExtraDimension();", "+\t\t\t\t\tint extraDimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c5110f545ecf17ffa90e56ecba0e364", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tfinal private void markAsDefinitelyNotAssigned(int position)", "signatureAfterChange": " \tfinal private void markAsDefinitelyNotAssigned(int position)", "diff": ["-\t\tif (this != DeadEnd) {", "+\t\tif (this != DEAD_END) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c5e8a584c4e1d342092d5e04822ec53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "a3e63b72d2efd2058d202d3e2711391afc827fec", "commitAfterChange": "f0131d199789fbf75036ba10803faed4ef08b399", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void testSuggestFieldName026()", "signatureAfterChange": " public void testSuggestFieldName026()", "diff": ["-\t\t\tNamingConventions.VK_CONSTANT_FIELD,", "+\t\t\tNamingConventions.VK_STATIC_FINAL_FIELD,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c6cb6302a1e01731bd8575ad94bc127", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tprivate void manageOpeningParenthesizedExpression(Expression expression, int numberOfParens)", "signatureAfterChange": "  \tprivate void manageOpeningParenthesizedExpression(Expression expression, int numberOfParens)", "diff": ["-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLPAREN, this.preferences.insert_space_before_open_paren_in_parenthesized_expression);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_open_paren_in_parenthesized_expression);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c7014d03266acdb2fd209125b48ba23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " public void testCloseWorkingCopy() throws JavaModelException", "signatureAfterChange": " public void testCloseWorkingCopy() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c79850544772af4be6181e35e6dacd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuiteWithMinimalCompliance(testClass(), F_1_6);", "+\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_6);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c8cfca9c80e2104d40dace700e55419", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "688d382ce06ce4c4ed41699312bd8e5dc6e27b2c", "commitAfterChange": "be6a57f9d676bfd0ccdc79963ab2c8b8c692c4c8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void testInvalidResolve() throws JavaModelException", "signatureAfterChange": " public void testInvalidResolve() throws JavaModelException", "diff": ["-\t} catch (IllegalArgumentException e) {", "+\t} catch (JavaModelException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c8e5eff261f17e9fe23fc511f532218", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "6a8cde4bbd78102c9fde9da52bc2f1bf76963958", "commitAfterChange": "b69d35a983d0e1b233c90a69307b21908dd75c4a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "signatureAfterChange": " \tpublic IJavaElement createElement(Scope scope, int elementPosition, ICompilationUnit unit, HashSet existingElements, HashMap knownScopes)", "diff": ["-\t\t\t\t\tLambdaExpression expression = (LambdaExpression) scope.referenceContext();", "+\t\t\t\t\tLambdaExpression expression = (LambdaExpression) scope.originalReferenceContext();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c8f89efa12c41528efa1a7a8b5cbf26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\t\tBlockScope currentScope, \t\t\tFlowContext flowContext, \t\t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\t\tBlockScope currentScope, \t\t\tFlowContext flowContext, \t\t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\tnew SwitchFlowContext(flowContext, this, (breakLabel = new Label()));", "+\t\t\t\tnew SwitchFlowContext(flowContext, this, (breakLabel = new BranchLabel()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ca95ee8520de9367b4aaeb07383e561", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 221, "methodNumberAfterChange": 221, "signatureBeforeChange": " \tpublic void _test0207() throws JavaModelException", "signatureAfterChange": " \tpublic void _test0207() throws JavaModelException", "diff": ["-\t\tIResolvedAnnotation[] annotations = binding.getAnnotations();", "+\t\tIAnnotationBinding[] annotations = binding.getAnnotations();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cbf52308e44a42bc389fc2e7270f524", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "30f95fb4ebb82c4f1cdb1fd9e5630fe8b392b9dd", "commitAfterChange": "79595bc8e3c8f30e8c21788264b1a2858fc4a5c5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void acceptPackage(int declarationStart, int declarationEnd, char[] name)", "signatureAfterChange": " public void acceptPackage(int declarationStart, int declarationEnd, char[] name)", "diff": ["-\t\tIPackageDeclaration handle = null;", "+\t\tPackageDeclaration handle = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cc74a195d0cbd4190eb2ef9f8d94d67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "signatureAfterChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceType(), packageBinding);\r", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), packageBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce88cf4650257c0ed898bb268607e34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "f881f7f3af831f777efbcae1d912f604e776b198", "commitAfterChange": "af8ddf1224acdd73d35eff5f86a6b2b80c9a4304", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t public void build(boolean computeSubtypes)", "signatureAfterChange": " \t public void build(boolean computeSubtypes)", "diff": ["-\t\t\tArrayList allOpenablesInRegion = determineOpenablesInRegion(typeInRegionMonitor);", "+\t\t\tHashMap allOpenablesInRegion = determineOpenablesInRegion(typeInRegionMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9cedf4a575a54d95d8002d56268c714b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "a3e63b72d2efd2058d202d3e2711391afc827fec", "commitAfterChange": "f0131d199789fbf75036ba10803faed4ef08b399", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void testSuggestFieldName027()", "signatureAfterChange": " public void testSuggestFieldName027()", "diff": ["-\t\t\tNamingConventions.VK_CONSTANT_FIELD,", "+\t\t\tNamingConventions.VK_STATIC_FINAL_FIELD,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d0c7d0c43cf1b446ec0d7c7f5a84eb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tprivate void formatTypeOpeningBraceForEnumConstant(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "signatureAfterChange": "  \tprivate void formatTypeOpeningBraceForEnumConstant(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "diff": ["-\t\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\t\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1c9460e76f67407bad37326e4491fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate void removeAptBuildProblemMarkers( IJavaProject jproj )", "signatureAfterChange": " \tprivate void removeAptBuildProblemMarkers( IJavaProject jproj )", "diff": ["-\t\t\t\t\tIMarker[] markers = p.findMarkers(AptPlugin.APT_BUILD_PROBLEM_MARKER, false, IResource.DEPTH_ZERO);", "+\t\t\t\t\tIMarker[] markers = p.findMarkers(AptPlugin.APT_LOADER_PROBLEM_MARKER, false, IResource.DEPTH_ZERO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1e42a1a751903e0613ecde39c7d844", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cff20a526b50465a2f348a1a5575e634a801a7d8", "commitAfterChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayTypeReference arrayTypeReference, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayTypeReference arrayTypeReference, \t\tBlockScope scope)", "diff": ["-\t\tint dimensions = getExtraDimension();", "+\t\tint dimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d1f6e78eca3428308598e8b70404008", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FineGrainVisitor.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public boolean visit(ParameterizedSingleTypeReference parameterizedSingleTypeReference, BlockScope scope)", "signatureAfterChange": "  public boolean visit(ParameterizedSingleTypeReference parameterizedSingleTypeReference, BlockScope scope)", "diff": ["-\tif ((this.fineGrain & PARAMETERIZED_TYPE_REFERENCE) != 0) {", "+\tif ((this.fineGrain & TYPE_ARGUMENT_TYPE_REFERENCE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d2a6d44cd40fc58d8bfb6ff7c3d3087", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/CommentTestCase.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tprotected Map getUserOptions()", "signatureAfterChange": "  \tprotected Map getUserOptions()", "diff": ["-\t\treturn fUserOptions;", "+\t\treturn userOptions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d562e664309071dbb7a56b6abffb8c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void markAsComparedEqualToNonNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsComparedEqualToNonNull(VariableBinding local)", "diff": ["-public void markAsComparedEqualToNonNull(LocalVariableBinding local) {", "+public void markAsComparedEqualToNonNull(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d5fc3bea0302f225aae2907354b62c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 241, "signatureBeforeChange": " public void testBug109695b() throws CoreException", "signatureAfterChange": " public void testBug109695b() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"IDPE3\", SearchPattern.R_CAMEL_CASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"IDPE3\", SearchPattern.R_CAMELCASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d65e798a2d70fbdd0ae22ba03c13e1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "02e41bd22396d523c7a0e7b774bb557781eb6970", "commitAfterChange": "4e3cdd53887918496e5ba73e90ca2f99858ae83c", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": "\r protected void consumeStatementTry(boolean withFinally)", "signatureAfterChange": "\r protected void consumeStatementTry(boolean withFinally)", "diff": ["-\ttryStmt.sourceEnd = endPosition;\r", "+\ttryStmt.sourceEnd = endStatementPosition;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d6e1fdb8d8fa0e106fcf456751d4347", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 417, "methodNumberAfterChange": 417, "signatureBeforeChange": " \tpublic void test398()", "signatureAfterChange": " \tpublic void test398()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d8582222807e482491fcef2b69aa957", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void buildTypeVariables()", "signatureAfterChange": " \t \tprivate void buildTypeVariables()", "diff": ["-\t\tif (sourceType.id == T_Object) { // handle the case of redefining java.lang.Object up front", "+\t\tif (sourceType.id == T_JavaLangObject) { // handle the case of redefining java.lang.Object up front"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d85a2fc1a9434917250ea9921a1c830", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/ide/org/eclipse/jdt/internal/compiler/apt/ide/dispatch/IdeAnnotationProcessorManager.java", "commitBeforeChange": "fa6890a86857b15557d9a3a779671e0cc8210b0e", "commitAfterChange": "2f06aa3084f6ea734f231022ff8ccdff064f335a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t@Override \tpublic ProcessorInfo discoverNextProcessor()", "signatureAfterChange": " \t@Override \tpublic ProcessorInfo discoverNextProcessor()", "diff": ["-\t\t\t\tApt6Plugin.log(e, \"Unable to create instance of annotation processor \" + entry.getKey()); //$NON-NLS-1$", "+\t\t\t\tUtil.log(e, \"Unable to create instance of annotation processor \" + entry.getKey()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d8eda81227dce15975196cc6d861417", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void testRemoveInclusionOnPackage() throws CoreException", "signatureAfterChange": " public void testRemoveInclusionOnPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dbd6800ffb06e99a421b572ea588fce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "\t  \tpublic void test058()", "signatureAfterChange": "\t  \tpublic void test058()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dcbf86b014d541d0f866fd6e6ae8aef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testMethodWithError6() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError6() throws JavaModelException, CoreException", "diff": ["-\tthis.workingCopy.destroy(); // don't use the one created in setUp()", "+\tthis.workingCopy.discardWorkingCopy(); // don't use the one created in setUp()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dd6ea60297ccff1bf314724ad27d4f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     public boolean isSuperclassOf(ReferenceBinding otherType)", "signatureAfterChange": "     public boolean isSuperclassOf(ReferenceBinding otherType)", "diff": ["-                return otherType.id == T_Object;", "+                return otherType.id == T_JavaLangObject;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9de63dfb8e5bfb947160a278cc1ba2bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_5.java", "commitBeforeChange": "886d0f0c1c856616883aceae38186164d207f2a8", "commitAfterChange": "3bb52dd94a6650dc05eccd3db55f82a70954db23", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildSuite(javadocTestClass());", "+\t\treturn buildTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9df6183b06102416bca3d99a220274f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2c7f17232300c7fbbf0be41f27d83e269dc11422", "commitAfterChange": "4ee7521407adee0dd67769699b7546434316be93", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \t \tprivate void findImportsOfStaticFields(char[] fieldName, ReferenceBinding ref)", "signatureAfterChange": " \t \tprivate void findImportsOfStaticFields(char[] fieldName, ReferenceBinding ref)", "diff": ["-\t\tFieldBinding[] fields = ref.fields();", "+\t\tFieldBinding[] fields = ref.availableFields();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e0a4fcef0e5e736c42be877d0c4b6ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void test110() throws JavaModelException", "signatureAfterChange": " public void test110() throws JavaModelException", "diff": ["-\t\t\t\"ZBasicTestTypes[TYPE_REF]{ZBasicTestTypes, javadoc.types, Ljavadoc.types.ZBasicTestTypes;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\t\"ZBasicTestTypes[TYPE_REF]{ZBasicTestTypes, javadoc.types, Ljavadoc.types.ZBasicTestTypes;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e31974d634a727743d5a3887980efe7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "53aa3826abf5a6d0c6d46ffdf5ca06318e0e608e", "commitAfterChange": "3a45bbbeb56dfb4a2b74aec609db313f8b4d8387", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 370, "signatureBeforeChange": " \tpublic void test352()", "signatureAfterChange": " \tpublic void test352()", "diff": ["-\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSetttings());", "+\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSettings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e8764553379a06751abde97dc3d8e07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "625da6d5291673f01e323396ceb1f6773e9845a5", "commitAfterChange": "9286ce5f956aa28fecddfe609c2ffd5cc46ab296", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void test0452() throws JavaModelException", "signatureAfterChange": " \tpublic void test0452() throws JavaModelException", "diff": ["-\t\tassertEquals(\"wrong line number\", 3, compilationUnit.lineNumber(name.getStartPosition()));", "+\t\tassertEquals(\"wrong line number\", 3, compilationUnit.getLineNumber(name.getStartPosition()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e9aecd75d5d5ffd93fa0304c0b2d1b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "3cbc5a17035fd93e630a5ce3a447371924b2eaec", "commitAfterChange": "2fbac062d3f933d7974166e3d20ea9843fdd9750", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tprivate void formatOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace)", "signatureAfterChange": "  \tprivate void formatOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace)", "diff": ["-\t\t\tthis.scribe.printComment(CodeFormatter.K_UNKNOWN, Scribe.BASIC_TRAILING_COMMENT);", "+\t\t\tthis.scribe.printComment(CodeFormatter.K_UNKNOWN, Scribe.UNMODIFIABLE_TRAILING_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ebf726598f507711d59f218517cb16a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8ac82b15173c11f12dcb04b961f0ddaace907a44", "commitAfterChange": "582f2efb658b9c606c4026ceef17f48ae9dccdbf", "methodNumberBeforeChange": 948, "methodNumberAfterChange": 948, "signatureBeforeChange": " public void test0925()", "signatureAfterChange": " public void test0925()", "diff": ["-\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_7 /* javac test options */);", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10_b24 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ecffea1f1e6743cb3a65bbc99c96ffa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 340, "methodNumberAfterChange": 340, "signatureBeforeChange": "  \tpublic void test320()", "signatureAfterChange": "  \tpublic void test320()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ed7227f28e87f0c3818d5ee76121fd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a1ff28ac223849c97245f375d1a90ff15a9f8909", "commitAfterChange": "ad9419ce2b413384a1310dd9b222d0ccd125407d", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": " \t \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\t\t\t\t//TODO(david) update this code once bug 157177 will be fixed. ", "-\t\t\t\t\t//searchFor = IJavaSearchConstants.INTERFACE;", "-\t\t\t\t\tsearchFor = IJavaSearchConstants.TYPE;", "+\t\t\t\t\tsearchFor = IJavaSearchConstants.INTERFACE_AND_ANNOTATION;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ee6b93eef865450d130a74c5ea798bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \tpublic final TypeBinding getType(char[][] compoundName)", "signatureAfterChange": "\r \tpublic final TypeBinding getType(char[][] compoundName)", "diff": ["-\t\tcompilationUnitScope().recordReference(compoundName);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(compoundName);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ef7da87c2207c2e9291063e9b538e68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "cb7e1f0df8a87f2b400ca058ed57dff2a93cd223", "commitAfterChange": "53732d4f0f41abb7968ca2914f7509fbca579ac0", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \t \tpublic SwitchStatement convert(org.eclipse.jdt.internal.compiler.ast.SwitchStatement statement)", "signatureAfterChange": " \t \tpublic SwitchStatement convert(org.eclipse.jdt.internal.compiler.ast.SwitchStatement statement)", "diff": ["-\t\tswitchStatement.setExpression(convert(statement.testExpression));", "+\t\tswitchStatement.setExpression(convert(statement.expression));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f09df1ae98326e98dc515f7ec3801ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0) return;", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f103fff90a869017210a9cf603cb339", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter18Test.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test0010() throws JavaModelException", "signatureAfterChange": " \tpublic void test0010() throws JavaModelException", "diff": ["-\t\tassertExtraDimensionsEqual(\"Incorrect extra dimensions\", method.extraDimensionInfos(), \"@Marker [] @Marker []\");", "+\t\tassertExtraDimensionsEqual(\"Incorrect extra dimensions\", method.extraDimensions(), \"@Marker [] @Marker []\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f18f403216214626f99c5f77fa5494e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/BinaryParameterDeclarationImpl.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public IResource getResource()", "signatureAfterChange": "      public IFile getResource()", "diff": ["-    public IResource getResource(){ return null; }", "+    public IFile getResource(){ return null; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f1e62a4d4e4ca396aa84190fc36e077", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "6f6bc9d0562d23a055ee9e986cf21155795a29ff", "commitAfterChange": "7f289b483e1414e7141e9f94307fbe445e3b1b34", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "      private void print(Severity severity, String msg, String[] arguments)", "signatureAfterChange": "      private void print(Severity severity, String msg, String[] arguments)", "diff": ["-     \t_env.addProblem(null, 0, -1, severity, msg, 1, arguments );  ", "+     \t_env.addMessage(null, 0, -1, severity, msg, 1, arguments );  "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f36628d0590c00298f8b5784302e57d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/TestVerifier.java", "commitBeforeChange": "2483ac09a8125d318f0d65ce74d17599684aee53", "commitAfterChange": "7145bdca11a91565ab60b6927646ef17342a693f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  private void compileVerifyTests(String verifierDir)", "signatureAfterChange": "  private void compileVerifyTests(String verifierDir)", "diff": ["-\torg.eclipse.jdt.internal.compiler.batch.Main.compile(\"\\\"\" + fileName + \"\\\" -d \\\"\" + verifierDir + \"\\\" -classpath \\\"\" + Util.getJavaClassLib() + \"\\\"\");", "+\torg.eclipse.jdt.internal.compiler.batch.Main.compile(\"\\\"\" + fileName + \"\\\" -d \\\"\" + verifierDir + \"\\\" -classpath \\\"\" + Util.getJavaClassLibsAsString() + \"\\\"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f3ad3ba355c093a12553ba3b1cbf67f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "149c538751123b079a5874a00aba83297561ab5c", "commitAfterChange": "7bd675acf4007077bf6bd84b82139719c7a8ca75", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\t\tboolean isCompliant15 = scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5;", "+\t\t\tboolean isCompliant15 = scope.compilerOptions().originalSourceLevel >= ClassFileConstants.JDK1_5;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f507c4725a6117ef77713d2e11e1bab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "diff": ["-\t\t\t\t\tpos= getScanner().getPreviousTokenEndOffset(ITerminalSymbols.TokenNameEQUAL, pos);", "+\t\t\t\t\tpos= getScanner().getPreviousTokenEndOffset(TerminalTokens.TokenNameEQUAL, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f833a5caf2526d702ada31990b250c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "616a41b14ead174db92c630ec6ed7f1d666a9b67", "commitAfterChange": "645b7eff21d5db2b90380f1d4478beb9fa33f107", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject2() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject2() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f8c70523de64b59ae074a41e6b55afd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "6ca82f1a54d472af29c424861c5280a8ebc7b028", "commitAfterChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected int matchLevelForDeclarations(ConstructorDeclaration constructor)", "signatureAfterChange": " protected int matchLevelForDeclarations(ConstructorDeclaration constructor)", "diff": ["-\treturn this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH;", "+\treturn this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f975babbb4fa6309e37d84f2c7417ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression.java", "commitBeforeChange": "ef5b66cb7c773d1ffaaec5b226db9303dab88c74", "commitAfterChange": "b262291b952498e87c2c590fc7f1a7ad1af7505c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (checkedType.isTypeVariable() || checkedType.isParameterizedType() || checkedType.isGenericType()) {", "+\t\tif (checkedType.isTypeVariable() || checkedType.isBoundParameterizedType() || checkedType.isGenericType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb2c7e9e6d1b47139a81678abf29263", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedAllocationExpression.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic SelectionOnQualifiedAllocationExpression(AnonymousLocalTypeDeclaration anonymous)", "signatureAfterChange": " \t \tpublic SelectionOnQualifiedAllocationExpression(TypeDeclaration anonymous)", "diff": ["-\tpublic SelectionOnQualifiedAllocationExpression(AnonymousLocalTypeDeclaration anonymous) {", "+\tpublic SelectionOnQualifiedAllocationExpression(TypeDeclaration anonymous) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fb6a18333cad9830abfb494962dc875", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "ede29d30ca3ea375225ff2fe9666932762aab652", "commitAfterChange": "390408269914cfc5ff0c8401238241c8bbbe24d3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": "  protected void clean(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  protected void clean(IProgressMonitor monitor) throws CoreException", "diff": ["-", "-\t//this.runningBatchBuild = true; until https://bugs.eclipse.org/bugs/show_bug.cgi?id=203058 is resolved", "-\tthis.notifier = new BuildNotifier(monitor, this);", "+\tthis.notifier = new BuildNotifier(monitor, currentProject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fc991e9ee62889bdf2fdefa65cc5efb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "035e81e22d7f5ffa0ef14b6015456b50ec72de9a", "commitAfterChange": "3d4c80327c4bd6f61a1ef852d9f8cb11ff6d9d62", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public boolean encloses(String resourcePathString)", "signatureAfterChange": " public boolean encloses(String resourcePathString)", "diff": ["-\treturn this.encloses(fullPath(resourcePathString)) >= 0;", "+\treturn this.indexOf(fullPath(resourcePathString)) >= 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fd71f9301bfbd4034884e07b04d8c74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "edd951b2efc6b8f7b24cb3f178fd99c174eb6c7a", "commitAfterChange": "dec2dac6f78a5ffa915ffd3b73cb386c60b72cae", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " char[][] getExclusionPatterns()", "signatureAfterChange": " char[][] getExclusionPatterns()", "diff": ["-\t\treturn ((ClasspathEntry)getRawClasspathEntry()).charBasedExclusionPatterns();", "-\t} catch (JavaModelException e) {", "+\t\treturn ((ClasspathEntry)getRawClasspathEntry()).fulExclusionPatternChars();", "+\t} catch (JavaModelException e) { "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fe256bb7154fedbcdadc497d3daa2b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "da39b69e72c50baaaa7ca77863d468ca697fcf61", "commitAfterChange": "ff204ce3a41738619b4636be750fa00b8770f7a8", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 149, "signatureBeforeChange": "\r \tpublic boolean visit(\r \t\tLocalTypeDeclaration localTypeDeclaration,\r \t\tMethodScope scope)", "signatureAfterChange": "\r \tpublic boolean visit(\r \t\tLocalTypeDeclaration localTypeDeclaration,\r \t\tBlockScope scope)", "diff": ["-\tpublic boolean visit(\r", "-\t\tLocalTypeDeclaration localTypeDeclaration,\r", "-\t\tMethodScope scope) {\r", "-\t\treturn true;\r", "-\t}\r", "+\tpublic boolean visit(\r", "+\t\tLocalTypeDeclaration localTypeDeclaration,\r", "+\t\tBlockScope scope) {\r", "+\t\treturn true;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a011e55f16db9c7942259c9db9483f00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " protected void consumeInterfaceDeclaration()", "signatureAfterChange": " protected void consumeInterfaceDeclaration()", "diff": ["-\t// mark fields and initializer with local type mark if needed", "-\tmarkFieldsWithLocalType(typeDecl);", "+\t// mark initializers with local type mark if needed", "+\tmarkInitializersWithLocalType(typeDecl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a03013127a18d3b19a0d8749f131d90a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic long modificationCount()", "signatureAfterChange": " \tpublic long modificationCount()", "diff": ["-\t\treturn this.modCount;", "+\t\treturn this.modificationCount;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0360eb0222c01da99305621c92a5de9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testGetSourceRangeInnerClass() throws JavaModelException", "signatureAfterChange": " public void testGetSourceRangeInnerClass() throws JavaModelException", "diff": ["-\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A$Inner.class\");", "+\tIClassFile cf = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A$Inner.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a04860dcdfa40926083522cfc4b51481", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "b308074bc5b31f3a5857e47f87565296fbba4a15", "commitAfterChange": "d36a5b020e7b8fc57d912810db0ffb9dd045eb9a", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void resolve()", "signatureAfterChange": "  public void resolve()", "diff": ["-\t\tif (!this.compilationResult.hasErrors()) checkUnusedImports();", "+\t\tif (!this.compilationResult.hasMandatoryErrors()) checkUnusedImports();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a050e51fd6159331c5efe3e9d2565221", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/ProjectResourceCopier.java", "commitBeforeChange": "99342a278896e2f8caf142911ce817f7cc97d106", "commitAfterChange": "2ae41539e386d12d9e7c121e231730e370deda2f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public ProjectResourceCopier(IJavaProject project, JavaDevelopmentContextImpl devContext, BuildNotifier notifier, float totalAvailableProgress)", "signatureAfterChange": "\r public ProjectResourceCopier(IJavaProject project, JavaDevelopmentContextImpl devContext, BuildNotifier notifier, float totalAvailableProgress)", "diff": ["-\t\tIClasspathEntry[] entries = this.project.getExpandedClasspath(true);\r", "+\t\tIClasspathEntry[] entries = this.project.getResolvedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a083a029fcb0e4752794e5763f1e02fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "81c62d5935a591fe4cf87abbebf09e04755572ce", "commitAfterChange": "18c9ee28439dc99049f5f8ecbf6109b62307dc52", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public int computeSeverity(int problemID)", "signatureAfterChange": " public int computeSeverity(int problemID)", "diff": ["-\t\tcase IProblem.JavadocNotVisibleReference:", "+\t\tcase IProblem.JavadocHiddenReference:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a087e6daf6b1c7587145f0ca55483d7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tvoid endVisit(AnnotationFieldReference fieldRef, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(JavadocFieldReference fieldRef, BlockScope scope);", "diff": ["-\tvoid endVisit(AnnotationArraySingleTypeReference typeRef, BlockScope scope);", "-\tvoid endVisit(AnnotationFieldReference fieldRef, BlockScope scope);", "+\tvoid endVisit(JavadocArraySingleTypeReference typeRef, BlockScope scope);", "+\tvoid endVisit(JavadocFieldReference fieldRef, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a089b458fac362906c63c4c6ff7df020", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "76a2ec884825e9edb380555c61500f23750ece32", "commitAfterChange": "0dc9f4a7cc769fd0c2e397d6cc32c352b61f03b4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static String optionKeyFromIrritant(long irritant)", "signatureAfterChange": " \tpublic static String optionKeyFromIrritant(long irritant)", "diff": ["-\t\t\t\tcase (int)(UnusedTypeArgumentsForMethodInvocation >>> 32):", "+\t\t\t\tcase (int)(UnusedTypeArguments >>> 32):"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a08f62480b682bbd3aa4a6bd96c52933", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected void consumeSingleTypeImportDeclarationName()", "signatureAfterChange": " protected void consumeSingleTypeImportDeclarationName()", "diff": ["-\t// flush annotations defined prior to import statements", "-\treference.declarationSourceEnd = this.flushAnnotationsDefinedPriorTo(reference.declarationSourceEnd);", "+\t// flush comments defined prior to import statements", "+\treference.declarationSourceEnd = this.flushCommentsDefinedPriorTo(reference.declarationSourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d0d37180865d8761bde582896a5943", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "02855639d3ba83baf147f03e6554692727e6c5ef", "commitAfterChange": "be60c5fae8401603b06f3ef1fdaad755202820be", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static boolean deleteFile(IPath path)", "signatureAfterChange": " \tpublic static IStatus deleteFile(IPath path)", "diff": ["-\tpublic static boolean deleteFile(IPath path) {", "+\tpublic static IStatus deleteFile(IPath path) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d4efa123cb8eaed4ba1b4b3e3aa6b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "b6254fb64d881dcd86d8033c8a2a995ebecfe758", "commitAfterChange": "a9b4a96f89a5001ca6f786611e4b075147feb7c6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, ReferenceBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "diff": ["-\tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, ReferenceBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite) {", "+\tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0d5a8055f7e81b33e9d8bd99765d3f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "commitAfterChange": "b21cadb5eae53d9f84dce9f073b5350a267b6ad6", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public void locateMatches(SearchDocument[] searchDocuments) throws CoreException", "signatureAfterChange": " public void locateMatches(SearchDocument[] searchDocuments) throws CoreException", "diff": ["-\tif (SearchEngine.VERBOSE) {", "+\tif (SearchBasicEngine.VERBOSE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0e3329b84989636856295c259e525ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "74616a9a7c56963b1ad7237e43bfe460788f65e2", "commitAfterChange": "2fed68de4f28af9e25ceba559157a67158806686", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\tthis.err.println(Main.bind(\"configure.incorrectClasspath\", this.classpaths[i])); //$NON-NLS-1$", "+\t\t\t\tthis.out.println(Main.bind(\"configure.incorrectClasspath\", this.classpaths[i])); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0ea43074c59155c2abd89ebc81ebd3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void consumeInterfaceHeaderName()", "signatureAfterChange": " protected void consumeInterfaceHeaderName()", "diff": ["-\t\tmarkCurrentMethodWithLocalType(); ", "+\t\tmarkEnclosingMemberWithLocalType(); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0eac1061863c4754fdadbb255ae7ddc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "b9cb873d4449d2f10b10f7985e564b1f6bad691b", "commitAfterChange": "1ffd93ec138fc38a22c082921b3ee25a9e75ba37", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \tpublic void endVisit(ForStatement node)", "signatureAfterChange": " \tpublic void endVisit(EnumDeclaration node)", "diff": ["+\t}", "+\tpublic void endVisit(EnumDeclaration node) {", "+\t\tendVisitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0f841b8bd05510d7bfd1e6ce4b5f0a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\t\t\tif ((localType.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\t\t\t\t\tif ((localType.bits & ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0f8ea6acf3ee07c304bf7b058bda6ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic boolean visit(AnnotationSingleTypeReference typeRef, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(JavadocArrayQualifiedTypeReference typeRef, BlockScope scope)", "diff": ["+\tpublic boolean visit(JavadocArrayQualifiedTypeReference typeRef, BlockScope scope) {", "-\tpublic boolean visit(AnnotationSingleTypeReference typeRef, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0f90bf3e12d8f5ebbfd6a5910f60087", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tprivate void findLocalMethodsOfStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findLocalMethodsOfStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\t\tif (lookupEnvironment.methodVerifier().doesMethodOverride(otherMethod, method)) {", "+\t\t\t\t\tif (lookupEnvironment.methodVerifier().isMethodSubsignature(otherMethod, method)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a101f86d9661184edd748bf70fe589df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IfStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic IfStatement(Expression condition, Statement thenStatement, \tint sourceStart, int sourceEnd)", "signatureAfterChange": "  \tpublic IfStatement(Expression condition, Statement thenStatement, \tint sourceStart, int sourceEnd)", "diff": ["-\t\tif (thenStatement instanceof EmptyStatement) thenStatement.bits |= IsUsefulEmptyStatementMASK;", "+\t\tif (thenStatement instanceof EmptyStatement) thenStatement.bits |= IsUsefulEmptyStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a10c15394686be84454a712cd81b3ead", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "70effe9371786cf1a847541cdf58189d17ea0795", "commitAfterChange": "91a5b49121a22c32ff81484145fe6ce15b755e81", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " protected void consumeEmptyMemberValueArrayInitializer()", "signatureAfterChange": " protected void consumeEmptyMemberValueArrayInitializer()", "diff": ["-\tmemberValueArrayInitializer(0);", "+\tarrayInitializer(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a12415f3f100ad36ec532321ca3d69e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": "  \tpublic void test100()", "signatureAfterChange": "  \tpublic void test100()", "diff": ["-\t\tpreferences.insert_space_before_first_initializer = true;", "+\t\tpreferences.insert_space_after_opening_brace_in_array_initializer = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a126a6ad98f2f6a5529b3a7f65c7b0d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r protected void notifyChanged(BufferChangedEvent event)", "signatureAfterChange": "\r protected void notifyChanged(BufferChangedEvent event)", "diff": ["-\t\t\tIBufferChangedListener listener = (IBufferChangedListener) fChangeListeners.elementAt(i);\r", "+\t\t\tIBufferChangedListener listener = (IBufferChangedListener) fChangeListeners.get(i);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a12b7260f9e8f6c355f79db17b11d188", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void testBug139621a() throws JavaModelException", "signatureAfterChange": " public void testBug139621a() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a147bc9e8fa9e916ddbe59e8e9242c00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r \tprivate void buildForProject(JavaProject project, Vector infos, Vector units)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r private void buildForProject(JavaProject project, Vector infos, Vector units) throws JavaModelException", "diff": ["+}\r", "+private void buildForProject(JavaProject project, Vector infos, Vector units) throws JavaModelException {\r", "+\tIType focusType = this.getType();\r", "+\tif (focusType != null && focusType.getJavaProject().equals(project)) {\r", "+\t\t// add focus type\r", "+\t\ttry {\r", "+\t\t\tinfos.addElement(((JavaElement) focusType).getRawInfo());\r", "+\t\t} catch (JavaModelException e) {\r", "+\t\t\t// if the focus type is not present, or if cannot get workbench path\r", "+\t\t\t// we cannot create the hierarchy\r", "+\t\t\treturn;\r", "+\t\r", "+\t// copy vectors into arrays\r", "+\tIGenericType[] genericTypes;\r", "+\tint infosSize = infos.size();\r", "+\tif (infosSize > 0) {\r", "+\t\tgenericTypes = new IGenericType[infosSize];\r", "+\t\tinfos.copyInto(genericTypes);\r", "+\t} else {\r", "+\t\tgenericTypes = new IGenericType[0];\r", "+\t}\r", "+\tICompilationUnit[] compilationUnits;\r", "+\tint unitsSize = units.size();\r", "+\tif (unitsSize > 0) {\r", "+\t\tcompilationUnits = new ICompilationUnit[unitsSize];\r", "+\t\tunits.copyInto(compilationUnits);\r", "+\t} else {\r", "+\t\tcompilationUnits = new ICompilationUnit[0];\r", "-\r", "-\tprivate void buildForProject(JavaProject project, Vector infos, Vector units)\r", "-\t\tthrows JavaModelException {\r", "-\t\tIType focusType = this.getType();\r", "+\t// resolve\r", "+\tif (infosSize > 0 || unitsSize > 0) {\r", "+\t\tthis.searchableEnvironment = (SearchableEnvironment)project.getSearchableNameEnvironment();\r", "-\t\t\t// add focus type\r", "-\t\t\ttry {\r", "-\t\t\t\tinfos.addElement(((JavaElement) focusType).getRawInfo());\r", "-\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t// if the focus type is not present, or if cannot get workbench path\r", "-\t\t\t\t// we cannot create the hierarchy\r", "-\t\t\t\treturn;\r", "-\t\t\t}\r", "+\t\t\tthis.searchableEnvironment.unitToLookInside = (CompilationUnit)focusType.getCompilationUnit();\r", "-\r", "-\t\t// copy vectors into arrays\r", "-\t\tIGenericType[] genericTypes;\r", "-\t\tint infosSize = infos.size();\r", "-\t\tif (infosSize > 0) {\r", "-\t\t\tgenericTypes = new IGenericType[infosSize];\r", "-\t\t\tinfos.copyInto(genericTypes);\r", "-\t\t} else {\r", "-\t\t\tgenericTypes = new IGenericType[0];\r", "-\t\t}\r", "-\t\tICompilationUnit[] compilationUnits;\r", "-\t\tint unitsSize = units.size();\r", "-\t\tif (unitsSize > 0) {\r", "-\t\t\tcompilationUnits = new ICompilationUnit[unitsSize];\r", "-\t\t\tunits.copyInto(compilationUnits);\r", "-\t\t} else {\r", "-\t\t\tcompilationUnits = new ICompilationUnit[0];\r", "-\t\t}\r", "-\r", "-\t\t// resolve\r", "-\t\tif (infosSize > 0 || unitsSize > 0) {\r", "-\t\t\tthis.searchableEnvironment =\r", "-\t\t\t\t(SearchableEnvironment) project.getSearchableNameEnvironment();\r", "-\t\t\tif (focusType != null && focusType.getJavaProject().equals(project)) {\r", "-\t\t\t\tthis.searchableEnvironment.unitToLookInside =\r", "-\t\t\t\t\t(CompilationUnit) focusType.getCompilationUnit();\r", "-\t\t\t}\r", "-\t\t\tthis.nameLookup = project.getNameLookup();\r", "-\t\t\tthis.hierarchyResolver =\r", "-\t\t\t\tnew HierarchyResolver(this.searchableEnvironment, this, new ProblemFactory());\r", "-\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits);\r", "-\t\t\tif (focusType != null && focusType.getJavaProject().equals(project)) {\r", "-\t\t\t\tthis.searchableEnvironment.unitToLookInside = null;\r", "-\t\t\t}\r", "+\t\tthis.nameLookup = project.getNameLookup();\r", "+\t\tthis.hierarchyResolver = \r", "+\t\t\tnew HierarchyResolver(this.searchableEnvironment, this, new DefaultProblemFactory());\r", "+\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits);\r", "+\t\tif (focusType != null && focusType.getJavaProject().equals(project)) {\r", "+\t\t\tthis.searchableEnvironment.unitToLookInside = null;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a14c307acf1505935d84403d6bdded86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Initializer.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1575b534678dc7a1d92ec0210e278aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner)", "diff": ["-public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner) {", "+public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1872d4440b0aa89d845fb6bedd59a1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/TestCase.java", "commitBeforeChange": "5cf485bd61f4835a2e8ccc713ba630687bb22c70", "commitAfterChange": "671daba135451cb4a52ef618181f9bb70e977d0a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic TestCase(String name)", "signatureAfterChange": " \tpublic TestCase(String name)", "diff": ["-public class TestCase extends junit.framework.TestCase {", "+public class TestCase extends PerformanceTestCase {", "-\t\tsuper(name);", "+\t\tsetName(name);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a18d347bf467f1fc9eb639d8300bd331", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "fb5a4a9153591472847460cda5686593e378d5bf", "commitAfterChange": "c5e448ecc90e8d75bf431155e497df695586ca94", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected void resetDefaults()", "signatureAfterChange": "  \tprotected void resetDefaults()", "diff": ["-\t\tthis.defaultNonNullness = 0;", "+\t\tthis.intendedDefaultNonNullness = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a18e92f3de5f75d7a1e81fa819fc9690", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "b9de5f3466a9b4d6687de837720c445097067b16", "commitAfterChange": "39416e9e4305b172d90b88aed3085d98ded0a86c", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r public void parseTypeMemberDeclarations(\r \tISourceType sourceType, \r \tICompilationUnit sourceUnit, \r \tint start, \r \tint end, \r \tboolean needReferenceInfo)", "signatureAfterChange": "\r public void parseTypeMemberDeclarations(\r \tISourceType sourceType, \r \tICompilationUnit sourceUnit, \r \tint start, \r \tint end, \r \tboolean needReferenceInfo)", "diff": ["-\t\t\trequestor.acceptLineSeparatorPositions(scanner.lineEnds());\r", "+\t\t\trequestor.acceptLineSeparatorPositions(scanner.getLineEnds());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1a9c108d662f9e64e86cdecb9fd6498", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/JavadocCompletionParserTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(JavadocCompletionParserTest.class);", "+\treturn buildAllCompliancesTestSuite(JavadocCompletionParserTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1aa5b3c49414f61acb44bbd6fb64e32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "a9ee2df3848b37b13b74a0d6fb58548ce231875e", "commitAfterChange": "2a16e8a2e7b943b242b9959c374c8d7819b6b3a0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void setJavaConventionsSettings()", "signatureAfterChange": " \t \tpublic void setJavaConventionsSettings()", "diff": ["-\t\tthis.insert_new_line_at_end_of_file = false;", "+\t\tthis.insert_new_line_at_end_of_file_if_missing = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1b2dd46f876fe9b0fbb2e300043a38a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/SourceModifier.java", "commitBeforeChange": "ff2422726abd9b4eb2726e976f3ef82854d72609", "commitAfterChange": "20fa08dd67915598091c483c6e898b71bc3a58de", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic ReplaceEdit[] getModifications(String source)", "signatureAfterChange": " \t \tpublic ReplaceEdit[] getModifications(String source)", "diff": ["-\t\tint destIndentLevel= Indents.computeIndentUnits(this.destinationIndent, this.tabWidth, this.indentWidth);", "+\t\tint destIndentLevel= Indents.measureIndentUnits(this.destinationIndent, this.tabWidth, this.indentWidth);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1bd6b69f0033948df8b86030410aaae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1c27184eae08b68ef9731a7e8bf4541", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/FieldInfo.java", "commitBeforeChange": "5e9228969768cbfafe3797c4206907b59326e768", "commitAfterChange": "c367628b2cad82bf919cebefbb71b27d01a9edaa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int getModifiers()", "signatureAfterChange": " public int getModifiers()", "diff": ["-\t\treadDeprecatedAndSyntheticAttributes();", "+\t\treadModifierRelatedAttributes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f3a0f299c4c15e3eac6653ca91016d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testInsertMiddle() throws CoreException", "signatureAfterChange": " public void testInsertMiddle() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1f7d24a7fc5c57aef47d9988a16e929", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/IIndex.java", "commitBeforeChange": "e8fbf4db76f3cb4cdf82ad5223795b2651c6d983", "commitAfterChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tIQueryResult[] queryInDocumentNames(String word) throws IOException;", "signatureAfterChange": " \tString[] queryInDocumentNames(String word) throws IOException;", "diff": ["-\tIQueryResult[] queryInDocumentNames(String word) throws IOException;", "+\tString[] queryInDocumentNames(String word) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a205589d451746e2e1d2457c1de2da85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, IPackageFragment dest) throws JavaModelException", "signatureAfterChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, PackageFragment dest) throws JavaModelException", "diff": ["-\tprivate void processCompilationUnitResource(ICompilationUnit source, IPackageFragment dest) throws JavaModelException {", "+\tprivate void processCompilationUnitResource(ICompilationUnit source, PackageFragment dest) throws JavaModelException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a208a30b593fe368c713572fff29fc23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "24c681585ef2f4b155e3d0f5cb2c551e612e2484", "commitAfterChange": "1075c02575f13a345cda8e06bd18891df8b3e61e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "signatureAfterChange": "  \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "diff": ["-\t\tthis.scribe.printModifiers(fieldDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_MEMBER);", "+\t\tthis.scribe.printModifiers(fieldDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_FIELD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2195cdb765ecdcfa84cfdbe7f02b92e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public void test034() throws JavaModelException", "signatureAfterChange": "  public void test034() throws JavaModelException", "diff": ["-\t\t\"BasicTestTypesSecondary[TYPE_REF]{BasicTestTypesSecondary, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypesSecondary;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"BasicTestTypesSecondary[TYPE_REF]{BasicTestTypesSecondary, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypesSecondary;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21ad81793b4923f8d7f23abc7f22dab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "b31cd8ccd51413655d3e805905e8dd7d1404f391", "commitAfterChange": "56279d048bf630d57d8fac349861b864730cf774", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tASTNode clone0(AST target)", "signatureAfterChange": " \tASTNode clone0(AST target)", "diff": ["-\t\t\tresult.setReceiverType((AnnotatableType) ASTNode.copySubtree(target, getReceiverType()));", "+\t\t\tresult.setReceiverType((Type) ASTNode.copySubtree(target, getReceiverType()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a21f1a28f6f59faecf70461e538e02b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  private void scanTypeForContainerAnnotation(IBinaryType binaryType, char[][][] missingTypeNames)", "signatureAfterChange": "  private void scanTypeForContainerAnnotation(IBinaryType binaryType, char[][][] missingTypeNames)", "diff": ["-\t\t\t\t\t\tthis.containerAnnotationType = (ReferenceBinding) this.environment.getTypeFromSignature(((ClassSignature)value).getTypeName(), 0, -1, false, null, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\t\t\t\tthis.containerAnnotationType = (ReferenceBinding) this.environment.getTypeFromSignature(((ClassSignature)value).getTypeName(), 0, -1, false, null, missingTypeNames, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2217b2ff05e0549e597a85442773955", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/jdom/DOMFactory.java", "commitBeforeChange": "ab36391231f1ea61e75e0e00b3dc8ffe91eda55e", "commitAfterChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public IDOMField createField()", "signatureAfterChange": "\r public IDOMField createField()", "diff": ["-\treturn createField(\"Object aField;\"+ JavaModelManager.LINE_SEPARATOR); //$NON-NLS-1$\r", "+\treturn createField(\"Object aField;\"+ Util.LINE_SEPARATOR); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a226de9548b6a1c0cda24d2309d653f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic boolean visit(PackageDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(PackageDeclaration node)", "diff": ["-\t\tif (node.getAST().apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23735f708e8c306c4cec7259e146be6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "53aa3826abf5a6d0c6d46ffdf5ca06318e0e608e", "commitAfterChange": "3a45bbbeb56dfb4a2b74aec609db313f8b4d8387", "methodNumberBeforeChange": 367, "methodNumberAfterChange": 367, "signatureBeforeChange": " \tpublic void test349()", "signatureAfterChange": " \tpublic void test349()", "diff": ["-\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSetttings());", "+\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSettings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a23decb7651bb556a8c73a746be4299b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": "\r final public void if_icmplt(Label lbl)", "signatureAfterChange": "\r final public void if_icmplt(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_if_icmplt, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_if_icmplt, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a24feec9d4ee799d22f84cf12968e762", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "8abe8838e4f5c3f829e8d4a716d1798a8812906f", "commitAfterChange": "4ec13193441f3db672067c7cfb76899f166d78f5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(SourceMethodElementInfo methodInfo, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(SourceMethodElementInfo methodInfo, CompilationResult compilationResult)", "diff": ["-\t\t\t\t\t\t// TODO (jerome) handle Annotation and MemberValusArrayInitializer)", "-\t\t\t\t\t\tExpression expression =  this.parser.parseExpression(defaultValueSource, 0, defaultValueSource.length, this.unit);", "+\t\t\t\t\t\tExpression expression =  this.parser.parseMemberValue(defaultValueSource, 0, defaultValueSource.length, this.unit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a27968ae6834f1199cb8f9d36f21f35a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6fdaa2b9d78c89a1ed2269f5279c3e02cee4b6cd", "commitAfterChange": "8ec1d344fc5f9b16a04a2a15e36cb4db52cac4eb", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic ZipFile getZipFile(IPath path) throws CoreException", "signatureAfterChange": " \tpublic ZipFile getZipFile(IPath path) throws CoreException", "diff": ["-\t\tif ((map = (HashMap)this.zipFiles.getCurrent()) != null ", "+\t\tif ((map = (HashMap)this.zipFiles.get()) != null "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a27f610eba8c81b7491a693b80b7199b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": " public void if_icmplt(Label lbl)", "signatureAfterChange": " public void if_icmplt(BranchLabel lbl)", "diff": ["-public void if_icmplt(Label lbl) {", "+public void if_icmplt(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a296631a66dcc9ef7a7c775c7f0443c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThisReference.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic boolean isImplicitThis()", "signatureAfterChange": " \t \tpublic boolean isImplicitThis()", "diff": ["-\t\treturn (this.bits & IsImplicitThisMask) != 0;", "+\t\treturn (this.bits & IsImplicitThis) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2a4e219b5480159fae53dd44ab4dff1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Initializer.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2b254e911823811b7f93890ffbe295e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForField.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(javadocTestClass());", "+\t\treturn buildAllCompliancesTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2b6fc8c4cf3a2ed37565d3950cafd46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic Object get(Object key)", "signatureAfterChange": " \tpublic Object get(Object key)", "diff": ["-\t\tLRUCacheEntry entry = (LRUCacheEntry) fEntryTable.get(key);", "+\t\tLRUCacheEntry entry = (LRUCacheEntry) entryTable.get(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2bb16084ceee448d35d765c32c0cb78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "diff": ["-\t\tif ((operationTypeID = (implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4) == T_String) {", "+\t\tif ((operationTypeID = (implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4) == T_JavaLangString) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2d9d32f3da39ebce16abbbb48d98a01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic static Test suiteForComplianceLevel(String level, Class testClass)", "signatureAfterChange": " \t \tpublic static Test suiteForComplianceLevel(String level, Class testClass)", "diff": ["-\t\tTest suite = buildAllCompliancesRegressionTestSetupSuite(testClass);", "+\t\tTest suite = buildAllCompliancesTestSuite(testClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e075181b72e1b7b5e1aaaa5488e98e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 110, "signatureBeforeChange": " public void generateSyntheticBodyForFieldWriteAccess(SyntheticAccessMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForFieldWriteAccess(SyntheticMethodBinding accessBinding)", "diff": ["-public void generateSyntheticBodyForFieldWriteAccess(SyntheticAccessMethodBinding accessBinding) {", "+public void generateSyntheticBodyForFieldWriteAccess(SyntheticMethodBinding accessBinding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2e96cb7e2833da1de4e7aa4951dab64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6dc2c6292eeb29ab819c1296b12d7a61265835da", "commitAfterChange": "d3d9c65ab8eabcabeb66c720711bcaf713684a64", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot getPackageFragmentRoot(IPath path)", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot getPackageFragmentRoot(IPath path)", "diff": ["-\t\t\t\treturn getPackageFragmentRoot(path.toString());\r", "+\t\t\t\treturn getPackageFragmentRoot(path.toOSString());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2effdb132a2384d50f896f555657d7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\tthis.expression.bits |= ValueForReturnMASK;", "+\t\t\t\tthis.expression.bits |= IsReturnedValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f451412375954af9d8e4105d2fa0b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "f211ce6b3e18961e84e6875c0a68dbc79e7741e4", "commitAfterChange": "3f2b1c5703a4dbb09af850179af8a2ba1e9f2ceb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\tthis.out.println(Main.bind(\"configure.incorrectClasspath\", this.classpaths[i])); //$NON-NLS-1$", "+\t\t\t\tthis.err.println(Main.bind(\"configure.incorrectClasspath\", this.classpaths[i])); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a31bff7788dd7bf4cd740e127be37aab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public RecoveredType(TypeDeclaration typeDeclaration, RecoveredElement parent, int bracketBalance)", "signatureAfterChange": " \t public RecoveredType(TypeDeclaration typeDeclaration, RecoveredElement parent, int bracketBalance)", "diff": ["-\tthis.insideEnumConstantPart = typeDeclaration.getKind() == IGenericType.ENUM;", "+\tthis.insideEnumConstantPart = typeDeclaration.kind() == IGenericType.ENUM;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a320517cd7a406777a9d9b023402fbc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": " \tpublic boolean visit(AnnotationTypeMemberDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(AnnotationTypeMemberDeclaration node)", "diff": ["-\t\t\t\tpos= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameRPAREN, pos);", "+\t\t\t\tpos= getScanner().getTokenEndOffset(TerminalTokens.TokenNameRPAREN, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a327cdae9b4c947d7fa276de1e4700ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "c57d63e48d2e13925643b8ebe6a288202f202e6b", "commitAfterChange": "e2a159c6596c04bca6bcd93e61dded936d044196", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void resourceChanged(final IResourceChangeEvent event)", "signatureAfterChange": "  \tpublic void resourceChanged(final IResourceChangeEvent event)", "diff": ["-\t\t\t\tPlatform.run(new ISafeRunnable() {", "+\t\t\t\tSafeRunner.run(new ISafeRunnable() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a333d953c0d18dbe4d6b89d5b785ce35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  \tfinal void preValueChange(SimplePropertyDescriptor property)", "signatureAfterChange": "  \tfinal void preValueChange(SimplePropertyDescriptor property)", "diff": ["-\t\tif ((this.flags & PROTECT) != 0) {", "+\t\tif ((this.typeAndFlags & PROTECT) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a34013c2f281a97612d2797dfffb3a82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "signatureAfterChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName));\r", "+\t\ttypeRequestor.accept(answer.getSourceType(), computePackageFrom(compoundName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a345dc2fe76e4c216476623d2f857cb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException {\r", "+protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a37f03321a44558540def9992e970b66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementsOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected int getMainAmountOfWork()", "signatureAfterChange": " \tprotected int getMainAmountOfWork()", "diff": ["-\t\treturn fElementsToProcess.length;", "+\t\treturn elementsToProcess.length;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3806934cc0b5299ccabef894dcc3c02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingResolver.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tASTNode findDeclaringNode(IResolvedAnnotation instance)", "signatureAfterChange": " \tASTNode findDeclaringNode(IAnnotationBinding instance)", "diff": ["-\tASTNode findDeclaringNode(IResolvedAnnotation instance) {", "+\tASTNode findDeclaringNode(IAnnotationBinding instance) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a38298a05cc96b2f206576631f90e443", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "1ffd93ec138fc38a22c082921b3ee25a9e75ba37", "commitAfterChange": "cef21f9db5e181946eac0a0d175b10763094848c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate void resolve(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor astRequestor, int apiLevel, Map compilerOptions, WorkingCopyOwner owner)", "signatureAfterChange": "  \tprivate void resolve(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor astRequestor, int apiLevel, Map compilerOptions, WorkingCopyOwner owner)", "diff": ["-\t\t\t\t\t\tcompilationUnit.setJavaElement(source);", "+\t\t\t\t\t\tcompilationUnit.setTypeRoot(source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a39303bd4320aeb47cc3376cba4d81c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " public void testNoChanges1() throws JavaModelException", "signatureAfterChange": " public void testNoChanges1() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3aadce954c4fc10b993710cdc99938a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCast(BlockScope scope, int operator, int operatorSignature, Expression expression, int expressionTypeId)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCast(BlockScope scope, int operator, int operatorSignature, Expression expression, int expressionTypeId)", "diff": ["-\t\tif ((expression.bits & UnnecessaryCastMASK) == 0 && expression.resolvedType.isBaseType()) {", "+\t\tif ((expression.bits & UnnecessaryCast) == 0 && expression.resolvedType.isBaseType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3cf3d165bc35d16fc3701f451600b72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/align/Alignment.java", "commitBeforeChange": "b7dcee8ec99a66c7cd3b7ec7ac6ac22c9994d5db", "commitAfterChange": "ebfc1682d29070aa2b44b01ca4f59eef8e28cc6a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void checkColumn()", "signatureAfterChange": "  \tpublic void checkColumn()", "diff": ["-\t\t\t\tAlignment targetAlignment = this.scribe.currentAlignment;", "+\t\t\t\tAlignment targetAlignment = this.scribe.memberAlignment;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3cf7a325de49bee365317fd258bb530", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic DefaultCodeFormatter(DefaultCodeFormatterOptions defaultCodeFormatterOptions, Map options)", "signatureAfterChange": "  \tpublic DefaultCodeFormatter(DefaultCodeFormatterOptions defaultCodeFormatterOptions, Map options)", "diff": ["-\t\t\tthis.preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getDefaultSettings());", "+\t\t\tthis.preferences = new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSettings());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3d85e4bb90c50cfd2302d81fefc749a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding18.java", "commitBeforeChange": "6436bbd31cbe5b698244c0208dd161fd144dd93e", "commitAfterChange": "4e5b524e8fed0a2f038362e79ac7bed8b62bd551", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t@Override \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \t@Override \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\t\tbuffer.append('{').append(this.position).append('#').append(this.captureID).append('}');", "+\t\tbuffer.append('{').append(this.end).append('#').append(this.captureID).append('}');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3e87342a4fb8bd10056e7b65e2f2e22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/FieldInfo.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public Object getWrappedConstantValue()", "signatureAfterChange": " public Object getWrappedConstantValue()", "diff": ["-\t\t\t\tcase T_String :", "+\t\t\t\tcase T_JavaLangString :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3f15b62f61e3663130feb0e46fe7815", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "6fdaa2b9d78c89a1ed2269f5279c3e02cee4b6cd", "commitAfterChange": "8ec1d344fc5f9b16a04a2a15e36cb4db52cac4eb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": "  \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["+\t\t\t// TODO (jerome) see 47631, may want to get rid of following so as to reuse delta processor ? ", "-\t\t\t\tthis.deltaProcessors.setCurrent(null);", "+\t\t\t\tthis.deltaProcessors.set(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3fbfaaced9d5eca8621267ea6523ca3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tpublic boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " \t \tpublic boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t    switch(otherType.bindingType()) {", "+\t    switch(otherType.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40d2ee97cfa022d24ecd5aae33f31a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclaration.java", "commitBeforeChange": "24998a2165a4e3f19f818246956c1f5804e3fa9b", "commitAfterChange": "f372eb4169324cad87b7cff6d25b5939cf1574c9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \r \tpublic boolean isLocalTypeDeclaration()", "signatureAfterChange": " \r \tpublic boolean isLocalTypeDeclaration()", "diff": ["-\t\treturn (parent instanceof Block);\r", "+\t\treturn (parent instanceof TypeDeclarationStatement);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a410e4e87fe472cb25a0365c8cbb882f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\tIIndex index = this.manager.getIndexForUpdate(this.containerPath, true, /*reuse index file*/ true /*create if none*/);", "+\t\tIndex index = this.manager.getIndexForUpdate(this.containerPath, true, /*reuse index file*/ true /*create if none*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a43509fc1bb78dd2ee548104a0c91175", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void setUpSuite() throws Exception", "signatureAfterChange": " public void setUpSuite() throws Exception", "diff": ["-\tthis.createJavaProject(\"P\", new String[] {\"src\"}, new String[] {getExternalJCLPath()}, \"bin\");", "+\tthis.createJavaProject(\"P\", new String[] {\"src\"}, new String[] {getExternalJCLPathString()}, \"bin\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4386b7caa67883a3f057115f6a53b69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "9528b13b60b5267a27dfdeac3b8ea9a804476535", "commitAfterChange": "ef0d751764a03bfb7b7e9d8838fc454e1e51fa0c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " protected int resolveLevel(MessageSend messageSend)", "signatureAfterChange": " protected int resolveLevel(MessageSend messageSend)", "diff": ["-\tif (isVirtualInvoke(method, messageSend) && !(messageSend.receiverType instanceof ArrayBinding)) {", "+\tif (isVirtualInvoke(method, messageSend) && !(messageSend.actualReceiverType instanceof ArrayBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a44a9ef1795fe3ded7ab1282902bc13a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Region.java", "commitBeforeChange": "da8689e6058c8df72d6de5be59efe4e5eaaa5d49", "commitAfterChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public boolean remove(IJavaElement element)", "signatureAfterChange": "\r public boolean remove(IJavaElement element)", "diff": ["-\treturn fRootElements.removeElement(element);\r", "+\treturn fRootElements.remove(element);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a44d3fe0fa699546a3afe73cb565514e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "diff": ["-\t\t\t\tvisit((ExtraDimension) dimensions.get(i));", "+\t\t\t\tvisit((Dimension) dimensions.get(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a45a1e5211089f8e9c4a437d88b96cde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " public void testCategories1() throws JavaModelException", "signatureAfterChange": " public void testCategories1() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a46a9f9ce40bff02f5458b49ace50da8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "dcdb11f13a905cc2d9eed5c3bf38034e243f753b", "commitAfterChange": "454e4bb996219ce871816b02f759355d9d6facb0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "signatureAfterChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceType(), computePackageFrom(compoundName));\r", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4731807fc9c5fa3d1567dfcef33b5ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "1e8b2938724cc683c4116dd457826556b875a42f", "commitAfterChange": "eb727711bfbefbe06ad25a796b42d61ffab45eca", "methodNumberBeforeChange": 258, "methodNumberAfterChange": 258, "signatureBeforeChange": " public void unsafeWildcardAssignment(TypeBinding variableType, TypeBinding expressionType, ASTNode location)", "signatureAfterChange": " public void unsafeWildcardAssignment(TypeBinding variableType, TypeBinding expressionType, ASTNode location)", "diff": ["-\t\tIProblem.UnsafeWildcardFieldAssignment,", "+\t\tIProblem.WildcardFieldAssignment,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a473918f326f6a3d6b5edb4ead170c17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void testInvalidTagsMethodErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsMethodErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48293d60a216af2039348c4b8a50569", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "1d93c592655130ee83ccf569199d32491937354e", "commitAfterChange": "b60bff4501141ce0e7ed5fab43805b77b52b5e19", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public TypeHierarchy(IType type, IJavaSearchScope scope, boolean computeSubtypes) throws JavaModelException", "signatureAfterChange": " public TypeHierarchy(IType type, IJavaSearchScope scope, boolean computeSubtypes) throws JavaModelException", "diff": ["-\tthis.type = type;", "+\tthis.focusType = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48aa63bd3f203af6c3a0443184ed3d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "a8ebe98c7b687ea450305732efa25afb0944336e", "commitAfterChange": "96a09d96e56ab454cb92b7163871c6f3413e482e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tassertInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\tassertInfo.setReachMode(FlowInfo.UNREACHABLE_OR_DEAD);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48f0bcd773d2d71a5ab1b0045dd0193", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testGetSourceRange() throws JavaModelException", "signatureAfterChange": " public void testGetSourceRange() throws JavaModelException", "diff": ["-\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIClassFile cf = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4bf1a80902dd35889e469f5d047d17c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/EvaluationSetup.java", "commitBeforeChange": "a6231ce33b0c4c1035133950b71c0c97d48b4fc8", "commitAfterChange": "fb73ff7c4976ff452de2ec97a6404f1940e5234e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void setUp()", "signatureAfterChange": " protected void setUp()", "diff": ["-\tint evalPort = Util.nextAvailablePortNumber();", "+\tint evalPort = Util.getFreePort();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4c92d7c41cbf3a2fd3520f50461cd72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void testCategories3() throws JavaModelException", "signatureAfterChange": " public void testCategories3() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4cec253f1adedfafe1a1aa0252ec2e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "52edb6d52bc65012dbcc27e3a66577c8f907d5bd", "commitAfterChange": "870413622936c1ae6b7459904018dcd224604416", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void checkAndSetModifiersForField(FieldBinding fieldBinding, FieldDeclaration fieldDecl)", "signatureAfterChange": " \tprivate void checkAndSetModifiersForField(FieldBinding fieldBinding, FieldDeclaration fieldDecl)", "diff": ["-\t\t\tint implicitValue = AccPublic | AccStatic | AccFinal | AccEnumConstant;", "+\t\t\tint implicitValue = AccPublic | AccStatic | AccFinal | AccEnum;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4e975024a6a38a31a30f5bc49c4a2aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testClasspathMoveNestedRoot() throws CoreException", "signatureAfterChange": " public void testClasspathMoveNestedRoot() throws CoreException", "diff": ["-\tIJavaProject project = this.createJavaProject(\"P\", new String[] {\"nested/src\"}, new String[] {getExternalJCLPath()}, \"bin\");", "+\tIJavaProject project = this.createJavaProject(\"P\", new String[] {\"nested/src\"}, new String[] {getExternalJCLPathString()}, \"bin\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5325dc031c9d1754e97ad369e5e77f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "commitAfterChange": "74ac0014c1ede0ba61ac73f39089ab641618bf5d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic int computeIndentUnits(String line)", "signatureAfterChange": " \t \tpublic int computeIndentUnits(String line)", "diff": ["-\t\treturn Indents.measureIndentUnits(line, this.tabWidth, this.indentWidth);", "+\t\treturn IndentManipulation.measureIndentUnits(line, this.tabWidth, this.indentWidth);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a557d1ac5dcf90326abfccdcc475b7db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "ec36c5b556303647a122217dbc357a0c1ccafd42", "commitAfterChange": "a25cead90931bbc9548552bec95aa6f79a389aa3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject3() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject3() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a594998a0b2cba8de018ad96fdc35523", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void testExternalize2() throws CoreException", "signatureAfterChange": " public void testExternalize2() throws CoreException", "diff": ["-\tString externalLibPath = getExternalFolderPath(\"externalLib\") + File.separator;", "+\tString externalLibPath = getExternalResourcePath(\"externalLib\") + File.separator;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a59613280208fe778aae229289b5b204", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \r \tpublic final ReferenceBinding getJavaLangString()", "signatureAfterChange": "\r \r \tpublic final ReferenceBinding getJavaLangString()", "diff": ["-\t\tcompilationUnitScope().recordReference(JAVA_LANG_STRING);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(JAVA_LANG_STRING);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a59bdbdd1129d6725a4093e973e6cbc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \t\tpublic boolean match(SwitchCase node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(SuperMethodReference node, Object other)", "diff": ["+\t\tpublic boolean match(SuperMethodReference node, Object other) {", "+\t\t\treturn standardBody(node, other, this.superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a59d1ceab1663a549fa298f1d452dd6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " private ReferenceBinding typeToRecord(TypeBinding type)", "signatureAfterChange": " private ReferenceBinding typeToRecord(TypeBinding type)", "diff": ["-\t\tcase Binding.INTERSECTION_CAST_TYPE: // constituents would have been recorded.", "+\t\tcase Binding.INTERSECTION_TYPE18: // constituents would have been recorded."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5c211db2836c964d0eb7f576c3589b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "88fda3edbb235ca07ba1c50b6885e3cd0955511a", "commitAfterChange": "7a0eeabd4ef65d663065e6e9858078d5d965a31e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void resolve()", "signatureAfterChange": "  public void resolve()", "diff": ["-\t\tif (!this.compilationResult.hasMandatoryErrors()) checkUnusedImports();", "+\t\tif (!this.compilationResult.hasErrors()) checkUnusedImports();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ceede1d238b922dd04c2f73290bc1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RunJavaSearchTests.java", "commitBeforeChange": "a520fbebd0fffdd9ae00eeb9ec609a81241ec8bb", "commitAfterChange": "afe8e7c03c9e057a9ab6bf025b43a423a4494448", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tTestCase.ONLY_SUFFIX = null;", "+\t\tTestCase.RUN_ONLY_ID = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5ec04c36bfab80ff84a2e2b9e31ba66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/OverflowingCacheTests.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \t\tpublic IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner)", "signatureAfterChange": "  \t\tpublic IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner)", "diff": ["-\t\tpublic IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner) {", "+\t\tpublic IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60962b133986f43369835461dfdafbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrLocator.java", "commitBeforeChange": "fb92cfb822669ddb00db1cf41e3bdb1057d4d00d", "commitAfterChange": "00c13f2feec2211d8da2f8282a37167ca349b1b8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public int match(ASTNode node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(Annotation node, MatchingNodeSet nodeSet)", "diff": ["+}", "+public int match(Annotation node, MatchingNodeSet nodeSet) {", "+\tint level = IMPOSSIBLE_MATCH;", "+\tfor (int i = 0, length = this.patternLocators.length; i < length; i++) {", "+\t\tint newLevel = this.patternLocators[i].match(node, nodeSet);", "+\t\tif (newLevel > level) {", "+\t\t\tif (newLevel == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t\t\tlevel = newLevel;", "+\t\t}", "+\t}", "+\treturn level;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a60c2afc1e32968a25c13fb9d4578175", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testSuggestLocalName001()", "signatureAfterChange": " public void testSuggestLocalName001()", "diff": ["-\t\tassertEquals(", "+\t\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6420865fe4a4ce4fd7a51705a41ca65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "740d8a3bbf7d827a9782a8704551b5892c828d42", "commitAfterChange": "37fa53fe1bcd1db81d377f564f101511c07818f5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, SourceTypeBinding invocationType)", "signatureAfterChange": "  public final boolean canBeSeenBy(ReferenceBinding receiverType, SourceTypeBinding invocationType)", "diff": ["-\t\t\tif (currentType.findSuperTypeErasingTo(declaringErasure) != null) return true;", "+\t\t\tif (currentType.findSuperTypeWithSameErasure(declaringErasure) != null) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a64ae4b01f91bc490f43993bf8368f7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void testSearchPatternValidMatchRule36()", "signatureAfterChange": " public void testSearchPatternValidMatchRule36()", "diff": ["-\t\tSearchPattern.R_CAMEL_CASE_MATCH);", "+\t\tSearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a64f3b811e5ee8f088ecf2a615f2f5d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tboolean visit(AnnotationReturnStatement statement, BlockScope scope);", "signatureAfterChange": " \tboolean visit(JavadocReturnStatement statement, BlockScope scope);", "diff": ["-\tboolean visit(AnnotationQualifiedTypeReference typeRef, BlockScope scope);", "-\tboolean visit(AnnotationReturnStatement statement, BlockScope scope);", "+\tboolean visit(JavadocQualifiedTypeReference typeRef, BlockScope scope);", "+\tboolean visit(JavadocReturnStatement statement, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a652fea15fad7061b20517561ac2ccea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/ReadAnnotationTests.java", "commitBeforeChange": "0eec3068922fbe351501ec0f647de133db6041a4", "commitAfterChange": "c80b21caa7335f2dacd02879f687b71c92d3e1aa", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void test0() throws Exception", "signatureAfterChange": "  \tpublic void test0() throws Exception", "diff": ["-\t\tassertEquals(\"\", ReadAnnotationProcessor.ERROR);", "+\t\tassertEquals(EMPTY_STRING, ReadAnnotationProcessor.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a67ff2546187dd834d4b7cfeb4d71c58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMBuilder.java", "commitBeforeChange": "da8689e6058c8df72d6de5be59efe4e5eaaa5d49", "commitAfterChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r protected void addChild(IDOMNode child)", "signatureAfterChange": "\r protected void addChild(IDOMNode child)", "diff": ["-\t\tfFields.addElement(child);\r", "+\t\tfFields.add(child);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a68560e8dd2a10d026f968b9f0296d85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "4ea801be5e061172d2dd6b4ea35892c23d3f506f", "commitAfterChange": "e92fd424cb52414670d7c1c0821260cf9689e9c2", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " public static int getProblemCategory(int problemID)", "signatureAfterChange": " public static int getProblemCategory(int problemID)", "diff": ["-\treturn CategorizedProblem.CAT_UNSPECIFIED;", "+\treturn CategorizedProblem.CAT_INTERNAL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6957f574008298338eae4f98dc0303e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tpublic void testMissingCommentsErrorProtected()", "signatureAfterChange": " \tpublic void testMissingCommentsErrorProtected()", "diff": ["-\t\trunNegativeTest(MissingComments, resultForMissingComments(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(MISSING_COMMENTS, resultForMissingComments(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6a1cceb2c229ad4ae1f2f2eb5e037b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\t\tif ((bits & ValueForReturnMASK) != 0) {", "+\t\t\t\t\tif ((bits & IsReturnedValue) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6a9be1fa54cf515440b2695be8eacc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperConstructorInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tSuperConstructorInvocation(AST ast)", "signatureAfterChange": " \tSuperConstructorInvocation(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6ab578554765593187c2e734c9d5a8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testAttachSourcePersisted() throws JavaModelException", "signatureAfterChange": " public void testAttachSourcePersisted() throws JavaModelException", "diff": ["-\tthis.jarRoot.close();", "+\tthis.root.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6ab7ecb8f8bcf8d3ce4c24aa57006da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "bcb907ad93b1202cb7679b9dabebf16d872cd1bf", "commitAfterChange": "3ef93f23afcd2f32a7f2e702fed5d9d29c70e752", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "\r \tpublic void endVisit(Javadoc node)", "signatureAfterChange": "\r \tpublic void endVisit(InstanceofExpression node)", "diff": ["+\tpublic void endVisit(InstanceofExpression node) {\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6afa9b9a84cfc3bbdf7b8c82c7c90b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "bf4c275853d6cbca9c69231dbfec6762ed3d8018", "commitAfterChange": "e178d64eb65916b8b54353dd9e6bcf5b085bf212", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void buildFields()", "signatureAfterChange": " \t \tprivate void buildFields()", "diff": ["-\t\t\tfieldBindings[count++] = new FieldBinding(IncompleteHierarchy, VoidBinding, AccPrivate, referenceContext.binding, null);", "+\t\t\tfieldBindings[count++] = new FieldBinding(IncompleteHierarchy, IntBinding, AccPrivate, referenceContext.binding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6b8aea38d41f29ad1385616ce4f9062", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": "  public void test157() throws JavaModelException", "signatureAfterChange": "  public void test157() throws JavaModelException", "diff": ["-\t\t\"Class[TYPE_REF]{Class, java.lang, Ljava.lang.Class;, null, null, \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"Class[TYPE_REF]{Class, java.lang, Ljava.lang.Class;, null, null, \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6c415915345907e69e82dc72aa9611f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  public void recordSuperType(char[] superTypeName, char[] superQualification, char superClassOrInterface)", "signatureAfterChange": "  public void recordSuperType(char[] superTypeName, char[] superQualification, char superClassOrInterface)", "diff": ["-\t\tif (this.kind == IGenericType.INTERFACE) return; ", "+\t\tif (this.kind == IGenericType.INTERFACE_DECL) return; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6ce97608f945a63c3884f5355b6e28b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "commitAfterChange": "c9e042ca313baf5eded9aef49e3870dc5764fbfc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public static SearchDocument[] addWorkingCopies(InternalSearchPattern pattern, SearchDocument[] indexMatches, org.eclipse.jdt.core.ICompilationUnit[] copies, SearchParticipant participant)", "signatureAfterChange": "  public static SearchDocument[] addWorkingCopies(SearchPattern pattern, SearchDocument[] indexMatches, org.eclipse.jdt.core.ICompilationUnit[] copies, SearchParticipant participant)", "diff": ["-public static SearchDocument[] addWorkingCopies(InternalSearchPattern pattern, SearchDocument[] indexMatches, org.eclipse.jdt.core.ICompilationUnit[] copies, SearchParticipant participant) {", "+public static SearchDocument[] addWorkingCopies(SearchPattern pattern, SearchDocument[] indexMatches, org.eclipse.jdt.core.ICompilationUnit[] copies, SearchParticipant participant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d07753b9d6656989368fc673d743b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "signatureAfterChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceType(), computePackageFrom(compoundName));\r", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6d0d58f4e215e36b9c1f88a29feb729", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "4e993a8d5cbdc7815c7050ad8787e1c566312d6a", "commitAfterChange": "7d431a6663c03691d383a66bc16841bb87e3308d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic ReferenceExpression(Expression primary, TypeReference [] typeArguments, SingleNameReference method)", "signatureAfterChange": "  \tpublic ReferenceExpression(Expression primary, TypeReference [] typeArguments, SingleNameReference method)", "diff": ["-\t\tthis.typeParameters = typeArguments;", "+\t\tthis.typeArguments = typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6e00092ca011ecfdb48ed6d0aa2aedb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableElementImpl.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t@Override \tpublic boolean hides(Element hidden)", "signatureAfterChange": "  \t@Override \tpublic boolean hides(Element hidden)", "diff": ["-\t\treturn null != hiderBinding.declaringClass.findSuperTypeWithSameErasure(hiddenBinding.declaringClass); ", "+\t\treturn null != hiderBinding.declaringClass.findSuperTypeOriginatingFrom(hiddenBinding.declaringClass); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6fb1dec7d423c618899b7a047e358ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "d7e7bb059880a6c87ea3290708d2d0a9f9e7ebe8", "commitAfterChange": "a415220ad0bdc743d286b40ccc481ededfe8132e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\tConstant condCst = condition.conditionalConstant();", "+\t\tConstant condCst = condition.optimizedBooleanConstant();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7013722bfe4f08f98cfd90804574800", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic boolean visit(TryStatement node)", "signatureAfterChange": " \tpublic boolean visit(SingleMemberAnnotation node)", "diff": ["+\t */", "+\tpublic boolean visit(SingleMemberAnnotation node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a702e783f3b8d8a7e9dbacbd8e53a945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "cb63167d7ae8e51f68c8f4ae8680682adf1ffd54", "commitAfterChange": "8168bb9ed08b23c9d80fe2d2e24e1b46842d646f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public int match(Argument node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(ConstructorDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-public int match(Argument node, MatchingNodeSet nodeSet) {", "-\t// each subtype should override if needed", "-\treturn IMPOSSIBLE_MATCH;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7038b3b94cfef514aa3c9ae875f6470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": " protected void consumeStaticInitializer()", "signatureAfterChange": " protected void consumeStaticInitializer()", "diff": ["-\tinitializer.declarationSourceEnd = flushAnnotationsDefinedPriorTo(endStatementPosition);", "+\tinitializer.declarationSourceEnd = flushCommentsDefinedPriorTo(endStatementPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a705da1ad4aa55d88af3a9d078baa031", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 166, "methodNumberAfterChange": 166, "signatureBeforeChange": " \tpublic void testVariableDeclarationStatement()", "signatureAfterChange": " \tpublic void testVariableDeclarationStatement()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a71228056cb546b687b279615eac5828", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocFieldCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void test021() throws JavaModelException", "signatureAfterChange": "  public void test021() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.fields.tags.BasicTestFields;, I, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.fields.tags.BasicTestFields;, I, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a71a7bf3da2edafbd1913a48a16bc2c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15JLS8Test.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void test0051() throws JavaModelException", "signatureAfterChange": " \tpublic void test0051() throws JavaModelException", "diff": ["-\t\tcheckSourceRange(arrayType.getComponentType(), \"String\", source);", "+\t\tcheckSourceRange(arrayType.getElementType(), \"String\", source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a720f49e9e089e3c227e3a5ced10b262", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t|| (scope.areTypesCompatible(expressionTb, this.lhsType))) {", "+\t\t\t|| (Scope.areTypesCompatible(expressionTb, this.lhsType))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7218dd3213f36a3ecdd7e41757cb76e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7064f5cf4e1b20562054db6ff22e27e2bfde4008", "commitAfterChange": "c020688b25edf08bbc7d8d68981663ad78d2a9d8", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": " \t \tprotected IFile getFileForNode(final ASTNode node)", "signatureAfterChange": " \t \tprotected IFile getFileForNode(final ASTNode node)", "diff": ["-\t\t\t\treturn _files[i];", "+\t\t\t\treturn _filesWithAnnotation[i];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7229f2a1286db53057ef89767c49780", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "6febc04f00603747029f2ea9616afd5b682c9f03", "commitAfterChange": "ba65adb7228709772812cc43f8ccb14a824acf89", "methodNumberBeforeChange": 382, "methodNumberAfterChange": 382, "signatureBeforeChange": " public void recoveryTokenCheck()", "signatureAfterChange": " public void recoveryTokenCheck()", "diff": ["-\t\t\t\tcurrentType.insiseEnumConstantPart = false;", "+\t\t\t\tcurrentType.insideEnumConstantPart = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a727d5f7f7965969e3b61f1182a57813", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tif (receiverErasure.findSuperTypeWithSameErasure(this.binding.declaringClass) == null) {", "+\t\t\t\tif (receiverErasure.findSuperTypeOriginatingFrom(this.binding.declaringClass) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a73276eb52eaf6f363617f71bee3ba50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "signatureAfterChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName));\r", "+\t\ttypeRequestor.accept(answer.getSourceType(), computePackageFrom(compoundName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a734cac4e45eb2a38222874fc830c66e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 19, "signatureBeforeChange": "  private void recordNewState(State state)", "signatureAfterChange": "  private void recordNewState(State state)", "diff": ["-\tObject[] keyTable = binaryResources.keyTable;", "+\tObject[] keyTable = binaryLocationsPerProject.keyTable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a75f93797496e32f6eb3dc297f7a0cbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "23d1f03b5721ce2de9c0b6bda12e344c2ac468ba", "commitAfterChange": "966ae4bbaf97367f3fc38a9b2c2261f477021842", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testGetTypes() throws JavaModelException", "signatureAfterChange": " public void testGetTypes() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Incorrect formalTypeParameters for the \" + i + \" type\", formalTypeParameters[i].length, types[i].getTypeParameterSignatures().length);", "+\t\tassertEquals(\"Incorrect formalTypeParameters for the \" + i + \" type\", formalTypeParameters[i].length, types[i].getTypeParameters().length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76092571aa5378fd6762953219cd19e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      MessagerImpl(CompilationProcessorEnv env)", "signatureAfterChange": "      MessagerImpl(AbstractCompilationEnv env)", "diff": ["-    MessagerImpl(CompilationProcessorEnv env){", "+    MessagerImpl(AbstractCompilationEnv env){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a765e65e381caaf1f18d2a56849ee6eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/LocalVirtualMachine.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void cleanupTargetPath() throws TargetException", "signatureAfterChange": " protected void cleanupTargetPath() throws TargetException", "diff": ["-\t\tFile file = new File(targetPath, LocalVMLauncher.SUPPORT_ZIP_FILE_NAME);", "+\t\tFile file = new File(targetPath, RuntimeConstants.SUPPORT_ZIP_FILE_NAME);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7722dac2b6026a3282a2cbe446da87c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " public void if_acmpne(Label lbl)", "signatureAfterChange": " public void if_acmpne(BranchLabel lbl)", "diff": ["-public void if_acmpne(Label lbl) {", "+public void if_acmpne(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7875df07238f9ef59530daa74f5001e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "     public char[] shortReadableName()", "signatureAfterChange": "     public char[] shortReadableName()", "diff": ["-        switch (this.kind) {", "+        switch (this.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a79019e7a8211094e5f5a668fef519f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testCreateResourceExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testCreateResourceExcludedCompilationUnit() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7a54af71392bf4de78e4cf859dd87b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "ac3fb85b042cc8d08fde970661bcb608169c859e", "commitAfterChange": "f350c3be6ae3f45b0550d20e4f84512419a218a0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test012_compiler_problems_tuning()", "signatureAfterChange": " public void test012_compiler_problems_tuning()", "diff": ["-\t\texpectedProblemAttributes.put(\"ParameterLackingNonNullAnnotation\", new ProblemAttributes(JavaCore.COMPILER_PB_NULL_SPECIFICATION_VIOLATION));", "+\t\texpectedProblemAttributes.put(\"ParameterLackingNonNullAnnotation\", new ProblemAttributes(JavaCore.COMPILER_PB_NONNULL_PARAMETER_ANNOTATION_DROPPED));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7c90b6e2e1ffeb9cabef78de1e82e08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected ClassFile(IPackageFragment parent, String name)", "signatureAfterChange": " protected ClassFile(PackageFragment parent, String name)", "diff": ["-protected ClassFile(IPackageFragment parent, String name) {", "+protected ClassFile(PackageFragment parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7d1946f5186e661c0da3da3ebc03f05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testAccessRestriction6() throws Exception", "signatureAfterChange": " public void testAccessRestriction6() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.ENABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7d67a2ce7d4343534651296cfc80c12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d48c25cb976d99917f58b366198a77010dd2d678", "commitAfterChange": "e0794fcfb44a17efaa6223129a8b32f7f36f63a6", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": "  \tpublic int hashCode()", "signatureAfterChange": "  \tpublic int hashCode()", "diff": ["-\t\treturn this.fProject.hashCode();", "+\t\treturn this.project.hashCode();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7de5d96903e3a2c038e9460d6cebc11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "ae7797d27bfed7c3f6e7630a551ffec98598a05e", "commitAfterChange": "b5a62e48da3d2bb054c313f16e0e1c0a1279b4a4", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \tpublic int getNumWords()", "signatureAfterChange": "\r \tpublic int getNumWords()", "diff": ["-\t\treturn sortedWords.length;\r", "+\t\treturn sortedWordEntries.length;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7dffe15895d791b3137d5c9ddb48080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "signatureAfterChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceType(), packageBinding);\r", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), packageBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7f3c03eb07fff6975aded1adf3e5b8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "afe1aa1e23ce83b573f50388f1a50d564fe4b851", "commitAfterChange": "f875f4161e47c5087f589529b7e7ee5cf66c1b26", "methodNumberBeforeChange": 248, "methodNumberAfterChange": 248, "signatureBeforeChange": " protected void consumePackageDeclarationNameWithModifiers()", "signatureAfterChange": " protected void consumePackageDeclarationNameWithModifiers()", "diff": ["-\t\tproblemReporter().illegalModifiersForPackage(packageModifiersSourceStart, packageModifiersSourceEnd);", "+\t\tproblemReporter().illegalModifiers(packageModifiersSourceStart, packageModifiersSourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a800d35d689a53d02a7678179a403150", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testReplaceBeginning() throws CoreException", "signatureAfterChange": " public void testReplaceBeginning() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8129bba00e91d271fee96eae813c073", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "3baf213212422c7106ae88d23cc9145703d8d40b", "commitAfterChange": "3560879e43df36211ecd570e60f6cd89468e0b51", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \r protected char[] writeClassFile(ClassFile classFile, boolean isSecondaryType) throws CoreException", "signatureAfterChange": "\r \r protected char[] writeClassFile(ClassFile classFile, boolean isSecondaryType) throws CoreException", "diff": ["-\tIFile file = container.getFile(filePath.addFileExtension(JavaBuilder.ClassExtension));\r", "+\tIFile file = container.getFile(filePath.addFileExtension(JavaBuilder.CLASS_EXTENSION));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a828a48b02a6a283c88afdf1e867a4f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "490ee096388ec5ea05bab9dd08dfca50fb5379f6", "commitAfterChange": "3f75c9397ff53f65021c19499da76d98c9e23550", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t \t\tprivate CompilationParticipant[] getRegisteredParticipants()", "signatureAfterChange": " \t\t \t\tprivate CompilationParticipant[] getRegisteredParticipants()", "diff": ["-\t\t\t\treturn this.registeredParticipants = NO_PARTICPANTS;", "+\t\t\t\treturn this.registeredParticipants = NO_PARTICIPANTS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a831be4c4482651fe17b2166dbe4f97a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "617fadfcdd9d3f85493c65c27088f408a3cd9c9d", "commitAfterChange": "b5a733b30758b3fb9ec3d527e7425b5399ba8dc0", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r public void refreshExternalJARs(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r public void refreshExternalJARs(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\trefreshExternalJARs(null, monitor);\r", "+\trefreshExternalArchives(null, monitor);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a83beb365ce6aa04036cd0e57f769d69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "287b4c9e54d4bce062e6eecece35b8e7ce844a76", "commitAfterChange": "3f4150ac4efa9b8d64500efc25a550943b6c1ff6", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic boolean visit(Modifier node)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation node)", "diff": ["-\t}", "-\tpublic boolean visit(Modifier node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a84245cb6c392577cb7d7c0189d67f57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayType.java", "commitBeforeChange": "9033b38dbde8d5f7ad2f8e95220a29f0a229ea8f", "commitAfterChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic Type getComponentType()", "signatureAfterChange": " \tpublic Type getComponentType()", "diff": ["-\t\treturn internalGetComponentType(COMPONENT_TYPE_PROPERTY);", "+\t\treturn internalGetType(COMPONENT_TYPE_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8725e1e6e62db3b831a8b5414174277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetCodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void generateObjectWrapperForType(TypeBinding valueType)", "signatureAfterChange": " public void generateObjectWrapperForType(TypeBinding valueType)", "diff": ["-\t\t\t\tQualifiedNamesConstants.Init, ", "+\t\t\t\tConstantPool.Init, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a879d0b25c640a24a60fb520d0d42f07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/MethodInfo.java", "commitBeforeChange": "8b559ddce6982a78fabc126c4d719f68c189bfdb", "commitAfterChange": "99f1f2030748a78aa47d20289420461bb423e8b1", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r private boolean isSynthetic()", "signatureAfterChange": "\r public boolean isSynthetic()", "diff": ["-private boolean isSynthetic() {\r", "+public boolean isSynthetic() {\r", "-\t\tint utf8Offset = constantPoolOffsets[u2At(8)] - structOffset;\r", "+\t\tint utf8Offset = constantPoolOffsets[u2At(readOffset)] - structOffset;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a88590426df1ad84e9acd29a54e23da2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/valueconversion/ValueConversionProcessor.java", "commitBeforeChange": "d8339605195e4a27842529cbdd4cfc67b77ac59c", "commitAfterChange": "ce1a50c038f410b16a75eb29a8e1c64f33a61360", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void testCompilerAPIPath(TypeDeclaration test)", "signatureAfterChange": " \t \tprivate void testCompilerAPIPath(TypeDeclaration test)", "diff": ["-\t\tTestCase.assertEquals(\"annotation number mismatch\", 1, numAnnotations);", "+\t\tAssert.assertEquals(\"annotation number mismatch\", 1, numAnnotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a88705af7479ee0544e637e7ab93eb25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "signatureAfterChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, \t\tchar[][][] missingTypeNames, ITypeAnnotationWalker walker)", "diff": ["-\t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "+\t\tchar[][][] missingTypeNames, ITypeAnnotationWalker walker)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a88d739f4bf20ea19e1dc773be6d85e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "fd8b9a432900e078bd3ec0b84289455beeec7157", "commitAfterChange": "727ece7c4e37d8cf0a8a8c9e31dcb1989a9402e6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected int resolveLevel(MessageSend messageSend)", "signatureAfterChange": " protected int resolveLevel(MessageSend messageSend)", "diff": ["-\t\t\t\t\t\t\t| OVERRIDDEN_FLAVOR; // this is an overridden method => add flavor to returned level", "+\t\t\t\t\t\t\t| SUPER_INVOCATION_FLAVOR; // this is an overridden method => add flavor to returned level"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a894e50b247ab87536563e451a7edccb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "d168d92f8c83bd9d84b7f6639f5b38b88fe1d1b6", "commitAfterChange": "02ccd94f273725b0397f84578d3996b081b8d7d7", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic boolean visit( \t\tAllocationExpression allocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tAllocationExpression allocationExpression, \t\tBlockScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a89a70dfb1205d84390f3ef341cc4751", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "949f1bbe84622faa807866412d26a5bdb0f64fe4", "commitAfterChange": "ecd2d9d0e14c2688e43c7c452930452fe7a77cc0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\tfieldInfo = FlowInfo.initial(maxFieldCount).setReachMode(FlowInfo.FAKE_REACHABLE);", "+\t\t\t\t\t\tfieldInfo = FlowInfo.initial(maxFieldCount).setReachMode(FlowInfo.UNREACHABLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8a9b3e59e05ea09638d64b79e0ad8ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void testCommit() throws JavaModelException", "signatureAfterChange": " public void testCommit() throws JavaModelException", "diff": ["-\t\tassertTrue(\"Incorrect status for committing a CompilationUnit\", jme.getStatus().getCode() == JavaModelStatus.INVALID_ELEMENT_TYPES);", "+\t\tassertTrue(\"Incorrect status for committing a CompilationUnit\", jme.getStatus().getCode() == IJavaModelStatusConstants.INVALID_ELEMENT_TYPES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8d67e588a78d9721a8768f3bf39591d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic boolean match(MethodInvocation node, Object other)", "signatureAfterChange": " \tpublic boolean match(MethodInvocation node, Object other)", "diff": ["-\t\tif (node.getAST().apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f10e9422b9c912b5960f3c0dd363a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void test020() throws JavaModelException", "signatureAfterChange": "  public void test020() throws JavaModelException", "diff": ["-\t\t\"Bin2[TYPE_REF]{pack.Bin2, pack, Lpack.Bin2;, null, null, \"+this.positions+R_DICENQNR+\"}\"", "+\t\t\"Bin2[TYPE_REF]{pack.Bin2, pack, Lpack.Bin2;, null, null, \"+this.positions+R_DRICENQNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8f232a79e94b9b507fda9dca593d4be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c67e4a7bf6db95089bd9ac1663546f14829aeca0", "commitAfterChange": "6667f48fb414bf631c6788d57b69b16addac46f0", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 184, "signatureBeforeChange": "  protected LocalDeclaration createLocalDeclaration(Expression initialization, char[] name, int sourceStart, int sourceEnd)", "signatureAfterChange": "  protected LocalDeclaration createLocalDeclaration(Expression initialization, char[] name, int sourceStart, int sourceEnd)", "diff": ["-\treturn new LocalDeclaration(null, name, sourceStart, sourceEnd); // TODO: (olivier) why don't we persist the initialization expression?", "+\treturn new LocalDeclaration(initialization, name, sourceStart, sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a901cdaec12b607212704e139b8b2daf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefFieldErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a92cbcce44145cd630c8c60969e1761b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "commitAfterChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void initializeRoots()", "signatureAfterChange": " \tpublic void initializeRoots()", "diff": ["-\t\t\t\t\tint index= propertyString.lastIndexOf(JarPackageFragmentRoot.ATTACHMENT_PROPERTY_DELIMITER);", "+\t\t\t\t\tint index= propertyString.lastIndexOf(PackageFragmentRoot.ATTACHMENT_PROPERTY_DELIMITER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a92ef6184093209903e4c921d4bcca0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic boolean visit(ThisReference thisReference, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ThisReference thisReference, BlockScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNamethis);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNamethis);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a93e143ba0ca0c1b1bfbd82dd236c0c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void test_nonnull_parameter_011()", "signatureAfterChange": " public void test_nonnull_parameter_011()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9792f94176154f848d3aea05ab826d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " public void testTypeRefGenericAllG6_WildcardBounds() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAllG6_WildcardBounds() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, FIELD_TYPE_DECLARATION_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);", "+\tsearch(\"*\", TYPE, FIELD_DECLARATION_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a99b4f3068a746f3839589fd70936ad9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 146, "signatureBeforeChange": " protected void consumeEnumHeaderName()", "signatureAfterChange": " protected void consumeEnumHeaderName()", "diff": ["-\t\t\tenumDeclaration.bits |= ASTNode.IsMemberTypeMASK;", "+\t\t\tenumDeclaration.bits |= ASTNode.IsMemberType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9be654c653bdf377f5f0454a687b2c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void testNewWorkingCopy05() throws CoreException", "signatureAfterChange": " \tpublic void testNewWorkingCopy05() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c68423cb49ac70425b148bfc659919", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic boolean match(TryStatement node, Object other)", "signatureAfterChange": " \tpublic boolean match(TryStatement node, Object other)", "diff": ["-\t\treturn (level >= AST.JLS4 ? safeSubtreeListMatch(node.resources(), o.resources()) : true)", "+\t\treturn (level >= AST.JLS4_INTERNAL ? safeSubtreeListMatch(node.resources(), o.resources()) : true)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c8eae3483ef3b4c10f8fafab88be1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic TypeBinding getOtherFieldBindings(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding getOtherFieldBindings(BlockScope scope)", "diff": ["-\t\t\t\t    if ((originalBinding.type.tagBits & TagBits.HasTypeVariable) != 0 && type.id != T_Object) {", "+\t\t\t\t    if ((originalBinding.type.tagBits & TagBits.HasTypeVariable) != 0 && type.id != T_JavaLangObject) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9c9181ce200aa43ddd6b25501a052a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4412fcf3d168e3c5cc3b92c0b70e5bcf2376f3fc", "commitAfterChange": "8bf9953e1351888d8d186166d8f2000b15a08f07", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected void locateMatches(JavaProject javaProject, PossibleMatchSet matchSet) throws JavaModelException", "signatureAfterChange": " protected void locateMatches(JavaProject javaProject, PossibleMatchSet matchSet) throws CoreException", "diff": ["-protected void locateMatches(JavaProject javaProject, PossibleMatchSet matchSet) throws JavaModelException {", "+protected void locateMatches(JavaProject javaProject, PossibleMatchSet matchSet) throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9d4c3833b41ab4b2327b75b3b1d5bda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathPreferencePage.java", "commitBeforeChange": "a08b4c389632f0f20a50182ded68880addc0de18", "commitAfterChange": "5cb40e1ad24651b50221770b935dfa647cb41f4d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprotected boolean hasProjectSpecificOptions(IProject project)", "signatureAfterChange": "  \tprotected boolean hasProjectSpecificOptions(IProject project)", "diff": ["-\t\treturn (project == null) ? false : AptConfig.hasProjectSpecificFactoryPath(JavaCore.create(project));", "+\t\treturn (project == null) ? false : FactoryPath.hasProjectSpecificFactoryPath(JavaCore.create(project));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9df12f344f6577fc9e90898e2398f49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "commitAfterChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic Object getKey(Object key)", "signatureAfterChange": " \tpublic Object getKey(Object key)", "diff": ["-\t\treturn entry._fKey;", "+\t\treturn entry.key;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9eb5657353320b9c6711b2767475a7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "2292d96d982a21ac668b3edcff1d774c928dd59d", "commitAfterChange": "e19275b58ad64aff1e057c59c0e35ec0b545a662", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \t \tprivate void parseParameterizedMethod()", "signatureAfterChange": " \t \tprivate void parseParameterizedMethod()", "diff": ["-\t\tconsumeParameterizedMethod();", "+\t\tconsumeParameterizedGenericMethod();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f578b023dd12ee319315b5dfb842d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "616a41b14ead174db92c630ec6ed7f1d666a9b67", "commitAfterChange": "645b7eff21d5db2b90380f1d4478beb9fa33f107", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject1() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject1() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f760355798dd84f4aab5a7a5a81272", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "d50f599c69eb795e78c16e3acf0ec69b29313628", "commitAfterChange": "2d29c79891a705ebdda86325f5eda79a45a41b75", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void destroy()", "signatureAfterChange": "\r public void destroy()", "diff": ["-\tfDestroyed= true;\r", "+\tisDestroyed= true;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa1229544929fd1468581ed9843a7683", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void codeComplete(int offset, ICompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " public void codeComplete(int offset, CompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["+ */", "+public void codeComplete(int offset, CompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException {", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa20e3379b8b8c7d50777863ea662298", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AptBuilderTests.java", "commitBeforeChange": "bfcd45867d04fefcde8c411b2c4f613fed962f2b", "commitAfterChange": "8360857ac96415dcd60ac94fbc284e7801424ade", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void testGeneratedFileInBuilder() throws Exception", "signatureAfterChange": " \tpublic void testGeneratedFileInBuilder() throws Exception", "diff": ["-\t\t_testGeneratedFileInBuilder( getProjectName() );", "+\t\t_testGeneratedFileInBuilder0( getProjectName() );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa382076e4916684c9a3e932e7238af3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d48c25cb976d99917f58b366198a77010dd2d678", "commitAfterChange": "e0794fcfb44a17efaa6223129a8b32f7f36f63a6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic boolean exists()", "signatureAfterChange": "  \tpublic boolean exists()", "diff": ["-\t\tif (!hasJavaNature(this.fProject)) return false;", "+\t\tif (!hasJavaNature(this.project)) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa406dccf357ec0eb44d3c684b899dab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic boolean visit(MethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(LineComment node)", "diff": ["+\t */", "+\tpublic boolean visit(LineComment node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa4863ec7b8f9c1807c20c71025dfe45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexInput.java", "commitBeforeChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "commitAfterChange": "82730fa91cab84d990d4e3898f46564d654b224e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic abstract IEntryResult[] queryEntries(char[] pattern, int matchRule) throws IOException;", "signatureAfterChange": " \tpublic abstract EntryResult[] queryEntries(char[] pattern, int matchRule) throws IOException;", "diff": ["-\tpublic abstract IEntryResult[] queryEntries(char[] pattern, int matchRule) throws IOException;", "+\tpublic abstract EntryResult[] queryEntries(char[] pattern, int matchRule) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa49a0778d5e62226e8ebb3066145362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic final boolean needClassInitMethod()", "signatureAfterChange": " \tpublic final boolean needClassInitMethod()", "diff": ["-\t\tif (getKind() == IGenericType.INTERFACE)", "+\t\tif (kind() == IGenericType.INTERFACE)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa5279169fa06e490690c83ac51f86b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "35d3c94bac1e2208a31f158b8d7e6058b35282e2", "commitAfterChange": "2b6f2c5ab69f56c08d444fe8672c8fe1596db9c2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "diff": ["-\t\t\t\ttypeRef = new ImplicitDocTypeReference(name, this.memberStart);", "+\t\t\t\ttypeRef = new JavadocImplicitTypeReference(name, this.memberStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa599be3155a196f3cdc80743e1b7051", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, BinaryTypeBinding binaryTypeBinding)", "signatureAfterChange": " private void reportHierarchy(IType focus, CompilationUnitDeclaration parsedUnit, BinaryTypeBinding binaryTypeBinding)", "diff": ["-\t\t\t\t\tTypeDeclaration typeDecl = new AstNodeFinder(parsedUnit).findType(focus);", "+\t\t\t\t\tTypeDeclaration typeDecl = new ASTNodeFinder(parsedUnit).findType(focus);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa67c644a7876d99942cba92e114ec37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfIntValues.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic int removeKey(char[] key)", "signatureAfterChange": "  \tpublic int removeKey(char[] key)", "diff": ["-\t\t\tif (currentKey.length == keyLength", "-\t\t\t\t&& CharOperation.prefixEquals(currentKey, key)) {", "-\t\t\t\t\tint value = valueTable[index];", "-\t\t\t\t\telementSize--;", "-\t\t\t\t\tkeyTable[index] = null;", "-\t\t\t\t\tvalueTable[index] = NO_VALUE;", "-\t\t\t\t\trehash();", "-\t\t\t\t\treturn value;", "-\t\t\t\t}", "+\t\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key)) {", "+\t\t\t\tint value = valueTable[index];", "+\t\t\t\telementSize--;", "+\t\t\t\tkeyTable[index] = null;", "+\t\t\t\tvalueTable[index] = NO_VALUE;", "+\t\t\t\trehash();", "+\t\t\t\treturn value;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa6e8cebbf8805bc1153bc05eda1a424", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocSingleTypeReference.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void reportDeprecatedType(Scope scope)", "signatureAfterChange": " \tprotected void reportDeprecatedType(Scope scope)", "diff": ["-\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, this, scope.getModifiers());", "+\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, this, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa7ee53ec0fd5ef99ef015c136bfdba4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\tReferenceBinding receiverType = scope.enclosingSourceType();", "+\t\t\tReferenceBinding receiverType = scope.enclosingReceiverType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa85c51ea98fb89fc1014781cb29aed9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "89b15ba6d3aa28748d29d9d1d4b083699e7539bb", "commitAfterChange": "4a19373fcf0b223c67accf2e0e240651b8f7bc94", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject2() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject2() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_BUILDPATH)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa8f038c3e7c54d9f8c9da0db4864e8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ModelUpdater.java", "commitBeforeChange": "7935a9b598fa65f4010dcaa4ea82e60362171faa", "commitAfterChange": "75ce3c2ae05f82c84abc92fd62f99af42b2ef94d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void elementAdded(Openable element)", "signatureAfterChange": " \tprotected void elementAdded(Openable element)", "diff": ["-\t\t\t\t// get rid of namelookup since it holds onto obsolete cached info ", "+\t\t\t\t// get rid of package fragment cache", "-\t\t\t\tproject.resetNameLookup();", "+\t\t\t\tproject.resetCaches();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa90f0b21fcbf467ffba7738c329b77c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprivate TypeBinding getTypeFromSignature(String typeSignature, Scope scope)", "signatureAfterChange": "  \tprivate TypeBinding getTypeFromSignature(String typeSignature, Scope scope)", "diff": ["-\t\t\tassignableTypeBinding = this.lookupEnvironment.getTypeFromTypeSignature(wrapper, typeVariables, this.assistScope.enclosingClassScope().referenceContext.binding, null, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\tassignableTypeBinding = this.lookupEnvironment.getTypeFromTypeSignature(wrapper, typeVariables, this.assistScope.enclosingClassScope().referenceContext.binding, null, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa9c89d7706c6d644c2da6b2424ebb7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " protected void reportMatchingSuper(TypeReference superReference, IJavaElement enclosingElement, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedClassContainer, boolean shouldReportSuper) throws CoreException", "signatureAfterChange": " protected void reportMatchingSuper(TypeReference superReference, IJavaElement enclosingElement, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedClassContainer, boolean shouldReportSuper) throws CoreException", "diff": ["-\t\t\t\t\tif (this.patternFineGrain == 0 || ((this.patternFineGrain & IJavaSearchConstants.PARAMETERIZED_TYPE_REFERENCE) != 0)) {", "+\t\t\t\t\tif (this.patternFineGrain == 0 || ((this.patternFineGrain & IJavaSearchConstants.TYPE_ARGUMENT_TYPE_REFERENCE) != 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaa51dae31a2198a02463c3cddb6cdd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \t\tpublic boolean match(NullLiteral node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(MemberRef node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(MemberRef node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aabc4870ed88da6d499e8c09dbd0592b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void shutdown()", "signatureAfterChange": " public void shutdown()", "diff": ["-\t\tIIndex[] selectedIndexes = job.getIndexes(null);", "+\t\tIndex[] selectedIndexes = job.getIndexes(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaca7cd9f7986e60d652df3edfe64676", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "b27018b8c1a5ebc19dde96a43cd2635a038b5a15", "commitAfterChange": "d5bd2c8e29ae6e0345c9dfd55cea025d71bd4c4b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic DefaultCodeFormatterOptions(Map settings)", "signatureAfterChange": "  \tpublic DefaultCodeFormatterOptions(Map settings)", "diff": ["-\t\tthis();", "+\t\tsetDefaultSettings();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aae0eea8fa931339891298b8e2e41842", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "60205bed5116ad3496dacec47d060779de36e647", "commitAfterChange": "af3a6832e3b1c1003f856c7a02d77d240881ed44", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public boolean isBasedOn(IResource resource)", "signatureAfterChange": "\r public boolean isBasedOn(IResource resource)", "diff": ["-\tif (this.managedCount == 0) {\r", "+\tif (this.useCount == 0) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aae1743d50f0944840193e6fdbdce3da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/IntersectionCastTypeBinding.java", "commitBeforeChange": "146009e38675deb85b2aa23f66e92f2f13172cf7", "commitAfterChange": "08b9d40dde0b005b87b207f8d02b5899cde7b397", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic int kind()", "signatureAfterChange": " \tpublic int kind()", "diff": ["-\t\treturn Binding.TYPE;", "+\t\treturn Binding.INTERSECTION_CAST_TYPE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aafe0c75f3fc3584a8b09d34ee74ecb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "c9d6ebaa0d13be6fc2e748dee3cae777e5c9d89a", "commitAfterChange": "0011958a7781b8e34a2680d48e8c358ce935fb15", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r protected void consumeInterfaceMemberDeclarationsopt()", "signatureAfterChange": "\r protected void consumeInterfaceMemberDeclarationsopt()", "diff": ["-\tthis.inInitializerPtr--;\r", "+\tthis.inFieldInitializationPtr--;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab6a7bf15ecb7e3fe78efc8c5a62ef45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public void test032() throws JavaModelException", "signatureAfterChange": "  public void test032() throws JavaModelException", "diff": ["-\t\t\"foo[JAVADOC_FIELD_REF]{{@link javadoc.text.BasicTestTextIns#foo}, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\"foo[JAVADOC_FIELD_REF]{{@link javadoc.text.BasicTestTextIns#foo}, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab700ffbaea8c632e89e1ed7daaae358", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "2483ac09a8125d318f0d65ce74d17599684aee53", "commitAfterChange": "7145bdca11a91565ab60b6927646ef17342a693f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void compileAndDeploy(String source, String className)", "signatureAfterChange": " public void compileAndDeploy(String source, String className)", "diff": ["-\t\t.append(Util.getJavaClassLib())", "+\t\t.append(Util.getJavaClassLibsAsString())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7db38c1c0e1a07fd21da3a67cd715c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "30f95fb4ebb82c4f1cdb1fd9e5630fe8b392b9dd", "commitAfterChange": "79595bc8e3c8f30e8c21788264b1a2858fc4a5c5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void append(IType type) throws JavaModelException", "signatureAfterChange": " \tprivate void append(IType type) throws JavaModelException", "diff": ["-\t\t\tresults.append(((JavaElement)type).occurrenceCount);", "+\t\t\tresults.append(((SourceRefElement)type).occurrenceCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab89bb56c826985d1b48c9a1c48559a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "8d3c2646ec0224ab936125ae7e1adde5786e1231", "commitAfterChange": "dfa40837336948a1f985e74dddef96333913f44c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": "  private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, boolean assignVariables, char[][][] missingTypeNames, \t\t\t\t\t\t\t\t\t\t\t\t\tTypeAnnotationWalker walker, boolean isClassTypeParameter)", "signatureAfterChange": "  private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, boolean assignVariables, char[][][] missingTypeNames, \t\t\t\t\t\t\t\t\t\t\t\t\tTypeAnnotationWalker walker, boolean isClassTypeParameter)", "diff": ["-\t\tinitializeTypeVariable(result[i], result, wrapper, missingTypeNames, walker.toTypeBarameterBounds(isClassTypeParameter, i));", "+\t\tinitializeTypeVariable(result[i], result, wrapper, missingTypeNames, walker.toTypeParameterBounds(isClassTypeParameter, i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9a6cc80eb974acb76d01160d07e9c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab9e4aee58c75132048f0feb45bbf22b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite)", "diff": ["-\t\t\t\treturn ArrayBinding.LengthField;", "+\t\t\t\treturn ArrayBinding.ArrayLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abace2cd7f397673d920843da6b93cc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SuperReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (enclosingTb.id == T_Object) {", "+\t\tif (enclosingTb.id == T_JavaLangObject) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abad6e08d5e88b405def750b30f5aa06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public boolean isPotentiallyNonNull(LocalVariableBinding local)", "signatureAfterChange": "  public boolean isPotentiallyNonNull(VariableBinding local)", "diff": ["-", "-public boolean isPotentiallyNonNull(LocalVariableBinding local) {", "+public boolean isPotentiallyNonNull(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abb4e463b7fa5204134ae9bafe3c3f96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tprotected void setNested(boolean nested)", "signatureAfterChange": " \tprotected void setNested(boolean nested)", "diff": ["-\t\tfNested = nested;", "+\t\tisNested = nested;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abc9e369be841c1f99ac888fcb589b38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "signatureAfterChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "diff": ["-\t\t\t\t\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.LOCAL_VARIABLE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.LOCAL_VARIABLE_REF, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abd1c2b36645c521b0ee572312f298af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BindingKeyTests.java", "commitBeforeChange": "39ff9f74e7d15911f4d6035f122df4ccc5c0c639", "commitAfterChange": "4565c4d11214ff6c3b1816642f5ab9e9c25eeecc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprotected void assertBindingKeySignatureEquals(String expected, String key)", "signatureAfterChange": " \t \tprotected void assertBindingKeySignatureEquals(String expected, String key)", "diff": ["-\t\tString signature = bindingKey.toSignature();", "+\t\tString signature = bindingKey.internalToSignature();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abde4bf071990234ef3cde01a19d7d43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void test_nonnull_parameter_012()", "signatureAfterChange": " public void test_nonnull_parameter_012()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abf43f4e5dedc36969cb1bfc3bf38240", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "1604c4cb884aee860a1cc5ef654a628a5e36afd0", "commitAfterChange": "64db8d36b73417ee83ea1a6d91baaefe7d3848b0", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public static synchronized String removeProcessorOption(IJavaProject jproj, String key)", "signatureAfterChange": "     public static synchronized String removeProcessorOption(IJavaProject jproj, String key)", "diff": ["-    \tMap<String, String> options = getProcessorOptions(jproj);", "+    \tMap<String, String> options = getRawProcessorOptions(jproj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abf77181540a6f989deae5ac1a077c02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "f63095af3c7deaeee47a62f089307467f872f35e", "commitAfterChange": "6e8431ed2d3ced2183b0880b86a760ea14397f82", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": " \t \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\t\t\t\tif (initializationType.isRawType() && (fieldType.isParameterizedType() || fieldType.isGenericType())) {", "+\t\t\t\t\t\t\tif (initializationType.isRawType() && (fieldType.isBoundParameterizedType() || fieldType.isGenericType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac0e9c0def2345d3840976eb33bf3c2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "e2648f8b5ccbba51146261db3c629f21ae240071", "commitAfterChange": "080819febe201917c6d39d485bf6b0507c29f0c4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tprivate void findImports(CompletionOnImportReference importReference)", "signatureAfterChange": "  \tprivate void findImports(CompletionOnImportReference importReference)", "diff": ["-\t\ttoken =  importName;", "+\t\tcompletionToken =  importName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac12de031b7080ec00cd65bce6660579", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThisReference.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\treturn this.resolvedType = scope.enclosingSourceType();", "+\t\treturn this.resolvedType = scope.enclosingReceiverType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac16af098c4b53e339abe458dcf260bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 89, "signatureBeforeChange": " \tboolean visit(AnnotationQualifiedTypeReference typeRef, BlockScope scope);", "signatureAfterChange": " \tboolean visit(JavadocArraySingleTypeReference typeRef, BlockScope scope);", "diff": ["-\tboolean visit(AnnotationMessageSend messageSend, BlockScope scope);", "-\tboolean visit(AnnotationQualifiedTypeReference typeRef, BlockScope scope);", "+\tboolean visit(JavadocArrayQualifiedTypeReference typeRef, BlockScope scope);", "+\tboolean visit(JavadocArraySingleTypeReference typeRef, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac186a7d67c1f69af8d00b27630aa27f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testAccessRestriction10() throws Exception", "signatureAfterChange": " public void testAccessRestriction10() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.DISABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.DISABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac1f840f428ec7071371b443f18ae5aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "signatureAfterChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "diff": ["-\t\t\tthis.type.binding = typeBinding;", "+\t\t\tthis.type.resolvedType = typeBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2e1be21c9c1cdaa3021045aa8a35d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate void runAPTInFileBasedMode(final ProcessorEnvImpl processorEnv, \t\t\t\t\t\t\t\t\t   final Map<IFile, Set<IFile>> lastGeneratedFiles)", "signatureAfterChange": " \t \tprivate void runAPTInFileBasedMode(final BuildEnv processorEnv, \t\t\t\t\t\t\t\t\t   final Map<IFile, Set<IFile>> lastGeneratedFiles)", "diff": ["-\tprivate void runAPTInFileBasedMode(final ProcessorEnvImpl processorEnv,", "+\tprivate void runAPTInFileBasedMode(final BuildEnv processorEnv,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac3c197319422265599a5e5fccfbc31a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "da0372488a7d84e7cb9c4ca0733fb42f30faa604", "commitAfterChange": "f4bb90e126352ba58699dc135199884ab2b69a00", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\tloopingContext.complainOnFinalAssignmentsInLoop(scope, actionInfo);", "+\t\t\t\tloopingContext.complainOnDeferredChecks(scope, actionInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac40d139b00e21b5e06fa5cf1325d1ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestMixed.java", "commitBeforeChange": "6ee69a27bb90b4501869adce2a7020b0fadb9402", "commitAfterChange": "886d0f0c1c856616883aceae38186164d207f2a8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected Map getCompilerOptions()", "signatureAfterChange": "  \tprotected Map getCompilerOptions()", "diff": ["-\t\toptions.put(CompilerOptions.OPTION_DocCommentSupport, this.localDocCommentSupport);", "+\t\toptions.put(CompilerOptions.OPTION_DocCommentSupport, this.docCommentSupport);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac4f11df5a2b769fb4d18a1b131a8c9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  private void visitIfNeeded(Initializer initializer)", "signatureAfterChange": "  private void visitIfNeeded(Initializer initializer)", "diff": ["-\t\t&& (initializer.bits & ASTNode.HasLocalTypeMASK) != 0) {", "+\t\t&& (initializer.bits & ASTNode.HasLocalType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac5c191f2d93edc21e4894af861de240", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic boolean shrink()", "signatureAfterChange": " \tpublic boolean shrink()", "diff": ["-\t\tif (fOverflow > 0)", "+\t\tif (overflow > 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac609bd971595845d8275ed30dfd9220", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "d7e7bb059880a6c87ea3290708d2d0a9f9e7ebe8", "commitAfterChange": "a415220ad0bdc743d286b40ccc481ededfe8132e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tConstant opConstant = left.conditionalConstant();", "+\t\tConstant opConstant = left.optimizedBooleanConstant();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac63303aca61ddeae9f3df8bf5f5451d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  private MethodBinding findMethod(char[] methodDescriptor, char[][][] missingTypeNames)", "signatureAfterChange": "  private MethodBinding findMethod(char[] methodDescriptor, char[][][] missingTypeNames)", "diff": ["-\t\t\tTypeBinding param = this.environment.getTypeFromSignature(methodDescriptor, index, end, false, this, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\tTypeBinding param = this.environment.getTypeFromSignature(methodDescriptor, index, end, false, this, missingTypeNames, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac78b190ec08bc9ee518947a4511c36f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tprotected boolean generateInfos(\r \t\tOpenableElementInfo info,\r \t\tIProgressMonitor pm,\r \t\tHashtable newElements,\r \t\tIResource underlyingResource)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t */\r", "-\tprotected boolean generateInfos(\r", "-\t\tOpenableElementInfo info,\r", "-\t\tIProgressMonitor pm,\r", "-\t\tHashtable newElements,\r", "-\t\tIResource underlyingResource)\r", "-\t\tthrows JavaModelException {\r", "-\r", "-\t\tif (getParent() instanceof JarPackageFragment) {\r", "-\t\t\t// ignore .java files in jar\r", "-\t\t\tthrow newNotPresentException();\r", "-\t\t\t// put the info now, because getting the contents requires it\r", "-\t\t\tfgJavaModelManager.putInfo(this, info);\r", "-\t\t\tCompilationUnitElementInfo unitInfo = (CompilationUnitElementInfo) info;\r", "-\r", "-\t\t\t// generate structure\r", "-\t\t\tCompilationUnitStructureRequestor requestor =\r", "-\t\t\t\tnew CompilationUnitStructureRequestor(this, unitInfo, newElements);\r", "-\t\t\tIProblemFactory factory = new ProblemFactory();\r", "-\t\t\tSourceElementParser parser = new SourceElementParser(requestor, factory);\r", "-\t\t\tparser.parseCompilationUnit(this, !isWorkingCopy());\r", "-\t\t\tif (isWorkingCopy()) {\r", "-\t\t\t\t// remember problems\r", "-\t\t\t\tVector problems = requestor.fProblems;\r", "-\t\t\t\tif (problems != null) {\r", "-\t\t\t\t\tproblems.copyInto(\r", "-\t\t\t\t\t\t((WorkingCopyElementInfo) unitInfo).problems = new IProblem[problems.size()]);\r", "-\t\t\t\t}\r", "-\r", "-\t\t\t\tCompilationUnit original = (CompilationUnit) getOriginalElement();\r", "-\t\t\t\tunitInfo.fTimestamp =\r", "-\t\t\t\t\t((IFile) original.getUnderlyingResource()).getModificationStamp();\r", "-\t\t\t\tif (unitInfo.fTimestamp == IResource.NULL_STAMP) {\r", "-\t\t\t\t\tthrow new JavaModelException(\r", "-\t\t\t\t\t\tnew JavaModelStatus(IJavaModelStatusConstants.INVALID_RESOURCE));\r", "-\t\t\treturn unitInfo.isStructureKnown();\r", "+ */\r", "+protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException {\r", "+\tif (getParent() instanceof JarPackageFragment) {\r", "+\t\t// ignore .java files in jar\r", "+\t\tthrow newNotPresentException();\r", "+\t} else {\r", "+\t\t// put the info now, because getting the contents requires it\r", "+\t\tfgJavaModelManager.putInfo(this, info);\r", "+\t\tCompilationUnitElementInfo unitInfo = (CompilationUnitElementInfo) info;\r", "+\r", "+\t\t// generate structure\r", "+\t\tCompilationUnitStructureRequestor requestor = new CompilationUnitStructureRequestor(this, unitInfo, newElements);\r", "+\t\tIProblemFactory factory = new DefaultProblemFactory();\r", "+\t\tSourceElementParser parser = new SourceElementParser(requestor, factory);\r", "+\t\tparser.parseCompilationUnit(this, !isWorkingCopy());\r", "+\t\tif (isWorkingCopy()) {\r", "+\t\t\t// remember problems\r", "+\t\t\tVector problems = requestor.fProblems;\r", "+\t\t\tif (problems != null) {\r", "+\t\t\t\tproblems.copyInto(((WorkingCopyElementInfo)unitInfo).problems = new IProblem[problems.size()]);\r", "+\t\t\t}\r", "+\t\t\t\r", "+\t\t\tCompilationUnit original = (CompilationUnit) getOriginalElement();\r", "+\t\t\tunitInfo.fTimestamp = ((IFile) original.getUnderlyingResource()).getModificationStamp();\r", "+\t\t\tif(unitInfo.fTimestamp == IResource.NULL_STAMP){\r", "+\t\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_RESOURCE));\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\treturn unitInfo.isStructureKnown();\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac802c21e876d85f7eff9463d3837f5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/IIndexer.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tvoid index(IDocument document, IIndexerOutput output) throws java.io.IOException;", "signatureAfterChange": "  \tvoid index(SearchDocument document, IIndexerOutput output) throws java.io.IOException;", "diff": ["-\tvoid index(IDocument document, IIndexerOutput output) throws java.io.IOException;", "+\tvoid index(SearchDocument document, IIndexerOutput output) throws java.io.IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac917422f7fd71327a8a667588b329b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "5f97e12f962e721b3d706fc12b2c5617a3adbc7d", "commitAfterChange": "f179c68e167c14230d1517ad0b6adc68e8bc0742", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private FlowInfo analyseBooleanAssertion(BlockScope currentScope, Expression argument, \t\tFlowContext flowContext, FlowInfo flowInfo, boolean wasInsideAssert, boolean passOnTrue)", "signatureAfterChange": " private FlowInfo analyseBooleanAssertion(BlockScope currentScope, Expression argument, \t\tFlowContext flowContext, FlowInfo flowInfo, boolean wasInsideAssert, boolean passOnTrue)", "diff": ["-\t\tflowContext.tagBits |= FlowContext.INSIDE_NEGATIVE_ASSERT; // this affects syntactic analysis for fields in EqualExpression", "+\t\tflowContext.tagBits |= FlowContext.INSIDE_NEGATION; // this affects syntactic analysis for fields in EqualExpression"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acd3564d8a73f5cb65e334dca68b8ee5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "30692448718de71df165cc52c018bee7df31a8fb", "commitAfterChange": "7fbd6c6645520ea8c438436fb3626bdc9d3414b8", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void exitInterface(int declarationEnd)", "signatureAfterChange": " \tpublic void exitInterface(int declarationEnd)", "diff": ["-\t\texitClass(declarationEnd);", "+\t\texitType(declarationEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ace4920bffad809c85025187aa8cb215", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " public IResource getUnderlyingResource() throws JavaModelException", "signatureAfterChange": " public IResource getUnderlyingResource() throws JavaModelException", "diff": ["-\treturn getResource();", "+\treturn resource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ace4e9ed2f80725cb36fd3014398bc56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public FieldBinding getSyntheticField(ReferenceBinding targetEnclosingType, boolean onlyExactMatch)", "signatureAfterChange": " public FieldBinding getSyntheticField(ReferenceBinding targetEnclosingType, boolean onlyExactMatch)", "diff": ["-\t\t\t\t&& field.type.findSuperTypeWithSameErasure(targetEnclosingType) != null)", "+\t\t\t\t&& field.type.findSuperTypeOriginatingFrom(targetEnclosingType) != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad02b7bb6c0c0ead36a1c5a91bcf6067", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic boolean visit(PackageDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MemberValuePair node)", "diff": ["+\t */", "+\tpublic boolean visit(MemberValuePair node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad0d1a4a8f9f17916decdc2f8b8bc6f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tprotected void setModifiers(Initializer initializer, org.eclipse.jdt.internal.compiler.ast.Initializer oldInitializer)", "signatureAfterChange": " \tprotected void setModifiers(Initializer initializer, org.eclipse.jdt.internal.compiler.ast.Initializer oldInitializer)", "diff": ["-\t\t\t\tinitializer.internalSetModifiers(oldInitializer.modifiers & CompilerModifiers.AccJustFlag);", "+\t\t\t\tinitializer.internalSetModifiers(oldInitializer.modifiers & ExtraCompilerModifiers.AccJustFlag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad188b782938702ddaffd3bcf21a5cd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate void formatOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace)", "signatureAfterChange": "  \tprivate void formatOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLBRACE, insertSpaceBeforeBrace);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACE, insertSpaceBeforeBrace);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad4eb00e8303ab1167d630162fd05d36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tprivate void findConstructors(\r \t\tReferenceBinding currentType,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \tprivate void findConstructors(\r \t\tReferenceBinding currentType,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\tif (options.checkVisibilitySensitive()\r", "+\t\t\t\tif (options.checkVisibility()\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad577894aae4f079d654176a35e0b577", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ecd1acbeaec0e8dc5942e2fe22475a0cae159335", "commitAfterChange": "10ab53f81571907009e57d9a00518324cb1c7bf2", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tprotected void flushClasspathProblemMarkers(boolean flushCycleMarkers, boolean flushClasspathFormatMarkers)", "signatureAfterChange": " \tprotected void flushClasspathProblemMarkers(boolean flushCycleMarkers, boolean flushClasspathFormatMarkers)", "diff": ["-\t\t\tif (project.exists()) {", "+\t\t\tif (project.isAccessible()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad62faf21fb11699cf06fd678a8ffb75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " public void testRenameMethod1() throws JavaModelException", "signatureAfterChange": " public void testRenameMethod1() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad779ec2b60641af9136aadf859bdf14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "0e681f80efbcd55630ac88e7932322f24f43cac4", "commitAfterChange": "4a0aba8da7540fe196b62f610441e5b671eaee55", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " public TypeReference getTypeReference(int dim)", "signatureAfterChange": " public TypeReference getTypeReference(int dim)", "diff": ["-\t\t\tref.sourceEnd = this.endPosition;", "+\t\t\tref.sourceEnd = this.rBracketPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad97b26fdd6c473b6d2bde7bdb178f53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ClassLiteralAccessCompletionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(ClassLiteralAccessCompletionTest.class);", "+\treturn buildAllCompliancesTestSuite(ClassLiteralAccessCompletionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adade46ef1f34f6591957ee4eb16ed8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "\r \tprivate static void updateVariableValue(\r \t\tString variableName,\r \t\tIPath path,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tprivate static void updateVariableValue(\r \t\tString variableName,\r \t\tIPath path,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "diff": ["-\t\t\t\t\t\t\t\taffectedProjects.put(projects[i], projects[i].getResolvedClasspath(true));\r", "+\t\t\t\t\t\t\t\taffectedProjects.put(projects[i], projects[i].getExpandedClasspath(true));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adbaecb693b3855114c2e5374deb68ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding inheritedMethod, MethodBinding otherInheritedMethod)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding inheritedMethod, MethodBinding otherInheritedMethod)", "diff": ["-\t} else if (inheritedMethod.declaringClass.findSuperTypeWithSameErasure(otherInheritedMethod.declaringClass) != null) {", "+\t} else if (inheritedMethod.declaringClass.findSuperTypeOriginatingFrom(otherInheritedMethod.declaringClass) != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adc6f34bcf33dce926815909f2868cd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LocalVariable.java", "commitBeforeChange": "7ed48908ec8a41725ff925d0919c07571054836e", "commitAfterChange": "6364144351fd62baca30ba0aad505f339b6274eb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic ISourceRange getSourceRange() throws JavaModelException", "signatureAfterChange": " \tpublic ISourceRange getSourceRange() throws JavaModelException", "diff": ["-\t\treturn new SourceRange(this.declarationSourceStart, this.declarationEnd-this.declarationSourceStart+1);", "+\t\treturn new SourceRange(this.declarationSourceStart, this.declarationSourceEnd-this.declarationSourceStart+1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ade8869bd62f5e1ff77ceea23280ba6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": " public void if_icmplt(Label lbl)", "signatureAfterChange": " public void if_icmplt(BranchLabel lbl)", "diff": ["-public void if_icmplt(Label lbl) {", "+public void if_icmplt(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ade9a74da05f710f3488ed82fc7ce21e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tscope.problemReporter().unsafeRawConversion(arguments[i], argumentType, parameterType);", "+\t\t\t\tscope.problemReporter().unsafeTypeConversion(arguments[i], argumentType, parameterType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aded471847c495f52991d86d43dd3198", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingResolver.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tITypeBinding resolveType(AnonymousClassDeclaration type)", "signatureAfterChange": " \tITypeBinding resolveType(EnumDeclaration type)", "diff": ["+\t */", "+\tITypeBinding resolveType(EnumDeclaration type) {", "+\t\treturn null;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adedbd600f327a40f3635d95ecc670ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void testAddImports() throws JavaModelException", "signatureAfterChange": " public void testAddImports() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adf47955d50b22846c5f8cd53fb16df3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ce0574029788b33026db9472a710468c9674b11f", "commitAfterChange": "3d73760dc9e0c52d27b28aa6b5ee7c1a07bc4ccf", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 165, "signatureBeforeChange": " \t \tprivate Set loadClasspathListCache(String cacheName)", "signatureAfterChange": " \t \tprivate Set loadClasspathListCache(String cacheName)", "diff": ["-\t\tFile cacheFile = getClasspathListFile(cacheName);", "+\t\tFile cacheFile = getClasspathCacheFile(cacheName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adfa8bf9621ec44f314c5df54036ef18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r \tprivate int computeRelevanceForExpectingType(TypeBinding proposalType)", "signatureAfterChange": "\r \tprivate int computeRelevanceForExpectingType(TypeBinding proposalType)", "diff": ["-\t\t\t\t\treturn EXPECTEDTYPEMATCHRELEVANCE;\r", "+\t\t\t\t\treturn R_EXPECTED_TYPE;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adfd5d8dcfd788d66de39052421cc19d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProblemConstructorTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn setupSuite(testClass());", "+\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae0e368ac0d43f6f3a02ae972000e6df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "d6f02f07429dae5d9415421b0a1fb951b3ab04e0", "commitAfterChange": "bd118e51270d54e48ef1b8d76bf62d7f013d8051", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     protected IBinding getBindingFromKey(final String key, final ICompilationUnit unit)", "signatureAfterChange": "     protected IBinding getBindingFromKey(final String key, final ICompilationUnit unit)", "diff": ["-\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS4);", "+\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae2cbc930af27f95980c8017820755ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public synchronized Index getIndex(IPath containerPath, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndex(IPath containerPath, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-\tIPath indexLocation = computeIndexLocation(containerPath);", "+\tIndexLocation indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae2de30c1bc1335537f0f71610968a35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "57be54931a21775011b9d46837f226f82fd878f2", "commitAfterChange": "69b7d322507c416d24ecb0826f4b72b49ddbac45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae3edda04d75d35d11453972853cd031", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 244, "methodNumberAfterChange": 244, "signatureBeforeChange": " public void testBug109695e() throws CoreException", "signatureAfterChange": " public void testBug109695e() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"IWWPD2\", SearchPattern.R_CAMEL_CASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"IWWPD2\", SearchPattern.R_CAMELCASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae43e75c05ddef870d82ae4be795fd76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "3d59334f5fb40926c8512874251a24cf438a401b", "commitAfterChange": "fa04bcc7aeac1403aeb17877212985395c1541ca", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tQualifiedAllocationExpression qualifiedAllocationExpression, \t\tBlockScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); ", "+// TODO add again once 49298 is fixed\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae507f57415eb79f0d9b40965006a314", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "8a55616a15f0e12ee24162781746f45ed8c24b78", "commitAfterChange": "d7c285a09f8cde2ba05e7f838f10ce545b90c736", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public final void areTypesCastCompatible(BlockScope scope, TypeBinding castTb, TypeBinding expressionTb)", "signatureAfterChange": "\r public final void areTypesCastCompatible(BlockScope scope, TypeBinding castTb, TypeBinding expressionTb)", "diff": ["-\t\tif (castTb != expressionTb && (scope.compareTypes(castTb, expressionTb) == NotRelated)) {\r", "+\t\tif (castTb != expressionTb && (Scope.compareTypes(castTb, expressionTb) == NotRelated)) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae5aed00df7b2c723f6f64789066faac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "5cc4b8c969b380e215352115b7cc4d2697d8011e", "commitAfterChange": "fef767ead34860def5c5969bff47bc76e721609d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICodeCompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor) throws JavaModelException", "diff": ["-protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICodeCompletionRequestor requestor) throws JavaModelException {\r", "+protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICompletionRequestor requestor) throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae6ed77b1b6d33935f49d9941c6d7c08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/StringAsserts.java", "commitBeforeChange": "b3c38270b99ecd1520eea104e9cdb0099eab8f71", "commitAfterChange": "41ef4898bfd4399802c4b7fddb8b2e4f958ada78", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds)", "signatureAfterChange": "  \tpublic static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds)", "diff": ["-\t\t\tTestCase.assertEquals(message, expected, actual);", "+\t\t\tAssert.assertEquals(message, expected, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9ab67aef00066d11c577865c5da18f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void testCreateWorkingCopy() throws CoreException", "signatureAfterChange": " public void testCreateWorkingCopy() throws CoreException", "diff": ["-\t\tassertDeltas(", "+\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9c17de06aa42fadd6e7d8e0badeab7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \t \tprivate void findLocalMethodsFromFavorites( \t\t\tchar[] methodName, \t\t\tMethodBinding[] methods, \t\t\tScope scope, \t\t\tObjectVector methodsFound, \t\t\tReferenceBinding receiverType, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope)", "signatureAfterChange": " \t \tprivate void findLocalMethodsFromFavorites( \t\t\tchar[] methodName, \t\t\tMethodBinding[] methods, \t\t\tScope scope, \t\t\tObjectVector methodsFound, \t\t\tReferenceBinding receiverType, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope)", "diff": ["-\t\t\t\t\t\tif (lookupEnvironment.methodVerifier().doesMethodOverride(otherMethod, method)) {", "+\t\t\t\t\t\tif (lookupEnvironment.methodVerifier().isMethodSubsignature(otherMethod, method)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9c71fb943815d1b8762d7da5af23b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public static AnnotationValue createDefaultValue(     \t\tObject domValue,     \t\tAnnotationElementDeclarationImpl decl,     \t\tBaseProcessorEnv env)", "signatureAfterChange": "          public static AnnotationValue createDefaultValue(     \t\tObject domValue,     \t\tAnnotationElementDeclarationImpl decl,     \t\tBaseProcessorEnv env)", "diff": ["-        return createAnnotationValue(converted, null, -1, decl, env);", "+        return createAnnotationValueFromDOMValue(converted, null, -1, decl, env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae9e7ebced852dc869e47b7fd7fd496a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind)", "signatureAfterChange": "  \tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind)", "diff": ["-\tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind) {", "+\tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeadf9f43877c78cbf124994479e8f84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "afe8e7c03c9e057a9ab6bf025b43a423a4494448", "commitAfterChange": "10cca24df480719d1a06391159cf8b7088d76566", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass)", "signatureAfterChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass)", "diff": ["-\t\tif (TESTS_PREFIX != null || TESTS_NAMES != null || TESTS_NUMBERS!=null || TESTS_RANGE !=null || ONLY_SUFFIX != null) {", "+\t\tif (TESTS_PREFIX != null || TESTS_NAMES != null || TESTS_NUMBERS!=null || TESTS_RANGE !=null || RUN_ONLY_ID != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeb137fbaaa810f014056c1e5ca94d51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic FlowInfo initsOnBreak()", "signatureAfterChange": "  \tpublic FlowInfo initsOnBreak()", "diff": ["-\t\treturn FlowInfo.DeadEnd;", "+\t\treturn FlowInfo.DEAD_END;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aec9a90ba80582d2b4af95965106538a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "a6e44391963b63fa0c27651827313192cc7a80a0", "commitAfterChange": "2f1a4983792ff8c7616d36f89ae251df5be99177", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\t\t\tcase ProblemReasons.NotAFunctionalInterface:", "+\t\t\t\tcase ProblemReasons.NoSuchSingleAbstractMethod:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aece9c2f67011d79c4bc500ffd0bd642", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ModelUpdater.java", "commitBeforeChange": "7935a9b598fa65f4010dcaa4ea82e60362171faa", "commitAfterChange": "75ce3c2ae05f82c84abc92fd62f99af42b2ef94d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void elementRemoved(Openable element)", "signatureAfterChange": " \tprotected void elementRemoved(Openable element)", "diff": ["-\t\t\t\t//1G1TW2T - get rid of namelookup since it holds onto obsolete cached info ", "+\t\t\t\t// get rid of package fragment cache", "-\t\t\t\tproject.resetNameLookup();", "+\t\t\t\tproject.resetCaches();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeec23ab43de63940870af30c2fd025d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "a275ad50b8daee265303be1b145bfaa91e508d39", "commitAfterChange": "aa717ce56e721f6ed4fc92594ba56da9f08c982e", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic static Test setupSuite(Class clazz)", "signatureAfterChange": " \tpublic static Test setupSuite(Class clazz)", "diff": ["-\t\treturn AbstractCompilerTest.suite(clazz.getName(), CompilerTestSetup.class, testClasses);", "+\t\treturn AbstractCompilerTest.suite(clazz.getName(), RegressionTestSetup.class, testClasses);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af01b559f7c0445d7c0291bd18483430", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/RunAllTests.java", "commitBeforeChange": "997a25bfb062d5e13ab988c44d8a015d4710ad9a", "commitAfterChange": "fa16fc80b475f974c3040ef90f01075968f51405", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tAbstractJavaModelTests.TESTS_SEARCH = null;", "+\tAbstractJavaModelTests.TESTS_RANGE = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af02d7b9ad2f4552208699d70a1b98d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0390be1950bcdfa43b629ba946ffaaaee0d5d33f", "commitAfterChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "diff": ["-\t\t\t\tthis.scribe.printNewLines(numberOfBlankLinesAtBeginningOfMethodBody);", "+\t\t\t\tthis.scribe.printEmptyLines(numberOfBlankLinesAtBeginningOfMethodBody);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af3402b0c51186a4026ddc0edc31e314", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b9de5f3466a9b4d6687de837720c445097067b16", "commitAfterChange": "39416e9e4305b172d90b88aed3085d98ded0a86c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean checkAndReportBracketAnomalies(ProblemReporter problemReporter)", "signatureAfterChange": "\r public boolean checkAndReportBracketAnomalies(ProblemReporter problemReporter)", "diff": ["-\t\t\tcompilationUnit.compilationResult.lineSeparatorPositions = scanner.lineEnds();\r", "+\t\t\tcompilationUnit.compilationResult.lineSeparatorPositions = scanner.getLineEnds();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af3c0d802df9bcde36dacd2b48d80f6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testExternalArchiveCorrespondingResource() throws JavaModelException", "signatureAfterChange": " public void testExternalArchiveCorrespondingResource() throws JavaModelException", "diff": ["-\tIPackageFragmentRoot element= project.getPackageFragmentRoot(getExternalJCLPath());", "+\tIPackageFragmentRoot element= project.getPackageFragmentRoot(getExternalJCLPathString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af43e1d57813921851c87e14d9dec1b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "1924cfa5e4209a8742be0104afe1beaad86d0922", "commitAfterChange": "dfe897878a3115c90160783084107f96dcd301be", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   \tpublic void diagnoseParse()", "signatureAfterChange": "   \tpublic void diagnoseParse()", "diff": ["-\t\t\t\tif(this.parser.problemReporter().globalOptions.maxProblemsPerUnit < this.parser.compilationUnit.compilationResult.problemCount) {", "+\t\t\t\tif(this.parser.problemReporter().options.maxProblemsPerUnit < this.parser.compilationUnit.compilationResult.problemCount) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af4b120c65d677174072a44c2d8510be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void setDefaultSettings()", "signatureAfterChange": "  \tpublic void setDefaultSettings()", "diff": ["-\t\tthis.alignment_for_enum_constants = Alignment.NONE;", "+\t\tthis.alignment_for_enum_constants = Alignment.M_NO_ALIGNMENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af5118dacd3094aa527f51202b915e55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d48c25cb976d99917f58b366198a77010dd2d678", "commitAfterChange": "e0794fcfb44a17efaa6223129a8b32f7f36f63a6", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["-\t\t\t\t&& JavaProject.hasJavaNature(this.fProject)) {", "+\t\t\t\t&& JavaProject.hasJavaNature(this.project)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af6b1531b51f67108f593f5953f49e75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_3.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionSetupSuite(testClass(), COMPLIANCE_1_3);", "+\t\treturn buildUniqueComplianceTestSuite(testClass(), COMPLIANCE_1_3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af9d8f6ef370bcd7b36dae39e0579961", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "4e0ae58aab280dee504c4ab6dcba8e184266cb21", "commitAfterChange": "a1346ff4af9450fe23ebd3f838bb71f9f06fe1a7", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tpublic CompilationUnit convert(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit, char[] source)", "signatureAfterChange": "  \tpublic CompilationUnit convert(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit, char[] source)", "diff": ["-\t\t} catch(RuntimeException e) {", "+\t\t} catch(IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afa08732c0b2ef94128c77f1bcffdb3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeBound(short boundIndex)", "signatureAfterChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeBound(short boundIndex)", "diff": ["-\tpublic TypeAnnotationWalker toTypeBound(short boundIndex) {", "+\tpublic ITypeAnnotationWalker toTypeBound(short boundIndex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afa5bee7455d70fa3e4582a0b843703e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public MethodBinding getUpdatedMethodBinding(MethodBinding targetMethod, ReferenceBinding newDeclaringClass)", "signatureAfterChange": " public MethodBinding getUpdatedMethodBinding(MethodBinding targetMethod, ReferenceBinding newDeclaringClass)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afb066017f913e20a337a2063dd6c6d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "1bb29de87657371d6b2e9a01ac3484f13516eab9", "commitAfterChange": "b208e61b699229b414f76c3c9bfed66b1f92d991", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, IJavaElement localElement, IJavaElement[] otherElements, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tMethodReferenceMatch methodReferenceMatch = locator.newMethodReferenceMatch(element, elementBinding, accuracy, -1, -1, false /*not constructor*/, false/*not synthetic*/, reference);", "+\t\tInternalMethodReferenceMatch methodReferenceMatch = locator.newMethodReferenceMatch(element, elementBinding, accuracy, -1, -1, false /*not constructor*/, false/*not synthetic*/, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afb80dedfe7019bdfcde2de8d7745439", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "95cb60d325cbf487c877d2ee73069bb93ae4326a", "commitAfterChange": "b34003668f0f78b104bc2b84b4ccbe996d2e1864", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tprivate void firePostChangeDelta( \t\tIJavaElementDelta deltaToNotify, \t\tIElementChangedListener[] listeners, \t\tint[] listenerMask, \t\tint listenerCount)", "signatureAfterChange": "  \tprivate void firePostChangeDelta( \t\tIJavaElementDelta deltaToNotify, \t\tIElementChangedListener[] listeners, \t\tint[] listenerMask, \t\tint listenerCount)", "diff": ["-\t\tif (VERBOSE){", "+\t\tif (DEBUG){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afc8f0e61dea748bc37b0f3c01534473", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  public void testCompletionMethodDeclaration9() throws JavaModelException", "signatureAfterChange": "  public void testCompletionMethodDeclaration9() throws JavaModelException", "diff": ["-\t\t\"element:clone    completion:protected Object clone() throws CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\t\t\"element:clone    completion:protected Object clone() throws CloneNotSupportedException    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd6808bb2ca3d3985a55a6caf3a39cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "0ce30fa1efeccdb8f098a9dcf15c46f705a57e6f", "commitAfterChange": "59a26b3b3e45e8769323a82cc5fccc64fe9d5f4a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "signatureAfterChange": " public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "diff": ["-\t\t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(fieldBinding)) {", "+\t\t\t\t\t&& currentScope.needBlankFinalFieldInitializationCheck(fieldBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afd6b40cf8aa833d81baac2a19a120d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t\t \tpublic static final Constant computeConstantOperationAND_AND(Constant left, int leftId, Constant right, int rightId)", "signatureAfterChange": "  \t\t \tpublic static final Constant computeConstantOperationAND_AND(Constant left, int leftId, Constant right, int rightId)", "diff": ["-\t\treturn Constant.fromValue(left.booleanValue() && right.booleanValue());", "+\t\treturn BooleanConstant.fromValue(left.booleanValue() && right.booleanValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afe2f5b7410b552ccd3a54236035b7a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "f8065ae134834f9481154dc34f90c12640c5c175", "commitAfterChange": "77c3ce15baae65ce09e64063026465c9791f8dea", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public void addNamespaceReference(PackageBinding packageBinding)", "signatureAfterChange": "\r public void addNamespaceReference(PackageBinding packageBinding)", "diff": ["-\t\tif (!namespaceDependencies.contains(packageBinding))\r", "+\t\tif (!namespaceDependencies.containsIdentical(packageBinding))\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff3bd3e72a99e408aeef2fc3c141baf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryTypeConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,TypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\t\tmethod.modifiers |= CompilerModifiers.AccSemicolonBody;", "+\t\t\t\tmethod.modifiers |= ExtraCompilerModifiers.AccSemicolonBody;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aff5156afcf6e63735b0a2ccc091a1d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\t\t    scope.problemReporter().unsafeRawConversion(this.initialization, initializationType, variableType);", "+\t\t\t\t\t\t    scope.problemReporter().unsafeTypeConversion(this.initialization, initializationType, variableType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b01a11c412925708409950a258ed57b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteElementsOperation.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void initASTParser()", "signatureAfterChange": "  \tprivate void initASTParser()", "diff": ["-\t\tthis.parser = ASTParser.newParser(AST.JLS4);", "+\t\tthis.parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b02294dfd78fcbfe4719392842088394", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefClassErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefClassErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b03e1e92b857d94a51f2d56cb8e39ef5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationStatement.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tVariableDeclarationStatement(AST ast)", "signatureAfterChange": " \tVariableDeclarationStatement(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b04976630c65f5da433c7b34b1ba185f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 436, "methodNumberAfterChange": 436, "signatureBeforeChange": " \tpublic void test417()", "signatureAfterChange": " \tpublic void test417()", "diff": ["-\t\tpreferences.insert_space_before_constructor_declaration_open_paren = true;", "+\t\tpreferences.insert_space_before_opening_paren_in_constructor_declaration = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0529edf29070cd824da8c4c42af6ee6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "dde29313645bb8126a58151e5c083fccc6ec2f84", "commitAfterChange": "8dbc592d1c901a5afee66e23cc531bc892893553", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r public String getHandleMemento()", "signatureAfterChange": "\r public String getHandleMemento()", "diff": ["-\tbuff.append(this.fJarPath.toString()); // 1GEP51U\r", "+\tbuff.append(this.jarPath.toString()); // 1GEP51U\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b053d90134282a451b5d4d518ba6d39e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  protected MatchLocatorParser(ProblemReporter problemReporter, MatchLocator locator)", "signatureAfterChange": "  protected MatchLocatorParser(ProblemReporter problemReporter, MatchLocator locator)", "diff": ["-\tthis.javadocParser.checkJavadoc = true;", "+\tthis.javadocParser.checkDocComment = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b06158812e3aca760c5cc2ed6707226b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": " \tpublic void endVisit(NullLiteral node)", "signatureAfterChange": " \tpublic void endVisit(EnumConstantDeclaration node)", "diff": ["+\t */", "+\tpublic void endVisit(EnumConstantDeclaration node) {", "+\t\t// default implementation: do nothing", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b06b6f03d6aa06c0a479a65a9e8c9a8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " public void testChangeMethodVisibility() throws JavaModelException", "signatureAfterChange": " public void testChangeMethodVisibility() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b07d6d69bc417a4463888b84d90ecb15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void testAnonymousType1() throws JavaModelException", "signatureAfterChange": " public void testAnonymousType1() throws JavaModelException", "diff": ["-\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b084659ed019e21f0b148b78d22f18ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "fbca650edb328f0f707453361814a9ce428ed5b2", "commitAfterChange": "d5b44f5a37496c81718803075a8abd8a70622ba0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "signatureAfterChange": " \tpublic boolean performConcurrentJob(IJob searchJob, int waitingPolicy, IProgressMonitor progress)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\tMessages.bind(Messages.manager_filesToIndex, Integer.toString(awaitingJobsCount)));", "+\t\t\t\t\t\t\t\t\t\t\t\tMessages.bind(Messages.jobmanager_filesToIndex, Integer.toString(awaitingJobsCount)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0977bb5ae30233af07f46dfe296841a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 39, "signatureBeforeChange": " private synchronized void updateIndexState(String indexLocation, Integer indexState)", "signatureAfterChange": " private synchronized void updateIndexState(IPath indexLocation, Integer indexState)", "diff": ["-private synchronized void updateIndexState(String indexLocation, Integer indexState) {", "+private synchronized void updateIndexState(IPath indexLocation, Integer indexState) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0af4e45ae24b5e465324c71669b3185", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "da39b69e72c50baaaa7ca77863d468ca697fcf61", "commitAfterChange": "ff204ce3a41738619b4636be750fa00b8770f7a8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic boolean visit(TypeDeclaration typeDeclaration, ClassScope scope)", "signatureAfterChange": "\r \tpublic boolean visit(MemberTypeDeclaration typeDeclaration, ClassScope scope)", "diff": ["-\tpublic boolean visit(TypeDeclaration typeDeclaration, ClassScope scope) {\r", "+\tpublic boolean visit(MemberTypeDeclaration typeDeclaration, ClassScope scope) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0c180a8a00f012285af578514c860f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "bb811cafdba11489b23b9c8cd6c46c237bf0db24", "commitAfterChange": "2a64f816a9e1e382be3c6f39875e5c587a7235c0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " private void mergeCategory(char[] categoryName, DiskIndex onDisk, int[] positions, DataOutputStream stream) throws IOException", "signatureAfterChange": " private void mergeCategory(char[] categoryName, DiskIndex onDisk, int[] positions, FileOutputStream stream) throws IOException", "diff": ["-private void mergeCategory(char[] categoryName, DiskIndex onDisk, int[] positions, DataOutputStream stream) throws IOException {", "+private void mergeCategory(char[] categoryName, DiskIndex onDisk, int[] positions, FileOutputStream stream) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0e1455566fa81ab8a7f2a523af7b68b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForInnerclass(ReferenceBinding enclosingType)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForInnerclass(ReferenceBinding enclosingType)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1146e779cca45af692061f444ae8a7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7958800325e781c29b79a69900d300a76f68d447", "commitAfterChange": "b2575708bb8dc5b4ad7b6e3107e511761c7e9659", "methodNumberBeforeChange": 763, "methodNumberAfterChange": 763, "signatureBeforeChange": " public void test758()", "signatureAfterChange": " public void test758()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b151f1a6aad1e23ff1ffd4a1858f6ae6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "signatureAfterChange": " \t \tpublic static ASTNode[] parseClassBodyDeclarations(char[] source, int offset, int length, Map settings, boolean recordParsingInformation)", "diff": ["-\t\tParser parser = new Parser(problemReporter, false);", "+\t\tParser parser = new CommentRecorderParser(problemReporter, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b157efe8e2688bc3b393c3f9a672eb79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerInvocationTests.java", "commitBeforeChange": "3b4029ad0c347af82ce0e071d1bdeda2faa23e5f", "commitAfterChange": "b960e7bcc1b81954f130f4ed72ccc69670f05038", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public void test004_no_dash_d_option() throws IOException", "signatureAfterChange": " public void test004_no_dash_d_option() throws IOException", "diff": ["-\tbinDirectory.mkdir();", "+\tbinDirectory.mkdirs();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1729e9fe1c6c4709e6e5582563d519a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic boolean visit(OR_OR_Expression or_or_Expression, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(OR_OR_Expression or_or_Expression, BlockScope scope)", "diff": ["-\t\treturn dumpBinaryExpression(or_or_Expression, ITerminalSymbols.TokenNameOR_OR, scope);", "+\t\treturn dumpBinaryExpression(or_or_Expression, TerminalTokens.TokenNameOR_OR, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a8408f1e62a367f74ac61db20b1d73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic void testMethod14() throws Exception", "signatureAfterChange": " \tpublic void testMethod14() throws Exception", "diff": ["-\t\t\tassertElementEquals(", "+\t\t\tassertElementExists("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1bc1a2a30a85cb678e7b1e47effaa3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \t\r \tprivate int computeRelevanceForCaseMatching(char[] token, char[] proposalName)", "signatureAfterChange": "\r \t\r \tprivate int computeRelevanceForCaseMatching(char[] token, char[] proposalName)", "diff": ["-\t\t\treturn  CASEMATCHRELEVANCE;\r", "+\t\t\treturn  R_CASE;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1e9a29d5ddd00cf1bd8154a8c7e4d68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 249, "methodNumberAfterChange": 245, "signatureBeforeChange": " public void testBug109695f() throws CoreException", "signatureAfterChange": " public void testBug109695f() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"UTF16DSS\", SearchPattern.R_CAMELCASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"UTF16DSS\", SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1fac13e9e6d94cfedda0652803815f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public char[] sourceName()", "signatureAfterChange": "     public char[] sourceName()", "diff": ["-        switch (this.kind) {", "+        switch (this.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1ff3086827ac428b4a46097d5f1d2d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelCompletionTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  protected void removeLibrary(String projectName, String jarName) throws CoreException, IOException", "signatureAfterChange": "  protected void removeLibrary(String projectName, String jarName) throws CoreException, IOException", "diff": ["-\tremoveLibraryEntry(javaProject, new Path(projectPath + jarName));", "+\tremoveClasspathEntry(javaProject, new Path(projectPath + jarName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2026c3a7750953bfee1b8c6a5cb9277", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/APTProblem.java", "commitBeforeChange": "1f82fbfe681e32018e530b8aaba28b5eaf34206f", "commitAfterChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic boolean isWarning()", "signatureAfterChange": " \t \tpublic boolean isWarning()", "diff": ["-\t\treturn _severity == Severity.Warning;", "+\t\treturn _severity == Severity.WARNING;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2043f3b25e8856339c14a0cc62759f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeBound(short boundIndex)", "signatureAfterChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeBound(short boundIndex)", "diff": ["-\tpublic ITypeAnnotationWalker toTypeBound(short boundIndex) {", "+\tpublic TypeAnnotationWalker toTypeBound(short boundIndex) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b215308dfa6212e413cff2d0b489a6e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "08504ba476b411d63330d4820dcef9b3032013d3", "commitAfterChange": "c2c9899514741103674136b061d37380904756e0", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r \tpublic boolean saveClasspath(IClasspathEntry[] newClasspath, IPath newOutputLocation) throws JavaModelException", "signatureAfterChange": "\r \tpublic boolean saveClasspath(IClasspathEntry[] newClasspath, IPath newOutputLocation) throws JavaModelException", "diff": ["-\t\t\t\tgetClasspathAsXMLString(newClasspath, newOutputLocation));\r", "+\t\t\t\tgetClasspathAsXML(newClasspath, newOutputLocation));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b226333975cfa97d833a136c6e6b3111", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic boolean visit(LocalTypeDeclaration localTypeDeclaration, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(LocalTypeDeclaration localTypeDeclaration, BlockScope scope)", "diff": ["-\t\tpatternLocator.match(localTypeDeclaration, matchSet);", "+\t\tpatternLocator.match(localTypeDeclaration, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b23e99992f6f3eeabdf6df9662c005cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tvoid endVisit(AnnotationQualifiedTypeReference typeRef, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(JavadocArraySingleTypeReference typeRef, BlockScope scope);", "diff": ["-\tvoid endVisit(AnnotationMessageSend messageSend, BlockScope scope);", "-\tvoid endVisit(AnnotationQualifiedTypeReference typeRef, BlockScope scope);", "+\tvoid endVisit(JavadocArrayQualifiedTypeReference typeRef, BlockScope scope);", "+\tvoid endVisit(JavadocArraySingleTypeReference typeRef, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b249d93ed7e9492a13d280926261d6ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic boolean visit( \t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration, \t\tBlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b25458a33280c0d5e695982d557c4120", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "6febc04f00603747029f2ea9616afd5b682c9f03", "commitAfterChange": "ba65adb7228709772812cc43f8ccb14a824acf89", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 137, "signatureBeforeChange": " protected void consumeEnumConstantHeader()", "signatureAfterChange": " protected void consumeEnumConstantHeader()", "diff": ["-\t\t\t\tcurrentType.insiseEnumConstantPart = false;", "+\t\t\t\tcurrentType.insideEnumConstantPart = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b26bec699effe13787e170ee698768d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "6cab09b385685f9ffe9bf0c73a23862a9da82e76", "commitAfterChange": "2548efb91bb743c25fd3bab3833473b467f314a0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void checkConcreteInheritedMethod(MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "signatureAfterChange": " void checkConcreteInheritedMethod(MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "diff": ["-\t\t\tif (abstractMethod.returnType.leafComponentType().isParameterizedType()) {", "+\t\t\tif (abstractMethod.returnType.leafComponentType().isParameterizedTypeWithActualArguments()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2724b155bb380a8302bb6f3410061af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " private void readChunk(String[] docNames, FileInputStream stream, int index, int size) throws IOException", "signatureAfterChange": " private void readChunk(String[] docNames, InputStream stream, int index, int size) throws IOException", "diff": ["-private void readChunk(String[] docNames, FileInputStream stream, int index, int size) throws IOException {", "+private void readChunk(String[] docNames, InputStream stream, int index, int size) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27d5233500660cd15438f15fd9399ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocPackageCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public void test022() throws JavaModelException", "signatureAfterChange": "  public void test022() throws JavaModelException", "diff": ["-\t\t\"bar[FIELD_REF]{bar, Ljavadoc.tags.OtherTypes;, I, bar, null, \"+this.positions+R_DICENNRNS+\"}\"", "+\t\t\"bar[FIELD_REF]{bar, Ljavadoc.tags.OtherTypes;, I, bar, null, \"+this.positions+R_DRICENNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b28c7af2ccc3f6306bc918b38cd3ff0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \t \tprivate void computeExpectedTypesForAllocationExpression( \t\tReferenceBinding binding, \t\tExpression[] arguments, \t\tScope scope, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \t \tprivate void computeExpectedTypesForAllocationExpression( \t\tReferenceBinding binding, \t\tExpression[] arguments, \t\tScope scope, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\tTypeBinding argType = argument.expressionType;", "+\t\t\t\tTypeBinding argType = argument.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b291cc47025c5dc64d444e4bb96ac8bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "b267dc5fd07e62c802290616c0cbe7abef453463", "commitAfterChange": "aa0984d79780a8b5715722d33a45cdb0c134a6fb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\t\t|| !this.binding.declaringClass.canBeSeenBy(currentScope))) {", "+\t\t\t|| !this.codegenBinding.declaringClass.canBeSeenBy(currentScope))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b294e898ad591a83a705c9d49e124620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "95f59caaf27a775333076cb1bc1d967e2796cdb3", "commitAfterChange": "7e41439f7b91a880bb131d143b9faf947232eb35", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t\t\tif (this != otherParamType.type()) ", "+\t\t\tif (this != otherParamType.genericType()) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b298ffdda6bea9ac2f4a8bfe67fed53b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "6ca7b05ef1b6b0934e3b4a61271beb56d55912f0", "commitAfterChange": "c531b3f0c052a6b596da13730fb589efa2e45e52", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tvoid preValueChangeEvent(ASTNode node, SimplePropertyDescriptor property)", "signatureAfterChange": " \tvoid preValueChangeEvent(ASTNode node, SimplePropertyDescriptor property)", "diff": ["-\t\t\tthis.eventHandler.postValueChangeEvent(node, property);", "+\t\t\tthis.eventHandler.preValueChangeEvent(node, property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c169753354d65eac7f065b21e599de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.pluggable.core/src/org/eclipse/jdt/internal/apt/pluggable/core/filer/IdeFilerImpl.java", "commitBeforeChange": "4cfa9fdfcf70945208bf89f43413554ac3911276", "commitAfterChange": "8fea12e4bfaf9512e2895dd3e38d29d36df0b0d7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t@Override \tpublic FileObject createResource(Location location, CharSequence pkg, \t\t\tCharSequence relativeName, Element... originatingElements) throws IOException", "signatureAfterChange": " \t@Override \tpublic FileObject createResource(Location location, CharSequence pkg, \t\t\tCharSequence relativeName, Element... originatingElements) throws IOException", "diff": ["-\t\tIFile file = getOutputFileForLocation(location, pkg, relativeName);", "+\t\tIFile file = getFileFromOutputLocation(location, pkg, relativeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2c9feae6df0c3711a40538dbdd2ca0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OperatorExpression.java", "commitBeforeChange": "6f559832866ec7957220224e260ced70fbcf727a", "commitAfterChange": "f3a6f459efd2ac1aed8a2fbc164dee41b4c19dd6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static final String generateTableTestCase()", "signatureAfterChange": "  \tpublic static final String generateTableTestCase()", "diff": ["-\tpublic static final String generateTableTestCase(){", "+\tpublic static final String generateTableTestCase(){ // TODO (olivier) should be extracted into a regression test case", "-\t\t\t{\tint result = (ResolveTypeTables[operator][(left<<4)+right]) & 0x0000F;", "+\t\t\t{\tint result = (OperatorSignatures[operator][(left<<4)+right]) & 0x0000F;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2cdbee5daf33fbbe450c41f4cd514df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "commitAfterChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void flush()", "signatureAfterChange": " \tpublic void flush()", "diff": ["-\t\t\tentry = entry._fPrevious;", "+\t\t\tentry = entry.previous;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2d2fd4aea8d19513153aa15b85e9463", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 171, "methodNumberAfterChange": 178, "signatureBeforeChange": " public void testRemoveExternalLibFolder2() throws CoreException", "signatureAfterChange": " public void testRemoveExternalLibFolder2() throws CoreException", "diff": ["-\t\tIJavaProject p = createJavaProject(\"P\", new String[0], new String[] {getExternalFolderPath(\"externalLib\")}, \"\");", "+\t\tIJavaProject p = createJavaProject(\"P\", new String[0], new String[] {getExternalResourcePath(\"externalLib\")}, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2d3223ba19817e2cb05ac860f80ac51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ParameterizedBinaryType.java", "commitBeforeChange": "a5c56b9d9a1a6a7a2412b9e4fe79595e9a454729", "commitAfterChange": "808f8a4c125739a8b2d2237ba90c04dc1390f0b7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic String getFullyQualifiedParameterizedName() throws JavaModelException", "signatureAfterChange": "  \tpublic String getFullyQualifiedParameterizedName() throws JavaModelException", "diff": ["-\t\treturn getFullyQualifiedParameterizedName(getFullyQualifiedName(), this.genericTypeSignature);", "+\t\treturn getFullyQualifiedParameterizedName(getFullyQualifiedName(), this.uniqueKey);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2d3a92e2cbfa157c87ae1278dd60f7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "40a1ed0c9dc0ab688d5293676f8aa97f01174e41", "commitAfterChange": "9295475f17ec96b15242bc49ff91f42882579f94", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic void setExtraDimensions(int dimensions)", "signatureAfterChange": "  \tpublic void setExtraDimensions(int dimensions)", "diff": ["-\t\tthis.displacedArrayDimensions = dimensions;", "+\t\tthis.extraArrayDimensions = dimensions;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2df3d32db729faf989097a076547e28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(ParameterizedType node)", "diff": ["+\t */", "+\tpublic boolean visit(ParameterizedType node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2e06f30127196e1b2e0ea4d47613ec0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "df7db86dfdaff61d3ebc9328b44d180f263988fe", "commitAfterChange": "d781dcbe8a593d5ba6dc04230bf23771b905f7bd", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": " public final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException", "signatureAfterChange": " public final boolean jumpOverUnicodeWhiteSpace() throws InvalidInputException", "diff": ["-\t\treturn CharOperation.isWhitespace(this.currentCharacter);", "+\t\treturn ScannerHelper.isWhitespace(this.currentCharacter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f2281054f7234f1841f2240ca5a810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "bf06f23cb37471e4e0b10eb0affe747a9e945b46", "commitAfterChange": "67c70f0229b1ee30edee39ee40e49c055e5684f0", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\tboolean shouldIntersectExceptions = original.declaringClass.isInterface() && original.thrownExceptions != Binding.NO_EXCEPTIONS; // only needed when selecting from interface methods", "+\t\t\t\tboolean shouldIntersectExceptions = original.declaringClass.isAbstract() && original.thrownExceptions != Binding.NO_EXCEPTIONS; // only needed when selecting from interface methods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2fea23cd0340dace1eb1ba47a3a2ffe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7183d81a2458b7a9ecc9004f74bf12b52ac2eafc", "commitAfterChange": "54eb6fa8730358fcf98285db139cf9edbd02f92a", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 65, "signatureBeforeChange": "  \tfinal void doTextInsert(int insertOffset, ASTNode node, int initialIndentLevel, boolean removeLeadingIndent, TextEditGroup editGroup)", "signatureAfterChange": "  \tfinal void doTextInsert(int insertOffset, ASTNode node, int initialIndentLevel, boolean removeLeadingIndent, TextEditGroup editGroup)", "diff": ["-\t\t\t\t\tint srcIndentLevel= getIndent(copySource.getStartNode().getStartPosition());", "+\t\t\t\t\tint srcIndentLevel= getIndent(copySource.getNode().getStartPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3009ad9c199bb9dc3722c2e8e0693b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SynchronizedStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b311b72b9e5423231f75fd1a26b2c03a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void generateCode(BlockScope blockScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope blockScope, CodeStream codeStream)", "diff": ["-\t\tif ((this.bits & IsReachableMASK) == 0) {", "+\t\tif ((this.bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b31cc1ff7997fcc3611fb8f95c88e07d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testExternalJarAdded2() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarAdded2() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32492d240d2e47e151b91e613c91aab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ImportDeclaration.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tASTNode clone0(AST target)", "signatureAfterChange": " \tASTNode clone0(AST target)", "diff": ["-\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b328d9ff365ad7c4d236e2a576108029", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "  \tprivate void findImportsOfStaticMethods(char[] methodName, ReferenceBinding ref)", "signatureAfterChange": "  \tprivate void findImportsOfStaticMethods(char[] methodName, ReferenceBinding ref)", "diff": ["-\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.METHOD_NAME_REFERENCE, this.actualCompletionPosition);", "+\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.METHOD_NAME_REFERENCE, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32e01e9cbf8a213b5334cf72625345c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": "  public void test146() throws JavaModelException", "signatureAfterChange": "  public void test146() throws JavaModelException", "diff": ["-\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32eaecc2a44c61c248cf4bcde2f2e1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected ITypeAnnotationWalker restrict(long newMatches, int newPathPtr)", "signatureAfterChange": "  \tprotected TypeAnnotationWalker restrict(long newMatches, int newPathPtr)", "diff": ["-\tprotected ITypeAnnotationWalker restrict(long newMatches, int newPathPtr) {", "+\tprotected TypeAnnotationWalker restrict(long newMatches, int newPathPtr) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b340e29f8dd9e84c118c3d7094b53b63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testReplaceMiddle() throws CoreException", "signatureAfterChange": " public void testReplaceMiddle() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b35df99580991c4cb8e6a0ff706c43ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static IJavaSearchScope createHierarchyScope(IType type) throws JavaModelException", "signatureAfterChange": " \tpublic static IJavaSearchScope createHierarchyScope(IType type) throws JavaModelException", "diff": ["-\t\treturn SearchBasicEngine.createHierarchyScope(type);", "+\t\treturn BasicSearchEngine.createHierarchyScope(type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b36a93fc2f1276efaf5e856dc99f7c64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testExternalJarAdded1() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarAdded1() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b38a39046425bf8d02422785d6241a73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "bc331c3c1c9987384cec8a101a070b308c8c75c4", "commitAfterChange": "5c9c9d13f21ca2b350289c522fa9a28827d49ab1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void setJavaConventionsSettings()", "signatureAfterChange": "  \tpublic void setJavaConventionsSettings()", "diff": ["-\t\tthis.alignment_for_arguments_in_annotation = Alignment.M_COMPACT_SPLIT;", "+\t\tthis.alignment_for_arguments_in_annotation = Alignment.M_NO_ALIGNMENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3ac09367cfddd3151e62ec2564bc9d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTNode.java", "commitBeforeChange": "ee4aaa82998d38e6753ee8cc828566dd18d4910f", "commitAfterChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tfinal void checkModifiable()", "signatureAfterChange": " \tfinal void checkModifiable()", "diff": ["-\t\tif ((this.flags & PROTECT) != 0) {", "+\t\tif ((this.typeAndFlags & PROTECT) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3ad531263759fd07967aaa10ce28b1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "c986b0f978be08ca5c6279c4e65ad1a7f4c62b60", "commitAfterChange": "be7acf5c57ef3c4a15433f3f4f0191da4eed3774", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "diff": ["-\t\t\tpostIncrement.assignmentImplicitConversion);", "+\t\t\tpostIncrement.preAssignImplicitConversion);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3b5c095a384d04a420662904d0cb080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic ClassFile( \t\tSourceTypeBinding aType, \t\tClassFile enclosingClassFile, \t\tboolean creatingProblemType)", "signatureAfterChange": " \tpublic ClassFile( \t\tSourceTypeBinding aType, \t\tClassFile enclosingClassFile, \t\tboolean creatingProblemType)", "diff": ["-\t\t\tsuperclassNameIndex = constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangObjectConstantPoolName);", "+\t\t\tsuperclassNameIndex = constantPool.literalIndexForType(ConstantPool.JavaLangObjectConstantPoolName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3cbd182ede4e953d9114158b7c12fdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "2fdd800912ee4f65c51a2ec384533d1146c71af7", "commitAfterChange": "844f82aaef831e55c4827a65ccd98caed0cd08f3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "signatureAfterChange": " \tpublic final boolean isTypeUseDeprecated(TypeBinding type, Scope scope)", "diff": ["-\t\tif (refType.isPrivate() && !scope.isDefinedInType(refType)) {", "+\t\tif ((refType.isPrivate() /*|| refType.isLocalType()*/) && !scope.isDefinedInType(refType)) {", "-\t\t\t((ReferenceBinding)refType.erasure()).modifiers |= AccPrivateUsed;", "+\t\t\t((ReferenceBinding)refType.erasure()).modifiers |= AccLocallyUsed;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d00274b37ab4a9543a8fe520fdc45a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.pluggable.core/src/org/eclipse/jdt/internal/apt/pluggable/core/dispatch/IdeMessagerImpl.java", "commitBeforeChange": "d8339605195e4a27842529cbdd4cfc67b77ac59c", "commitAfterChange": "ce1a50c038f410b16a75eb29a8e1c64f33a61360", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void printMessage(Kind kind, CharSequence msg, Element e, AnnotationMirror a, \t\t\tAnnotationValue v)", "signatureAfterChange": " \tpublic void printMessage(Kind kind, CharSequence msg, Element e, AnnotationMirror a, \t\t\tAnnotationValue v)", "diff": ["-\t\tAptProblem problem = BatchMessagerImpl.createProblem(kind, msg, e, a, v);", "+\t\tAptProblem problem = BaseMessagerImpl.createProblem(kind, msg, e, a, v);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3f39d1eb25f59076729c8710eb3b1f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefMethodErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefMethodErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3ff13df55d1ec3980ef963263ae0df0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \t \tpublic ICompilationParticipantResult[] getFilesWithoutAnnotation()", "signatureAfterChange": " \t \tpublic BuildContext[] getFilesWithoutAnnotation()", "diff": ["-\tpublic ICompilationParticipantResult[] getFilesWithoutAnnotation()", "+\tpublic BuildContext[] getFilesWithoutAnnotation()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b400c27387a5a7438df311ee48a51543", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationValueImpl.java", "commitBeforeChange": "339cc4d6bf1e0c04b5fd8670b5c5775e9b614ac5", "commitAfterChange": "58ac3474e49d75029f8406ec492537c604468d2a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic AnnotationValueImpl(BaseProcessingEnvImpl env, Object value, TypeBinding type)", "signatureAfterChange": " \tpublic AnnotationValueImpl(BaseProcessingEnvImpl env, Object value, TypeBinding type)", "diff": ["-\t\t\t_value = convertToJavaType(value, type, kind);", "+\t\t\t_value = convertToMirrorType(value, type, kind);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b411aae3e1e9dd2d3a0abaa16699a9a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b34a79aea557f53b7f18bd9181d2f1aa9458b4f9", "commitAfterChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \tpublic void computePackageFragmentRoots(\r \t\tIClasspathEntry entry,\r \t\tObjectVector accumulatedRoots, \r \t\tObjectSet rootIDs, \r \t\tboolean insideOriginalProject,\r \t\tboolean checkExistency,\r \t\tboolean retrieveExportedRoots)", "signatureAfterChange": "\r \tpublic void computePackageFragmentRoots(\r \t\tIClasspathEntry entry,\r \t\tObjectVector accumulatedRoots, \r \t\tHashSet rootIDs, \r \t\tboolean insideOriginalProject,\r \t\tboolean checkExistency,\r \t\tboolean retrieveExportedRoots)", "diff": ["-\t\tObjectSet rootIDs, \r", "+\t\tHashSet rootIDs, \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b434a38e7176c1f8ad09edeea7b9bc1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\t\t\tif (method.declaringClass == methods[j].declaringClass && doesMethodOverride(method, methods[j])) {", "+\t\t\tif (method.declaringClass == methods[j].declaringClass && areMethodsEqual(method, methods[j])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b437e14acec7d744f6395df54f9cba66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/TokenScanner.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic IScanner getScanner()", "signatureAfterChange": " \tpublic Scanner getScanner()", "diff": ["-\tpublic IScanner getScanner() {", "+\tpublic Scanner getScanner() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4605d227e775dfa9b502679cb8a4d94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "de0ba5a5e09b42f4671d55cb69260aca34e3da86", "commitAfterChange": "fa7671585f2cb4ab0fcb2cd24f007231af7e30f8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (referenceType.isParameterizedType() || referenceType.isGenericType() || referenceType.isTypeVariable()) {", "+\t\t\t// allow new List<?>[5]", "+\t\t\tif (referenceType.isBoundParameterizedType() || referenceType.isGenericType() || referenceType.isTypeVariable()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b464ac774879ed39e829fa6f22f9778d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " protected void consumeDiet()", "signatureAfterChange": " protected void consumeDiet()", "diff": ["-\tcheckAnnotation();", "+\tcheckComment();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b465eb3552bb0c7d652097a33e5f37ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileComparatorTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn setupSuite(testClass());", "+\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b46692a022ec77f7c5dc35a57306e23b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean visit(MemberTypeDeclaration typeDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration typeDeclaration, ClassScope scope)", "diff": ["-\tpublic boolean visit(MemberTypeDeclaration typeDeclaration, ClassScope scope) {", "+\tpublic boolean visit(TypeDeclaration typeDeclaration, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4715929d99a218bfb67c2b9208276e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/Comment.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic final void setAlternateRoot(ASTNode root)", "signatureAfterChange": " \tpublic final void setAlternateRoot(ASTNode root)", "diff": ["-\t\tmodifying();", "+\t\t// alternate root is *not* considered a structural property", "+\t\t// but we protect them nevertheless", "+\t\tcheckModifiable();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4769356db012f40fef8252d2f030a79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefMethodErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefMethodErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b480528b7dd7ad1d4aa47319be238d36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public boolean isDefinitelyNonNull(VariableBinding local)", "signatureAfterChange": "  public boolean isDefinitelyNonNull(LocalVariableBinding local)", "diff": ["-public boolean isDefinitelyNonNull(VariableBinding local) {", "+", "+public boolean isDefinitelyNonNull(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a47f8b2ff48eebeac96374fdbb4e10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void testInvalidTagsFieldErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsFieldErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4b68e1963ec777e4e65f3522fdbeda4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "4aacf54f1474533e7059867be5e610243474fdfb", "commitAfterChange": "f07048bfc66e27fc594df4283a8ea1d279d49037", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public void setJavaConventionsSettings()", "signatureAfterChange": " \t \tpublic void setJavaConventionsSettings()", "diff": ["-", "-    public void setJavaConventionsSettings() {", "+\tpublic void setJavaConventionsSettings() {", "-\t\tthis.tab_char = SPACE;", "+\t\tthis.tab_char = TAB; // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=89739"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4bc65988874b0d55505db63afc6aa9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public FieldBinding findFieldForCodeSnippet(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite)", "signatureAfterChange": "  public FieldBinding findFieldForCodeSnippet(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite)", "diff": ["-\t\t\treturn ArrayBinding.LengthField;", "+\t\t\treturn ArrayBinding.ArrayLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4bf109ab8a2f8190440c77868c5e51a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForClass.java", "commitBeforeChange": "886d0f0c1c856616883aceae38186164d207f2a8", "commitAfterChange": "3bb52dd94a6650dc05eccd3db55f82a70954db23", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildSuite(javadocTestClass());", "+\t\treturn buildTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4c26e03fe7c4c7b7fe9430bedf5d3a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/StringAsserts.java", "commitBeforeChange": "b9942ecaf3eefba2dbc5e187c939df5cfcc2d6c7", "commitAfterChange": "2ea28b71481adeeaf9e7adba83fdf2894ac85ffd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds)", "signatureAfterChange": "  \tpublic static void assertEqualStringsIgnoreOrder(String[] actuals, String[] expecteds)", "diff": ["-\t\t\tAssert.assertEquals(message, expected, actual);", "+\t\t\tTestCase.assertEquals(message, expected, actual);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4cfc2b8e43b74ffd14e9316381fe123", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic void acceptUnresolvedName(char[] name)", "signatureAfterChange": "  \tpublic void acceptUnresolvedName(char[] name)", "diff": ["-\t\t\tCompletionProposal proposal = CompletionEngine.this.createProposal(CompletionProposal.LOCAL_VARIABLE_REF, CompletionEngine.this.actualCompletionPosition);", "+\t\t\tInternalCompletionProposal proposal = CompletionEngine.this.createProposal(CompletionProposal.LOCAL_VARIABLE_REF, CompletionEngine.this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4f253f2ec5f891585e58ba315381813", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6e47268ed79fd7b89fd58e0a5c1b77470c0792ef", "commitAfterChange": "dcb63c7bea407ce9399b33fb2441f8ca456fabd4", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \tpublic boolean isFiring()", "signatureAfterChange": "\r \tpublic boolean isFiring()", "diff": ["-\t\treturn this.fFire;\r", "+\t\treturn this.isFiring;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4f62f20d4d8db8205c752561dd89421", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "05bd6362ebc3db4accc519070d9c8a9ecd2a788b", "commitAfterChange": "905cf94d64f942e28e58015355605b9b9383c577", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void generateOptimizedLogicalOr( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLogicalOr( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\tif ((left.implicitConversion & 0xF) == T_boolean) {", "+\t\tif ((left.implicitConversion & COMPILE_TYPE_MASK) == T_boolean) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b511c9944732d6bc88690d1854532032", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "09473c6b83f94b4ab60d09394d8636c0ec234aff", "commitAfterChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected void removeInfo(IJavaElement element)", "signatureAfterChange": " protected void removeInfo(JavaElement element)", "diff": ["-protected void removeInfo(IJavaElement element) {", "+protected void removeInfo(JavaElement element) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b529b38d683ce5b7bb0fd5599d8288ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public static TypeMirror createTypeMirror(ITypeBinding binding, BaseProcessorEnv env)", "signatureAfterChange": "      public static EclipseMirrorType createTypeMirror(ITypeBinding binding, BaseProcessorEnv env)", "diff": ["-    public static TypeMirror createTypeMirror(ITypeBinding binding, BaseProcessorEnv env)", "+    public static EclipseMirrorType createTypeMirror(ITypeBinding binding, BaseProcessorEnv env)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b52accce6826b681afc0757ead4ea86e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration node)", "diff": ["-\t\t\t\tvisit((ExtraDimension) dimensions.get(i));", "+\t\t\t\tvisit((Dimension) dimensions.get(i));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b54b11218ce4afb8eb345f78dca5eeff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceRefElementInfo.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void setSourceRangeStart(int start)", "signatureAfterChange": " protected void setSourceRangeStart(int start)", "diff": ["-\tfSourceRangeStart = start;", "+\tsourceRangeStart = start;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b552d579ce2caada3cd52d233c9f9b89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean visit(MemberTypeDeclaration memberTypeDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration memberTypeDeclaration, ClassScope scope)", "diff": ["-\tpublic boolean visit(MemberTypeDeclaration memberTypeDeclaration, ClassScope scope) {", "+\tpublic boolean visit(TypeDeclaration memberTypeDeclaration, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5551054060a79053e3fc8ab0c852ac7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/SwitchFlowContext.java", "commitBeforeChange": "57be54931a21775011b9d46837f226f82fd878f2", "commitAfterChange": "69b7d322507c416d24ecb0826f4b72b49ddbac45", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void recordBreakFrom(FlowInfo flowInfo)", "signatureAfterChange": "  public void recordBreakFrom(FlowInfo flowInfo)", "diff": ["-\tif ((this.initsOnBreak.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\tif ((this.initsOnBreak.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b55fd83910fdf897c0465a40d7b6ffe7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "a60305f80bf1ad1ad174c9322c37748af6f5af59", "commitAfterChange": "15c06de7002d8ed32fc40a1830b1a71e0fcb86e6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate static AnnotationProcessorFactory loadFactoryFromPlugin( String factoryName )", "signatureAfterChange": " \t \tprivate AnnotationProcessorFactory loadFactoryFromPlugin( String factoryName )", "diff": ["-\tprivate static AnnotationProcessorFactory loadFactoryFromPlugin( String factoryName )", "+\tprivate AnnotationProcessorFactory loadFactoryFromPlugin( String factoryName )", "-\t\tAnnotationProcessorFactory apf = PLUGIN_FACTORY_MAP.get( factoryName );", "+\t\tAnnotationProcessorFactory apf = _pluginFactoryMap.get( factoryName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5711f8568539213f88c73b39b4d47f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "73e6c55b6cebcb032c8128286708483f86167b64", "commitAfterChange": "5326f4925981afee39790c88bc133bd18e542033", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic boolean visit(AnnotationArgument argument, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(AnnotationSingleNameReference argument, BlockScope scope)", "diff": ["-\tpublic boolean visit(AnnotationArgument argument, BlockScope scope) {", "-\t\treturn true; // do nothing by default, keep traversing", "-\t}", "+\tpublic boolean visit(AnnotationSingleNameReference argument, BlockScope scope) {", "+\t\treturn true; // do nothing by default, keep traversing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b577572132b9154a6901b28791aca9d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "e1f6905bc3f2ff093a39df5e993a363b0e3750b6", "commitAfterChange": "f82f9726f9b94cf05c04c5a478b5d2547399a965", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprotected void initializeDefaultPluginPreferences()", "signatureAfterChange": " \tprotected void initializeDefaultPluginPreferences()", "diff": ["-\t\tpreferences.setDefault(COMPILER_PB_POSSIBLE_ACCIDENTAL_BOOLEAN_ASSIGNMENT, WARNING);", "+\t\tpreferences.setDefault(COMPILER_PB_POSSIBLE_ACCIDENTAL_BOOLEAN_ASSIGNMENT, IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b59b624e97d687e989a01ddbd338bdcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "4e993a8d5cbdc7815c7050ad8787e1c566312d6a", "commitAfterChange": "7d431a6663c03691d383a66bc16841bb87e3308d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic ReferenceExpression(TypeReference type, TypeReference[] typeArguments, SingleNameReference method)", "signatureAfterChange": "  \tpublic ReferenceExpression(TypeReference type, TypeReference[] typeArguments, SingleNameReference method)", "diff": ["-\t\tthis.typeParameters = typeArguments;", "+\t\tthis.typeArguments = typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5ba79ef9b71160cbf24e9d072c0c303", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SyntaxErrorTest.java", "commitBeforeChange": "660853596ad86f46d48cf8113dfaa868caccad1b", "commitAfterChange": "fd58e9ded6b0767fd2d0c5aa4edb418354ecfa05", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "signatureAfterChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "diff": ["-\t\t\tassertMode);", "+\t\t\tsourceLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5bd08b00259a3df6aa1af0a5e56c675", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": " \t\tpublic void endVisit(ExtraDimension node)", "signatureAfterChange": " \t\tpublic void endVisit(Dimension node)", "diff": ["-\t\tpublic void endVisit(ExtraDimension node) {", "+\t\tpublic void endVisit(Dimension node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5e7e7c91fd30c2a6aa2d031d11fc7b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public  void testBinarySubclass() throws JavaModelException", "signatureAfterChange": " public  void testBinarySubclass() throws JavaModelException", "diff": ["-\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5eb24a4377cb46e04e358b5eadc6c16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "8f630cc3021c8f0d9dea1a11ac2b2d6ef6fdc4f3", "commitAfterChange": "8d86c45b7dbc1d8316194b358e7234e4491fa695", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic boolean isUpperbound()", "signatureAfterChange": " \tpublic boolean isUpperbound()", "diff": ["-\t\treturn this.binding.isWildcard() && ((WildcardBinding) this.binding).kind == Wildcard.SUPER;", "+\t\treturn this.binding.isWildcard() && ((WildcardBinding) this.binding).kind == Wildcard.EXTENDS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5f98474d44dcb81c22faf20a467af13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cdbba3fe3494f2d010469af9060ef95e48842233", "commitAfterChange": "35725fdbc820b5d03438d3e4a4d3db79142d2182", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r \r \tpublic final ReferenceBinding getJavaLangRuntimeException()", "signatureAfterChange": "\r \r \tpublic final ReferenceBinding getJavaLangRuntimeException()", "diff": ["-\t\tcompilationUnitScope().recordReference(JAVA_LANG_RUNTIMEEXCEPTION);\r", "+\t\tcompilationUnitScope().recordQualifiedReference(JAVA_LANG_RUNTIMEEXCEPTION);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6037c0347f8648ad8cffe1e32f1d366", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "26bbc0f1d79a90c550f0bbb95cc6eeae2aa4e3bf", "commitAfterChange": "3b79f63e00cbebb1fe326313cd6905bd51bae92d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void addToChildren(JavaElementInfo parentInfo, JavaElement handle)", "signatureAfterChange": " private void addToChildren(Object parentInfo, JavaElement handle)", "diff": ["-private void addToChildren(JavaElementInfo parentInfo, JavaElement handle) {", "+private void addToChildren(Object parentInfo, JavaElement handle) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b60579d846f7c1cf04964fbeb14ae0d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "09344c3511ec65da3ebc80e49387be9bef2842c9", "commitAfterChange": "784fb3dfd6aad9e1272ee168af202a1a299ea44b", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic void rememberScope(AbstractSearchScope scope)", "signatureAfterChange": " \tpublic void rememberScope(AbstractSearchScope scope)", "diff": ["-\t\tthis.scopes.put(scope, null); ", "+\t\tthis.searchScopes.put(scope, null); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b60bb530aa2fa3b7a03497bf4f6e7b1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn setupSuite(testClass());", "+\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b60ec1556af10acb52c5490be6826049", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ClasspathJar.java", "commitBeforeChange": "6fd2d27e76da885e08b25f5a065ea5e0c622d413", "commitAfterChange": "8b76fbadc737bd965aca978e0e3517802f9a8476", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r public boolean equals(Object o)", "signatureAfterChange": "\r \r public boolean equals(Object o)", "diff": ["-\treturn zipFilename.equalsIgnoreCase(((ClasspathJar) o).zipFilename);\r", "-}\r", "+\treturn zipFilename.equals(((ClasspathJar) o).zipFilename);\r", "+} \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6604ce4b41d47fdad30bf7d31176a01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "a33ac3866abeb65c04a2bb54798d5c33d22b017c", "commitAfterChange": "264bb81150af78d312103e45e863e885c232fc2f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  \tprivate static IJavaModelStatus validateLibraryContents(IPath path, IJavaProject project, String entryPathMsg)", "signatureAfterChange": "  \tprivate static IJavaModelStatus validateLibraryContents(IPath path, IJavaProject project, String entryPathMsg)", "diff": ["-\t\t\t\t\t\tMessages.classpath_illegalLibraryArchive,", "+\t\t\t\t\t\tMessages.classpath_archiveReadError,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b67326c248845755da1cfdef20255444", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \t\tpublic boolean match(NullLiteral node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(MemberRef node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(MemberRef node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b67cd5e8bbbb0557171216b7b052ac12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexSummary.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public int getNextBlockLocationForPrefix(char[] prefix, int blockLoc)", "signatureAfterChange": "\r public int getNextBlockLocationForPrefix(char[] prefix, int blockLoc)", "diff": ["-\t\tFirstWordInBlock entry= (FirstWordInBlock) firstWordsInBlocks.elementAt(blockLoc);\r", "+\t\tFirstWordInBlock entry= (FirstWordInBlock) firstWordsInBlocks.get(blockLoc);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b67d0dc0c089cb9cd3f232c1d4307820", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "edd951b2efc6b8f7b24cb3f178fd99c174eb6c7a", "commitAfterChange": "dec2dac6f78a5ffa915ffd3b73cb386c60b72cae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected static Element getEntryAsXMLElement( \t\tDocument document, \t\tIClasspathEntry entry, \t\tIPath prefixPath) \t\tthrows JavaModelException", "signatureAfterChange": " \tprotected static Element getEntryAsXMLElement( \t\tDocument document, \t\tIClasspathEntry entry, \t\tIPath prefixPath) \t\tthrows JavaModelException", "diff": ["-\t\tString[] exclusionPatterns;", "+\t\tIPath[] exclusionPatterns;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6895ef0f398296ed51914fb5069d5b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetOutputLocationOperation.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public IJavaModelStatus verify()", "signatureAfterChange": "\r public IJavaModelStatus verify()", "diff": ["-\t\tclasspath = javaProject.getResolvedClasspath(true);\r", "+\t\tclasspath = javaProject.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68a988cae84c06bd53463fcdcd0d24b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "6cea394a74122bc3b2f5fee1a70c7921f0e635d8", "commitAfterChange": "c0d8ddbb4b72e166c7dc81eb807bc47fd1beaa74", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tsynchronized ITypeBinding resolveType(Type type)", "signatureAfterChange": " \tsynchronized ITypeBinding resolveType(Type type)", "diff": ["-\t\t\t\tfinal int numberOfTypeArgumentsNotNull = getTypeArguments(typeReference);", "+\t\t\t\tfinal int numberOfTypeArgumentsNotNull = getTypeCount(typeReference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b69071914b930498281f19f05e7d84f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic void test079()", "signatureAfterChange": " \tpublic void test079()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b69ba56340d5c1c6017527addfb03909", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testAccessRestriction3() throws Exception", "signatureAfterChange": " public void testAccessRestriction3() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.DISABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.DISABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6a335f26fb8026f031e6ca8433b7e73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/CompilationProcessorEnv.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic Map<String, AnnotationTypeDeclaration> getAnnotationTypes()", "signatureAfterChange": " \tpublic Map<String, AnnotationTypeDeclaration> getAnnotationTypes()", "diff": ["-\t\t\tif (decl.kind() == EclipseMirrorImpl.MirrorKind.TYPE_ANNOTATION){", "+\t\t\tif (decl.kind() == EclipseMirrorObject.MirrorKind.TYPE_ANNOTATION){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6b8c5803eb419a4b96651f81e54ba2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic byte[] getByteContents()", "signatureAfterChange": "  \tpublic byte[] getByteContents()", "diff": ["-\t\t\tif (SearchBasicEngine.VERBOSE || JobManager.VERBOSE) { // used during search and during indexing", "+\t\t\tif (BasicSearchEngine.VERBOSE || JobManager.VERBOSE) { // used during search and during indexing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6cd5e96b4ff3d3909a1326cda29efec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 413, "methodNumberAfterChange": 413, "signatureBeforeChange": " \tpublic void test394()", "signatureAfterChange": " \tpublic void test394()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6e6dd5552eca0b29191715bb281a715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "a37d99b9b3d877f46f13e7d7f9e0829405d7a851", "commitAfterChange": "562f566c1c2b8bfedaad7117a5b53ae2f781bec9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void acceptLocalType(TypeBinding typeBinding)", "signatureAfterChange": " public void acceptLocalType(TypeBinding typeBinding)", "diff": ["-\t\t\tres = new ParameterizedSourceType((JavaElement)res.getParent(), res.getElementName(), new String(typeBinding.computeUniqueKey()));", "+\t\t\tres = new ParameterizedSourceType((JavaElement)res.getParent(), res.getElementName(), new String(typeBinding.genericTypeSignature()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6e9226bef8058b2f9b4fed66968e223", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "89b15ba6d3aa28748d29d9d1d4b083699e7539bb", "commitAfterChange": "4a19373fcf0b223c67accf2e0e240651b8f7bc94", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject1() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject1() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_BUILDPATH)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6f4e70b01b0343c20ca7f65041b50da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\t&& (((NameReference) receiver).bits & BindingIds.TYPE) != 0))) {", "+\t\t\t\t\t\t&& (((NameReference) receiver).bits & Binding.TYPE) != 0))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6f6370f2af13a0bfddc5deabc004d0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeVariableImpl.java", "commitBeforeChange": "a209bfa947ecc1f9f7050d0d851a03f725813152", "commitAfterChange": "730caa252c0447802cd9dbe163cdf0f853f36524", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic TypeMirror getUpperBound()", "signatureAfterChange": " \t@Override \tpublic TypeMirror getUpperBound()", "diff": ["-\t\treturn this._env.getFactory().newDeclaredType((TypeVariableBinding) this._binding);", "+\t\treturn this._env.getFactory().newTypeMirror((TypeVariableBinding) this._binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b719173e5a2369a0bdb7ab26a29c7a3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void setUpSuite() throws Exception", "signatureAfterChange": " public void setUpSuite() throws Exception", "diff": ["-\tthis.root = project.getPackageFragmentRoot(this.getFile(\"/AttachSourceTests/attach.jar\"));", "+\tthis.pkgFragmentRoot = project.getPackageFragmentRoot(this.getFile(\"/AttachSourceTests/attach.jar\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b757786e7a29c67d8b5336c764010601", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " protected void classInstanceCreation(boolean isQualified)", "signatureAfterChange": " protected void classInstanceCreation(boolean isQualified)", "diff": ["-\t\t\tanonymousTypeDeclaration.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\t\tanonymousTypeDeclaration.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b785f3d4aeccd8d9d9fab30bd028589a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic boolean boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["-\t\tif (this.superclass.id != T_Object && !argumentType.isCompatibleWith(hasSubstitution ? substitution.substitute(this.superclass) : this.superclass)) {", "+\t\tif (this.superclass.id != T_JavaLangObject && !argumentType.isCompatibleWith(hasSubstitution ? substitution.substitute(this.superclass) : this.superclass)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b78f82e72f835c0a2c13f2adea346e5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "886d0f0c1c856616883aceae38186164d207f2a8", "commitAfterChange": "3bb52dd94a6650dc05eccd3db55f82a70954db23", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected Map getCompilerOptions()", "signatureAfterChange": "  \tprotected Map getCompilerOptions()", "diff": ["-\t\toptions.put(CompilerOptions.OPTION_DocCommentSupport, this.localDocCommentSupport);", "+\t\toptions.put(CompilerOptions.OPTION_DocCommentSupport, this.docCommentSupport);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b79bdf8bfface07a8beaf7f88e1897cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "35fd76e356146458b564c231f44085c52b0d1c47", "commitAfterChange": "0bd04abb8575a021cf8905c773ca1d2199f31c53", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void consumeCapture(final int position)", "signatureAfterChange": " \t \tpublic void consumeCapture(final int position)", "diff": ["-\t\tthis.compilerBinding = captureFinder.capture;", "+\t\tthis.typeBinding = captureFinder.capture;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7c6fc1dc7789e2325436b4058fad692", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "6d93b4bb6f9802710e765aaa00d3450185e4689f", "commitAfterChange": "b4c2385c81cd66eb677f15796da3c5ed6a182754", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic void consumeMethod(char[] selector, char[] signature)", "signatureAfterChange": "  \tpublic void consumeMethod(char[] selector, char[] signature)", "diff": ["-\t\tMethodBinding[] methods = ((ReferenceBinding) this.typeBinding).methods();", "+\t\tMethodBinding[] methods = ((ReferenceBinding) this.typeBinding).availableMethods(); // resilience"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7ca76e2f91edf00a26c7e033603de31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "9811ed4dbf7f78776dfe6771796cd4bc6107fadb", "commitAfterChange": "c1801006a670c89552be95081e904b8c98ea9a73", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "diff": ["-\t\t\t: bufManager.createBuffer(this);", "+\t\t\t: BufferManager.createBuffer(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7fc736f9dab37c32b8f678f286e4d72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "581bd48b0a44c3b24fd6cb58cd4506687e6bec7c", "commitAfterChange": "14eeb335b7a4f4b5dc293b65ac56b4b7f62e99e5", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " void checkMethods()", "signatureAfterChange": " void checkMethods()", "diff": ["-\t\t\t\t\t\tcheckForInheritedNameClash(inheritedMethod, otherInheritedMethod);", "+\t\t\t\t\t\tcheckInheritedMethods(inheritedMethod, otherInheritedMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7fe81aec33837e775b17a726128fdb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/ReadAnnotationTests2.java", "commitBeforeChange": "d6f02f07429dae5d9415421b0a1fb951b3ab04e0", "commitAfterChange": "bd118e51270d54e48ef1b8d76bf62d7f013d8051", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate ITypeBinding getTypeBinding(final String key, final IJavaProject javaProj)", "signatureAfterChange": " \t \tprivate ITypeBinding getTypeBinding(final String key, final IJavaProject javaProj)", "diff": ["-\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS4);", "+\t\tfinal ASTParser parser = ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b802cc0e27ce1471fb508ac8184f29e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "96a8824b1e471f1db4dd22f336aec5c7ff8c583e", "commitAfterChange": "45a4bf71a614f82f4a9506597605186918f4c34e", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic boolean visit(MarkerAnnotation annotation, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(MarkerAnnotation annotation, CompilationUnitScope scope)", "diff": ["-\tpublic boolean visit(MarkerAnnotation annotation, ClassScope scope) {", "-\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameAT);", "-\t\tif (this.preferences.insert_space_after_at_in_annotation) {", "-\t\t\tthis.scribe.space();", "-\t\t}", "-\t\tthis.scribe.printQualifiedReference(annotation.sourceEnd);", "-\t\treturn false;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b802e4364fb31f40883315bba75621ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/MultiLineTestCase.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic void testNoChange1()", "signatureAfterChange": "  \tpublic void testNoChange1()", "diff": ["-\t\tString content= \"/*\" + DELIMITER + POSTFIX;", "+\t\tString content= PREFIX + DELIMITER + POSTFIX;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80da98e65dbb2d9c92adfd42197dfcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefMethodErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b829178e132ffadee0b93ddbf261f0a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/mirrortest/MirrorTestAnnotationProcessor.java", "commitBeforeChange": "613a671e19efc2defced093244f8e19129754af6", "commitAfterChange": "d4b66f5ebef72ea4a16ce3ed100131443db3e609", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void process()", "signatureAfterChange": "  \tpublic void process()", "diff": ["-\t\t\tif (ERROR == null) {", "+\t\t\tif (ERROR == NO_ERRORS) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b83100d6196491a044f2fad1c9874dc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocFieldCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void test010() throws JavaModelException", "signatureAfterChange": " public void test010() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b849749d033f8022a601465a56d3ed99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public void test052() throws JavaModelException", "signatureAfterChange": "  public void test052() throws JavaModelException", "diff": ["-\t\t\"method[METHOD_REF]{method(), Ljavadoc.types.tags.OtherTypes;, ()V, method, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"method[METHOD_REF]{method(), Ljavadoc.types.tags.OtherTypes;, ()V, method, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b84db63f64b2cad8360b3cba70429b7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "e1051acac48de2e59e4c3d2d0f46898b4067bf9a", "commitAfterChange": "25dbd9e17c7b6920dccf1b458296dbbe00f382de", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \t\tpublic boolean match(PackageQualifiedType node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(NameQualifiedType node, Object other)", "diff": ["-\t\tpublic boolean match(PackageQualifiedType node, Object other) {", "+\t\tpublic boolean match(NameQualifiedType node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b855c104d1cba77f3314f0885b586518", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void markAsDefinitelyAssigned(FieldBinding field)", "signatureAfterChange": " \tpublic void markAsDefinitelyAssigned(FieldBinding field)", "diff": ["-\t\tif (this != DeadEnd)", "+\t\tif (this != DEAD_END)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85914a5be0e9c10e11148377e91c0b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "commitAfterChange": "92de34b6787dd9427ed3fc5c5ad56a704826bbea", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " \tpublic void endVisit(Block node)", "signatureAfterChange": " \tpublic void endVisit(WildcardType node)", "diff": ["+\tpublic void endVisit(WildcardType node) {", "+\t\tendVisitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8641897cc112ddc7d84dbe04fa9451b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/SourcePositionImpl.java", "commitBeforeChange": "03e205d7db02078dce9accf78d78c9d9a6ce6117", "commitAfterChange": "7ff51a474972e200f8003fdc2186f43ef4e82e14", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public int column()", "signatureAfterChange": "     public int column()", "diff": ["-    public int column(){ return 0; /* TODO: fix me */ }", "+    public int column(){ return _column; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b87440f53890957227e38838a849976e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "9a76fb8f9434ae4b71dc267e686b050759ff3536", "commitAfterChange": "e5d54da7cf77d6614acfbbcede23df9b9dad68f9", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public void resetTo(int begin, int end)", "signatureAfterChange": "  public void resetTo(int begin, int end)", "diff": ["-\ttodoCount = 0;", "+\ttaskCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b874e85959d9f503f6c0cb164b531278", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4b789cce073900ae2230dbe0f789324e98194a6d", "commitAfterChange": "9b9796dc13d13c6aea20f969bc47f5a4b5fbd490", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " protected void consumeArrayAccess(boolean unspecifiedReference)", "signatureAfterChange": " protected void consumeArrayAccess(boolean unspecifiedReference)", "diff": ["-\texp.sourceEnd = this.endPosition;", "+\texp.sourceEnd = this.endStatementPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b875c0095f3b88796391c098a8a63c28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ModelUpdater.java", "commitBeforeChange": "a3152e520997dc195da96816513c332f6b009e65", "commitAfterChange": "5d0ff4954163e2a98aed4605bf2f9af73c2330ed", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void processJavaDelta(IJavaElementDelta delta)", "signatureAfterChange": " \tpublic void processJavaDelta(IJavaElementDelta delta)", "diff": ["-", "-//\t\tif (DeltaProcessor.VERBOSE){", "-//\t\t\tSystem.out.println(\"UPDATING Model with Delta: [\"+Thread.currentThread()+\":\" + delta + \"]:\");", "-//\t\t}", "-", "-\t\t\t// update package fragment roots of projects that were affected", "+\t\t\t// reset project caches of projects that were affected", "-\t\t\t\tproject.updatePackageFragmentRoots();", "+\t\t\t\tproject.resetCaches();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8803016982d2a98f87873f7720f42ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "2418a9c1fa372e8f8253220ab580375e8d2f864b", "commitAfterChange": "bfeefe0bfa824914f542a3a07eccab1379d1c70b", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " public void testRawUsage() throws CoreException", "signatureAfterChange": " public void testRawUsage() throws CoreException", "diff": ["-\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, null, null);", "+\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, owner, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a189ab08dd53e3d915300760f019ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/DeclarationImpl.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic IResource getResource()", "signatureAfterChange": " \tpublic IFile getResource()", "diff": ["-\tpublic IResource getResource(){", "+\tpublic IFile getResource(){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a9275fe7729069459f9c14405cf163", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForEnumValues()", "signatureAfterChange": " public FieldBinding addSyntheticFieldForEnumValues()", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ba27c67039a89ebabdb4c1abaedbbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src-annotations/org/eclipse/jdt/apt/tests/annotations/ProcessorUtil.java", "commitBeforeChange": "65f5152e309a08bb91b2b35f96e93b2fa93bae4f", "commitAfterChange": "a16b4bac72f18b88e0ee337c3ee2d4cf28bfb8b4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate static String annoValueToString(AnnotationValue value)", "signatureAfterChange": " \t \tprivate static String annoValueToString(AnnotationValue value)", "diff": ["-\t\treturn value.toString();", "+\t\treturn v.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8bf29aa9e501db0dacbe24afcc95159", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexSummary.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic void addFirstFileInBlock(IndexedFile indexedFile, int blockNum)", "signatureAfterChange": "\r \tpublic void addFirstFileInBlock(IndexedFile indexedFile, int blockNum)", "diff": ["-\t\tfirstFilesInBlocks.addElement(entry);\r", "+\t\tfirstFilesInBlocks.add(entry);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8c3fd3b6e08e221c194acd49825e452", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tvoid checkAssignment(BlockScope scope, TypeBinding lhsType, TypeBinding rhsType)", "signatureAfterChange": "  \tvoid checkAssignment(BlockScope scope, TypeBinding lhsType, TypeBinding rhsType)", "diff": ["-\t\tif (leftField != null &&  rhsType != NullBinding && lhsType.isWildcard() && ((WildcardBinding)lhsType).kind != Wildcard.SUPER) {", "+\t\tif (leftField != null &&  rhsType != NullBinding && lhsType.isWildcard() && ((WildcardBinding)lhsType).boundKind != Wildcard.SUPER) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8d63c326a63edc8512ff89eb6ac3d43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 240, "methodNumberAfterChange": 240, "signatureBeforeChange": " public void testBug109695() throws CoreException", "signatureAfterChange": " public void testBug109695() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"IDE3\", SearchPattern.R_CAMEL_CASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"IDE3\", SearchPattern.R_CAMELCASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8f83e8795120fb426516cf5b9091daf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public void markAsComparedEqualToNonNull(VariableBinding local)", "signatureAfterChange": "  public void markAsComparedEqualToNonNull(LocalVariableBinding local)", "diff": ["-public void markAsComparedEqualToNonNull(VariableBinding local) {", "+public void markAsComparedEqualToNonNull(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9031ac9d7cb7ad8470e75ec81fb1a20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2480ec2a725b4a2dc78d69d653464b56715fbac8", "commitAfterChange": "046b7e91db887d0087d68280c71a1c85744c622c", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tprotected void forceClasspathReload(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprotected void forceClasspathReload(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\toutputLocation = SetClasspathOperation.ReuseOutputLocation;", "+\t\t\t\toutputLocation = SetClasspathOperation.REUSE_PATH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b939eb40cef3eaccbd5ca9d6f407ddfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "commitAfterChange": "c9e042ca313baf5eded9aef49e3870dc5764fbfc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public static void setFocus(InternalSearchPattern pattern, IJavaElement focus)", "signatureAfterChange": "  public static void setFocus(SearchPattern pattern, IJavaElement focus)", "diff": ["-public static void setFocus(InternalSearchPattern pattern, IJavaElement focus) {", "+public static void setFocus(SearchPattern pattern, IJavaElement focus) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b95e2892ad22804d6cc66920e3db8eb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tvoid endVisit(Break breakStatement, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(BreakStatement breakStatement, BlockScope scope);", "diff": ["-\tvoid endVisit(Break breakStatement, BlockScope scope);", "+\tvoid endVisit(BreakStatement breakStatement, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b95ed7d5d89f83d551db83fcb975e223", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "a593a219c04ed47df708f649853f2324ae85aa02", "commitAfterChange": "2314c16241660b35014c2f51be7d9e9dcaef9a58", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 44, "signatureBeforeChange": " \t\t \t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword)", "signatureAfterChange": " \t\t \t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword)", "diff": ["-\t\t\t\t\t\tdoVisit(node);", "+\t\t\t\t\t\tvoidVisit(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b97c84afd4575eec38c5a4e5a048f5f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/SingleLineTestCase.java", "commitBeforeChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "commitAfterChange": "44afc4c52d7f4191b4ccf60a1e8a3e535e29bc3c", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \t \tpublic void testNoFormat1()", "signatureAfterChange": " \t \tpublic void testNoFormat1()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_FORMAT, DefaultCodeFormatterConstants.FALSE);", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_FORMAT_LINE_COMMENT, DefaultCodeFormatterConstants.FALSE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b97e1ab4b4fae4369075fd644e70e8c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 282, "methodNumberAfterChange": 290, "signatureBeforeChange": "  public void testBug110060_ConstructorPattern02() throws CoreException", "signatureAfterChange": " public void testBug110060_ConstructorPattern02() throws CoreException", "diff": ["-", "-\tsearch(\"AA\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\tsearch(\"AA\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b981f2e6107e73682933dadec17c7360", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "6ca82f1a54d472af29c424861c5280a8ebc7b028", "commitAfterChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void match(AstNode node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(AstNode node, MatchingNodeSet nodeSet)", "diff": ["-\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "+\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b991f39fe4a4e891d6190d46c5368d45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddFolderToIndex.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\tIIndex index = manager.getIndex(this.containerPath, true, /*reuse index file*/ true /*create if none*/);", "+\t\tIndex index = manager.getIndex(this.containerPath, true, /*reuse index file*/ true /*create if none*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b99a2228b122779a6eda812cfd149e0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public byte[] getBytes() throws JavaModelException", "signatureAfterChange": "  public byte[] getBytes() throws JavaModelException", "diff": ["-\t\tIFile file = (IFile) getResource();", "+\t\tIFile file = (IFile) resource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ab8b6fd095b146379ebc1e23cf3b3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "68510f354df915bfae6d7cab257ea569b0a04f02", "commitAfterChange": "94922404a8030ddb0c95da3eb05c6a622d226ac7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  protected char[] writeClassFile(ClassFile classFile, IContainer outputFolder, boolean isSecondaryType) throws CoreException", "signatureAfterChange": "  protected char[] writeClassFile(ClassFile classFile, IContainer outputFolder, boolean isSecondaryType) throws CoreException", "diff": ["-\t\tcontainer = getOutputFolder(filePath.removeLastSegments(1), outputFolder);", "+\t\tcontainer = createFolder(filePath.removeLastSegments(1), outputFolder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9b986e84f6c990941634598f08db6d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "20c976894314972bc7f9517defa572358c61bdfa", "commitAfterChange": "cd6774c18c492da2d8ede12c040b35d33941174f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected int numberOfCycleMarkers(IJavaProject javaProject) throws CoreException", "signatureAfterChange": " protected int numberOfCycleMarkers(IJavaProject javaProject) throws CoreException", "diff": ["-\tIMarker[] markers = javaProject.getProject().findMarkers(IJavaModelMarker.BUILDPATH_PROBLEM_MARKER, false, IResource.DEPTH_ONE);", "+\tIMarker[] markers = javaProject.getProject().findMarkers(IJavaModelMarker.BUILDPATH_PROBLEM_MARKER, false, IResource.DEPTH_ZERO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9eed2ca5402eb0ecf9674494d93a8a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void addSource(IFile resource, IPath containerPath, SourceElementParser parser)", "signatureAfterChange": " public void addSource(IFile resource, IPath containerPath, SourceElementParser parser)", "diff": ["-\tString indexLocation = computeIndexLocation(containerPath);", "+\tIPath indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9f2f451a75d8178253dbcfc5837ae94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "54f3e7caaa3150d871f7d11c1e610492c84f6dde", "commitAfterChange": "f700051affab74804180d3a8bb296f6cabd751a0", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tboolean incorporate(InferenceContext18 context) throws InferenceFailureException", "signatureAfterChange": " \tboolean incorporate(InferenceContext18 context) throws InferenceFailureException", "diff": ["-\t\t\t\t\tConstraintFormula newConstraint = null;", "+\t\t\t\t\tConstraintTypeFormula newConstraint = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba0bbcdf76d1951d2a0cb6f6162a4709", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/AptConfig.java", "commitBeforeChange": "1604c4cb884aee860a1cc5ef654a628a5e36afd0", "commitAfterChange": "64db8d36b73417ee83ea1a6d91baaefe7d3848b0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public static synchronized String addProcessorOption(IJavaProject jproj, String key, String val)", "signatureAfterChange": "     public static synchronized String addProcessorOption(IJavaProject jproj, String key, String val)", "diff": ["-    \tMap<String, String> options = getProcessorOptions(jproj);", "+    \tMap<String, String> options = getRawProcessorOptions(jproj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba123d69e5a03bbae6a1e84d8e81233e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/WorkQueue.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public boolean isWaiting(String element)", "signatureAfterChange": "  public boolean isWaiting(SourceFile element)", "diff": ["-public boolean isWaiting(String element) {", "+public boolean isWaiting(SourceFile element) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1bc9922d682266159150226388dac9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  public void test053() throws JavaModelException", "signatureAfterChange": "  public void test053() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba45c0c3eb87f61f01c0ad65405435cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\t\tASTParser parser= ASTParser.newParser(AST.JLS3);", "+\t\t\t\tASTParser parser= ASTParser.newParser(AST.JLS4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba4d48c27f16d931891a292edd9bf98c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).original;", "+\t\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba6512df167b267b913589711a13aacb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "9ef16bbd886b16521464fbe002994d5fbaed976f", "commitAfterChange": "b27f301e84866741a3cab27f0e35cc886c5fd2e8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tprivate AnnotationProcessorFactory loadFactoryFromPlugin( String factoryName )", "signatureAfterChange": " \t \tprivate static AnnotationProcessorFactory loadFactoryFromPlugin( String factoryName )", "diff": ["-\tprivate AnnotationProcessorFactory loadFactoryFromPlugin( String factoryName )", "+\tprivate static AnnotationProcessorFactory loadFactoryFromPlugin( String factoryName )", "-\t\tAnnotationProcessorFactory apf = _pluginFactoryMap.get( factoryName );", "+\t\tAnnotationProcessorFactory apf = PLUGIN_FACTORY_MAP.get( factoryName );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba696b9d91293819cad936a6cdc8566b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic synchronized boolean isParentFile(IFile f)", "signatureAfterChange": " \tpublic synchronized boolean isParentFile(IFile f)", "diff": ["-\t\treturn _parentToGenFiles.containsKey(f);", "+\t\treturn _buildDeps.containsKey(f);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba6e009e9827c46df0154d1776d388c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CaseLabel.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " void branch()", "signatureAfterChange": " void branch()", "diff": ["-\t\tcodeStream.writeSignedWord(position - codeStream.position + 1);", "+\t\tcodeStream.writeWidePosition(position - codeStream.position + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba77345c5828a29b91c08d8e269faf13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "diff": ["-\t\t\t\tif (otherInheritedMethod.declaringClass.findSuperTypeWithSameErasure(inheritedMethod.declaringClass) != null)", "+\t\t\t\tif (otherInheritedMethod.declaringClass.findSuperTypeOriginatingFrom(inheritedMethod.declaringClass) != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba856cc0a67b623c0b9d295c1860a849", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "5d31adee26458d819310cf59840fc38988624e1e", "commitAfterChange": "3ec1a09f885b6797954dcfa138f3201aa9202c14", "methodNumberBeforeChange": 146, "methodNumberAfterChange": 147, "signatureBeforeChange": " \tprotected void removeLibraryEntry(IJavaProject project, Path path) throws JavaModelException", "signatureAfterChange": " \tprotected void removeLibraryEntry(IJavaProject project, IPath path) throws JavaModelException", "diff": ["-\tprotected void removeLibraryEntry(IJavaProject project, Path path) throws JavaModelException {", "+\tprotected void removeLibraryEntry(IJavaProject project, IPath path) throws JavaModelException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba85f2955b9a4e6b6cf2a8f24fe9f105", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRootInfo.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int getRootKind()", "signatureAfterChange": " public int getRootKind()", "diff": ["-\treturn this.fRootKind;", "+\treturn this.rootKind;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba8a58197f616e45d0a402b8a5698677", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic boolean isReadOnly()", "signatureAfterChange": " \tpublic boolean isReadOnly()", "diff": ["-\t\treturn !this.canChangeResource;", "+\t\treturn !this.canChangeResources;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baab705c335c5ce3f2844e41c2fb8bcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "54adf8874a2139df84e504710c736c699ecdc8bd", "commitAfterChange": "3a7dd4beaab81d40e6fc4ff6cc557568e132425e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-        \tif (isStatic && (this.haveReceiver || this.receiverType.isParameterizedType())) {", "+        \tif (isStatic && (this.haveReceiver || this.receiverType.isParameterizedTypeWithActualArguments())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baac7d751d0e47a38d257886ef5afa3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest.java", "commitBeforeChange": "69be5036bec0741cc4d4f5a1817c4386c68c7f87", "commitAfterChange": "02ec7693122bc81c642df1242d757ff1ae2691e1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static Test suiteForJavadocSupport(String level, Class testClass, String support)", "signatureAfterChange": "  \tpublic static Test suiteForJavadocSupport(String level, Class testClass, String support)", "diff": ["-\t\tTest suite = suite(testClass, \"Doc \"+support);", "+\t\tTest suite = buildTestSuite(testClass, \"Doc \"+support);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "babef16c3ac057e7ea7dcbc28ce00fc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "e5bce80011e3833bbea45afb8cd4fb116b193fc5", "commitAfterChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic ITypeBinding getDeclaringClass()", "signatureAfterChange": " \tpublic ITypeBinding getDeclaringClass()", "diff": ["-\t\t\t} catch (AbortCompilation e) {", "-\t\t\t\t// in case the enclosing type cannot be resolvable due to missing jars on the classpath", "-\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t\t} catch (RuntimeException e) {", "+\t\t\t\t/* in case a method cannot be resolvable due to missing jars on the classpath", "+\t\t\t\t * see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=63550", "+\t\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=64299", "+\t\t\t\t */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb0b5543f104c5590313445fe2d19722", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathPreferencePage.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprotected boolean hasProjectSpecificOptions(IProject project)", "signatureAfterChange": "  \tprotected boolean hasProjectSpecificOptions(IProject project)", "diff": ["-\t\treturn (project == null) ? false : FactoryPath.hasProjectSpecificFactoryPath(JavaCore.create(project));", "+\t\treturn (project == null) ? false : AptConfig.hasProjectSpecificFactoryPath(JavaCore.create(project));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb10562846b93e8f850d29bc8b63e8b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintTypeFormula.java", "commitBeforeChange": "c945180bdb2eaecff5db76edf8cbad26f61754a5", "commitAfterChange": "1e302d0e8b80cb29d9d8ffac754bc44f21cd1c12", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Object reduce(InferenceContext18 inferenceContext)", "signatureAfterChange": " \tpublic Object reduce(InferenceContext18 inferenceContext)", "diff": ["-\t\t\t\treturn new ConstraintTypeFormula(this.left, tPrime, COMPATIBLE, this.isSoft);", "+\t\t\t\treturn new ConstraintTypeFormula(this.left, tPrime, SAME, this.isSoft);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1482304a87c2af0b492571e576c958", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["-public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner) {", "+public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1ad4fce99b1e33f2b1c7859bcda09f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "f63095af3c7deaeee47a62f089307467f872f35e", "commitAfterChange": "6e8431ed2d3ced2183b0880b86a760ea14397f82", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (argumentType != parameterType && argumentType.isRawType() && parameterType.isParameterizedType()) {", "+\t\t\tif (argumentType != parameterType && argumentType.isRawType() && parameterType.isBoundParameterizedType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb1fc1f42f67ee17e49b380a2d3ba9e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST8Test.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic void test0128() throws JavaModelException", "signatureAfterChange": " \tpublic void test0128() throws JavaModelException", "diff": ["-\t\tvariableDeclarationFragment.extraDimensions().add(this.ast.newExtraDimension());", "+\t\tvariableDeclarationFragment.extraDimensions().add(this.ast.newDimension());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb23470cee74c2eda28afa3c55c44126", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalAnnotationTracker.java", "commitBeforeChange": "0747d5e7c6159c917fde8175fc9c67a8bade55fc", "commitAfterChange": "07efa537488d0df9da9dc6880afc536aaccc6b60", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate void traverseForClassFiles(Map<IPath, ClassFile> classFiles, IResourceDelta matchedDelta, int baseDepth)", "signatureAfterChange": " \tprivate void traverseForClassFiles(Map<IPath, ClassFile> classFiles, IResourceDelta matchedDelta, int baseDepth)", "diff": ["-\t\t\tClassFile classFile = classFiles.get(deltaRelativePath);", "+\t\t\tClassFile classFile = classFiles.remove(deltaRelativePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb3981f4cb2a1441796066d936bf60f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "939485ceac933a28ddb093415bf647ec539d2bf9", "commitAfterChange": "a6a76f21a7628f01aed20fa2869a4af025a029d9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate String resultForMissingTags(int visibility)", "signatureAfterChange": "  \tprivate String resultForMissingTags(int visibility)", "diff": ["-\t\t// TODO (frederic) see witrh jdt-ui whether we use ignore instead of report", "-\t\t//if (CompilerOptions.ENABLED.equals(reportMissingJavadocTagsOverriding)) {", "-\t\tif (CompilerOptions.DISABLED.equals(reportMissingJavadocTagsOverriding)) {", "+\t\tif (CompilerOptions.ENABLED.equals(reportMissingJavadocTagsOverriding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb3db265c7380a891b6043f915476ac9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceRefElementInfo.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public int getDeclarationSourceEnd()", "signatureAfterChange": " public int getDeclarationSourceEnd()", "diff": ["-\treturn fSourceRangeEnd;", "+\treturn sourceRangeEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb4f4bb40755588ff15d8a0459c5fd68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void testInvalidTagsClassErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsClassErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb4f5949625a681450333ad5845dd1f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "d7e7bb059880a6c87ea3290708d2d0a9f9e7ebe8", "commitAfterChange": "a415220ad0bdc743d286b40ccc481ededfe8132e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tConstant conditionConstant = condition.conditionalConstant();", "+\t\tConstant conditionConstant = condition.optimizedBooleanConstant();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb68a4843789b3a6ae7ab53b5439e7fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "6f02ff89bd237cb51746120df758993eba407273", "commitAfterChange": "66f427e04d93bd85a2e18dda798afd4b18637e27", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testCustomizedBuffer2() throws JavaModelException", "signatureAfterChange": " public void testCustomizedBuffer2() throws JavaModelException", "diff": ["-\t\tassertTrue(\"Unexpected buffer\", openableCopy.getBuffer() instanceof Buffer);\t\t", "+\t\tassertTrue(\"Unexpected buffer\", openableCopy.getBuffer() instanceof TestBuffer);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb6e10f98cc4fdc67b649607e252bdb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/AbortCompilation.java", "commitBeforeChange": "6a22aca625969383c16110c2f231ad75730f0d23", "commitAfterChange": "52ec5e5910757b6546015a0dcaa60e633b7917f4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void updateContext(ASTNode astNode, CompilationResult unitResult)", "signatureAfterChange": "  \tpublic void updateContext(ASTNode astNode, CompilationResult unitResult)", "diff": ["-\t\tthis.problem.setSourceLineNumber(ProblemHandler.searchLineNumber(unitResult.getLineSeparatorPositions(), astNode.sourceStart()));", "+\t\tthis.problem.setSourceLineNumber(Util.searchLineNumber(unitResult.getLineSeparatorPositions(), astNode.sourceStart()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb75a53303dfd4818d6704398638009c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 192, "methodNumberAfterChange": 192, "signatureBeforeChange": " \tpublic void test171()", "signatureAfterChange": " \tpublic void test171()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb95b91bfb03a58868f047dad6fc3483", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " public void ifnonnull(Label lbl)", "signatureAfterChange": " public void ifnonnull(BranchLabel lbl)", "diff": ["-public void ifnonnull(Label lbl) {", "+public void ifnonnull(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bba6736b9114563d04841eda82b0f805", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public boolean isDefinitelyNull(VariableBinding local)", "signatureAfterChange": "  public boolean isDefinitelyNull(LocalVariableBinding local)", "diff": ["-public boolean isDefinitelyNull(VariableBinding local) {", "+public boolean isDefinitelyNull(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bba776120dbf51a20be61017792476e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "signatureAfterChange": " \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "diff": ["-\t\t\tif (typeDeclaration.getKind() == IGenericType.ENUM) {", "+\t\t\tif (typeDeclaration.kind() == IGenericType.ENUM) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbb256b4ff6337127e7e4959238cd7df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void testParameterizedTypeSingleArgument01() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeSingleArgument01() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedType(unit, \"Generic<Exception>\"); //$NON-NLS-1$", "+\t\tResolvedSourceType type = selectParameterizedType(unit, \"Generic<Exception>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbcf20ab7f7c9a466e7c2adcc69d57ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/SimpleDOMBuilder.java", "commitBeforeChange": "6667f48fb414bf631c6788d57b69b16addac46f0", "commitAfterChange": "c62484c76d34e1754fa4fc8cfcdf45889f18f642", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void acceptPackage(int declarationStart, int declarationEnd, char[] name)", "signatureAfterChange": " public void acceptPackage(int declarationStart, int declarationEnd, char[] name)", "diff": ["-\tfNode= new DOMPackage(fDocument, sourceRange, CharArrayOps.charToString(name));", "+\tfNode= new DOMPackage(fDocument, sourceRange, CharOperation.charToString(name));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbea91020cf2d37a0bad4746351b6210", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void testDeltaCommitPrimaryWorkingCopy1() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaCommitPrimaryWorkingCopy1() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbfe1634052c7aa21388f977d7cde2d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " final public void goto_w(Label lbl)", "signatureAfterChange": " final public void goto_w(BranchLabel lbl)", "diff": ["-final public void goto_w(Label lbl) {", "+final public void goto_w(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc0ad40af5f14b043060302a9d74b837", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingResolver.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tIResolvedAnnotation resolveAnnotation(Annotation annotation)", "signatureAfterChange": " \tIAnnotationBinding resolveAnnotation(Annotation annotation)", "diff": ["-\tIResolvedAnnotation resolveAnnotation(Annotation annotation) {", "+\tIAnnotationBinding resolveAnnotation(Annotation annotation) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc0de39cbceea44e27bafab91d4844d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void testGetCategories08() throws CoreException", "signatureAfterChange": " public void testGetCategories08() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc20d054eccaf304806e504602c1e94a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cff20a526b50465a2f348a1a5575e634a801a7d8", "commitAfterChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "      \tprivate void formatLocalDeclaration(LocalDeclaration localDeclaration, BlockScope scope, boolean insertSpaceBeforeComma, boolean insertSpaceAfterComma)", "signatureAfterChange": "      \tprivate void formatLocalDeclaration(LocalDeclaration localDeclaration, BlockScope scope, boolean insertSpaceBeforeComma, boolean insertSpaceAfterComma)", "diff": ["-\t\tint extraDimensions = getExtraDimension();", "+\t\tint extraDimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4270e198f50848db3c834d468293f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  private TypeBinding annotateType(TypeBinding binding, TypeAnnotationWalker walker, char[][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding annotateType(TypeBinding binding, ITypeAnnotationWalker walker, char[][][] missingTypeNames)", "diff": ["-private TypeBinding annotateType(TypeBinding binding, TypeAnnotationWalker walker, char[][][] missingTypeNames) {", "+private TypeBinding annotateType(TypeBinding binding, ITypeAnnotationWalker walker, char[][][] missingTypeNames) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc431ad435007c8a6aedc0b52fc610a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": "  public void test143() throws JavaModelException", "signatureAfterChange": "  public void test143() throws JavaModelException", "diff": ["-\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc532698d9abdfc65dc340fee42d7940", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0ce30fa1efeccdb8f098a9dcf15c46f705a57e6f", "commitAfterChange": "59a26b3b3e45e8769323a82cc5fccc64fe9d5f4a", "methodNumberBeforeChange": 1189, "methodNumberAfterChange": 1189, "signatureBeforeChange": " public void test1161()", "signatureAfterChange": " public void test1161()", "diff": ["-\tthis.runNegativeTest(", "+\tthis.runConformTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc5b3fc4dab34e4850314dedc5e8aaa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " public void if_icmpne(Label lbl)", "signatureAfterChange": " public void if_icmpne(BranchLabel lbl)", "diff": ["-public void if_icmpne(Label lbl) {", "+public void if_icmpne(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc8217e6add74de1fc96a2a27487c04b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "c092a9cf54c9827065c8c3b53567d1043283071d", "commitAfterChange": "8d1ce5aae02b25e6e27ee54cd5af86dda0f13315", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t \tprivate ImportRewrite(ICompilationUnit cu, CompilationUnit astRoot, List existingImports)", "signatureAfterChange": " \t\t \tprivate ImportRewrite(ICompilationUnit cu, CompilationUnit astRoot, List existingImports)", "diff": ["-\t\tthis.astRoot= null; // might be null", "+\t\tthis.astRoot= astRoot; // might be null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc96448f5205358d49812aed456673e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/RemoveFromIndex.java", "commitBeforeChange": "ac6a9f56760bba7aec9ca8548c00a789a95fdc11", "commitAfterChange": "f238d59edecc5d87c39084d60c9040567d09deaf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic RemoveFromIndex(\r \t\tString resourceName,\r \t\tIResource indexedContainer,\r \t\tIndexManager manager)", "signatureAfterChange": "\r \tpublic RemoveFromIndex(\r \t\tString resourceName,\r \t\tIPath indexedContainer,\r \t\tIndexManager manager)", "diff": ["-\t\tIResource indexedContainer,\r", "+\t\tIPath indexedContainer,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc98363e4a2893c88362b5185beb2b70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ICompilationUnit.java", "commitBeforeChange": "a601b6b1bd0055831cf914eda4a394af5ff40421", "commitAfterChange": "aae3a2ae7793bc4970c4033658428e24ab5d11f5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " CompilationUnitOwner getOwner();", "signatureAfterChange": " WorkingCopyOwner getOwner();", "diff": ["-CompilationUnitOwner getOwner();", "+WorkingCopyOwner getOwner();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca254d929f64af44aafcb6196929c85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileComparatorTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\t\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bca5e5397adb1bf384c3b964b1104664", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefMethodErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefMethodErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesMethodJavadocComments, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(METHODS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcb687e16274a8678e7bd4e6286b089d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "d6c28471243bc992d18db0170807eeb69edcbea6", "commitAfterChange": "17404692b6e0a539da1d06059648c128f8d0f7d8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void addFieldInfo(FieldBinding fieldBinding)", "signatureAfterChange": " \tpublic void addFieldInfo(FieldBinding fieldBinding)", "diff": ["-\t\t\tresizePoolContents(30);", "+\t\t\tresizeContents(30);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcc07b3f3b87c6f02930500bdae320cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void duplicateCase(Case statement, Constant constant)", "signatureAfterChange": " public void duplicateCase(CaseStatement statement, Constant constant)", "diff": ["-public void duplicateCase(Case statement, Constant constant) {", "+public void duplicateCase(CaseStatement statement, Constant constant) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcc9301355440111ded8fb9ae1cbd3ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/RunConverterTests.java", "commitBeforeChange": "a520fbebd0fffdd9ae00eeb9ec609a81241ec8bb", "commitAfterChange": "afe8e7c03c9e057a9ab6bf025b43a423a4494448", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tTestCase.ONLY_SUFFIX = null;", "+\tTestCase.RUN_ONLY_ID = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcd60982c0d8fccc8844ded7ae87e7a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/TypeConverter.java", "commitBeforeChange": "bb0550096faab0e4ba4877ad06be98ecc4f2a72a", "commitAfterChange": "ff69704e7873da2fd087fbac19e278c5d6c62ca3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected TypeReference createTypeReference( \t\tchar[] typeName, \t\tint start, \t\tint end, \t\tboolean includeGenericsAnyway)", "signatureAfterChange": " \tprotected TypeReference createTypeReference( \t\tchar[] typeName, \t\tint start, \t\tint end, \t\tboolean includeGenericsAnyway)", "diff": ["-\t\treturn decodeType(typeName, length, start, end, true);", "+\t\treturn decodeType2(typeName, length, start, end, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bce78b9a4b594118ed841ae38bc0d4e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testCreateIncludedPackage() throws CoreException", "signatureAfterChange": " public void testCreateIncludedPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcee9d65d990bed9de1fab2cc5d99876", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "48be89a1a136f2bf5daa529f3df442bcca1d88d3", "commitAfterChange": "59e26d7d44dd6102df4b7a4747425328bf55da24", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\tthis.indexVariable = new LocalVariableBinding(SecretIndexVariableName, this.scope.getJavaUtilIterator(), ClassFileConstants.AccDefault, false);", "+\t\t\t\t\tthis.indexVariable = new LocalVariableBinding(SecretIteratorVariableName, this.scope.getJavaUtilIterator(), ClassFileConstants.AccDefault, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcf7b3bb60d680d699d8a370591c98c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopySearchTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testRemoveType() throws CoreException", "signatureAfterChange": " public void testRemoveType() throws CoreException", "diff": ["-\tnew SearchEngine(new IWorkingCopy[] {this.workingCopy}).search(", "+\tnew SearchEngine(new ICompilationUnit[] {this.workingCopy}).search("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd2008731662b79e7fb4a594c4437bef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/RemoveFolderFromIndex.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\tIIndex index = manager.getIndex(this.containerPath, true, /*reuse index file*/ false /*create if none*/);", "+\t\tIndex index = manager.getIndex(this.containerPath, true, /*reuse index file*/ false /*create if none*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd397ef298fe20cfd3d1bb8714449dca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/ide/org/eclipse/jdt/internal/compiler/apt/ide/dispatch/IdeAnnotationProcessorManager.java", "commitBeforeChange": "fa6890a86857b15557d9a3a779671e0cc8210b0e", "commitAfterChange": "2f06aa3084f6ea734f231022ff8ccdff064f335a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t@Override \tpublic void reportProcessorException(Processor p, Exception e)", "signatureAfterChange": "  \t@Override \tpublic void reportProcessorException(Processor p, Exception e)", "diff": ["-\t\tApt6Plugin.log(e, \"Exception thrown by Java annotation processor \" + p); //$NON-NLS-1$", "+\t\tUtil.log(e, \"Exception thrown by Java annotation processor \" + p); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd6c9219be39c4fe2679fbccd864412e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0)\treturn;", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0)\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd725d8a5bf93508b4d1fd7693f4e96e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " public void testTypeRefGeneric01_Parameterized() throws CoreException", "signatureAfterChange": " public void testTypeRefGeneric01_Parameterized() throws CoreException", "diff": ["-\tsearch(setUpTypeRefGeneric01(), PARAMETERIZED_TYPE_REFERENCE);", "+\tsearch(setUpTypeRefGeneric01(), TYPE_ARGUMENT_TYPE_REFERENCE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd78f6e276d8bce7781e3369081c8d48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteResourceElementsOperation.java", "commitBeforeChange": "9f89ba73b700aee0d67ac8a5b9556d443c556591", "commitAfterChange": "26722284e82b5d30b5fba9c9525933e4ed72358b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " private void deletePackageFragment(IPackageFragment frag) \tthrows JavaModelException", "signatureAfterChange": " private void deletePackageFragment(IPackageFragment frag) \tthrows JavaModelException", "diff": ["-\t\t\t\tresources[i] = childrenOfInterest[i].getResource();", "+\t\t\t\tresources[i] = childrenOfInterest[i].getCorrespondingResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd79be5c96418430db338bc00769b3e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " protected void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\tif ((method.bits & ASTNode.HasLocalTypeMASK) != 0) {", "+\tif ((method.bits & ASTNode.HasLocalType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd86093b0f00a69a7c45945bf11d1b3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 448, "methodNumberAfterChange": 448, "signatureBeforeChange": " \tpublic void test429()", "signatureAfterChange": " \tpublic void test429()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd870d3921344a47b7ba0632a351ed09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic boolean visit(SuperMethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(SuperMethodInvocation node)", "diff": ["-\t\tif (node.getAST().apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd92a8223165c8f756562f35711cddd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "7a73f29da5ea73cce41fc54b0fc3ad302149f476", "commitAfterChange": "01023454337af8ada2f5699e5de8fcd7a8d40840", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tprivate void visitTypeAnnotations(Type node)", "signatureAfterChange": " \tprivate void visitTypeAnnotations(AnnotatableType node)", "diff": ["-\tprivate void visitTypeAnnotations(Type node) {", "+\tprivate void visitTypeAnnotations(AnnotatableType node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bda965952a6e44c20f874d0b2731eb34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "ff4953718f4a4fa66bb0922d1821b22a0e2fdd84", "commitAfterChange": "b48f366c7cd622655a48ea734bdcd0016d20ec8b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public int match(TypeReference node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(TypeParameter node, MatchingNodeSet nodeSet)", "diff": ["+public int match(TypeParameter node, MatchingNodeSet nodeSet) {", "+\t// each subtype should override if needed", "+\treturn IMPOSSIBLE_MATCH;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdb45244f9a9b5e2ad562cc02f1f0dba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "87ba3addb06e0bd690b97dd2e305fffcc5db74fe", "commitAfterChange": "8046249ea5657bdf56e1ad6e70f968e6217d4dd0", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private String computeIndexName(IPath path)", "signatureAfterChange": "\r private String computeIndexName(IPath path)", "diff": ["-\tif (VERBOSE) JobManager.log(\"-> index name for \" + pathString + \" is \" + fileName); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\tif (VERBOSE) JobManager.verbose(\"-> index name for \" + pathString + \" is \" + fileName); //$NON-NLS-1$ //$NON-NLS-2$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdb5ae8ee8886d9e51655cf0d33c6699", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " \tpublic void test095()", "signatureAfterChange": " \tpublic void test095()", "diff": ["-\t\tpreferences.block_brace_position = DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED;", "+\t\tpreferences.brace_position_for_block = DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdb8273695b77c87857bd92754624ca3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NodeSearcher.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic boolean visit( \t\tMemberTypeDeclaration memberTypeDeclaration, \t\tClassScope scope)", "signatureAfterChange": "  \tpublic boolean visit( \t\tTypeDeclaration memberTypeDeclaration, \t\tClassScope scope)", "diff": ["-\t\tMemberTypeDeclaration memberTypeDeclaration,", "+\t\tTypeDeclaration memberTypeDeclaration,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdc42a744bfd99b9b408c12e107cb1ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic CodeFormatterVisitor()", "signatureAfterChange": "  \tpublic CodeFormatterVisitor()", "diff": ["-\t\tthis(FormattingPreferences.getSunSetttings(), JavaCore.getDefaultOptions(), 0, -1);", "+\t\tthis(DefaultCodeFormatterOptions.getSunSetttings(), JavaCore.getDefaultOptions(), 0, -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdcc53cd6f166d3d070799b1a70662dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d48c25cb976d99917f58b366198a77010dd2d678", "commitAfterChange": "e0794fcfb44a17efaa6223129a8b32f7f36f63a6", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \t \tpublic JavaModelManager.PerProjectInfo getPerProjectInfo() throws JavaModelException", "signatureAfterChange": " \t \tpublic JavaModelManager.PerProjectInfo getPerProjectInfo() throws JavaModelException", "diff": ["-\t\treturn JavaModelManager.getJavaModelManager().getPerProjectInfoCheckExistence(this.fProject);", "+\t\treturn JavaModelManager.getJavaModelManager().getPerProjectInfoCheckExistence(this.project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bddc0bad822c54489254c57ab201c1d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/AndLocator.java", "commitBeforeChange": "425b0c5314087893896fa849d0ee8761b973ef60", "commitAfterChange": "340d840f950775980b46fcf21979bc21f0e19016", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public int match(TypeParameter node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(ReferenceExpression node, MatchingNodeSet nodeSet)", "diff": ["+public int match(ReferenceExpression node, MatchingNodeSet nodeSet) {", "+\tint level = IMPOSSIBLE_MATCH;", "+\tfor (int i = 0, length = this.patternLocators.length; i < length; i++) {", "+\t\tint newLevel = this.patternLocators[i].match(node, nodeSet);", "+\t\tif (newLevel > level) {", "+\t\t\tif (newLevel == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t\t\tlevel = newLevel;", "+\t\t}", "+\t}", "+\treturn level;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bddda733ccf0a82e40166c2c35fb7df4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void saveIndex(IIndex index) throws IOException", "signatureAfterChange": " public void saveIndex(Index index) throws IOException", "diff": ["-public void saveIndex(IIndex index) throws IOException {", "+public void saveIndex(Index index) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bde6fc0d2db5800a0f82ee76b147411c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "22325a67aa91a1b7b3e517137edba8a4cce052e3", "commitAfterChange": "8829074f9d3ac6a675ff4d6ddfc9960d99c756d6", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void addSpecialMethods()", "signatureAfterChange": " \tpublic void addSpecialMethods()", "diff": ["-\t\t\t\tswitch (syntheticMethod.kind) {", "+\t\t\t\tswitch (syntheticMethod.purpose) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdedd6f514a7c32dc05b831f300af499", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "580d4cb785b23dbff915298585cc71aa85d27665", "commitAfterChange": "7dec8f456454ce7f95cecd0c284ed8fe69194447", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic DefaultCodeFormatter()", "signatureAfterChange": " \t \tpublic DefaultCodeFormatter()", "diff": ["-\t\tthis.preferences = FormattingPreferences.getSunSetttings();", "+\t\tthis.preferences = FormattingPreferences.getDefault();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdf3788a655bb6f49aa5f57502dafa3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void testTypeRefGenericAllG6_Parameterized() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAllG6_Parameterized() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, PARAMETERIZED_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);", "+\tsearch(\"*\", TYPE, TYPE_ARGUMENT_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be01f6fc77ccdc4085e8548edb2de9cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/SimpleDOMBuilder.java", "commitBeforeChange": "85e3913eb6b38f293a12a72a674714e3d9aa0a2e", "commitAfterChange": "5ef744860bffe54acadcb6319ca7d571dd0dcc8d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public void enterMethod(int declarationStart, int modifiers, char[] returnType, char[] name, int nameStart, int nameEnd, char[][] parameterTypes, char[][] parameterNames, char[][] exceptionTypes)", "signatureAfterChange": "\r public void enterMethod(int declarationStart, int modifiers, char[] returnType, char[] name, int nameStart, int nameEnd, char[][] parameterTypes, char[][] parameterNames, char[][] exceptionTypes)", "diff": ["-\t\tnull, name, nameStart, nameEnd, parameterTypes,\r", "+\t\treturnType, name, nameStart, nameEnd, parameterTypes,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be1b111d48c5a9b099e996b3e208e42d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPathUtil.java", "commitBeforeChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "commitAfterChange": "39c2952e6c0f1f5ea5630a9c8f33da78f52c9d80", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic static synchronized void loadPluginFactories()", "signatureAfterChange": " \tpublic static synchronized void loadPluginFactories()", "diff": ["-\t\t\t\tString pluginId = extension.getNamespace();", "+\t\t\t\tString pluginId = extension.getNamespaceIdentifier();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be1bd24d022acb2c6f826810c5da6f1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/MemberDeclarationImpl.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public Collection<AnnotationMirror> getAnnotationMirrors()", "signatureAfterChange": "      public Collection<AnnotationMirror> getAnnotationMirrors()", "diff": ["-\t\tfinal IResolvedAnnotation[] instances = getAnnotationInstances();", "+\t\tfinal IAnnotationBinding[] instances = getAnnotationInstances();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be4ff4934db227ac50f1d51cf5730270", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ecd1acbeaec0e8dc5942e2fe22475a0cae159335", "commitAfterChange": "10ab53f81571907009e57d9a00518324cb1c7bf2", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic IMarker getCycleMarker()", "signatureAfterChange": " \tpublic IMarker getCycleMarker()", "diff": ["-\t\t\tif (project.exists()) {", "+\t\t\tif (project.isAccessible()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be5203bf7769e8af717f8ccd363507f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9bef3f15c43b07a14e76957980f62386b2bcee10", "commitAfterChange": "73f504e7d77d95d8fc2d6621b5727e1e3ab07530", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 267, "signatureBeforeChange": " protected void consumeStatementContinueWithLabel()", "signatureAfterChange": " protected void consumeStatementContinueWithLabel()", "diff": ["-\t\t\tthis.endPosition)); ", "+\t\t\tthis.endStatementPosition)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be6b293a0e69e78aa82f9b8279fe1b9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTPosterChild.java", "commitBeforeChange": "5f70fa42c3a4386c701f0bf293f285ebf4728196", "commitAfterChange": "00a9800bf3767840f823f990a8526b554c054487", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void op()", "signatureAfterChange": " \tpublic void op()", "diff": ["-\t\tObject o1 = null;", "+\t\tVector o1 = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be6bada19dbdeacbaf0fe0de45a3246a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tboolean visit(AnnotationMessageSend messageSend, BlockScope scope);", "signatureAfterChange": " \tboolean visit(JavadocMessageSend messageSend, BlockScope scope);", "diff": ["-\tboolean visit(AnnotationFieldReference fieldRef, BlockScope scope);", "-\tboolean visit(AnnotationMessageSend messageSend, BlockScope scope);", "+\tboolean visit(JavadocFieldReference fieldRef, BlockScope scope);", "+\tboolean visit(JavadocMessageSend messageSend, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be8051c78bb6db1e4ba9fb90626c5c34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "d506bd33e9d161ce75f11b19448c2ad2110b1903", "commitAfterChange": "87dd132b690b39c22112692b2510e01020cf3c19", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate List<FactoryContainer> getPluginFactoryContainers()", "signatureAfterChange": " \t \tprivate List<FactoryContainer> getPluginFactoryContainers()", "diff": ["-\t\t\t\t\t\tcontainer = new PluginFactoryContainer(extensions[i].getLabel());", "+\t\t\t\t\t\tcontainer = new PluginFactoryContainer(extensions[i].getNamespace());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be87e0e371facb09d52e01a55200533d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be9d8d6e01aa88c779d2e837632e18bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected CompilationUnit(IPackageFragment parent, String name, WorkingCopyOwner owner)", "signatureAfterChange": " protected CompilationUnit(PackageFragment parent, String name, WorkingCopyOwner owner)", "diff": ["-protected CompilationUnit(IPackageFragment parent, String name, WorkingCopyOwner owner) {", "+protected CompilationUnit(PackageFragment parent, String name, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bea2e51de77743bbcaceedea5d8a0f28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testGetChildrenForCategory01() throws CoreException", "signatureAfterChange": " public void testGetChildrenForCategory01() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bebf20db1cf2156798e2f81c734324a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/JavaSourceFilePrintWriter.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t     public JavaSourceFilePrintWriter( String typeName, StringWriter sw, ProcessorEnvImpl env )", "signatureAfterChange": " \t     public JavaSourceFilePrintWriter( String typeName, StringWriter sw, BuildEnv env )", "diff": ["-    public JavaSourceFilePrintWriter( String typeName, StringWriter sw, ProcessorEnvImpl env )", "+    public JavaSourceFilePrintWriter( String typeName, StringWriter sw, BuildEnv env )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bec3f5986f9f5f4d7952ec8e1790e585", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "1f82fbfe681e32018e530b8aaba28b5eaf34206f", "commitAfterChange": "01183640e0035cac2c0d8aba45f61a8be154617f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void printWarning(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printWarning(ASTNode node, String msg)", "diff": ["-\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Warning, msg, line, null);", "+\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.WARNING, msg, line, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bedb94156e9c340d119c9d8eab93fb85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic synchronized Set<IFile> getGeneratedFilesForParent(IFile parent)", "signatureAfterChange": " \tpublic synchronized Set<IFile> getGeneratedFilesForParent(IFile parent)", "diff": ["-\t\treturn _parentToGenFiles.getValues(parent);", "+\t\treturn _buildDeps.getValues(parent);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bee32631f2fd2abb09951976c422927d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void testChangeExternalJar() throws CoreException, IOException", "signatureAfterChange": " public void testChangeExternalJar() throws CoreException, IOException", "diff": ["-\t\tremoveLibraryEntry(project, new Path(jarPath));", "+\t\tremoveClasspathEntry(project, new Path(jarPath));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "befd50b088d76192d3f3c8ec83694972", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r \tprivate void findMemberTypes(\r \t\tchar[] typeName,\r \t\tReferenceBinding[] memberTypes,\r \t\tObjectVector typesFound,\r \t\tReferenceBinding receiverType,\r \t\tSourceTypeBinding invocationType)", "signatureAfterChange": "\r \tprivate void findMemberTypes(\r \t\tchar[] typeName,\r \t\tReferenceBinding[] memberTypes,\r \t\tObjectVector typesFound,\r \t\tReferenceBinding receiverType,\r \t\tSourceTypeBinding invocationType)", "diff": ["-\t\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "befd74593ca33dd332c86c8e4b3ddcec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic synchronized void reset()", "signatureAfterChange": " \tpublic synchronized void reset()", "diff": ["-\t\t\tJobManager.verbose(\"Reset\"); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"Reset\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "beff13dbb336547c71851cec6b387fa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": " public void ifgt(Label lbl)", "signatureAfterChange": " public void ifgt(BranchLabel lbl)", "diff": ["-public void ifgt(Label lbl) {", "+public void ifgt(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf26a052bbefbd3e4aa7b18df7e19db4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4b789cce073900ae2230dbe0f789324e98194a6d", "commitAfterChange": "9b9796dc13d13c6aea20f969bc47f5a4b5fbd490", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " protected void consumeArrayCreationExpressionWithoutInitializer()", "signatureAfterChange": " protected void consumeArrayCreationExpressionWithoutInitializer()", "diff": ["-\t\tarrayAllocation.sourceEnd = this.endPosition;", "+\t\tarrayAllocation.sourceEnd = this.endStatementPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf4db09236a117985b2dbf4e6613e714", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t MethodBinding getMethodBinding(MethodBinding[] methods, CompilationUnitResolver resolver)", "signatureAfterChange": " \t MethodBinding getMethodBinding(MethodBinding[] methods, CompilationUnitResolver resolver)", "diff": ["-\t \t} while (this.scanner.token != BindingKeyScanner.END && !this.scanner.isAtTypeParameterStart());", "+\t \t} while (this.scanner.token != BindingKeyScanner.END && !this.scanner.isAtParametersStart());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf55a11e0f91eb0aa7501b148aa1ae78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementRequestor.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public IMethod[] getMethods()", "signatureAfterChange": "\r public IMethod[] getMethods()", "diff": ["-\tfMethods.copyInto(results);\r", "+\tfMethods.toArray(results);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf55ed86fa24270a15c70f4d2d0bb532", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tprivate void generateElementValue(int attributeOffset, Expression defaultValue, Constant constant, TypeBinding binding)", "signatureAfterChange": " \tprivate void generateElementValue(int attributeOffset, Expression defaultValue, Constant constant, TypeBinding binding)", "diff": ["-\t\t\tcase T_String :", "+\t\t\tcase T_JavaLangString :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf55fa9584b63038cc606bfb249c5c58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "e5dee4f66ab3257e0d9e4e34690323cf2d5f7c21", "commitAfterChange": "ba7f55d89dcf40f0d2718397b348f39209d50c3a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \tpublic PrimitiveTypeImpl getBooleanType()", "signatureAfterChange": " \t \tpublic PrimitiveTypeImpl getBooleanType()", "diff": ["-\tpublic PrimitiveTypeImpl getBooleanType(){ return _primitives[0]; }", "+\tpublic PrimitiveTypeImpl getBooleanType(){ return _primitives[BOOLEAN_INDEX]; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf624aea6b9deadde1cd6af12bbe9010", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void testInvalidTagsConstructorErrorNotags()", "signatureAfterChange": " \tpublic void testInvalidTagsConstructorErrorNotags()", "diff": ["-\t\trunConformTest(InvalidReferencesConstructorJavadocComments);", "+\t\trunConformTest(CONSTRUCTORS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf6577cad057c08b4f41d46404c1c20f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreatePackageFragmentOperation.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void executeOperation() throws JavaModelException", "signatureAfterChange": " protected void executeOperation() throws JavaModelException", "diff": ["-\tIContainer parentFolder = (IContainer) root.getUnderlyingResource();", "+\tIContainer parentFolder = (IContainer) root.getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf7885be4293173a710e997befe3236d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf99fb1b9cd76ef9a83bd6d40e2dfba1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate TypeBinding[] computeTypes(Expression[] arguments, BlockScope scope)", "signatureAfterChange": "  \tprivate TypeBinding[] computeTypes(Expression[] arguments, BlockScope scope)", "diff": ["-\t\t\targTypes[a] = arguments[a].expressionType;", "+\t\t\targTypes[a] = arguments[a].resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa60f649be98b1003d3c21d28855547", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0) return;", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa712ecacb514b9c1789287cfcea972", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tpublic void endVisit(EnumDeclaration node)", "signatureAfterChange": " \tpublic void endVisit(CreationReference node)", "diff": ["+\t */", "+\tpublic void endVisit(CreationReference node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfcbc5f0c6a5684b5261b5a80bfae57c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \t\tpublic boolean match(ParenthesizedExpression node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(MethodRef node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(MethodRef node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfce1d4c608dd18a9fba445070683c4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/IIndex.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tvoid add(IDocument document, IIndexer indexer) throws IOException;", "signatureAfterChange": " \tvoid add(SearchDocument document, IIndexer indexer) throws IOException;", "diff": ["-\tvoid add(IDocument document, IIndexer indexer) throws IOException;", "+\tvoid add(SearchDocument document, IIndexer indexer) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bff4d2e9d7af0acd5e6761405779953b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected PackageFragment(IPackageFragmentRoot root, String name)", "signatureAfterChange": " protected PackageFragment(PackageFragmentRoot root, String name)", "diff": ["-protected PackageFragment(IPackageFragmentRoot root, String name) {", "+protected PackageFragment(PackageFragmentRoot root, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c00eeba658545c572560efee49f5153d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "b574ad64a0e10ca20ad6529e036d6695d43be062", "commitAfterChange": "85e9d08e0f769ffaa738af53479385c01444f2d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r private void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);\r", "+\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c02028144457fe91bf1ada6fc140697c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TestAll.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tstandardTests.addAll(AnnotationTest.allTestClasses);", "+\tstandardTests.addAll(JavadocTest.allTestClasses);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0395c531e3d04a7eedc88c85145874a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "880c1fdcebd82e64ed69da7c3bc9800134409052", "commitAfterChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tprivate CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit, \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "signatureAfterChange": "  \tprivate CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit, \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\t\t\t\t\t\t\t\t((org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)node).parseMethod(this.parser, unit);", "+\t\t\t\t\t\t\t\t((org.eclipse.jdt.internal.compiler.ast.TypeDeclaration)node).parseMethods(this.parser, unit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c04de4c1fb8e2a398dc697c9e83b8055", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "commitAfterChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public int computeSeverity(int problemID)", "signatureAfterChange": " public int computeSeverity(int problemID)", "diff": ["-\t\t\tif (! CompilerOptions.ALL_TAGS.equals(this.options.reportMissingJavadocTagDescription)) {", "+\t\t\tif (! CompilerOptions.ALL_STANDARD_TAGS.equals(this.options.reportMissingJavadocTagDescription)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c07695d10cc0b4d340049664909dfb79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic boolean isContinuedTo()", "signatureAfterChange": "  \tpublic boolean isContinuedTo()", "diff": ["-\t\treturn initsOnContinue != FlowInfo.DeadEnd;", "+\t\treturn initsOnContinue != FlowInfo.DEAD_END;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c07b5c5b0f09e7bb6e8e79074e77fe21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  private TypeBinding annotateType(TypeBinding binding, ITypeAnnotationWalker walker, char[][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding annotateType(TypeBinding binding, TypeAnnotationWalker walker, char[][][] missingTypeNames)", "diff": ["-private TypeBinding annotateType(TypeBinding binding, ITypeAnnotationWalker walker, char[][][] missingTypeNames) {", "+private TypeBinding annotateType(TypeBinding binding, TypeAnnotationWalker walker, char[][][] missingTypeNames) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c08ba0e06da30dd522d89ba212c558c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  protected AbstractImageBuilder(JavaBuilder javaBuilder, boolean buildStarting, State newState)", "signatureAfterChange": "  protected AbstractImageBuilder(JavaBuilder javaBuilder, boolean buildStarting, State newState)", "diff": ["-\t\t\t\t\tthis.filesDeclaringAnnotation = new SimpleSet(1);", "+\t\t\t\t\tthis.filesWithAnnotations = new SimpleSet(1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0913c413ea3ae6737abb433e8c08ec2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\tFlowInfo.UNREACHABLE) != 0) {", "+\t\t\t\t\tFlowInfo.UNREACHABLE_OR_DEAD) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c09b3ef792a5a2664cba9b9ae0ae6c29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " public void ifeq(Label lbl)", "signatureAfterChange": " public void ifeq(BranchLabel lbl)", "diff": ["-public void ifeq(Label lbl) {", "+public void ifeq(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c09c3c8fd3d3e028b59724eb3472f6b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void resolveStatements()", "signatureAfterChange": " \tpublic void resolveStatements()", "diff": ["-\t\t\t\t&& this.binding.declaringClass.id == T_Object", "+\t\t\t\t&& this.binding.declaringClass.id == T_JavaLangObject"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0b60b4689a2c60ab12089ae202bc82b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "949f1bbe84622faa807866412d26a5bdb0f64fe4", "commitAfterChange": "ecd2d9d0e14c2688e43c7c452930452fe7a77cc0", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void analyseCode( \t\tClassScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \tpublic void analyseCode( \t\tClassScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t\tfieldInfo = FlowInfo.initial(maxFieldCount).setReachMode(FlowInfo.FAKE_REACHABLE);", "+\t\t\t\t\t\t\tfieldInfo = FlowInfo.initial(maxFieldCount).setReachMode(FlowInfo.UNREACHABLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0cf15febe1b767ad0a915fa766397d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 261, "signatureBeforeChange": " \tpublic boolean visit(SingleMemberAnnotation annotation, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit(SingleMemberAnnotation annotation, ClassScope scope)", "diff": ["-\tpublic boolean visit(SingleMemberAnnotation annotation, CompilationUnitScope scope) {", "+\tpublic boolean visit(SingleMemberAnnotation annotation, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0d1cffdbe4d41ae2f1e5d61dff6fe44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "87ba3addb06e0bd690b97dd2e305fffcc5db74fe", "commitAfterChange": "8046249ea5657bdf56e1ad6e70f968e6217d4dd0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \t\r \tpublic synchronized void request(IJob job)", "signatureAfterChange": "\r \t\r \tpublic synchronized void request(IJob job)", "diff": ["-\t\t\tJobManager.log(\"REQUESTING job - \" + job); //$NON-NLS-1$\r", "+\t\t\tJobManager.verbose(\"REQUESTING job - \" + job); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0d6a576ffa80c45493e1edc246b6173", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic boolean checkConstructors(Parser parser)", "signatureAfterChange": " \tpublic boolean checkConstructors(Parser parser)", "diff": ["-\t\t\t\t\t\tif (this.getKind() == IGenericType.INTERFACE) {", "+\t\t\t\t\t\tif (this.kind() == IGenericType.INTERFACE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0e0d6f84d810aebc04d4c3a3c4f1c2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "      public ICompilationUnit getCompilationUnit()", "signatureAfterChange": "      public ICompilationUnit getCompilationUnit()", "diff": ["-    public ICompilationUnit getCompilationUnit(){ return _compilationUnit; }", "+    public ICompilationUnit getCompilationUnit(){ return _unit; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0fd7f6c97ef0ab16006d2940bcefb42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tpublic boolean visit(ReturnStatement node)", "signatureAfterChange": " \tpublic boolean visit(ReturnStatement node)", "diff": ["-\t\t\tthis.beforeRequiredSpaceIndex = getScanner().getTokenEndOffset(ITerminalSymbols.TokenNamereturn, node.getStartPosition());", "+\t\t\tthis.beforeRequiredSpaceIndex = getScanner().getTokenEndOffset(TerminalTokens.TokenNamereturn, node.getStartPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c107d5acdeb068e69f0a63349602ca6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/EclipseRoundCompleteEvent.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic EclipseRoundCompleteEvent(final ProcessorEnvImpl env)", "signatureAfterChange": " \t \tpublic EclipseRoundCompleteEvent(final BuildEnv env)", "diff": ["-\tpublic EclipseRoundCompleteEvent(final ProcessorEnvImpl env)", "+\tpublic EclipseRoundCompleteEvent(final BuildEnv env)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1108c99a547dd43e6fe5cfd89ed7fa4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "c0a30fbd56f0faf040945ca7720c23f3dd404282", "commitAfterChange": "98f970cf7b3c4f50413aab65a3d35b153ba767e1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void tearDownSuite() throws Exception", "signatureAfterChange": " \tpublic void tearDownSuite() throws Exception", "diff": ["-\t\tsuper.tearDown();", "+\t\tsuper.tearDownSuite();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c13f512cda1e06ba51d45e1610b28d0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": "\r final public void ifle(Label lbl)", "signatureAfterChange": "\r final public void ifle(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_ifle, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_ifle, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1425040e215d2c7e34b773de40d2f58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedResourceChangeListener.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t private void addGeneratedSrcFolderTo(final Set<IProject> projs )", "signatureAfterChange": " \t \tprivate void addGeneratedSrcFolderTo(final Set<IProject> projs )", "diff": ["-private void addGeneratedSrcFolderTo(final Set<IProject> projs ){", "+\tprivate void addGeneratedSrcFolderTo(final Set<IProject> projs ){", "-\t\t\t\tgsfm.createGeneratedSourceFolder();", "+\t\t\t\tgsfm.ensureFolderExists();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c148c5c8fad6d8dee6cfe0602ee2eac2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/RunFormatterTests.java", "commitBeforeChange": "605463bb98397b59c78b7fc56ee33e7e22fd8367", "commitAfterChange": "7428bd3b18a16b1860e6a1a28fbc6cd63967fdc6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tFormatterJavadocTests.ALL_TEST_SUITES = new ArrayList(TEST_SUITES);", "+\t\tFormatterCommentsTests.ALL_TEST_SUITES = new ArrayList(TEST_SUITES);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c155e64c0861c42ff12bd416f36a7ba5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "3022496b74f0bbeccd974aa8b5d23fb3438cc799", "commitAfterChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void testCompletionMethodDeclaration3() throws JavaModelException", "signatureAfterChange": " public void testCompletionMethodDeclaration3() throws JavaModelException", "diff": ["-\t\t\t\"equals[METHOD_DECLARATION]{public boolean equals(Object obj), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED)+\"}\",", "+\t\t\t\"equals[METHOD_DECLARATION]{public boolean equals(Object obj), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_METHOD_OVERIDE+ R_NON_RESTRICTED)+\"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1713a3a79d4723a926126070354dcf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic JavadocArgumentExpression(char[] name, int startPos, int endPos, TypeReference typeRef)", "signatureAfterChange": "  \tpublic JavadocArgumentExpression(char[] name, int startPos, int endPos, TypeReference typeRef)", "diff": ["-\t\tthis.argument = new Argument(name, pos, typeRef, IConstants.AccDefault);", "+\t\tthis.argument = new Argument(name, pos, typeRef, ClassFileConstants.AccDefault);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1773beb1c79828e9abbd05d2f64f923", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void addVisibleLocalVariable(LocalVariableBinding localBinding)", "signatureAfterChange": " public void addVisibleLocalVariable(LocalVariableBinding localBinding)", "diff": ["-\tif (!generateLocalVariableTableAttributes)", "+\tif (!manageLocalVariables)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c17a0ad273622f7227e926562d56ef78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-\tlong sourceLevel = environment.options.sourceLevel;", "+\tlong sourceLevel = environment.globalOptions.sourceLevel;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1808189f0e70119ee15b4352655d593", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 199, "methodNumberAfterChange": 199, "signatureBeforeChange": " protected void consumeMethodDeclaration(boolean isNotAbstract)", "signatureAfterChange": " protected void consumeMethodDeclaration(boolean isNotAbstract)", "diff": ["-\t\t\t\tmd.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\t\t\tmd.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1a3e7b6275346b64d75a9850e1e5b42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ConstructorInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tConstructorInvocation(AST ast)", "signatureAfterChange": " \tConstructorInvocation(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1b2e9cbef94c69032aec360d16893e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void testParameterizedTypeMultipleArguments04() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeMultipleArguments04() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedType(unit,  \"g1.t.m.def.Generic<? super RuntimeException, ? super IllegalMonitorStateException, ? super IllegalMonitorStateException>.MemberGeneric<? extends Throwable, ? extends Exception, ? extends RuntimeException>\"); //$NON-NLS-1$", "+\t\tResolvedSourceType type = selectParameterizedType(unit,  \"g1.t.m.def.Generic<? super RuntimeException, ? super IllegalMonitorStateException, ? super IllegalMonitorStateException>.MemberGeneric<? extends Throwable, ? extends Exception, ? extends RuntimeException>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1b7d8a60dc4043d8e22bf922c9a764c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": " \tpublic void testSuperMethodInvocation()", "signatureAfterChange": " \tpublic void testSuperMethodInvocation()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1c388e0ad92c2f3fbc7f798cf98c698", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void testChangeInternalJar() throws CoreException, IOException", "signatureAfterChange": " public void testChangeInternalJar() throws CoreException, IOException", "diff": ["-\t\tremoveLibraryEntry(project, new Path(jarName));", "+\t\tremoveClasspathEntry(project, new Path(jarName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1d6d426b8bed2c6e3cf7dd8b6875e9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CreateMembersTests.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildModelTestSuite(CreateMembersTests.class, 1/*sort ascending order*/);", "+\t\treturn buildModelTestSuite(CreateMembersTests.class, ALPHABETICAL_SORT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c21022567523015a6fb54234d0b58cf9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void completeCodeAttributeForClinit(int codeAttributeOffset)", "signatureAfterChange": " \tpublic void completeCodeAttributeForClinit(int codeAttributeOffset)", "diff": ["-\t\t\t\t\t\tnameIndex = constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangClassNotFoundExceptionConstantPoolName);", "+\t\t\t\t\t\tnameIndex = constantPool.literalIndexForType(ConstantPool.JavaLangClassNotFoundExceptionConstantPoolName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c21c6aca084e0257c20be1c1321a4515", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": " protected void consumeStatementContinue()", "signatureAfterChange": " protected void consumeStatementContinue()", "diff": ["-\t\tnew Continue(", "+\t\tnew ContinueStatement("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c23a7e1ffb7237aceda820de48335035", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_3);", "+\t\treturn buildMinimalComplianceTestSuite(testClass(), F_1_3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c24fa457e38a1bef8a5637a7ffe230ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public boolean isPotentiallyUnknown(VariableBinding local)", "signatureAfterChange": "  public boolean isPotentiallyUnknown(LocalVariableBinding local)", "diff": ["-public boolean isPotentiallyUnknown(VariableBinding local) {", "+public boolean isPotentiallyUnknown(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c27bd5950328b5195664df57108ddf7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " public void test102() throws JavaModelException", "signatureAfterChange": " public void test102() throws JavaModelException", "diff": ["-\t\t\t\"ZBasicTestTypes[JAVADOC_TYPE_REF]{{@link ZBasicTestTypes}, javadoc.types, Ljavadoc.types.ZBasicTestTypes;, null, null, \"+this.positions+R_DICUNRIT+\"}\"", "+\t\t\t\"ZBasicTestTypes[JAVADOC_TYPE_REF]{{@link ZBasicTestTypes}, javadoc.types, Ljavadoc.types.ZBasicTestTypes;, null, null, \"+this.positions+R_DRICUNRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2ab52f719ab0f69682b86a733fe2cce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/modifying/ASTRewritingModifyingOtherTest.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic void test0000() throws Exception", "signatureAfterChange": " \t \tpublic void test0000() throws Exception", "diff": ["-\t\tIPackageFragment pack1= fSourceFolder.createPackageFragment(\"test0000\", false, null);", "+\t\tIPackageFragment pack1= sourceFolder.createPackageFragment(\"test0000\", false, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2bc8993522ff487fa7248bf2f949ecd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-    switch(otherType.bindingType()) {", "+    switch(otherType.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2c131f6864d5dbb67f101d877e4dd46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public MethodBinding getUpdatedMethodBinding(MethodBinding targetMethod, ReferenceBinding newDeclaringClass)", "signatureAfterChange": " public MethodBinding getUpdatedMethodBinding(MethodBinding targetMethod, ReferenceBinding newDeclaringClass)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2d22c7077fc92f6ecd3d08fc6dffcca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tprivate int getPosAfterLeftBrace(int pos)", "signatureAfterChange": " \tprivate int getPosAfterLeftBrace(int pos)", "diff": ["-\t\t\tif (nextToken == ITerminalSymbols.TokenNameLBRACE) {", "+\t\t\tif (nextToken == TerminalTokens.TokenNameLBRACE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2f53114e8ff78d6d14437bec87ea393", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "dfc91d56806c456b9b3ccf18b7180e0ffe937730", "commitAfterChange": "b2cc128bda23f9f1345b0f7e7b16cc0855af3cea", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic boolean visit(Javadoc node)", "signatureAfterChange": " \tpublic boolean visit(Javadoc node)", "diff": ["-\t\tfor (Iterator it = node.fragments().iterator(); it.hasNext(); ) {", "+\t\tfor (Iterator it = node.tags().iterator(); it.hasNext(); ) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2f63b13dea5369f910a5e8f352cfa54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "a6b76fc7d7890cbbcb2fc001b8031466dd0ad995", "commitAfterChange": "8c05bff0d88a6a537ed2accc1c62c5430e927aee", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic static String warningTokenFromIrritant(long irritant)", "signatureAfterChange": " \t \tpublic static String warningTokenFromIrritant(long irritant)", "diff": ["-\t\t\t\tcase (int)(TypeParameterHiding >>> 32) :", "+\t\t\t\tcase (int)(TypeHiding >>> 32) :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2feb19d225a3ff418e93a7b4ea495c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a9fe2cd6834c8a9a5d61e3b4f5b4753a1e8c9994", "commitAfterChange": "ae91e57f9e527d38f1a28381db960edf808acef4", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic MethodBinding findExactMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findExactMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\tif (isPossibleSubtypeOfRawType(argumentTypes[i]))", "+\t\t\t\t\tif (isSubtypeOfRawType(argumentTypes[i]))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c31c6173a88c8febd255af58143b0d84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "c9d6ebaa0d13be6fc2e748dee3cae777e5c9d89a", "commitAfterChange": "0011958a7781b8e34a2680d48e8c358ce935fb15", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public void completionIdentifierCheck()", "signatureAfterChange": "\r public void completionIdentifierCheck()", "diff": ["-\t\t&& !insideFieldInitializer()) return; \r", "+\t\t&& !insideFieldInitialization()) return; \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c31d6148554b09da087cf471baebe088", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected OpenableElementInfo createElementInfo()", "signatureAfterChange": " protected Object createElementInfo()", "diff": ["-protected OpenableElementInfo createElementInfo() {", "+protected Object createElementInfo() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3233cfa022f9ae66db05378acea8a81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "4711a4400f4aaad04e39c1b397feb3ad28ccbbcd", "commitAfterChange": "aa844984d3b466b6aa7def7ddaac7abc2cc75994", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " private static int appendClassTypeSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer)", "signatureAfterChange": " private static int appendClassTypeSignature(char[] string, int start, boolean fullyQualifyTypeNames, StringBuffer buffer)", "diff": ["-\t\t\t\t\tbuffer.insert(0, \"new \"); //$NON-NLS-1$", "+\t\t\t\t\tbuffer.insert(checkpoint, \"new \"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c32540aa5144b1ccf14a95671bcbd522", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 220, "signatureBeforeChange": " protected void ignoreMethodBody()", "signatureAfterChange": " protected void ignoreMethodBody()", "diff": ["-\tmd.declarationSourceEnd = flushAnnotationsDefinedPriorTo(endStatementPosition);", "+\tmd.declarationSourceEnd = flushCommentsDefinedPriorTo(endStatementPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c32d67b9b1c3ee02e4cdbd982595ea76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool.tests/src/org/eclipse/jdt/compiler/tool/tests/CompilerToolTests.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testFileManager2()", "signatureAfterChange": " \tpublic void testFileManager2()", "diff": ["-\t\t\tStandardJavaFileManager fileManager = Compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());", "+\t\t\tStandardJavaFileManager fileManager = compiler.getStandardFileManager(null, Locale.getDefault(), Charset.defaultCharset());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c33478a58533f4cbcddc490faecfa597", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "ff4953718f4a4fa66bb0922d1821b22a0e2fdd84", "commitAfterChange": "b48f366c7cd622655a48ea734bdcd0016d20ec8b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\tprivate void append(IPackageFragment pkg)", "signatureAfterChange": " \t\tprivate void append(IPackageFragment pkg)", "diff": ["-\t\t\tresults.append(pkg.getElementName());", "+\t\t\tline.append(pkg.getElementName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c34f01a4ce61240cd9044454359bfe5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "73197a47274e75e8fe1581fdac3a086fb2ddf471", "commitAfterChange": "340440fc2f9b9eb03b89c385f562976def2c6c0e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "signatureAfterChange": " \t \t@Override \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "diff": ["-\t@Override", "-\tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass) {", "-\t\treturn _env.getFactory().getAnnotation(getAnnotationBindings(), annotationClass);", "-\t}", "+\t", "+\t@Override", "+\tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass) {", "+\t\treturn _env.getFactory().getAnnotation(getPackedAnnotationBindings(), annotationClass);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c35113b99a9c377b7a654d3f82e64429", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected String getExternalFolder()", "signatureAfterChange": " protected String getExternalFolder()", "diff": ["-\treturn getExternalFolderPath(\"externalFolder\");", "+\treturn getExternalResourcePath(\"externalFolder\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c38969adb8d277e808222722e51a3b4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": " \tpublic void testSingleVariableDeclaration()", "signatureAfterChange": " \tpublic void testSingleVariableDeclaration()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c38c7d626e67640dbbf218b39c506c49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/BinaryExpressionFragmentBuilder.java", "commitBeforeChange": "40a85c2d4c57226c917bc0f991a26ac5a5d8b085", "commitAfterChange": "a256960ed4710f2897d78e274a4eaeebfce80126", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tpublic boolean visit(StringLiteralConcetanation stringLiteral, BlockScope scope)", "signatureAfterChange": "  \tpublic boolean visit(StringLiteralConcatenation stringLiteral, BlockScope scope)", "diff": ["-\tpublic boolean visit(StringLiteralConcetanation stringLiteral, BlockScope scope) {", "+\tpublic boolean visit(StringLiteralConcatenation stringLiteral, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c391bd861553766bb2bdfb25e6d5974c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/TestAll.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["-\t\treturn AbstractCompilerTest.buildAllCompliancesSetupSuite(TestAll.class, CompilerTestSetup.class, testClasses);", "+\t\treturn AbstractCompilerTest.buildAllCompliancesTestSuite(TestAll.class, CompilerTestSetup.class, testClasses);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c39824ff44283f35ffe7cec58b89b5ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "cb7e1f0df8a87f2b400ca058ed57dff2a93cd223", "commitAfterChange": "53732d4f0f41abb7968ca2914f7509fbca579ac0", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": " protected void consumeStatementSwitch()", "signatureAfterChange": " protected void consumeStatementSwitch()", "diff": ["-\tswitchStatement.testExpression = expressionStack[expressionPtr--];", "+\tswitchStatement.expression = expressionStack[expressionPtr--];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3a9d9422978e91437b43f242800341a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testDeltaDiscardPrimaryWorkingCopy1() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaDiscardPrimaryWorkingCopy1() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3c76f0ed9e3dff68f232c5a210b4d93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrame.java", "commitBeforeChange": "48d4662ccc94304b71283abf02dc80106ec8ea24", "commitAfterChange": "903951bbb6fb8810351739428a25d51798c6d972", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void printFrame(StringBuffer buffer, StackMapFrame frame)", "signatureAfterChange": " private void printFrame(StringBuffer buffer, StackMapFrame frame)", "diff": ["-\t\tnew String[] {", "+\t\tnew Object[] {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3cca87e1e6ba6fbbe65c055f9de2124", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/ProjectResourceCopier.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public ProjectResourceCopier(IJavaProject project, JavaDevelopmentContextImpl devContext, BuildNotifier notifier, float totalAvailableProgress)", "signatureAfterChange": "\r public ProjectResourceCopier(IJavaProject project, JavaDevelopmentContextImpl devContext, BuildNotifier notifier, float totalAvailableProgress)", "diff": ["-\t\tIClasspathEntry[] entries = this.project.getResolvedClasspath(true);\r", "+\t\tIClasspathEntry[] entries = this.project.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c40632beb8661f70407f6d26d8521842", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexBinaryFolder.java", "commitBeforeChange": "87ba3addb06e0bd690b97dd2e305fffcc5db74fe", "commitAfterChange": "8046249ea5657bdf56e1ad6e70f968e6217d4dd0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\t\tJobManager.log(\"-> merging index \" + index.getIndexFile()); //$NON-NLS-1$\r", "+\t\t\t\t\t\tJobManager.verbose(\"-> merging index \" + index.getIndexFile()); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c413b80e2b627dca679fce1d4eff1d25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementInfo.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void addChild(IJavaElement child)", "signatureAfterChange": " \tpublic void addChild(IJavaElement child)", "diff": ["-\t\tif (fChildren == fgEmptyChildren) {", "+\t\tif (fChildren == NO_CHILDREN) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c41e3a8d069f10d81177e228d6299c92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/RunOnlyJava8Tests.java", "commitBeforeChange": "0e8a2b3bc15c38e29faaa2105eb6e0bbf7b15cd5", "commitAfterChange": "266fb0d2bc58e2f4f179d2c1279dee095ed53e45", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Class[] getAllTestClasses()", "signatureAfterChange": " \tpublic static Class[] getAllTestClasses()", "diff": ["-\t\t\tJsr335ClassFileTest.class,", "+\t\t\tJSR335ClassFileTest.class,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4254e56011fe0a223efcb80d1e66315", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 70, "signatureBeforeChange": " \tpublic boolean visit(FalseLiteral falseLiteral, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(FalseLiteral falseLiteral, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNamefalse);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNamefalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4365710d1748d8adde3a03f249315e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void refreshChildren()", "signatureAfterChange": " public void refreshChildren()", "diff": ["-\t\tcomputeChildren(info, getUnderlyingResource());", "+\t\tcomputeChildren(info, getResource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c438cddfe3ecf29d0a9db7ee9d70e96a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FineGrainVisitor.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  public boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "signatureAfterChange": "  public boolean visit(FieldDeclaration fieldDeclaration, MethodScope scope)", "diff": ["-\tif ((this.fineGrain & FIELD_TYPE_DECLARATION_TYPE_REFERENCE) != 0) {", "+\tif ((this.fineGrain & FIELD_DECLARATION_TYPE_REFERENCE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c46202ff71c8a54b390478d805f6c85d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "d6c28471243bc992d18db0170807eeb69edcbea6", "commitAfterChange": "17404692b6e0a539da1d06059648c128f8d0f7d8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void generateMethodInfoHeader(MethodBinding methodBinding, int accessFlags)", "signatureAfterChange": " \tpublic void generateMethodInfoHeader(MethodBinding methodBinding, int accessFlags)", "diff": ["-\t\t\tresizePoolContents(10);", "+\t\t\tresizeContents(10);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c46c36189f6368f98f483d17961ef0f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelInfo.java", "commitBeforeChange": "69166fc4e41eda18ba3ac0adb7fbc59250ec70c0", "commitAfterChange": "55ee0265171c95e2014ca1f0a8ad4553c7329fc1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r protected JavaModelInfo(IJavaModel javaModel, IWorkspace workspace)", "signatureAfterChange": "\r protected JavaModelInfo(JavaModel javaModel, IWorkspace workspace)", "diff": ["-protected JavaModelInfo(IJavaModel javaModel, IWorkspace workspace) {\r", "+protected JavaModelInfo(JavaModel javaModel, IWorkspace workspace) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4780add516d86300d32ce1b8b438844", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "7a5fa6d4e7beb7ad1bc8fa652ccd4c2cc1dd4339", "commitAfterChange": "89483d0e271e99c67b18df19eba41f6a1cf15383", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\tbuf.append(\"\\n-predicate throwing exception: \").append(getSeverityString(PredicateThrowingException)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n-predicate throwing exception: \").append(getSeverityString(BooleanMethodThrowingException)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c48d71e07f23bdde6494cb29b0fd123d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "dfc91d56806c456b9b3ccf18b7180e0ffe937730", "commitAfterChange": "b2cc128bda23f9f1345b0f7e7b16cc0855af3cea", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": " \tpublic void testJavadoc()", "signatureAfterChange": " \tpublic void testJavadoc()", "diff": ["-\t\tx1.fragments().add(TAG1);", "+\t\tx1.tags().add(TAG1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4962c09b12fc6fcf55c28a0da1098e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExceptionFormula.java", "commitBeforeChange": "dca0c800b618e06354348679c785dbf10c5f5a8f", "commitAfterChange": "cab98b2b8859caae533ee4cfbe628b2265262135", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic ConstraintExceptionFormula(Expression left, TypeBinding type)", "signatureAfterChange": " \t \tpublic ConstraintExceptionFormula(FunctionalExpression left, TypeBinding type)", "diff": ["-\tpublic ConstraintExceptionFormula(Expression left, TypeBinding type) {", "+\tpublic ConstraintExceptionFormula(FunctionalExpression left, TypeBinding type) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c49e050a68f06a36cb0676c52f6439b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "abd7eb8067d05a106270885f602de8a64d08c556", "commitAfterChange": "51349b07c2a6f70ec333ca325c91564e571e10b7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void cleanUp()", "signatureAfterChange": " \tpublic void cleanUp()", "diff": ["-\t\t\t\tlocalType.switchCase = null;", "+\t\t\t\tlocalType.enclosingCase = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4a82333eba22ca70fe1bd968829776a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " public void test_options_01()", "signatureAfterChange": " public void test_options_01()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4aa19a9d59b7700cab500e0e915d134", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void testMultiLineCommentIndentSpaces1()", "signatureAfterChange": " \tpublic void testMultiLineCommentIndentSpaces1()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, \"3\"); //$NON-NLS-1$", "+\t\t// note: FORMATTER_INDENTATION_SIZE translates to tab_size", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, \"3\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4b66c55f55121eae9222bf27aac5c21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/RoundEnvImpl.java", "commitBeforeChange": "aba5db418de65ea21899bfdf893833cd0fc3f586", "commitAfterChange": "7aba284c4ea53048ed9ad4ccc85fef0f7294903a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "signatureAfterChange": "  \t@Override \tpublic Set<? extends Element> getRootElements()", "diff": ["-\t\t\t\tfor (BinaryTypeBinding typeBinding : _binaryTypes) {", "+\t\t\t\tfor (ReferenceBinding typeBinding : _binaryTypes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4cd17f647545d1aab4c2fe4107935d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tpublic boolean isSourceType()", "signatureAfterChange": "\r \r public  boolean isSourceType()", "diff": ["-\t */\r", "-\tpublic boolean isSourceType() {\r", "-\t\treturn sourceTypes != null;\r", "-\t}\r", "+public  boolean isSourceType() {\r", "+\treturn sourceType != null;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4f533fa1b6a6fd0ec8f429016764b54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiterals15Test.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildTestSuiteUniqueCompliance(testClass(), COMPLIANCE_1_5);", "+\treturn buildComplianceRegressionSetupSuite(testClass(), COMPLIANCE_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4faac18de13891417137cfdf5bd6346", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "e5dee4f66ab3257e0d9e4e34690323cf2d5f7c21", "commitAfterChange": "ba7f55d89dcf40f0d2718397b348f39209d50c3a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic PrimitiveTypeImpl getIntType()", "signatureAfterChange": " \tpublic PrimitiveTypeImpl getIntType()", "diff": ["-\tpublic PrimitiveTypeImpl getFloatType(){ return _primitives[4]; }", "-\tpublic PrimitiveTypeImpl getIntType(){ return _primitives[5]; }", "+\tpublic PrimitiveTypeImpl getFloatType(){ return _primitives[FLOAT_INDEX]; }", "+\tpublic PrimitiveTypeImpl getIntType(){ return _primitives[INT_INDEX]; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4ff9ed072212fa0b4374e53ffffa957", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "876aa677201567f6dd87fe8c0b5a5326661e4029", "commitAfterChange": "955478e6d2220d787f88d27b5ca186d67f088e58", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprotected CompilationUnit verifyComments(ICompilationUnit unit) throws JavaModelException", "signatureAfterChange": " \tprotected CompilationUnit verifyComments(ICompilationUnit unit) throws JavaModelException", "diff": ["-\t\t\ttestCounters[3]++;", "+\t\t\tTEST_COUNTERS[3]++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c503454d605e38a82edce440a19d33be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected OpenableElementInfo createElementInfo()", "signatureAfterChange": " protected Object createElementInfo()", "diff": ["-protected OpenableElementInfo createElementInfo() {", "+protected Object createElementInfo() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c51863a45211f333b03cd16512fe3533", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tprivate void runTest(String input, String output, DefaultCodeFormatter codeFormatter, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator)", "signatureAfterChange": " \t \tprivate void runTest(String input, String output, CodeFormatter codeFormatter, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator)", "diff": ["-\tprivate void runTest(String input, String output, DefaultCodeFormatter codeFormatter, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator) {", "+\tprivate void runTest(String input, String output, CodeFormatter codeFormatter, int kind, int indentationLevel, boolean checkNull, int offset, int length, String lineSeparator) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5196fcc8cb15cba2b83563e2f549918", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 158, "methodNumberAfterChange": 158, "signatureBeforeChange": " public void if_icmple(Label lbl)", "signatureAfterChange": " public void if_icmple(BranchLabel lbl)", "diff": ["-public void if_icmple(Label lbl) {", "+public void if_icmple(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c54579a8d2aeeceb4c199ceeede74304", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "95f59caaf27a775333076cb1bc1d967e2796cdb3", "commitAfterChange": "7e41439f7b91a880bb131d143b9faf947232eb35", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  public RawTypeBinding createRawType(ReferenceBinding genericType, ReferenceBinding enclosingType)", "signatureAfterChange": "  public RawTypeBinding createRawType(ReferenceBinding genericType, ReferenceBinding enclosingType)", "diff": ["-\t\t\t    if (cachedType.type() != genericType) continue nextCachedType; // remain of unresolved type", "+\t\t\t    if (cachedType.actualType() != genericType) continue nextCachedType; // remain of unresolved type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c55675f8ccb61909d23db22d7ebdd227", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Map<AnnotationTypeElementDeclaration, AnnotationValue> getElementValues()", "signatureAfterChange": "      public Map<AnnotationTypeElementDeclaration, AnnotationValue> getElementValues()", "diff": ["-                 final DeclarationImpl mirrorDecl = Factory.createDeclaration(elementMethod, _env);", "+                 final EclipseDeclarationImpl mirrorDecl = Factory.createDeclaration(elementMethod, _env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c572360bb17f75f2ff475032fe415874", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "diff": ["-\t\t\t\tpos= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameLPAREN, pos);", "+\t\t\t\tpos= getScanner().getTokenEndOffset(TerminalTokens.TokenNameLPAREN, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5890ee3232619d7922c758369442a5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "5f85e7ad56b4ff0557c2bf2c999084f9107f0617", "commitAfterChange": "0a4aef6498056b8c56c187a24a4c92d14d399d01", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": "\r protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tlocator.reportQualifiedReference(reference.sourceStart, reference.sourceEnd, new char[][] {this.name}, element, accuracy);\r", "+\tlocator.reportAccurateReference(reference.sourceStart, reference.sourceEnd, new char[][] {this.name}, element, accuracy);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5b2c0d74cb8c54ca45592302476af6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": " \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\t\t\t&& this.binding.declaringClass.id != T_Object)", "+\t\t\t\t&& this.binding.declaringClass.id != T_JavaLangObject)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5b750ea317822133ae5f16489c3aac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "1de8e2f6bc728cee690d70795383b83c1f0d652a", "commitAfterChange": "cccafe00dbf29f156949d8f0d0aec370b02aa048", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " protected CommitRollbackParser createSnapShotParser()", "signatureAfterChange": " protected SelectionParser createSnapShotParser()", "diff": ["-protected CommitRollbackParser createSnapShotParser() {", "+protected SelectionParser createSnapShotParser() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5c084a64f8d47c82b2a07818ef9b1cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  public void test056() throws JavaModelException", "signatureAfterChange": "  public void test056() throws JavaModelException", "diff": ["-\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5c10feed3cb4c42c1614cdb2a3277f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForConstructor.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(javadocTestClass());", "+\t\treturn buildAllCompliancesTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5c5572e1804cc3b7018cf2dd84bf2d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void testParameterizedTypeMultipleArguments01() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeMultipleArguments01() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedType(unit, \"g1.t.m.def.Generic<? extends Throwable, ? extends Exception, ? extends RuntimeException>\"); //$NON-NLS-1$", "+\t\tResolvedSourceType type = selectParameterizedType(unit, \"g1.t.m.def.Generic<? extends Throwable, ? extends Exception, ? extends RuntimeException>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5c570d999b3bef8c36df41591318f22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r private void addInfoFromOpenCU(CompilationUnit cu, Vector infos) throws JavaModelException", "signatureAfterChange": "\r private void addInfoFromOpenCU(CompilationUnit cu, ArrayList infos) throws JavaModelException", "diff": ["-private void addInfoFromOpenCU(CompilationUnit cu, Vector infos) throws JavaModelException {\r", "+private void addInfoFromOpenCU(CompilationUnit cu, ArrayList infos) throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5dd846b6bca5f6f386303e1b3531dcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClasspathSourceDirectory.java", "commitBeforeChange": "029a8f257514071d898cccd4122bad881aa576bc", "commitAfterChange": "89f5de86dbcff10e0a2f2dafa846f8c01996e885", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public boolean isPackage(String qualifiedPackageName)", "signatureAfterChange": "  public boolean isPackage(String qualifiedPackageName)", "diff": ["-\treturn directoryList(qualifiedPackageName) != null;", "+\treturn directoryTable(qualifiedPackageName) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5fb4460cdb4144e5909ffa93f6c03c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "f63095af3c7deaeee47a62f089307467f872f35e", "commitAfterChange": "6e8431ed2d3ced2183b0880b86a760ea14397f82", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tvoid checkAssignment(BlockScope scope, TypeBinding lhsType, TypeBinding rhsType)", "signatureAfterChange": "  \tvoid checkAssignment(BlockScope scope, TypeBinding lhsType, TypeBinding rhsType)", "diff": ["-\t\t} else if (rhsType.isRawType() && (lhsType.isParameterizedType() || lhsType.isGenericType())) {", "+\t\t} else if (rhsType.isRawType() && (lhsType.isBoundParameterizedType() || lhsType.isGenericType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6128ae10bd0fb314ca62df695b69bb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "5db649aa7f6319e983b1b8212e96ef1bc2c80d3e", "commitAfterChange": "242cc31460930b5ba80be2fa2b85dd3852df2969", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": "\r protected void consumeUnaryExpression(int op, boolean post)", "signatureAfterChange": "\r protected void consumeUnaryExpression(int op, boolean post)", "diff": ["-\t\t\t\t\tendPosition); \r", "+\t\t\t\t\tendStatementPosition); \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c61488e707aaac3197ab1459a3222736", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "3ea68e3d465e2db503f32911235b79fc28e0b277", "commitAfterChange": "cb7e1f0df8a87f2b400ca058ed57dff2a93cd223", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void traverse( \t\t\tIAbstractSyntaxTreeVisitor visitor, \t\t\tBlockScope blockScope)", "signatureAfterChange": "  \tpublic void traverse( \t\t\tIAbstractSyntaxTreeVisitor visitor, \t\t\tBlockScope blockScope)", "diff": ["-\t\t\ttestExpression.traverse(visitor, scope);", "+\t\t\texpression.traverse(visitor, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6252f5f587af56cf9cb430ce9789461", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r \tprivate void findClassField(char[] token, TypeBinding receiverType, Scope scope)", "signatureAfterChange": "\r \r \tprivate void findClassField(char[] token, TypeBinding receiverType, Scope scope)", "diff": ["-\t\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c627b70ec675e52ff4d226da8df10e51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testAddExclusionOnFolderUnderProject() throws CoreException", "signatureAfterChange": " public void testAddExclusionOnFolderUnderProject() throws CoreException", "diff": ["-\t\tassertResourcesEqual(", "+\t\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c64601b7b7c5d8ce001532eea2d7dea7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerStatementsRecoveryTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testStatementsRecovery03() throws CoreException", "signatureAfterChange": " public void testStatementsRecovery03() throws CoreException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c660dca8fa0ebd08a722cc1360deeac8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/CompilerAptTests.java", "commitBeforeChange": "57effdfbf8500b1bf7932afcc270c4183c0fd5bb", "commitAfterChange": "aeba50ed8bce5da37b3a88a633f33265f2c2db1c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void testCompilerOneClassWithSystemCompiler()", "signatureAfterChange": " \tpublic void testCompilerOneClassWithSystemCompiler()", "diff": ["-\t\tcompileOneClass(compiler);", "+\t\tinternalTestGenerateClass(compiler);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c677628d1637ee811f554877982dbafb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " public void if_icmpge(Label lbl)", "signatureAfterChange": " public void if_icmpge(BranchLabel lbl)", "diff": ["-public void if_icmpge(Label lbl) {", "+public void if_icmpge(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6791ddd7533b9ef5d066a76a7af5ba6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tvoid endVisit(AnnotationSingleNameReference argument, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(JavadocSingleNameReference argument, BlockScope scope);", "diff": ["-\tvoid endVisit(AnnotationReturnStatement statement, BlockScope scope);", "-\tvoid endVisit(AnnotationSingleNameReference argument, BlockScope scope);", "+\tvoid endVisit(JavadocReturnStatement statement, BlockScope scope);", "+\tvoid endVisit(JavadocSingleNameReference argument, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c67b891734741120b698405e8df7aaad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/VariableElementImpl.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \t@Override \tpublic boolean hides(Element hiddenElement)", "signatureAfterChange": "  \t@Override \tpublic boolean hides(Element hiddenElement)", "diff": ["-\t\t\treturn null != hider.declaringClass.findSuperTypeWithSameErasure(hidden.declaringClass);", "+\t\t\treturn null != hider.declaringClass.findSuperTypeOriginatingFrom(hidden.declaringClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6801b369b44530a91aa7961558e2d6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexRequest.java", "commitBeforeChange": "e7d0e101e34b7b6ee4b85e7209dafee08091c658", "commitAfterChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprotected void saveIfNecessary(IIndex index, ReadWriteMonitor monitor) throws IOException", "signatureAfterChange": " \tprotected void saveIfNecessary(Index index, ReadWriteMonitor monitor) throws IOException", "diff": ["-\tprotected void saveIfNecessary(IIndex index, ReadWriteMonitor monitor) throws IOException {", "+\tprotected void saveIfNecessary(Index index, ReadWriteMonitor monitor) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6974daa697ae2641a14fa6b3fb4f9a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "8519f54e376591970e5d746e466b43136553fd1a", "commitAfterChange": "e7300caf84c0933510395a99b704d9f077a17655", "methodNumberBeforeChange": 240, "methodNumberAfterChange": 240, "signatureBeforeChange": " \tpublic void test228()", "signatureAfterChange": " \tpublic void test228()", "diff": ["-\t\tthis.runNegativeTest(", "+\t\tthis.runConformTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c69cd6b96dcfabe5e93324ee9de85c96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r public void removeBufferChangedListener(IBufferChangedListener listener)", "signatureAfterChange": "\r public void removeBufferChangedListener(IBufferChangedListener listener)", "diff": ["-\t\tfChangeListeners.removeElement(listener);\r", "+\t\tfChangeListeners.remove(listener);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c69dca5a37d9fef6a047dd94bd9ce715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void test033() throws JavaModelException", "signatureAfterChange": "  public void test033() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, Class, Class), Ljavadoc.methods.tags.BasicTestMethods;, <T:Ljava.lang.Object;U:Ljava.lang.Object;>(Ljava.lang.String;Ljava.lang.Class<TT;>;Ljava.lang.Class<TU;>;)V, bar, (str, clt, clu), \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, Class, Class), Ljavadoc.methods.tags.BasicTestMethods;, <T:Ljava.lang.Object;U:Ljava.lang.Object;>(Ljava.lang.String;Ljava.lang.Class<TT;>;Ljava.lang.Class<TU;>;)V, bar, (str, clt, clu), \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6b9693e1c3703566363d53068f26dcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BindingsCollectorVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void endVisit(BreakStatement node)", "signatureAfterChange": " \tpublic void endVisit(BlockComment node)", "diff": ["+\t */", "+\tpublic void endVisit(BlockComment node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6c531107d27a6d1ae82847d6c299610", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "5dcefe623702748a359807058d8605577453405d", "commitAfterChange": "a8f2b9d6f31a63759a85bef6a1ed8cbb23fbd3fa", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\tcase ScannerHelper.C_LETTER :", "+\t\t\t\t\t\t\tcase ScannerHelper.C_IDENT_PART :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6ddf9d7bd6e10ca7ac13f92663679a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic void resolve(ClassScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(ClassScope upperScope)", "diff": ["-\t\t\tresolveAnnotation();", "+\t\t\tresolveJavadoc();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6fd0d875f9852d333d3ed93776ec4ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/SourcePositionImpl.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      public SourcePositionImpl(final int startingOffset,                               final int length,                               final int line,                               final int column,                               final DeclarationImpl decl)", "signatureAfterChange": "      public SourcePositionImpl(final int startingOffset,                               final int length,                               final int line,                               final int column,                               final EclipseDeclarationImpl decl)", "diff": ["-                              final DeclarationImpl decl)", "+                              final EclipseDeclarationImpl decl)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6fed28bf061d7ecbb39ad04234c6c50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForInnerclass(LocalVariableBinding actualOuterLocalVariable)", "signatureAfterChange": " public FieldBinding addSyntheticFieldForInnerclass(LocalVariableBinding actualOuterLocalVariable)", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c713c28ea1a0d9615b3867146e5cf9ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "commitAfterChange": "75ff04c8b5711fae5cad065b3b4b862839b59cd9", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \tprivate int computeRelevanceForInterface()", "signatureAfterChange": "\r \tprivate int computeRelevanceForInterface()", "diff": ["-\t\treturn 0;\r", "+\t\treturn R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c71bbb2a48698f40d754e0188b4fb65a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testClasspathDeleteNestedRoot() throws CoreException", "signatureAfterChange": " public void testClasspathDeleteNestedRoot() throws CoreException", "diff": ["-\tIJavaProject project = this.createJavaProject(\"P\", new String[] {\"nested/src\"}, new String[] {getExternalJCLPath()}, \"bin\");", "+\tIJavaProject project = this.createJavaProject(\"P\", new String[] {\"nested/src\"}, new String[] {getExternalJCLPathString()}, \"bin\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c739b4a5c13ab881e292b9347798ea50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/Index.java", "commitBeforeChange": "e8fbf4db76f3cb4cdf82ad5223795b2651c6d983", "commitAfterChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic IQueryResult[] queryInDocumentNames(String word) throws IOException", "signatureAfterChange": " \tpublic String[] queryInDocumentNames(String word) throws IOException", "diff": ["-\tpublic IQueryResult[] queryInDocumentNames(String word) throws IOException {", "+\tpublic String[] queryInDocumentNames(String word) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c73dc4f57511fe150901a9ef92fa4ba2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeSignatureTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuiteWithMinimalCompliance(testClass(), F_1_5);", "+\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7447d4522323c228e7ba43726e05d02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tprotected ParameterizedSourceMethod selectParameterizedMethod(ICompilationUnit unit, String selection) throws JavaModelException", "signatureAfterChange": " \tprotected ResolvedSourceMethod selectParameterizedMethod(ICompilationUnit unit, String selection) throws JavaModelException", "diff": ["-\tprotected ParameterizedSourceMethod selectParameterizedMethod(ICompilationUnit unit, String selection) throws JavaModelException {", "+\tprotected ResolvedSourceMethod selectParameterizedMethod(ICompilationUnit unit, String selection) throws JavaModelException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74a2a91dfc07b884517455b97627617", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected void consumeTypeImportOnDemandDeclarationName()", "signatureAfterChange": " protected void consumeTypeImportOnDemandDeclarationName()", "diff": ["-\t// flush annotations defined prior to import statements", "-\treference.declarationSourceEnd = this.flushAnnotationsDefinedPriorTo(reference.declarationSourceEnd);", "+\t// flush comments defined prior to import statements", "+\treference.declarationSourceEnd = this.flushCommentsDefinedPriorTo(reference.declarationSourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c74c7896f2866fe393bb581712658ac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CommitWorkingCopyOperation.java", "commitBeforeChange": "d0954d54228cfe7f2d4640873279833f7ad6ecb1", "commitAfterChange": "906091ec44775df6e15be24da13090f39ca40ebb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected ISchedulingRule getSchedulingRule()", "signatureAfterChange": " \tprotected ISchedulingRule getSchedulingRule()", "diff": ["-\t\treturn getElementToProcess().getParent().getResource();", "+\t\treturn getElementToProcess().getParent().getSchedulingRule();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c755645ec76653700c30a59558394ab0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "2579944d091917e27cee3c25e303d9cdf8721b08", "commitAfterChange": "ff568cfa3818ea8ce091951aa40f00dde1253577", "methodNumberBeforeChange": 720, "methodNumberAfterChange": 721, "signatureBeforeChange": " \tpublic void test701()", "signatureAfterChange": " \tpublic void test701()", "diff": ["-\t\tpreferences.insert_new_line_after_arg_annotation = true;", "+\t\tpreferences.insert_new_line_after_annotation_on_parameter = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7561605efd22a80a9d0263f9a364753", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": " public void if_icmpge(Label lbl)", "signatureAfterChange": " public void if_icmpge(BranchLabel lbl)", "diff": ["-public void if_icmpge(Label lbl) {", "+public void if_icmpge(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c764f30b26056dcab87c29dbb7108b37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public boolean isDefinitelyUnknown(LocalVariableBinding local)", "signatureAfterChange": "  public boolean isDefinitelyUnknown(VariableBinding local)", "diff": ["-public boolean isDefinitelyUnknown(LocalVariableBinding local) {", "+public boolean isDefinitelyUnknown(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c76b3f4de24b26c8468dad19730168c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiterals15Test.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildComplianceRegressionSetupSuite(testClass(), COMPLIANCE_1_5);", "+\treturn buildUniqueComplianceTestSuite(testClass(), COMPLIANCE_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c76dfc03302a539028983fa4af360399", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "db9dfebaf2bb57059c298fd4e86dfeca8f8f76ab", "commitAfterChange": "779b1857b0d7576ef8ddefa7d01c95bb6a719a8e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void recordReturnFrom(UnconditionalFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordReturnFrom(FlowInfo flowInfo)", "diff": ["-\t// TODO: (philippe) should take FlowInfo in argument", "-\tpublic void recordReturnFrom(UnconditionalFlowInfo flowInfo) {", "+\tpublic void recordReturnFrom(FlowInfo flowInfo) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7907b8768340d3ecea538ca7e56444a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/WorkQueue.java", "commitBeforeChange": "81ab8e88e50b279513be5ebcb0e5eee6ed3a5c3c", "commitAfterChange": "52122b3855e6f0a9596ec4f8fb56fcf44094c219", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public boolean isWaiting(SourceFile element)", "signatureAfterChange": "  public boolean isWaiting(SourceFile element)", "diff": ["-\treturn needsCompileList.contains(element);", "+\treturn needsCompileList.includes(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7932d5611bf83c94e2f61eb024b802a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ResolvedLambdaExpression.java", "commitBeforeChange": "7792c069da7693e79a187c977ea9f7a78a8fff7b", "commitAfterChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ResolvedLambdaExpression(JavaElement parent, LambdaExpression unresolved, String uniqueKey)", "signatureAfterChange": "  \tpublic ResolvedLambdaExpression(JavaElement parent, LambdaExpression unresolved, String uniqueKey)", "diff": ["-\t\tsuper(parent, unresolved.name, unresolved.interphase, unresolved.sourceStart, unresolved.sourceEnd, unresolved.arrowPosition, unresolved.lambdaMethod);", "+\t\tsuper(parent, unresolved.resolvedTypeName, unresolved.interphase, unresolved.sourceStart, unresolved.sourceEnd, unresolved.arrowPosition, unresolved.lambdaMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7a4bc39644ad7ab1ad61f86b55af9c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testRenameIncludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRenameIncludedCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7a96627747292be3451b6fe1c44b2bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "ec3a4c33f32cf58050110cfdf8e4a7a59380d854", "commitAfterChange": "de600e80bc6b398dc98185397349cc8cf2c9ff79", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot getPackageFragmentRoot(IPath path)", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot getPackageFragmentRoot(IPath path)", "diff": ["-\t\t\t\treturn getPackageFragmentRoot(path.toOSString());\r", "+\t\t\t\treturn getPackageFragmentRoot0(path.toOSString());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7abed1551584a08bb730955d68419a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProgrammingProblemsTest.java", "commitBeforeChange": "6e5ceb8786f5ada5e37df504e04cd8d390bc4075", "commitAfterChange": "27e2724327c75ddbe7646447a4af212947b149ed", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 79, "signatureBeforeChange": " public void testBug410218d()", "signatureAfterChange": " public void testBug410218d()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_DISCOURAGED_INVOCATION_UNLIKELY_ARGUMENT_NOT_CASTABLE, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_DISCOURAGED_INVOCATION_UNLIKELY_ARGUMENT_TYPE, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7c1f05b2d28c3c5aac411cd79218479", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "bfcd45867d04fefcde8c411b2c4f613fed962f2b", "commitAfterChange": "8360857ac96415dcd60ac94fbc284e7801424ade", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \t \tpublic IFile[] getFilesWithoutAnnotation()", "signatureAfterChange": " \t \tpublic ICompilationParticipantResult[] getFilesWithoutAnnotation()", "diff": ["-\tpublic IFile[] getFilesWithoutAnnotation(){", "+\tpublic ICompilationParticipantResult[] getFilesWithoutAnnotation()", "+\t{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7c8a08e550f09adc28ca86ce83ca19c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic IJavaElement[] getResultElements()", "signatureAfterChange": " \tpublic IJavaElement[] getResultElements()", "diff": ["-\t\treturn fResultElements;", "+\t\treturn resultElements;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7d53fa6e86a2234a53a35db6d7014f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void testParameterizedTypeMultipleArguments02() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeMultipleArguments02() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedType(unit, \"Generic<? extends Throwable, ? extends Exception, ? extends RuntimeException>.Member\"); //$NON-NLS-1$", "+\t\tResolvedSourceType type = selectParameterizedType(unit, \"Generic<? extends Throwable, ? extends Exception, ? extends RuntimeException>.Member\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7e12abb16e3c9df768530c7c37d2470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic boolean visit(MemberTypeDeclaration memberTypeDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration memberTypeDeclaration, ClassScope scope)", "diff": ["-\tpublic boolean visit(MemberTypeDeclaration memberTypeDeclaration, ClassScope scope) {", "+\tpublic boolean visit(TypeDeclaration memberTypeDeclaration, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8072bb2e68b01f0f0c3dc329128e8ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "f1be73585a15718b8d7e7bfcd6517de46dc0a4a4", "commitAfterChange": "c5f13d0ee9ef1590b509e21fa6cb7160b90c28f0", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "signatureAfterChange": " \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "diff": ["-\t\tJavaModelManager.getJavaModelManager().deltaState.performClasspathResourceChange(", "+\t\tJavaModelManager.getJavaModelManager().deltaState.updateProjectReferences("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c81be2aa74f036ea67b586f7033d5098", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic void test069()", "signatureAfterChange": " \tpublic void test069()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c82046ff7e0d2452bc0099271490919e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void testMissingInterface() throws JavaModelException", "signatureAfterChange": " public void testMissingInterface() throws JavaModelException", "diff": ["-\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8210b1f84b54bcd42f138d295fa169b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "616a41b14ead174db92c630ec6ed7f1d666a9b67", "commitAfterChange": "645b7eff21d5db2b90380f1d4478beb9fa33f107", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testIncludePartOfAnotherProject3() throws JavaModelException", "signatureAfterChange": " \tpublic void testIncludePartOfAnotherProject3() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION, IMarker.SEVERITY_ERROR)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c82dd4b4d2e48ad7aa17d2bbe58dc49b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 141, "methodNumberAfterChange": 141, "signatureBeforeChange": " public static TypeBinding getConstantPoolDeclaringClass(Scope currentScope, MethodBinding codegenBinding, TypeBinding actualReceiverType, boolean isImplicitThisReceiver)", "signatureAfterChange": " public static TypeBinding getConstantPoolDeclaringClass(Scope currentScope, MethodBinding codegenBinding, TypeBinding actualReceiverType, boolean isImplicitThisReceiver)", "diff": ["-\t\t\t\tif (!actualReceiverType.isIntersectionCastType()) // no constant pool representation. FIXME, visibility issue not handled.", "+\t\t\t\tif (!actualReceiverType.isIntersectionType18()) // no constant pool representation. FIXME, visibility issue not handled."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c83b45e7b62a4f0eba717ba5fb3f92b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "693fb44154a24092511665e46f28ca3b1079d5a6", "commitAfterChange": "86294174b1b6db50df1742d660a3c76831e25b69", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "signatureAfterChange": " \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "diff": ["-\t\t\tthis.newResolvedPath = jproject.getResolvedClasspath(this.newRawPath, true, this.canChangeResource);", "+\t\t\tthis.newResolvedPath = jproject.getResolvedClasspath(this.newRawPath, true, this.needValidation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c84fd1adba6b725e76dedf26564afb3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\tif (verifier.doesMethodOverride(matchingMethod.original(), currentMethod.original())) {", "+\t\t\t\t\t\t\tif (verifier.isParameterSubsignature(matchingMethod.original(), currentMethod.original())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c860b1c776703dfcf6deb1eeb0660d33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "8d1ff9b80d2587df4aa2d0a1ee1f5a75472a5feb", "commitAfterChange": "625e6a1264761bd4361336704c7e67e6666444a5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tpublic void addProblemClinit(IProblem[] problems)", "signatureAfterChange": "\r \tpublic void addProblemClinit(IProblem[] problems)", "diff": ["-\t\t\t\t\t.problemReporter()\r", "+\t\t\t\t\t.environment()\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c86cdac04f879635a723e1826c906810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testRemoveExclusionOnCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRemoveExclusionOnCompilationUnit() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c87dd3ed0b0d0b48c10fa9170c72cc53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void testCreateResourceIncludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testCreateResourceIncludedCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c88c7cd921bb3ce2c9174d9764ba3688", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "e5bce80011e3833bbea45afb8cd4fb116b193fc5", "commitAfterChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic ITypeBinding getSuperclass()", "signatureAfterChange": " \tpublic ITypeBinding getSuperclass()", "diff": ["-\t\t} catch (AbortCompilation e) {", "-\t\t\t// in case the superclass cannot be resolvable due to missing jars on the classpath", "-\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t} catch (RuntimeException e) {", "+\t\t\t/* in case a method cannot be resolvable due to missing jars on the classpath", "+\t\t\t * see https://bugs.eclipse.org/bugs/show_bug.cgi?id=57871", "+\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=63550", "+\t\t\t * https://bugs.eclipse.org/bugs/show_bug.cgi?id=64299", "+\t\t\t */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c89dcf332690ab3977ca4653ac0ac0aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a2ea0fcdb64df5f36a0bf2ffec84669e3f62dfd4", "commitAfterChange": "9db80bfa8f5d6f7bab214c95a4d83c3bdedb2628", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " public boolean compile(String[] argv)", "signatureAfterChange": " public boolean compile(String[] argv)", "diff": ["-\t} catch (InvalidInputException e) {", "+\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8a593cad1d45e903f0b0497d1905a0d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelOperation.java", "commitBeforeChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "commitAfterChange": "da25131cabd17a48ed55149d76a1e2be2aabb378", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected void addReconcileDelta(IWorkingCopy workingCopy, IJavaElementDelta delta)", "signatureAfterChange": " \tprotected void addReconcileDelta(ICompilationUnit workingCopy, IJavaElementDelta delta)", "diff": ["-\tprotected void addReconcileDelta(IWorkingCopy workingCopy, IJavaElementDelta delta) {", "+\tprotected void addReconcileDelta(ICompilationUnit workingCopy, IJavaElementDelta delta) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8a7a1a4c806484d7351b6ce36b8318b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public void test034() throws JavaModelException", "signatureAfterChange": "  public void test034() throws JavaModelException", "diff": ["-\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"bar[METHOD_REF]{bar(String, boolean, Object), Ljavadoc.methods.tags.BasicTestMethods;, (Ljava.lang.String;ZLjava.lang.Object;)V, bar, (str, flag, obj), \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8bf3d53522f99955e77eeebcf0c7ba6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "cc18accc7d49242c34a27d7a710b30dfb8eb93fe", "commitAfterChange": "10cbf20528829577e04f7da1a3409b5b0c7af32b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public String[] getParameterNames() throws JavaModelException", "signatureAfterChange": " public String[] getParameterNames() throws JavaModelException", "diff": ["- \t\t\t\tString option = this.getJavaProject().getOption(JavaCore.CODEASSIST_TIMEOUT_FOR_PARAMETER_NAME_FROM_ATTACHED_JAVADOC, true);", "+ \t\t\t\tString option = this.getJavaProject().getOption(JavaCore.TIMEOUT_FOR_PARAMETER_NAME_FROM_ATTACHED_JAVADOC, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ca41fb36c5f9c33463fcd3196700d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a73c1b70646c33788c416636d54ca7b824b36c44", "commitAfterChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "methodNumberBeforeChange": 317, "methodNumberAfterChange": 317, "signatureBeforeChange": "  \tpublic void test297()", "signatureAfterChange": "  \tpublic void test297()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, \"4\");", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, \"4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d4a121ba91d13f2e1467d12657d1c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "diff": ["-\t\treturn (initializer.bits & ASTNode.HasLocalTypeMASK) != 0; // continue only if it has local type", "+\t\treturn (initializer.bits & ASTNode.HasLocalType) != 0; // continue only if it has local type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8d72dcb44d68f9f6eec8e8c1075fe18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationExpression.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tVariableDeclarationExpression(AST ast)", "signatureAfterChange": " \tVariableDeclarationExpression(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8e75093e9495c1f0f9aa61e3e4dbdab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/modifying/ASTRewritingModifyingTest.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void setUpSuite() throws Exception", "signatureAfterChange": " \t \tpublic void setUpSuite() throws Exception", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, \"4\");", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, \"4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8eaea379625d850c4f6e61486ab3fd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRootInfo.java", "commitBeforeChange": "94a425e221148886c840b4d545bf87183980be4b", "commitAfterChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static Object[] computeFolderNonJavaResources(IPackageFragmentRoot root, IContainer folder, char[][] inclusionPatterns, char[][] exclusionPatterns) throws JavaModelException", "signatureAfterChange": " static Object[] computeFolderNonJavaResources(IPackageFragmentRoot root, IContainer folder, char[][] inclusionPatterns, char[][] exclusionPatterns) throws JavaModelException", "diff": ["-\t\tif (ExternalFoldersManager.isExternal(folder.getFullPath())) {", "+\t\tif (ExternalFoldersManager.isInternalPathForExternalFolder(folder.getFullPath())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f1aaee6861fdc05169ddf899fef0bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ImportContainer.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected ImportContainer(ICompilationUnit parent)", "signatureAfterChange": " protected ImportContainer(CompilationUnit parent)", "diff": ["-protected ImportContainer(ICompilationUnit parent) {", "+protected ImportContainer(CompilationUnit parent) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8f9c4fbe7114aea9cb0ed81661ff187", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/PreferencesTests.java", "commitBeforeChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "commitAfterChange": "bc498b88d907a470b6f3dd533c50f2d8844848a6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void testFactoryPathEncodingAndDecoding() throws Exception", "signatureAfterChange": " \t \tpublic void testFactoryPathEncodingAndDecoding() throws Exception", "diff": ["-\t\tFactoryContainer pluginFactory = FactoryPath.newPluginFactoryContainer(\"org.eclipse.jdt.apt.tests\"); //$NON-NLS-1$", "+\t\tFactoryContainer pluginFactory = FactoryPath.getPluginFactoryContainer(\"org.eclipse.jdt.apt.tests\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9004f563c428390fb5325951914c496", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "     public char[] signature()", "signatureAfterChange": "     public char[] signature()", "diff": ["-\t        switch (this.kind) {", "+\t        switch (this.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9026ada84dee0d5f4ed537f68d4e129", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 158, "signatureBeforeChange": " public void invalidUsageOfEnumDeclarations(EnumDeclaration enumDeclaration)", "signatureAfterChange": " public void invalidUsageOfEnumDeclarations(TypeDeclaration enumDeclaration)", "diff": ["-public void invalidUsageOfEnumDeclarations(EnumDeclaration enumDeclaration) {", "+public void invalidUsageOfEnumDeclarations(TypeDeclaration enumDeclaration) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c91b367c9831cb8aa217d73759cfad67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " public void testReconcileParticipant11() throws CoreException", "signatureAfterChange": " public void testReconcileParticipant11() throws CoreException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c936ba1812a55ff2a5a0ad56e06748ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "458161dc550c876a0d717a9a36eda696046c367f", "commitAfterChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public MatchingNodeSet(MatchLocator locator)", "signatureAfterChange": "  public MatchingNodeSet(MatchLocator locator)", "diff": ["-\tthis.matchContainer = locator.pattern.matchContainer();", "+\tthis.matchContainer = locator.patternLocator.matchContainer();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c93c1425ad5c4cd0dc4d6a604ad29d58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic boolean visit(NumberLiteral node)", "signatureAfterChange": " \tpublic boolean visit(MethodRef node)", "diff": ["+\t */", "+\tpublic boolean visit(MethodRef node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c951c61ccc1d0affd5860bbf2da169aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic void endVisit(VariableDeclarationExpression node)", "signatureAfterChange": " \tpublic void endVisit(UnionType node)", "diff": ["+\tpublic void endVisit(UnionType node) {", "+\t\tendVisitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9561a3b8ab1c407c1bff4c27749ae22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void match(MethodDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(MethodDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "+\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c958ec1e2b046455032530561ec02431", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArraySingleTypeReference.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void reportDeprecatedType(Scope scope)", "signatureAfterChange": " \tprotected void reportDeprecatedType(Scope scope)", "diff": ["-\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, this, scope.getModifiers());", "+\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, this, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c95aa43b7deae63e14900aa9f68e40b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public double getLoadFactor()", "signatureAfterChange": " public double getLoadFactor()", "diff": ["-\treturn fLoadFactor;", "+\treturn loadFactor;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c96010f16caa532af7d5cde0ec6a83ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 111, "methodNumberAfterChange": 111, "signatureBeforeChange": "  public void test142() throws JavaModelException", "signatureAfterChange": "  public void test142() throws JavaModelException", "diff": ["-\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9656de87e3b0a2323a18d8834ec9c12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic boolean visit(AnnotationArrayQualifiedTypeReference typeRef, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(JavadocSingleTypeReference typeRef, BlockScope scope)", "diff": ["-\tpublic boolean visit(AnnotationArrayQualifiedTypeReference typeRef, BlockScope scope) {", "+\tpublic boolean visit(JavadocSingleTypeReference typeRef, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c968d1609596a92639a01725864e7521", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " public void testBug118397a() throws JavaModelException", "signatureAfterChange": " public void testBug118397a() throws JavaModelException", "diff": ["-\t\t\"bugs.b118397[PACKAGE_REF]{bugs.b118397, bugs.b118397, null, null, null, \"+this.positions+R_DICQNR+\"}\"", "+\t\t\"bugs.b118397[PACKAGE_REF]{bugs.b118397, bugs.b118397, null, null, null, \"+this.positions+R_DRICQNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c974b95ae50c55422ce25a6112a7151c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "commitAfterChange": "882f4a412452cbe6d8e04ad004cc47e303c5c4e3", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void test0045() throws JavaModelException", "signatureAfterChange": " \tpublic void test0045() throws JavaModelException", "diff": ["-\t\tIMethodBinding genericMethod = methodBinding.getGenericMethod();", "+\t\tIMethodBinding genericMethod = methodBinding.getMethodDeclaration();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9793d23fc6a542c8970b90fbcfaedfe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/StringLiteral.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void setEscapedValue(String token)", "signatureAfterChange": "  \tpublic void setEscapedValue(String token)", "diff": ["-\t\t\t\tcase Scanner.TokenNameStringLiteral:", "+\t\t\t\tcase TerminalTokens.TokenNameStringLiteral:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c98f4329e2e1a24fd9eb628ee8ace63d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/jdom/DOMFactory.java", "commitBeforeChange": "ab36391231f1ea61e75e0e00b3dc8ffe91eda55e", "commitAfterChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public IDOMInitializer createInitializer()", "signatureAfterChange": "\r public IDOMInitializer createInitializer()", "diff": ["-\treturn createInitializer(\"static {}\"+ JavaModelManager.LINE_SEPARATOR); //$NON-NLS-1$\r", "+\treturn createInitializer(\"static {}\"+ Util.LINE_SEPARATOR); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c993374dd4e98d2e572e4aaf784fdb35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "d2c6e09fd7868d1402c2dcbad0a2d193f1881aad", "commitAfterChange": "23df6bbbb36a9f50a63aa5ce59d1913148166f08", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " \tpublic boolean visit(NormalAnnotation node)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation node)", "diff": ["-\t\t\t\tint startOffset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameLESS, pos);", "+\t\t\t\tint startOffset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameLPAREN, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c99a41cf221ad7683ba96e52bfdbcd3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected String generateSyntaxIncorrectAST()", "signatureAfterChange": " protected String generateSyntaxIncorrectAST()", "diff": ["-\tASTParser parser = ASTParser.newParser(AST.JLS3);", "+\tASTParser parser = ASTParser.newParser(AST.JLS4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9af5575360e78ebc6ebb789a385c26b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/CompilationParticipantResult.java", "commitBeforeChange": "6e248fbfaad61025fb5f034d3348f55e4a82260f", "commitAfterChange": "3f87341ee231e4ed59ae13f0d98074299f4d2bc9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void recordNewProblems(IProblem[] newProblems)", "signatureAfterChange": "  public void recordNewProblems(IProblem[] newProblems)", "diff": ["-\t\tSystem.arraycopy(this.problems, 0, merged, 0, length1);", "-\tSystem.arraycopy(problems, 0, merged, length1, length2);", "+\t\tSystem.arraycopy(this.problems, 0, merged, 0, length1);\t", "+\tSystem.arraycopy(newProblems, 0, merged, length1, length2);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9b535f0f9e46bf2f257e328e679b21d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "af611344f45ed75fde1b18f8c5abcb58f8227db0", "commitAfterChange": "b2ae5b84e851673c2a38346fddf34788249a797b", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tRootInfo rootInfo, \t\tOutputInfo outputInfo)", "signatureAfterChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tRootInfo rootInfo, \t\tOutputInfo outputInfo)", "diff": ["-\t\t\t\t\t\t&& this.hasJavaNature(rscProject)) { // delta iff Java project (18698)", "+\t\t\t\t\t\t&& JavaProject.hasJavaNature(rscProject)) { // delta iff Java project (18698)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9c13a0e5aff7b663559562d5338019a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException", "signatureAfterChange": "\r public HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException", "diff": ["-\tpublic HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException {\r", "-\t\tthis.hierarchy = hierarchy;\r", "-\t\tJavaProject project = (JavaProject) hierarchy.javaProject();\r", "-\t\tthis.searchableEnvironment =\r", "-\t\t\t(SearchableEnvironment) project.getSearchableNameEnvironment();\r", "-\t\tthis.nameLookup = project.getNameLookup();\r", "-\t\tthis.hierarchyResolver =\r", "-\t\t\tnew HierarchyResolver(this.searchableEnvironment, this, new ProblemFactory());\r", "-\t\tthis.infoToHandle = new Hashtable(5);\r", "+public HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException {\r", "+\tthis.hierarchy = hierarchy;\r", "+\tJavaProject project = (JavaProject)hierarchy.javaProject();\r", "+\tthis.searchableEnvironment = (SearchableEnvironment)project.getSearchableNameEnvironment();\r", "+\tthis.nameLookup = project.getNameLookup();\r", "+\tthis.hierarchyResolver = \r", "+\t\tnew HierarchyResolver(this.searchableEnvironment, this, new DefaultProblemFactory());\r", "+\tthis.infoToHandle = new Hashtable(5);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9ddbd478d43f53890e894e775ef56e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 261, "methodNumberAfterChange": 261, "signatureBeforeChange": " public void newJavaLangError()", "signatureAfterChange": " public void newJavaLangError()", "diff": ["-\twriteUnsignedShort(constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangErrorConstantPoolName));", "+\twriteUnsignedShort(constantPool.literalIndexForType(ConstantPool.JavaLangErrorConstantPoolName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9ee7979e2f095c2f55b5293213fbb7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d48c25cb976d99917f58b366198a77010dd2d678", "commitAfterChange": "e0794fcfb44a17efaa6223129a8b32f7f36f63a6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic JavaProject(IProject project, JavaElement parent)", "signatureAfterChange": "  \tpublic JavaProject(IProject project, JavaElement parent)", "diff": ["-\t\tthis.fProject = project;", "+\t\tthis.project = project;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9f253f37e1bddb196b409bdb590dd2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static IJavaSearchScope createWorkspaceScope()", "signatureAfterChange": " \tpublic static IJavaSearchScope createWorkspaceScope()", "diff": ["-\t\treturn SearchBasicEngine.createWorkspaceScope();", "+\t\treturn BasicSearchEngine.createWorkspaceScope();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9fa6eba7605b9ae3c0d053a69080d38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "6f6bc9d0562d23a055ee9e986cf21155795a29ff", "commitAfterChange": "7f289b483e1414e7141e9f94307fbe445e3b1b34", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "          private void print(SourcePosition pos,     \t\t\t\t   Severity severity,     \t\t\t\t   String msg,     \t\t\t\t   String[] arguments)", "signatureAfterChange": "          private void print(SourcePosition pos,     \t\t\t\t   Severity severity,     \t\t\t\t   String msg,     \t\t\t\t   String[] arguments)", "diff": ["-    \t_env.addProblem(resource, offset, -1, severity, msg, pos.line(), arguments );   ", "+    \t_env.addMessage(resource, offset, -1, severity, msg, pos.line(), arguments );   "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0d087270c15ad72dc8a7c2372d0d18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " public void ifeq(Label lbl)", "signatureAfterChange": " public void ifeq(BranchLabel lbl)", "diff": ["-public void ifeq(Label lbl) {", "+public void ifeq(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca2175718ec3a84d19abc7c50d7cf0ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "6e5ceb8786f5ada5e37df504e04cd8d390bc4075", "commitAfterChange": "27e2724327c75ddbe7646447a4af212947b149ed", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static String[] warningOptionNames()", "signatureAfterChange": " \tpublic static String[] warningOptionNames()", "diff": ["-\t\t\tOPTION_ReportDiscouragedInvocationArgumenNotCastable"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca37973df7ac49a3d12b1e83bfdfe4fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "6e47268ed79fd7b89fd58e0a5c1b77470c0792ef", "commitAfterChange": "dcb63c7bea407ce9399b33fb2441f8ca456fabd4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tpublic static IPath getClasspathVariable(String variableName)", "signatureAfterChange": "\r \tpublic static IPath getClasspathVariable(String variableName)", "diff": ["-\t\t\t\tif (JavaModelManager.VARIABLE_VERBOSE){\r", "+\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca399922965a26e9957e6f7e83b1ad43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void testBug139621g() throws JavaModelException", "signatureAfterChange": " public void testBug139621g() throws JavaModelException", "diff": ["-\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"Object[TYPE_REF]{Object, java.lang, Ljava.lang.Object;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca4905559ed95f467e6ef18cd16588ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "commitAfterChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected void updateTimestamp(LRUCacheEntry entry)", "signatureAfterChange": " protected void updateTimestamp(LRUCacheEntry entry)", "diff": ["-\t\tentry._fTimestamp = timestampCounter++;", "+\t\tentry.timestamp = timestampCounter++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca67a20b162758393671aad2a4b31962", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "93bc0d951e48394510778784a6576e0cbdd0b011", "commitAfterChange": "acf3a26522921b6196008a4f32a444524804e381", "methodNumberBeforeChange": 447, "methodNumberAfterChange": 447, "signatureBeforeChange": " public void notAnnotationType(TypeBinding actualType, ASTNode location)", "signatureAfterChange": " public void notAnnotationType(TypeBinding actualType, ASTNode location)", "diff": ["-\t\t\tIProblem.NotAnnoationType,", "+\t\t\tIProblem.NotAnnotationType,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca80b09498d8fb92473b5777b75de3f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/APTTestBase.java", "commitBeforeChange": "b9128093e8302bc6585f51afb5cbfa4db580aa85", "commitAfterChange": "8036c2dbcd62f164037a717d38250a661a02697b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprotected void expectingNoMarkers(IPath path)", "signatureAfterChange": " \t \tprotected void expectingNoMarkers(IPath path)", "diff": ["-\t\tfinal IMarker[] markers = getAPTBuildMarkerFor(path);", "+\t\tfinal IMarker[] markers = getAllAPTMarkers(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca81f3311c95c110afcb39ecb230d92e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": "  public void test147() throws JavaModelException", "signatureAfterChange": "  public void test147() throws JavaModelException", "diff": ["-\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca905b00211ce3ca8c8becaa5be93143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "signatureAfterChange": "\r \r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "diff": ["-\t\t\tif (options.checkVisibilitySensitive()\r", "+\t\t\tif (options.checkVisibility()\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caad3d8088fa3c952b0dace021561a91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "b1c9e63084b7d42e8d8b14bb2610be44608ffc47", "commitAfterChange": "33dafb1af80258bb504985f1e91897db16c56ed8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static CodeFormatter createCodeFormatter(Map options)", "signatureAfterChange": " \tpublic static CodeFormatter createCodeFormatter(Map options)", "diff": ["-\t\treturn createCodeFormatter(options, 0);", "+\t\treturn createCodeFormatter(options, M_FORMAT_NEW);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cab06b6db753a811d8255e54aeaae203", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredUnit.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public CompilationUnitDeclaration updatedCompilationUnitDeclaration()", "signatureAfterChange": " public CompilationUnitDeclaration updatedCompilationUnitDeclaration()", "diff": ["-\t\t\tif ((typeDecl.bits & ASTNode.IsLocalTypeMASK) == 0){", "+\t\t\tif ((typeDecl.bits & ASTNode.IsLocalType) == 0){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cad34a195c156dd048ec2f267d9e4b87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " public void test108() throws JavaModelException", "signatureAfterChange": " public void test108() throws JavaModelException", "diff": ["-\t\t\t\"foo[JAVADOC_FIELD_REF]{{@link ZBasicTestTypes#foo}, Ljavadoc.types.ZBasicTestTypes;, I, foo, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\t\"foo[JAVADOC_FIELD_REF]{{@link ZBasicTestTypes#foo}, Ljavadoc.types.ZBasicTestTypes;, I, foo, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cae824cfe532837f247c73a0cf90b717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t    if ((originalBinding.type.tagBits & TagBits.HasTypeVariable) != 0 && runtimeTimeType.id != T_Object) {", "+\t\t\t    if ((originalBinding.type.tagBits & TagBits.HasTypeVariable) != 0 && runtimeTimeType.id != T_JavaLangObject) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caf00f527ac8a7b2b94039cd3b591236", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": "\r final public void if_acmpne(Label lbl)", "signatureAfterChange": "\r final public void if_acmpne(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_if_acmpne, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_if_acmpne, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cafba37509b638fe7ea3c1a8bc2faadd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r \tprivate int computeRelevanceForClass()", "signatureAfterChange": "\r \tprivate int computeRelevanceForClass()", "diff": ["-\t\t\treturn CLASSRELEVANCE;\r", "+\t\t\treturn R_CLASS;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb0f3752660ca357981c3fefccf0203e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public void testBug114341c() throws JavaModelException", "signatureAfterChange": "  public void testBug114341c() throws JavaModelException", "diff": ["-\t\t\"Secondary.Member[TYPE_REF]{Member, javadoc.text, Ljavadoc.text.Secondary$Member;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"Secondary.Member[TYPE_REF]{Member, javadoc.text, Ljavadoc.text.Secondary$Member;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb14314611dc03c135e9965f0152062d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \t\tpublic boolean match(PostfixExpression node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(MethodRefParameter node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(MethodRefParameter node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb23f070be7abed78405eea2ad3f52f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tvoid manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " \tvoid manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0)\t{", "+\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0)\t{"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb2496805fabc433913ebbb178f058d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void markAsDefinitelyNonNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyNonNull(VariableBinding local)", "diff": ["-", "-public void markAsDefinitelyNonNull(LocalVariableBinding local) {", "+public void markAsDefinitelyNonNull(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb2ec3f1124685282b5423198676aadc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " protected void consumeInterfaceDeclaration()", "signatureAfterChange": " protected void consumeInterfaceDeclaration()", "diff": ["-\ttypeDecl.declarationSourceEnd = flushAnnotationsDefinedPriorTo(endStatementPosition); ", "+\ttypeDecl.declarationSourceEnd = flushCommentsDefinedPriorTo(endStatementPosition); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb33227e596655cbb4a1e1cb3ba97096", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 449, "methodNumberAfterChange": 449, "signatureBeforeChange": " \tpublic void test430()", "signatureAfterChange": " \tpublic void test430()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_BLOCK_BRACE_POSITION, DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_BRACE_POSITION_FOR_BLOCK, DefaultCodeFormatterConstants.NEXT_LINE_ON_WRAP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb4b656f612047d6252f454420a778ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void testRenameResourceExcludedPackage() throws CoreException", "signatureAfterChange": " public void testRenameResourceExcludedPackage() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb4c1d16102800f61dfe2b6c5752ad9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleName.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void setIdentifier(String identifier)", "signatureAfterChange": "  \tpublic void setIdentifier(String identifier)", "diff": ["-\t\t\t\tcase Scanner.TokenNameIdentifier:", "+\t\t\t\tcase TerminalTokens.TokenNameIdentifier:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb4d9ce08e118be1a5a1f5ceb86e1e2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/PreferencesTests.java", "commitBeforeChange": "0820eec9945610037c75b7f3c6bc13a32acbc80c", "commitAfterChange": "4fb4651d7a5f975649614980f56a713ca0cbf39d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void testGenSrcDir() throws Exception", "signatureAfterChange": " \t \tpublic void testGenSrcDir() throws Exception", "diff": ["-\t\tassertEquals(AptCorePreferenceInitializer.DEFAULT_GENERATED_SOURCE_FOLDER_NAME, genSrcDir);", "+\t\tassertEquals(AptPreferenceConstants.DEFAULT_GENERATED_SOURCE_FOLDER_NAME, genSrcDir);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb551fe163a520184ad84d7550c6e06e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefClassErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefClassErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb7f78ca14b216b4a64c1caa99445ae3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "834d43c8a6ac5f159a487c1c2a9a5b14b35b4864", "commitAfterChange": "ef84f5fab4e549d913d92933638d556ae1ceefd2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\tString[] paths = index.queryInDocumentNames(\"\"); // all file names //$NON-NLS-1$", "+\t\t\tString[] paths = index.queryDocumentNames(\"\"); // all file names //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb8887612a8e3784a95547befc788dd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "eef75e8cff97a0c4a6156f3b48d037bb0a5a8b17", "commitAfterChange": "7cfd16cce02bf6c15cc69b5ed56b855234dd7ed5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean recordLineSeparator, String sourceLevel, String complianceLevel)", "signatureAfterChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean recordLineSeparator, String sourceLevel, String complianceLevel)", "diff": ["-\t\tif (complianceLevelValue == 0) complianceLevelValue = ClassFileConstants.JDK1_3; // fault-tolerance", "+\t\tif (complianceLevelValue == 0) complianceLevelValue = ClassFileConstants.JDK1_4; // fault-tolerance"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb963e7f93459ba99d0e1d4b7c564cdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  protected void initialize()", "signatureAfterChange": "  protected void initialize()", "diff": ["-\tthis.pathRestrictions = new AccessRestriction[1];", "+\tthis.pathRestrictions = new AccessRuleSet[1];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbb26701e9707b3c5650e5a4b81d59de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "signatureAfterChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\t&& lookupEnvironment.methodVerifier().doesMethodOverride(otherMethod, method)) {", "+\t\t\t\t\t\t&& lookupEnvironment.methodVerifier().isMethodSubsignature(otherMethod, method)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd13338e5b7997eb2000b5754b7c488", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModifyingResourceTests.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected IFile editFile(String path, String content) throws CoreException", "signatureAfterChange": " protected IFile editFile(String path, String content) throws CoreException", "diff": ["-\tfile.setContents(input, IFile.FORCE, null);", "+\tfile.setContents(input, IResource.FORCE, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbe4afe034f0ba7e337fd0f6a9db9e1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testFocusWithLocalAndAnonymousTypes() throws JavaModelException", "signatureAfterChange": " public void testFocusWithLocalAndAnonymousTypes() throws JavaModelException", "diff": ["-\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbee2f40cc242400bd0d12ece3dbae6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "commitAfterChange": "da25131cabd17a48ed55149d76a1e2be2aabb378", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "signatureAfterChange": " \tpublic int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "diff": ["-\t\t\t\tIJavaElement originalElement = workingCopy.getOriginalElement();", "+\t\t\t\tIJavaElement originalElement = workingCopy.getPrimary();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbffdeea7373c8aa294b988e36bc7a3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public int resolveLevel(Binding binding)", "signatureAfterChange": " public int resolveLevel(Binding binding)", "diff": ["-\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).original;", "+\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc01659d388ae3ad953173f5303aa30d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "1d93c592655130ee83ccf569199d32491937354e", "commitAfterChange": "b60bff4501141ce0e7ed5fab43805b77b52b5e19", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t public void build(boolean computeSubtypes)", "signatureAfterChange": " \t public void build(boolean computeSubtypes)", "diff": ["-\t\tif (this.hierarchy.type == null || computeSubtypes) {", "+\t\tif (this.hierarchy.focusType == null || computeSubtypes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc0b11ed9345b51edb50e459809f19c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": " public void ifnull(Label lbl)", "signatureAfterChange": " public void ifnull(BranchLabel lbl)", "diff": ["-public void ifnull(Label lbl) {", "+public void ifnull(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc0dde77f3c843ab408630be67b64566", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void testInvalidTagsFieldNoSupport()", "signatureAfterChange": " \tpublic void testInvalidTagsFieldNoSupport()", "diff": ["-\t\trunConformTest(InvalidReferencesFieldJavadocComments);", "+\t\trunConformTest(FIELDS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc219389960391ac43127431576bcf59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \t \tpublic NormalAnnotation convert(org.eclipse.jdt.internal.compiler.ast.NormalAnnotation annotation)", "signatureAfterChange": " \t \tpublic NormalAnnotation convert(org.eclipse.jdt.internal.compiler.ast.NormalAnnotation annotation)", "diff": ["-\t\t\tnormalAnnotation.resolveAnnotation();", "+\t\t\tnormalAnnotation.resolveAnnotationBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc2460a01b2d8982fdef079d8ccc71d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "signatureAfterChange": " \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "diff": ["-\t\t\ttabWidthVal= Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE));", "+\t\t\ttabWidthVal= Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc264b925001455302f9b9778f94ee8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreatePackageFragmentOperation.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void executeOperation() throws JavaModelException", "signatureAfterChange": " protected void executeOperation() throws JavaModelException", "diff": ["-\t\tIContainer parentFolder = (IContainer) root.getResource();", "+\t\tIContainer parentFolder = (IContainer) root.resource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc2d843e6d76f32f6548ad852ec15d40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "0f2bcb9853eb25fef3d26daa6737dcdc0dcad109", "commitAfterChange": "675cddfe47d2b627c175c8cfe6727e8305420ff8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, int includeMask)", "signatureAfterChange": " \tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, int includeMask)", "diff": ["-\t\t\t\t\tif (projectsToBeAdded.remove(element)) {", "+\t\t\t\t\tif (projectsToBeAdded.contains(element)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc2fbe1dfe8ee6c28c9ac248ab2624fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tprotected JavaSearchPattern(int patternKind, int matchRule)", "signatureAfterChange": "  \tprotected JavaSearchPattern(int patternKind, int matchRule)", "diff": ["-\t\tthis.isCamelCase = (rule & R_CAMELCASE_MATCH) != 0;", "+\t\tthis.isCamelCase = (rule & R_CAMEL_CASE_MATCH) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc375a0b703e2dda9a42f55be555b8bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName)", "signatureAfterChange": " \t \tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName)", "diff": ["-\tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName) {", "+\tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc486eb98569f25c338d857a95cc4e8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \t\tpublic boolean match(TypeLiteral node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(TagElement node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(TagElement node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc49186e473f5e968263df71c62299b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "commitAfterChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " \tpublic ZipFile getZipFile(IPath path) throws CoreException", "signatureAfterChange": " \tpublic ZipFile getZipFile(IPath path) throws CoreException", "diff": ["-\t\t\tthrow new CoreException(new Status(Status.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"status.IOException\"), e)); //$NON-NLS-1$", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"status.IOException\"), e)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc4cfec8875de16db85feb69896812f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6dc2c6292eeb29ab819c1296b12d7a61265835da", "commitAfterChange": "d3d9c65ab8eabcabeb66c720711bcaf713684a64", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 48, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getExpandedClasspath(\r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError)\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getExpandedClasspath(\r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError)\tthrows JavaModelException", "diff": ["-\t\tcomputeExpandedClasspath(this, ignoreUnresolvedVariable, generateMarkerOnError, new Hashtable(5), accumulatedEntries);\r", "+\t\tcomputeExpandedClasspath(this, ignoreUnresolvedVariable, generateMarkerOnError, new ObjectSet(5), accumulatedEntries);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc5ba66559daf3611dc20027515152bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "c67e828d3788591f96003d3b6db18c20724f7bf4", "commitAfterChange": "31085e35ec6546fd0ce14d2c37082b7385a37318", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tfinal List internalGetChildListProperty(ChildListPropertyDescriptor property)", "signatureAfterChange": " \tfinal List internalGetChildListProperty(ChildListPropertyDescriptor property)", "diff": ["-\t\tif (property == EXTRA_DIMENSION_INFOS_PROPERTY) {", "+\t\tif (property == EXTRA_DIMENSIONS2_PROPERTY) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc63ecb7c2e1b11832e53ae0c9a59e19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "7cd8d4cd3f07fb844c8ea150f6fb9724f3e46dcf", "commitAfterChange": "89234b4d1eb7fc153ecbcc19fc64f47a51c3398d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "  protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isSecondaryType) throws CoreException", "signatureAfterChange": "  protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isSecondaryType) throws CoreException", "diff": ["-\t\tif (isClassFileChanged(file, qualifiedFileName, bytes)) {", "+\t\tif (writeClassFileCheck(file, qualifiedFileName, bytes)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc82f07080a3c4158d1dfcbde4a9077d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "dcd6cd5ad869af9955c9f9d007e5a7e60a912575", "commitAfterChange": "a5e4bcde92711a75c131ce306601ad0467419d3f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\tif (valueRequired) codeStream.iconst_1();", "+\t\t\t\tif (valueRequired) codeStream.iconst_0();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc8de78fc6396f38be4b3b7b4cf80a37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testRenameExcludedPackage() throws CoreException", "signatureAfterChange": " public void testRenameExcludedPackage() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc96531f21aff9d82bf33cf3c78e6958", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 379, "methodNumberAfterChange": 379, "signatureBeforeChange": " public void parse(MethodDeclaration md, CompilationUnitDeclaration unit)", "signatureAfterChange": " public void parse(MethodDeclaration md, CompilationUnitDeclaration unit)", "diff": ["-\t\t\tmd.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\t\tmd.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc9b3f22bd3274a5685db2525de7d552", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private static SearchPattern createFieldPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": " private static SearchPattern createFieldPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\t\t\t\t\tcase Scanner.TokenNameWHITESPACE:", "+\t\t\t\t\tcase TerminalTokens.TokenNameWHITESPACE:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cca1811eb83e3fdd06d580e659dc4516", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/TypeAnnotationCodeStream.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void new_(TypeReference typeReference, TypeBinding typeBinding)", "signatureAfterChange": "  \tpublic void new_(TypeReference typeReference, TypeBinding typeBinding)", "diff": ["+", "-\t\t\taddAnnotationContext(typeReference, this.position, AnnotationTargetTypeConstants.OBJECT_CREATION);", "+\t\t\taddAnnotationContext(typeReference, this.position, AnnotationTargetTypeConstants.NEW);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccb5d551e49fe347f263146f0f3c8b98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " protected void updateTimeStamp(CompilationUnit original) throws JavaModelException", "signatureAfterChange": " protected void updateTimeStamp(CompilationUnit original) throws JavaModelException", "diff": ["-\t\t((IFile) original.getUnderlyingResource()).getModificationStamp();", "+\t\t((IFile) original.getResource()).getModificationStamp();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccb6c67b7a5fb988254338d0e71d7763", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 447, "methodNumberAfterChange": 447, "signatureBeforeChange": " \tpublic void test428()", "signatureAfterChange": " \tpublic void test428()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccc44a44b21102ecc72562c8caa99956", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProblemConstructorTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd0ac345967d5321f14df9834ad6b055", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testExternalJarInternalExternalJar() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarInternalExternalJar() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd167b01274fc3f1ebdd2e7ea1ac00fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6e47268ed79fd7b89fd58e0a5c1b77470c0792ef", "commitAfterChange": "dcb63c7bea407ce9399b33fb2441f8ca456fabd4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \tpublic static ClasspathContainerResolver getClasspathContainerResolver(IPath containerPath)", "signatureAfterChange": "\r \tpublic static ClasspathContainerResolver getClasspathContainerResolver(IPath containerPath)", "diff": ["-\t\t\t\t\t\t\tif (JavaModelManager.VARIABLE_VERBOSE) {\r", "+\t\t\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd312274974082eb9bacaf9a3ec8bd62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testAddExternalLibFolder4() throws CoreException", "signatureAfterChange": " public void testAddExternalLibFolder4() throws CoreException", "diff": ["-\t\tIJavaProject p = createJavaProject(\"P\", new String[0], new String[] {getExternalFolderPath(\"externalLib\")}, \"\");", "+\t\tIJavaProject p = createJavaProject(\"P\", new String[0], new String[] {getExternalResourcePath(\"externalLib\")}, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd367affc2c30a48941841f891be7000", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd37ab71e870d8608e8eb665d2b32898", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cff20a526b50465a2f348a1a5575e634a801a7d8", "commitAfterChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "signatureAfterChange": "  \tprivate void format(FieldDeclaration fieldDeclaration, ASTVisitor visitor, MethodScope scope, boolean isChunkStart, boolean isFirstClassBodyDeclaration)", "diff": ["-\t\tint extraDimensions = getExtraDimension();", "+\t\tint extraDimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd511488175f86a4126bfb10b43fd957", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayTypeReference arrayTypeReference, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayTypeReference arrayTypeReference, \t\tBlockScope scope)", "diff": ["-\t\t\tif (this.preferences.insert_space_before_bracket_in_array_type_reference) {", "+\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd627fd53a23a7b7c137a9e7ee87f479", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void addPossibleMatch(AstNode node)", "signatureAfterChange": " public void addPossibleMatch(AstNode node)", "diff": ["-\tthis.potentialMatchingNodes.put(node, new Integer(SearchPattern.POSSIBLE_MATCH));", "+\tthis.potentialMatchingNodes.put(node, new Integer(SearchPattern.POTENTIAL_MATCH));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd6ce4c1974b783fbfc423f29274870a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic boolean visit(DoStatement node)", "signatureAfterChange": " \tpublic boolean visit(CreationReference node)", "diff": ["+\t */", "+\tpublic boolean visit(CreationReference node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd90d1ccc82f43ab3a03f3251b9d9e01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationFragment node)", "signatureAfterChange": " \tpublic boolean visit(VariableDeclarationFragment node)", "diff": ["-\t\t\tpos = rewriteExtraDimensionsInfo(node, pos, VariableDeclarationFragment.EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\t\tpos = rewriteExtraDimensionsInfo(node, pos, VariableDeclarationFragment.EXTRA_DIMENSIONS2_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd931492b367d09e0b1173ca2c9539af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "fe340d4e08886c2e5ab7c8b78c5aa34503b63a80", "commitAfterChange": "5c4eafbe7595640e5dc9f4b4ddb502602d61de2e", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void testLineBreaksBetweenEmptyJavaDocTags2()", "signatureAfterChange": " \tpublic void testLineBreaksBetweenEmptyJavaDocTags2()", "diff": ["-\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES, \"false\"); //$NON-NLS-1$", "+\t\tsetUserOption(DefaultCodeFormatterConstants.FORMATTER_COMMENT_CLEAR_BLANK_LINES_IN_JAVADOC_COMMENT, \"false\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdaa6e33dd709591f47d118c348a35a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "5e70a582e36fd39d7629b8f556b66f50a1050058", "commitAfterChange": "5ca447c521262374b5199c22b8bb8d32a007f444", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["-\t\t\t\t} else if ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c] & ", "-\t\t\t\t\t\t(ScannerHelper.C_SEPARATOR | ScannerHelper.C_SPACE)) != 0) {", "+\t\t\t\t} else if ((ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c] & (ScannerHelper.C_SEPARATOR | ScannerHelper.C_JLS_SPACE)) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdaf19b0d1c7fcb9c0f239d6512c4f16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "diff": ["-\t\tif ((operationTypeID = (implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4) == T_String) {", "+\t\tif ((operationTypeID = (implicitConversion & IMPLICIT_CONVERSION_MASK) >> 4) == T_JavaLangString) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdaf9bf796338cf971c07fac91d7c25c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "signatureAfterChange": " \tfinal int internalGetSetIntProperty(SimplePropertyDescriptor property, boolean get, int value)", "diff": ["-\t\t\t\tsetExtraDimensions(value);", "+\t\t\t\tinternalSetExtraDimensions(value);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdce670df4b7afb6111df9da24b0f7c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "8ee5fa36071598355e44b420bae46ae82c697e43", "commitAfterChange": "b76752c4514702a8d23bce33aaea8b569326dd8b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tpublic synchronized void request(IJob job)", "signatureAfterChange": " \t \tpublic synchronized void request(IJob job)", "diff": ["-\t\tjob.ensureReadyBeforeRun();", "+\t\tjob.ensureReadyToRun();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cddb87bf5ddcd38f731190d2fe61e217", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "0aeb22995e46f30c358e82b0f30fbb77f85d3cde", "commitAfterChange": "8f9fbe48639f547ef5e11d2ef3b8f942596a7f36", "methodNumberBeforeChange": 204, "methodNumberAfterChange": 204, "signatureBeforeChange": "  private boolean isKeyword(char[] tokenSource)", "signatureAfterChange": "  private boolean isKeyword(char[] tokenSource)", "diff": ["-\t\tif (nextToken == ITerminalSymbols.TokenNameEOF", "+\t\tif (nextToken == TerminalTokens.TokenNameEOF"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdddbed2cea60340a3968bcd26e962e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "aa09f996ba3976f6c56ffa1ab64f257431d65d06", "commitAfterChange": "82ab1595bc367848c904e3ca9945527287ff133b", "methodNumberBeforeChange": 288, "methodNumberAfterChange": 288, "signatureBeforeChange": " public void optimizeBranch(int oldPosition, BranchLabel lbl)", "signatureAfterChange": " public void optimizeBranch(int oldPosition, BranchLabel lbl)", "diff": ["-\t\t\t\t\tthis.writeSignedShort(forwardPosition, offset);", "+\t\t\t\t\tthis.writeSignedWord(forwardPosition, offset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cdde09bfe39898d6db1ec15434865bb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void testParameterizedTypeSingleArgument04() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeSingleArgument04() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedType(unit,  \"g1.t.s.def.Generic<Exception>.MemberGeneric<Exception>\"); //$NON-NLS-1$", "+\t\tResolvedSourceType type = selectParameterizedType(unit,  \"g1.t.s.def.Generic<Exception>.MemberGeneric<Exception>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce112dca818d8fb7c985ae7704c6be3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/GammaCompressedIndexBlock.java", "commitBeforeChange": "669b9af0f5a06f4381a84a633c0be85e376c6f3e", "commitAfterChange": "cf266a5a150479cb6fad7bdee0518adaf976404e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void encodeEntry(WordEntry entry, char[] prevWord, CodeByteStream codeStream)", "signatureAfterChange": " \tprotected void encodeEntry(WordEntry entry, char[] prevWord, CodeByteStream codeStream)", "diff": ["-\t\tcodeStream.writeSmallUTF(word, prefixLen, word.length);", "+\t\tcodeStream.writeUTF(word, prefixLen, word.length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce124843c751d211a304627fcad919c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathJar.java", "commitBeforeChange": "30961650a033c638f3a768401431bcd77f1a4058", "commitAfterChange": "7d1e8775d87112012e8a87b6995e3b0bfd71512c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": "  ClasspathJar(IFile resource)", "signatureAfterChange": "  ClasspathJar(IFile resource)", "diff": ["-\tthis.packageCache = null;", "+\tthis.knownPackageNames = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce1ff9b44b974047aeda319b90464ae6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope)", "diff": ["-\t\tpatternLocator.match(anonymousTypeDeclaration, matchSet);", "+\t\tpatternLocator.match(anonymousTypeDeclaration, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce20d466578e48dde96b9235be226160", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void testRenameExcludedCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRenameExcludedCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce3bd97bc235a2a3404d2ef8f65be0e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "commitAfterChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "\t \tpublic void testBug73352b()", "signatureAfterChange": "\t \tpublic void testBug73352b()", "diff": ["-\t\treportMissingJavadocDescription = CompilerOptions.ALL_TAGS;", "+\t\treportMissingJavadocDescription = CompilerOptions.ALL_STANDARD_TAGS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce3fc082d887b23cb30e371707d66e8e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void testNotPresent2() throws CoreException", "signatureAfterChange": " public void testNotPresent2() throws CoreException", "diff": ["-\tICompilationUnit cu = getPackageFragment(\"P\", getExternalJCLPath(), \"java.lang\").getCompilationUnit(\"DoesNotExist.java\");", "+\tICompilationUnit cu = getPackageFragment(\"P\", getExternalJCLPathString(), \"java.lang\").getCompilationUnit(\"DoesNotExist.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce592fbb90a7cfa5c40915d6557959ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void endVisit(AnnotationSingleTypeReference typeRef, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(JavadocArrayQualifiedTypeReference typeRef, BlockScope scope)", "diff": ["+\tpublic void endVisit(JavadocArrayQualifiedTypeReference typeRef, BlockScope scope) {", "-\tpublic void endVisit(AnnotationSingleTypeReference typeRef, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce65da988dda011611afd48c368dbc4a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ab1674a0873a6f0955401f0b440fd6a56c6beb1d", "commitAfterChange": "8f5a102c2b8b887f30503ced9c831e6e4e83fdd3", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tprivate TypeBinding lowerUpperBound(TypeBinding[] types, List lubStack)", "signatureAfterChange": " \tprivate TypeBinding lowerUpperBound(TypeBinding[] types, ArrayList lubStack)", "diff": ["-\tprivate TypeBinding lowerUpperBound(TypeBinding[] types, List lubStack) {", "+\tprivate TypeBinding lowerUpperBound(TypeBinding[] types, ArrayList lubStack) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce66f20a7b66bd836bb40be9cba90928", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t} else if ((this.expressionType = receiverType = ((SingleTypeReference) type).resolveTypeEnclosing(", "+\t\t\t} else if ((this.resolvedType = receiverType = ((SingleTypeReference) type).resolveTypeEnclosing("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce6b34c7a07597684b281adb47e69fd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclaration.java", "commitBeforeChange": "8ddd224fb46a93d2d42c51b540573c4ff473b8c5", "commitAfterChange": "185794a74ce9e7c2b47a4b8dbd2f41e89a7a469e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \r \tpublic boolean isMemberTypeDeclaration()", "signatureAfterChange": " \r \tpublic boolean isMemberTypeDeclaration()", "diff": ["-\t\t\t|| (parent instanceof ClassInstanceCreation);\r", "+\t\t\t|| (parent instanceof AnonymousClassDeclaration);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce7b3da6d9d5f42274784118ecdb11dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest.java", "commitBeforeChange": "afe8e7c03c9e057a9ab6bf025b43a423a4494448", "commitAfterChange": "10cca24df480719d1a06391159cf8b7088d76566", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tTestCase.ONLY_SUFFIX = null;", "+\t\tTestCase.RUN_ONLY_ID = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce83ab0d0b7bdf98c96a51c4f954bce6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tMethodDeclaration(AST ast)", "signatureAfterChange": " \tMethodDeclaration(AST ast)", "diff": ["-\t\tif (ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce842348773895944241f5506ad093ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testGetContentsForNotPresent() throws JavaModelException", "signatureAfterChange": " public void testGetContentsForNotPresent() throws JavaModelException", "diff": ["-\tassertEquals(\"Unexpected contents for non present cu\", \"\", new String(cu.getContents()));", "+\tassertSourceEquals(\"Unexpected contents for non present cu\", \"\", new String(cu.getContents()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea65fe0cd9bb421c21666a8d9fc08ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 245, "signatureBeforeChange": " public void testBug109695f() throws CoreException", "signatureAfterChange": " public void testBug109695f() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"UTF16DSS\", SearchPattern.R_CAMEL_CASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"UTF16DSS\", SearchPattern.R_CAMELCASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cea9af3642d180e05ed096470d87364f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "\r \r \tprivate void findTypesAndPackages(char[] token, Scope scope)", "signatureAfterChange": "\r \r \tprivate void findTypesAndPackages(char[] token, Scope scope)", "diff": ["-\t\t\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\t\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cee678bd2b82d8e2fd64105bd4bd573a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 29, "signatureBeforeChange": " protected void purgeMethodStatements(TypeDeclaration type, boolean checkEachMethod)", "signatureAfterChange": " protected void purgeMethodStatements(TypeDeclaration type, boolean checkEachMethod)", "diff": ["-\tMemberTypeDeclaration[] memberTypes = type.memberTypes;", "+\tTypeDeclaration[] memberTypes = type.memberTypes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceee0b2d02db694c4554817a7ce26e4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "3c1df96cd104b0fc430e4dc2bba86da9035261e4", "commitAfterChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void set(Map optionsMap)", "signatureAfterChange": " \t \tpublic void set(Map optionsMap)", "diff": ["-\t\tif ((optionValue = optionsMap.get(OPTION_ReportAmbiguousVarargsArgument)) != null) updateSeverity(AmbiguousVarargsArgument, optionValue);", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportAmbiguousVarargsArgument)) != null) updateSeverity(CastVarargsArgument, optionValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ceefd5a677654246234aa25f7ea97598", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\tif ((typeDeclaration.bits & ASTNode.IsLocalTypeMASK) != 0){", "+\tif ((typeDeclaration.bits & ASTNode.IsLocalType) != 0){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef33cc731f8f4bff47fc4b8f046f855", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public boolean isAnnotation() throws JavaModelException", "signatureAfterChange": " public boolean isAnnotation() throws JavaModelException", "diff": ["-\treturn info.getKind() == IGenericType.ANNOTATION_TYPE;", "+\treturn info.getKind() == IGenericType.ANNOTATION_TYPE_DECL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf1037a242744fd96ae8e451a9adcbf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  private MethodBinding findMethod(char[] methodDescriptor, char[][][] missingTypeNames)", "signatureAfterChange": "  private MethodBinding findMethod(char[] methodDescriptor, char[][][] missingTypeNames)", "diff": ["-\t\t\tTypeBinding param = this.environment.getTypeFromSignature(methodDescriptor, index, end, false, this, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\tTypeBinding param = this.environment.getTypeFromSignature(methodDescriptor, index, end, false, this, missingTypeNames, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf111b2160ec9c26e7ecd192255aab86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "a73c1b70646c33788c416636d54ca7b824b36c44", "commitAfterChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private String removeIndentAndNewLines(String code, IDocument document, ICompilationUnit cu)", "signatureAfterChange": " private String removeIndentAndNewLines(String code, IDocument document, ICompilationUnit cu)", "diff": ["-\t\ttabWidth = Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE));", "+\t\ttabWidth = Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf1a2bf95a38747e3f3086ee781b62e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": " \tpublic boolean visit(ThrowStatement node)", "signatureAfterChange": " \tpublic boolean visit(ThrowStatement node)", "diff": ["-\t\t\tthis.beforeRequiredSpaceIndex = getScanner().getTokenEndOffset(ITerminalSymbols.TokenNamethrow, node.getStartPosition());", "+\t\t\tthis.beforeRequiredSpaceIndex = getScanner().getTokenEndOffset(TerminalTokens.TokenNamethrow, node.getStartPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf509889953757a2e89413cd87168590", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic boolean visit(MemberTypeDeclaration memberTypeDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(MemberTypeDeclaration memberTypeDeclaration, ClassScope scope)", "diff": ["-\t\tpatternLocator.match(memberTypeDeclaration, matchSet);", "+\t\tpatternLocator.match(memberTypeDeclaration, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf50cf4b07f3b02e2da1f4f913e27a50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "7184fe7e9ce3404df3f6147602a0f216b79ebe44", "commitAfterChange": "b22251ac966c7d61e7443863a4e62a37844f5e08", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t\tpublic void logClasspath(FileSystem.Classpath[] classpaths)", "signatureAfterChange": " \t\tpublic void logClasspath(FileSystem.Classpath[] classpaths)", "diff": ["-\t\t\t\t\t\tString classpath = classpaths[i].normalizedPath();", "+\t\t\t\t\t\tString classpath = classpaths[i].getPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf516d048cca0dbc320f1f61e520d0c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " protected void consumeModifiers()", "signatureAfterChange": " protected void consumeModifiers()", "diff": ["-\tcheckAnnotation(); // might update modifiers with AccDeprecated", "+\tcheckComment(); // might update modifiers with AccDeprecated"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf51ec0609ea13b0fad61b4f0001e657", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTRecoveryPropagator.java", "commitBeforeChange": "6eb04387ef3ee5335f206eb99b3c936de2847d3d", "commitAfterChange": "b01f0952648a27a3dbc985907cc5ced8ba10ed91", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic void endVisit(VariableDeclarationStatement node)", "signatureAfterChange": "  \tpublic void endVisit(VariableDeclarationStatement node)", "diff": ["+", "-\t\t\t\t\tfragment.setFlags(node.getFlags() | ASTNode.RECOVERED);", "-\t\t\t\t}\t\t\t", "+\t\t\t\t\tfragment.setFlags(fragment.getFlags() | ASTNode.RECOVERED);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf577293d46b490ce11ee8f9fd9afe77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "68d07c170644dc3b11509d462e1c1ae9ee4bb2c2", "commitAfterChange": "07500b3aefa58aecd5e846627b7c70382793f29f", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  protected CompilationParticipantResult[] notifyParticipants(SourceFile[] unitsAboutToCompile)", "signatureAfterChange": "  protected CompilationParticipantResult[] notifyParticipants(SourceFile[] unitsAboutToCompile)", "diff": ["-\t\t\tthis.javaBuilder.participants[i].compileStarting(results);", "+\t\t\tthis.javaBuilder.participants[i].buildStarting(results);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf6049b921aacdcc8731c208870aa57f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexAllProject.java", "commitBeforeChange": "87ba3addb06e0bd690b97dd2e305fffcc5db74fe", "commitAfterChange": "8046249ea5657bdf56e1ad6e70f968e6217d4dd0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": "\r \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\t\tJobManager.log(\"-> merging index \" + index.getIndexFile()); //$NON-NLS-1$\r", "+\t\t\t\t\t\tJobManager.verbose(\"-> merging index \" + index.getIndexFile()); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf73d28f463dfc00fe320ff4c026a82b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b34a79aea557f53b7f18bd9181d2f1aa9458b4f9", "commitAfterChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getExpandedClasspath(\r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError)\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getExpandedClasspath(\r \t\tboolean ignoreUnresolvedVariable,\r \t\tboolean generateMarkerOnError)\tthrows JavaModelException", "diff": ["-\t\tcomputeExpandedClasspath(this, ignoreUnresolvedVariable, generateMarkerOnError, new ObjectSet(5), accumulatedEntries);\r", "+\t\tcomputeExpandedClasspath(this, ignoreUnresolvedVariable, generateMarkerOnError, new HashSet(5), accumulatedEntries);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf7418607da962811bddc1805828436d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "4e993a8d5cbdc7815c7050ad8787e1c566312d6a", "commitAfterChange": "7d431a6663c03691d383a66bc16841bb87e3308d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic ReferenceExpression(NameReference name, TypeReference[] typeArguments, SingleNameReference method)", "signatureAfterChange": "  \tpublic ReferenceExpression(NameReference name, TypeReference[] typeArguments, SingleNameReference method)", "diff": ["-\t\tthis.typeParameters = typeArguments;", "+\t\tthis.typeArguments = typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf7ac4531f7918394d7dbed822811992", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDelta.java", "commitBeforeChange": "b0acd443a36e322f7afa5778ad381a3437727af2", "commitAfterChange": "342a0847eab95d8ca2e8608616a2c691828b55df", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public IJavaElement getMovedToElement()", "signatureAfterChange": " public IJavaElement getMovedToElement()", "diff": ["-\treturn fMovedToHandle;", "+\treturn movedToHandle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf8175afc5794e77c352a7a327a499b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "c2e73e92d84b995d792bc11e9e3cc44e31128806", "commitAfterChange": "7530e9811f8e0b012d59fd23237f75cdb4977fd6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic void testMissingAnnotationTypes_01()", "signatureAfterChange": "  \tpublic void testMissingAnnotationTypes_01()", "diff": ["-\t\trunNegativeTest(", "+\t\trunNegativeTestWithLibs("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf84100bd09730b32db95051900bb4c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\t\t\t|| ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) == 0)", "+\t\t\t|| ((typeDeclaration.bits & ASTNode.IsAnonymousType) == 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf88366b4fc353bb48c68015b5b70bd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tITypeBinding resolveType(Type type)", "signatureAfterChange": " \tITypeBinding resolveType(Type type)", "diff": ["-\t\t\t\treturn this.getTypeBinding(BaseTypeBinding.VoidBinding);", "+\t\t\t\treturn this.getTypeBinding(BaseTypes.VoidBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf99f252d621bed7ac412d08778fc96a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "abd7eb8067d05a106270885f602de8a64d08c556", "commitAfterChange": "51349b07c2a6f70ec333ca325c91564e571e10b7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate LocalTypeBinding buildLocalType( \t\tSourceTypeBinding enclosingType, \t\tPackageBinding packageBinding)", "signatureAfterChange": " \t \tprivate LocalTypeBinding buildLocalType( \t\tSourceTypeBinding enclosingType, \t\tPackageBinding packageBinding)", "diff": ["-\t\tLocalTypeBinding localType = new LocalTypeBinding(this, enclosingType, this.switchCase());", "+\t\tLocalTypeBinding localType = new LocalTypeBinding(this, enclosingType, this.innermostSwitchCase());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9cf3f0b94f3ac27b16bf715795a079", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetOutputLocationOperation.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r protected Vector determineAffectedPackageFragments(IPath location) throws JavaModelException", "signatureAfterChange": "\r protected Vector determineAffectedPackageFragments(IPath location) throws JavaModelException", "diff": ["-\t\tIClasspathEntry[] classpath = project.getResolvedClasspath(true);\r", "+\t\tIClasspathEntry[] classpath = project.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf9cf41dda13219776fab3c8d2ee36f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CodeCorrectionTestsRequestor.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void acceptMethod(char[] declaringTypePackageName,char[] declaringTypeName,char[] selector,char[][] parameterPackageNames,char[][] parameterTypeNames,char[][] parameterNames,char[] returnTypePackageName,char[] returnTypeName,char[] correctionName,int modifiers,int correctionStart,int correctionEnd)", "signatureAfterChange": " \t \tpublic void acceptMethod(char[] declaringTypePackageName,char[] declaringTypeName,char[] selector,char[][] parameterPackageNames,char[][] parameterTypeNames,char[][] parameterNames,char[] returnTypePackageName,char[] returnTypeName,char[] correctionName,int modifiers,int correctionStart,int correctionEnd)", "diff": ["-\t\tfSuggestions.addElement(new Suggestion(correctionName, correctionStart, correctionEnd));", "+\t\tsuggestions.addElement(new Suggestion(correctionName, correctionStart, correctionEnd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfad47331ee4d6d557594af2ecb3e91a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void checkConcreteInheritedMethod(MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "signatureAfterChange": " void checkConcreteInheritedMethod(MethodBinding concreteMethod, MethodBinding[] abstractMethods)", "diff": ["-\t\t\t\t&& this.type.superclass.erasure().findSuperTypeWithSameErasure(originalInherited.declaringClass) == null) {", "+\t\t\t\t&& this.type.superclass.erasure().findSuperTypeOriginatingFrom(originalInherited.declaringClass) == null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfae640afb2126c88c3a9c5ab1c5f7d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/IIndex.java", "commitBeforeChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "commitAfterChange": "82730fa91cab84d990d4e3898f46564d654b224e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tIEntryResult[] queryEntries(char[] pattern) throws IOException;", "signatureAfterChange": " \tEntryResult[] queryEntries(char[] pattern) throws IOException;", "diff": ["-\tIEntryResult[] queryEntries(char[] pattern) throws IOException;", "+\tEntryResult[] queryEntries(char[] pattern) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb49061e79066dae81c1b1d4993d67e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "24c681585ef2f4b155e3d0f5cb2c551e612e2484", "commitAfterChange": "1075c02575f13a345cda8e06bd18891df8b3e61e", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprivate void format(TypeDeclaration typeDeclaration)", "signatureAfterChange": "  \tprivate void format(TypeDeclaration typeDeclaration)", "diff": ["-\t\tthis.scribe.printModifiers(typeDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_MEMBER);", "+\t\tthis.scribe.printModifiers(typeDeclaration.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_TYPE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfb78fa133bf88cc95416b77711a5d2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "a8a98188fc235240f392a4859de8a3706398f5e0", "commitAfterChange": "d9da62b96418ec7c4e63f83dc9c7f0cfe3e6af1a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private String removeIndentAndNewLines(String code, IDocument document, ICompilationUnit cu)", "signatureAfterChange": " private String removeIndentAndNewLines(String code, IDocument document, ICompilationUnit cu)", "diff": ["-\t\ttabWidth = Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE));", "+\t\ttabWidth = Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_TAB_LENGTH));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc1320141838b417fa9d3e6ff765c91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public int resolveLevel(Binding binding)", "signatureAfterChange": " public int resolveLevel(Binding binding)", "diff": ["-\t\t\tbinding = ((ProblemReferenceBinding) binding).original;", "+\t\t\tbinding = ((ProblemReferenceBinding) binding).closestMatch;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfcc9a1e11afa98a6173fcbf703ebba1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tsynchronized IVariableBinding getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding variableBinding, VariableDeclaration variableDeclaration)", "signatureAfterChange": "  \tsynchronized IVariableBinding getVariableBinding(org.eclipse.jdt.internal.compiler.lookup.VariableBinding variableBinding, VariableDeclaration variableDeclaration)", "diff": ["-\t\tif (this.isRecoveredBinding) {", "+\t\tif (this.isRecoveringBindings) {", "+\t\t\t\t//if ((variableBinding.tagBits & TagBits.HasMissingType) != 0 ", "+\t\t\t\t//\t\t&& !this.isRecoveringBindings()", "+\t\t\t\t//\t\t&& (variableBinding.kind() == Binding.FIELD && !((FieldBinding)variableBinding).declaringClass.isBinaryBinding())) { // binaries have been resilient since 3.2.2", "+\t\t\t\t//\treturn null;", "+\t\t\t\t//}\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfd04ef3df38a783b88f68a9ec2c676e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testGetChildrenForCategory02() throws CoreException", "signatureAfterChange": " public void testGetChildrenForCategory02() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfd87f76afa1325acfe14d004eccda3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "fec6027ca1c6247426252a7173b9c0a11f4d6b8c", "commitAfterChange": "231626db7da3a6ad45ce8225b8c3274868f9ab3c", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tpublic void resolve()", "signatureAfterChange": "  \tpublic void resolve()", "diff": ["-\t\t\t\t\tthis.scope.problemReporter().annotationMissingForPublic(this.sourceStart, this.sourceEnd);", "+\t\t\t\t\tthis.scope.problemReporter().annotationMissing(this.sourceStart, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfdfdb094ada39fc85df5a779750857a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void findTypes(char[] prefix, final ISearchRequestor storage)", "signatureAfterChange": " \tpublic void findTypes(char[] prefix, final ISearchRequestor storage)", "diff": ["-\t\t\t\tnew SearchBasicEngine(this.workingCopies).searchAllTypeNames(", "+\t\t\t\tnew BasicSearchEngine(this.workingCopies).searchAllTypeNames("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfecf7e7f39dc655a215fb8a4c0a6f74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 475, "methodNumberAfterChange": 475, "signatureBeforeChange": " \tpublic void test456()", "signatureAfterChange": " \tpublic void test456()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d00080c9d002327e6ea2f96c205c453d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteElementsOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic DeleteElementsOperation(IJavaElement[] elementsToDelete, boolean force)", "signatureAfterChange": " \tpublic DeleteElementsOperation(IJavaElement[] elementsToDelete, boolean force)", "diff": ["-\t\tinitDOMFactory();", "+\t\tinitASTParser();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0077e6afcdda62d4210926b6734c11d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\t\tASTParser parser= ASTParser.newParser(AST.JLS4);", "+\t\t\t\tASTParser parser= ASTParser.newParser(AST.JLS8);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0117302b8d777f9e84950a50ed0187a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "876aa677201567f6dd87fe8c0b5a5326661e4029", "commitAfterChange": "955478e6d2220d787f88d27b5ca186d67f088e58", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected void setUp() throws Exception", "signatureAfterChange": " \tprotected void setUp() throws Exception", "diff": ["-\t\ttestCounters[0]++;", "+\t\tTEST_COUNTERS[0]++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0141100e4b8ccfa1478a56fe772a447", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void acceptPackage(char[] packageName)", "signatureAfterChange": " \tpublic void acceptPackage(char[] packageName)", "diff": ["-\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.PACKAGE_REF, this.actualCompletionPosition);", "+\t\t\tInternalCompletionProposal proposal = createProposal(CompletionProposal.PACKAGE_REF, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d02573c08f749dc954d4fa754d44554a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "f15f3a4daa4f7cbf363475bdb20d4707912f834f", "commitAfterChange": "1e2211eded7d5ae87dfcf507bb00676a5a81d8e9", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate void scanFile(String fileName, int kind) throws InvalidInputException, IOException", "signatureAfterChange": " \tprivate void scanFile(String fileName, int kind) throws InvalidInputException, IOException", "diff": ["-\t\tfor (int i = 0; i < REPEAT; i++) {", "+\t\tfor (int i = 0; i < MEASURES_COUNT; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d05869dc91e52ce5777cb7c9bdbd33aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public void test016() throws JavaModelException", "signatureAfterChange": "  public void test016() throws JavaModelException", "diff": ["-\t\t\"java.lang[PACKAGE_REF]{java.lang, java.lang, null, null, null, \"+this.positions+R_DICQNR+\"}\"", "+\t\t\"java.lang[PACKAGE_REF]{java.lang, java.lang, null, null, null, \"+this.positions+R_DRICQNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d062be07344a57c6998fcbe10c0eabca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "f4bdb5d912579981f22fe9e7c4679e93b1a5f059", "commitAfterChange": "a3a09ad256da223aa1f3d2fe29b81e346d09a16c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void completeCodeAttributeForProblemMethod( \t\tAbstractMethodDeclaration method, \t\tMethodBinding binding, \t\tint codeAttributeOffset, \t\tint[] exceptionHandler, \t\tint[] startLineIndexes)", "signatureAfterChange": " \tpublic void completeCodeAttributeForProblemMethod( \t\tAbstractMethodDeclaration method, \t\tMethodBinding binding, \t\tint codeAttributeOffset, \t\tint[] exceptionHandler, \t\tint[] startLineIndexes)", "diff": ["-\t\t\t\t\targSize = methodDeclaringClass.syntheticArgumentsOffset;", "+\t\t\t\t\targSize = methodDeclaringClass.enclosingInstancesSlotSize;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0666703c1bf9df0d79328eef66a1872", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testExternalJarChanged3() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarChanged3() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d06a2a03986106b2c3b9349fc8c848f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void endVisit(DefaultCase defaultCaseStatement, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(DefaultCaseStatement defaultCaseStatement, BlockScope scope)", "diff": ["-\tpublic void endVisit(DefaultCase defaultCaseStatement, BlockScope scope) {", "+\tpublic void endVisit(DefaultCaseStatement defaultCaseStatement, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d081d671f0eb5fdf2012a85dbc9336de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void testAnnotation6() throws JavaModelException", "signatureAfterChange": " \tpublic void testAnnotation6() throws JavaModelException", "diff": ["-\t\tassertElementEquals(", "+\t\tassertElementExists("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0964646b932baa4c9b88fa56fc74798", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CodeCorrectionTestsRequestor.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void acceptPackage(char[] packageName,char[] correctionName,int correctionStart,int correctionEnd)", "signatureAfterChange": " \t \tpublic void acceptPackage(char[] packageName,char[] correctionName,int correctionStart,int correctionEnd)", "diff": ["-\t\tfSuggestions.addElement(new Suggestion(correctionName, correctionStart, correctionEnd));", "+\t\tsuggestions.addElement(new Suggestion(correctionName, correctionStart, correctionEnd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d09cfc7d20eaa5d84ab7053011f5bf7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 329, "methodNumberAfterChange": 329, "signatureBeforeChange": " \t \tpublic void test309()", "signatureAfterChange": " \t \tpublic void test309()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0aa68827b7dc4d749d49a418ed7386e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "66cd4232d0ab1e96e3a07f02c56b8bad9d7784af", "commitAfterChange": "c4f302586af8fb051e0ee3dd72d43fa433091810", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void acceptClass(char[] packageName, char[] className, boolean needQualification)", "signatureAfterChange": "\r public void acceptClass(char[] packageName, char[] className, boolean needQualification)", "diff": ["-\tacceptType(packageName, className, INameLookup.ACCEPT_CLASSES, needQualification);\r", "+\tacceptType(packageName, className, NameLookup.ACCEPT_CLASSES, needQualification);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0aea26a2e9418a4df3f925bf455116c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic boolean visit(Block block, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(Block block, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRBRACE);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0c84181f3e01d6388e2138537829a29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void testExternalJarChanged6() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarChanged6() throws CoreException, IOException", "diff": ["-\t\t\tdeleteFile(f);", "+\t\t\tdeleteResource(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0d9b10f9f9e5328f08ff6798a41437e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 536, "methodNumberAfterChange": 536, "signatureBeforeChange": " public void illegalReturnRedefinition(AbstractMethodDeclaration abstractMethodDecl, MethodBinding inheritedMethod, char[][] nonNullAnnotationName)", "signatureAfterChange": " public void illegalReturnRedefinition(AbstractMethodDeclaration abstractMethodDecl, MethodBinding inheritedMethod, char[][] nonNullAnnotationName)", "diff": ["-\tAnnotation annotation = findAnnotation(annotations, TypeIds.T_ConfiguredAnnotationNullable);", "+\tAnnotation annotation = findAnnotation(annotations, TypeIds.BitNullableAnnotation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f2f42bc4578492f7c0d94afb7456dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Converter/junit/framework/TestCase.java", "commitBeforeChange": "5f14954289dcfe3aa64cd723a9ea9807dea33e05", "commitAfterChange": "4b4449dde49cdcaed9ae00d1ac057ecfeb8d8c23", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t    return name()+\"(\"+getClass().getName()+\")\";", "+\t    return getName() + \"(\" + getClass().getName() + \")\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0fcc4496fc298fc6717165e2a94ba36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "6d1c57fb2448b115bc8f96943cd4e4f07a42d11a", "commitAfterChange": "d4217008a0577ef6139e05a418f311a9a8588da7", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "     public CompilationUnit getCompilationUnitForBinding(final IBinding binding)", "signatureAfterChange": "     public CompilationUnit getCompilationUnitForBinding(final IBinding binding)", "diff": ["-                final ASTParser parser =  ASTParser.newParser(AST.JLS3);", "+                final ASTParser parser =  ASTParser.newParser(AST.JLS4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d101d5afc2a13b4b7b180ddfd12bd5c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "4a181894176f3a1eccc3e35147ddca845e353389", "commitAfterChange": "546372dd9318b0aed3b01864163b2d25dd30110a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected boolean computeChildren(OpenableElementInfo info) throws JavaModelException", "signatureAfterChange": " protected boolean computeChildren(OpenableElementInfo info) throws JavaModelException", "diff": ["-\t\t\tchar[][] exclusionPatterns = getExclusionPatterns();", "+\t\t\tchar[][] exclusionPatterns = fullExclusionPatternChars();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d10ad4a05168920473b9982b982b5354", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfPackage.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public boolean containsKey(char[] key)", "signatureAfterChange": " public boolean containsKey(char[] key)", "diff": ["-\t\tif (currentKey.length == keyLength && CharOperation.prefixEquals(currentKey, key))", "+\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d112720665b2679b0c0321ce90459a05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiteralsTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d11b47f5bdd1b397341e7c8eee314e7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic void endVisit(MemberValuePair pair, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic void endVisit(MemberValuePair pair, ClassScope scope)", "diff": ["-\tpublic void endVisit(MemberValuePair pair, CompilationUnitScope scope) {", "+\tpublic void endVisit(MemberValuePair pair, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d12507c898ffe53a5618c5ce6bbf8f3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void testDeltaDiscardPrimaryWorkingCopy4() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaDiscardPrimaryWorkingCopy4() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1380968e81f5d15fc8c37c10ff8b7ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "d6c28471243bc992d18db0170807eeb69edcbea6", "commitAfterChange": "17404692b6e0a539da1d06059648c128f8d0f7d8", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void generateCodeAttributeHeader()", "signatureAfterChange": " \tpublic void generateCodeAttributeHeader()", "diff": ["-\t\t\tresizePoolContents(20);", "+\t\t\tresizeContents(20);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d13df7b4d1df326425ace5afa14c30f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void branchChainTo(Label label)", "signatureAfterChange": " \tpublic void branchChainTo(BranchLabel label)", "diff": ["-\tpublic void branchChainTo(Label label) {", "+\tpublic void branchChainTo(BranchLabel label) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1418d5f5081d2c99fe8c070488d2aaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tpublic boolean isSourceType()", "signatureAfterChange": "\r \r public  boolean isSourceType()", "diff": ["-\t */\r", "-\tpublic boolean isSourceType() {\r", "-\t\treturn sourceTypes != null;\r", "-\t}\r", "+public  boolean isSourceType() {\r", "+\treturn sourceType != null;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d14870a62ff186e929c7438828897cdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "561bfcb7dcb83daed0ab2c6ee6b66b4bf5d190e3", "commitAfterChange": "1b55c5959aceff41a495888d412b7f9a25c44bf1", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void setJavaConventionsSettings()", "signatureAfterChange": "  \tpublic void setJavaConventionsSettings()", "diff": ["+", "-\t\tthis.tab_char = TAB; // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=89739", "+\t\tthis.tab_char = SPACE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1738643d2ace85325c82d136a53f14b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "2918237b1cb89f81ed701ddc5f9ab1195ea6929a", "commitAfterChange": "86abc3530cc306b3b92f343d3b08d050450734e2", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static IBinding[] resolve( \t\tfinal IJavaElement[] elements, \t\tint apiLevel, \t\tMap compilerOptions, \t\tIJavaProject javaProject, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static IBinding[] resolve( \t\tfinal IJavaElement[] elements, \t\tint apiLevel, \t\tMap compilerOptions, \t\tIJavaProject javaProject, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["-\t\t\t\t\tString key = ((BinaryMember) element).getBindingKey();", "+\t\t\t\t\tString key = ((BinaryMember) element).getKey();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d19c91d941166afee3308d397fe42aa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void testInvalidTagsMethodWithMissingTagsOption()", "signatureAfterChange": " \tpublic void testInvalidTagsMethodWithMissingTagsOption()", "diff": ["-\t\trunConformTest(InvalidReferencesMethodJavadocComments);", "+\t\trunConformTest(METHODS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1b6023848329a5f6db8503e11c1ff6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "066f1fe71d5d139e5a681c9aeece89fa867b71b7", "commitAfterChange": "39951c3ce9f26380d44e65dd4f0a9c708c89c0d1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testBecomeWorkingCopy3() throws CoreException", "signatureAfterChange": " \tpublic void testBecomeWorkingCopy3() throws CoreException", "diff": ["-\t\tassertElementsEqual(", "+\t\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1bd1403b179d4ca4d49b130158833af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "b9de5f3466a9b4d6687de837720c445097067b16", "commitAfterChange": "39416e9e4305b172d90b88aed3085d98ded0a86c", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r public void parseCompilationUnit(\r \tICompilationUnit unit, \r \tboolean needReferenceInfo)", "signatureAfterChange": "\r public void parseCompilationUnit(\r \tICompilationUnit unit, \r \tboolean needReferenceInfo)", "diff": ["-\t\t\trequestor.acceptLineSeparatorPositions(scanner.lineEnds());\r", "+\t\t\trequestor.acceptLineSeparatorPositions(scanner.getLineEnds());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1d588565c554fe1f2a549e2ea5ab259", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "a8f2b9d6f31a63759a85bef6a1ed8cbb23fbd3fa", "commitAfterChange": "ce41f66e0706b1b71981331d2b2667a0940a3697", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["-\t\t\t\tswitch (ScannerHelper.ObviousIdentCharNatures[c]) {", "+\t\t\t\tswitch (ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c]) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1ef2362fcc0ea6d7c290adb684390dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test_nonnull_parameter_010()", "signatureAfterChange": " public void test_nonnull_parameter_010()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d205e5918e05d407877742e44a863986", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "c9d6ebaa0d13be6fc2e748dee3cae777e5c9d89a", "commitAfterChange": "0011958a7781b8e34a2680d48e8c358ce935fb15", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r protected void consumeClassBodyDeclarationsopt()", "signatureAfterChange": "\r protected void consumeClassBodyDeclarationsopt()", "diff": ["-\tthis.inInitializerPtr--;\r", "+\tthis.inFieldInitializationPtr--;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2180fe65f07903673045824f1be40a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractComparableTest.java", "commitBeforeChange": "c79bfbeb67e4687c48de7885eb121ce1ea14c01f", "commitAfterChange": "ff61aa704b87289ea0c126beac8453107bd32bdf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected IPath writeFiles(String[] testFiles)", "signatureAfterChange": " \tprotected IPath writeFiles(String[] testFiles)", "diff": ["-\t\tthis.dirPath =  outDir.append(shortTestName());", "+\t\tthis.dirPath =  outDir.append(testName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d21cc12b8f01f2f4edbda64a102a64dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7958800325e781c29b79a69900d300a76f68d447", "commitAfterChange": "b2575708bb8dc5b4ad7b6e3107e511761c7e9659", "methodNumberBeforeChange": 762, "methodNumberAfterChange": 762, "signatureBeforeChange": " public void test757()", "signatureAfterChange": " public void test757()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2244b15fe368e469a8e9563bfb2cf1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tpublic void test120()", "signatureAfterChange": " \tpublic void test120()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d22aa2312478146a5cdcd2ad50703609", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateElementInCUOperation.java", "commitBeforeChange": "d0954d54228cfe7f2d4640873279833f7ad6ecb1", "commitAfterChange": "906091ec44775df6e15be24da13090f39ca40ebb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprotected ISchedulingRule getSchedulingRule()", "signatureAfterChange": "  \tprotected ISchedulingRule getSchedulingRule()", "diff": ["-\t\treturn getParentElement().getResource();", "+\t\treturn getParentElement().getSchedulingRule();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24082e7779e5e6993e9911c6d51af1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic final boolean allowBlankFinalFieldAssignment(FieldBinding binding)", "signatureAfterChange": " \tpublic final boolean allowBlankFinalFieldAssignment(FieldBinding binding)", "diff": ["-\t\tif (enclosingSourceType() != binding.declaringClass)", "+\t\tif (enclosingReceiverType() != binding.declaringClass)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24cee85d96c1edb8b9c2a64a46b4b9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CreateMethodSourceExamplesTests.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testCreateMethodWithModifiersAndExceptions()", "signatureAfterChange": " public void testCreateMethodWithModifiersAndExceptions()", "diff": ["-\tmethod.setFlags(IConstants.AccPrivate);", "+\tmethod.setFlags(ClassFileConstants.AccPrivate);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d24f0f9fdb05665b188dba9744a82f71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6ed6becc4fd53e7d1da742b5c31941d1e72ebac3", "commitAfterChange": "5dcefe623702748a359807058d8605577453405d", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["-\t\t\t\t\tcase ScannerHelper.C_LETTER :", "+\t\t\t\t\tcase ScannerHelper.C_IDENT_PART :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d25a6af00ba6ceb77b3ebee324e8110a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticMethod(FieldBinding targetField, boolean isReadAccess)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticMethod(FieldBinding targetField, boolean isReadAccess)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d28ee596de5d6e1e41dc155a8acb5c27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/EclipseFileObject.java", "commitBeforeChange": "559e5f2f8f5db2c53b837aedd1782f0020008093", "commitAfterChange": "a256ec457e5133c78e70ccd040a0f76b1f8e178c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException", "signatureAfterChange": " \tpublic CharSequence getCharContent(boolean ignoreEncodingErrors) throws IOException", "diff": ["-\t\treturn Util.getCharContents(this, ignoreEncodingErrors, org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(this.f), this.charset.toString());", "+\t\treturn Util.getCharContents(this, ignoreEncodingErrors, org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(this.f), this.charset.name());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d298adf2473850dd3881af0495f1ce3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected void classInstanceCreation(boolean alwaysQualified)", "signatureAfterChange": " protected void classInstanceCreation(boolean alwaysQualified)", "diff": ["-\tthis.patternLocator.match(this.expressionStack[this.expressionPtr], this.matchSet);", "+\tthis.patternLocator.match(this.expressionStack[this.expressionPtr], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d29db5c0d09b8391a6755c7de10a1872", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "80d38e93a98c2ac6ea4299f96b043d2cf0a8942c", "commitAfterChange": "3c48c9fa4ac4d99dec40bf37b65e9e7f38ac2398", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t\t \t\tpublic PerProjectInfo(IProject project)", "signatureAfterChange": " \t\t \t\tpublic PerProjectInfo(IProject project)", "diff": ["-\t\t\tthis.javadocCache = new LRUCache(5);", "+\t\t\tthis.javadocCache = new LRUCache(JAVADOC_CACHE_INITIAL_SIZE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2a49908896d75910c7ad2ab43ea0518", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  public void markPotentiallyNonNullBit(VariableBinding local)", "signatureAfterChange": "  public void markPotentiallyNonNullBit(LocalVariableBinding local)", "diff": ["-public void markPotentiallyNonNullBit(VariableBinding local) {", "+public void markPotentiallyNonNullBit(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2b18d461e9cf8b6c085eb9d52fe65be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "33b6ddc355225393e9c9a4c6f58c7187e9dd64c0", "commitAfterChange": "ac5139f97b2ef313a03ae57144bf0ffdd5bcb6f8", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": "\t\t \t \tpublic void test0087()", "signatureAfterChange": "\t\t \t \tpublic void test0087()", "diff": ["-\t\tcustomOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.DISABLED);", "+\t\tcustomOptions.put(CompilerOptions.OPTION_ReportRawTypeReference, CompilerOptions.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ce2ca914ee8eb7e8b0c3d6cefb2464", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public TypeBinding checkFieldAccess(BlockScope scope)", "signatureAfterChange": " public TypeBinding checkFieldAccess(BlockScope scope)", "diff": ["-\tif (isFieldUseDeprecated(fieldBinding, scope, (this.bits & IsStrictlyAssignedMASK) !=0)) {", "+\tif (isFieldUseDeprecated(fieldBinding, scope, (this.bits & IsStrictlyAssigned) !=0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2dcbb3e07b75f9ce195d2ba88331891", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "152d18d4cacb9bd3ea7ba43af5713a4d308c0471", "commitAfterChange": "01ebf46478e499b6682d2e0eb34536c095d3cff8", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 77, "signatureBeforeChange": " public void testTypeRefQualifiedAll_Allocation() throws CoreException", "signatureAfterChange": " public void testTypeRefQualifiedAll_Allocation() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, ALLOCATION_EXPRESSION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());", "+\tsearch(\"*\", TYPE, CLASS_INSTANCE_CREATION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2df34f9d1539e53641815c74a10ca4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestBuilderParticipant.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void buildStarting(ICompilationParticipantResult[] files, boolean isBatchBuild)", "signatureAfterChange": "  public void buildStarting(BuildContext[] files, boolean isBatchBuild)", "diff": ["-public void buildStarting(ICompilationParticipantResult[] files, boolean isBatchBuild) {", "+public void buildStarting(BuildContext[] files, boolean isBatchBuild) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2eae644087d505d619091e94a64cf4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfIntValues.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic int get(char[] key)", "signatureAfterChange": "  \tpublic int get(char[] key)", "diff": ["-\t\t\tif (currentKey.length == keyLength", "-\t\t\t\t&& CharOperation.prefixEquals(currentKey, key))", "+\t\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2f2186b350bf7ff066ffbc5bde7fd45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void addProject(IProject project)", "signatureAfterChange": "  \tpublic void addProject(IProject project)", "diff": ["-\t\tfProjects.put(project.getName(), project);", "+\t\tprojects.put(project.getName(), project);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d30fb869e18e3fda043377174eb2da47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic final static JavaModelManager getJavaModelManager()", "signatureAfterChange": " \tpublic final static JavaModelManager getJavaModelManager()", "diff": ["-\t\treturn Manager;", "+\t\treturn MANAGER;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3161892d357ce8ef1f3259208b0634c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "signatureAfterChange": " public void manageEnclosingInstanceAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo)", "diff": ["-\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) != 0) return;", "+\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) != 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d325e53f29ed2d266cb6730b07caa40d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void match(TypeDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(TypeDeclaration node, MatchingNodeSet nodeSet)", "diff": ["-\t\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "+\t\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d328806e711d07c37ae6f8dec2ba6a19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public void test033() throws JavaModelException", "signatureAfterChange": "  public void test033() throws JavaModelException", "diff": ["-\t\t\"BasicTestTypes.BasicTestTypesMember[TYPE_REF]{BasicTestTypesMember, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes$BasicTestTypesMember;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"BasicTestTypes.BasicTestTypesMember[TYPE_REF]{BasicTestTypesMember, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes$BasicTestTypesMember;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d329d34da7ef859c9917a8527e96d730", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic boolean visit( \t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration, \t\tBlockScope scope)", "diff": ["-\t\tif (anonymous_type_declaration_brace_position.equals(FormattingPreferences.NEXT_LINE_SHIFTED)) {", "+\t\tif (anonymous_type_declaration_brace_position.equals(DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d342e959e457a18c913e2a748307cb5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic TypeBinding allBounds()", "signatureAfterChange": " \t \tpublic TypeBinding allBounds()", "diff": ["-\t\treturn this.environment.createIntersectionCastType(allBounds);", "+\t\treturn this.environment.createIntersectionType18(allBounds);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d354a3abfab7a207b873a2842d2312bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/WorkingCopy.java", "commitBeforeChange": "60205bed5116ad3496dacec47d060779de36e647", "commitAfterChange": "af3a6832e3b1c1003f856c7a02d77d240881ed44", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r public void open(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "signatureAfterChange": "\r public void open(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "diff": ["-\tif (this.managedCount == 0) {\r", "+\tif (this.useCount == 0) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a15e226978f0c9b7ec2a24c9fa373e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "3de46f74e60c4a3809d64f36594b156b755e8151", "commitAfterChange": "a278a6d0aa65f732809dc346bd96a708d28563bd", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public int computeSeverity(int problemID)", "signatureAfterChange": " public int computeSeverity(int problemID)", "diff": ["-\t\tcase IProblem.JavadocInvalidConstructorQualification:", "+\t\tcase IProblem.JavadocInvalidMemberTypeQualification:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3a3be56075fdbf3185aca54b5950122", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, int includeMask)", "signatureAfterChange": " \tpublic static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, int includeMask)", "diff": ["-\t\treturn SearchBasicEngine.createJavaSearchScope(elements, includeMask);", "+\t\treturn BasicSearchEngine.createJavaSearchScope(elements, includeMask);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3af2fd09864a68943cdc031ed40bcb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedTypesPattern.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\ttypeBinding = ((TypeReference)reference).binding;", "+\t\ttypeBinding = ((TypeReference)reference).resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3b149860c67a5eaab2ae5769a1725db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "d6f02f07429dae5d9415421b0a1fb951b3ab04e0", "commitAfterChange": "bd118e51270d54e48ef1b8d76bf62d7f013d8051", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tstatic void createASTs( \t\t\tfinal IJavaProject javaProject,  \t\t\tfinal ICompilationUnit[] parseUnits, \t\t\tASTRequestor requestor)", "signatureAfterChange": " \tstatic void createASTs( \t\t\tfinal IJavaProject javaProject,  \t\t\tfinal ICompilationUnit[] parseUnits, \t\t\tASTRequestor requestor)", "diff": ["-\t\tASTParser p = ASTParser.newParser( AST.JLS4 );", "+\t\tASTParser p = ASTParser.newParser( AST.JLS8 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3b9f32e61d361e7c8a3e29a42b96a0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void buildStructure(OpenableElementInfo info, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " protected void buildStructure(OpenableElementInfo info, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tinfo.setIsStructureKnown(generateInfos(info, monitor, newElements, getUnderlyingResource()));", "+\tinfo.setIsStructureKnown(generateInfos(info, monitor, newElements, getResource()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3baa3abd7930a856ee4556f111ae413", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected void consumeInterfaceHeaderName()", "signatureAfterChange": " protected void consumeInterfaceHeaderName()", "diff": ["-\t\tmarkCurrentMethodWithLocalType();", "+\t\tmarkEnclosingMemberWithLocalType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3e48b3cfb809b51d3113cffebdd3cb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CharacterLiteral.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void setEscapedValue(String value)", "signatureAfterChange": "  \tpublic void setEscapedValue(String value)", "diff": ["-\t\t\t\tcase Scanner.TokenNameCharacterLiteral:", "+\t\t\t\tcase TerminalTokens.TokenNameCharacterLiteral:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3e95cb7a56403be1cc462c0d93b447b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 109, "signatureBeforeChange": " public void generateSyntheticBodyForFieldReadAccess(SyntheticAccessMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForFieldReadAccess(SyntheticMethodBinding accessBinding)", "diff": ["-public void generateSyntheticBodyForFieldReadAccess(SyntheticAccessMethodBinding accessBinding) {", "+}", "+public void generateSyntheticBodyForFieldReadAccess(SyntheticMethodBinding accessBinding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3f08a61ef00a309b8c6aafec36a107e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tpublic static IPackageFragmentRoot createJarPackageFragmentRootFrom(IFile file)", "signatureAfterChange": "\r \tpublic static IPackageFragmentRoot createJarPackageFragmentRootFrom(IFile file)", "diff": ["-\t\t\tIClasspathEntry[] entries = project.getResolvedClasspath(true);\r", "+\t\t\tIClasspathEntry[] entries = project.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3f67b33ce328aeba0865338fa5b5dbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, \t\tchar[][][] missingTypeNames, ITypeAnnotationWalker walker)", "signatureAfterChange": "  private TypeBinding[] getTypeArgumentsFromSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, ReferenceBinding genericType, \t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)", "diff": ["-\t\tchar[][][] missingTypeNames, ITypeAnnotationWalker walker)", "+\t\tchar[][][] missingTypeNames, TypeAnnotationWalker walker)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d3f6f036ec89ea281ce7a5caa59c389c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void testMethodReferenceThroughArray() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodReferenceThroughArray() throws JavaModelException, CoreException", "diff": ["-\tIType type = getClassFile(\"JavaSearch\", getExternalJCLPath(), \"java.lang\", \"Object.class\").getType();", "+\tIType type = getClassFile(\"JavaSearch\", getExternalJCLPathString(), \"java.lang\", \"Object.class\").getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d400d3eabe0b822b7575e4e662b68e78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BindingsCollectorVisitor.java", "commitBeforeChange": "28475f7151ef48b7b99d16fedb7cc564edf8391b", "commitAfterChange": "4374063ffc07d9e5a6e12269e991cbcb89c32543", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void endVisit(AnnotationTypeMemberDeclaration node)", "signatureAfterChange": " \tpublic void endVisit(AnnotationTypeMemberDeclaration node)", "diff": ["-\t\tIVariableBinding binding = node.resolveBinding();", "+\t\tIMethodBinding binding = node.resolveBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d43655388eb4e0159aa8b29557a2e5ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public void add(IResource element)", "signatureAfterChange": "\r public void add(IResource element)", "diff": ["-\t\t\tIClasspathEntry[] entries = javaProject.getResolvedClasspath(true);\r", "+\t\t\tIClasspathEntry[] entries = javaProject.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d447b79fb1d579ff57debd9005849265", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "d7e7bb059880a6c87ea3290708d2d0a9f9e7ebe8", "commitAfterChange": "a415220ad0bdc743d286b40ccc481ededfe8132e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\tConstant condCst = condition.conditionalConstant();", "+\t\tConstant condCst = condition.optimizedBooleanConstant();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d451ced65e32b7a28240a1249766cf80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void testAddDuplicateMember() throws JavaModelException", "signatureAfterChange": " public void testAddDuplicateMember() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d456f31cf2796488b2611bef61de64f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "625da6d5291673f01e323396ceb1f6773e9845a5", "commitAfterChange": "9286ce5f956aa28fecddfe609c2ffd5cc46ab296", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void test0452() throws JavaModelException", "signatureAfterChange": " \tpublic void test0452() throws JavaModelException", "diff": ["-\t\tassertEquals(\"wrong line number\", 3, compilationUnit.lineNumber(name.getStartPosition()));", "+\t\tassertEquals(\"wrong line number\", 3, compilationUnit.getLineNumber(name.getStartPosition()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d487f43c4a45ae54cf09c34341c86d88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "2418a9c1fa372e8f8253220ab580375e8d2f864b", "commitAfterChange": "bfeefe0bfa824914f542a3a07eccab1379d1c70b", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " public void testSuppressWarnings4() throws JavaModelException", "signatureAfterChange": " public void testSuppressWarnings4() throws JavaModelException", "diff": ["-\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, null, null);", "+\t\tthis.workingCopy.reconcile(ICompilationUnit.NO_AST, false, owner, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d489ca5ce0289c91ae1c29df81f4f28b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 245, "methodNumberAfterChange": 241, "signatureBeforeChange": " public void testBug109695b() throws CoreException", "signatureAfterChange": " public void testBug109695b() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"IDPE3\", SearchPattern.R_CAMELCASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"IDPE3\", SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4ad03bdb5813fecd7b3793662dba87a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate AST(int level)", "signatureAfterChange": " \tprivate AST(int level)", "diff": ["-\t\t\tcase JLS4 :", "+\t\t\tcase JLS4_INTERNAL :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4bf39637c8a712491fa6cf3c513e28d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ModelUpdater.java", "commitBeforeChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "commitAfterChange": "da25131cabd17a48ed55149d76a1e2be2aabb378", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected void traverseDelta( \t\tIJavaElementDelta delta, \t\tIPackageFragmentRoot root, \t\tIJavaProject project)", "signatureAfterChange": " \tprotected void traverseDelta( \t\tIJavaElementDelta delta, \t\tIPackageFragmentRoot root, \t\tIJavaProject project)", "diff": ["-\t\t\t\tif (((IWorkingCopy)element).isWorkingCopy()) {", "+\t\t\t\tif (((ICompilationUnit)element).isWorkingCopy()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4bfbe28920be01c422a353dd27c45e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptProject.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void projectClean( boolean deleteFiles )", "signatureAfterChange": " \t \tpublic void projectClean( boolean deleteFiles )", "diff": ["-\t\t\t\t\t\t_gfm.deleteDerivedResources(members[i]);", "+\t\t\t\t\t\tFileSystemUtil.deleteDerivedResources(members[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c2deae77e9f17100b873413570a106", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "5dcefe623702748a359807058d8605577453405d", "commitAfterChange": "a8f2b9d6f31a63759a85bef6a1ed8cbb23fbd3fa", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public int scanIdentifierOrKeyword()", "signatureAfterChange": " public int scanIdentifierOrKeyword()", "diff": ["-\t\t\t\t\tcase ScannerHelper.C_LETTER :", "+\t\t\t\t\tcase ScannerHelper.C_IDENT_PART :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4cfbc96b114abdb036e38cc04b20810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void test_nonnull_parameter_009()", "signatureAfterChange": " public void test_nonnull_parameter_009()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4d83fd1fbf39cd0d20a864f8d8a8749", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "b3906111a4433325958de7604465d8f0e49325d2", "commitAfterChange": "0b27309efdaba54bffa19e81e0f1e5ae6f176884", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public TypeBinding[] inferElidedTypes(ReferenceBinding allocationType, ReferenceBinding enclosingType, TypeBinding[] argumentTypes, final BlockScope scope)", "signatureAfterChange": "  public TypeBinding[] inferElidedTypes(ParameterizedTypeBinding allocationType, ReferenceBinding enclosingType, TypeBinding[] argumentTypes, final BlockScope scope)", "diff": ["-public TypeBinding[] inferElidedTypes(ReferenceBinding allocationType, ReferenceBinding enclosingType, TypeBinding[] argumentTypes, final BlockScope scope) {", "+public TypeBinding[] inferElidedTypes(ParameterizedTypeBinding allocationType, ReferenceBinding enclosingType, TypeBinding[] argumentTypes, final BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4dd7b1dfdabf846883bb6b15d0e8bec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public void test026() throws JavaModelException", "signatureAfterChange": "  public void test026() throws JavaModelException", "diff": ["-\t\t\"java.lang[PACKAGE_REF]{java.lang, java.lang, null, null, null, \"+this.positions+R_DICQNR+\"}\"", "+\t\t\"java.lang[PACKAGE_REF]{java.lang, java.lang, null, null, null, \"+this.positions+R_DRICQNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4df8b2b95db03a9be4b4d97a27b9b09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/dom/StandAloneASTParserTest.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void test4()", "signatureAfterChange": "  \tpublic void test4()", "diff": ["-\t\tASTParser parser = ASTParser.newParser(JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(JLS_LATEST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e8a397b598a4a8d3cb767873b132ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "9775053c06b88abc4990b96720855b4d26f13ab7", "commitAfterChange": "61d6a0379a06ef6680e82e7f6a32f04040234762", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "signatureAfterChange": "  \tpublic void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "diff": ["-\t\t\tthis.bound = env.convertToRawType(resolvedType);", "+\t\t\tthis.bound = env.convertUnresolvedBinaryToRawType(resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4f0c9c5c50c650ccae7a4fb1f360bfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " public void if_acmpne(Label lbl)", "signatureAfterChange": " public void if_acmpne(BranchLabel lbl)", "diff": ["-public void if_acmpne(Label lbl) {", "+public void if_acmpne(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d503f8f2bbe6f4568c30207a9b1fb216", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "b7ff59a9f7a88f8cdef6546bff0e33b8f3b09f28", "commitAfterChange": "47dd59c8b6e7cd0a363f5c7a3e5323d2ab0e6afe", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tprivate TypeBinding minimalErasedCandidate(TypeBinding[] types, List invocations)", "signatureAfterChange": " \tprivate TypeBinding minimalErasedCandidate(TypeBinding[] types, List invocations)", "diff": ["-\t\t\t\t\t\ttypesToVisit.add(itsSuperclass);", "+\t\t\t\t\t\ttypesToVisit.add(itsSuperclassErasure);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d50b8c7f278449946a3a742a0541d7e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel, boolean checkNull, int offset, int length)", "signatureAfterChange": " \tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel, boolean checkNull, int offset, int length)", "diff": ["-\tprivate void runTest(DefaultCodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel, boolean checkNull, int offset, int length) {", "+\tprivate void runTest(CodeFormatter codeFormatter, String packageName, String compilationUnitName, int kind, int indentationLevel, boolean checkNull, int offset, int length) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d511fa38b7b5784617c754298c61b4a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a73c1b70646c33788c416636d54ca7b824b36c44", "commitAfterChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "methodNumberBeforeChange": 399, "methodNumberAfterChange": 399, "signatureBeforeChange": " \tpublic void test380()", "signatureAfterChange": " \tpublic void test380()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, \"4\");", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, \"4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d516bb0ecf047ae928572170fb9326c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " protected void consumeEnterAnonymousClassBody()", "signatureAfterChange": " protected void consumeEnterAnonymousClassBody()", "diff": ["-\tmarkCurrentMethodWithLocalType();", "+\tmarkEnclosingMemberWithLocalType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d51775ecac63c60e9ea37d99b018ac6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolveUsing(BlockScope givenScope)", "signatureAfterChange": "  \tpublic void resolveUsing(BlockScope givenScope)", "diff": ["-\t\tif ((this.bits & UndocumentedEmptyBlockMASK) != 0) {", "+\t\tif ((this.bits & UndocumentedEmptyBlock) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5225e2cec804ef3d9192a67f75bc5dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ddd224fb46a93d2d42c51b540573c4ff473b8c5", "commitAfterChange": "185794a74ce9e7c2b47a4b8dbd2f41e89a7a469e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic boolean visit(ArrayAccess node)", "signatureAfterChange": "\r \tpublic boolean visit(AnonymousClassDeclaration node)", "diff": ["+\tpublic boolean visit(AnonymousClassDeclaration node) {\r", "+\t\treturn true;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5275e9eb594f913554cbfbcfe1e4b0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationMirrorImpl.java", "commitBeforeChange": "ca3904810f95e1bcd38fe30169e6be65df9fab10", "commitAfterChange": "8d889a3eb8b924cc60e70fa9d37c9ce9262cf8ad", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic Map<? extends ExecutableElement, ? extends AnnotationValue> getElementValues()", "signatureAfterChange": " \tpublic Map<? extends ExecutableElement, ? extends AnnotationValue> getElementValues()", "diff": ["-\t\t\tnew HashMap<ExecutableElement, AnnotationValue>(pairs.length);", "+\t\t\tnew LinkedHashMap<ExecutableElement, AnnotationValue>(pairs.length);", "-\t\t\t\t// ideally we should be able to create a fake ExecuableElementImpl", "+\t\t\t\t// ideally we should be able to create a fake ExecutableElementImpl"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d52d9654442c3f1d08ed3028cd81d0d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetAllocationExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\targument.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+\t\t\t\targument.bits |= DisableUnnecessaryCastCheck; // will check later on"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5481479cb5c2ddc5214870022a4da6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void testParameterizedTypeSingleArgument03() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeSingleArgument03() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedSourceType(unit, \"NonGeneric.GenericMember<Exception>\"); //$NON-NLS-1$", "+\t\tParameterizedSourceType type = selectParameterizedType(unit, \"NonGeneric.GenericMember<Exception>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5689c4b8e564755eaa4e1e9d29c54a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingMethodDeclTest.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate void setExtraDimensions(ASTRewrite rewrite, MethodDeclaration methodDecl, int extraDimensions)", "signatureAfterChange": " \tprivate void setExtraDimensions(ASTRewrite rewrite, MethodDeclaration methodDecl, int extraDimensions)", "diff": ["-\t\t\t\tlistRewrite.insertFirst(methodDecl.getAST().newExtraDimension(), null);", "+\t\t\t\tlistRewrite.insertFirst(methodDecl.getAST().newDimension(), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d587c50f4ac4d2704ea87a7a0818d8ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate PackageFragmentRoot getPkgFragmentRoot(String pathString)", "signatureAfterChange": " \tprivate PackageFragmentRoot getPkgFragmentRoot(String pathString)", "diff": ["-\t\t\t\t\tif (root.getPath().isPrefixOf(path) && !Util.isExcluded(path, root.fullInclusionPatternChars(), root.fullExclusionPatternChars(), false)) {", "+\t\t\t\t\tif (root.internalPath().isPrefixOf(path) && !Util.isExcluded(path, root.fullInclusionPatternChars(), root.fullExclusionPatternChars(), false)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d59dddad8f3f58ce79e29903791100c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "a82ce37ff874ba0e833f2970ef837c525377a572", "commitAfterChange": "b4f075361126213edb4ab60051081d2143c229e2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t public HierarchyResolver(INameEnvironment nameEnvironment, Map settings, IHierarchyRequestor requestor, IProblemFactory problemFactory)", "signatureAfterChange": " \t public HierarchyResolver(INameEnvironment nameEnvironment, Map settings, IHierarchyRequestor requestor, IProblemFactory problemFactory)", "diff": ["-\tthis.initialize(", "+\tthis.setEnvironment("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5c593602492d8f38633df09f3bf5ebb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testClasspathExternalize() throws CoreException", "signatureAfterChange": " public void testClasspathExternalize() throws CoreException", "diff": ["-\t\tIJavaProject project= this.createJavaProject(\"P\", new String[] {}, new String[] {getExternalJCLPath()}, \"\");", "+\t\tIJavaProject project= this.createJavaProject(\"P\", new String[] {}, new String[] {getExternalJCLPathString()}, \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5cc6e9fde36ebc4ad7838845f61eb73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyNotInClasspathTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void testCommit() throws CoreException", "signatureAfterChange": "  public void testCommit() throws CoreException", "diff": ["-\tassertEquals(", "+\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5e4a0358bd92fa5ce919d10e96477a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tprivate void findJavadocParamNames(char[] token, char[][] missingParams, boolean isTypeParam)", "signatureAfterChange": " \tprivate void findJavadocParamNames(char[] token, char[][] missingParams, boolean isTypeParam)", "diff": ["-\t\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.JAVADOC_PARAM_REF, this.actualCompletionPosition);", "+\t\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.JAVADOC_PARAM_REF, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d605fd3e356c4ae7e20c70c66adddf77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "signatureAfterChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceTypes(), packageBinding);\r", "+\t\ttypeRequestor.accept(answer.getSourceType(), packageBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d60b3381cff68201d17727d88376be68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  public SearchMatch newPackageReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tASTNode reference)", "signatureAfterChange": "  public PackageReferenceMatch newPackageReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tASTNode reference)", "diff": ["-public SearchMatch newPackageReferenceMatch(", "+public PackageReferenceMatch newPackageReferenceMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6152bbb6294ea14bd2b5da18a91bc42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileManager.java", "commitBeforeChange": "a2ea0fcdb64df5f36a0bf2ffec84669e3f62dfd4", "commitAfterChange": "9db80bfa8f5d6f7bab214c95a4d83c3bdedb2628", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate Iterable<? extends File> getEndorsedDirsFrom(String path)", "signatureAfterChange": "  \tprivate Iterable<? extends File> getEndorsedDirsFrom(String path)", "diff": ["-\t\t} catch (InvalidInputException e) {", "+\t\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d61f3c90573ee4ce1e231805ab566e09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \t\tpublic boolean match(PackageDeclaration node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(MemberValuePair node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(MemberValuePair node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d62e0ee670a1f87fccc5e637b94f7eb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "64342acc164a9968ba79765379806845ac92aaa7", "commitAfterChange": "1c76d03d66c0d7e831f9b6637a5d3bd72a811b05", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tprivate void reportPrimaryError(int msgCode, int nameIndex, int token, int scopeNameIndex)", "signatureAfterChange": " \tprivate void reportPrimaryError(int msgCode, int nameIndex, int token, int scopeNameIndex)", "diff": ["-\t\t\t\tproblemReporter().parseErrorUnexpectedEOF(", "+\t\t\t\tproblemReporter().parseErrorUnexpectedEnd("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d636696690ed318c5a2b85081417d725", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected void reportInvalidType(Scope scope)", "signatureAfterChange": "  \tprotected void reportInvalidType(Scope scope)", "diff": ["-\t\tscope.problemReporter().javadocInvalidType(this, this.resolvedType, scope.getModifiers());", "+\t\tscope.problemReporter().javadocInvalidType(this, this.resolvedType, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d667aec3d20f6648e4b80f086adcb63f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "commitAfterChange": "b21cadb5eae53d9f84dce9f073b5350a267b6ad6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void configurePluginDebugOptions()", "signatureAfterChange": " \tpublic void configurePluginDebugOptions()", "diff": ["-\t\t\tif(option != null) SearchEngine.VERBOSE = option.equalsIgnoreCase(\"true\") ; //$NON-NLS-1$", "+\t\t\tif(option != null) SearchBasicEngine.VERBOSE = option.equalsIgnoreCase(\"true\") ; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d67962147b145d3d1a49af67cfdd1754", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddCompilationUnitToIndex.java", "commitBeforeChange": "994909f27ab64cbff8a4b8b71b6f8d78e265bc42", "commitAfterChange": "fd0bab5fda3357e5a56e4647b1a6d36779abe285", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public String toString()", "signatureAfterChange": "\r \tpublic String toString()", "diff": ["-}\r", "-public String toString(){\r", "-\treturn \"indexing \" + resource.getName(); //$NON-NLS-1$\r", "-}\r", "+\tpublic String toString() {\r", "+\t\treturn \"indexing \" + resource.getFullPath(); //$NON-NLS-1$\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d67d44480dee0c945769860cf3552630", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void resolve(BlockScope scope)", "signatureAfterChange": " public void resolve(BlockScope scope)", "diff": ["-\tif (methodType != null && scope.areTypesCompatible(expressionType, methodType)) {", "+\tif (methodType != null && Scope.areTypesCompatible(expressionType, methodType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d69682095c101b2495a282f47df7f98f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "e8fbf4db76f3cb4cdf82ad5223795b2651c6d983", "commitAfterChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic IQueryResult[] queryFilesReferringToPrefix(char[] prefix)", "signatureAfterChange": " \tpublic String[] queryFilesReferringToPrefix(char[] prefix)", "diff": ["-\tpublic IQueryResult[] queryFilesReferringToPrefix(char[] prefix) {", "+\tpublic String[] queryFilesReferringToPrefix(char[] prefix) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6aae9e5f4e0e59cecba3f31b8cf8762", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testAddExclusionOnPackage() throws CoreException", "signatureAfterChange": " public void testAddExclusionOnPackage() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6b6e2d0c33f0552463f929b0514291c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/State.java", "commitBeforeChange": "ce916e079f7df7322e8f085c95df150f34987aee", "commitAfterChange": "bd66f33da6dcc33c67153a2129d6fec0fda88ac8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected State(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected State(JavaBuilder javaBuilder)", "diff": ["-\tthis.structuralBuildNumbers = new LookupTable(3);\r", "+\tthis.structuralBuildNumbers = new HashtableOfObject(3);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ccdde7778ea8634618bb11c5aa4935", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ScannerTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\t\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e7a35ec5e46e44a88ff466dc4924cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void testRenameResourceIncludedPackage() throws CoreException", "signatureAfterChange": " public void testRenameResourceIncludedPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6ec91f569644580cfa0c5eaacd1124d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "a11ec54f2e1e149e77b968382e79f482cc29add9", "commitAfterChange": "831d96bc5763622ed503192c35bfd6688abedd96", "methodNumberBeforeChange": 248, "methodNumberAfterChange": 259, "signatureBeforeChange": " protected void consumePrimaryNoNewArrayPrimitiveType()", "signatureAfterChange": " protected void consumePrimaryNoNewArrayPrimitiveType()", "diff": ["-\t\tnew ClassLiteralAccess(this.intStack[this.intPtr--], getTypeReference(0)));", "+\t\tnew ClassLiteralAccess(this.intStack[this.intPtr--], getUnannotatedTypeReference(0)));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6f6dd1224b35f159efa69632a023d2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean boundCheck(TypeBinding argumentType)", "signatureAfterChange": " \tpublic boolean boundCheck(TypeBinding argumentType)", "diff": ["-\t    switch (this.kind) {", "+\t    switch (this.boundKind) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d703aea2573c2b779568340c4ed99241", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public Label continueLabel()", "signatureAfterChange": "  public BranchLabel continueLabel()", "diff": ["-public Label continueLabel() {", "+public BranchLabel continueLabel() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7070d3636d45a837895830e01c3db27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic boolean match(ConstructorInvocation node, Object other)", "signatureAfterChange": " \tpublic boolean match(ConstructorInvocation node, Object other)", "diff": ["-\t\tif (node.getAST().apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d708f790aaaf70cc597ef5fda137540c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeElementImpl.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t@Override \tpublic boolean hides(Element hidden)", "signatureAfterChange": "  \t@Override \tpublic boolean hides(Element hidden)", "diff": ["-\t\treturn null != hiderBinding.enclosingType().findSuperTypeWithSameErasure(hiddenBinding.enclosingType()); ", "+\t\treturn null != hiderBinding.enclosingType().findSuperTypeOriginatingFrom(hiddenBinding.enclosingType()); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d70b132f2c345ac70f51b4da0bb7ca89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/FilerImpl.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t     public FilerImpl( ProcessorEnvImpl env )", "signatureAfterChange": " \t     public FilerImpl( BuildEnv env )", "diff": ["-    public FilerImpl( ProcessorEnvImpl env )", "+    public FilerImpl( BuildEnv env )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d70f7d310f306d2f53b37cddcf8932a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/SimpleDOMBuilder.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void enterType(TypeInfo typeInfo)", "signatureAfterChange": " protected void enterType(TypeInfo typeInfo)", "diff": ["-\t\t\ttypeInfo.modifiers, CharOperation.charArrayToStringArray(typeInfo.superinterfaces), typeInfo.kind == IGenericType.CLASS); // TODO (jerome) should pass in kind", "+\t\t\ttypeInfo.modifiers, CharOperation.charArrayToStringArray(typeInfo.superinterfaces), typeInfo.kind == IGenericType.CLASS_DECL); // TODO (jerome) should pass in kind"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7160266041e4a5985fdcce14240818d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "34d5927c8aa597ec27ba8ff238ed9e64dd94f690", "commitAfterChange": "3ddb2a51bb7ecb990a4cb3c8c58e694fcc8fcead", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " private boolean isAffectedByPackageFragmentRoot(IJavaElementDelta delta, IJavaElement element, int eventType)", "signatureAfterChange": " private boolean isAffectedByPackageFragmentRoot(IJavaElementDelta delta, IJavaElement element, int eventType)", "diff": ["-\t\t\tif ((flags & IJavaElementDelta.F_REMOVED_FROM_CLASSPATH) > 0 || (flags & IJavaElementDelta.F_CONTENT) > 0) {", "+\t\t\tif ((flags & IJavaElementDelta.F_REMOVED_FROM_CLASSPATH) > 0 || (flags & IJavaElementDelta.F_ARCHIVE_CONTENT_CHANGED) > 0) {", "-\t\t\t\t// the the type hierarchy has changed", "+\t\t\t\t// then the type hierarchy has changed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d720043c162cba3a2bde69670e146e80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testAddExclusionOnPackage() throws CoreException", "signatureAfterChange": " public void testAddExclusionOnPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d720224a0164433a66d1461a2eaee0e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRootInfo.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " void setNonJavaResources(Object[] resources)", "signatureAfterChange": " void setNonJavaResources(Object[] resources)", "diff": ["-\tthis.fNonJavaResources = resources;", "+\tthis.nonJavaResources = resources;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d721d926932e0c33b2a093e468f8bd0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testSuggestFieldName014()", "signatureAfterChange": " public void testSuggestFieldName014()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d75272b346104399b7d68982f0b92acf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5ab1b44e840f5c63c769a4409a1d1ee2ee2b555d", "commitAfterChange": "180e4e45746dd1c7939f8d071838acd40ff207da", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  public JavaSearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tSearchParticipant participant,  \t\tIResource resource)", "signatureAfterChange": "  public SearchMatch newDeclarationMatch( \t\tIJavaElement element, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tSearchParticipant participant,  \t\tIResource resource)", "diff": ["-public JavaSearchMatch newDeclarationMatch(", "+public SearchMatch newDeclarationMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d756d95492128b4b2d90c555bbf1202e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AssertionTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuiteWithMinimalCompliance(testClass(), F_1_4);", "+\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7700f5ed524eb2c030330963bfb73ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testInvalidTagsMethodDefaults()", "signatureAfterChange": " \tpublic void testInvalidTagsMethodDefaults()", "diff": ["-\t\trunConformTest(InvalidReferencesMethodJavadocComments);", "+\t\trunConformTest(METHODS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d77d918841518bc3529f9ba2017eeac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyElementsOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected IJavaModelStatus verify()", "signatureAfterChange": " protected IJavaModelStatus verify()", "diff": ["-\tif (this.renamingsList != null && this.renamingsList.length != fElementsToProcess.length) {", "+\tif (this.renamingsList != null && this.renamingsList.length != elementsToProcess.length) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d785f121254f8fb5c3136fe28b3e064c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 421, "methodNumberAfterChange": 421, "signatureBeforeChange": " \tpublic void test402()", "signatureAfterChange": " \tpublic void test402()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_ARRAY_INITIALIZER, JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_BRACES_IN_ARRAY_INITIALIZER, JavaCore.DO_NOT_INSERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7958fb421c94b9f2c8a14f16198975a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tboolean visit(AnnotationSingleNameReference argument, BlockScope scope);", "signatureAfterChange": " \tboolean visit(JavadocSingleNameReference argument, BlockScope scope);", "diff": ["-\tboolean visit(AnnotationReturnStatement statement, BlockScope scope);", "-\tboolean visit(AnnotationSingleNameReference argument, BlockScope scope);", "+\tboolean visit(JavadocReturnStatement statement, BlockScope scope);", "+\tboolean visit(JavadocSingleNameReference argument, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a6abe997ce2ed9c8e01ab466aa0372", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/JavaBuilder.java", "commitBeforeChange": "6fd2d27e76da885e08b25f5a065ea5e0c622d413", "commitAfterChange": "8b76fbadc737bd965aca978e0e3517802f9a8476", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r private boolean hasOutputLocationChanged()", "signatureAfterChange": "\r \r private boolean hasOutputLocationChanged()", "diff": ["-\treturn !outputFolder.getLocation().toString().equalsIgnoreCase(lastState.outputLocationString);\r", "-}\r", "+\treturn !outputFolder.getLocation().toString().equals(lastState.outputLocationString);\r", "+} \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7a84b930cd8f219b743d1c43717b439", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testCreateResourceExcludedPackage() throws CoreException", "signatureAfterChange": " public void testCreateResourceExcludedPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b4d42ad98b518558918979716a7335", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void completeCodeAttribute(int codeAttributeOffset)", "signatureAfterChange": " \tpublic void completeCodeAttribute(int codeAttributeOffset)", "diff": ["-\t\t\t\tif (exceptionHandler.exceptionType == TypeBinding.NullBinding) {", "+\t\t\t\tif (exceptionHandler.exceptionType == BaseTypes.NullBinding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7def2d467adea382be1eb03c59bde6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IntLiteral.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public IntLiteral(int intValue)", "signatureAfterChange": " public IntLiteral(int intValue)", "diff": ["-\tconstant = Constant.fromValue(intValue);", "+\tconstant = IntConstant.fromValue(intValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7e4a430ee676c53ab62c62190cdfa81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "4e993a8d5cbdc7815c7050ad8787e1c566312d6a", "commitAfterChange": "7d431a6663c03691d383a66bc16841bb87e3308d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic ReferenceExpression(TypeReference type, TypeReference[] typeArguments, int sourceEnd)", "signatureAfterChange": "  \tpublic ReferenceExpression(TypeReference type, TypeReference[] typeArguments, int sourceEnd)", "diff": ["-\t\tthis.typeParameters = typeArguments;", "+\t\tthis.typeArguments = typeArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7fb9f8f0514959f91dc1dcb777d81d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testInnerType1() throws JavaModelException", "signatureAfterChange": " public void testInnerType1() throws JavaModelException", "diff": ["-\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in TypeHierarchy]]]]\\n\" + ", "+\t\t\"  Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in TypeHierarchy]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7ff3e78acf57f203c2c916b4cea627e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " String computeIndexName(IPath path)", "signatureAfterChange": " String computeIndexName(IPath path)", "diff": ["-\t\t\tJobManager.verbose(\"-> index name for \" + pathString + \" is \" + fileName); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tUtil.verbose(\"-> index name for \" + pathString + \" is \" + fileName); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d80cb8112b81b51017a993eabe87eaae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 174, "methodNumberAfterChange": 174, "signatureBeforeChange": " protected void consumeStaticOnly()", "signatureAfterChange": " protected void consumeStaticOnly()", "diff": ["-\tcheckAnnotation(); // might update declaration source start", "+\tcheckComment(); // might update declaration source start"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d814bda25159fb791da7587a8585750c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "dd7a18d099a9b8a557ed1fb7fc46e76ea5cfac10", "commitAfterChange": "61620cc52bd94ec88d2d4d64acf040dcf8022b0a", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic ReferenceBinding findMemberType(char[] typeName, ReferenceBinding enclosingType)", "signatureAfterChange": " \tpublic ReferenceBinding findMemberType(char[] typeName, ReferenceBinding enclosingType)", "diff": ["-\t\tSourceTypeBinding enclosingSourceType = enclosingSourceType();", "+\t\tReferenceBinding enclosingSourceType = enclosingSourceType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8197c6a8eb33f8e719b9c09b07d79f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "6bb02c884b60fa92d99b3505c82c23af047d9221", "commitAfterChange": "74beeee794c904b249a24cd671c8ca981d7e3ee7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " private String[] determinePossibleSubTypes(IProgressMonitor monitor) throws JavaModelException, CoreException", "signatureAfterChange": " private String[] determinePossibleSubTypes(IProgressMonitor monitor) throws JavaModelException, CoreException", "diff": ["-\t\tif (monitor != null) monitor.beginTask(\"\", 500/*500 layers max*/); //$NON-NLS-1$", "+\t\tif (monitor != null) monitor.beginTask(\"\", MAXTICKS); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d81d418b8d26ed18d50ca33bed679855", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/IfStatement.java", "commitBeforeChange": "d9fc56cfe59f158965221ab64ef3ac7946872d89", "commitAfterChange": "53aa69b42e5aee6c6df8beec071bca3dff321c84", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tint treeSize()", "signatureAfterChange": " \tint treeSize()", "diff": ["-\t\t\t+ (expression == null ? 0 : getElseStatement().treeSize())", "+\t\t\t+ (expression == null ? 0 : getExpression().treeSize())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d81dc5605491eaa2a81f062e3e86a010", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AllJavaModelTests.java", "commitBeforeChange": "997a25bfb062d5e13ab988c44d8a015d4710ad9a", "commitAfterChange": "fa16fc80b475f974c3040ef90f01075968f51405", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tAbstractJavaModelTests.TESTS_SEARCH = null;", "+\tAbstractJavaModelTests.TESTS_RANGE = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d830d7b60e5ae404e261226b947e1e15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocPackageCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void test040() throws JavaModelException", "signatureAfterChange": " public void test040() throws JavaModelException", "diff": ["-\t\t\"OtherTypes[METHOD_REF<CONSTRUCTOR>]{OtherTypes(), Ljavadoc.tags.OtherTypes;, ()V, OtherTypes, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"OtherTypes[METHOD_REF<CONSTRUCTOR>]{OtherTypes(), Ljavadoc.tags.OtherTypes;, ()V, OtherTypes, null, \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8628c34ddb08b6341ff14ba5d07252e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "24134b187b46ea16212a45107324227f46ba3e4a", "commitAfterChange": "496121d0ad975842fb45544aac592b8195531ce7", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor)", "signatureAfterChange": "  \tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor)", "diff": ["-\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tthis.printLineComment(this.scanner.getRawTokenSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d86df2fea3f1ae14cf63cfe08746c4c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefConstructorErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefConstructorErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87c497fe05156d0031fa30901b15428", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " private int matchLevel(FieldBinding binding)", "signatureAfterChange": " private int matchLevel(FieldBinding binding)", "diff": ["-\t\tif (binding == ArrayBinding.LengthField) {", "+\t\tif (binding == ArrayBinding.ArrayLength) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d896cfbe2f09420326dc7d941b1779ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "\r \tprivate int computeRelevanceForInterface()", "signatureAfterChange": "\r \tprivate int computeRelevanceForInterface()", "diff": ["-\t\t\treturn INTERFACERELEVANCE;\r", "+\t\t\treturn R_INTERFACE;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8bb8923249e3c05e4c41265ae2438c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionJavadoc.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void resolve(CompilationUnitScope scope)", "signatureAfterChange": " \tpublic void resolve(MethodScope scope)", "diff": ["-\tpublic void resolve(CompilationUnitScope scope) {", "-\t\tinternalResolve(scope);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8bd397a2dcf0b5f09e4ce3af39510a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding18.java", "commitBeforeChange": "b536376175d43bf269f63b23c4d221e67b0fd9ab", "commitAfterChange": "ac33227f5aefea8ca107e0dff1e50be7a78ccf5b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding erasure()", "signatureAfterChange": "  \tpublic TypeBinding erasure()", "diff": ["-\t\t\treturn this.environment.createIntersectionCastType(erasures);", "+\t\t\treturn this.environment.createIntersectionType18(erasures);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8dcb4152e2981980fa948791315a96a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public void test017() throws JavaModelException", "signatureAfterChange": "  public void test017() throws JavaModelException", "diff": ["-\t\t\"java.lang[PACKAGE_REF]{java.lang, java.lang, null, null, null, \"+this.positions+R_DICQNR+\"}\"", "+\t\t\"java.lang[PACKAGE_REF]{java.lang, java.lang, null, null, null, \"+this.positions+R_DRICQNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8ddba8b9ab6b566fd258ebb4ba64885", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "5f0ac9eeff6d45609e604f6188bdf27bdf21a2dd", "commitAfterChange": "4c4f60d92960861c307d0ff9e962a0bd2a635323", "methodNumberBeforeChange": 490, "methodNumberAfterChange": 490, "signatureBeforeChange": " \tpublic void test468()", "signatureAfterChange": " \tpublic void test468()", "diff": ["-\t\trunTest(codeFormatter, \"test468\", \"A.java\", CodeFormatter.K_CLASS_BODY_DECLARATIONS);//$NON-NLS-1$ //$NON-NLS-2$", "+\t\trunTest(codeFormatter, \"test468\", \"A.java\", CodeFormatter.K_COMPILATION_UNIT);//$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8de91b51719343b1495420587903140", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PrimitiveType.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static List propertyDescriptors(int apiLevel)", "signatureAfterChange": " \tpublic static List propertyDescriptors(int apiLevel)", "diff": ["-\t\t\tcase AST.JLS4:", "+\t\t\tcase AST.JLS4_INTERNAL:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8eac44f8d7deb6637441397c3d56a77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testBug113376a() throws JavaModelException", "signatureAfterChange": " public void testBug113376a() throws JavaModelException", "diff": ["-\t\t\"Collection[TYPE_REF]{javadoc.util.Collection, javadoc.util, Ljavadoc.util.Collection;, null, null, \"+this.positions+R_DICENQNR+\"}\"", "+\t\t\"Collection[TYPE_REF]{javadoc.util.Collection, javadoc.util, Ljavadoc.util.Collection;, null, null, \"+this.positions+R_DRICENQNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8eb32057edbe4d6a65b4845fa102d75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "5f85e7ad56b4ff0557c2bf2c999084f9107f0617", "commitAfterChange": "0a4aef6498056b8c56c187a24a4c92d14d399d01", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r private void matchReportReference(QualifiedNameReference nameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": "\r private void matchReportReference(QualifiedNameReference nameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tlocator.reportQualifiedReference(nameRef.sourceStart, nameRef.sourceEnd, qualifiedName, element, accuracy);\r", "+\tlocator.reportAccurateReference(nameRef.sourceStart, nameRef.sourceEnd, qualifiedName, element, accuracy);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90aeaac9b48a6a00ed5837fe46c5a24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 193, "signatureBeforeChange": " \tpublic void test172()", "signatureAfterChange": " \tpublic void test172()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91264b2986504d792a137fe1a0eaf23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "98f970f58fc61208a8cdd52e3b9981ef32c5937b", "commitAfterChange": "29a8044fc706583901ff89364d428dff04f6a567", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void reconcile(ReconcileContext context)", "signatureAfterChange": " \t \tpublic void reconcile(ReconcileContext context)", "diff": ["-\t\t\t\tAnnotationProcessorFactoryLoader.getLoader().getFactoriesAndAttributesForProject( javaProject );", "+\t\t\t\tAnnotationProcessorFactoryLoader.getLoader().getJava5FactoriesAndAttributesForProject( javaProject );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91898b1f9c32244742acc28f75f94a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "89b15ba6d3aa28748d29d9d1d4b083699e7539bb", "commitAfterChange": "4a19373fcf0b223c67accf2e0e240651b8f7bc94", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject2() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject2() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_BUILDPATH)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d922d8aa7948975fd819868f33c00afa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/MemberDeclarationImpl.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "signatureAfterChange": "          public <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "diff": ["-\t\tfinal IResolvedAnnotation[] instances = getAnnotationInstances();", "+\t\tfinal IAnnotationBinding[] instances = getAnnotationInstances();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d931f34afe41a9c78ed0f6559f7694be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public boolean isPotentiallyNull(LocalVariableBinding local)", "signatureAfterChange": "  public boolean isPotentiallyNull(VariableBinding local)", "diff": ["-public boolean isPotentiallyNull(LocalVariableBinding local) {", "+public boolean isPotentiallyNull(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d935ae9a807f1f2af3595400a96f31a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "30692448718de71df165cc52c018bee7df31a8fb", "commitAfterChange": "7fbd6c6645520ea8c438436fb3626bdc9d3414b8", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void exitEnum(int declarationEnd)", "signatureAfterChange": " \tpublic void exitEnum(int declarationEnd)", "diff": ["-\t\texitClass(declarationEnd);", "+\t\texitType(declarationEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d968331df8067ad95f5478b2756f62bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "0ce30fa1efeccdb8f098a9dcf15c46f705a57e6f", "commitAfterChange": "59a26b3b3e45e8769323a82cc5fccc64fe9d5f4a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "diff": ["-\t\t\t\t\t\t&& currentScope.allowBlankFinalFieldAssignment(fieldBinding)", "+\t\t\t\t\t\t&& currentScope.needBlankFinalFieldInitializationCheck(fieldBinding)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d97a09d3549e1020b44424d9cb29bafe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void internalSetExtraDimensions(VariableDeclarationFragment node, int dimensions)", "signatureAfterChange": " \tprivate void internalSetExtraDimensions(VariableDeclarationFragment node, int dimensions)", "diff": ["-\t\t\t\tnode.extraDimensions().add(node.getAST().newExtraDimension());", "+\t\t\t\tnode.extraDimensions().add(node.getAST().newDimension());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d995338d51e4e8d16dde80644214ed36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "40839c8ae241bc3756eb5365b207dfbe748c6775", "commitAfterChange": "5b51a72819d5c60012d8b11dca35a367dee2c02a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "signatureAfterChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "diff": ["-\t\t\t\t\t\t\tparseMethod(parsedUnit, actualCompletionPosition);", "+\t\t\t\t\t\t\tparseBlockStatements(parsedUnit, actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d999ca50fb18111f3e6dab280185c361", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/ReadAnnotationTests.java", "commitBeforeChange": "0eec3068922fbe351501ec0f647de133db6041a4", "commitAfterChange": "c80b21caa7335f2dacd02879f687b71c92d3e1aa", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate IProject setupTest() throws Exception", "signatureAfterChange": " \t \tprivate IProject setupTest() throws Exception", "diff": ["-\t\tReadAnnotationProcessor.ERROR = \"\";", "+\t\tReadAnnotationProcessor.ERROR = EMPTY_STRING; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9a4329ca07c61477863df1af1971613", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  public void test053() throws JavaModelException", "signatureAfterChange": "  public void test053() throws JavaModelException", "diff": ["-\t\t\"method[METHOD_REF]{method(), Ljavadoc.types.tags.OtherTypes;, ()V, method, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"method[METHOD_REF]{method(), Ljavadoc.types.tags.OtherTypes;, ()V, method, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9add9e6473c55689d1c29e23ed60731", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public boolean isEnum() throws JavaModelException", "signatureAfterChange": " public boolean isEnum() throws JavaModelException", "diff": ["-\treturn info.getKind() == IGenericType.ENUM;", "+\treturn info.getKind() == IGenericType.ENUM_DECL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9bb3d1797261a64576d707c93787521", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/TypeConverter.java", "commitBeforeChange": "e5f01975d99954b1483781c8c9c08a016b294102", "commitAfterChange": "6c19a02159d7dcaca8c603f73a96718172825002", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tprotected TypeConverter(ProblemReporter problemReporter, char memberTypeSeparator)", "signatureAfterChange": "  \tprotected TypeConverter(ProblemReporter problemReporter, char memberTypeSeparator)", "diff": ["-\t\tthis.has1_5Compliance = problemReporter.options.complianceLevel >= ClassFileConstants.JDK1_5;", "+\t\tthis.has1_5Compliance = problemReporter.options.originalComplianceLevel >= ClassFileConstants.JDK1_5;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d994cba730f7dfd97d735c727a07a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public void test055() throws JavaModelException", "signatureAfterChange": "  public void test055() throws JavaModelException", "diff": ["-\t\t\"paramMethod[JAVADOC_METHOD_REF]{{@link #paramMethod(String, boolean, Object)}, Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICENUNRIT+\"}\"", "+\t\t\"paramMethod[JAVADOC_METHOD_REF]{{@link #paramMethod(String, boolean, Object)}, Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DRICENUNRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d9d583697d6c009e9d188f02b8feda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "379c3ab0afe7d308730ac607ecd986483ce1e39a", "commitAfterChange": "57f58e2a83bf12a567b63842cf84a5fc12572160", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "\r public Object toStringInfo(int tab, StringBuffer buffer)", "signatureAfterChange": "\r public Object toStringInfo(int tab, StringBuffer buffer)", "diff": ["-\tObject info = fgJavaModelManager.getInfo(this);\r", "+\tObject info = fgJavaModelManager.peekAtInfo(this);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9da981123441f37f3c3f4c9bc8c0f1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void test113() throws JavaModelException", "signatureAfterChange": " public void test113() throws JavaModelException", "diff": ["-\t\t\t\"ZBasicTestTypes.Inner[TYPE_REF]{Inner, javadoc.types, Ljavadoc.types.ZBasicTestTypes$Inner;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\t\"ZBasicTestTypes.Inner[TYPE_REF]{Inner, javadoc.types, Ljavadoc.types.ZBasicTestTypes$Inner;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9e293669ae1401e1f49f45cca354cbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "d9da62b96418ec7c4e63f83dc9c7f0cfe3e6af1a", "commitAfterChange": "20ba2adddd9acb8b30c82e8f2340c23092f7b231", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private String removeIndentAndNewLines(String code, IDocument document, ICompilationUnit cu)", "signatureAfterChange": " private String removeIndentAndNewLines(String code, IDocument document, ICompilationUnit cu)", "diff": ["-\t\ttabWidth = Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_TAB_LENGTH));", "+\t\ttabWidth = Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9fc8091c421c87f14540abf55ca94c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "diff": ["-\t\tpatternLocator.match(methodDeclaration, matchSet);", "+\t\tpatternLocator.match(methodDeclaration, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da0476c18fb06326459a2b405e8241ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMethod.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected SourceMethod(IType parent, String name, String[] parameterTypes)", "signatureAfterChange": " protected SourceMethod(JavaElement parent, String name, String[] parameterTypes)", "diff": ["-protected SourceMethod(IType parent, String name, String[] parameterTypes) {", "+protected SourceMethod(JavaElement parent, String name, String[] parameterTypes) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da053f43b3e5faae9a509ba78341eec9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "40a85c2d4c57226c917bc0f991a26ac5a5d8b085", "commitAfterChange": "a256960ed4710f2897d78e274a4eaeebfce80126", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tStringLiteralConcetanation literal, \t\t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tStringLiteralConcatenation literal, \t\t\tBlockScope scope)", "diff": ["-\t\t\tStringLiteralConcetanation literal,", "+\t\t\tStringLiteralConcatenation literal,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da23c119a9df97b3edf8f53c16d779b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "83995222dce4177aadf40f6c17434696697290bf", "commitAfterChange": "15b97210b07f10f527764b60fec78a55d5c144b5", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": " public static long getIrritant(int problemID)", "signatureAfterChange": " public static long getIrritant(int problemID)", "diff": ["-\t\tcase IProblem.UnnecessaryNONNLSTag :", "+\t\tcase IProblem.UnnecessaryNLSTag :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da246b878ac66e62fbef4834847da406", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8", "commitAfterChange": "7df061f9da0ab96be87e5851cb157a28c5f5bca0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tfinal List internalGetChildListProperty(ChildListPropertyDescriptor property)", "signatureAfterChange": " \tfinal List internalGetChildListProperty(ChildListPropertyDescriptor property)", "diff": ["-\t\t\treturn getExtraDimensionInfos();", "+\t\t\treturn extraDimensionInfos();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da3034cec16496896d1b477b4448716d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testReplaceEnd() throws CoreException", "signatureAfterChange": " public void testReplaceEnd() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da3893961321081f15e78fa3d3f21584", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AnonymousLocalTypeDeclaration.java", "commitBeforeChange": "f4bdb5d912579981f22fe9e7c4679e93b1a5f059", "commitAfterChange": "a3a09ad256da223aa1f3d2fe29b81e346d09a16c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic MethodBinding createsInternalConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "signatureAfterChange": " \tpublic MethodBinding createsInternalConstructorWithBinding(MethodBinding inheritedConstructorBinding)", "diff": ["-\t\tcd.scope = new MethodScope(scope, this, true);", "+\t\tcd.scope = new MethodScope(scope, cd, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da65f2bfc704f2e85e7b9f1fa03a172d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceTypeElementInfo.java", "commitBeforeChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "commitAfterChange": "7234934f3efed703cbf030a33d03d36a447aeef6", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void setHandle(IType handle)", "signatureAfterChange": " protected void setHandle(IType handle)", "diff": ["-\tthis.fHandle= handle;", "+\tthis.handle = handle;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da6c0654df0a890d6a197dbe58fec5d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a9ee2df3848b37b13b74a0d6fb58548ce231875e", "commitAfterChange": "2a16e8a2e7b943b242b9959c374c8d7819b6b3a0", "methodNumberBeforeChange": 530, "methodNumberAfterChange": 530, "signatureBeforeChange": " \tpublic void test511()", "signatureAfterChange": " \tpublic void test511()", "diff": ["-\t\tpreferences.insert_new_line_at_end_of_file = false;", "+\t\tpreferences.insert_new_line_at_end_of_file_if_missing = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da81dd303fc59cfb1c2d820e44baa6bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testBug87868() throws JavaModelException", "signatureAfterChange": " public void testBug87868() throws JavaModelException", "diff": ["-\t\t\"method[METHOD_REF]{method(Object), Ljavadoc.bugs.BasicTestBugs<TS;>;, (TS;)V, method, (s), \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"method[METHOD_REF]{method(Object), Ljavadoc.bugs.BasicTestBugs<TS;>;, (TS;)V, method, (s), \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da8b9594b6e2830a1a109a8002e26743", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "939485ceac933a28ddb093415bf647ec539d2bf9", "commitAfterChange": "a6a76f21a7628f01aed20fa2869a4af025a029d9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprivate String resultForMissingComments(int visibility)", "signatureAfterChange": "  \tprivate String resultForMissingComments(int visibility)", "diff": ["-\t\t// TODO (frederic) see witrh jdt-ui whether we use ignore instead of report", "-\t\t//if (CompilerOptions.ENABLED.equals(reportMissingJavadocCommentsOverriding)) {", "-\t\tif (CompilerOptions.DISABLED.equals(reportMissingJavadocCommentsOverriding)) {", "+\t\tif (CompilerOptions.ENABLED.equals(reportMissingJavadocCommentsOverriding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da8da2e05553b3e0c3fc09c9b33bee5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \t@Override \tpublic TypeAnnotationWalker toMethodParameter(short index)", "signatureAfterChange": " \t \t@Override \tpublic ITypeAnnotationWalker toMethodParameter(short index)", "diff": ["-\tpublic TypeAnnotationWalker toMethodParameter(short index) {", "+\tpublic ITypeAnnotationWalker toMethodParameter(short index) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da96f57e53e9b7436c93a274169df937", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "b22a2b5812440dc4eae4af932b9a3d60e320f25d", "commitAfterChange": "6ea838f3f960432a5bed77b7a9f07ab3ad32c7cf", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void recordNullReference(VariableBinding local, \tASTNode location, int status)", "signatureAfterChange": " protected void recordNullReference(LocalVariableBinding local, \tASTNode location, int status)", "diff": ["-protected void recordNullReference(VariableBinding local,", "+protected void recordNullReference(LocalVariableBinding local,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daa70ed622e441aa2f2b16a8afd53d2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ProblemReferenceBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " public ReferenceBinding closestMatch()", "signatureAfterChange": " public TypeBinding closestMatch()", "diff": ["+ */", "+public TypeBinding closestMatch() {", "+\treturn this.closestMatch;", "-public ReferenceBinding closestMatch() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dab2f1bdc73e661873514edc711abb34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public synchronized void reset()", "signatureAfterChange": " public synchronized void reset()", "diff": ["-\tthis.indexNames = new SimpleLookupTable();", "+\tthis.indexLocations = new SimpleLookupTable();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabc6e80b1c46b844355577b0e6f2e67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic PotentialMatch( \t\t\tMatchLocator2 locator,  \t\t\tIResource resource,  \t\t\tOpenable openable)", "signatureAfterChange": "  \tpublic PotentialMatch( \t\t\tMatchLocator locator,  \t\t\tIResource resource,  \t\t\tOpenable openable)", "diff": ["-\t\t\tMatchLocator2 locator, ", "+\t\t\tMatchLocator locator, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dabdc48d132e91612bdf8d577256eb82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceASTTests.java", "commitBeforeChange": "5281f7a1d02f4134760334f239cbffb833f0ed1c", "commitAfterChange": "b8222e0e4564cc4472bb2fdfd410e7de68bbf0fa", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\tprotected boolean visitNode(ASTNode node)", "signatureAfterChange": " \t\tprotected boolean visitNode(ASTNode node)", "diff": ["-\t\t\tthis.nodesCount++;", "+\t\t\tthis.nodes++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dac69e19835fd27174273878637b3087", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic void endVisit(ConditionalExpression node)", "signatureAfterChange": " \tpublic void endVisit(BlockComment node)", "diff": ["+\t */", "+\tpublic void endVisit(BlockComment node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf1f5bc057d1b9eb181bd2744b57dfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprotected MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tObjectVector found, \t\tMethodBinding concreteMatch)", "signatureAfterChange": " \tprotected MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tObjectVector found, \t\tMethodBinding concreteMatch)", "diff": ["-\t\t\t\t\t\t\tif (environment().methodVerifier().doesMethodOverride(concreteMatch, compatibleMethod))", "+\t\t\t\t\t\t\tif (environment().methodVerifier().isParameterSubsignature(concreteMatch, compatibleMethod))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf289eeb82dac78b2b00a962818122f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperMethodInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tASTNode clone0(AST target)", "signatureAfterChange": " \tASTNode clone0(AST target)", "diff": ["-\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db16eaee23b955947e37dbd06d816888", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t protected BinaryType(IJavaElement parent, String name)", "signatureAfterChange": " \t protected BinaryType(JavaElement parent, String name)", "diff": ["-protected BinaryType(IJavaElement parent, String name) {", "+protected BinaryType(JavaElement parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db35c69afbe2b978270cac771bf0f0d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestBuilderParticipant.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public void processAnnotations(ICompilationParticipantResult[] files)", "signatureAfterChange": "  public void processAnnotations(BuildContext[] files)", "diff": ["-public void processAnnotations(ICompilationParticipantResult[] files) {", "+public void processAnnotations(BuildContext[] files) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db380c27eb98889f5a7119a1aee4218b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "ba1917d8323b975c43d151520213a593a77dc7c0", "commitAfterChange": "90b8a1490825ac6e9009b801582efb3d76f604dd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 18, "signatureBeforeChange": " public IJavaProject[] getOldJavaProjectsList() throws JavaModelException", "signatureAfterChange": " public IJavaProject[] getOldJavaProjectsList() throws JavaModelException", "diff": ["-\tJavaModelManager manager = this.getJavaModelManager();", "+\tJavaModelManager manager = JavaModelManager.getJavaModelManager();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db3cad0e61a87655fed05152fa9b398c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "6d1c57fb2448b115bc8f96943cd4e4f07a42d11a", "commitAfterChange": "d4217008a0577ef6139e05a418f311a9a8588da7", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tstatic void createASTs( \t\t\tfinal IJavaProject javaProject,  \t\t\tfinal ICompilationUnit[] parseUnits, \t\t\tASTRequestor requestor)", "signatureAfterChange": " \tstatic void createASTs( \t\t\tfinal IJavaProject javaProject,  \t\t\tfinal ICompilationUnit[] parseUnits, \t\t\tASTRequestor requestor)", "diff": ["-\t\tASTParser p = ASTParser.newParser( AST.JLS3 );", "+\t\tASTParser p = ASTParser.newParser( AST.JLS4 );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db626c4627481bd9f1cbc88b1b4bd18a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " \tpublic void endVisit(VariableDeclarationStatement node)", "signatureAfterChange": " \tpublic void endVisit(UnionType node)", "diff": ["+\t */", "+\tpublic void endVisit(UnionType node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db641fabd5982ea3b20b36ddb1e75686", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForMethod.java", "commitBeforeChange": "886d0f0c1c856616883aceae38186164d207f2a8", "commitAfterChange": "3bb52dd94a6650dc05eccd3db55f82a70954db23", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildSuite(javadocTestClass());", "+\t\treturn buildTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db65ac8c0b362fcd4da671d0cf413c88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArrayQualifiedTypeReference.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void reportDeprecatedType(Scope scope)", "signatureAfterChange": " \tprotected void reportDeprecatedType(Scope scope)", "diff": ["-\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, this, scope.getModifiers());", "+\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, this, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db66ad68d9d4253cd0a7f9fba8d1affd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "a06218214703d95f526c8a8e7a9ba95c40cf7247", "commitAfterChange": "181d08f984fbd0b3599b94e8d63f55f9bcad62b6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void test0417() throws JavaModelException", "signatureAfterChange": " \tpublic void test0417() throws JavaModelException", "diff": ["-\t\tassertNull(\"No binding\", binding);", "+\t\tassertNotNull(\"No binding\", binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db6ea45f52bc137e50a3ea2e059de482", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "49716bf4b4bfac2e9c15a5ccf977b85753b02ce1", "commitAfterChange": "18d1b818e2c1363e3c9436625e46da37b9994fdc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic DefaultCodeFormatter()", "signatureAfterChange": " \t \tpublic DefaultCodeFormatter()", "diff": ["-\t\tthis(new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getDefaultSettings()), null);", "+\t\tthis(new DefaultCodeFormatterOptions(DefaultCodeFormatterConstants.getJavaConventionsSettings()), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db8d7d0963bff6c8effb2dca9d02e467", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/APTTestBase.java", "commitBeforeChange": "b9128093e8302bc6585f51afb5cbfa4db580aa85", "commitAfterChange": "8036c2dbcd62f164037a717d38250a661a02697b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tprotected void expectingMarkers(String[] messages)", "signatureAfterChange": " \t \tprotected void expectingMarkers(String[] messages)", "diff": ["-\t\tfinal IMarker[] markers = getAPTBuildMarkerFor(env.getWorkspaceRootPath());", "+\t\tfinal IMarker[] markers = getAllAPTMarkers(env.getWorkspaceRootPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db8dbb3914cb32e25be5790999b99df1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "5cd6d554e47148a099f1dfe40c111b4b659cb120", "commitAfterChange": "c5fec88b868b4e8d64f7d2ee78ddf0758daf54bd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate boolean connectSuperInterfaces()", "signatureAfterChange": " \tprivate boolean connectSuperInterfaces()", "diff": ["-\t\t\t\tproblemReporter().superinterfaceMustBeAnInterface(sourceType, referenceContext, superInterface);", "+\t\t\t\tproblemReporter().superinterfaceMustBeAnInterface(sourceType, superInterfaceRef, superInterface);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dba0227638f6a02e604cf707e9db2dbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleMemberAnnotation.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, ClassScope scope)", "diff": ["-\tpublic void traverse(ASTVisitor visitor, CompilationUnitScope scope) {", "+\tpublic void traverse(ASTVisitor visitor, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbb10e777736b05eb6654d89ac209039", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "signatureAfterChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "diff": ["-\t\tswitch (originalType.bindingType()) {", "+\t\tswitch (originalType.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbb85b4c21045adb56ff224d4c0444d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "152d18d4cacb9bd3ea7ba43af5713a4d308c0471", "commitAfterChange": "01ebf46478e499b6682d2e0eb34536c095d3cff8", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void testTypeRef_Superinterface() throws CoreException", "signatureAfterChange": " public void testTypeRef_Superinterface() throws CoreException", "diff": ["-\tsearch(((ICompilationUnit) type.getParent()).getType(\"ITest1\"), SUPERINTERFACE_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());", "+\tsearch(((ICompilationUnit) type.getParent()).getType(\"ITest1\"), SUPERTYPE_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbbcac668826b6899f64d7303b65f757", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void resolveStatements(ClassScope upperScope)", "signatureAfterChange": "  \tpublic void resolveStatements(ClassScope upperScope)", "diff": ["-\t\t\tthis.returnType.binding = this.binding.returnType;", "+\t\t\tthis.returnType.resolvedType = this.binding.returnType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbc0d0de0a86600f8265a435fe0a7800", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "330aeaad59d1633d10c0cd3a9ee9ac57073b385f", "commitAfterChange": "960ce528d76bd309a28ce655fc14cff77629ffa5", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tprotected void updateLineEnd()", "signatureAfterChange": " \tprotected void updateLineEnd()", "diff": ["-\t\t\t\tthis.lineEnd = this.endComment;", "+\t\t\t\tthis.lineEnd = this.javadocEnd;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbdf69fa77b7351998e39fb83b815260", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LocalVariableTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbe0370449e8fec20c30fa552917e083", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "584757da660f01c30e15c07d21edc380f5f7902a", "commitAfterChange": "6b2e4c5497ea9620691a5604ce0c6622b360a0ae", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprotected ASTNode getASTNode(org.eclipse.jdt.core.dom.CompilationUnit unit, int typeIndex, int bodyIndex)", "signatureAfterChange": "  \tprotected ASTNode getASTNode(org.eclipse.jdt.core.dom.CompilationUnit unit, int typeIndex, int bodyIndex)", "diff": ["-\t\treturn (ASTNode) ((TypeDeclaration)unit.types().get(typeIndex)).bodyDeclarations().get(bodyIndex);", "+\t\treturn (ASTNode) ((AbstractTypeDeclaration)unit.types().get(typeIndex)).bodyDeclarations().get(bodyIndex);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbe6c286b7fca66af8e877801c330627", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void testDeltaDiscardPrimaryWorkingCopy2() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaDiscardPrimaryWorkingCopy2() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbf7c3cea71491fda33fd3a50076389a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "cf0df220bcabd9ab0554652ea6e82dff98ea0448", "commitAfterChange": "15c0d9ce2c57a5a820b317d31ba95f4dca3c8294", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tTestSuite suite = (TestSuite) buildModelTestSuite(JavaProjectTests.class, ALPHABETICAL_SORT);", "+\tTestSuite suite = (TestSuite) buildModelTestSuite(JavaProjectTests.class, BYTECODE_DECLARATION_ORDER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbfd69859b91bcf43376ad601af1ba9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "signatureAfterChange": " \tprivate void findLocalMethodDeclarations( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean exactMatch, \t\tReferenceBinding receiverType)", "diff": ["-\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.METHOD_DECLARATION, this.actualCompletionPosition);", "+\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.METHOD_DECLARATION, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbfdc5e93917ef67c56365cc34f7a71c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic boolean visit(AnonymousClassDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(AnnotationTypeDeclaration node)", "diff": ["+\t */", "+\tpublic boolean visit(AnnotationTypeDeclaration node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc0606aeffb47c7d19e7f1dd46f308ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void testRemoveExclusionOnCompilationUnit() throws CoreException", "signatureAfterChange": " public void testRemoveExclusionOnCompilationUnit() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc070a5dd8cbecba8b02a6fd102096cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "0495ba6b5b1de8c707bff1679164aa69ed114bbc", "commitAfterChange": "5abdbbe2d2c6bc50209df28075447f5cb921c3bc", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBalanceValue)", "diff": ["-\t\t\treturn lastMethod.add(typeDeclaration, bracketBalanceValue);", "+\t\t\treturn lastMethod.add(memberTypeDeclaration, bracketBalanceValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc0c114c583db52258bc4a2017874482", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeParameter.java", "commitBeforeChange": "6d551a6edd44dfa9f9c79c5f98af89623a71aa38", "commitAfterChange": "b9aab476f3dc4637fa284b3c97f73d3f2751a24d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\t \tpublic final IBinding resolveBinding()", "signatureAfterChange": "\t \tpublic final ITypeBinding resolveBinding()", "diff": ["-\tpublic final IBinding resolveBinding() {", "+\tpublic final ITypeBinding resolveBinding() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1bccd1401689ffce034b20221b2a84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocPackageCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void test011() throws JavaModelException", "signatureAfterChange": "  public void test011() throws JavaModelException", "diff": ["-\t\t\"BasicTestReferences[TYPE_REF]{org.eclipse.jdt.core.tests.BasicTestReferences, org.eclipse.jdt.core.tests, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"BasicTestReferences[TYPE_REF]{org.eclipse.jdt.core.tests.BasicTestReferences, org.eclipse.jdt.core.tests, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc33dae7f8a5107adc4588fe060495ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 467, "methodNumberAfterChange": 467, "signatureBeforeChange": " \tpublic void test448()", "signatureAfterChange": " \tpublic void test448()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc4e36adba449c94774cbcf690659020", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticAccessMethodBinding.java", "commitBeforeChange": "cd6ca384f57ea36233e4caca220f18e53912b7cf", "commitAfterChange": "9ee33691ed28522cbc2852e39f3c0e623d310200", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic SyntheticAccessMethodBinding(FieldBinding targetField, boolean isReadAccess, ReferenceBinding declaringClass)", "signatureAfterChange": " \t \tpublic SyntheticAccessMethodBinding(FieldBinding targetField, boolean isReadAccess, ReferenceBinding declaringClass)", "diff": ["-\t\t\t\tthis.selector(CharOperation.concat(AccessMethodPrefix, String.valueOf(++methodId).toCharArray()));", "+\t\t\t\tthis.setSelector(CharOperation.concat(AccessMethodPrefix, String.valueOf(++methodId).toCharArray()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc55759350fc071740e84e841ebee1d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefFieldErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefFieldErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc60972b971af0010f95b606722f85fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected TypeAnnotationWalker toTarget(int targetType)", "signatureAfterChange": " \tprotected ITypeAnnotationWalker toTarget(int targetType)", "diff": ["-\tprotected TypeAnnotationWalker toTarget(int targetType) {", "+\tprotected ITypeAnnotationWalker toTarget(int targetType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc6aa506eb56da4cb5991d8a1f942405", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "baa69111fb2692bf947d05d6cb872fa36c864ddc", "commitAfterChange": "d09cf3be776821b1eebdf5f1510c5523654e2dad", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "  \tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, ArrayList resolvedEntries, ExternalFoldersManager externalFoldersManager)", "signatureAfterChange": "  \tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, LinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager)", "diff": ["-\tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, ArrayList resolvedEntries, ExternalFoldersManager externalFoldersManager) {", "+\tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, LinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc7c38aca99505d09bbeb3b071f48fa4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ClasspathDirectory.java", "commitBeforeChange": "d12bc71c18644c70f55803c4984554c1c7ec2c7f", "commitAfterChange": "02e41bd22396d523c7a0e7b774bb557781eb6970", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r public boolean equals(Object o)", "signatureAfterChange": "\r \r public boolean equals(Object o)", "diff": ["-\treturn binaryPath.equals(((ClasspathDirectory) o).binaryPath);\r", "+\treturn binaryPath.equalsIgnoreCase(((ClasspathDirectory) o).binaryPath);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc95bcf817649b2e548282f856b738dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "5cb7a8282e40bea7ee7271bbdb7d8b845c76f5b3", "commitAfterChange": "2aa78105ee4089b7ff1a9a2c35425f71b0b156d5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public boolean complainIfUnreachable(Statement statement, BlockScope scope)", "signatureAfterChange": "\r public boolean complainIfUnreachable(Statement statement, BlockScope scope)", "diff": ["-\t\tstatement.bits &= ~Statement.IsReachableMASK;\r", "+\t\tstatement.bits &= ~AstNode.IsReachableMASK;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dca8ba2d8b087aa3bcfaa4b88927757f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Region.java", "commitBeforeChange": "da8689e6058c8df72d6de5be59efe4e5eaaa5d49", "commitAfterChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public IJavaElement[] getElements()", "signatureAfterChange": "\r public IJavaElement[] getElements()", "diff": ["-\t\troots[i]= (IJavaElement) fRootElements.elementAt(i);\r", "+\t\troots[i]= (IJavaElement) fRootElements.get(i);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcb096fda9cecdba74910d19b3e0b80f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "fbf1dc74111046346637967ca91e93e8fc0c5f38", "commitAfterChange": "30b5f4681e6bde6cf7c8af9cdfc4f18b157d7133", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic SelectionEngine( \t\tISearchableNameEnvironment nameEnvironment, \t\tISelectionRequestor requestor, \t\tMap settings)", "signatureAfterChange": " \tpublic SelectionEngine( \t\tSearchableEnvironment nameEnvironment, \t\tISelectionRequestor requestor, \t\tMap settings)", "diff": ["-\t\tISearchableNameEnvironment nameEnvironment,", "+\t\tSearchableEnvironment nameEnvironment,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcb96e5cddfbd1058c2cbd9688ca110b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void process(CompilationUnitDeclaration unit, int i) throws CoreException", "signatureAfterChange": " \tpublic void process(CompilationUnitDeclaration unit, int i) throws CoreException", "diff": ["-\t\t\tif (this.pattern.needsResolve ", "+\t\t\tif (this.pattern.mustResolve "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcba7e96325627bae4743309b48351ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " public synchronized Index getIndexForUpdate(IPath containerPath, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndexForUpdate(IPath containerPath, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-\tString indexLocation = computeIndexLocation(containerPath);", "+\tIPath indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcdef5dcbd741074b051c5a297bf72e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic IPackageFragment findPackageFragment(IPath path)", "signatureAfterChange": " \tpublic IPackageFragment findPackageFragment(IPath path)", "diff": ["-\t\t\t\t\t\t\t\tproject.getPackageFragmentRoot(project.getUnderlyingResource());", "+\t\t\t\t\t\t\t\tproject.getPackageFragmentRoot(project.getResource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce6168dcb26eb08be091d19978e2a69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefClassErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefClassErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcfc746274e888fdca4d5c172e0fb0f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnMessageSend.java", "commitBeforeChange": "ed92c02ff5bbd396e8d5dc4ebef5008ab8d41de8", "commitAfterChange": "781df92ff56b036c613b350836c93dad229b6688", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+", "-\t\t\t\tthrow new SelectionNodeFound(findNotDefaultAbstractMethod(binding));", "+\t\t\t\tthrow new SelectionNodeFound(findNonDefaultAbstractMethod(binding)); // 23594"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd2384f511afdffd7927236a1c4d8de7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "c99d716fa975f313809c9a758c093b0027fd52fe", "commitAfterChange": "cb63167d7ae8e51f68c8f4ae8680682adf1ffd54", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public int match(ConstructorDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(Argument node, MatchingNodeSet nodeSet)", "diff": ["+public int match(Argument node, MatchingNodeSet nodeSet) {", "+\t// each subtype should override if needed", "+\treturn IMPOSSIBLE_MATCH;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd248197236724a7a20d48e143a47c1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "6d93b4bb6f9802710e765aaa00d3450185e4689f", "commitAfterChange": "b4c2385c81cd66eb677f15796da3c5ed6a182754", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic synchronized IMethodBinding[] getDeclaredMethods()", "signatureAfterChange": " \tpublic synchronized IMethodBinding[] getDeclaredMethods()", "diff": ["-\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding[] internalMethods = referenceBinding.methods();", "+\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding[] internalMethods = referenceBinding.availableMethods(); // be resilient"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd2cb225a016bec2321a13e00edeebf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "f63095af3c7deaeee47a62f089307467f872f35e", "commitAfterChange": "6e8431ed2d3ced2183b0880b86a760ea14397f82", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkInvocationArguments(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding method, Expression[] arguments, TypeBinding[] argumentTypes, boolean argsContainCast, InvocationSite invocationSite)", "diff": ["-\t\t\t        && (parameterType.isParameterizedType() || parameterType.isGenericType())) {", "+\t\t\t        && (parameterType.isBoundParameterizedType() || parameterType.isGenericType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd302314caa2490d7983143d22da1347", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/AndLocator.java", "commitBeforeChange": "425b0c5314087893896fa849d0ee8761b973ef60", "commitAfterChange": "340d840f950775980b46fcf21979bc21f0e19016", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public int match(LocalDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(LambdaExpression node, MatchingNodeSet nodeSet)", "diff": ["+public int match(LambdaExpression node, MatchingNodeSet nodeSet) {", "+\tint level = IMPOSSIBLE_MATCH;", "+\tfor (int i = 0, length = this.patternLocators.length; i < length; i++) {", "+\t\tint newLevel = this.patternLocators[i].match(node, nodeSet);", "+\t\tif (newLevel > level) {", "+\t\t\tif (newLevel == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t\t\tlevel = newLevel;", "+\t\t}", "+\t}", "+\treturn level;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd4eb3810cf1da7e214439556aa6b1ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "5ecdad70bb6e2e1bbd5c5ec539acc885a5698c4e", "commitAfterChange": "7f8c41fdd4e487762406a2cb6aaa3aa1d260201c", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tprotected void addExternalLibrary(IJavaProject javaProject, String jarPath, String[] pathAndContents, String[] nonJavaResources, String compliance) throws Exception", "signatureAfterChange": " \tprotected void addExternalLibrary(IJavaProject javaProject, String jarPath, String[] pathAndContents, String[] nonJavaResources, String compliance) throws Exception", "diff": ["-\t\tString[] claspath = get15LibraryIfNeeded(compliance);", "+\t\tString[] claspath = getJCL15PlusLibraryIfNeeded(compliance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd61b5a06b3e04252ce66bf1edf8b125", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void testCategories4() throws JavaModelException", "signatureAfterChange": " public void testCategories4() throws JavaModelException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd660b27bbeaa3899c9901189f64ef1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 182, "signatureBeforeChange": " \tpublic void test160()", "signatureAfterChange": " \tpublic void test160()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd67337101a09f3cfd4b796a851a3e4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 144, "methodNumberAfterChange": 144, "signatureBeforeChange": " \tprotected void setModifiers(SingleVariableDeclaration variableDecl, Argument argument)", "signatureAfterChange": " \tprotected void setModifiers(SingleVariableDeclaration variableDecl, Argument argument)", "diff": ["-\t\t\t\tvariableDecl.internalSetModifiers(argument.modifiers & CompilerModifiers.AccJustFlag);", "+\t\t\t\tvariableDecl.internalSetModifiers(argument.modifiers & ExtraCompilerModifiers.AccJustFlag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd6e5f5ee02bac52a99df504af417005", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd79ae5042b7585cb03a26fd2461b13e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 242, "methodNumberAfterChange": 242, "signatureBeforeChange": " public void testBug109695c() throws CoreException", "signatureAfterChange": " public void testBug109695c() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"IPL3\", SearchPattern.R_CAMEL_CASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"IPL3\", SearchPattern.R_CAMELCASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7b9d4b7167279161e63500150038c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testSuggestFieldName008()", "signatureAfterChange": " public void testSuggestFieldName008()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd7f46160f42118527d9ea58d1cf1a2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r \tprivate void findMemberTypes(\r \t\tchar[] typeName,\r \t\tReferenceBinding[] memberTypes,\r \t\tObjectVector typesFound,\r \t\tReferenceBinding receiverType,\r \t\tSourceTypeBinding invocationType)", "signatureAfterChange": "\r \r \tprivate void findMemberTypes(\r \t\tchar[] typeName,\r \t\tReferenceBinding[] memberTypes,\r \t\tObjectVector typesFound,\r \t\tReferenceBinding receiverType,\r \t\tSourceTypeBinding invocationType)", "diff": ["-\t\t\tif (options.checkVisibilitySensitive()\r", "+\t\t\tif (options.checkVisibility()\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd82baac2eb533687f48fe2e2a6b861a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/MethodInfo.java", "commitBeforeChange": "5e9228969768cbfafe3797c4206907b59326e768", "commitAfterChange": "c367628b2cad82bf919cebefbb71b27d01a9edaa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public int getModifiers()", "signatureAfterChange": " public int getModifiers()", "diff": ["-\t\treadDeprecatedAndSyntheticAttributes();", "+\t\treadModifierRelatedAttributes();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd86d16beab416e7b2eba695aea0a940", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "98a24097737828240f1d21a0b23b90c66df1d2e5", "commitAfterChange": "515941cbbde92f8090f4b974fb001627443d0027", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tpublic boolean visit( \t\tAllocationExpression allocationExpression, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tAllocationExpression allocationExpression, \t\tBlockScope scope)", "diff": ["-// TODO add again once 49298 is fixed\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); ", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddbd87a66a4910b5989900fcc911d4d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t    if ((originalBinding.type.tagBits & TagBits.HasTypeVariable) != 0 && runtimeTimeType.id != T_Object) {", "+\t\t\t    if ((originalBinding.type.tagBits & TagBits.HasTypeVariable) != 0 && runtimeTimeType.id != T_JavaLangObject) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dde2f039cd5d0497a3981664f229b359", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedSuperReference.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\treturn this.expressionType = currentCompatibleType.superclass();", "+\t\treturn this.resolvedType = currentCompatibleType.superclass();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de0b678ff87c05a6a7f76eca9425758b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid endVisit(AnnotationArraySingleTypeReference typeRef, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(JavadocQualifiedTypeReference typeRef, BlockScope scope);", "diff": ["-\tvoid endVisit(AnnotationArrayQualifiedTypeReference typeRef, BlockScope scope);", "-\tvoid endVisit(AnnotationArraySingleTypeReference typeRef, BlockScope scope);", "+\tvoid endVisit(JavadocMessageSend messageSend, BlockScope scope);", "+\tvoid endVisit(JavadocQualifiedTypeReference typeRef, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de1db388ee708599400ec520771a8fd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "87d4fd7980451e90652820b5860e6399b708ef2c", "commitAfterChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic TextEdit format(String string, Expression expression)", "signatureAfterChange": " \tpublic TextEdit format(String string, Expression expression)", "diff": ["-\t\tthis.scribe.initializeScanner(compilationUnitSource);", "+\t\tthis.scribe.resetScanner(compilationUnitSource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de277fff5fe6ee268ffcc7ef68620409", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "8725686e4322c27855e28a436fd50d8fdf140d60", "commitAfterChange": "4a181894176f3a1eccc3e35147ddca845e353389", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " char[][] getExclusionPatterns()", "signatureAfterChange": " char[][] getExclusionPatterns()", "diff": ["-\t\t\treturn entry.fulExclusionPatternChars();", "+\t\t\treturn entry.fullExclusionPatternChars();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2d59450f8dec10f9a573ac84696662", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/VariableElementImpl.java", "commitBeforeChange": "80e40b4c60040fa0aa8e1c95f16e2597f3f0acf0", "commitAfterChange": "f9277e3d6f326ff6a770d54a63a8fe0127208bbc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tVariableElementImpl(BaseProcessingEnvImpl env, Binding binding)", "signatureAfterChange": " \tVariableElementImpl(BaseProcessingEnvImpl env, VariableBinding binding)", "diff": ["-\tVariableElementImpl(BaseProcessingEnvImpl env, Binding binding) {", "+\tVariableElementImpl(BaseProcessingEnvImpl env, VariableBinding binding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de3996264773c14eb7bf696ef9a81487", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "6d93b4bb6f9802710e765aaa00d3450185e4689f", "commitAfterChange": "b4c2385c81cd66eb677f15796da3c5ed6a182754", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic synchronized IVariableBinding[] getDeclaredFields()", "signatureAfterChange": " \tpublic synchronized IVariableBinding[] getDeclaredFields()", "diff": ["-\t\t\t\tFieldBinding[] fieldBindings = referenceBinding.fields();", "+\t\t\t\tFieldBinding[] fieldBindings = referenceBinding.availableFields(); // resilience"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de4ab2515d91dab5f2f57639530583d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "1de8e2f6bc728cee690d70795383b83c1f0d652a", "commitAfterChange": "cccafe00dbf29f156949d8f0d0aec370b02aa048", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 218, "signatureBeforeChange": "  protected CommitRollbackParser createSnapShotParser()", "signatureAfterChange": "  protected CompletionParser createSnapShotParser()", "diff": ["-protected CommitRollbackParser createSnapShotParser() {", "+protected CompletionParser createSnapShotParser() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de4e4e5905643897c815636c82e5956b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BranchStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\tif ((bits & IsReachableMASK) == 0) {", "+\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de52572af480688d27015d2fef697a9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public AssistParser(ProblemReporter problemReporter)", "signatureAfterChange": "  public AssistParser(ProblemReporter problemReporter)", "diff": ["-\tthis.javadocParser.checkJavadoc = false;", "+\tthis.javadocParser.checkDocComment = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de5fe9bd8091b545635467ce4d3b8a16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void testSearch4() throws CoreException", "signatureAfterChange": " \tpublic void testSearch4() throws CoreException", "diff": ["-\t\t\tnew SearchEngine(new IWorkingCopy[] {workingCopy}).search(", "+\t\t\tnew SearchEngine(new ICompilationUnit[] {workingCopy}).search("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de601261a179e54fdd914aab54735a7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "3dbb4c838e7dddd8ff99712109431d1f442c8931", "commitAfterChange": "2f5322fdab953564bb94640aef6b85bdf7bdfd2c", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\tIJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH,", "+\t\t\t// will not activate index query caches if indexes are not ready, since it would take to long", "+\t\t\t// to wait until indexes are fully rebuild", "+\t\t\tIJavaSearchConstants.CANCEL_IF_NOT_READY_TO_SEARCH,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de69368237807d55977c13f9b8cdc9ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_4);", "+\t\treturn buildMinimalComplianceTestSuite(testClass(), F_1_4);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de785029304d0cdb6c8b3c1b73fb0c0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected PackageFragmentRoot(IResource resource, IJavaProject project, String name)", "signatureAfterChange": " protected PackageFragmentRoot(IResource resource, JavaProject project, String name)", "diff": ["-protected PackageFragmentRoot(IResource resource, IJavaProject project, String name) {", "+protected PackageFragmentRoot(IResource resource, JavaProject project, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de7b65fb0aeefd55e7f38c7ed9e25bbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/compiler/CompilationParticipant.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void processAnnotations(ICompilationParticipantResult[] files)", "signatureAfterChange": " public void processAnnotations(BuildContext[] files)", "diff": ["-public void processAnnotations(ICompilationParticipantResult[] files) {", "+public void processAnnotations(BuildContext[] files) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de88c1e843d4a3635adc87af17c146f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 155, "methodNumberAfterChange": 155, "signatureBeforeChange": "  \tpublic void test133()", "signatureAfterChange": "  \tpublic void test133()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dea7ee61c88d656de703de13799cf1dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "ec1408476a66b2a958a4e514cbefd2cf0438efc9", "commitAfterChange": "593b7c498e35f1adb3620eff493d0f4b5e771b68", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "signatureAfterChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "diff": ["-\t\treturn (isConditionTrue || isConditionOptimizedTrue) && (this.action == null || !this.action.breaksOutOfLoop());", "+\t\treturn (isConditionTrue || isConditionOptimizedTrue) && (this.action == null || !this.action.breaksOut());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "debfa4698815961b5ed5bff00c15e747", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " \t protected void consumeSingleTypeImportDeclaration()", "signatureAfterChange": " \t protected void consumeSingleTypeImportDeclaration()", "diff": ["-\t// flush annotations defined prior to import statements", "+\t// flush comments defined prior to import statements", "-\t\tthis.flushAnnotationsDefinedPriorTo(impt.declarationSourceEnd); ", "+\t\tthis.flushCommentsDefinedPriorTo(impt.declarationSourceEnd); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dec772efe2ccfc672267f35e19b4cfc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/TypeNameMatchRequestorWrapper.java", "commitBeforeChange": "8a1e311af393ccdbbaab4d3836c703deb332d624", "commitAfterChange": "c0735951a055fba3f0be3b86f55a77d744b6fbe2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void acceptType(int modifiers, char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path, AccessRestriction access)", "signatureAfterChange": " public void acceptType(int modifiers, char[] packageName, char[] simpleTypeName, char[][] enclosingTypeNames, String path, AccessRestriction access)", "diff": ["-//\t\tif (this.handleFactory == null) {", "-//\t\t\tthis.handleFactory = new HandleFactory();", "-//\t\t}", "-//\t\tOpenable openable = this.handleFactory.createOpenable(path, this.scope);", "-//\t\tif (openable != null) {", "-//\t\t\ttry {", "-//\t\t\t\tIType type = null;", "-//\t\t\t\tswitch (openable.getElementType()) {", "-//\t\t\t\t\tcase IJavaElement.CLASS_FILE:", "-//\t\t\t\t\t\ttype = ((IClassFile)openable).getType();", "-//\t\t\t\t\t\tbreak;", "-//\t\t\t\t\tcase IJavaElement.COMPILATION_UNIT:", "-//\t\t\t\t\t\tint length = enclosingTypeNames == null ? 0 : enclosingTypeNames.length;", "-//\t\t\t\t\t\tif (length == 0) {", "-//\t\t\t\t\t\t\ttype = ((ICompilationUnit)openable).getType(new String(simpleTypeName));", "-//\t\t\t\t\t\t} else {", "-//\t\t\t\t\t\t\ttype = ((ICompilationUnit)openable).getType(new String(enclosingTypeNames[0]));", "-//\t\t\t\t\t\t\tfor (int i=1; i<length; i++) {", "-//\t\t\t\t\t\t\t\ttype = type.getType(new String(enclosingTypeNames[i]));", "-//\t\t\t\t\t\t\t}", "-//\t\t\t\t\t\t\ttype = type.getType(new String(simpleTypeName));", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tbreak;", "-//\t\t\t\t}", "-//\t\t\t\tif (type != null) {", "-//\t\t\t\t\tthis.requestor.acceptTypeNameMatch(new TypeNameMatch(type, modifiers));", "-//\t\t\t\t}", "-//\t\t\t} catch (JavaModelException e) {", "-//\t\t\t\t// skip", "-//\t\t\t}", "-//\t\t}", "-\t\t\t\tthis.requestor.acceptTypeNameMatch(new TypeNameMatch(type, modifiers));", "+\t\t\t\tthis.requestor.acceptTypeNameMatch(new JavaSearchTypeNameMatch(type, modifiers));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dede1fca137a982cd1482014ac5747a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a3e63b72d2efd2058d202d3e2711391afc827fec", "commitAfterChange": "f0131d199789fbf75036ba10803faed4ef08b399", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \t \tprivate void completionOnMethodName(ASTNode astNode, Scope scope)", "signatureAfterChange": " \t \tprivate void completionOnMethodName(ASTNode astNode, Scope scope)", "diff": ["-\t\t\t\t\t\t\t\t\t\tInternalNamingConventions.VK_CONSTANT_FIELD;", "+\t\t\t\t\t\t\t\t\t\tInternalNamingConventions.VK_STATIC_FINAL_FIELD;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dee365a6b98253c16ad156a49c62fe91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic void test068()", "signatureAfterChange": " \tpublic void test068()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df202a909df6392e7d7c336aba21a825", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "diff": ["-\t\tpatternLocator.match(initializer, matchSet);", "+\t\tpatternLocator.match(initializer, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df20b7d558f24b2e3333da53ff0dd539", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "372be54ad5f512b0748122883bd9f6352c6947e8", "commitAfterChange": "e1f4500cdcedb12d8ea42095384e7cf0b5f1f610", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public List collectMissingTypes(List missingTypes)", "signatureAfterChange": "  public List collectMissingTypes(List missingTypes)", "diff": ["-\t\t\t\tmissingTypes = interfaces[i].collectMissingTypes(missingTypes);", "+\t\t\t\tmissingTypes = interfaces[j].collectMissingTypes(missingTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df2423ef0866137906c778484cd62a0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic IProject getProject(String projectName)", "signatureAfterChange": " \tpublic IProject getProject(String projectName)", "diff": ["-\t\treturn (IProject)fProjects.get(projectName);", "+\t\treturn (IProject)projects.get(projectName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df46d94339bac358c9e5653a34992eb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public void test045() throws JavaModelException", "signatureAfterChange": "  public void test045() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.types.tags.OtherTypes;, I, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.types.tags.OtherTypes;, I, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df4f84174c22b8633953db3b090bd014", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddFolderToIndex.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\treturn \"adding \" + this.folderPath + \" to index \" + this.indexPath; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\treturn \"adding \" + this.folderPath + \" to index \" + this.containerPath; //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df66f3f0b56916a3ca2653dc374a4f3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "diff": ["-\t\tpatternLocator.match(constructorDeclaration, matchSet);", "+\t\tpatternLocator.match(constructorDeclaration, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6cadb92640f091f4a29c4959bc394c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tTypeBinding typeBinding = qTypeRef.binding;", "+\t\tTypeBinding typeBinding = qTypeRef.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df6db8c4edda510ced515698a93adae7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\treturn this.expressionType = qualificationTb;", "+\t\treturn this.resolvedType = qualificationTb;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df71142d67c448a6ee0089f0e86e27a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void buildResourceVector() throws JavaModelException", "signatureAfterChange": " \tprivate void buildResourceVector() throws JavaModelException", "diff": ["-\t\t\t\t\t\t+ \".class\";//$NON-NLS-1$", "+\t\t\t\t\t\t+ SUFFIX_STRING_class;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df711a73d9ac82d5f7558d6c34bb1fd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST8Test.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic void test0129() throws JavaModelException", "signatureAfterChange": " \tpublic void test0129() throws JavaModelException", "diff": ["-\t\tfragment.extraDimensionInfos().clear();", "+\t\tfragment.extraDimensions().clear();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df726083fa0151f923e789a0d0975725", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "039d5ebb17d9b09ae245ba628ad4d0e9cf747b63", "commitAfterChange": "1745fe20399b6a7284c025a8e1750403718486c9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolveUsing(BlockScope givenScope)", "signatureAfterChange": "  \tpublic void resolveUsing(BlockScope givenScope)", "diff": ["-\t\tif ((this.bits & UncommentedEmptyBlockMASK) != 0) {", "+\t\tif ((this.bits & UndocumentedEmptyBlockMASK) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df77e7a8f20a4ed771b24fdd589dc731", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void injectAllTypesForJavaProject(IJavaProject project, Vector types)", "signatureAfterChange": "\r \tprivate void injectAllTypesForJavaProject(\r \t\tIJavaProject project,\r \t\tArrayList types)", "diff": ["- */\r", "-private void injectAllTypesForJavaProject(IJavaProject project, Vector types) {\r", "-\ttry {\r", "-\t\tIPackageFragmentRoot[] devPathRoots = ((JavaProject) project).getPackageFragmentRoots();\r", "-\t\tif (devPathRoots == null) {\r", "+\t */\r", "+\tprivate void injectAllTypesForJavaProject(\r", "+\t\tIJavaProject project,\r", "+\t\tArrayList types) {\r", "+\t\ttry {\r", "+\t\t\tIPackageFragmentRoot[] devPathRoots =\r", "+\t\t\t\t((JavaProject) project).getPackageFragmentRoots();\r", "+\t\t\tif (devPathRoots == null) {\r", "+\t\t\t\treturn;\r", "+\t\t\t}\r", "+\t\t\tfor (int j = 0; j < devPathRoots.length; j++) {\r", "+\t\t\t\tIPackageFragmentRoot root = devPathRoots[j];\r", "+\t\t\t\tinjectAllTypesForPackageFragmentRoot(root, types);\r", "+\t\t\t}\r", "+\t\t} catch (JavaModelException e) {\r", "+\t\t}\r", "+\t}\r", "-\t\tfor (int j = 0; j < devPathRoots.length; j++) {\r", "-\t\t\tIPackageFragmentRoot root = devPathRoots[j];\r", "-\t\t\tinjectAllTypesForPackageFragmentRoot(root, types);\r", "-\t\t}\r", "-\t} catch (JavaModelException e) {\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df81e1a4dc13692ec1934ad05a318617", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/RunCompletionParserTests.java", "commitBeforeChange": "afe8e7c03c9e057a9ab6bf025b43a423a4494448", "commitAfterChange": "10cca24df480719d1a06391159cf8b7088d76566", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tTestCase.ONLY_SUFFIX = null;", "+\t\tTestCase.RUN_ONLY_ID = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df829c7463cf4708bc7f994ce71d1a8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testMethodRetrieval() throws JavaModelException", "signatureAfterChange": " public void testMethodRetrieval() throws JavaModelException", "diff": ["-\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIClassFile cf = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfa2698d9d2f33d6e0cf39100b7473a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "97903a14c53cc534c10e28f894e41633eed2dcf2", "commitAfterChange": "28475f7151ef48b7b99d16fedb7cc564edf8391b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic static CompilationUnitDeclaration parse(org.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, NodeSearcher nodeSearcher, Map settings)", "signatureAfterChange": " \t \tpublic static CompilationUnitDeclaration parse(org.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, NodeSearcher nodeSearcher, Map settings)", "diff": ["-\t\t\tthrow new IllegalArgumentException();", "+\t\t\tthrow new IllegalStateException();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfa9c79d01e9a33c6734ad630466479f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IndexInput.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic abstract IndexedFile getIndexedFile(IDocument document) throws IOException;", "signatureAfterChange": " \tpublic abstract IndexedFile getIndexedFile(SearchDocument document) throws IOException;", "diff": ["-\tpublic abstract IndexedFile getIndexedFile(IDocument document) throws IOException;", "+\tpublic abstract IndexedFile getIndexedFile(SearchDocument document) throws IOException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfac5e5b48dadbab2843918adb744ea0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "09e6a0d689d92bccdede36cccd43932276d7e4d3", "commitAfterChange": "0848b8a6a9afff16623dfc6b0821adb833326b41", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " public void targetTypeIsNotAFunctionalInterface(ASTNode target)", "signatureAfterChange": " public void targetTypeIsNotAFunctionalInterface(FunctionalExpression target)", "diff": ["-public void targetTypeIsNotAFunctionalInterface(ASTNode target) {", "+public void targetTypeIsNotAFunctionalInterface(FunctionalExpression target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfae3c190176be344fb1961171e93bb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException", "signatureAfterChange": "\r \r \tpublic HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException", "diff": ["-\tprotected Hashtable infoToHandle;\r", "-public HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException {\r", "-\tthis.hierarchy = hierarchy;\r", "-\tJavaProject project = (JavaProject)hierarchy.javaProject();\r", "-\tthis.searchableEnvironment = (SearchableEnvironment)project.getSearchableNameEnvironment();\r", "-\tthis.nameLookup = project.getNameLookup();\r", "-\tthis.hierarchyResolver = \r", "-\t\tnew HierarchyResolver(this.searchableEnvironment, JavaCore.getOptions(), this, new DefaultProblemFactory());\r", "-\tthis.infoToHandle = new Hashtable(5);\r", "-}\r", "+\r", "+\tpublic HierarchyBuilder(TypeHierarchy hierarchy) throws JavaModelException {\r", "+\t\t\r", "+\t\tthis.hierarchy = hierarchy;\r", "+\t\tJavaProject project = (JavaProject) hierarchy.javaProject();\r", "+\t\tthis.searchableEnvironment =\r", "+\t\t\t(SearchableEnvironment) project.getSearchableNameEnvironment();\r", "+\t\tthis.nameLookup = project.getNameLookup();\r", "+\t\tthis.hierarchyResolver =\r", "+\t\t\tnew HierarchyResolver(\r", "+\t\t\t\tthis.searchableEnvironment,\r", "+\t\t\t\tJavaCore.getOptions(),\r", "+\t\t\t\tthis,\r", "+\t\t\t\tnew DefaultProblemFactory());\r", "+\t\tthis.infoToHandle = new HashMap(5);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc2e7eb423ef11a0a35fde1009e57a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "signatureAfterChange": "\r \r public ReferenceBinding askForType(char[][] compoundName)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceType(), computePackageFrom(compoundName));\r", "+\t\ttypeRequestor.accept(answer.getSourceTypes(), computePackageFrom(compoundName));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfcb798fa632bf385d25b917aa8cc28c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprotected MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tObjectVector found, \t\tMethodBinding concreteMatch)", "signatureAfterChange": " \tprotected MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tObjectVector found, \t\tMethodBinding concreteMatch)", "diff": ["-\t\t\t\t\t\tif (concreteMatch != null && concreteMatch.declaringClass.findSuperTypeWithSameErasure(compatibleMethod.declaringClass) != null)", "+\t\t\t\t\t\tif (concreteMatch != null && concreteMatch.declaringClass.findSuperTypeOriginatingFrom(compatibleMethod.declaringClass) != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfce8bd353571e33d161a3d6253fc643", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 159, "methodNumberAfterChange": 159, "signatureBeforeChange": "  \tpublic void test137()", "signatureAfterChange": "  \tpublic void test137()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfd683e4d1fb2e2cee152ee9d692e7df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public Object[] getNonJavaResources() throws JavaModelException", "signatureAfterChange": " public Object[] getNonJavaResources() throws JavaModelException", "diff": ["-\t\treturn ((PackageFragmentInfo) getElementInfo()).getNonJavaResources(getResource(), getPackageFragmentRoot());", "+\t\treturn ((PackageFragmentInfo) getElementInfo()).getNonJavaResources(resource(), getPackageFragmentRoot());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dff7a1e3bcf6b3007b11af74c2d186a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testChangeInternalJar() throws CoreException, IOException", "signatureAfterChange": " public void testChangeInternalJar() throws CoreException, IOException", "diff": ["-\t\tremoveLibraryEntry(this.currentProject, new Path(jarName));", "+\t\tremoveClasspathEntry(this.currentProject, new Path(jarName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e003119a48ba7a82968fee27f8d7f3a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public void test043() throws JavaModelException", "signatureAfterChange": "  public void test043() throws JavaModelException", "diff": ["-\t\t\"method[JAVADOC_METHOD_REF]{{@link #method()}, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\"method[JAVADOC_METHOD_REF]{{@link #method()}, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0282a22d20b7591250c455a2adf9a94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefConstructorErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefConstructorErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e02db07cce91935443f212bd56d91dc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\t\tboolean isCompliant15 = scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5;", "+\t\t\tboolean isCompliant15 = scope.compilerOptions().originalSourceLevel >= ClassFileConstants.JDK1_5;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e038c79d851bf695946b5db54788a9c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public PatternLocator(SearchPattern pattern)", "signatureAfterChange": "  public PatternLocator(SearchPattern pattern)", "diff": ["-\tthis.isCamelCase = (matchRule & SearchPattern.R_CAMELCASE_MATCH) != 0;", "+\tthis.isCamelCase = (matchRule & SearchPattern.R_CAMEL_CASE_MATCH) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e05f6e297a9e22373fa69b46cb3ff386", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static AnnotationValue createAnnotationValueFromDOMValue(Object convertedValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString name, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tint index, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEclipseMirrorImpl mirror,  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBaseProcessorEnv env)", "signatureAfterChange": " \tpublic static AnnotationValue createAnnotationValueFromDOMValue(Object convertedValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tString name, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tint index, \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEclipseMirrorObject mirror,  \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tBaseProcessorEnv env)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEclipseMirrorImpl mirror, ", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tEclipseMirrorObject mirror, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e061d133fa94f89f4db0da395c713806", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 121, "signatureBeforeChange": " \tpublic boolean visit(MethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(MethodInvocation node)", "diff": ["-\t\t\t\tint startOffset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameLPAREN, pos);", "+\t\t\t\tint startOffset= getScanner().getTokenEndOffset(TerminalTokens.TokenNameLPAREN, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0644b07821a21a9371e91669fb7774b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": " \tpublic void test173()", "signatureAfterChange": " \tpublic void test173()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0714f1ac81e992f5a729eae2424f153", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "cb1229e517a2018e5263ed249b199ae2a321da49", "commitAfterChange": "4732df192beaa38106d940c4bfeefb54a9e4a1cf", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "signatureAfterChange": " public final boolean checkCastTypesCompatibility(Scope scope, TypeBinding castType, TypeBinding expressionType, Expression expression)", "diff": ["-\t\t\t\t\t\t\tcheckUnsafeCast(scope, castType, expressionType, null, true);", "+\t\t\t\t\t\t\tcheckUnsafeCast(scope, castType, expressionType, match, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0733dd9553d3d38180bee1be6c9114d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void testInvalidTagsClassErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsClassErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e08ab19e9cdf084469b12e324621d9ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic void testMissingCommentsErrorPublicOverriding()", "signatureAfterChange": " \tpublic void testMissingCommentsErrorPublicOverriding()", "diff": ["-\t\trunNegativeTest(MissingComments, resultForMissingComments(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(MISSING_COMMENTS, resultForMissingComments(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e08baa4d1b31fee1d5f12b09687ef41a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate void runAPTInMixedMode( \t\t\tfinal Map<IFile, Set<IFile>> lastGeneratedFiles, \t\t\tfinal ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \tprivate void runAPTInMixedMode( \t\t\tfinal Map<IFile, Set<IFile>> lastGeneratedFiles, \t\t\tfinal BuildEnv processorEnv)", "diff": ["-\t\t\tfinal ProcessorEnvImpl processorEnv)", "+\t\t\tfinal BuildEnv processorEnv)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0b8df793d987cbb0dd4bdae87774590", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "1209010fd2d01b73be2d5ddcc68dee954a4dfb12", "commitAfterChange": "e2d64401ee163038583789c4f8e64653502b280a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public void setActualReceiverType(ReferenceBinding receiverType)", "signatureAfterChange": "\r public void setActualReceiverType(ReferenceBinding receiverType)", "diff": ["-\tthis.actualReceiverType = receiverType;\r", "+\tthis.qualifyingType = receiverType;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0c26be16d150a0ca2ce79dff96014c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void addSource(IFile resource, IPath containerPath, SourceElementParser parser)", "signatureAfterChange": " public void addSource(IFile resource, IPath containerPath, SourceElementParser parser)", "diff": ["-\tIPath indexLocation = computeIndexLocation(containerPath);", "+\tIndexLocation indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0ce0e7b42e8e3ad256178f132437034", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic char[] getCharContents()", "signatureAfterChange": " \tpublic char[] getCharContents()", "diff": ["-\t\t\tif (SearchBasicEngine.VERBOSE || JobManager.VERBOSE) { // used during search and during indexing", "+\t\t\tif (BasicSearchEngine.VERBOSE || JobManager.VERBOSE) { // used during search and during indexing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0d397e01f4032bdec2b9b1359294d6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchSet.java", "commitBeforeChange": "da39b69e72c50baaaa7ca77863d468ca697fcf61", "commitAfterChange": "ff204ce3a41738619b4636be750fa00b8770f7a8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope scope)", "signatureAfterChange": "\r \tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope)", "diff": ["-\tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope scope) {\r", "+\tpublic boolean visit(LocalTypeDeclaration typeDeclaration, BlockScope scope) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0e5515222279c9721efa23978d7164f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "6950546c078b90b75decadf938e90ba25be67def", "commitAfterChange": "5f0d5b4535e0c623b3c96db43a68b516445fa24d", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic static char[][] getJavaLikeExtensions()", "signatureAfterChange": " \tpublic static char[][] getJavaLikeExtensions()", "diff": ["-\t\t\t\tIContentType javaContentType = Platform.getContentTypeManager().getContentType(JavaModelManager.JAVA_SOURCE_CONTENT_TYPE);", "+\t\t\t\tIContentType javaContentType = Platform.getContentTypeManager().getContentType(JavaCore.JAVA_SOURCE_CONTENT_TYPE);", "-\t\t\t\textensions[0] = SuffixConstants.EXTENSION_java.toCharArray(); // ensure that \".java\" is first", "+\t\t\t\textensions[0] = SuffixConstants.EXTENSION_java.toCharArray(); // ensure that \"java\" is first"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0f23e7697d3034c3b8f6e4acf2e13d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapExecutor.java", "commitBeforeChange": "2073ae07201f3b4750a106d0cadf90473710a63d", "commitAfterChange": "10545bbf89db4e21cbdfaf0260ea872d78aa91e9", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate WrapResult findWraps(int wrapTokenIndex, int indent) throws WrapRestartException", "signatureAfterChange": " \tprivate WrapResult findWraps(int wrapTokenIndex, int indent) throws WrapRestartThrowable", "diff": ["-\tprivate WrapResult findWraps(int wrapTokenIndex, int indent) throws WrapRestartException {", "+\tprivate WrapResult findWraps(int wrapTokenIndex, int indent) throws WrapRestartThrowable {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1158dec8e0b781311ba8cb2f4c88188", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 202, "methodNumberAfterChange": 202, "signatureBeforeChange": " public void unusedPrivateField(FieldDeclaration fieldDecl)", "signatureAfterChange": " public void unusedPrivateField(FieldDeclaration fieldDecl)", "diff": ["-\t\t\t&& TypeBinding.LongBinding == field.type) {", "+\t\t\t&& BaseTypes.LongBinding == field.type) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e128c063adacafd2c51971ba4bbbe412", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public boolean isAnnotation() throws JavaModelException", "signatureAfterChange": " public boolean isAnnotation() throws JavaModelException", "diff": ["-\treturn info.getKind() == IGenericType.ANNOTATION_TYPE;", "+\treturn info.getKind() == IGenericType.ANNOTATION_TYPE_DECL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e12b2803ab34d6af1e02b16e6dc23920", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static Object convertDOMValueToMirrorValue(Object domValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t   String name,\t \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseMirrorImpl parent, \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseDeclarationImpl decl,  \t\t\t\t\t\t\t\t\t\t\t\t\t   BaseProcessorEnv env, \t\t\t\t\t\t\t\t\t\t\t\t\t   TypeMirror expectedType)", "signatureAfterChange": "     private static Object convertDOMValueToMirrorValue(Object domValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t   String name,\t \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseMirrorImpl parent, \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseDeclarationImpl decl,  \t\t\t\t\t\t\t\t\t\t\t\t\t   BaseProcessorEnv env, \t\t\t\t\t\t\t\t\t\t\t\t\t   TypeMirror expectedType)", "diff": ["-\t\t\t\tfinal AnnotationValue annoValue = createAnnotationValue(o, name, i, parent, env);", "+\t\t\t\tfinal AnnotationValue annoValue = createAnnotationValueFromDOMValue(o, name, i, parent, env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e143d54df326a2ac331adc3d4e4a57ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " protected void consumePushModifiers()", "signatureAfterChange": " protected void consumePushModifiers()", "diff": ["-\tcheckAnnotation(); // might update modifiers with AccDeprecated", "+\tcheckComment(); // might update modifiers with AccDeprecated"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1472599b585df2c95b17b86eeecf1fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "c7936431e397b3739f39a4733884270db7bdca55", "commitAfterChange": "b6c3ef88a42ce595faa4897ed3f3cb935e51c7fb", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void printNextToken(int expectedTokenType, boolean considerSpaceIfAny)", "signatureAfterChange": "  \tpublic void printNextToken(int expectedTokenType, boolean considerSpaceIfAny)", "diff": ["-\t\t\tchar[] currentTokenSource = this.scanner.getCurrentTokenSource();", "+\t\t\tchar[] currentTokenSource = this.scanner.getRawTokenSource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1488bf7e71422cabbe958bc46351e5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "0d848314704a98a37067259d3b0518973aafccb8", "commitAfterChange": "55cb4cf73395e960e1efe45d353b160e1b4e5127", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\t public void searchDeclarationsOfSentMessages(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": "\t public void searchDeclarationsOfSentMessages(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\t\tMatchLocator locator = new MatchLocator(", "+\t\tMatchLocator locator = new MatchLocator2("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e152f3d1527679c0d17d0e549a04d014", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.pluggable.core/src/org/eclipse/jdt/internal/apt/pluggable/core/filer/IdeFilerImpl.java", "commitBeforeChange": "60bf43e2f6af92e51fdf7c9da0da9b844ceaacf7", "commitAfterChange": "d76b61af6ffe66ae65403b0c1b9f47684496cada", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t@Override \tpublic FileObject createResource(Location location, CharSequence pkg, \t\t\tCharSequence relativeName, Element... originatingElements) throws IOException", "signatureAfterChange": " \t@Override \tpublic FileObject createResource(Location location, CharSequence pkg, \t\t\tCharSequence relativeName, Element... originatingElements) throws IOException", "diff": ["-\t\treturn new IdeOutputFileObject(_env, file, parentFiles);", "+\t\treturn new IdeOutputNonSourceFileObject(_env, file, parentFiles);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e15c58dfb00e913dacd9bb22fafc802e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexRequest.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void cancel()", "signatureAfterChange": " \tpublic void cancel()", "diff": ["-\t\tthis.manager.jobWasCancelled(this.indexPath);", "+\t\tthis.manager.jobWasCancelled(this.containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e163751b91cc7bc691e01a163c65440e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "  public void test050() throws JavaModelException", "signatureAfterChange": "  public void test050() throws JavaModelException", "diff": ["-\t\t\"method[METHOD_REF]{method(), Ljavadoc.text.OtherTypes;, ()V, method, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"method[METHOD_REF]{method(), Ljavadoc.text.OtherTypes;, ()V, method, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e17454503dbe33eb26251000799d0720", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testGetCategories05() throws CoreException", "signatureAfterChange": " public void testGetCategories05() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e17a29f6f98e95e2b08a4318a8dff48c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaElementDeltaTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testAddExternalLibFolder2() throws CoreException", "signatureAfterChange": " public void testAddExternalLibFolder2() throws CoreException", "diff": ["-\t\tIPath path = new Path(getExternalFolderPath(\"externalLib\"));", "+\t\tIPath path = new Path(getExternalResourcePath(\"externalLib\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1934ad084b94638db378c1fe12a9143", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic ICompilationUnit findCompilationUnit(String qualifiedTypeName)", "signatureAfterChange": " \tpublic ICompilationUnit findCompilationUnit(String qualifiedTypeName)", "diff": ["-\t\tcuName += \".java\"; //$NON-NLS-1$", "+\t\tcuName += SUFFIX_STRING_java;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1998fd6db0f11f1cd256933eb8f276d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "54f479c4cedb5c06849fe533ad9496b9446738f8", "commitAfterChange": "d7dbde6c47b53a8674fa689e8c500532830f1cf6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tpublic String getName()", "signatureAfterChange": "  \tpublic String getName()", "diff": ["-\t\t\treturn getErasure().getName();", "+\t\t\treturn getGenericType().getName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e19ccaefbf7c8ea328e70082d3e19ca9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " private void initializeTypeVariable(TypeVariableBinding variable, TypeVariableBinding[] existingVariables, SignatureWrapper wrapper, char[][][] missingTypeNames, TypeAnnotationWalker walker)", "signatureAfterChange": " private void initializeTypeVariable(TypeVariableBinding variable, TypeVariableBinding[] existingVariables, SignatureWrapper wrapper, char[][][] missingTypeNames, ITypeAnnotationWalker walker)", "diff": ["-private void initializeTypeVariable(TypeVariableBinding variable, TypeVariableBinding[] existingVariables, SignatureWrapper wrapper, char[][][] missingTypeNames, TypeAnnotationWalker walker) {", "+private void initializeTypeVariable(TypeVariableBinding variable, TypeVariableBinding[] existingVariables, SignatureWrapper wrapper, char[][][] missingTypeNames, ITypeAnnotationWalker walker) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1a86bd567adf45e44a292fc414e862c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " \t \tprotected void setModifiers(EnumConstantDeclaration enumConstantDeclaration, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "signatureAfterChange": " \t \tprotected void setModifiers(EnumConstantDeclaration enumConstantDeclaration, org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration)", "diff": ["-\t\t\t\tenumConstantDeclaration.internalSetModifiers(fieldDeclaration.modifiers & CompilerModifiers.AccJustFlag);", "+\t\t\t\tenumConstantDeclaration.internalSetModifiers(fieldDeclaration.modifiers & ExtraCompilerModifiers.AccJustFlag);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b5a36a0ea4e087e69dc482de510ef5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/BatchProcessingEnvImpl.java", "commitBeforeChange": "70c7b91219f1abe7757608bdb335ee87fa26cb28", "commitAfterChange": "4f113d7aa945e602017e7829c71f3e73f6f0d8c6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \t@Override \tpublic Locale getLocale()", "signatureAfterChange": "  \t@Override \tpublic Locale getLocale()", "diff": ["-", "-\t@Override", "-\t\treturn _compiler.compilerLocale;", "+\t\treturn _compilerOwner.compilerLocale;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1c4a16f97ba5ea880ef8f7fbaf048d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c426d102698f7696728b2b0659449ec3f2a4483c", "commitAfterChange": "b6bf5b983b2bbbc4fad4d62ee0789c8de9ccd263", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": "\r \tprivate int retrieveEndOfDimensionsPosition(int start, int end)", "signatureAfterChange": "\r \tprivate int retrieveEndOfDimensionsPosition(int start, int end)", "diff": ["-\t\tint foundPosition = 0;\r", "+\t\tint foundPosition = start;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1cb458e38390a8c135d37fd80e96156", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CombinedBinaryExpression.java", "commitBeforeChange": "3f7c08578feaef7b778425feae5813c1b3e673ba", "commitAfterChange": "28207361e6bed98462807803a8d7149a7fd7441c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void generateOptimizedStringConcatenationCreation(BlockScope blockScope,  \t\tCodeStream codeStream, int typeID)", "signatureAfterChange": "  public void generateOptimizedStringConcatenationCreation(BlockScope blockScope,  \t\tCodeStream codeStream, int typeID)", "diff": ["-\t\t\t\t\tthis.left.implicitConversion & TypeIds.COMPILE_TYPE_MASK);", "+\t\t\t\t\tcursor.left.implicitConversion & TypeIds.COMPILE_TYPE_MASK);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1dbf394f04b307d04b703d4d027fdea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "3bee3efb3c3139a52dff7aa299065deb5290ece4", "commitAfterChange": "645825dd1e7c490f7b149a754d38a08b99765996", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected Object parseQualifiedName(boolean reset) throws InvalidInputException", "signatureAfterChange": " \tprotected Object parseQualifiedName(boolean reset) throws InvalidInputException", "diff": ["-\t\t\tint token = readToken();", "+\t\t\tint token = readTokenSafely();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1e5ddaad809dcf92ffa005ca9bfd558", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefFieldErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefFieldErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1e5f6f52ff6903a0561d003e14da493", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests18.java", "commitBeforeChange": "817f5b60f1b5283073ee91db13e8dcaec6a51e5d", "commitAfterChange": "19ed6515960d03123d69a9f3f7b64066c1bf212b", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " public void test433178() throws JavaModelException", "signatureAfterChange": " public void test433178() throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t+ RelevanceConstants.R_CASE + RelevanceConstants.R_CONSTRUCTOR) + \"}\", requestor.getResults());", "+\t\t\t\t\t\t\t\t\t\t\t+ RelevanceConstants.R_CASE + RelevanceConstants.R_UNQUALIFIED) + \"}\", requestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1f1c431697a7c0077014bc1321ae001", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " protected void matchCheck(AstNode node, MatchSet set)", "signatureAfterChange": " protected void matchCheck(AstNode node, MatchingNodeSet set)", "diff": ["-protected void matchCheck(AstNode node, MatchSet set) {", "+protected void matchCheck(AstNode node, MatchingNodeSet set) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1fdc4f7ff23f33a269291b99e2438ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceFormatterTests.java", "commitBeforeChange": "31a9e239c1d7bd32721c47642c470112e9155986", "commitAfterChange": "9ebc56bbef98951afda94a11e400e1c39d8ba94d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  protected void setUp() throws Exception", "signatureAfterChange": "  protected void setUp() throws Exception", "diff": ["-\tFORMAT_TYPE_SOURCE = Util.fileContent(getPluginDirectoryPath()+File.separator+\"GenericTypeTest.java\");", "+\tFORMAT_TYPE_SOURCE = Util.fileContent(getPluginBinariesDirectoryPath()+File.separator+\"GenericTypeTest.java\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e21069af21b1864366a1c51732258409", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": "  \tpublic boolean visit(ThrowStatement node)", "signatureAfterChange": "  \tpublic boolean visit(SuperMethodReference node)", "diff": ["+\tpublic boolean visit(SuperMethodReference node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e226deaea043ece2e1934bb3b09fe588", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void setJavaConventionsSettings()", "signatureAfterChange": "  \tpublic void setJavaConventionsSettings()", "diff": ["-\t\tthis.alignment_for_enum_constants = Alignment.NONE;", "+\t\tthis.alignment_for_enum_constants = Alignment.M_NO_ALIGNMENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e22aa50a0109532ffca40373892ab6b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public ICompilationUnit[] getCompilationUnits(WorkingCopyOwner owner)", "signatureAfterChange": " public ICompilationUnit[] getCompilationUnits(WorkingCopyOwner owner)", "diff": ["-\tif (workingCopies == null) return JavaModelManager.NoWorkingCopy;", "+\tif (workingCopies == null) return JavaModelManager.NO_WORKING_COPY;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e22eb7f23a4e91c5235714766b5ae01c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "  public void test073() throws JavaModelException", "signatureAfterChange": "  public void test073() throws JavaModelException", "diff": ["-\t\t\"OtherTypes[JAVADOC_METHOD_REF]{{@link OtherTypes#OtherTypes()}, Ljavadoc.text.OtherTypes;, ()V, OtherTypes, null, \"+this.positions+JAVADOC_RELEVANCE_IT+\"}\"", "+\t\t\"OtherTypes[JAVADOC_METHOD_REF]{{@link OtherTypes#OtherTypes()}, Ljavadoc.text.OtherTypes;, ()V, OtherTypes, null, \"+this.positions+R_DRINRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e22f5c47de40a8ac25d6fb40646a92ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\tif (isFieldUseDeprecated(this.binding, scope, (this.bits & IsStrictlyAssignedMASK) !=0)) {", "+\tif (isFieldUseDeprecated(this.binding, scope, (this.bits & IsStrictlyAssigned) !=0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e23dfdaae1157eb64d8f1ea46c83edfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 239, "signatureBeforeChange": " \tpublic boolean visit(NormalAnnotation annotation, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation annotation, ClassScope scope)", "diff": ["-\tpublic boolean visit(NormalAnnotation annotation, CompilationUnitScope scope) {", "+\tpublic boolean visit(NormalAnnotation annotation, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2671f270645928620a859e3690b9f8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionProposal.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tCompletionProposal(int kind, int completionLocation)", "signatureAfterChange": " \tCompletionProposal(int kind, int completionLocation)", "diff": ["-\t\t\t\t|| (kind > CompletionProposal.VARIABLE_DECLARATION)) {", "+\t\t\t\t|| (kind > CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e26c983cddbb3176aa18d74e0f6baee7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testAddExclusionOnFolderUnderProject() throws CoreException", "signatureAfterChange": " public void testAddExclusionOnFolderUnderProject() throws CoreException", "diff": ["-\t\tassertElementsEqual(", "+\t\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2720ea798223521af105a1f49183e38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tvoid endVisit(AnnotationArrayQualifiedTypeReference typeRef, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(JavadocSingleTypeReference typeRef, BlockScope scope);", "diff": ["-\tvoid endVisit(AnnotationArgumentExpression expression, BlockScope scope);", "-\tvoid endVisit(AnnotationArrayQualifiedTypeReference typeRef, BlockScope scope);", "+\tvoid endVisit(JavadocSingleNameReference argument, BlockScope scope);", "+\tvoid endVisit(JavadocSingleTypeReference typeRef, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2737ecd221f0a07313a9afe292ccbb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormattingPreferences.java", "commitBeforeChange": "65db522775790e696e2711bd035a45d8d1048338", "commitAfterChange": "38c6819a0e5d74c3a0e3091a03e30013f3799510", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static FormattingPreferences getSunSetttings()", "signatureAfterChange": "  \tpublic static FormattingPreferences getSunSetttings()", "diff": ["-\t\tsunSettings.type_member_alignment = Alignment.M_MULTICOLUMN;", "+\t\tsunSettings.type_member_alignment = Alignment.M_NO_ALIGNMENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e274c5b67bd2c0f65c25246512210b7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "de9b15ef333e994a84fc3aeb3bf5f6813e97aa47", "commitAfterChange": "de810d934f501a2d4e72898176ffa2636e3d8f40", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": " \t public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\tif (flowInfo.isPotentiallyUnknown(local)) {", "+\t\t\tif (flowInfo.cannotBeDefinitelyNullOrNonNull(local)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2851acb7b99eab3854b9a8e6a8c77bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/EclipseFileManager.java", "commitBeforeChange": "a2ea0fcdb64df5f36a0bf2ffec84669e3f62dfd4", "commitAfterChange": "9db80bfa8f5d6f7bab214c95a4d83c3bdedb2628", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate Iterable<? extends File> getExtdirsFrom(String path)", "signatureAfterChange": "  \tprivate Iterable<? extends File> getExtdirsFrom(String path)", "diff": ["-\t\t} catch (InvalidInputException e) {", "+\t\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e28b77a442df47548ba45f59db6638bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocSingleTypeReference.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected void reportInvalidType(Scope scope)", "signatureAfterChange": "  \tprotected void reportInvalidType(Scope scope)", "diff": ["-\t\tscope.problemReporter().javadocInvalidType(this, this.resolvedType, scope.getModifiers());", "+\t\tscope.problemReporter().javadocInvalidType(this, this.resolvedType, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2b78b1181920de57e5df675fc9f6a08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeHierarchyOperation.java", "commitBeforeChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "commitAfterChange": "da25131cabd17a48ed55149d76a1e2be2aabb378", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public CreateTypeHierarchyOperation(IType element, IWorkingCopy[] workingCopies, IJavaProject project, boolean computeSubtypes) throws JavaModelException", "signatureAfterChange": " public CreateTypeHierarchyOperation(IType element, ICompilationUnit[] workingCopies, IJavaProject project, boolean computeSubtypes) throws JavaModelException", "diff": ["-public CreateTypeHierarchyOperation(IType element, IWorkingCopy[] workingCopies, IJavaProject project, boolean computeSubtypes) throws JavaModelException {", "+public CreateTypeHierarchyOperation(IType element, ICompilationUnit[] workingCopies, IJavaProject project, boolean computeSubtypes) throws JavaModelException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2cf85f58db96387aa703d634b4c0924", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "commitAfterChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic Object get(Object key)", "signatureAfterChange": " \tpublic Object get(Object key)", "diff": ["-\t\treturn entry._fValue;", "+\t\treturn entry.value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2d1d7127387ab8761ec4543f49aa139", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CreationReference.java", "commitBeforeChange": "1534c3fb9312be746c807d9f0aa370d7a2598284", "commitAfterChange": "f9b5a54e0afa9af686e707bcc0c484de0728c860", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tacceptChild(visitor, getExpression());", "+\t\t\tacceptChild(visitor, getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2e67183b72dabe060c0286fe8840908", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": "  \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\t\t\t}\telse if (initializationScope.areTypesCompatible(initializationTypeBinding, typeBinding)) {", "+\t\t\t\t\t\t}\telse if (Scope.areTypesCompatible(initializationTypeBinding, typeBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2f12a19719ac6b8d9c1ee7aae87cfd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void analyseCode( \t\tClassScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \tpublic void analyseCode( \t\tClassScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\tbits |= IsReachableMASK;", "+\t\t\t\tbits |= IsReachable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2fb3fe9a26174590173ca4ea9d45e8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest_1_5.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuiteWithMinimalCompliance(testClass(), F_1_5);", "+\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3010185332a07fe3e843972289fa103", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tsyntheticField = sourceType.addSyntheticField(targetType, currentScope);", "+\t\t\tsyntheticField = sourceType.addSyntheticFieldForClassLiteral(targetType, currentScope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e301784d8dcfeb8b27004576a3efaa50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic void testMissingTagsErrorPackage()", "signatureAfterChange": " \tpublic void testMissingTagsErrorPackage()", "diff": ["-\t\trunNegativeTest(MissingTags, resultForMissingTags(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(MISSING_TAGS, resultForMissingTags(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3084b8deda3ac1025d07b4e0c3329de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "24134b187b46ea16212a45107324227f46ba3e4a", "commitAfterChange": "496121d0ad975842fb45544aac592b8195531ce7", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic void printTrailingComment()", "signatureAfterChange": " \tpublic void printTrailingComment()", "diff": ["-\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tthis.printLineComment(this.scanner.getRawTokenSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31e453b1f82f55bda478216c03c8bfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/HierarchyOnWorkingCopiesTests.java", "commitBeforeChange": "a25370743d1aa1679ad920fa246835a24f730877", "commitAfterChange": "af6c11788202eef2f6ddc46c3a476fa9d7131ddc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void testSimpleSuperTypeHierarchy() throws CoreException", "signatureAfterChange": " public void testSimpleSuperTypeHierarchy() throws CoreException", "diff": ["-\t\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPath() +\" [in P]]]]\\n\" + ", "+\t\t\t\"    Object [in Object.class [in java.lang [in \"+  getExternalJCLPathString() +\" [in P]]]]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3261ad01fcaf4e1af58fbfb18caf5f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public IPath[] getIndexLocations()", "signatureAfterChange": "  public IndexLocation[] getIndexLocations()", "diff": ["-public IPath[] getIndexLocations() {", "+public IndexLocation[] getIndexLocations() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e32bf33e02450dab1773e6e05349dc4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/PackageDeclaration.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tASTNode clone0(AST target)", "signatureAfterChange": " \tASTNode clone0(AST target)", "diff": ["-\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3443ce720de8f91c1eb75a27a76bec5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeletePackageFragmentRootOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected void updateProjectClasspath(IPath rootPath, IJavaProject project) \t\tthrows JavaModelException", "signatureAfterChange": " \tprotected void updateProjectClasspath(IPath rootPath, IJavaProject project) \t\tthrows JavaModelException", "diff": ["-\t\t\tproject.setRawClasspath(newClasspath, fMonitor);", "+\t\t\tproject.setRawClasspath(newClasspath, progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e344b7beb94bf6929a2309eb6c9f23e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " public void test_annotation_import_006()", "signatureAfterChange": " public void test_annotation_import_006()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e34fb9ad97f6bbefa405b60db5e2ef99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Override \tpublic TypeAnnotationWalker toMethodReturn()", "signatureAfterChange": "  \t@Override \tpublic ITypeAnnotationWalker toMethodReturn()", "diff": ["-\tpublic TypeAnnotationWalker toMethodReturn() {", "+\tpublic ITypeAnnotationWalker toMethodReturn() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3686c848056064427ac8871bfb9f854", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void testInvalidTagsClassErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsClassErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3789ed59b325e6656a127581a6f35ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "diff": ["-\t\treturn (constructorDeclaration.bits & ASTNode.HasLocalTypeMASK) != 0; // continue only if it has local type", "+\t\treturn (constructorDeclaration.bits & ASTNode.HasLocalType) != 0; // continue only if it has local type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3878d8eb94b38c7ad65ccf58df19e7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Member.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["-public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner) {", "+public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38fbcb7e99ac22e03a44ec86dd546a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/CompilerAptTests.java", "commitBeforeChange": "57effdfbf8500b1bf7932afcc270c4183c0fd5bb", "commitAfterChange": "aeba50ed8bce5da37b3a88a633f33265f2c2db1c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void testCompilerOneClassWithEclipseCompiler()", "signatureAfterChange": " \tpublic void testCompilerOneClassWithEclipseCompiler()", "diff": ["-\t\tcompileOneClass(compiler);", "+\t\tinternalTestGenerateClass(compiler);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3904d16f529edf7376c35034fa4aa33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": " public void testDuplicateTypeDeclaration7() throws CoreException, IOException", "signatureAfterChange": " public void testDuplicateTypeDeclaration7() throws CoreException, IOException", "diff": ["-\t\tremoveLibraryEntry(this.currentProject, new Path(jarName));", "+\t\tremoveClasspathEntry(this.currentProject, new Path(jarName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a1ae9f5918f014279ef475d3bfe649", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "5b7577970cc1147a47fff02a981297149bac38c1", "commitAfterChange": "747a63a0a2a9b4e7029fd103555c522985364757", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t\tfor (Iterator iter =  perProjectInfo.values().iterator(); iter.hasNext();) {", "+\t\tfor (Iterator iter =  perProjectInfos.values().iterator(); iter.hasNext();) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a1eec4e961a175e643e3f38058e68e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void endVisit(AnnotationMessageSend messageSend, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(JavadocMessageSend messageSend, BlockScope scope)", "diff": ["-\tpublic void endVisit(AnnotationMessageSend messageSend, BlockScope scope) {", "+\tpublic void endVisit(JavadocMessageSend messageSend, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a57d1a9d9ce50b717dc97f446af04e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TestAll.java", "commitBeforeChange": "073c195d4829bd3ee6e06c1d3c0bfc4a1c7046ee", "commitAfterChange": "677bf3763b6e383c756f5ca8cbbd80c6dec30c1f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tsince_1_8.add(CastingContextTest.class);", "+\tsince_1_8.add(ExpressionContextTests.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3a9c2ab3e7db724692f45c238cfe6e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public boolean isInterface() throws JavaModelException", "signatureAfterChange": " public boolean isInterface() throws JavaModelException", "diff": ["-\treturn info.getKind() == IGenericType.INTERFACE;", "+\treturn info.getKind() == IGenericType.INTERFACE_DECL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3abb124b2f99e824dc6eb4ded5a08f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "24134b187b46ea16212a45107324227f46ba3e4a", "commitAfterChange": "496121d0ad975842fb45544aac592b8195531ce7", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 39, "signatureBeforeChange": " \t \tpublic void printEndOfCompilationUnit()", "signatureAfterChange": " \t \tpublic void printEndOfCompilationUnit()", "diff": ["-\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tthis.printLineComment(this.scanner.getRawTokenSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3ac483a97e744be346fdcb94cb7218f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 122, "methodNumberAfterChange": 122, "signatureBeforeChange": "  public void test153() throws JavaModelException", "signatureAfterChange": "  public void test153() throws JavaModelException", "diff": ["-\t\t\"float[KEYWORD]{float, null, null, float, null, \"+this.positions+R_DICENNR+\"}\"", "+\t\t\"float[KEYWORD]{float, null, null, float, null, \"+this.positions+R_DRICENNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b36a7128c42ab919784f0458e8ed50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " protected void consumeModifiers()", "signatureAfterChange": " protected void consumeModifiers()", "diff": ["-\tcheckAnnotation(); // might update modifiers with AccDeprecated", "+\tcheckComment(); // might update modifiers with AccDeprecated"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3e66adce9a62b8a8b52e1c627048062", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void add(IJavaElement element) throws JavaModelException", "signatureAfterChange": " public void add(IJavaElement element) throws JavaModelException", "diff": ["-\t\t\t\tIResource resource = element.getUnderlyingResource();", "+\t\t\t\tIResource resource = element.getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3e691ba048ef2b085936bfc148fc63d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/util/FactoryPathUtil.java", "commitBeforeChange": "d506bd33e9d161ce75f11b19448c2ad2110b1903", "commitAfterChange": "87dd132b690b39c22112692b2510e01020cf3c19", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static Map<FactoryContainer, Boolean> decodeFactoryPath(final String xmlFactoryPath)  \t\tthrows IOException", "signatureAfterChange": " \t \tpublic static Map<FactoryContainer, Boolean> decodeFactoryPath(final String xmlFactoryPath)  \t\tthrows IOException", "diff": ["-\t\tMap<FactoryContainer, Boolean> result = new HashMap<FactoryContainer, Boolean>();", "+\t\tMap<FactoryContainer, Boolean> result = new LinkedHashMap<FactoryContainer, Boolean>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3eb24fe1d68216faafafb02f33822bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24586a3b4a854d2cc7de2d86109975ee75343e81", "commitAfterChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "signatureAfterChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope,\r \t\tboolean implicitCall)", "diff": ["-\t\t\tint relevance = DEFAULTRELEVANCE;\r", "+\t\t\tint relevance = R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3fe1666b7992414570261e4235cf5bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 17, "signatureBeforeChange": "  public boolean isProtectedNull(LocalVariableBinding local)", "signatureAfterChange": "  public boolean isProtectedNull(VariableBinding local)", "diff": ["-public boolean isProtectedNull(LocalVariableBinding local) {", "+public boolean isProtectedNull(VariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e40311a3ea1b5d7663ac5dd8bbe9a26d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTModelBridgeTests.java", "commitBeforeChange": "cf2efa3dda03cbfe4678da60ea7973c079a8dcf8", "commitAfterChange": "25dd00f3e9ff83b7d41099f0023fcb104467a3ee", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void testTopLevelType2() throws CoreException", "signatureAfterChange": " \tpublic void testTopLevelType2() throws CoreException", "diff": ["-\t\t\tIBinding binding = ((SimpleType) node).resolveBinding();", "+\t\t\tIBinding binding = ((Type) node).resolveBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e40afdb856eb327ab45a17ff01713b32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocQualifiedTypeReference.java", "commitBeforeChange": "7c7a29560cc77e20d75aa306a0e1f9b3d1fd7800", "commitAfterChange": "bea840ed083d1fec83d3c3225bb9a0c808792499", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void reportDeprecatedType(Scope scope)", "signatureAfterChange": " \tprotected void reportDeprecatedType(Scope scope)", "diff": ["-\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, this, scope.getModifiers());", "+\t\tscope.problemReporter().javadocDeprecatedType(this.resolvedType, this, scope.getDeclarationModifiers());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e410b0c5ccb6dae966a2e17d12cfc763", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "93e5ff3a6545305db70cc209a35909ba11267a03", "commitAfterChange": "68db0a50107f072688f40bcdb70cc1c2cadc3119", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static AnnotationBinding [] resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient, boolean copySE8AnnotationsToType)", "signatureAfterChange": " \tpublic static AnnotationBinding [] resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient, boolean copySE8AnnotationsToType)", "diff": ["-\t\t\tcopySE8AnnotationsToType(scope, recipient, annotations);", "+\t\t\tcopySE8AnnotationsToType(scope, recipient, sourceAnnotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e429e2b6cef28a6a8067ed3b1bd182ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "e1051acac48de2e59e4c3d2d0f46898b4067bf9a", "commitAfterChange": "25dbd9e17c7b6920dccf1b458296dbbe00f382de", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t\tpublic void endVisit(PackageQualifiedType node)", "signatureAfterChange": " \t\tpublic void endVisit(NameQualifiedType node)", "diff": ["-\t\tpublic void endVisit(PackageQualifiedType node) {", "+\t\tpublic void endVisit(NameQualifiedType node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e432f1f23579d016141737a3f45169c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " protected void consumeTypeImportOnDemandDeclarationName()", "signatureAfterChange": " protected void consumeTypeImportOnDemandDeclarationName()", "diff": ["-\t// flush annotations defined prior to import statements", "-\treference.declarationSourceEnd = this.flushAnnotationsDefinedPriorTo(reference.declarationSourceEnd);", "+\t// flush comments defined prior to import statements", "+\treference.declarationSourceEnd = this.flushCommentsDefinedPriorTo(reference.declarationSourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4395c228452aa5b658fa200e7020fa5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 420, "methodNumberAfterChange": 420, "signatureBeforeChange": " \tpublic void test401()", "signatureAfterChange": " \tpublic void test401()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_ARRAY_INITIALIZER, JavaCore.INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BETWEEN_EMPTY_BRACES_IN_ARRAY_INITIALIZER, JavaCore.INSERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e43b9ae00f1820a9e9fbae5862cae22f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageDeclaration.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected PackageDeclaration(ICompilationUnit parent, String name)", "signatureAfterChange": " protected PackageDeclaration(CompilationUnit parent, String name)", "diff": ["-protected PackageDeclaration(ICompilationUnit parent, String name) {", "+protected PackageDeclaration(CompilationUnit parent, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e44a1e47d7a2c5b05129b38d0a471ecf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\tboolean needRuntimeCheckcast = (this.bits & NeedRuntimeCheckCastMASK) != 0;", "+\t\tboolean needRuntimeCheckcast = (this.bits & GenerateCheckcast) != 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4680a92c4447cb038571094bebf833b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CaseLabel.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " void placeInstruction()", "signatureAfterChange": " void placeInstruction()", "diff": ["-\t\t\t\tcodeStream.writeSignedWord(forwardReferences[i], offset);", "+\t\t\t\tcodeStream.writeWidePosition(forwardReferences[i], offset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e46b1c6e136535fb0557f3dbd2fca292", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationTypeMemberDeclaration.java", "commitBeforeChange": "28475f7151ef48b7b99d16fedb7cc564edf8391b", "commitAfterChange": "4374063ffc07d9e5a6e12269e991cbcb89c32543", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\t \tpublic IVariableBinding resolveBinding()", "signatureAfterChange": "\t \tpublic IMethodBinding resolveBinding()", "diff": ["-\tpublic IVariableBinding resolveBinding() {", "+\tpublic IMethodBinding resolveBinding() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e46e3d214fe9dec96361f6090502190e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public IJavaElement createImportHandle(ImportReference importRef)", "signatureAfterChange": " public IJavaElement createImportHandle(ImportReference importRef)", "diff": ["-\tOpenable currentOpenable = this.currentPotentialMatch.openable;", "+\tOpenable currentOpenable = this.currentPossibleMatch.openable;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e46fa25756a12e1b43aac1ea238e7ff5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": "  public void test141() throws JavaModelException", "signatureAfterChange": "  public void test141() throws JavaModelException", "diff": ["-\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e471ad0c9cea28bafddabad6edb2c5eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " public void testTypeRefGenericMethod_Parameterized() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericMethod_Parameterized() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, PARAMETERIZED_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());", "+\tsearch(\"*\", TYPE, TYPE_ARGUMENT_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e47369385efe8246224f167d374a5caa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "73e6c55b6cebcb032c8128286708483f86167b64", "commitAfterChange": "5326f4925981afee39790c88bc133bd18e542033", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tvoid endVisit(AnnotationArgument argument, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(AnnotationSingleNameReference argument, BlockScope scope);", "diff": ["-\tvoid endVisit(AnnotationArgument argument, BlockScope scope);", "+\tvoid endVisit(AnnotationSingleNameReference argument, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e47c4be0dde14359f5bfea1bd9e1f14f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": " public void ifle(Label lbl)", "signatureAfterChange": " public void ifle(BranchLabel lbl)", "diff": ["-public void ifle(Label lbl) {", "+public void ifle(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48036be487907c837da0598e991e7b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "dcfa423160a3b30f43dffba648069655e8394f87", "commitAfterChange": "af7e89b4755888e62f6321675c3299d6bb0ccbfa", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": " public static int getProblemCategory(int problemID)", "signatureAfterChange": " public static int getProblemCategory(int problemID)", "diff": ["-\t\t\t\t\treturn CategorizedProblem.CAT_BUILDPATH;", "+\t\t\t\t\treturn CategorizedProblem.CAT_RESTRICTION;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48184da72c02ceccb54847608b1c9db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "c57d63e48d2e13925643b8ebe6a288202f202e6b", "commitAfterChange": "e2a159c6596c04bca6bcd93e61dded936d044196", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void fireChange()", "signatureAfterChange": " public void fireChange()", "diff": ["-\t\tPlatform.run(new ISafeRunnable() {", "+\t\tSafeRunner.run(new ISafeRunnable() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e48215ce1c18c674d3b8138d64a19845", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testExternalJarBinaryInnerTypeMemento() throws JavaModelException", "signatureAfterChange": " public void testExternalJarBinaryInnerTypeMemento() throws JavaModelException", "diff": ["-\t\t\"=P/\" + getExternalJCLPath() + \"<p(X$Inner.class[Inner\",", "+\t\t\"=P/\" + getEscapedExternalJCLPath() + \"<p(X$Inner.class[Inner\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e49d3ee7a4022689136484f974b31d49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public boolean isMarkedAsNullOrNonNullInAssertExpression(VariableBinding local)", "signatureAfterChange": "  public boolean isMarkedAsNullOrNonNullInAssertExpression(LocalVariableBinding local)", "diff": ["-public boolean isMarkedAsNullOrNonNullInAssertExpression(VariableBinding local) {", "+public boolean isMarkedAsNullOrNonNullInAssertExpression(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4a10823997dd9c2522a8afab8d27856", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 317, "methodNumberAfterChange": 317, "signatureBeforeChange": " \tpublic void test0670() throws JavaModelException", "signatureAfterChange": " \tpublic void test0670() throws JavaModelException", "diff": ["-\t\t\tString expectedError = \"List cannot be resolved to a type\";", "+\t\t\tString expectedError = ", "+\t\t\t\t\"List cannot be resolved to a type\";", "-\t\t\tassertTrue(\"Not a recovered binding\", variableBinding.isRecovered());", "+\t\t\tassertFalse(\"Not a recovered binding\", variableBinding.isRecovered());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4cdedc122a3c94ff9c85d48a6253b90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "d4b8f1437bd894de59822a00977399b8af50c7a1", "commitAfterChange": "00e190bf5f96c54b05d4853702eef90ea6dc4747", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t \t \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "signatureAfterChange": "\t \t \tpublic void manageSyntheticAccessIfNecessary(BlockScope currentScope)", "diff": ["-\t\twhile (outerMostClass.isNestedType()){", "+\t\twhile (outerMostClass.isLocalType()){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4cea2984eee45134c935663a0eba11b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": " public void test160() throws JavaModelException", "signatureAfterChange": " public void test160() throws JavaModelException", "diff": ["-\t\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\t\"BasicTestMethods[METHOD_REF<CONSTRUCTOR>]{BasicTestMethods(int, float, Class), Ljavadoc.methods.tags.BasicTestMethods;, (IFLjava.lang.Class;)V, BasicTestMethods, (xxx, real, clazz), \"+this.positions+R_DRINR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d2be62606b41ec422eb13c75ef2e92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTVisitorTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void setUp()", "signatureAfterChange": " \tprotected void setUp()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4d34eef6f85cc71bf3bdb869382afb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "066f1fe71d5d139e5a681c9aeece89fa867b71b7", "commitAfterChange": "39951c3ce9f26380d44e65dd4f0a9c708c89c0d1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testExtraJavaLikeExtension1() throws CoreException", "signatureAfterChange": " public void testExtraJavaLikeExtension1() throws CoreException", "diff": ["-\t\tassertElementsEqual(", "+\t\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4e3b2b1192951f0495cefb006cba816", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "a1ef86385643caa074ce407ec1aaf8fd121c9cc2", "commitAfterChange": "844fc4d356fef36a29f4fe3bf00f7a74989bafaf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings)", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings)", "diff": ["-\t\t\tnew Parser(", "+\t\t\tnew CommentRecorderParser("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4e4178928d4298ffd7db8464dfc359f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/JarFileEntryDocument.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic String getType()", "signatureAfterChange": " \tpublic String getType()", "diff": ["-\t\treturn \"class\"; //$NON-NLS-1$", "+\t\treturn EXTENSION_class;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ec68822d529367d38db3db422b31cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 170, "signatureBeforeChange": " \tpublic void test0169() throws JavaModelException", "signatureAfterChange": " \tpublic void test0169() throws JavaModelException", "diff": ["-\t\tassertEquals(\"wrong type\", IPackageBinding.PACKAGE, packageBinding.getKind()); //$NON-NLS-1$", "+\t\tassertEquals(\"wrong type\", IBinding.PACKAGE, packageBinding.getKind()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f5f638f3eead697376266f4ffb1410", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeDeclarationStatement.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tacceptChild(visitor, getTypeDeclaration());", "+\t\t\tacceptChild(visitor, getDeclaration());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e511c885b0effdbfde802d7d485d8ae2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedRefConstructorErrorTagsPackage()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedRefConstructorErrorTagsPackage()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(DEFAULT_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e51aacf2b85baea53e4b33fecdc25dad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "5d31adee26458d819310cf59840fc38988624e1e", "commitAfterChange": "3ec1a09f885b6797954dcfa138f3201aa9202c14", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 146, "signatureBeforeChange": " \tprotected void removeLibraryEntry(Path path) throws JavaModelException", "signatureAfterChange": " \tprotected void removeLibraryEntry(IPath path) throws JavaModelException", "diff": ["-\tprotected void removeLibraryEntry(Path path) throws JavaModelException {", "+\tprotected void removeLibraryEntry(IPath path) throws JavaModelException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e520578108b7533a33bd26a0ff9755b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "0ba5e2f2851455c016407d133933070e588be146", "commitAfterChange": "c9df47e6bc4127d80d1e16ea8353f464e792fda3", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " public String getJavadocContents(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public String getJavadocContents(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tString option = this.getJavaProject().getOption(JavaCore.ENABLE_JAVADOC_ATTACHMENTS, true);", "+\tString option = this.getJavaProject().getOption(JavaCore.ENABLE_JAVADOC_ATTACHMENTS_ACCESSES, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e540d287e457cee7c0149a171a7ef288", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TestAll.java", "commitBeforeChange": "ace2b01a750ae327ae916d483eb40818f9a677bc", "commitAfterChange": "9c4b0a6288e6d880b6e314a0c477538374a92e62", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\tif (UnconditionalFlowInfo.coverageTestFlag) {", "+\tif (UnconditionalFlowInfo.COVERAGE_TEST_FLAG) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e546b0e3a7792dfe7ac62a16723e6226", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "a7538ae82dbd33b3f26dec50ae8ce6f249c7a04f", "commitAfterChange": "f0ca1f9e3571a6c8cc7bcfc8fee3982374c51194", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["-\t\t\t\t\tif (scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) { // below 1.5, already reported as syntax error", "+\t\t\t\t\tif (scope.compilerOptions().originalSourceLevel >= ClassFileConstants.JDK1_5) { // below 1.5, already reported as syntax error"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e552734180b7145179f43f286fcf577f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " protected void consumeClassDeclaration()", "signatureAfterChange": " protected void consumeClassDeclaration()", "diff": ["-\ttypeDecl.declarationSourceEnd = flushAnnotationsDefinedPriorTo(endStatementPosition); ", "+\ttypeDecl.declarationSourceEnd = flushCommentsDefinedPriorTo(endStatementPosition); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e552768b2d2286cbebec74bdd66210da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t\t\tcodeStream.generateStringAppend(currentScope, left, right);", "+\t\t\t\t\t\tcodeStream.generateStringConcatenationAppend(currentScope, left, right);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e55e2ad181c21d80e1f42a829f6ce5d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CreateTypeSourceExamplesTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void testCreateClassWithImplements3()", "signatureAfterChange": " public void testCreateClassWithImplements3()", "diff": ["-\tassertEquals(", "+\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e56b8d1b2d83e7e6f1282b1cb06d5158", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected OpenableElementInfo createElementInfo()", "signatureAfterChange": " protected Object createElementInfo()", "diff": ["-protected OpenableElementInfo createElementInfo() {", "+protected Object createElementInfo() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e58547d72346499bfa73edc5658634c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceElementParserTest.java", "commitBeforeChange": "cd8a825e0763d05692512bf2d61b656a1da5c5d8", "commitAfterChange": "54beaf9a0ac7e8e91c308765e4aff36ce5749605", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void enterType(TypeInfo typeInfo)", "signatureAfterChange": " public void enterType(TypeInfo typeInfo)", "diff": ["-\t\t\taddTypeParameter(typeParameterInfo);", "+\t\t\taddTypeParameterToType(typeParameterInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5891ec2b3b258f871524a149f46f232", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatter.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tprivate boolean insertSpaceAfter(int token)", "signatureAfterChange": " \tprivate boolean insertSpaceAfter(int token)", "diff": ["-\t\t\tcase Scanner.TokenNameCOMMENT_LINE :", "+\t\t\tcase TerminalTokens.TokenNameCOMMENT_LINE :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e58a93fa07ecc79ff93b5cef7b3283bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public void testTypeRefQualifiedAll_Field() throws CoreException", "signatureAfterChange": " public void testTypeRefQualifiedAll_Field() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, FIELD_TYPE_DECLARATION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());", "+\tsearch(\"*\", TYPE, FIELD_DECLARATION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e599fd9cb1f6c3db009eccbcbae73de2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": " public void testSearchPatternValidMatchRule15()", "signatureAfterChange": " public void testSearchPatternValidMatchRule15()", "diff": ["-\t\tSearchPattern.R_CAMEL_CASE_MATCH,", "+\t\tSearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5a9e15c31aca5236d876534b2da0fe9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "928bbf160d6f9d1eb9d492c7bd7fb73692671b03", "commitAfterChange": "c8a677fcf4f90b99bca8ae907d05299b956a00f6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testSuggestFieldName018()", "signatureAfterChange": " public void testSuggestFieldName018()", "diff": ["-\tassertEquals(", "+\tassumeEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5ace05d364f55cb7a7ae14f96d17f55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "87d4fd7980451e90652820b5860e6399b708ef2c", "commitAfterChange": "913656a5a76e9163d25332c6a9aeee51291ec413", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  \tvoid printComment(int kind, String source, int start, int end, int level)", "signatureAfterChange": "  \tvoid printComment(int kind, String source, int start, int end, int level)", "diff": ["-\t\tinitializeScanner(source.toCharArray());", "+\t\tresetScanner(source.toCharArray());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b0ea39d536c4bb7dbb3e407296c0f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionRequestor.java", "commitBeforeChange": "8b72c02b9d94ae454655938a968c4cbea2e7dc9d", "commitAfterChange": "c06c47cc107f647debe88ffb1eb03a0449972049", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic final void setIgnored(int completionProposalKind, boolean ignore)", "signatureAfterChange": " \tpublic final void setIgnored(int completionProposalKind, boolean ignore)", "diff": ["-\t\t\t|| completionProposalKind > CompletionProposal.VARIABLE_DECLARATION) {", "+\t\t\t|| completionProposalKind > CompletionProposal.METHOD_NAME_REFERENCE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5bdc9b141376966599b5ffc1b8bb907", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "20c976894314972bc7f9517defa572358c61bdfa", "commitAfterChange": "cd6774c18c492da2d8ede12c040b35d33941174f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void assertMarkers(String message, String expectedMarkers, IJavaProject project) throws CoreException", "signatureAfterChange": " protected void assertMarkers(String message, String expectedMarkers, IJavaProject project) throws CoreException", "diff": ["-\tIMarker[] markers = project.getProject().findMarkers(IJavaModelMarker.BUILDPATH_PROBLEM_MARKER, false, IResource.DEPTH_ONE);", "+\tIMarker[] markers = project.getProject().findMarkers(IJavaModelMarker.BUILDPATH_PROBLEM_MARKER, false, IResource.DEPTH_ZERO);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5c079ec1b0a6dcb40d2500314698f93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "a2a0577109951f3af96b6ee7e6f23d457b52d52d", "commitAfterChange": "1987bebfc0499fe07d643a641d2e74ff184f5cc7", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " \tpublic boolean visit(IfStatement node)", "signatureAfterChange": " \tpublic boolean visit(IntersectionType node)", "diff": ["+\t}", "+\tpublic boolean visit(IntersectionType node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5cef95708703a4d12f3dcbd097933ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression.java", "commitBeforeChange": "8a55616a15f0e12ee24162781746f45ed8c24b78", "commitAfterChange": "d7c285a09f8cde2ba05e7f838f10ce545b90c736", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public final boolean areTypesCastCompatible(BlockScope scope, TypeBinding castTb, TypeBinding expressionTb)", "signatureAfterChange": "\r public final boolean areTypesCastCompatible(BlockScope scope, TypeBinding castTb, TypeBinding expressionTb)", "diff": ["-\t\t\t\tif (castTb != expressionTb && (scope.compareTypes(castTb, expressionTb) == NotRelated)) {\r", "+\t\t\t\tif (castTb != expressionTb && (Scope.compareTypes(castTb, expressionTb) == NotRelated)) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5e4add82f3414d6980b411020df53b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void checkComment()", "signatureAfterChange": " public void checkComment()", "diff": ["-\tif (this.javadocParser.checkJavadoc && this.javadoc != null) {", "+\tif (this.javadocParser.checkDocComment && this.javadoc != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5e9eeb6a7c3a22e9827e56068f73c85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner)", "diff": ["-public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner owner) {", "+public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6021218331769cba528bfafe8b38be2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public void markAsDefinitelyUnknown(VariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyUnknown(LocalVariableBinding local)", "diff": ["-public void markAsDefinitelyUnknown(VariableBinding local) {", "+public void markAsDefinitelyUnknown(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e62dfb4175e683a328fbfb504b6cb74b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "de8aa9940086fe152901aa168536f30670945804", "commitAfterChange": "e4718c224cab1ce3081aa85532a7ec7da527a7d0", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CodeSnippetClassFile( \torg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding aType, \torg.eclipse.jdt.internal.compiler.ClassFile enclosingClassFile, \tboolean creatingProblemType)", "signatureAfterChange": " public CodeSnippetClassFile( \torg.eclipse.jdt.internal.compiler.lookup.SourceTypeBinding aType, \torg.eclipse.jdt.internal.compiler.ClassFile enclosingClassFile, \tboolean creatingProblemType)", "diff": ["-\t\tif (this.targetJDK >= ClassFileConstants.JDK1_7) {", "+\t\tif (this.targetJDK >= ClassFileConstants.JDK1_8) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6370a5f07ca2995cb7756d66dc2d124", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "84bab690fce0d07b753bfc05c56b8e56d168a1a6", "commitAfterChange": "72404957161b9a06b0beff261255d6fcbe542913", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \tpublic TypeDeclarationStatement  \t\t\tnewTypeDeclarationStatement(AbstractTypeDeclaration decl)", "signatureAfterChange": " \tpublic TypeDeclarationStatement  \t\t\tnewTypeDeclarationStatement(AbstractTypeDeclaration decl)", "diff": ["-\t\t\tresult.setTypeDeclaration((TypeDeclaration) decl);", "+\t\t\tresult.internalSetTypeDeclaration((TypeDeclaration) decl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6376a67a429967365493f401331ae6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "cff20a526b50465a2f348a1a5575e634a801a7d8", "commitAfterChange": "7ff0d09aa487a0631f946435eaa975868c23d1f5", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tArrayQualifiedTypeReference arrayQualifiedTypeReference, \t\tBlockScope scope)", "diff": ["-\t\t\tint dimensions = getExtraDimension();", "+\t\t\tint dimensions = getDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64449fdb0ba7d8d0f20cd367a047771", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "fb2dd37cec63b32be19be47d4358718ed4d76649", "commitAfterChange": "9d4deb39cd596c4aac108a1983a0ab5432be976e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic TypeBinding createBinding(MethodScope scope, TypeBinding typeBinding)", "signatureAfterChange": "  \tpublic TypeBinding createBinding(MethodScope scope, TypeBinding typeBinding)", "diff": ["-\t\t\tthis.binding = new LocalVariableBinding(this, typeBinding, this.modifiers, true /*isArgument*/);", "+\t\t\tthis.binding = new LocalVariableBinding(this, typeBinding, this.modifiers, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e64dd235a9e60b73b5a8e1156f2e9cab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  public void test043() throws JavaModelException", "signatureAfterChange": "  public void test043() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.types.tags.BasicTestTypes;, I, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.types.tags.BasicTestTypes;, I, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e68baa7207959cfe25f557d5c80121cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "          public ArrayType getArrayType(TypeMirror componentType)", "signatureAfterChange": "          public ArrayType getArrayType(TypeMirror componentType)", "diff": ["-\t\t\tfinal ITypeBinding arrayType = _env.getTypeBinding(bindingKey);", "+\t\t\tfinal ITypeBinding arrayType = _env.getTypeBindingFromKey(bindingKey);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6903766bba6d6d06729a0e81babac47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTStructuralPropertyTest.java", "commitBeforeChange": "26f568ac8c33647ac64f84b5eee920325d870fe8", "commitAfterChange": "89fead2e35034778cb1cda34e7f362e4b63427a2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void testNodeClassForType()", "signatureAfterChange": "  \tpublic void testNodeClassForType()", "diff": ["-\t\t\t} catch (RuntimeException e) {", "+\t\t\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e69f446ca4c9128cef11606fdab0317b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic synchronized boolean containsWorkingCopyMapEntriesForParent(IFile f)", "signatureAfterChange": " \tpublic synchronized boolean containsWorkingCopyMapEntriesForParent(IFile f)", "diff": ["-\t\treturn _parentToGenWorkingCopies.containsKey(f);", "+\t\treturn _reconcileDeps.containsKey(f);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6acc3d7e28f081b6f9edb3a4fedcfc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " public void parseBlockStatements(ConstructorDeclaration cd, CompilationUnitDeclaration unit)", "signatureAfterChange": " public void parseBlockStatements(ConstructorDeclaration cd, CompilationUnitDeclaration unit)", "diff": ["-\t\t\tcd.bits |= ASTNode.UndocumentedEmptyBlockMASK;", "+\t\t\tcd.bits |= ASTNode.UndocumentedEmptyBlock;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6b035d2c13538e0a4f9eb7b45e74e7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public boolean isProtectedNonNull(VariableBinding local)", "signatureAfterChange": "  public boolean isProtectedNonNull(LocalVariableBinding local)", "diff": ["-public boolean isProtectedNonNull(VariableBinding local) {", "+public boolean isProtectedNonNull(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6ce67a068e327d9315a1a981baf1c56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "0ce30fa1efeccdb8f098a9dcf15c46f705a57e6f", "commitAfterChange": "59a26b3b3e45e8769323a82cc5fccc64fe9d5f4a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "signatureAfterChange": " \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, boolean valueRequired)", "diff": ["-\t\t\t\tif (fieldBinding.isBlankFinal() && currentScope.allowBlankFinalFieldAssignment(fieldBinding)) {", "+\t\t\t\tif (fieldBinding.isBlankFinal() && currentScope.needBlankFinalFieldInitializationCheck(fieldBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6cf643bd1d7b7982b8e776ff4b309cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \t\tpublic PerWorkingCopyInfo(ICompilationUnit workingCopy, IProblemRequestor problemRequestor)", "signatureAfterChange": " \t\tpublic PerWorkingCopyInfo(CompilationUnit workingCopy, IProblemRequestor problemRequestor)", "diff": ["-\t\tICompilationUnit workingCopy;", "-\t\tpublic PerWorkingCopyInfo(ICompilationUnit workingCopy, IProblemRequestor problemRequestor) {", "+\t\tCompilationUnit workingCopy;", "+\t\tpublic PerWorkingCopyInfo(CompilationUnit workingCopy, IProblemRequestor problemRequestor) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6d55bcc636b4d9361ea1535ae999b97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": " \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t    if ((originalBinding.type.tagBits & TagBits.HasTypeVariable) != 0 && runtimeTimeType.id != T_Object) {", "+\t\t\t    if ((originalBinding.type.tagBits & TagBits.HasTypeVariable) != 0 && runtimeTimeType.id != T_JavaLangObject) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6dcae32c37c06818e812635200af32a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "f5186f4bb592c82c031d71e3ac997120db3572db", "commitAfterChange": "e5922a5706d1abdae05b12aa57fc816aa6feb6e1", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 21, "signatureBeforeChange": " TypeBinding semiRawifiedFirstUpperBound()", "signatureAfterChange": " TypeBinding semiRawifiedFirstUpperBound()", "diff": ["+ */", "+TypeBinding semiRawifiedFirstUpperBound() {", "+\tif (this.firstBound == null) {", "+\t\treturn this.superclass; // java/lang/Object", "+\t} ", "+\treturn this.firstBound.eliminateTypeVariable(this); ", "+}", "- */", "-TypeBinding semiRawifiedFirstUpperBound() {", "-\tif (this.firstBound == null) {", "-\t\treturn this.superclass; // java/lang/Object", "-\t} ", "-\treturn this.firstBound.clearedOf(this); ", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6f2b916f581ba6c4e28966d7d0917d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 126, "signatureBeforeChange": " public void ifnonnull(Label lbl)", "signatureAfterChange": " public void ifnonnull(BranchLabel lbl)", "diff": ["-public void ifnonnull(Label lbl) {", "+public void ifnonnull(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e70200092cbd3e6c6bf5732583f53149", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/ProjectBinaryOutput.java", "commitBeforeChange": "38b7a9cf48e2b7b43c2a92fc5bd92474a255d139", "commitAfterChange": "119fb61720952839453ade6e48fab76b7b943cab", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public void scrubOutput()", "signatureAfterChange": "\r public void scrubOutput()", "diff": ["-\t\tentries = projectElement.getResolvedClasspath(true);\r", "+\t\tentries = projectElement.getExpandedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e715b5d54cc0d20b49b0136e4d8a4964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 257, "methodNumberAfterChange": 257, "signatureBeforeChange": " public void recoveryTokenCheck()", "signatureAfterChange": " public void recoveryTokenCheck()", "diff": ["-\t\t\tendPosition = this.flushAnnotationsDefinedPriorTo(this.rBraceEnd);", "+\t\t\tendPosition = this.flushCommentsDefinedPriorTo(this.rBraceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e717ad5e119354186415b7c7e28b9de1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "89b15ba6d3aa28748d29d9d1d4b083699e7539bb", "commitAfterChange": "4a19373fcf0b223c67accf2e0e240651b8f7bc94", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void testExcludePartOfAnotherProject1() throws JavaModelException", "signatureAfterChange": " \tpublic void testExcludePartOfAnotherProject1() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_BUILDPATH)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(project2Path, new Problem(\"\", \"Access restriction: The type B is not accessible due to restriction on required project Project1\", d, 23, 35, CategorizedProblem.CAT_RESTRICTION)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7227f20d8c60e26afd627e8aee80985", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "cdc47f3bf53d9fa2640e6f8db622e678a7f2e8e4", "commitAfterChange": "b483fb8c1bb37beba8e250ea09e85a7d2122f601", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\tprotected void writeLine() throws CoreException", "signatureAfterChange": " \t\tprotected void writeLine() throws CoreException", "diff": ["-\t\t\t\t\t\tif (methRef.isSuperInvocation() && showOverridden()) {", "+\t\t\t\t\t\tif (methRef.isSuperInvocation() && showSuperInvocation()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e752d0d6c4a454a657f057592353e379", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void match(MessageSend node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public void match(MessageSend node, MatchingNodeSet nodeSet)", "diff": ["-\tnodeSet.addMatch(node, this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH);", "+\tnodeSet.addMatch(node, this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e765e9041c9aa039408f2158bb1d162c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "340deda4f27a779a81be7327fbe1917547f56a9d", "commitAfterChange": "75ff04c8b5711fae5cad065b3b4b862839b59cd9", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \tprivate int computeRelevanceForExpectingType(char[] packageName, char[] typeName)", "signatureAfterChange": "\r \tprivate int computeRelevanceForExpectingType(char[] packageName, char[] typeName)", "diff": ["-\t\treturn 0;\r", "+\t\treturn R_DEFAULT;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77b8574fe63e435574bf5c7c342890c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting( \t\tBlockScope scope, \t\tTypeBinding expectedTb)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting( \t\tBlockScope scope, \t\tTypeBinding expectedTb)", "diff": ["-\t\tif (!scope.areTypesCompatible(thisTb, expectedTb)) {", "+\t\tif (!Scope.areTypesCompatible(thisTb, expectedTb)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77d81c8d67c023b3ad660cd3dec0b48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void setDefaultSettings()", "signatureAfterChange": "  \tpublic void setDefaultSettings()", "diff": ["-\t\tthis.alignment_for_enum_constants = Alignment.NONE;", "+\t\tthis.alignment_for_enum_constants = Alignment.M_NO_ALIGNMENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e77ed277c291bd2a2135fc4c93c22c9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0774ccc9fbfb251d06c1b6758403976034210f78", "commitAfterChange": "2c05ea4676dfc26a576c4e213abe1328f88694aa", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " private static HashMap workingCopiesThatCanSeeFocus(org.eclipse.jdt.core.ICompilationUnit[] copies, IJavaElement focus, boolean isPolymorphicSearch, SearchParticipant participant)", "signatureAfterChange": " private static HashMap workingCopiesThatCanSeeFocus(org.eclipse.jdt.core.ICompilationUnit[] copies, IJavaElement focus, boolean isPolymorphicSearch, SearchParticipant participant)", "diff": ["-\t\tIPath projectOrJar = IndexSelector.getProjectOrJar(workingCopy).getPath();", "+\t\tIPath projectOrJar = MatchLocator.getProjectOrJar(workingCopy).getPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e789a3e88f0654958c9b851cdd342a2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMMethod.java", "commitBeforeChange": "ab36391231f1ea61e75e0e00b3dc8ffe91eda55e", "commitAfterChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r public void setBody(String body)", "signatureAfterChange": "\r public void setBody(String body)", "diff": ["-\t\tfBody= \";\"+JavaModelManager.LINE_SEPARATOR; //$NON-NLS-1$\r", "+\t\tfBody= \";\"+Util.LINE_SEPARATOR; //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e795c6ed7d0a530d036ac14aa294de53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/MultiOperation.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r private void initializeRenamings()", "signatureAfterChange": "\r private void initializeRenamings()", "diff": ["-\t\tfRenamings = new Hashtable(fRenamingsList.length);\r", "+\t\tfRenamings = new HashMap(fRenamingsList.length);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e79cc107c23fcf22159adac8f921ceb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tprotected void initializeDefaultPluginPreferences()", "signatureAfterChange": " \tprotected void initializeDefaultPluginPreferences()", "diff": ["-\t\tpreferences.setDefault(COMPILER_PB_SUPERFLUOUS_SEMICOLON, IGNORE);", "+\t\tpreferences.setDefault(COMPILER_PB_SUPERFLUOUS_SEMICOLON, WARNING);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a36c03bc1d8745dcb7702e54c5e283", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ca1c70fe619bd146613895fa764af2d040529e30", "commitAfterChange": "0ae44cb94fd5970ee99a6625f01c4e21cfef9943", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": "\r \tpublic void resourceChanged(IResourceChangeEvent event)", "signatureAfterChange": "\r \tpublic void resourceChanged(IResourceChangeEvent event)", "diff": ["-\t\t\t\t\t\tthis.checkProjectsBeingAddedOpenedOrClosed(delta);\r", "+\t\t\t\t\t\tthis.checkProjectsBeingAddedOrRemoved(delta);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7ac76a48b5c157783abde54380e612a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementBuilder.java", "commitBeforeChange": "92a1bed0a525f065b3afa8ca4370b68c7dfc54cc", "commitAfterChange": "b6e5ae943550075226ab72b52ecddee830556320", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void enterClass( \t\tint declarationStart, \t\tint modifiers, \t\tchar[] name, \t\tint nameSourceStart, \t\tint nameSourceEnd, \t\tchar[] superclass, \t\tchar[][] superinterfaces)", "signatureAfterChange": " \tpublic void enterClass( \t\tint declarationStart, \t\tint modifiers, \t\tchar[] name, \t\tint nameSourceStart, \t\tint nameSourceEnd, \t\tchar[] superclass, \t\tchar[][] superinterfaces)", "diff": ["-\t\t\t\trecordLastLineNumber(declarationStart);", "+\t\t\t\trecordLastLineNumber(nameSourceStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7bfa0e69e8fb5ebdfdf110619798a7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelCache.java", "commitBeforeChange": "7f086eeda7986ce1f22727e695f471f4cc9161a1", "commitAfterChange": "7fcda725e57776ddb850f6e0923a37be77d4220a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected Object peekAtInfo(IJavaElement element)", "signatureAfterChange": " protected Object peekAtInfo(IJavaElement element)", "diff": ["-\t\t\treturn this.projectCache.peek(element);", "+\t\t\treturn this.projectCache.get(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7ce00c9550f207e04856944b36842bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void endVisit(AnnotationArgumentExpression expression, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(JavadocArgumentExpression expression, BlockScope scope)", "diff": ["-\tpublic void endVisit(AnnotationArgumentExpression expression, BlockScope scope) {", "+\tpublic void endVisit(JavadocArgumentExpression expression, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7d36bc0d47bb448658408994020edf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "3de46f74e60c4a3809d64f36594b156b755e8151", "commitAfterChange": "a278a6d0aa65f732809dc346bd96a708d28563bd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static long getIrritant(int problemID)", "signatureAfterChange": " \t \tpublic static long getIrritant(int problemID)", "diff": ["-\t\t\tcase IProblem.JavadocInvalidConstructorQualification:", "+\t\t\tcase IProblem.JavadocInvalidMemberTypeQualification:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7e54e96d5cd494836f3adc424419766", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "2638be2ccc1738a8756046b508b2a9be01dab4c9", "commitAfterChange": "2af4d6c5a01ec5b5f71fc5f4417f402b3cbb8976", "methodNumberBeforeChange": 264, "methodNumberAfterChange": 264, "signatureBeforeChange": " public void newNoClassDefFoundError()", "signatureAfterChange": " public void newNoClassDefFoundError()", "diff": ["-\twriteUnsignedShort(constantPool.literalIndexForType(QualifiedNamesConstants.JavaLangNoClassDefFoundErrorConstantPoolName));", "+\twriteUnsignedShort(constantPool.literalIndexForType(ConstantPool.JavaLangNoClassDefFoundErrorConstantPoolName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7efc05048e12fbf4f14dc213b77fba3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "6cab09b385685f9ffe9bf0c73a23862a9da82e76", "commitAfterChange": "2548efb91bb743c25fd3bab3833473b467f314a0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "diff": ["-\t\tif (inheritedMethod.returnType.leafComponentType().isParameterizedType() && currentMethod.returnType.leafComponentType().isRawType()) {", "+\t\tif (inheritedMethod.returnType.leafComponentType().isParameterizedTypeWithActualArguments() ", "+\t\t\t\t&& currentMethod.returnType.leafComponentType().isRawType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7f14d6c5ff04275a7f380af60e82e70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void addBinary(IFile resource, IPath containerPath)", "signatureAfterChange": " public void addBinary(IFile resource, IPath containerPath)", "diff": ["-\tIPath indexLocation = computeIndexLocation(containerPath);", "+\tIndexLocation indexLocation = computeIndexLocation(containerPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e806c169b1c9df68054bae98e2f36a02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsDeprecatedAndNotVisibleRefConstructorErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e81d81f5652241aae517aa4c001cf3d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "6ed6becc4fd53e7d1da742b5c31941d1e72ebac3", "commitAfterChange": "5dcefe623702748a359807058d8605577453405d", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\t\t\t\t\t\tcase ScannerHelper.C_LETTER :", "+\t\t\t\t\t\t\t\tcase ScannerHelper.C_IDENT_PART :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e829f1680cb7740140c6129fb03dd38a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": "\r final public void ifnonnull(Label lbl)", "signatureAfterChange": "\r final public void ifnonnull(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_ifnonnull, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_ifnonnull, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84c4f2c79129ab2e41cf90aa2bdd959", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LabeledStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic LabeledStatement(char[] label, Statement statement, int sourceStart, int sourceEnd)", "signatureAfterChange": " \tpublic LabeledStatement(char[] label, Statement statement, int sourceStart, int sourceEnd)", "diff": ["-\t\tif (statement instanceof EmptyStatement) statement.bits |= IsUsefulEmptyStatementMASK;", "+\t\tif (statement instanceof EmptyStatement) statement.bits |= IsUsefulEmptyStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e84e29715ead0519d0f3fa63434f96d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9156e33be70429042b1d72217c4197f996fdfb3a", "commitAfterChange": "0bbc1f10f38c090526549c38a7d30ff164b71a76", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": " public void goForCompilationUnit()", "signatureAfterChange": " public void goForCompilationUnit()", "diff": ["-\tscanner.taskCount = 0;", "+\tscanner.foundTaskCount = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e85ba2d93a0f36399d6d7be2d01bf8cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic boolean visit(ContinueStatement node)", "signatureAfterChange": " \tpublic boolean visit(ContinueStatement node)", "diff": ["-\t\t\tint offset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNamecontinue, node.getStartPosition());", "+\t\t\tint offset= getScanner().getTokenEndOffset(TerminalTokens.TokenNamecontinue, node.getStartPosition());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8753e70269a5ba742d97862ae624157", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/ClasspathJar.java", "commitBeforeChange": "bd66f33da6dcc33c67153a2129d6fec0fda88ac8", "commitAfterChange": "dc4de554479d1bd7115bbb51a83f104f76dfaa9e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r void buildDirectoryStructure()", "signatureAfterChange": "\r \r void buildDirectoryStructure()", "diff": ["-\tdirectoryCache = new LookupTable(101);\r", "+\tdirectoryCache = new SimpleLookupTable(101);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e89fe0d288d67bc18197733b3fc67e25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "cba4a74f046a7c7d43d81e11b279554f1ab8b4ad", "commitAfterChange": "2a01994b0addf3b51b8cc85382b32cfdc277de6c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void activate()", "signatureAfterChange": "\r protected void activate()", "diff": ["-\tthis.files = new Hashtable(5);\r", "+\tthis.files = new HashMap(5);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8a6bc870e53196451ca4597148f0bba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testContains() throws JavaModelException", "signatureAfterChange": " public void testContains() throws JavaModelException", "diff": ["-\tcf = getClassFile(\"TypeHierarchy\", getExternalJCLPath(), \"java.lang\", \"Object.class\");", "+\tcf = getClassFile(\"TypeHierarchy\", getExternalJCLPathString(), \"java.lang\", \"Object.class\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8a7ad3b3c068741d62d67435a6179dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testCreateResourceIncludedPackage() throws CoreException", "signatureAfterChange": " public void testCreateResourceIncludedPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8abd301d2938e9d1a4e07d0ec84614f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generatePostIncrement( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tCompoundAssignment postIncrement, \t\tboolean valueRequired)", "diff": ["-\t\tSyntheticAccessMethodBinding accessor =", "+\t\tSyntheticMethodBinding accessor ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8ac1f74a6d9aad24a3f3c5cb3e3ff1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SnippetCompletionTests.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "   public void testCodeSnippetAssistForCompilationUnitWithoutSource() throws JavaModelException", "signatureAfterChange": "   public void testCodeSnippetAssistForCompilationUnitWithoutSource() throws JavaModelException", "diff": ["-\tint[] modifiers = {CompilerModifiers.AccDefault, CompilerModifiers.AccFinal};", "+\tint[] modifiers = {CompilerModifiers.AccDefault, IConstants.AccFinal};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b18b58f813a2569f40a6cde3cacb73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPathUtil.java", "commitBeforeChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "commitAfterChange": "bc498b88d907a470b6f3dd533c50f2d8844848a6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic static Map<FactoryContainer, Boolean> decodeFactoryPath(final String xmlFactoryPath)  \t\tthrows CoreException", "signatureAfterChange": " \t \tpublic static Map<FactoryContainer, Boolean> decodeFactoryPath(final String xmlFactoryPath)  \t\tthrows CoreException", "diff": ["-\t\t\t\t\tcontainer = FactoryPath.newPluginFactoryContainer(idString);", "+\t\t\t\t\tcontainer = FactoryPath.getPluginFactoryContainer(idString);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b1ecff7fb09707cadc6953d8111865", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected void setUp()", "signatureAfterChange": " protected void setUp()", "diff": ["-\t\t\tnew String[] {this.getExternalJCLPath(), \"lib\"}, ", "+\t\t\tnew String[] {this.getExternalJCLPathString(), \"lib\"}, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8b756bd9c81512d573984dd073c451c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  public void test059() throws JavaModelException", "signatureAfterChange": "  public void test059() throws JavaModelException", "diff": ["-\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8ba8286dc239932593f2b985a07ab9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  public void test042() throws JavaModelException", "signatureAfterChange": "  public void test042() throws JavaModelException", "diff": ["-\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8c8ceb70f6e86819398173021f6947a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void recordHandlingException( \t\tReferenceBinding exceptionType, \t\tUnconditionalFlowInfo flowInfo, \t\tTypeBinding raisedException, \t\tAstNode invocationSite, \t\tboolean wasAlreadyDefinitelyCaught)", "signatureAfterChange": "  \tpublic void recordHandlingException( \t\tReferenceBinding exceptionType, \t\tUnconditionalFlowInfo flowInfo, \t\tTypeBinding raisedException, \t\tAstNode invocationSite, \t\tboolean wasAlreadyDefinitelyCaught)", "diff": ["-\t\t\tinitsOnExceptions[index] == FlowInfo.DeadEnd", "+\t\t\tinitsOnExceptions[index] == FlowInfo.DEAD_END"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d79defc46b20a75d782faf152b975a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "a82ce37ff874ba0e833f2970ef837c525377a572", "commitAfterChange": "b4f075361126213edb4ab60051081d2143c229e2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public HierarchyResolver(LookupEnvironment lookupEnvironment, IHierarchyRequestor requestor)", "signatureAfterChange": " public HierarchyResolver(LookupEnvironment lookupEnvironment, IHierarchyRequestor requestor)", "diff": ["-\tthis.initialize(lookupEnvironment, requestor);", "+\tthis.setEnvironment(lookupEnvironment, requestor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e0746bab2f1f2a26a37ff7f9df177c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " protected void consumeClassDeclaration()", "signatureAfterChange": " protected void consumeClassDeclaration()", "diff": ["-\t// mark fields and initializer with local type mark if needed", "-\tmarkFieldsWithLocalType(typeDecl);", "+\t// mark initializers with local type mark if needed", "+\tmarkInitializersWithLocalType(typeDecl);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8e7901b3b9dc79c5d1da9ff70f21e23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "diff": ["-\t\t\t\tif ((argument.bits & UnnecessaryCastMASK) == 0 && argument.resolvedType.isBaseType()) {", "+\t\t\t\tif ((argument.bits & UnnecessaryCast) == 0 && argument.resolvedType.isBaseType()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e903e7efafdcc9820f7f33437d1575ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": " \tpublic boolean match(SuperConstructorInvocation node, Object other)", "signatureAfterChange": " \tpublic boolean match(SuperConstructorInvocation node, Object other)", "diff": ["-\t\tif (node.getAST().apiLevel >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e90ce5c184bedc05d7cc1704612f035d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic DoStatement(Expression condition, Statement action, int s, int e)", "signatureAfterChange": "  \tpublic DoStatement(Expression condition, Statement action, int s, int e)", "diff": ["-\t\tif (action instanceof EmptyStatement) action.bits |= IsUsefulEmptyStatementMASK;", "+\t\tif (action instanceof EmptyStatement) action.bits |= IsUsefulEmptyStatement;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e916a91a48b8c5870ca3cc55075fd77d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void testParameterizedTypeMultipleArguments02() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeMultipleArguments02() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedSourceType(unit, \"Generic<? extends Throwable, ? extends Exception, ? extends RuntimeException>.Member\"); //$NON-NLS-1$", "+\t\tParameterizedSourceType type = selectParameterizedType(unit, \"Generic<? extends Throwable, ? extends Exception, ? extends RuntimeException>.Member\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e91bef7503568f5e717974bc4c876fac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tboolean visit(Break breakStatement, BlockScope scope);", "signatureAfterChange": " \tboolean visit(BreakStatement breakStatement, BlockScope scope);", "diff": ["-\tboolean visit(Break breakStatement, BlockScope scope);", "+\tboolean visit(BreakStatement breakStatement, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e91d2478594cb2ce5bedd2c3d4a4315e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "     public static AnnotationValue createDefaultValue(Object domValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t ASTBasedAnnotationElementDeclarationImpl decl,  \t\t\t\t\t\t\t\t\t\t\t\t\t BaseProcessorEnv env)", "signatureAfterChange": "     public static AnnotationValue createDefaultValue(Object domValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t ASTBasedAnnotationElementDeclarationImpl decl,  \t\t\t\t\t\t\t\t\t\t\t\t\t BaseProcessorEnv env)", "diff": ["-        return createAnnotationValue(converted, null, -1, decl, env);", "+        return createAnnotationValueFromDOMValue(converted, null, -1, decl, env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e92d3ac582dde4151dbb698ac64d15bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public String toString(int tab)", "signatureAfterChange": " public String toString(int tab)", "diff": ["-\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {", "+\tif ((typeDeclaration.bits & ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e941b7259abc7a91c390e9a5a9d6de2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "6d7da1254151724e22f25d1be0ba01cba8049f5e", "commitAfterChange": "31f5d8c3352dfd40743cbafcdc19d9f5e7640d54", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(LambdaExpression expression, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(LambdaExpression expression, int bracketBalanceValue)", "diff": ["-\t\treturn this.initializer = new RecoveredLambdaExpression(expression, this, bracketBalanceValue);", "+\t\treturn this.initializerLambda = new RecoveredLambdaExpression(expression, this, bracketBalanceValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e94f8ba3fb5ecc35d481bdc0052745fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "0f7ff9533d878e978259e2a163868468e0cdd80b", "commitAfterChange": "e62380d6874a00b9ef31435c7e18da54c609d8e4", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": "\r protected boolean isAffectedByType(IJavaElementDelta delta, IType type, boolean hasImportChange)", "signatureAfterChange": "\r protected boolean isAffectedByType(IJavaElementDelta delta, IType type, boolean hasImportChange)", "diff": ["-\tfor (int i = 0, length = children.length; i < 0; i++) {\r", "+\tfor (int i = 0, length = children.length; i < length; i++) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95d8a949cd646ecb098bf9f56dcd2b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate boolean connectSuperInterfaces()", "signatureAfterChange": " \tprivate boolean connectSuperInterfaces()", "diff": ["-\t\tif (sourceType.id == T_Object) // already handled the case of redefining java.lang.Object", "+\t\tif (sourceType.id == T_JavaLangObject) // already handled the case of redefining java.lang.Object"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e968ccab941dc4a0549e9eee99bfe4e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "3d59334f5fb40926c8512874251a24cf438a401b", "commitAfterChange": "fa04bcc7aeac1403aeb17877212985395c1541ca", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); ", "+// TODO add again once 49298 is fixed\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); ", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e97df6f7eca66d3f688ea0571d5681a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tsynchronized ITypeBinding resolveType(AnonymousClassDeclaration type)", "signatureAfterChange": " \tsynchronized ITypeBinding resolveType(AnonymousClassDeclaration type)", "diff": ["-\t\tif (node != null && (node.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsAnonymousTypeMASK) != 0) {", "+\t\tif (node != null && (node.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsAnonymousType) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e97e55c69b109b2b4c7af4e0f94b88f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 151, "methodNumberAfterChange": 151, "signatureBeforeChange": "\r final public void iflt(Label lbl)", "signatureAfterChange": "\r final public void iflt(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_iflt, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_iflt, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9883da315b4d3b3343fe4a8cfe1c8aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "06bdd90ec7e06ca246dfe4e05efc41d151db72d4", "commitAfterChange": "2b9df464fe844bb540314d6f9bc7e8d8d047b8ca", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r void compile(CompilationUnit[] units, String[] initialTypeNames, String[] additionalFilenames)", "signatureAfterChange": "\r \r void compile(SourceFile[] units, String[] initialTypeNames, String[] additionalFilenames)", "diff": ["-void compile(CompilationUnit[] units, String[] initialTypeNames, String[] additionalFilenames) {\r", "+void compile(SourceFile[] units, String[] initialTypeNames, String[] additionalFilenames) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9885d97b082b340d13df5c824fdf4a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 89, "signatureBeforeChange": "  \tpublic void reset(SourceTypeBinding typeBinding)", "signatureAfterChange": "  \tpublic void reset(SourceTypeBinding typeBinding)", "diff": ["-\t\t\tif (this.targetJDK >= ClassFileConstants.JDK1_7) {", "+\t\t\tif (this.targetJDK >= ClassFileConstants.JDK1_8) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e99abae855d98300b5b366e8b0f3abe7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "diff": ["-\t\tif (!methodDeclaration.isNative() && !methodDeclaration.isAbstract() && ((methodDeclaration.modifiers & CompilerModifiers.AccSemicolonBody) == 0)) {", "+\t\tif (!methodDeclaration.isNative() && !methodDeclaration.isAbstract() && ((methodDeclaration.modifiers & ExtraCompilerModifiers.AccSemicolonBody) == 0)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9aa41672749ba368d7c23b53eef5f4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected void consumePackageDeclarationName()", "signatureAfterChange": " protected void consumePackageDeclarationName()", "diff": ["-\t// flush annotations defined prior to import statements", "-\treference.declarationSourceEnd = this.flushAnnotationsDefinedPriorTo(reference.declarationSourceEnd);", "+\t// flush comments defined prior to import statements", "+\treference.declarationSourceEnd = this.flushCommentsDefinedPriorTo(reference.declarationSourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9ac35bfbe80c99f2222fdcf5c6ab02b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/TypeNameRequestorWrapper.java", "commitBeforeChange": "7074c59308dc8c330e55b938db8ab604500cf9cc", "commitAfterChange": "969ab36cc555c2b725d4ca76526de3c9dab44ded", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic TypeNameRequestorWrapper(ITypeNameRequestor requestor)", "signatureAfterChange": " \tpublic TypeNameRequestorWrapper(TypeNameRequestor requestor)", "diff": ["-\tITypeNameRequestor requestor;", "-\tpublic TypeNameRequestorWrapper(ITypeNameRequestor requestor) {", "+\tTypeNameRequestor requestor;", "+\tpublic TypeNameRequestorWrapper(TypeNameRequestor requestor) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9c7e16b9b66e599d6a0af0ab7a24c90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ComplianceDiagnoseTest.java", "commitBeforeChange": "f6c27df97060445dcca2a16a4b6a6d001c027f6d", "commitAfterChange": "4e141be8003d1ef09b5a958dd38e851de76be5f5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void runComplianceParserTest( \t\tString[] testFiles, \t\tString expected13ProblemLog, \t\tString expected14ProblemLog, \t\tString expected15ProblemLog, \t\tString expected16ProblemLog, \t\tString expected17ProblemLog)", "signatureAfterChange": " public void runComplianceParserTest( \t\tString[] testFiles, \t\tString expected13ProblemLog, \t\tString expected14ProblemLog, \t\tString expected15ProblemLog, \t\tString expected16ProblemLog, \t\tString expected17ProblemLog)", "diff": ["-\t\t} else if(this.complianceLevel < ClassFileConstants.JDK1_7) {", "+\t\t} else if(this.complianceLevel < ClassFileConstants.JDK1_8) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9c91c40c9c72023533943a18f0285c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "a0c7c7ae93b0a77ffb3fb6a58e4bf02df3a8c4e8", "commitAfterChange": "578c21c1e18bf1107cbfd2c0d5f2f8d0a328f266", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public synchronized List<AnnotationProcessorFactory> getFactoriesForProject( IJavaProject jproj )", "signatureAfterChange": "          public synchronized List<AnnotationProcessorFactory> getFactoriesForProject( IJavaProject jproj )", "diff": ["-\t\tList<FactoryContainer> containers = AptConfig.getContainers(jproj);", "+\t\tList<FactoryContainer> containers = AptConfig.getEnabledContainers(jproj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9de634a86bea501f34e2791ff219c36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "df2d97ab192bc2c00354e91cbadb9cce04e6994c", "commitAfterChange": "9e5742b61aded25431e479f58d12ba05749a0cfe", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 384, "signatureBeforeChange": " public void parse(MethodDeclaration md, CompilationUnitDeclaration unit)", "signatureAfterChange": " public void parse(MethodDeclaration md, CompilationUnitDeclaration unit)", "diff": ["-\tif(this.options.performStatementsRecovery) {", "+\tif(this.options.performMethodsFullRecovery) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9e14a83d3a05a8a238cae5ff7f9f82a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "commitAfterChange": "3af20c8fa9116cf8e52dcf498c1b4eea06f21754", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void resolve(MethodScope initializationScope)", "signatureAfterChange": " \t \tpublic void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\t\t\t\t\t    initializationScope.problemReporter().unsafeRawConversion(this.initialization, initializationType, fieldType);", "+\t\t\t\t\t\t\t\t    initializationScope.problemReporter().unsafeTypeConversion(this.initialization, initializationType, fieldType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9e537b4599a7cc15a8068e0563dcf99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "f27100c9a03d1ad4af3d49219ed6a35545e3cfed", "commitAfterChange": "da348589e3fa3fe0a889394dbec5343c317d63e7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprotected void resetDefaults()", "signatureAfterChange": "  \tprotected void resetDefaults()", "diff": ["-\t\tthis.taskPriorites = null;", "+\t\tthis.taskPriorities = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9edb50d4f244c8b46d1ccef60424d69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/ASTBasedDeclarationImpl.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "signatureAfterChange": " \t \tpublic <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "diff": ["-\t\tfinal IResolvedAnnotation[] instances = getAnnotationInstancesFromAST();", "+\t\tfinal IAnnotationBinding[] instances = getAnnotationInstancesFromAST();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9ef18ad5c4794d42bd1db70f35138c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate LocalTypeBinding buildLocalType( \t\tSourceTypeBinding enclosingType, \t\tPackageBinding packageBinding)", "signatureAfterChange": " \t \tprivate LocalTypeBinding buildLocalType( \t\tSourceTypeBinding enclosingType, \t\tPackageBinding packageBinding)", "diff": ["-\t\t\t\tif (memberContext.getKind() == IGenericType.INTERFACE) {", "+\t\t\t\tif (memberContext.kind() == IGenericType.INTERFACE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea013b55f1b163394df8cce3536a8590", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate synchronized void addBuiltFileToMaps(IFile parentFile, IFile generatedFile)", "signatureAfterChange": " \tprivate synchronized void addBuiltFileToMaps(IFile parentFile, IFile generatedFile)", "diff": ["-\t\tboolean added = _parentToGenFiles.put(parentFile, generatedFile);", "+\t\tboolean added = _buildDeps.put(parentFile, generatedFile);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea08d97ec316e38b60346ba7b79fbd93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic boolean visit(SuperReference superReference, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(SuperReference superReference, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNamesuper);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNamesuper);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea14f6c78b850391a214325603a4a1cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "8725686e4322c27855e28a436fd50d8fdf140d60", "commitAfterChange": "4a181894176f3a1eccc3e35147ddca845e353389", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tprivate void initializeRoots(IJavaModel model)", "signatureAfterChange": " \t \tprivate void initializeRoots(IJavaModel model)", "diff": ["-\t\t\t\t\tthis.exclusionPatterns.put(path, ((ClasspathEntry)entry).fulExclusionPatternChars());", "+\t\t\t\t\tthis.exclusionPatterns.put(path, ((ClasspathEntry)entry).fullExclusionPatternChars());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea152b4ef980aa89cce757607423f529", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void _testBug75551() throws JavaModelException", "signatureAfterChange": " public void _testBug75551() throws JavaModelException", "diff": ["-\t\t\"SuperClass.InnerClass[TYPE_REF]{SuperClass.InnerClass, javadoc.bugs, Ljavadoc.bugs.SuperClass$InnerClass;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\"SuperClass.InnerClass[TYPE_REF]{SuperClass.InnerClass, javadoc.bugs, Ljavadoc.bugs.SuperClass$InnerClass;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea1e48f523338f26ad389e74eace0379", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "c9d6ebaa0d13be6fc2e748dee3cae777e5c9d89a", "commitAfterChange": "0011958a7781b8e34a2680d48e8c358ce935fb15", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected void consumeEmptyClassBodyDeclarationsopt()", "signatureAfterChange": "\r protected void consumeEmptyClassBodyDeclarationsopt()", "diff": ["-\tthis.inInitializerPtr--;\r", "+\tthis.inFieldInitializationPtr--;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea34e4b5ad43e17ee75e743dceab8297", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "7e18093f96f886108ba5255dbd2b7bab5ddede1f", "commitAfterChange": "d30dbb794652dfdc79b4e6f6008521f67f863db6", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void setJavaConventionsSettings()", "signatureAfterChange": "  \tpublic void setJavaConventionsSettings()", "diff": ["-\t\tthis.tab_char = SPACE;", "+\t\tthis.tab_char = MIXED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea6447f4d641fc86c9bf80fa7834ae3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic FileGenerationResult generateFileDuringReconcile(ICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents) throws CoreException", "signatureAfterChange": " \tpublic FileGenerationResult generateFileDuringReconcile(ICompilationUnit parentCompilationUnit, String typeName, \t\t\tString contents) throws CoreException", "diff": ["-\t\tICompilationUnit workingCopy = getWorkingCopyForGeneratedFile(parentFile, typeName, _CUHELPER);", "+\t\tICompilationUnit workingCopy = getWorkingCopyForReconcile(parentFile, typeName, _CUHELPER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea993e355aa9f30e11286c7f8460e6ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " \tpublic void testMissingTagsErrorProtectedOverriding()", "signatureAfterChange": " \tpublic void testMissingTagsErrorProtectedOverriding()", "diff": ["-\t\trunNegativeTest(MissingTags, resultForMissingTags(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(MISSING_TAGS, resultForMissingTags(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eaaea3b52249d5d3bbccc42e61ad5ef0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  public void recordReturnFrom(FlowInfo flowInfo)", "signatureAfterChange": "  public void recordReturnFrom(UnconditionalFlowInfo flowInfo)", "diff": ["-public void recordReturnFrom(FlowInfo flowInfo) {", "+public void recordReturnFrom(UnconditionalFlowInfo flowInfo) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eabeb3503ebc754fc7ec97b23dc09b5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 213, "signatureBeforeChange": "  \tpublic void test192()", "signatureAfterChange": "  \tpublic void test192()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eadebda329dc6b30a34e0b2807ff5493", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "7bf89e29c34a348a2ed388f7cdb6c1016941cf61", "commitAfterChange": "cd5adcef3921beea7df4f6703ab58225bdb4ec39", "methodNumberBeforeChange": 137, "methodNumberAfterChange": 136, "signatureBeforeChange": "  \tprotected void setModifiers(AnnotationTypeDeclaration typeDecl, org.eclipse.jdt.internal.compiler.ast.AnnotationTypeDeclaration typeDeclaration)", "signatureAfterChange": "  \tprotected void setModifiers(AnnotationTypeDeclaration typeDecl, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "diff": ["-\tprotected void setModifiers(AnnotationTypeDeclaration typeDecl, org.eclipse.jdt.internal.compiler.ast.AnnotationTypeDeclaration typeDeclaration) {", "+\tprotected void setModifiers(AnnotationTypeDeclaration typeDecl, org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb06369f9e87c3ed72253fa7e39104c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "14cad0d7bddaa086f861878a7a7743e39b668065", "commitAfterChange": "4de0f743b4a496e91904e5bc8b1a21757a23c5f6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void addLibraryEntry(IJavaProject project, IPath path, IPath srcAttachmentPath, IPath srcAttachmentPathRoot, boolean exported) throws JavaModelException", "signatureAfterChange": " void addLibraryEntry(IJavaProject project, IPath path, IPath srcAttachmentPath, IPath srcAttachmentPathRoot, boolean exported) throws JavaModelException", "diff": ["-\tentries[0] = JavaCore.newLibraryEntry(path, srcAttachmentPath, srcAttachmentPathRoot, true);", "+\tentries[0] = JavaCore.newLibraryEntry(path, srcAttachmentPath, srcAttachmentPathRoot, exported);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb0b1d522b50d10cff70601c43a0b77b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "ac6a9f56760bba7aec9ca8548c00a789a95fdc11", "commitAfterChange": "f238d59edecc5d87c39084d60c9040567d09deaf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public void add(IFile resource, IResource indexedContainer)", "signatureAfterChange": "\r public void add(IFile resource, IPath indexedContainer)", "diff": ["-public void add(IFile resource, IResource indexedContainer){\r", "+public void add(IFile resource, IPath indexedContainer){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb4acd84337c94d9c4b31ba126e4f7c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \t\tpublic boolean match(SwitchStatement node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(QualifiedType node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(QualifiedType node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb4cd9641fda0630b4f8a047feac29bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "7e30c3260a7d410b2fb32776f9f17c6543232dff", "commitAfterChange": "bf51a4aa47223fadb7f3b17b32863e3b3b80475e", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tsynchronized IPackageBinding resolvePackage(PackageDeclaration pkg)", "signatureAfterChange": " \tsynchronized IPackageBinding resolvePackage(PackageDeclaration pkg)", "diff": ["-\t\t\t\tBinding binding = this.scope.getTypeOrPackage(CharOperation.subarray(importReference.tokens, 0, importReference.tokens.length));", "+\t\t\t\tBinding binding = this.scope.getOnlyPackage(CharOperation.subarray(importReference.tokens, 0, importReference.tokens.length));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb5cf1d776d8ea2676451863819fa89f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "526f595144dc3e8be2bacbfcf836a6dd30a39f84", "commitAfterChange": "f4fac2a7e69cf336c94105a7eeaf8b6bd2b7e9f2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUncommentedEmptyBlock,", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUndocumentedEmptyBlock,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb93fc34283617d3b331940bb13f080b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/HandleFactory.java", "commitBeforeChange": "87058c7b8de4589df280101b3da29cf4946e087b", "commitAfterChange": "54978bea547a77e401fedd9bbb6f5ac5bee26141", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString)", "signatureAfterChange": "\r \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString)", "diff": ["-\t\t\t\t\tIClasspathEntry[] classpathEntries= ((JavaProject)javaProject).getExpandedClasspath(true);\r", "+\t\t\t\t\tIClasspathEntry[] classpathEntries= ((JavaProject)javaProject).getResolvedClasspath(true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb94dfb60ae49b156e3c4b744188daed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFlattener.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(SingleVariableDeclaration node)", "diff": ["-\t\tvisitExtraDimensions(node, INTERNAL_VARIABLE_EXTRA_DIMENSIONS_PROPERTY, SingleVariableDeclaration.EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\tvisitExtraDimensions(node, INTERNAL_VARIABLE_EXTRA_DIMENSIONS_PROPERTY, SingleVariableDeclaration.EXTRA_DIMENSIONS2_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb97187aff8bf881abf1d13fbff4b2ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tIBinding getBinding(org.eclipse.jdt.internal.compiler.lookup.Binding binding)", "signatureAfterChange": " \t \tIBinding getBinding(org.eclipse.jdt.internal.compiler.lookup.Binding binding)", "diff": ["-\t\tswitch (binding.bindingType()) {", "+\t\tswitch (binding.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb9d089febc0e8640d4c848abf5c415f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void testInvalidTagsFieldErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsFieldErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesFieldJavadocComments, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(FIELDS_INVALID_COMMENT, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb24fd1500011fc28938616c7bf49ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner)", "signatureAfterChange": " public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner)", "diff": ["-public IJavaElement getHandleFromMemento(String token, StringTokenizer memento, WorkingCopyOwner workingCopyOwner) {", "+public IJavaElement getHandleFromMemento(String token, MementoTokenizer memento, WorkingCopyOwner workingCopyOwner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebc29935331f1a88e3f3802befa4e484", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "6f559832866ec7957220224e260ced70fbcf727a", "commitAfterChange": "f3a6f459efd2ac1aed8a2fbc164dee41b4c19dd6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, Expression right, int rightTypeId)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, int operator, int operatorSignature, Expression left, int leftTypeId, Expression right, int rightTypeId)", "diff": ["-\t\t\tint alternateOperatorSignature = OperatorExpression.ResolveTypeTables[operator][(alternateLeftTypeId << 4) + alternateRightTypeId];", "+\t\t\tint alternateOperatorSignature = OperatorExpression.OperatorSignatures[operator][(alternateLeftTypeId << 4) + alternateRightTypeId];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebd9d914bf35f02e3caebeb2edd429bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\tthis.optimizedBooleanConstant = Constant.fromValue(!cst.booleanValue());", "+\t\t\t\t\tthis.optimizedBooleanConstant = BooleanConstant.fromValue(!cst.booleanValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe5a5f37a52dace0be976dd0efc48b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CorrectionEngine.java", "commitBeforeChange": "b9de5f3466a9b4d6687de837720c445097067b16", "commitAfterChange": "39416e9e4305b172d90b88aed3085d98ded0a86c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r \tprivate void correct(char[] argument) throws JavaModelException", "signatureAfterChange": "\r \r \tprivate void correct(char[] argument) throws JavaModelException", "diff": ["-\t\t\t\tif (token == TerminalSymbols.TokenNameEOF) return;\r", "+\t\t\t\tif (token == ITerminalSymbols.TokenNameEOF) return;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebf9e39f44facd8ed5ffe6a57a23a5f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic UnconditionalFlowInfo initsOnException(ReferenceBinding exceptionType)", "signatureAfterChange": "  \tpublic UnconditionalFlowInfo initsOnException(ReferenceBinding exceptionType)", "diff": ["-\t\t\treturn FlowInfo.DeadEnd;", "+\t\t\treturn FlowInfo.DEAD_END;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec004afb28633426d2e81988e0a37fae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "4c63cc3384193b40f8ecd10e816b8df4cb59320a", "commitAfterChange": "0307cad3f1b01ed5d7ce67bc78cd9b706e4819f3", "methodNumberBeforeChange": 315, "methodNumberAfterChange": 315, "signatureBeforeChange": "\t \t \tpublic void testVariableDeclarationStatement()", "signatureAfterChange": "\t \t \tpublic void testVariableDeclarationStatement()", "diff": ["-\t\t\tgenericPropertyListTest(x, x.modifiers(), new Property(\"Modifiers\", true, ExtendedModifier.class) { //$NON-NLS-1$", "+\t\t\tgenericPropertyListTest(x, x.modifiers(), new Property(\"Modifiers\", true, IExtendedModifier.class) { //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec1483a303fbe1bdfa081832fd74656d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " protected void consumeCaseLabel()", "signatureAfterChange": " protected void consumeCaseLabel()", "diff": ["-\tpushOnAstStack(new Case(intStack[intPtr--], expressionStack[expressionPtr--]));", "+\tpushOnAstStack(new CaseStatement(intStack[intPtr--], expressionStack[expressionPtr--]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec1580cb0ef80630bc9d2ba4e6ab6a08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FalseLiteral.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void computeConstant()", "signatureAfterChange": " public void computeConstant()", "diff": ["-\tconstant = Constant.fromValue(false);", "+\tconstant = BooleanConstant.fromValue(false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec1be7d89283cf10705b6f8d8a15a4b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " \tpublic void endVisit(ThrowStatement node)", "signatureAfterChange": " \tpublic void endVisit(Modifier node)", "diff": ["+\t */", "+\tpublic void endVisit(Modifier node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec2b97d53d252ec2fd02aea35ea259ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic boolean visit(ConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(ConstructorInvocation node)", "diff": ["-\t\tif (node.getAST().apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec57f25db0a9f9cd9b3a0b8fa2513295", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "12a6e010258a7666733d016b9126871e7f4b37bb", "commitAfterChange": "8ef864f8873be268d528445b434a1e85f80274c5", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprotected void forceClasspathReload(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprotected void forceClasspathReload(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tIPath outputLocation = SetClasspathOperation.REUSE_PATH; ", "+\t\t\tIPath outputLocation = SetClasspathOperation.DO_NOT_SET_OUTPUT; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5ad892fcc23802b5a126dae1ec60fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "df2dcc31ca88109b9d0121d1e80cee42c4897353", "commitAfterChange": "b318f678af5f39c3637baecb6a04ac0779d95356", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic AptConfigurationBlock(IStatusChangeListener context, IProject project, IWorkbenchPreferenceContainer container)", "signatureAfterChange": "  \tpublic AptConfigurationBlock(IStatusChangeListener context, IProject project, IWorkbenchPreferenceContainer container)", "diff": ["-\t\tfProcessorOptionsField.setViewerSorter(new ProcessorOptionSorter());", "+\t\tfProcessorOptionsField.setViewerComparator(new ProcessorOptionSorter());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec61bf594ad09636cf032d5a53d7fd0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "1ffd93ec138fc38a22c082921b3ee25a9e75ba37", "commitAfterChange": "cef21f9db5e181946eac0a0d175b10763094848c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static CompilationUnit convertCompilationUnit( \t\tint level, \t\torg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnitDeclaration, \t\tchar[] source, \t\tMap options, \t\tboolean isResolved, \t\torg.eclipse.jdt.internal.core.CompilationUnit workingCopy, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit convertCompilationUnit( \t\tint level, \t\torg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnitDeclaration, \t\tchar[] source, \t\tMap options, \t\tboolean isResolved, \t\torg.eclipse.jdt.internal.core.CompilationUnit workingCopy, \t\tIProgressMonitor monitor)", "diff": ["-\t\tunit.setJavaElement(workingCopy);", "+\t\tunit.setTypeRoot(workingCopy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec6486d18ba3cda8c6039657922765d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/ReadAnnotationTests.java", "commitBeforeChange": "0eec3068922fbe351501ec0f647de133db6041a4", "commitAfterChange": "c80b21caa7335f2dacd02879f687b71c92d3e1aa", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void test1() throws Exception", "signatureAfterChange": " \tpublic void test1() throws Exception", "diff": ["-\t\t\t\t\t\t\t\t\t new Path(\"/src/org/eclipse/jdt/apt/tests/annotations/readannotation/lib/question.jar\"));", "+\t\t\t\t\t\t\t\t\t new Path(\"/src/org/eclipse/jdt/apt/tests/annotations/readannotation/lib/question.jar\")); //$NON-NLS-1$", "-\t\tassertEquals(\"\", ReadAnnotationProcessor.ERROR);", "+\t\tassertEquals(EMPTY_STRING, ReadAnnotationProcessor.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec6c251dc274832783031670073099c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexQueryRequestor.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic abstract boolean acceptIndexMatch(String documentPath, SearchPattern indexRecord, SearchParticipant participant, AccessRestriction access);", "signatureAfterChange": " \tpublic abstract boolean acceptIndexMatch(String documentPath, SearchPattern indexRecord, SearchParticipant participant, AccessRuleSet access);", "diff": ["-\tpublic abstract boolean acceptIndexMatch(String documentPath, SearchPattern indexRecord, SearchParticipant participant, AccessRestriction access);", "+\tpublic abstract boolean acceptIndexMatch(String documentPath, SearchPattern indexRecord, SearchParticipant participant, AccessRuleSet access);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec7f10a038834abd1cc23331b133a166", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "3b00f00042b27fd2a4ea77920c950f21cd57dba8", "commitAfterChange": "c882891f40255f6a6a0a9f6cb659980aaea0f687", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.EnumDeclaration enumDeclaration2, EnumDeclaration enumDeclaration)", "signatureAfterChange": " \t \tprotected void buildBodyDeclarations(org.eclipse.jdt.internal.compiler.ast.EnumDeclaration enumDeclaration2, EnumDeclaration enumDeclaration)", "diff": ["-\t\t\t\t\tenumDeclaration.bodyDeclarations().add(convert(nextEnumConstant));", "+\t\t\t\t\tenumDeclaration.enumConstants().add(convert(nextEnumConstant));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec8212c97ac8be6d063e41f4e5bb229f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "7ae354e6ac18bf8a8ac35886608abf13bc4e11ea", "commitAfterChange": "53deeb1f8956ced87ebbbe7314813eefbd7a8825", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tString returnSignature, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tString[] parameterSignatures, \tIMethod method, \tint matchRule)", "signatureAfterChange": " public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tString returnSignature, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tString[] parameterSignatures, \tIMethod method, \tint matchRule)", "diff": ["-\tif (method.isResolved() && (new BindingKey(key = method.getKey())).isParameterizedType()) {", "+\tif (method.isResolved() && (new BindingKey(key = method.getKey())).isParameterizedMethod()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec843a95e792c25cac34ab1f32c64cfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ExecutableElementImpl.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t@Override \tpublic boolean hides(Element hidden)", "signatureAfterChange": "  \t@Override \tpublic boolean hides(Element hidden)", "diff": ["-\t\tif (!_env.getLookupEnvironment().methodVerifier().doesMethodOverride(hiderBinding, hiddenBinding)) {", "+\t\tif (!_env.getLookupEnvironment().methodVerifier().isMethodSubsignature(hiderBinding, hiddenBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec8ebe7f0709c42740b2016abb978004", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testRenameResourceExcludedPackage() throws CoreException", "signatureAfterChange": " public void testRenameResourceExcludedPackage() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec9cb581c9b0c0778c7560525e2849e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMMember.java", "commitBeforeChange": "6667f48fb414bf631c6788d57b69b16addac46f0", "commitAfterChange": "c62484c76d34e1754fa4fc8cfcdf45889f18f642", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected char[] generateFlags()", "signatureAfterChange": " protected char[] generateFlags()", "diff": ["-\t\treturn CharArrayOps.concat(flags, new char[] {' '});", "+\t\treturn CharOperation.concat(flags, new char[] {' '});"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd85f528a486c614d4bf5a2a79d3a5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public void test044() throws JavaModelException", "signatureAfterChange": "  public void test044() throws JavaModelException", "diff": ["-\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"String[TYPE_REF]{String, java.lang, Ljava.lang.String;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecd8772f415cfe7e1e9051f45d2cefd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 324, "methodNumberAfterChange": 332, "signatureBeforeChange": " public void testBug110060_FieldPattern05new() throws CoreException", "signatureAfterChange": " public void testBug110060_FieldPattern05new() throws CoreException", "diff": ["-\tsearch(\"oF\", FIELD, ALL_OCCURRENCES, SearchPattern.R_CAMEL_CASE_MATCH);", "+\tsearch(\"oF\", FIELD, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecddf6279f632be55ad41ee9f29e4144", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "e8cacd88901a2db4847583e02d8ea7b228c3c39f", "commitAfterChange": "5e4ea8ac03b51c08067ab35c8af60e3999ca1301", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public AccessRestriction getAccessRestriction(String path)", "signatureAfterChange": " public AccessRestriction getAccessRestriction(String path)", "diff": ["-\t\treturn UNINIT_RESTRICTION;", "+\t\treturn NOT_INITIALIZED_RESTRICTION;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecdedbe434d92c50a582e6d89e9ef440", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \t\tpublic boolean match(ParenthesizedExpression node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(MethodRef node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(MethodRef node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece37d37ef38fcae6b55abc7c7575ff2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testDeltaCommitPrimaryWorkingCopy2() throws CoreException", "signatureAfterChange": " \tpublic void testDeltaCommitPrimaryWorkingCopy2() throws CoreException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ece70ecfaa2ae4693ae3c1c92682d034", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "490cc39003ba5daaddf4fdf25c1c4ad52d071fa8", "commitAfterChange": "63cc2b02a5dc2c73f3b525966213744b7c2edcf0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\tif (!upperScope.areTypesCompatible(testType, IntBinding)) {", "+\t\t\tif (!Scope.areTypesCompatible(testType, IntBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ecedd2557a31858c7f300871ccd0c291", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForClass.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(javadocTestClass());", "+\t\treturn buildAllCompliancesTestSuite(javadocTestClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eceffd60428d9a9d356ceb58ecb172fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\tif ((this.bits & UndocumentedEmptyBlockMASK) != 0) {", "+\t\t\t\tif ((this.bits & UndocumentedEmptyBlock) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0e2954732e098c18d9896cec4ce6a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "36fb90550dd82b50b969bbbbd80f2aeb1af1f9a9", "commitAfterChange": "4ae64410da67a1fce42b5a75030952f43ef17358", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 88, "signatureBeforeChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "signatureAfterChange": " protected IBuffer openBuffer(IProgressMonitor pm, Object info) throws JavaModelException", "diff": ["-\t\t\tICompilationUnit original = new CompilationUnit((IPackageFragment)getParent(), getElementName(), DefaultWorkingCopyOwner.PRIMARY);", "+\t\t\tICompilationUnit original = new CompilationUnit((PackageFragment)getParent(), getElementName(), DefaultWorkingCopyOwner.PRIMARY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed0f0f2ddb7edbbfa4fb605913751e04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\t\r \r \tpublic TypeDeclaration convert(MemberTypeDeclaration typeDeclaration)", "signatureAfterChange": "\t\r \r \tpublic TypeDeclaration convert(MemberTypeDeclaration typeDeclaration)", "diff": ["-\t\ttypeDecl.setSourceRange(typeDeclaration.declarationSourceStart, typeDeclaration.declarationSourceEnd - typeDeclaration.declarationSourceStart + 1);\r", "+\t\ttypeDecl.setSourceRange(typeDeclaration.declarationSourceStart, typeDeclaration.bodyEnd - typeDeclaration.declarationSourceStart + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2307578ba75340b33c1539851603b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "signatureAfterChange": "\r \r ReferenceBinding askForType(PackageBinding packageBinding, char[] name)", "diff": ["-\t\ttypeRequestor.accept(answer.getSourceTypes(), packageBinding);\r", "+\t\ttypeRequestor.accept(answer.getSourceType(), packageBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2704a74b665163b8148fc53ba19a52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "3f4150ac4efa9b8d64500efc25a550943b6c1ff6", "commitAfterChange": "594c810303054b1507a2ba499a90a46a5b4e39b0", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic boolean visit(NormalAnnotation node)", "signatureAfterChange": " \tpublic boolean visit(Modifier node)", "diff": ["+\tpublic boolean visit(Modifier node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2768acc86b2edae2f84e7f5496475d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic Label continueLabel()", "signatureAfterChange": " \t \tpublic BranchLabel continueLabel()", "diff": ["-\tpublic Label continueLabel() {", "+\tpublic BranchLabel continueLabel() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed42dd294f9960e544870191b8db06b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "7f0c1689dc377b26f3ac2b4c2b21446a43dd3383", "commitAfterChange": "f7a77c5e8210599982f60934db59bb901b30cb8c", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate void cleanupNoLongerGeneratedFiles( \t\t\tICompilationParticipantResult parent, \t\t\tSet<IFile> lastGeneratedFiles,  \t\t\tSet<IFile> newGeneratedFiles, \t\t\tGeneratedFileManager gfm,\t\t \t\t\tProcessorEnvImpl processorEnv, \t\t\tCollection<IFile> deleted)", "signatureAfterChange": " \tprivate void cleanupNoLongerGeneratedFiles( \t\t\tBuildContext parent, \t\t\tSet<IFile> lastGeneratedFiles,  \t\t\tSet<IFile> newGeneratedFiles, \t\t\tGeneratedFileManager gfm,\t\t \t\t\tProcessorEnvImpl processorEnv, \t\t\tCollection<IFile> deleted)", "diff": ["-\t\t\tICompilationParticipantResult parent,", "+\t\t\tBuildContext parent,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed45394e6b35cff7c48c55e0106e89d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "09e6a0d689d92bccdede36cccd43932276d7e4d3", "commitAfterChange": "0848b8a6a9afff16623dfc6b0821adb833326b41", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public void illFormedParameterizationOfFunctionalInterface(ASTNode target)", "signatureAfterChange": " public void illFormedParameterizationOfFunctionalInterface(FunctionalExpression target)", "diff": ["-public void illFormedParameterizationOfFunctionalInterface(ASTNode target) {", "+public void illFormedParameterizationOfFunctionalInterface(FunctionalExpression target) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed5469336ca3e2468d88e450c89037e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t\tpublic boolean match(MethodInvocation node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(LineComment node, Object other)", "diff": ["+\t\t */", "+\t\tpublic boolean match(LineComment node, Object other) {", "+\t\t\tcheckPositions(node, other);", "+\t\t\treturn super.match(node, other);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed5c7d0c6bbe70e4ae920788be1e7ce5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/RuntimeTests.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public static Test suite()", "signatureAfterChange": "  public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed5fde6aed990b6da61998fb684f52e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 131, "methodNumberAfterChange": 131, "signatureBeforeChange": " \tpublic void testInitializer()", "signatureAfterChange": " \tpublic void testInitializer()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed69a7990138f94e0890809c53b8e535", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\tFlowInfo.UNREACHABLE) != 0) {", "+\t\t\t\tFlowInfo.UNREACHABLE_OR_DEAD) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed6ea68ec83859acd15b9839f38172fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "98a24097737828240f1d21a0b23b90c66df1d2e5", "commitAfterChange": "515941cbbde92f8090f4b974fb001627443d0027", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tExplicitConstructorCall explicitConstructor, \t\tBlockScope scope)", "diff": ["-// TODO add again once 49298 is fixed\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); ", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed861a126fe664295b82d077bc6ba730", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTypeDeclTest.java", "commitBeforeChange": "5066a165665c172193991ef548a06f9b6acd680e", "commitAfterChange": "c808b96946babe7971ac678c8d580ce253c8257a", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void testBug419057b() throws Exception", "signatureAfterChange": " \tpublic void testBug419057b() throws Exception", "diff": ["-\t\tCompilationUnit astRoot= createAST(AST.JLS4, cu, true, false);", "+\t\tCompilationUnit astRoot= createAST(AST.JLS8, cu, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed8a323470844a6b1930bb7ff78b46dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Map<AnnotationTypeElementDeclaration, AnnotationValue> getElementValues()", "signatureAfterChange": "      public Map<AnnotationTypeElementDeclaration, AnnotationValue> getElementValues()", "diff": ["-             IMethodBinding elementMethod = pair.getMemberBinding();            ", "+             IMethodBinding elementMethod = pair.getMethodBinding();            "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed9355583b07a28e34d947a726a49c07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tvoid endVisit(AnnotationReturnStatement statement, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(JavadocReturnStatement statement, BlockScope scope);", "diff": ["-\tvoid endVisit(AnnotationQualifiedTypeReference typeRef, BlockScope scope);", "-\tvoid endVisit(AnnotationReturnStatement statement, BlockScope scope);", "+\tvoid endVisit(JavadocQualifiedTypeReference typeRef, BlockScope scope);", "+\tvoid endVisit(JavadocReturnStatement statement, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eda4b01bd32da70d26a1dedb7948ed37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " protected void consumeInterfaceHeaderName()", "signatureAfterChange": " protected void consumeInterfaceHeaderName()", "diff": ["-\t\tmarkCurrentMethodWithLocalType();", "+\t\tmarkEnclosingMemberWithLocalType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edce2f4ac58e93ed3c75229b473a8eff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "ed928ec2813761092753aa6a4742b90cbcc4f27d", "commitAfterChange": "e06a7df4ed09416d5b89c022acf08bb2cb167af8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate ArrayList determineTypesInRegion(IProgressMonitor monitor)", "signatureAfterChange": " \tprivate ArrayList determineTypesInRegion(IProgressMonitor monitor)", "diff": ["-\t\t\t\t((RegionBasedTypeHierarchy) this.hierarchy).fRegion.getElements();", "+\t\t\t\t((RegionBasedTypeHierarchy) this.hierarchy).region.getElements();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edd7d5ef6fdb7d64d17b6b6eee689cec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tpublic boolean visit(VariableDeclarationFragment node)", "signatureAfterChange": " \tpublic boolean visit(VariableDeclarationFragment node)", "diff": ["-\t\t\tList dimensions = node.extraDimensionInfos();", "+\t\t\tList dimensions = node.extraDimensions();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edee8c5e39480381df34aaf7c3f6e8ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/BinaryParameterDeclarationImpl.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "          public <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "signatureAfterChange": "          public <A extends Annotation> A getAnnotation(Class<A> annotationClass)", "diff": ["-\t\tfinal IResolvedAnnotation[] paramAnnos = methodBinding.getParameterAnnotations(_paramIndex); ", "+\t\tfinal IAnnotationBinding[] paramAnnos = methodBinding.getParameterAnnotations(_paramIndex); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee099897d90bdac59915b5d750f6735d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate static boolean checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType, TypeBinding originalParameterType)", "signatureAfterChange": " \tprivate static boolean checkInvocationArgument(BlockScope scope, Expression argument, TypeBinding parameterType, TypeBinding argumentType, TypeBinding originalParameterType)", "diff": ["-\t\t\tif (wildcard.kind != Wildcard.SUPER && wildcard.otherBounds == null) // lub wildcards are tolerated", "+\t\t\tif (wildcard.boundKind != Wildcard.SUPER && wildcard.otherBounds == null) // lub wildcards are tolerated"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee0c2b0ca19e815c96ea9e045f82973e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/NLSTag.java", "commitBeforeChange": "be99a78ebde70e086535a722e0c99b2c26590dce", "commitAfterChange": "15b09e3657f237aa7526b08315f9749226cbc20e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t", "+", "-\t\treturn \"NLSTag(\" + this.start + \",\" + this.end + \",\" + this.bits + \")\"; //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$", "+\t\treturn \"NLSTag(\" + this.start + \",\" + this.end + \",\" + this.lineNumber + \")\"; //$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee114dfd9635a28462dc18957cafad3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CaseLabel.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void branchWide()", "signatureAfterChange": " void branchWide()", "diff": ["-\t\tcodeStream.writeSignedWord(position - codeStream.position + 1);", "+\t\tcodeStream.writeWidePosition(position - codeStream.position + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee12b0b1e0dc180971d86a3aa7f73983", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testAppendReadOnly() throws CoreException", "signatureAfterChange": " public void testAppendReadOnly() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee15d75aea758f459021049b4549ab65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "24134b187b46ea16212a45107324227f46ba3e4a", "commitAfterChange": "496121d0ad975842fb45544aac592b8195531ce7", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tpublic void printQualifiedReference(int sourceEnd)", "signatureAfterChange": "  \tpublic void printQualifiedReference(int sourceEnd)", "diff": ["-\t\t\t\t\t\tthis.printCommentLine(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tthis.printLineComment(this.scanner.getRawTokenSource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee1e05af51d3e8460a7d95dad723d0ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected void consumeFieldAccess(boolean isSuperAccess)", "signatureAfterChange": " protected void consumeFieldAccess(boolean isSuperAccess)", "diff": ["-\tthis.patternLocator.match((Reference) this.expressionStack[this.expressionPtr], this.matchSet);", "+\tthis.patternLocator.match((Reference) this.expressionStack[this.expressionPtr], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee1f76ca4df171a0b79405efdad8d12d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void testParameterizedTypeSingleArgument04() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeSingleArgument04() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedSourceType(unit,  \"g1.t.s.def.Generic<Exception>.MemberGeneric<Exception>\"); //$NON-NLS-1$", "+\t\tParameterizedSourceType type = selectParameterizedType(unit,  \"g1.t.s.def.Generic<Exception>.MemberGeneric<Exception>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee2af49b26e7b8bb9553eb4030e54fd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d48c25cb976d99917f58b366198a77010dd2d678", "commitAfterChange": "e0794fcfb44a17efaa6223129a8b32f7f36f63a6", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic IProject getProject()", "signatureAfterChange": " \tpublic IProject getProject()", "diff": ["-", "-\t\treturn this.fProject;", "+\t\treturn this.project;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee359ebcf02946625435ae6c722ba0a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static Object convertDOMValueToMirrorValue(Object domValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t   String name,\t \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseMirrorImpl parent, \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseDeclarationImpl decl,  \t\t\t\t\t\t\t\t\t\t\t\t\t   BaseProcessorEnv env, \t\t\t\t\t\t\t\t\t\t\t\t\t   TypeMirror expectedType)", "signatureAfterChange": "     private static Object convertDOMValueToMirrorValue(Object domValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t   String name,\t \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseMirrorObject parent, \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseDeclarationImpl decl,  \t\t\t\t\t\t\t\t\t\t\t\t\t   BaseProcessorEnv env, \t\t\t\t\t\t\t\t\t\t\t\t\t   TypeMirror expectedType)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseMirrorImpl parent,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseMirrorObject parent,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee3f6b12cc6c79fc5d01f087b81ea788", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/SwitchFlowContext.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public Label breakLabel()", "signatureAfterChange": "  public BranchLabel breakLabel()", "diff": ["-public Label breakLabel() {", "+public BranchLabel breakLabel() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee44a06b741d80aa27b6483b3a243dee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/InnerEmulationTest.java", "commitBeforeChange": "16d2f227c83166edb0478b06ddca92e3871fed38", "commitAfterChange": "e914ff2196f00fd15aeda854332ebec940816655", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn setupSuite(testClass());", "+\treturn buildTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee44b8164610de65324fae09b243af4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "adb1e4d21f756fdc893d84befd3e859cfa2aa662", "commitAfterChange": "2941812daedfecddb313ba4dd0685bac7c26b287", "methodNumberBeforeChange": 414, "methodNumberAfterChange": 414, "signatureBeforeChange": " \tpublic void test395()", "signatureAfterChange": " \tpublic void test395()", "diff": ["-\t\tpreferences.insert_space_before_method_declaration_open_paren = true;", "+\t\tpreferences.insert_space_before_opening_paren_in_method_declaration = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee4a9dd8a0f32cc44c45266706120cc2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void test_nonnull_parameter_007()", "signatureAfterChange": " public void test_nonnull_parameter_007()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee4dcbec9f1f9a023c11cba49c894fa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SnippetCompletionTests.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "   public void testCodeSnippetAssistForClassFileInInnerClass() throws JavaModelException", "signatureAfterChange": "   public void testCodeSnippetAssistForClassFileInInnerClass() throws JavaModelException", "diff": ["-\tint[] modifiers = {CompilerModifiers.AccDefault, CompilerModifiers.AccFinal};", "+\tint[] modifiers = {CompilerModifiers.AccDefault, IConstants.AccFinal};"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee4e3daec9a5331e4e93ea622268af30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "526f595144dc3e8be2bacbfcf836a6dd30a39f84", "commitAfterChange": "f4fac2a7e69cf336c94105a7eeaf8b6bd2b7e9f2", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolveUsing(BlockScope givenScope)", "signatureAfterChange": "  \tpublic void resolveUsing(BlockScope givenScope)", "diff": ["-\t\t\tgivenScope.problemReporter().uncommentedEmptyBlock(this);", "+\t\t\tgivenScope.problemReporter().undocumentedEmptyBlock(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee5a582a9acbc5166e7f43a2765e809f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " boolean areMethodsCompatible(MethodBinding one, MethodBinding two)", "signatureAfterChange": " boolean areMethodsCompatible(MethodBinding one, MethodBinding two)", "diff": ["-\treturn sub != null && doesSubstituteMethodOverride(one, sub) && areReturnTypesCompatible(one, sub);", "+\treturn sub != null && isSubstituteParameterSubsignature(one, sub) && areReturnTypesCompatible(one, sub);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee62383d241309cbd7110920d26c9b28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\targument.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+\t\t\t\t\targument.bits |= DisableUnnecessaryCastCheck; // will check later on"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee6346e1fe6dfc2032000ef8ad530c3c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/InMemoryIndex.java", "commitBeforeChange": "ae7797d27bfed7c3f6e7630a551ffec98598a05e", "commitAfterChange": "b5a62e48da3d2bb054c313f16e0e1c0a1279b4a4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tprotected void addRef(char[] word, int fileNum)", "signatureAfterChange": "\r \tprotected void addRef(char[] word, int fileNum)", "diff": ["-\t\t\tthis.sortedWords= null;\r", "+\t\t\tthis.sortedWordEntries= null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee68310fb888d44411f0613ef9eb1e06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5ab1b44e840f5c63c769a4409a1d1ee2ee2b555d", "commitAfterChange": "180e4e45746dd1c7939f8d071838acd40ff207da", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  public JavaSearchMatch newLocalVariableReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "signatureAfterChange": "  public SearchMatch newLocalVariableReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint sourceStart,   \t\tint sourceEnd, \t\tASTNode reference)", "diff": ["-public JavaSearchMatch newLocalVariableReferenceMatch(", "+public SearchMatch newLocalVariableReferenceMatch("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee7ae382f331e0884258dcc1ac24108d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "66cd4232d0ab1e96e3a07f02c56b8bad9d7784af", "commitAfterChange": "c4f302586af8fb051e0ee3dd72d43fa433091810", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICodeCompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r protected void codeComplete(org.eclipse.jdt.internal.compiler.env.ICompilationUnit cu, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unitToSkip, int position, ICodeCompletionRequestor requestor) throws JavaModelException", "diff": ["-\tINameLookup nameLookup = ((JavaProject) getJavaProject()).getNameLookup();\r", "+\tNameLookup nameLookup = ((JavaProject) getJavaProject()).getNameLookup();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee85e89059ae85952d2fca1924d88a07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 188, "methodNumberAfterChange": 188, "signatureBeforeChange": " \tpublic void test166()", "signatureAfterChange": " \tpublic void test166()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eea6bcb56f7eb18e89889d920a40ba99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DeprecatedTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn setupSuite(testClass());", "+\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeae4dbf726da8c3e85e214e06f2e555", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchDocument.java", "commitBeforeChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "commitAfterChange": "b21cadb5eae53d9f84dce9f073b5350a267b6ad6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic char[] getCharContents()", "signatureAfterChange": " \tpublic char[] getCharContents()", "diff": ["-\t\t\tif (SearchEngine.VERBOSE || JobManager.VERBOSE) { // used during search and during indexing", "+\t\t\tif (SearchBasicEngine.VERBOSE || JobManager.VERBOSE) { // used during search and during indexing"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeca1a95e6fdfef7b7b885f795941da4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 332, "methodNumberAfterChange": 332, "signatureBeforeChange": "  \tpublic void test312()", "signatureAfterChange": "  \tpublic void test312()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eee4801fca2125f29425f9d7e5269cab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic synchronized boolean isParentFile( IFile f )", "signatureAfterChange": " \t \tpublic synchronized boolean isParentFile( IFile f )", "diff": ["-\t\tSet<IFile> s = _parent2DerivedFiles.get( f );", "+\t\tSet<IFile> s = _parentFile2GeneratedFiles.get( f );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef01da0911fbd1198d2d585eedb6a262", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \r public  boolean isSourceType()", "signatureAfterChange": "\r \tpublic boolean isSourceType()", "diff": ["-public  boolean isSourceType() {\r", "-\treturn sourceType != null;\r", "-}\r", "+\t */\r", "+\tpublic boolean isSourceType() {\r", "+\t\treturn sourceTypes != null;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef024a52f6893c324dbac8331bbd1ab6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/AnnotationComponentValue.java", "commitBeforeChange": "6de7ced9858f2246a9379efd0dd8834bcae6044c", "commitAfterChange": "a6982bb808d31a822c6a1c4b43d77a703b23bdd4", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic IAnnotation getAttributeValue()", "signatureAfterChange": " \tpublic IAnnotation getAttributeValue()", "diff": ["-\t\treturn this.attributeValue;", "+\t\treturn this.annotationValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef024e5e34819757db45c6144ec1350c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "aee2ac8296aa79245cc75711562bd6a00b176447", "commitAfterChange": "315ce9a011cee567be6f07062a1610fb2e8116d3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected boolean generateInfos( \tOpenableElementInfo info, \tIProgressMonitor pm, \tMap newElements, \tIResource underlyingResource)\tthrows JavaModelException", "signatureAfterChange": " protected boolean generateInfos( \tOpenableElementInfo info, \tIProgressMonitor pm, \tMap newElements, \tIResource underlyingResource)\tthrows JavaModelException", "diff": ["-\tIProject[] projects = this.getWorkspace().getRoot().getProjects();", "+\tIProject[] projects = ResourcesPlugin.getWorkspace().getRoot().getProjects();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef044159480a1c3e0d1107fc7194f768", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "25a0c02d6979e76d70832f78f8eb60bd371c0ad1", "commitAfterChange": "1b6413921860c74cfa469f859f6fc627d6400adf", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic MethodBinding getSingleAbstractMethod(final Scope scope)", "signatureAfterChange": " \tpublic MethodBinding getSingleAbstractMethod(final Scope scope)", "diff": ["-\t\t\t\treturn this.singleAbstractMethod = new ProblemMethodBinding(TypeConstants.ANONYMOUS_METHOD, null, ProblemReasons.NoSuchSingleAbstractMethod);", "+\t\t\t\treturn this.singleAbstractMethod = new ProblemMethodBinding(TypeConstants.ANONYMOUS_METHOD, null, ProblemReasons.NotAWellFormedParameterizedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef226b1709221d7fe1ac0dcb1c96f077", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "67693cc1d8107e5b7d65fd325b6581747ce90733", "commitAfterChange": "a1635f1f21da61f1bf03d9571bfbef5573301bca", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate void adaptRegions()", "signatureAfterChange": " \tprivate void adaptRegions()", "diff": ["-\t\tthis.adaptedRegions = new Region[this.regions.length];", "+\t\tthis.adaptedRegions = new IRegion[this.regions.length];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef32be384de3c7de6c502ff4995ceded", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tpublic void generateOptimizedStringConcatenation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "signatureAfterChange": " \t \tpublic void generateOptimizedStringConcatenation( \t\tBlockScope blockScope, \t\tCodeStream codeStream, \t\tint typeID)", "diff": ["-\t\t\t&& ((bits & ReturnTypeIDMASK) == T_String)) {", "+\t\t\t&& ((bits & ReturnTypeIDMASK) == T_JavaLangString)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef4f9ead7a078cc50bdfe4364226ab34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "cfb9e308b9934bc0d4a17e2d4604db46f20af164", "commitAfterChange": "592b135627e5a06d1b39aee23540f897beee493f", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  protected void reportMatching(LambdaExpression lambdaExpression,  IJavaElement parent, int accuracy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": "  protected void reportMatching(LambdaExpression lambdaExpression,  IJavaElement parent, int accuracy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\t\t\t\tint length = lambdaExpression.getArrowPosition() + 1 - nameSourceStart;", "+\t\t\t\tint length = lambdaExpression.arrowPosition() + 1 - nameSourceStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef5fc8e08b5d6d18597a8219d3e83505", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "6b93bc47c94f281cdece9370a844218715786de0", "commitAfterChange": "5a74a1c87d1830c88bea417813f995a5ae4e1a46", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope)", "signatureAfterChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope)", "diff": ["-\t\t\t\t\tnext : for (int i = 0, length = blockScope.scopeIndex; i < length; i++) {", "+\t\t\t\t\tnext : for (int i = 0, length = blockScope.subscopeCount; i < length; i++) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef7632bcebcdbeaf1a073f76da947fcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferencePattern.java", "commitBeforeChange": "5f85e7ad56b4ff0557c2bf2c999084f9107f0617", "commitAfterChange": "0a4aef6498056b8c56c187a24a4c92d14d399d01", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": "\r protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tlocator.reportQualifiedReference(reference.sourceStart, reference.sourceEnd, splitName, element, accuracy);\r", "+\tlocator.reportAccurateReference(reference.sourceStart, reference.sourceEnd, splitName, element, accuracy);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef83dac3e89ff9492b7117507206b6e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testBug118397c() throws JavaModelException", "signatureAfterChange": " public void testBug118397c() throws JavaModelException", "diff": ["-\t\t\"BasicTestBugs.Inner[TYPE_REF]{Inner, bugs.b118397, Lbugs.b118397.BasicTestBugs$Inner;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"BasicTestBugs.Inner[TYPE_REF]{Inner, bugs.b118397, Lbugs.b118397.BasicTestBugs$Inner;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef84c1066ecd3a2e4e6cbbf7513ff15c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "commitAfterChange": "b21cadb5eae53d9f84dce9f073b5350a267b6ad6", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected void parseAndBuildBindings(PossibleMatch possibleMatch, boolean mustResolve)", "signatureAfterChange": " protected void parseAndBuildBindings(PossibleMatch possibleMatch, boolean mustResolve)", "diff": ["-\t\tif (SearchEngine.VERBOSE)", "+\t\tif (SearchBasicEngine.VERBOSE)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef956553e390ddc1c4ba6144caf9b259", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "605463bb98397b59c78b7fc56ee33e7e22fd8367", "commitAfterChange": "7428bd3b18a16b1860e6a1a28fbc6cd63967fdc6", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tprivate void printCodeSnippet(int startPosition, int endPosition)", "signatureAfterChange": " \tprivate void printCodeSnippet(int startPosition, int endPosition)", "diff": ["-\t\toutputBuffer.append(JAVADOC_LINE_PREFIX);", "+\t\toutputBuffer.append(BLOCK_LINE_PREFIX);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efaa37f4a5814c76012dffbfb7a8d7f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testRemoveExcludedAndIncludedPackages() throws CoreException", "signatureAfterChange": " public void testRemoveExcludedAndIncludedPackages() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efb5dda92c319a98a931deb03dfedfdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "diff": ["-\t\treturn (initializer.bits & ASTNode.HasLocalTypeMASK) != 0; // continue only if it has local type", "+\t\treturn (initializer.bits & ASTNode.HasLocalType) != 0; // continue only if it has local type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efc2d39a072ef1c517fea22357f9f079", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/RunCompletionModelTests.java", "commitBeforeChange": "a520fbebd0fffdd9ae00eeb9ec609a81241ec8bb", "commitAfterChange": "afe8e7c03c9e057a9ab6bf025b43a423a4494448", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tTestCase.ONLY_SUFFIX = null;", "+\t\tTestCase.RUN_ONLY_ID = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efc360dd2a5081b96b4a16ed97b44583", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/WorkQueue.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  public boolean isCompiled(String element)", "signatureAfterChange": "  public boolean isCompiled(SourceFile element)", "diff": ["-public boolean isCompiled(String element) {", "+public boolean isCompiled(SourceFile element) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efc9de1e1e572c84e5fd4987d81e58ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void setDefaultSettings()", "signatureAfterChange": "  \tpublic void setDefaultSettings()", "diff": ["-\t\tthis.alignment_for_enum_constants = Alignment.M_NO_ALIGNMENT;", "+\t\tthis.alignment_for_enum_constants = Alignment.NONE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efdfaec09b7928d1cbaefcc8cc602ace", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "4e9ad7fb672de1276fe9f6535946a56c32344f69", "commitAfterChange": "fb5a19c39f23c560b52f4dcae45f678d9265aed4", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void classInstanceCreation(boolean alwaysQualified)", "signatureAfterChange": " protected void classInstanceCreation(boolean alwaysQualified)", "diff": ["-\t\t// mark fields and initializer with local type mark if needed", "-\t\tmarkFieldsWithLocalType(anonymousTypeDeclaration);", "+\t\t// mark initializers with local type mark if needed", "+\t\tmarkInitializersWithLocalType(anonymousTypeDeclaration);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efe968e78352eed3dbb394e0d44d5b5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "e1051acac48de2e59e4c3d2d0f46898b4067bf9a", "commitAfterChange": "25dbd9e17c7b6920dccf1b458296dbbe00f382de", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " \tpublic boolean visit(PackageQualifiedType node)", "signatureAfterChange": " \tpublic boolean visit(NameQualifiedType node)", "diff": ["-\tpublic boolean visit(PackageQualifiedType node) {", "+\tpublic boolean visit(NameQualifiedType node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eff9e5060a8ee0b068fcb9db98f14dca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2bf89c240ddd3251e4b1d84f5113b5b23a25a1c7", "commitAfterChange": "d9ef1de09cb72d13b8a3503336aa24f1ef9b23e2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "signatureAfterChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "diff": ["-\t\t\t\t\t\tIPackageFragmentRoot root = getPackageFragmentRoot(entryPath);", "+\t\t\t\t\t\tIPackageFragmentRoot root = getFolderPackageFragmentRoot(entryPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f000ab7e58164faaba5c821e9e759e61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ClasspathContainerInitializer.java", "commitBeforeChange": "0aee0da8dedb4337034c2218c8361a59d0d8fa97", "commitAfterChange": "9687350fee055f775aa6db78ace631e357b68877", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public abstract void initialize(IPath containerPath, IJavaProject project) throws CoreException;", "signatureAfterChange": "     public abstract void initialize(IPath containerPath, IJavaProject project) throws JavaModelException;", "diff": ["-    public abstract void initialize(IPath containerPath, IJavaProject project) throws CoreException;", "+    public abstract void initialize(IPath containerPath, IJavaProject project) throws JavaModelException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f01e1f5042c31d85453dfeacd7538c76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "94a425e221148886c840b4d545bf87183980be4b", "commitAfterChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic static IJavaElement determineIfOnClasspath(IResource resource, IJavaProject project)", "signatureAfterChange": " \tpublic static IJavaElement determineIfOnClasspath(IResource resource, IJavaProject project)", "diff": ["-\t\tboolean isExternal = ExternalFoldersManager.isExternal(resourcePath);", "+\t\tboolean isExternal = ExternalFoldersManager.isInternalPathForExternalFolder(resourcePath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0261ed9d4ffa662219381229e59ad0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "72ddb2dbbffba04cf7851782cff6b0da68cfef22", "commitAfterChange": "8d0f51126fc988563ab26c15f06e06d9e1a2a602", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \tprivate static ClasspathVariableInitializer getClasspathVariableInitializer(String variable)", "signatureAfterChange": "\r \tprivate static ClasspathVariableInitializer getClasspathVariableInitializer(String variable)", "diff": ["-\t\tIExtensionPoint extension = jdtCorePlugin.getDescriptor().getExtensionPoint(CPVAR_INIT_EXTPOINT_ID);\r", "+\t\tIExtensionPoint extension = jdtCorePlugin.getDescriptor().getExtensionPoint(CPVARIABLE_INITIALIZER_EXTPOINT_ID);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f02625f73be6da6ba0a4e537c450086a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic Constant resolveCase(BlockScope scope, TypeBinding testType, SwitchStatement switchStatement)", "signatureAfterChange": " \tpublic Constant resolveCase(BlockScope scope, TypeBinding testType, SwitchStatement switchStatement)", "diff": ["+\t */", "-\t\treturn null;", "+\t\treturn NotAConstant;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f02e5445b379d024d27063ac30ad6d80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 286, "methodNumberAfterChange": 294, "signatureBeforeChange": "  public void testBug110060_ConstructorPattern06() throws CoreException", "signatureAfterChange": " public void testBug110060_ConstructorPattern06() throws CoreException", "diff": ["-", "-\tsearch(\"A*A*\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMELCASE_MATCH);", "+\tsearch(\"A*A*\", CONSTRUCTOR, ALL_OCCURRENCES, SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f03b6533a4ef2c809feb28714f695ece", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNamestatic);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNamestatic);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f03e401b291a45f4eb2f98ccd6bb67b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic boolean visit(Break breakStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(BreakStatement breakStatement, BlockScope scope)", "diff": ["-\tpublic boolean visit(Break breakStatement, BlockScope scope) {", "+\tpublic boolean visit(BreakStatement breakStatement, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f05a97f4498c252baae1a6df8364f173", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment)", "diff": ["-\t\t\t\tTypeDeclaration typeDecl = new AstNodeFinder(parsedUnit).findType(typeHandle);", "+\t\t\t\tTypeDeclaration typeDecl = new ASTNodeFinder(parsedUnit).findType(typeHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0687e79b37d43e47d845030292dd494", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \r \tpublic TypeDeclaration convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "signatureAfterChange": "\r \r \tpublic TypeDeclaration convert(org.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDeclaration)", "diff": ["-\t\ttypeDecl.setSourceRange(typeDeclaration.declarationSourceStart, typeDeclaration.declarationSourceEnd - typeDeclaration.declarationSourceStart + 1);\r", "+\t\ttypeDecl.setSourceRange(typeDeclaration.declarationSourceStart, typeDeclaration.bodyEnd - typeDeclaration.declarationSourceStart + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0738704cca0c5354d153510b6f51eea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(LocalDeclaration localDeclaration, int bracketBalanceValue)", "diff": ["-\tblock.sourceStart = ((Initializer)fieldDeclaration).bodyStart;", "+\tblock.sourceStart = ((Initializer)fieldDeclaration).sourceStart;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f073bc19ba49c98e06f13a4c935b5240", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "79620cc5a2ab93e8afb2f50dfb60d3aac3ac52a1", "commitAfterChange": "bb83bb6bb9594ac07e759b1e208acbe513439625", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\t\t\tisWhiteSpace = ScannerHelper.isWhitespace(this.currentCharacter);", "+\t\t\t\t\tisWhiteSpace = CharOperation.isWhitespace(this.currentCharacter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f09c81120784f1ebf36f247347b863ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t\tpublic boolean match(ArrayAccess node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(AnnotationTypeMemberDeclaration node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(AnnotationTypeMemberDeclaration node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0b5d71bd0a75c9929d5b3350fc09a73", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tboolean visit(Continue continueStatement, BlockScope scope);", "signatureAfterChange": " \tboolean visit(ContinueStatement continueStatement, BlockScope scope);", "diff": ["-\tboolean visit(Continue continueStatement, BlockScope scope);", "+\tboolean visit(ContinueStatement continueStatement, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0b6d03adbc61ae1f29b05e36e7c5059", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ThisReference.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic static ThisReference implicitThis()", "signatureAfterChange": "  \tpublic static ThisReference implicitThis()", "diff": ["-\t\timplicitThis.bits |= IsImplicitThisMask;", "+\t\timplicitThis.bits |= IsImplicitThis;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0b7a644b557cab60ac570f7413d5ad8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "signatureAfterChange": " \tpublic boolean visit(SuperConstructorInvocation node)", "diff": ["-\t\tif (node.getAST().apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0bd6d95570b74ac9ebfef5961c5f6c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "2e8c81b48304c9e33747060a2a7fcd8295c64afe", "commitAfterChange": "50125dca81221f803e384aaa4267a637e226f1c2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void build()", "signatureAfterChange": "  public void build()", "diff": ["-\t\tJavaBuilder.removeProblemsFor(javaBuilder.currentProject);", "+\t\tJavaBuilder.removeProblemsAndTasksFor(javaBuilder.currentProject);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0cd5b359056bf2803551efc3361b76e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e06aeb68bdedc96cd403845333a666ecc6a0a737", "commitAfterChange": "3512ba39517d8dda3063dc8acab63097a44e7812", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": "\r final public void ifge(Label lbl)", "signatureAfterChange": "\r final public void ifge(Label lbl)", "diff": ["-\t\tinternal_goto_w_management(OPC_ifge, lbl);\r", "+\t\tgenerateWideConditionalBranch(OPC_ifge, lbl);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0e58a36acf3267048c21324df90dfe8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/LRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic Object peek(Object key)", "signatureAfterChange": " \tpublic Object peek(Object key)", "diff": ["-\t\tLRUCacheEntry entry = (LRUCacheEntry) fEntryTable.get(key);", "+\t\tLRUCacheEntry entry = (LRUCacheEntry) entryTable.get(key);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f133eb93bb1ccb6c9bbf934fee12aa58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void endVisit(ExtraDimension node)", "signatureAfterChange": " \tpublic void endVisit(ExpressionMethodReference node)", "diff": ["+\t}", "+\tpublic void endVisit(ExpressionMethodReference node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f14a3b9247d9b42b2a3f32baa164b27e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "9528b13b60b5267a27dfdeac3b8ea9a804476535", "commitAfterChange": "ef0d751764a03bfb7b7e9d8838fc454e1e51fa0c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void generateCode( \tBlockScope currentScope, \tCodeStream codeStream, \tboolean valueRequired)", "signatureAfterChange": " public void generateCode( \tBlockScope currentScope, \tCodeStream codeStream, \tboolean valueRequired)", "diff": ["-\tif (this.codegenBinding.canBeSeenBy(this.receiverType, this, currentScope)) {", "+\tif (this.codegenBinding.canBeSeenBy(this.actualReceiverType, this, currentScope)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1548c1670e0b71c7de4c1b9c2955975", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate boolean shouldDispatchToBatchProcessor(final CompilationProcessorEnv processorEnv )", "signatureAfterChange": " \tprivate boolean shouldDispatchToBatchProcessor(final AbstractCompilationEnv processorEnv )", "diff": ["-\tprivate boolean shouldDispatchToBatchProcessor(final CompilationProcessorEnv processorEnv )", "+\tprivate boolean shouldDispatchToBatchProcessor(final AbstractCompilationEnv processorEnv )"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1596e634b2824acd02aacb55e08bfb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ClassLiteralAccess.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\treturn this.expressionType = scope.getJavaLangClass();", "+\t\treturn this.resolvedType = scope.getJavaLangClass();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15bce9a08687c7a128723a0fe11bc8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/NameReferenceCompletionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(NameReferenceCompletionTest.class);", "+\treturn buildAllCompliancesTestSuite(NameReferenceCompletionTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f15bf213c713c38d206de7de82f17882", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 246, "signatureBeforeChange": " public void testBug109695g() throws CoreException", "signatureAfterChange": " public void testBug109695g() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"UTF1DSS\", SearchPattern.R_CAMELCASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"UTF1DSS\", SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1661f0e2bf45d1e649925d5d361a8c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "9d9b626a341c39b3bd7c3dd97a53439bdcd8e46d", "commitAfterChange": "8fdb14b64608b58e620c67bc0f2758fb559de717", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void addBinaryAnnotation(IBinaryAnnotation annotation)", "signatureAfterChange": " \tprivate void addBinaryAnnotation(IBinaryAnnotation annotation)", "diff": ["-\t\taddTypeReference(replace('/', '.', Signature.toCharArray(annotation.getTypeName())));", "+\t\taddAnnotationTypeReference(replace('/', '.', Signature.toCharArray(annotation.getTypeName())));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f16b794adb9953d10640229730595889", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "df078329218bf2c1a32b5241c9545d932f017e46", "commitAfterChange": "b807535043a8e4f63fd714ed5c671846765013dc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic void attachSource(IPath zipPath, IPath rootPath, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r \tpublic void attachSource(IPath zipPath, IPath rootPath, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\tIBufferManager manager= BufferManager.getDefaultBufferManager();\r", "+\t\t\t\tBufferManager manager= BufferManager.getDefaultBufferManager();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f172803022ab45dbf78a7bc0bf97383a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "commitAfterChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected boolean makeSpace(int space)", "signatureAfterChange": " \tprotected boolean makeSpace(int space)", "diff": ["-\t\t\t\tentry = entry._fPrevious;", "+\t\t\t\tentry = entry.previous;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f17ada1f6fc7201fd4d94ab3da7d062b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/CompilationUnitSorter.java", "commitBeforeChange": "faa2b6a635bef51dfcc1d4b570360b79e4799b52", "commitAfterChange": "a64e2bfe34ce5cd9321a9c519897f6c11db5eddd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t\tprivate String buildSignature(BodyDeclaration node)", "signatureAfterChange": "  \t\tprivate String buildSignature(BodyDeclaration node)", "diff": ["-\t\t\t\t\treturn ((Integer) node.getProperty(CompilationUnitSorter.SOURCE_START)).toString();", "+\t\t\t\t\treturn ((Integer) node.getProperty(CompilationUnitSorter.RELATIVE_ORDER)).toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f17cf1b453e61738fe6814417be25843", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "c8e7b4e01df9aa644d2160be3783e770b3cf2574", "commitAfterChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 54, "signatureBeforeChange": " public void parseBlockStatements(ConstructorDeclaration cd, CompilationUnitDeclaration unit)", "signatureAfterChange": " public void parseBlockStatements(ConstructorDeclaration cd, CompilationUnitDeclaration unit)", "diff": ["-\tgoForConstructorBlockStatementsopt();", "+\tgoForBlockStatementsopt();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f184c6fdd406e1aafcccec84249a3665", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/DeclarationOfReferencedTypesPattern.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void reportDeclaration(TypeBinding typeBinding, int maxType, MatchLocator locator) throws CoreException", "signatureAfterChange": " private void reportDeclaration(TypeBinding typeBinding, int maxType, MatchLocator locator) throws CoreException", "diff": ["-\tIResource resource = type.getUnderlyingResource();", "+\tIResource resource = type.getResource();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f18e131b96766ecd9200c27917218dde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 106, "signatureBeforeChange": " \tpublic boolean visit(TrueLiteral trueLiteral, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(TrueLiteral trueLiteral, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNametrue);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNametrue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1a1ec81916f9b54cd4c45a5d582a6d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfIntValues.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic int put(char[] key, int value)", "signatureAfterChange": "  \tpublic int put(char[] key, int value)", "diff": ["-\t\t\tif (currentKey.length == keyLength", "-\t\t\t\t&& CharOperation.prefixEquals(currentKey, key))", "+\t\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1b06e180890fe650cac0749dbd81798", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/StringConstant.java", "commitBeforeChange": "0927ffa25a2592bfca0a67c9cc9e0e69775118de", "commitAfterChange": "7b934c773095ee4cd83d9fe1d55bbb70d8656cbb", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public int typeID()", "signatureAfterChange": " public int typeID()", "diff": ["-\treturn T_String;", "+\treturn T_JavaLangString;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1c72ee8ac2ae44c45ddbb09f0ddceb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "6e642a34a8b5c85df508f049684a8996f1b8df52", "commitAfterChange": "355460267a070a52738f93cd1e4e0f2039fb0d85", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tpublic void endVisit(MethodRef node)", "signatureAfterChange": " \tpublic void endVisit(MarkerAnnotation node)", "diff": ["+\tpublic void endVisit(MarkerAnnotation node) {", "+\t\tendVisitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1d866ac8dbd83c80af4d19059f8f651", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void testInvalidTagsFieldDefaults()", "signatureAfterChange": " \tpublic void testInvalidTagsFieldDefaults()", "diff": ["-\t\trunConformTest(InvalidReferencesFieldJavadocComments);", "+\t\trunConformTest(FIELDS_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1dbdef15215a386c04ee48f5c31804e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "5194065a29db2efb6ca399235812dc2379a0b639", "commitAfterChange": "64dc9dc143f648f63c2998f7d684fab052c282d9", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 84, "signatureBeforeChange": "\r \r \tprivate FieldDeclaration convertToFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl)", "signatureAfterChange": "\r \r \tprivate FieldDeclaration convertToFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl)", "diff": ["-\t\tfieldDeclaration.setSourceRange(fieldDecl.declarationSourceStart, fieldDecl.declarationSourceEnd - fieldDecl.declarationSourceStart + 1);\r", "+\t\tfieldDeclaration.setSourceRange(fieldDecl.declarationSourceStart, fieldDecl.declarationEnd - fieldDecl.declarationSourceStart + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1e69a26c845341c2d37821f744da7b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/AccessRule.java", "commitBeforeChange": "74638c6ba2ff749df371c0b7b5765b684e3c7bae", "commitAfterChange": "b7b6a243304e66fe9d0d477b8b6306031c8fd484", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic int hashCode()", "signatureAfterChange": " \t \tpublic int hashCode()", "diff": ["-\t\treturn this.severity * 17 + CharOperation.hashCode(this.pattern);", "+\t\treturn this.problemId * 17 + CharOperation.hashCode(this.pattern);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1e9426d5b537f08267f05f831258b7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "4e652bbe11383e976d60d20e3975e9453afa72ca", "commitAfterChange": "349c3b5a850fbdbf23ec6c6153a095f70d61338c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void generateArguments(MethodBinding binding, Expression[] arguments, BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " public void generateArguments(MethodBinding binding, Expression[] arguments, BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\t\t&& lastType.isCompatibleWith(varArgsType))) {", "+\t\t\t\t\t&& lastType.isCompatibleWith(codeGenVarArgsType))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1ef032ed05621eef10dcf3df3d08ff6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "c67e828d3788591f96003d3b6db18c20724f7bf4", "commitAfterChange": "31085e35ec6546fd0ce14d2c37082b7385a37318", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tMethodDeclaration(AST ast)", "signatureAfterChange": " \tMethodDeclaration(AST ast)", "diff": ["-\t\t\tthis.extraDimensions = new ASTNode.NodeList(EXTRA_DIMENSION_INFOS_PROPERTY);", "+\t\t\tthis.extraDimensions = new ASTNode.NodeList(EXTRA_DIMENSIONS2_PROPERTY);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2260e855b8e868062c3f2968123d53b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/GenericsCompletionParserTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(GenericsCompletionParserTest.class);", "+\treturn buildAllCompliancesTestSuite(GenericsCompletionParserTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f22f0c55c32466332651ab1d9c324cb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/NestedTypeBinding.java", "commitBeforeChange": "740d8a3bbf7d827a9782a8704551b5892c828d42", "commitAfterChange": "37fa53fe1bcd1db81d377f564f101511c07818f5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic SyntheticArgumentBinding getSyntheticArgument(ReferenceBinding targetEnclosingType, boolean onlyExactMatch)", "signatureAfterChange": " \tpublic SyntheticArgumentBinding getSyntheticArgument(ReferenceBinding targetEnclosingType, boolean onlyExactMatch)", "diff": ["-\t\t\t\t\tif (((ReferenceBinding)enclosingInstances[i].type).findSuperTypeErasingTo(targetEnclosingType) != null)", "+\t\t\t\t\tif (((ReferenceBinding)enclosingInstances[i].type).findSuperTypeWithSameErasure(targetEnclosingType) != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f236666e6898562f1ba1960f42755bff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f9968462ad3e78057baba9747e91f7b6e3ea59e1", "commitAfterChange": "1f65e2f1d1142c8be683dea8425f1840c9121137", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\t\tif (!environment().methodVerifier().doesMethodOverride(original, original2))", "+\t\t\t\t\t\t\tif (!environment().methodVerifier().isParameterSubsignature(original, original2))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f23c8ec114c97347ee3fed92e53e307d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": "  public void duplicateMethodInType(SourceTypeBinding type, AbstractMethodDeclaration methodDecl)", "signatureAfterChange": "  public void duplicateMethodInType(SourceTypeBinding type, AbstractMethodDeclaration methodDecl)", "diff": ["-    if ((method.modifiers & CompilerModifiers.AccGenericSignature) != 0) {", "+    if ((method.modifiers & ExtraCompilerModifiers.AccGenericSignature) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f23cf24c67b6457ced084324b6e860b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "a8f2b9d6f31a63759a85bef6a1ed8cbb23fbd3fa", "commitAfterChange": "ce41f66e0706b1b71981331d2b2667a0940a3697", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\tswitch (ScannerHelper.ObviousIdentCharNatures[c]) {", "+\t\t\t\t\t\tswitch (ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c]) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f240b8012c3785173eab607796d61414", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "e5dee4f66ab3257e0d9e4e34690323cf2d5f7c21", "commitAfterChange": "ba7f55d89dcf40f0d2718397b348f39209d50c3a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic PrimitiveTypeImpl getLongType()", "signatureAfterChange": " \tpublic PrimitiveTypeImpl getLongType()", "diff": ["-\tpublic PrimitiveTypeImpl getIntType(){ return _primitives[5]; }", "-\tpublic PrimitiveTypeImpl getLongType(){ return _primitives[6]; }", "+\tpublic PrimitiveTypeImpl getIntType(){ return _primitives[INT_INDEX]; }", "+\tpublic PrimitiveTypeImpl getLongType(){ return _primitives[LONG_INDEX]; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2416f6fccc6d32058febc2e31e6bb72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "b39f3a5a9fadba74f50d9dc16813d561f779e994", "commitAfterChange": "efd3b1f31e7f6af67fb63e84ece49ae3c1341055", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  private MethodBinding findMethod(char[] methodDescriptor, char[][][] missingTypeNames)", "signatureAfterChange": "  private MethodBinding findMethod(char[] methodDescriptor, char[][][] missingTypeNames)", "diff": ["-\t\t\tTypeBinding param = this.environment.getTypeFromSignature(methodDescriptor, index, end, false, this, missingTypeNames, ITypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);", "+\t\t\tTypeBinding param = this.environment.getTypeFromSignature(methodDescriptor, index, end, false, this, missingTypeNames, TypeAnnotationWalker.EMPTY_ANNOTATION_WALKER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2539e979f5e08c54b3256baf08ab362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tvoid endVisit(Continue continueStatement, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(ContinueStatement continueStatement, BlockScope scope);", "diff": ["-\tvoid endVisit(Continue continueStatement, BlockScope scope);", "+\tvoid endVisit(ContinueStatement continueStatement, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2607e63e1ccec6775b10f439ecb9609", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "5d2c6921b9c27b1190136ddb9ecff1e67f94074b", "commitAfterChange": "e6974cca9af6ba08c29d0c43902c67883d59d383", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " void checkForNameClash(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " void checkForNameClash(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["-\tif (currentMethod.declaringClass.isInterface() || currentMethod.isStatic()) return;", "+\tif (currentMethod.declaringClass.isInterface() || inheritedMethod.isStatic()) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f26152fa2b7709a481ea286f50838e30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 328, "methodNumberAfterChange": 328, "signatureBeforeChange": "  \tpublic void test308()", "signatureAfterChange": "  \tpublic void test308()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2756694a470661cc6530cd9cd4fcd6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9bef3f15c43b07a14e76957980f62386b2bcee10", "commitAfterChange": "73f504e7d77d95d8fc2d6621b5727e1e3ab07530", "methodNumberBeforeChange": 266, "methodNumberAfterChange": 266, "signatureBeforeChange": " protected void consumeStatementContinue()", "signatureAfterChange": " protected void consumeStatementContinue()", "diff": ["-\t\t\tthis.endPosition));", "+\t\t\tthis.endStatementPosition));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2858146f539ffbbb3171f1e5148a5bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefClassErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefClassErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f28fe7ea706adf3d49c66c92a592a434", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic ConstructorDeclaration createDefaultConstructor( \t\tboolean needExplicitConstructorCall, \t\tboolean needToInsert)", "signatureAfterChange": " \t \tpublic ConstructorDeclaration createDefaultConstructor( \t\tboolean needExplicitConstructorCall, \t\tboolean needToInsert)", "diff": ["-\t\t\t\t(((this.bits & ASTNode.IsMemberTypeMASK) != 0) && (modifiers & AccPrivate) != 0)", "+\t\t\t\t(((this.bits & ASTNode.IsMemberType) != 0) && (modifiers & AccPrivate) != 0)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a862ef5c1fb334e9426e115afe4e2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "commitAfterChange": "882f4a412452cbe6d8e04ad004cc47e303c5c4e3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic IMethodBinding getErasure()", "signatureAfterChange": " \tpublic IMethodBinding getErasure()", "diff": ["-\t\treturn getGenericMethod();", "+\t\treturn getMethodDeclaration();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2d24640b6966d8c4601bee8715a4a7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic void endVisit(MethodInvocation node)", "signatureAfterChange": " \tpublic void endVisit(EnhancedForStatement node)", "diff": ["+\t */", "+\tpublic void endVisit(EnhancedForStatement node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2d2c1136e77b34ae2522d978b7a1616", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void testInvalidTagsConstructorErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsConstructorErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e3b21bf35de7c15babac4b28bab82c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "f60c0face3ba2b87651b85d85b64101707cb246a", "commitAfterChange": "0500d43a75bf65b406995baa7b110dc9d0f7b60c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void set(Map optionsMap)", "signatureAfterChange": " \t \tpublic void set(Map optionsMap)", "diff": ["-\t\tif ((optionValue = optionsMap.get(OPTION_ReportAutoboxing)) != null) updateSeverity(Autoboxing, optionValue);", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportAutoboxing)) != null) updateSeverity(AutoBoxing, optionValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e777ddeee028b68d1f87fc55145064", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  \tprivate IFolder createFolder(IPath path)", "signatureAfterChange": "  \tprivate IFolder createFolder(IPath path)", "diff": ["-\t\tIFolder folder = fWorkspace.getRoot().getFolder(path);", "+\t\tIFolder folder = workspace.getRoot().getFolder(path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e892a59bc35bf47d158b90ce11cd9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/BasePreferencePage.java", "commitBeforeChange": "790443c8ea7a17aa25cb0c35c01196da99d52e04", "commitAfterChange": "d7ed279f5216d32337e674d05a19fd9c56f52744", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tprotected Control createPreferenceContent(Composite composite)", "signatureAfterChange": "  \tprotected Control createPreferenceContent(Composite composite)", "diff": ["-\t\treturn getConfigurationBlock().createContents(composite);", "+\t\treturn getConfigurationBlock().createPreferenceContent(composite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2eab86316064528a32481c5e854ff78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "54aac0437c44b25b70bb8f51692a810dc70acaf9", "commitAfterChange": "e09428ece4109f2ed53a5b654918b21f327e1ef3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testPersistence() throws JavaModelException", "signatureAfterChange": " public void testPersistence() throws JavaModelException", "diff": ["-\tthis.root.close();", "+\tthis.pkgFragmentRoot.close();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2f9802333077418ffc2a401dc88071d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/SimpleIndexInput.java", "commitBeforeChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "commitAfterChange": "82730fa91cab84d990d4e3898f46564d654b224e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic IEntryResult[] queryEntriesPrefixedBy(char[] prefix)", "signatureAfterChange": " \tpublic EntryResult[] queryEntriesPrefixedBy(char[] prefix)", "diff": ["-\tpublic IEntryResult[] queryEntriesPrefixedBy(char[] prefix) {", "+\tpublic EntryResult[] queryEntriesPrefixedBy(char[] prefix) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f30c0de0ce9dd350ede41b763127d9df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/TypesUtil.java", "commitBeforeChange": "b4f6df5ae08d61af8762ee59e5c247a670be227d", "commitAfterChange": "7007043cae1b12e48764a4ad7f71075181f1dd30", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "          public static IPackageBinding getPackageBinding(PackageDeclaration pkg)     \tthrows NonEclipseImplementationException", "signatureAfterChange": "          public static IPackageBinding getPackageBinding(PackageDeclaration pkg)     \tthrows NonEclipseImplementationException", "diff": ["-        if( pkg instanceof EclipseMirrorImpl ){", "+        if( pkg instanceof EclipseMirrorObject ){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f31f9ed09a83921ff856e04aff8bbca0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void internalSetExtraDimensions(VariableDeclarationFragment node, int dimensions)", "signatureAfterChange": " \tprivate void internalSetExtraDimensions(VariableDeclarationFragment node, int dimensions)", "diff": ["-\t\t\t\tnode.extraDimensionInfos().add(node.getAST().newExtraDimension());", "+\t\t\t\tnode.extraDimensions().add(node.getAST().newExtraDimension());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f33c70cb7bb0b8151d7de92cc89e0e35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  \tprivate void findImportsOfStaticFields(char[] fieldName, ReferenceBinding ref)", "signatureAfterChange": "  \tprivate void findImportsOfStaticFields(char[] fieldName, ReferenceBinding ref)", "diff": ["-\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.FIELD_REF, this.actualCompletionPosition);", "+\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.FIELD_REF, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f33cb4587ac47ad666b01cc5e6b54bf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "97b330eb505dfca0980041926ec66a0261a5be5c", "commitAfterChange": "d3580136581144eb64c8a6ff7ec886b58a1ec764", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void tearDown() throws Exception", "signatureAfterChange": " public void tearDown() throws Exception", "diff": ["-\t\tthis.workingCopy.destroy();", "+\t\tthis.workingCopy.discardWorkingCopy();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f34b35299e00b59cd8c41a781f71aca9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfObject.java", "commitBeforeChange": "acad0a7bf2b74fbb9eef42e4205061dd3f06bc91", "commitAfterChange": "85d96b05698704078897a400bb54ecbf83c93489", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Object put(char[] key, Object value)", "signatureAfterChange": "  \tpublic Object put(char[] key, Object value)", "diff": ["-\t\t\tif (currentKey.length == keyLength", "-\t\t\t\t&& CharOperation.prefixEquals(currentKey, key))", "+\t\t\tif (currentKey.length == keyLength && CharOperation.equals(currentKey, key))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f36f31722cca0cab69c7eaa7e375edb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "ee22b953168e5eb2f8830ee8c58b8b5ee9e24014", "commitAfterChange": "263941e543d760da46f092c40a60d9eb4c5dc908", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \t \tpublic SingleMemberAnnotation convert(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation annotation)", "signatureAfterChange": " \t \tpublic SingleMemberAnnotation convert(org.eclipse.jdt.internal.compiler.ast.SingleMemberAnnotation annotation)", "diff": ["-\t\t\tsingleMemberAnnotation.resolveAnnotation();", "+\t\t\tsingleMemberAnnotation.resolveAnnotationBinding();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f375793920b9643b5d5a15f8c193ae15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": " \tpublic void testConstructorInvocation()", "signatureAfterChange": " \tpublic void testConstructorInvocation()", "diff": ["-\t\tif (ast.apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (ast.apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f376b258b8dd14b151096a79417ff124", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragment.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void computeNonJavaResources(String[] resNames, JarPackageFragmentInfo info, String zipName)", "signatureAfterChange": " void computeNonJavaResources(String[] resNames, JarPackageFragmentInfo info, String zipName)", "diff": ["-\t\tif (!resName.toLowerCase().endsWith(\".java\")) { //$NON-NLS-1$", "+\t\tif (!resName.toLowerCase().endsWith(SUFFIX_STRING_java)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3879f80f1203feebc1a3476c308770f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ParameterizedSourceType.java", "commitBeforeChange": "a37d99b9b3d877f46f13e7d7f9e0829405d7a851", "commitAfterChange": "562f566c1c2b8bfedaad7117a5b53ae2f781bec9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic String getFullyQualifiedParameterizedName() throws JavaModelException", "signatureAfterChange": " \t \tpublic String getFullyQualifiedParameterizedName() throws JavaModelException", "diff": ["-\t\treturn getFullyQualifiedParameterizedName(getFullyQualifiedName(), this.uniqueKey);", "+\t\treturn getFullyQualifiedParameterizedName(getFullyQualifiedName(), this.genericTypeSignature);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3a0f01cc7dfe1f411376fe060a71909", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "af33da7216734bcb2ae0e5dbadaa836c42812db8", "commitAfterChange": "74ac0014c1ede0ba61ac73f39089ab641618bf5d", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic String changeIndent(String code, int codeIndentLevel, String newIndent)", "signatureAfterChange": " \t \tpublic String changeIndent(String code, int codeIndentLevel, String newIndent)", "diff": ["-\t\treturn Indents.changeIndent(code, codeIndentLevel, this.tabWidth, this.indentWidth, newIndent, this.lineDelimiter);", "+\t\treturn IndentManipulation.changeIndent(code, codeIndentLevel, this.tabWidth, this.indentWidth, newIndent, this.lineDelimiter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3b7ea9631268f788b97738c834d9145", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void reduceParseTree(CompilationUnitDeclaration unit)", "signatureAfterChange": " public void reduceParseTree(CompilationUnitDeclaration unit)", "diff": ["-\t// remove statements from methods that have no potential matching nodes", "+\t// remove statements from methods that have no possible matching nodes", "-\t\tpurgeMethodStatements(type, hasPotentialNodes(type.declarationSourceStart, type.declarationSourceEnd));", "+\t\tpurgeMethodStatements(type, hasPossibleNodes(type.declarationSourceStart, type.declarationSourceEnd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3ba7483903722658112ccafa6bf1495", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " \tpublic void testMissingCommentsErrorPublic()", "signatureAfterChange": " \tpublic void testMissingCommentsErrorPublic()", "diff": ["-\t\trunNegativeTest(MissingComments, resultForMissingComments(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(MISSING_COMMENTS, resultForMissingComments(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3bc6fe78715851dfd6d2be8b426cec4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "458161dc550c876a0d717a9a36eda696046c367f", "commitAfterChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " public void reportSuperTypeReference(TypeReference typeRef, IJavaElement type, int accuracy) throws CoreException", "signatureAfterChange": " public void reportSuperTypeReference(TypeReference typeRef, IJavaElement type, int accuracy) throws CoreException", "diff": ["-\tthis.pattern.matchReportReference(typeRef, type, accuracy, this);", "+\tthis.patternLocator.matchReportReference(typeRef, type, accuracy, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3c244f301c2c455676f7fc44ca180f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/SingleLineTestCase.java", "commitBeforeChange": "e944f831810e143e8894d05428eb208a2cd78cce", "commitAfterChange": "45b2548f21c6553964603037785b1fef0bb3e0d3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testClearBlankLines2()", "signatureAfterChange": "  \tpublic void testClearBlankLines2()", "diff": ["-\t\t\t? PREFIX + \"test\" + DELIMITER + PREFIX + \"test\" + DELIMITER + \"//\"+ DELIMITER + PREFIX + \"test\"", "+\t\t\t? PREFIX + \"test\" + DELIMITER + PREFIX + \"test\" + DELIMITER + PREFIX + DELIMITER + PREFIX + \"test\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3e453d43eb355a65a9aa99cb77377e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "98f970f58fc61208a8cdd52e3b9981ef32c5937b", "commitAfterChange": "29a8044fc706583901ff89364d428dff04f6a567", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate void removeAptBuildProblemMarkers( IJavaProject jproj )", "signatureAfterChange": " \tprivate void removeAptBuildProblemMarkers( IJavaProject jproj )", "diff": ["-\t\tSet<IJavaProject> jprojects = (jproj == null) ? _project2Factories.keySet() : Collections.singleton(jproj);", "+\t\t// note that _project2Java6Factories.keySet() should be same as that for Java5.", "+\t\tSet<IJavaProject> jprojects = (jproj == null) ? _project2Java5Factories.keySet() : Collections.singleton(jproj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3e6c056c350d9bbf9ba754957720f3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public void testTypeRefAll_MethodParameter() throws CoreException", "signatureAfterChange": " public void testTypeRefAll_MethodParameter() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, PARAMETER_TYPE_DECLARATION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());", "+\tsearch(\"*\", TYPE, PARAMETER_DECLARATION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4020378a578c1f6761497e3e4bf597c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "c8d6b01292fd993c39b64afaf6111306da02b683", "commitAfterChange": "9eeed8229f525e28410b8c63eb935e1578fd1a6d", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " \tprotected Map getElementsOutOfSynchWithBuffers()", "signatureAfterChange": " \tprotected HashSet getElementsOutOfSynchWithBuffers()", "diff": ["-\tprotected Map getElementsOutOfSynchWithBuffers() {", "+\tprotected HashSet getElementsOutOfSynchWithBuffers() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f413ceb951411441f6f85d824ddd2de9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic void testInvalidTagsNotVisibleRefConstructorErrorTagsPublic()", "signatureAfterChange": " \tpublic void testInvalidTagsNotVisibleRefConstructorErrorTagsPublic()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PUBLIC_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f41bd9440fc73cdb41709dba24df35a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "ec83f4485fd98b95e4e8e2158e7e66ce8f1734fe", "commitAfterChange": "7adfa7be8ae66fc84228ad62675a4fa20e5c18a3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic final boolean checkCastTypesCompatibility( \t\tBlockScope scope, \t\tTypeBinding castType, \t\tTypeBinding expressionType, \t\tExpression expression)", "signatureAfterChange": " \tpublic final boolean checkCastTypesCompatibility( \t\tScope scope, \t\tTypeBinding castType, \t\tTypeBinding expressionType, \t\tExpression expression)", "diff": ["-\t\tBlockScope scope,", "+\t\tScope scope,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4202a73085be180383280f45aceccb3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t\tpublic boolean match(ForStatement node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(EnumConstantDeclaration node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(EnumConstantDeclaration node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f42420e1a0a3ae041ca56ac12c3a8db1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "da3abb814c31b6e1c2d43312de494af316e19273", "commitAfterChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean checkDeprecation(int javadocStart, int javadocEnd)", "signatureAfterChange": " \tpublic boolean checkDeprecation(int javadocStart, int javadocEnd)", "diff": ["-\t\t\t\tparseComment(javadocStart, javadocEnd);", "+\t\t\t\tcommentParse(javadocStart, javadocEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4269d5bce135d2c88cde54c2d9f4b32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/DOMInitializer.java", "commitBeforeChange": "ab36391231f1ea61e75e0e00b3dc8ffe91eda55e", "commitAfterChange": "6c476fc2e300888d931411f675ed8c5c5f714198", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r protected void appendMemberBodyContents(CharArrayBuffer buffer)", "signatureAfterChange": "\r protected void appendMemberBodyContents(CharArrayBuffer buffer)", "diff": ["-\t\tbuffer.append(\"{}\").append(JavaModelManager.LINE_SEPARATOR); //$NON-NLS-1$\r", "+\t\tbuffer.append(\"{}\").append(Util.LINE_SEPARATOR); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4307e09bd24bde7370409160d2070d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyElementsOperation.java", "commitBeforeChange": "48d2e5271b9ec9e3f9d53b669ddceb5e8a4c0aff", "commitAfterChange": "a78da08c77ccead3814d2a0c0dfa686cde302733", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void processElement(IJavaElement element) throws JavaModelException", "signatureAfterChange": " protected void processElement(IJavaElement element) throws JavaModelException", "diff": ["-\t\tDeleteElementsOperation deleteOp = new DeleteElementsOperation(new IJavaElement[] { element }, this.force);", "+\t\tJavaModelOperation deleteOp = new DeleteElementsOperation(new IJavaElement[] { element }, this.force);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f45c328ebc86c3c669c37c9cb6d41ff1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected void consumeSingleTypeImportDeclarationName()", "signatureAfterChange": " protected void consumeSingleTypeImportDeclarationName()", "diff": ["-\tthis.patternLocator.match(this.astStack[this.astPtr], this.matchSet);", "+\tthis.patternLocator.match(this.astStack[this.astPtr], this.nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4608d41d692410c47c6b837e17939e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CaseStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tif ((bits & IsReachableMASK) == 0) {", "+\t\tif ((bits & IsReachable) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f47bc9ba207512081030ee54685da353", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocBugsCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  public void testBug115662c() throws JavaModelException", "signatureAfterChange": "  public void testBug115662c() throws JavaModelException", "diff": ["-\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DICENNRNS+\"}\"", "+\t\t\"toString[METHOD_REF]{toString(), Ljava.lang.Object;, ()Ljava.lang.String;, toString, null, \"+this.positions+R_DRICENNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4b7e0740894f1d2c56c10926c888c78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \r     public int hashCode()", "signatureAfterChange": "      public int hashCode()", "diff": ["-\r", "-    public int hashCode(){\r", "-        return _annoAstNode.hashCode();\r", "-    }\r", "+", "+    public int hashCode(){", "+        return _domAnnotation.hashCode();", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4bea13e63af9fe21222e27f2d5eec9e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic boolean visit(DefaultCase defaultCaseStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(DefaultCaseStatement defaultCaseStatement, BlockScope scope)", "diff": ["-\tpublic boolean visit(DefaultCase defaultCaseStatement, BlockScope scope) {", "+\tpublic boolean visit(DefaultCaseStatement defaultCaseStatement, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4c59e4186e9c9741d9346b094703e21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " public boolean hasStructuralChanges(byte[] newBytes, boolean orderRequired, boolean excludesSynthetic)", "signatureAfterChange": " public boolean hasStructuralChanges(byte[] newBytes, boolean orderRequired, boolean excludesSynthetic)", "diff": ["-\t\t\t| TagBits.HasInconsistentHierarchy; // different hierarchy status ?", "+\t\t\t| TagBits.HierarchyHasProblems; // different hierarchy status ?", "-", "+\t\t", "+\t\t// missing types"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4dafd01ed10a99dbdebe310aba41cc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "9f141d55e2af9b37128bf7c5971a811e92b8911e", "commitAfterChange": "a6f843d25df9099f92853bc4c288a7fde6d9a288", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\tfinal Object insertSpaceBeforeParenthesizedExpressionInReturnOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_PARENTESIZED_EXPRESSION_IN_RETURN);", "+\t\tfinal Object insertSpaceBeforeParenthesizedExpressionInReturnOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_PARENTHESIZED_EXPRESSION_IN_RETURN);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4e4854ed2e010ae42703255846d430e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/Index.java", "commitBeforeChange": "502428a56ac1c33f406a983668ed7a632d288c0f", "commitAfterChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void addIndexEntry(char[] category, char[] key, SearchDocument document)", "signatureAfterChange": " public void addIndexEntry(char[] category, char[] key, InternalSearchDocument document)", "diff": ["-public void addIndexEntry(char[] category, char[] key, SearchDocument document) {", "+public void addIndexEntry(char[] category, char[] key, InternalSearchDocument document) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4eb0cac0094080b604fcd5dd9ea33eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tprivate void formatEmptyStatement()", "signatureAfterChange": " \t \tprivate void formatEmptyStatement()", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4eb58c9072812856b412fa24f1164db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  public void markedAsNullOrNonNullInAssertExpression(VariableBinding local)", "signatureAfterChange": "  public void markedAsNullOrNonNullInAssertExpression(LocalVariableBinding local)", "diff": ["-public void markedAsNullOrNonNullInAssertExpression(VariableBinding local) {", "+public void markedAsNullOrNonNullInAssertExpression(LocalVariableBinding local) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4fd38ef7b5aec71443b011e2690150f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExclusionPatternsTests.java", "commitBeforeChange": "346130010d76683e5f7c7fe77c398c866b7d33a4", "commitAfterChange": "0b44bd0641e0cf63457211612036fa0be8686df0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void testCreateExcludedPackage() throws CoreException", "signatureAfterChange": " public void testCreateExcludedPackage() throws CoreException", "diff": ["-\tassertElementsEqual(", "+\tassertSortedElementsEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4ffbdebf6cfc0142f08bffbe0030444", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void endVisit(AnnotationReturnStatement statement, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(JavadocReturnStatement statement, BlockScope scope)", "diff": ["-\tpublic void endVisit(AnnotationReturnStatement statement, BlockScope scope) {", "+\tpublic void endVisit(JavadocReturnStatement statement, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f51746613d83c588de280232e2c72784", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " public void testSearchPatternValidMatchRule46()", "signatureAfterChange": " public void testSearchPatternValidMatchRule46()", "diff": ["-\t\tSearchPattern.R_CAMEL_CASE_MATCH);", "+\t\tSearchPattern.R_CAMELCASE_SAME_PART_COUNT_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f521f3e9f748ff488c4337e61502119a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompoundAssignment.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\treturn this.expressionType = lhsType;", "+\treturn this.resolvedType = lhsType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f532c2fd08eb9b7907b9c58e96290022", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "diff": ["-\t\treturn (methodDeclaration.bits & ASTNode.HasLocalTypeMASK) != 0; // continue only if it has local type", "+\t\treturn (methodDeclaration.bits & ASTNode.HasLocalType) != 0; // continue only if it has local type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f53afedefe787b5237d0db3e0de303cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  public void test048() throws JavaModelException", "signatureAfterChange": "  public void test048() throws JavaModelException", "diff": ["-\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f541ebf79fe3a0b7b0eeec306a337912", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/JavaBuilder.java", "commitBeforeChange": "3cb212c139b785d5942036354807eebced06845d", "commitAfterChange": "1e824a6f76b10e480f47e7bb3a7a70a5562012eb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r private void recordNewState(State state)", "signatureAfterChange": "\r \r private void recordNewState(State state)", "diff": ["-\tJavaModelManager.getJavaModelManager().setLastBuiltState2(currentProject, state);\r", "+\tJavaModelManager.getJavaModelManager().setLastBuiltState(currentProject, state);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f54a4db58b997590e26ce3fc4a515dbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/BufferTests.java", "commitBeforeChange": "e15598faeaefd4a21bd9644d10bdb872e013a3cb", "commitAfterChange": "2b1f97cd9b63f274ba3e505dd8fb0edeaae91029", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testAppend() throws CoreException", "signatureAfterChange": " public void testAppend() throws CoreException", "diff": ["-\t\tassertEquals(", "+\t\tassertSourceEquals("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f54afa909d5290adee09af02b416db84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkTypeVariableMethods()", "signatureAfterChange": " void checkTypeVariableMethods()", "diff": ["-\t\t\t\t\tif (otherInheritedMethod != null && areMethodsEqual(inheritedMethod, otherInheritedMethod)) {", "+\t\t\t\t\tif (otherInheritedMethod != null && doesMethodOverride(inheritedMethod, otherInheritedMethod)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f54eb26a368cac3fa7bd70977524fba3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "da8689e6058c8df72d6de5be59efe4e5eaaa5d49", "commitAfterChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \r public static void searchAllPossibleSubTypes(\r \tIWorkspace workbench,\r \tIType type,\r \tIJavaSearchScope scope,\r \tfinal Hashtable binariesFromIndexMatches,\r \tfinal IPathRequestor pathRequestor,\r \tint waitingPolicy,\r \tIProgressMonitor progressMonitor)  throws JavaModelException, CoreException", "signatureAfterChange": "\r \r public static void searchAllPossibleSubTypes(\r \tIWorkspace workbench,\r \tIType type,\r \tIJavaSearchScope scope,\r \tfinal Map binariesFromIndexMatches,\r \tfinal IPathRequestor pathRequestor,\r \tint waitingPolicy,\r \tIProgressMonitor progressMonitor)  throws JavaModelException, CoreException", "diff": ["-\tfinal Hashtable binariesFromIndexMatches,\r", "+\tfinal Map binariesFromIndexMatches,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f55b683635fbd60dc0ad94e1e336814e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "645b7bfaa2fa6e51ee8178c0b98a65d610d989c2", "commitAfterChange": "6cb5df5deb874bcd03782569c94840e1aa61cfba", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type)", "signatureAfterChange": "\r protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type)", "diff": ["-\t\t\tif ( CharOperation.equals(qualification, CharOperation.concatWith(type.getPackage().compoundName, '.'))) {\r", "+\t\t\tif ( CharOperation.equals(pkg, CharOperation.concatWith(type.getPackage().compoundName, '.'))) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f55d3f34d39246825cbd5cb19a3b000c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AptReconcileTests.java", "commitBeforeChange": "ec541dd033ad27d9ab55acb5cb4211fa3af9e906", "commitAfterChange": "5bc936c43945cd38fd8a7444d6690225eec1af93", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void testBasicReconcile() throws Exception", "signatureAfterChange": " \t \tpublic void testBasicReconcile() throws Exception", "diff": ["-\t\tString fname = TEST_FOLDER + \"/X.java\";", "+\t\tString fname = _testFolder + \"/X.java\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f56941e42d54ee0116d0b460e927b49d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetReturnStatement.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tthis.expression.bits &= ~ValueForReturnMASK;", "+\tthis.expression.bits &= ~IsReturnedValue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f56c95caf2a5e5a128562c233eaf0dcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/IAbstractSyntaxTreeVisitor.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tvoid endVisit(Case caseStatement, BlockScope scope);", "signatureAfterChange": " \tvoid endVisit(CaseStatement caseStatement, BlockScope scope);", "diff": ["-\tvoid endVisit(Break breakStatement, BlockScope scope);", "-\tvoid endVisit(Case caseStatement, BlockScope scope);", "+\tvoid endVisit(BreakStatement breakStatement, BlockScope scope);", "+\tvoid endVisit(CaseStatement caseStatement, BlockScope scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f572a080863641be77642b9a9b944bb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "82dc67de142f757f6098e678017a2b32f752c9b7", "commitAfterChange": "5249d37677c0ce4d66ab262efb5c3dd4aa089796", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 166, "signatureBeforeChange": " public void inheritedMethodsHaveIncompatibleReturnTypes(ASTNode location, MethodBinding[] inheritedMethods, int length)", "signatureAfterChange": " public void inheritedMethodsHaveIncompatibleReturnTypes(ASTNode location, MethodBinding[] inheritedMethods, int length)", "diff": ["-\t\tIProblem.IncompatibleReturnType,", "+\t\tIProblem.InheritedIncompatibleReturnType,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f57cc619f69450bf040a4875192cf8af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6fdaa2b9d78c89a1ed2269f5279c3e02cee4b6cd", "commitAfterChange": "8ec1d344fc5f9b16a04a2a15e36cb4db52cac4eb", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic void resetTemporaryCache()", "signatureAfterChange": " \tpublic void resetTemporaryCache()", "diff": ["-\t\tthis.temporaryCache.setCurrent(null);", "+\t\tthis.temporaryCache.set(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f586ff1d0ffc7253aba9a2f5f6f1f1f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "bffd05273174fba670489cd637d40ac2a4d0913b", "commitAfterChange": "5cda6ee5d9726ecd4c3800dc98f96b9913f2498c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \t\r \tpublic void build(boolean computeSubtypes)", "signatureAfterChange": "\r \t\r \tpublic void build(boolean computeSubtypes)", "diff": ["-\t\tif (this.hierarchy.fType == null || computeSubtypes) {\r", "+\t\tif (this.hierarchy.type == null || computeSubtypes) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f589f0f9b7d1fc57f92e91dfd5ec41ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/MementoTests.java", "commitBeforeChange": "2f9db6d5da33c7aae5495cb19cb4e15019a503c5", "commitAfterChange": "d272b4067753c3b8224afb90d2ae4fc124cff69f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testExternalJarBinaryTypeMemento() throws JavaModelException", "signatureAfterChange": " public void testExternalJarBinaryTypeMemento() throws JavaModelException", "diff": ["-\t\t\"=P/\" + getExternalJCLPath() + \"<p(X.class[X\",", "+\t\t\"=P/\" + getEscapedExternalJCLPath() + \"<p(X.class[X\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f58b1f5d9be9c09df16a066aed87341a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_5.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuiteWithMinimalCompliance(testClass(), F_1_5);", "+\t\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f59b9c80ea7fb7a72660f617179a6ca3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CodeCorrectionTestsRequestor.java", "commitBeforeChange": "4b36d8d902157ef078af37f3d78b4138152d8889", "commitAfterChange": "9ef1e97f6b56081e8537310fc409f77c2ce56944", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic void acceptInterface(char[] packageName,char[] interfaceName,char[] correctionName,int modifiers,int correctionStart,int correctionEnd)", "signatureAfterChange": " \t \tpublic void acceptInterface(char[] packageName,char[] interfaceName,char[] correctionName,int modifiers,int correctionStart,int correctionEnd)", "diff": ["-\t\tfSuggestions.addElement(new Suggestion(correctionName, correctionStart, correctionEnd));", "+\t\tsuggestions.addElement(new Suggestion(correctionName, correctionStart, correctionEnd));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5a0034eb7a9d991ef7fd73777980844", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "207ee9452fd93bac118ef54e81b9d1aad5d49a34", "commitAfterChange": "7480a7a028b761dd989d906922ba7da2f58b3ecc", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \t \tpublic String toString()", "signatureAfterChange": " \t \tpublic String toString()", "diff": ["-\t\tif (NewCodeFormatter.DEBUG) {", "+\t\tif (CodeFormatterVisitor.DEBUG) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5a0b177016206ace4303657a8eb38d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank)", "signatureAfterChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank)", "diff": ["-\tpublic TypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank) {", "+\tpublic ITypeAnnotationWalker toTypeParameter(boolean isClassTypeParameter, int rank) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5aebe8198eb52209a8b7a5862b72610", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic void testMissingTagsJavadocSupportDisabled()", "signatureAfterChange": " \tpublic void testMissingTagsJavadocSupportDisabled()", "diff": ["-\t\trunConformReferenceTest(MissingTags);", "+\t\trunConformReferenceTest(MISSING_TAGS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b8056041bbd76a2c45c2a5858ceaca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ASTImplTests.java", "commitBeforeChange": "197b39bd97634f2d50539573e68e08ab73d7c718", "commitAfterChange": "9d8f1ed123fbe8bd94c62a19d7bf62f396b087ea", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void endVisit(SingleMemberAnnotation annotation, ClassScope scope)", "signatureAfterChange": " public void endVisit(SingleMemberAnnotation annotation, BlockScope scope)", "diff": ["-public void endVisit(SingleMemberAnnotation annotation, ClassScope scope) {", "+public void endVisit(SingleMemberAnnotation annotation, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f17b32721b61777a1a0da0bfb1f514", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": " public void if_icmpne(Label lbl)", "signatureAfterChange": " public void if_icmpne(BranchLabel lbl)", "diff": ["-public void if_icmpne(Label lbl) {", "+public void if_icmpne(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f60d4220aac737ff1fb9f2e2b7c14730", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "0b996c62d78a14d0f0ee5313e3a85270bb3aeb0f", "commitAfterChange": "58aaea35ae4c64a4ecebe06d6b1ab1679e04698a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "          public Map<IFile, Set<IFile>> getAllGeneratedFiles()", "signatureAfterChange": "          public Map<IFile, Set<IFile>> getAllGeneratedFiles()", "diff": ["-    public Map<IFile, Set<IFile>> getAllGeneratedFiles(){ return _allGeneratedFiles; }", "+    public Map<IFile, Set<IFile>> getAllGeneratedFiles(){ return _allGeneratedSourceFiles; }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6158ff6f06a7740a3e1813030db28ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "5464f8b56e2b620bf0f37dc5a7c218f835be9cef", "commitAfterChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate boolean connectSuperclass()", "signatureAfterChange": " \tprivate boolean connectSuperclass()", "diff": ["-\t\t\t\treferenceContext.superclass.binding = superclass;", "+\t\t\t\treferenceContext.superclass.resolvedType = superclass;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f616d77d78e00e2b5657217fd46ffb5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "490ee096388ec5ea05bab9dd08dfca50fb5379f6", "commitAfterChange": "3f75c9397ff53f65021c19499da76d98c9e23550", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\t\t\t \t\tpublic CompilationParticipant[] getCompilationParticipants(IJavaProject project)", "signatureAfterChange": " \t\t\t\t \t\tpublic CompilationParticipant[] getCompilationParticipants(IJavaProject project)", "diff": ["-\t\t\tif (participants == NO_PARTICPANTS)", "+\t\t\tif (participants == NO_PARTICIPANTS)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f63389503e990d90bff371ffc4c6fbbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/AbstractSyntaxTreeVisitorAdapter.java", "commitBeforeChange": "73e6c55b6cebcb032c8128286708483f86167b64", "commitAfterChange": "5326f4925981afee39790c88bc133bd18e542033", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void endVisit(AnnotationArgument argument, BlockScope scope)", "signatureAfterChange": " \tpublic void endVisit(AnnotationSingleNameReference argument, BlockScope scope)", "diff": ["-\tpublic void endVisit(AnnotationArgument argument, BlockScope scope) {", "-\t\t// do nothing by default", "-\t}", "+\t}", "+\tpublic void endVisit(AnnotationSingleNameReference argument, BlockScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f635a090fc96ae771d2b2a035452d31f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "ef9aa5d885f59c5d1fec41344fad011612f56b8f", "commitAfterChange": "e091336c07cf02669cae26a706b1bad128657a4f", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic void initializeParser()", "signatureAfterChange": "  \tpublic void initializeParser()", "diff": ["-\t\tthis.parser = new Parser(this.problemReporter, this.options.parseLiteralExpressionsAsConstants);", "+\t\tthis.parser = new CommentRecorderParser(this.problemReporter, this.options.parseLiteralExpressionsAsConstants);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6529af28916e75c48e9cc2fb5a4c977", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public void test032() throws JavaModelException", "signatureAfterChange": "  public void test032() throws JavaModelException", "diff": ["-\t\t\"BasicTestTypes.BasicTestTypesMember[TYPE_REF]{BasicTestTypesMember, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes$BasicTestTypesMember;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"BasicTestTypes.BasicTestTypesMember[TYPE_REF]{BasicTestTypesMember, javadoc.types.tags, Ljavadoc.types.tags.BasicTestTypes$BasicTestTypesMember;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f659260e2495733146c8edb33f75d9d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/CompilationProcessorEnv.java", "commitBeforeChange": "bfcd45867d04fefcde8c411b2c4f613fed962f2b", "commitAfterChange": "8360857ac96415dcd60ac94fbc284e7801424ade", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          public static ProcessorEnvImpl newBuildEnv(     \t\tICompilationParticipantResult[] filesWithAnnotation,     \t\tfinal IFile[] additionalFiles,     \t\tIJavaProject javaProj )", "signatureAfterChange": "          public static ProcessorEnvImpl newBuildEnv(     \t\tICompilationParticipantResult[] filesWithAnnotation,     \t\tfinal ICompilationParticipantResult[] additionalFiles,     \t\tIJavaProject javaProj )", "diff": ["-    \t\tfinal IFile[] additionalFiles,", "+    \t\tfinal ICompilationParticipantResult[] additionalFiles,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f68535e5c4c54f6ded8765902e240363", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void testInvalidTagsConstructorErrorTagsProtected()", "signatureAfterChange": " \tpublic void testInvalidTagsConstructorErrorTagsProtected()", "diff": ["-\t\trunNegativeTest(InvalidReferencesConstructorJavadocComments, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));", "+\t\trunNegativeTest(CONSTRUCTORS_INVALID_COMMENT, resultForInvalidTagsMethodOrConstructor(PROTECTED_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f68f7664ff7308786b2a145e50e43f74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testAccessRestriction4() throws Exception", "signatureAfterChange": " public void testAccessRestriction4() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.ENABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6acf84e6656281b93cac01732bd768d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnArgumentName.java", "commitBeforeChange": "32a99f8c41e7f6505e98564a2fe955f48d80f711", "commitAfterChange": "38819b0397930dbfdcf4973c1bb1a5b3cfbe15eb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \t\r \tpublic String toString(int tab)", "signatureAfterChange": "\r \t\r \tpublic String toString(int tab)", "diff": ["-\t\ts += new String(name);\r", "+\t\ts += new String(realName);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6ad2a853905d97c240c5fbc4e0746f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateCompilationUnitOperation.java", "commitBeforeChange": "d0954d54228cfe7f2d4640873279833f7ad6ecb1", "commitAfterChange": "906091ec44775df6e15be24da13090f39ca40ebb", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected ISchedulingRule getSchedulingRule()", "signatureAfterChange": " protected ISchedulingRule getSchedulingRule()", "diff": ["-\treturn getParentElement().getResource();", "+\treturn getParentElement().getSchedulingRule();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6b178602280c7c7e1ae51349ca1f0c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "bd9b00bcf9923b9da6ff38651a157fa6bc3f2dc8", "commitAfterChange": "ff2b96761b3897e8f6c8feeb8c31198c182dd190", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, InitializationFlowContext initializationContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, InitializationFlowContext initializationContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE) == 0) {", "+\t\t\t\tif ((flowInfo.tagBits & FlowInfo.UNREACHABLE_OR_DEAD) == 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6bf99b82efef682d7d90361d6ad05db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "25a0c02d6979e76d70832f78f8eb60bd371c0ad1", "commitAfterChange": "1b6413921860c74cfa469f859f6fc627d6400adf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\treturn this.functionalInterfaceType;", "+\t\treturn this.resolvedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6c409c76ee524b5e40202ac85f6c2e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Break.java", "commitBeforeChange": "e91a03d6ffd76cb11afae070200dbbbe73ce30b0", "commitAfterChange": "1ea5f94648ece67f779d3f9547f2c42cabdfedc2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\treturn FlowInfo.DeadEnd;", "+\t\treturn FlowInfo.DEAD_END;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6d141879eff44734398ed69c711f2c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AnnotationMethodDeclaration.java", "commitBeforeChange": "100013bece0eb4f533563100e2e2c492eafe5eed", "commitAfterChange": "a836581cacf8d7a555ca92aa4df554df081b1e09", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t\t\tscope.problemReporter().invalidAnnotationMethodType(this);", "+\t\t\t\tscope.problemReporter().invalidAnnotationMemberType(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6d6422eb60e3d9990b9e338e17a7381", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "f04f8b342c7b71da1a56858ab790d24d761e7d9c", "commitAfterChange": "cb9adfe2a810fff7861c89a641a842e760d0d109", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 32, "signatureBeforeChange": " \t \t \tprivate void updateProjectClasspath( JavaProject jp, IFolder folder, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "signatureAfterChange": " \t \t \tprivate void updateProjectClasspath( IJavaProject jp, IFolder folder, IProgressMonitor progressMonitor ) \t\tthrows JavaModelException", "diff": ["-\tprivate void updateProjectClasspath( JavaProject jp, IFolder folder, IProgressMonitor progressMonitor )", "+\tprivate void updateProjectClasspath( IJavaProject jp, IFolder folder, IProgressMonitor progressMonitor )", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7006b52473b92ce3972ab835f83964c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementRequestor.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public IPackageFragment[] getPackageFragments()", "signatureAfterChange": "\r public IPackageFragment[] getPackageFragments()", "diff": ["-\tfPackageFragments.copyInto(results);\r", "+\tfPackageFragments.toArray(results);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f704883a4969edd4904548b19253f8ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public synchronized void removeIndex(IPath path)", "signatureAfterChange": " public synchronized void removeIndex(IPath path)", "diff": ["-\t\tJobManager.verbose(\"removing index \" + path); //$NON-NLS-1$", "+\t\tUtil.verbose(\"removing index \" + path); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f736a74212817e4073526e4969a7bca1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredField.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public FieldDeclaration updatedFieldDeclaration()", "signatureAfterChange": " public FieldDeclaration updatedFieldDeclaration()", "diff": ["-\t\t\tif (this.anonymousTypeCount > 0) fieldDeclaration.bits |= ASTNode.HasLocalTypeMASK;", "+\t\t\tif (this.anonymousTypeCount > 0) fieldDeclaration.bits |= ASTNode.HasLocalType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7388f647ab91c3a7ed2646de92c1046", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a73c1b70646c33788c416636d54ca7b824b36c44", "commitAfterChange": "89bcdbe3377ffa239857ce6e220c3e9a2f048f0c", "methodNumberBeforeChange": 453, "methodNumberAfterChange": 454, "signatureBeforeChange": " \tpublic void test434()", "signatureAfterChange": " \tpublic void test434()", "diff": ["-\t\tpreferences.tab_size = 3;", "+\t\tpreferences.indentation_size = 3;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f74ea794d3cb95cc2b35d7239701278b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c8e7b4e01df9aa644d2160be3783e770b3cf2574", "commitAfterChange": "ca8ac59322f9a5546de88cf1c276f2947f3dabe2", "methodNumberBeforeChange": 233, "methodNumberAfterChange": 235, "signatureBeforeChange": "  public void parse(ConstructorDeclaration cd, CompilationUnitDeclaration unit)", "signatureAfterChange": "  public void parse(ConstructorDeclaration cd, CompilationUnitDeclaration unit)", "diff": ["-\tgoForConstructorBlockStatementsopt();", "+\tgoForBlockStatementsopt();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f74fe765c1ef3fa90dd0b08de668d2c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "12f65faa0a3b984e9751d243a3eab6e6ab078ed7", "commitAfterChange": "36d2cf066100445cbe45dd4cf851204404f7d76f", "methodNumberBeforeChange": 432, "methodNumberAfterChange": 432, "signatureBeforeChange": " protected boolean resumeOnSyntaxError()", "signatureAfterChange": " protected boolean resumeOnSyntaxError()", "diff": ["-\t\tthis.scanner.lastPosistion = this.scanner.currentPosition;", "+\t\tthis.scanner.lastPosition = this.scanner.currentPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75954154b20d3558fe5021d6b09247a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "6f559832866ec7957220224e260ced70fbcf727a", "commitAfterChange": "f3a6f459efd2ac1aed8a2fbc164dee41b4c19dd6", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tint operatorSignature = ResolveTypeTables[operator][(leftTypeId << 4) + rightTypeId];", "+\t\tint operatorSignature = OperatorSignatures[operator][(leftTypeId << 4) + rightTypeId];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f75e5a36bb786a50d0bede626bcabed2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testRenameIncludedPackage2() throws CoreException", "signatureAfterChange": " public void testRenameIncludedPackage2() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f771b37ccdb78ab27ecc8919b9afbcc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 125, "methodNumberAfterChange": 125, "signatureBeforeChange": "  public void test156() throws JavaModelException", "signatureAfterChange": "  public void test156() throws JavaModelException", "diff": ["-\t\t\"Class[TYPE_REF]{Class, java.lang, Ljava.lang.Class;, null, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"Class[TYPE_REF]{Class, java.lang, Ljava.lang.Class;, null, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f77fa1a768617c183134256dbe62b05c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "e6029c8b1adfe1296ee554ed42f00e5a663cecbf", "commitAfterChange": "d3d92e370789aaaed8a46c804d74e3cb2b4bb167", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic boolean visit(ParameterizedType node)", "signatureAfterChange": " \tpublic boolean visit(PackageQualifiedType node)", "diff": ["+\t */", "+\tpublic boolean visit(PackageQualifiedType node) {", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f784448019f4e368b90c2f29ec043500", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "458161dc550c876a0d717a9a36eda696046c367f", "commitAfterChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void reportImport(ImportReference reference, int accuracy) throws CoreException", "signatureAfterChange": " public void reportImport(ImportReference reference, int accuracy) throws CoreException", "diff": ["-\tthis.pattern.matchReportImportRef(reference, null, importHandle, accuracy, this);", "+\tthis.patternLocator.matchReportImportRef(reference, null, importHandle, accuracy, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f788ad81af7d95f36b7bcdaee8aea8ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": "  public void test041() throws JavaModelException", "signatureAfterChange": "  public void test041() throws JavaModelException", "diff": ["-\t\t\"method[JAVADOC_METHOD_REF]{{@link #method()}, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DICNRNSIT+\"}\"", "+\t\t\"method[JAVADOC_METHOD_REF]{{@link #method()}, Ljavadoc.text.BasicTestTextIns;, ()V, method, null, \"+this.positions+R_DRICNRNSIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f78d717690fdc41e0c1f79f9e02a0570", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void testInvalidTagsClassErrorTagsPrivate()", "signatureAfterChange": " \tpublic void testInvalidTagsClassErrorTagsPrivate()", "diff": ["-\t\trunNegativeTest(InvalidReferencesClassJavadocComments, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));", "+\t\trunNegativeTest(CLASSES_INVALID_COMMENT, resultForInvalidTagsClassOrField(PRIVATE_VISIBILITY));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f78e9230be2c37affc6851e3d551f750", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchParticipantTests.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void setUpSuite() throws Exception", "signatureAfterChange": "  \tpublic void setUpSuite() throws Exception", "diff": ["-\t\tdeleteFile(getIndexLocation().toFile());", "+\t\tdeleteResource(getIndexLocation().toFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f795d05a61a0968ee1b1214865e59f06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StaticImportTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuite(testClass());", "+\t\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7a3ca8646e35a324c0dd4d4faa6058d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptProject.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void projectClean( boolean deleteFiles )", "signatureAfterChange": " \t \tpublic void projectClean( boolean deleteFiles )", "diff": ["-\t\t_gfm.clearAllMaps();", "+\t\t_gfm.discardAllState();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c62f0ab9faa2c1ceff3de63e19189f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ASTVisitor.java", "commitBeforeChange": "a348185fc1394ba62b163286d4e293f1fc3fd0c0", "commitAfterChange": "65ed763b9d706d338d2d71213ef4b79f1a7dfcf5", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 233, "signatureBeforeChange": " \tpublic boolean visit(MemberValuePair pair, CompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit(MemberValuePair pair, ClassScope scope)", "diff": ["-\tpublic boolean visit(MemberValuePair pair, CompilationUnitScope scope) {", "+\tpublic boolean visit(MemberValuePair pair, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c633208f33d5ac5167329871c58230", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15JLS8Test.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 145, "methodNumberAfterChange": 145, "signatureBeforeChange": "     public void test0132() throws CoreException", "signatureAfterChange": "     public void test0132() throws CoreException", "diff": ["-    \ttype = arrayType.getComponentType();", "+    \ttype = arrayType.getElementType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7cdf520f14afb1375088b7032df2b22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementDeltaBuilder.java", "commitBeforeChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "commitAfterChange": "2e2e66f7f68b994d0931afecfd3c1e559acd59d5", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r private void removed(IJavaElement element)", "signatureAfterChange": "\r private void removed(IJavaElement element)", "diff": ["-\tthis.removed.addElement(element);\r", "+\tthis.removed.add(element);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e6701fb4c1fd86146db960de296b36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 187, "methodNumberAfterChange": 187, "signatureBeforeChange": "  \tpublic void test165()", "signatureAfterChange": "  \tpublic void test165()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7e7cfa38f2de3da55dceab0ec0c0dde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  public void test034() throws JavaModelException", "signatureAfterChange": "  public void test034() throws JavaModelException", "diff": ["-\t\t\"foo[FIELD_REF]{foo, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DICNRNS+\"}\"", "+\t\t\"foo[FIELD_REF]{foo, Ljavadoc.text.BasicTestTextIns;, I, foo, null, \"+this.positions+R_DRICNRNS+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7ebe41d8bfc28f4456a1d528cce5db0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ListRewrite.java", "commitBeforeChange": "a2d2be92ededb467e24ec541264fdd8abe9bb244", "commitAfterChange": "0325089db3ca0a8e6a36752438c4d3b535f031b0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic StructuralPropertyDescriptor getLocationInParent()", "signatureAfterChange": " \tpublic StructuralPropertyDescriptor getLocationInParent()", "diff": ["-\t\treturn this.childProperty;", "+\t\treturn this.childListProperty;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7fe54e21d03096594778af223a24183", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "372799d5bd955eabbf1069fe0bbf8aba8ea8af85", "commitAfterChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate static void checkAnnotations( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal Map<String, AnnotationTypeDeclaration> declarations, \t\t\tfinal ProcessorEnvImpl env)", "signatureAfterChange": " \tprivate static void checkAnnotations( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal Map<String, AnnotationTypeDeclaration> declarations, \t\t\tfinal ProcessorEnvImpl env)", "diff": ["-\t\t\tfinal Set<AnnotationTypeDeclaration> factoryDecls = getAnnotations(", "+\t\t\tfinal Set<AnnotationTypeDeclaration> factoryDecls = getFactorySupportedAnnotations(", "-\t}", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f815890927fe8c39dfc3989b5070d6ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "810d2a46e73e304780d3a58f117d6c63103b4e72", "commitAfterChange": "43bf242c384a6b4ad5daf26c5b4617ec68564235", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic boolean visit(ExtraDimension node)", "signatureAfterChange": " \tpublic boolean visit(Dimension node)", "diff": ["+\t */", "+\tpublic boolean visit(Dimension node) {", "+\t\treturn true;", "+\t}", "-\t */", "-\tpublic boolean visit(ExtraDimension node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f820cf6060e62f7dc59af2cd00577caa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["-\t\t\t\t\t\tSyntheticAccessMethodBinding accessor =", "+\t\t\t\t\t\tSyntheticMethodBinding accessor ="]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f82d0bb4e2f7e81610fbf8429c2c58c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": "  public void test057() throws JavaModelException", "signatureAfterChange": "  public void test057() throws JavaModelException", "diff": ["-\t\t\"foo[METHOD_REF]{foo(String), Ljavadoc.methods.tags.OtherTypes;, (Ljava.lang.String;)V, foo, (str), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"foo[METHOD_REF]{foo(String), Ljavadoc.methods.tags.OtherTypes;, (Ljava.lang.String;)V, foo, (str), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f831bc45afeb6c93026892fdcb4505da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.typeBinding = BooleanBinding;", "+\t\tthis.expressionType = BooleanBinding;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f839b1acf3b684952680b9af93be1be8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerStatementsRecoveryTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testStatementsRecovery02() throws CoreException", "signatureAfterChange": " public void testStatementsRecovery02() throws CoreException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f83a40388dd1b66e394aecd9dd169e45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6021d67f030c85737aa105da719e9a09cfc30ed", "commitAfterChange": "47da1e1f50b1360a7b560d74dfe1c60303fec552", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public synchronized Index getIndex(IPath indexLocation)", "signatureAfterChange": " public synchronized Index getIndex(IndexLocation indexLocation)", "diff": ["-public synchronized Index getIndex(IPath indexLocation) {", "+public synchronized Index getIndex(IndexLocation indexLocation) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8557b2c3a620173de7d82742829878e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic SearchEngine(IWorkingCopy[] workingCopies)", "signatureAfterChange": " \tpublic SearchEngine(IWorkingCopy[] workingCopies)", "diff": ["-\t\tthis.basicEngine = new SearchBasicEngine(units);", "+\t\tthis.basicEngine = new BasicSearchEngine(units);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8605ae7e5e3fc8ebee220414e20a625", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceTypeElementInfo.java", "commitBeforeChange": "5f2456aa4b2b769de40fe8c031c43b1afaff3ffc", "commitAfterChange": "7234934f3efed703cbf030a33d03d36a447aeef6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public ISourceImport[] getImports()", "signatureAfterChange": " public ISourceImport[] getImports()", "diff": ["-\t\t\tIImportDeclaration[] importDeclarations = this.fHandle.getCompilationUnit().getImports();", "+\t\t\tIImportDeclaration[] importDeclarations = this.handle.getCompilationUnit().getImports();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f873c43a83ec547dbcc3654b5ecf3dbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariablePattern.java", "commitBeforeChange": "bd6483f3cabfe3766f6db22ff5aa830fa8dfa3a6", "commitAfterChange": "7fab23d98d7da007d4ab0962fe5ae1e3b7c7bbea", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic LocalVariablePattern( \t\tboolean findDeclarations, \t\tboolean readAccess, \t\tboolean writeAccess, \t\tILocalVariable localVariable, \t\tint matchMode,  \t\tboolean isCaseSensitive)", "signatureAfterChange": " \t \tpublic LocalVariablePattern( \t\tboolean findDeclarations, \t\tboolean readAccess, \t\tboolean writeAccess, \t\tLocalVariable localVariable, \t\tint matchMode,  \t\tboolean isCaseSensitive)", "diff": ["-\t\tILocalVariable localVariable,", "+\t\tLocalVariable localVariable,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8836ca8d3d147a06c27b0b57f9ee617", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "f41df9b6ac9b62f616470e8ec0968732d823137f", "commitAfterChange": "2f379667b4f33f336f0003d6b2911b5403125b74", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "signatureAfterChange": " public void swapUnresolved(UnresolvedReferenceBinding unresolvedType, ReferenceBinding resolvedType, LookupEnvironment env)", "diff": ["-\t\tthis.tagBits |= this.leafComponentType.tagBits & (HasTypeVariable | HasWildcard);", "+\t\tthis.tagBits |= this.leafComponentType.tagBits & (HasTypeVariable | HasDirectWildcard);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f893c3e56c96f2dc8ab07e2bfe3ad8be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic boolean checkConstructors(Parser parser)", "signatureAfterChange": " \tpublic boolean checkConstructors(Parser parser)", "diff": ["-\t\t\t\t\t\tif (this.kind() == IGenericType.INTERFACE) {", "+\t\t\t\t\t\tif (this.kind() == IGenericType.INTERFACE_DECL) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f897264c1c77deb509634996e1cd2284", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "7aac6f03ecf70666410b0e689c91dafd6d67757a", "commitAfterChange": "465d091146b1d6997709777ea444048487da1d8d", "methodNumberBeforeChange": 88, "methodNumberAfterChange": 87, "signatureBeforeChange": " public void illegalExtendedDimensions(AnnotationTypeMemberDeclaration annotationTypeMemberDeclaration)", "signatureAfterChange": " public void illegalExtendedDimensions(AnnotationMethodDeclaration annotationTypeMemberDeclaration)", "diff": ["-public void illegalExtendedDimensions(AnnotationTypeMemberDeclaration annotationTypeMemberDeclaration) {", "+public void illegalExtendedDimensions(AnnotationMethodDeclaration annotationTypeMemberDeclaration) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8a5789369695dfd7e35ed612927f3e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "f5937020c6b957eed03745f57cfee671f23dd9b8", "commitAfterChange": "ad2aca1c2960107e50013b8f7866125addb168b4", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public boolean isRepeatableAnnotation()", "signatureAfterChange": " public boolean isRepeatableAnnotation()", "diff": ["-\treturn this.containerAnnotation != null;", "+\treturn this.containingAnnotation != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8abf2ddace161058b62093ef6f8d497", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "commitAfterChange": "c9e042ca313baf5eded9aef49e3870dc5764fbfc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public static IJavaElement projectOrJarFocus(InternalSearchPattern pattern)", "signatureAfterChange": "  public static IJavaElement projectOrJarFocus(SearchPattern pattern)", "diff": ["-public static IJavaElement projectOrJarFocus(InternalSearchPattern pattern) {", "+public static IJavaElement projectOrJarFocus(SearchPattern pattern) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8ca0058d45a7e305e3de19047582b77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "b6eb3741928f7f60040cd62cb39c2031ea7f1375", "commitAfterChange": "045fcd6169ea322b1f182f37db0e04a62252f1e0", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void generateNewCompilationUnitDOM(ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " protected void generateNewCompilationUnitDOM(ICompilationUnit cu) throws JavaModelException", "diff": ["+// TODO - JDOM - remove once model ported off of JDOM", "-\tIDOMNode child = generateElementDOM();", "+\tIDOMNode child = deprecatedGenerateElementDOM();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8cf728d7e85b1e80250b933dbf5f821", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTypeCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " public void test101() throws JavaModelException", "signatureAfterChange": " public void test101() throws JavaModelException", "diff": ["-\t\t\t\"ZBasicTestTypes[TYPE_REF]{ZBasicTestTypes, javadoc.types, Ljavadoc.types.ZBasicTestTypes;, null, null, \"+this.positions+R_DICUNR+\"}\"", "+\t\t\t\"ZBasicTestTypes[TYPE_REF]{ZBasicTestTypes, javadoc.types, Ljavadoc.types.ZBasicTestTypes;, null, null, \"+this.positions+R_DRICUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8d97ff2fa92b02f6a519040c7992f1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "a618dea008dd005a2062d94159d61d7900b021b7", "commitAfterChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void completeLocalTypes(Binding binding)", "signatureAfterChange": "  \tprivate void completeLocalTypes(Binding binding)", "diff": ["-\t\tswitch(binding.bindingType()) {", "+\t\tswitch(binding.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8df2bfc5877145b39b070eafe696d70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "3f2b1c5703a4dbb09af850179af8a2ba1e9f2ceb", "commitAfterChange": "efe1b963800101d15e2f1c2b4e66605dcbc6d9ac", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static final String concatWith(String[] array, char separator)", "signatureAfterChange": " \tpublic static final String concatWith(String[] array, char separator)", "diff": ["-\t\t\t\tbuffer.append('.');", "+\t\t\t\tbuffer.append(separator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8e9278b8a028283d149dfafdf6d3c07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 468, "methodNumberAfterChange": 470, "signatureBeforeChange": " \tpublic void test434()", "signatureAfterChange": " \tpublic void test434()", "diff": ["-\t\tpreferences.indentation_size = 3;", "+\t\tpreferences.tab_size = 3;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f7a397838f4098b120c82b1969adf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "82eb8210126dce9dcecaa23100608377607eb4d3", "commitAfterChange": "39a2af446e48bb6f168906e833c304457e17e4cf", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void testParameterizedTypeMultipleArguments01() throws CoreException", "signatureAfterChange": " \tpublic void testParameterizedTypeMultipleArguments01() throws CoreException", "diff": ["-\t\tParameterizedSourceType type = selectParameterizedSourceType(unit, \"g1.t.m.def.Generic<? extends Throwable, ? extends Exception, ? extends RuntimeException>\"); //$NON-NLS-1$", "+\t\tParameterizedSourceType type = selectParameterizedType(unit, \"g1.t.m.def.Generic<? extends Throwable, ? extends Exception, ? extends RuntimeException>\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f901e9fa49e5bffc2f0c9edbd0f8daca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "f63095af3c7deaeee47a62f089307467f872f35e", "commitAfterChange": "6e8431ed2d3ced2183b0880b86a760ea14397f82", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\t\t\t\t\tif (initializationType.isRawType() && (variableType.isParameterizedType() || variableType.isGenericType())) {", "+\t\t\t\t\t\tif (initializationType.isRawType() && (variableType.isBoundParameterizedType() || variableType.isGenericType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f903dff8a57d04dd999843dec80ad311", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompilationUnitTests.java", "commitBeforeChange": "b9048812dd88e4e03993f3f1485c45b1b5d06172", "commitAfterChange": "746639968f86f3ad41d15e0e45898b6cf0685369", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testGetCategories07() throws CoreException", "signatureAfterChange": " public void testGetCategories07() throws CoreException", "diff": ["-\tcreateWorkingCopy(", "+\tcreateWorkingCopyComputingProblems( /* compute problems to parse javadoc comments */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f905dc99e273958463a8ea5d342cad99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "22b7ea82364d9d28edf16765ae147884aca468bf", "commitAfterChange": "4727019eafeb1c95735e09e06a3be7c73c009066", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static IClassFileDisassembler createDefaultClassFileDisassembler()", "signatureAfterChange": " \tpublic static IClassFileDisassembler createDefaultClassFileDisassembler()", "diff": ["-\t\treturn new Disassembler();", "+\t\treturn new DeprecatedDisassembler();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f908dc74d90d37b5425181dd211e94d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "3d59334f5fb40926c8512874251a24cf438a401b", "commitAfterChange": "fa04bcc7aeac1403aeb17877212985395c1541ca", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tprivate void formatMessageSend( \t\tMessageSend messageSend, \t\tBlockScope scope, \t\tAlignment messageAlignment)", "signatureAfterChange": "  \tprivate void formatMessageSend( \t\tMessageSend messageSend, \t\tBlockScope scope, \t\tAlignment messageAlignment)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments);", "+\t\t\t// TODO use the new option once 49298 is fixed", "+\t\t\t// this.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_messagesend_arguments);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_between_empty_arguments);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f92ffa2d9274c8fa33bf4c6bfee1083f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic boolean visit(MethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(MethodInvocation node)", "diff": ["-\t\tif (node.getAST().apiLevel() >= AST.LEVEL_3_0) {", "+\t\tif (node.getAST().apiLevel() >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f940b9c65071c8c13be8cc96e09ad7f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void saveIndex(IIndex index) throws IOException", "signatureAfterChange": " public void saveIndex(IIndex index) throws IOException", "diff": ["-\t\t\t\t\tif (((IndexRequest) job).indexPath.equals(indexPath)) return;", "+\t\t\t\t\tif (((IndexRequest) job).containerPath.equals(indexPath)) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f94268e63ebf93acb5bc67ea758ab07e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "369ffd3db09511488e039ba2575df2eeea055320", "commitAfterChange": "a7e6b3d174d33a8a3b8d03f466c6cb3381f5f0c9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": "\r protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Hashtable newElements, IResource underlyingResource) throws JavaModelException {\r", "+protected boolean generateInfos(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9435f18873a556f1e47b0f6f2d82599", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NonFatalErrorTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\t\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f946e51970ee1b9ad26f1db28b890044", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionRequestor.java", "commitBeforeChange": "602a7d55ff75dfdfa2cae12bead009c418215b66", "commitAfterChange": "183f54b68364b226246fe663acdbcbf6f6f1dd9e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic final boolean isIgnored(int completionProposalKind)", "signatureAfterChange": " \tpublic final boolean isIgnored(int completionProposalKind)", "diff": ["-\t\t\t|| completionProposalKind > CompletionProposal.VARIABLE_DECLARATION) {", "+\t\t\t|| completionProposalKind > CompletionProposal.METHOD_NAME_REFERENCE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f948c84dfea69ffb242c91bdd2b61400", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "9a76fb8f9434ae4b71dc267e686b050759ff3536", "commitAfterChange": "e5d54da7cf77d6614acfbbcede23df9b9dad68f9", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic static void createProblemType( \t\tTypeDeclaration typeDeclaration, \t\tCompilationResult unitResult)", "signatureAfterChange": " \tpublic static void createProblemType( \t\tTypeDeclaration typeDeclaration, \t\tCompilationResult unitResult)", "diff": ["-\t\tIProblem[] problems = unitResult.getProblems();", "+\t\tIProblem[] problems = unitResult.getErrors();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f94b38c15027e141f6a9c286c8bc445a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "68459c18ef17954b1d2ebbe1cd565b886a229c5d", "commitAfterChange": "517b7635549251305475f5979e09084934078df3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticEnumMethod(char[] selector)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticEnumMethod(char[] selector)", "diff": ["-\t\tthis.synthetics = new HashMap[4];", "+\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f95a41783deeaa7a71a5547b769f62fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  public void test057() throws JavaModelException", "signatureAfterChange": "  public void test057() throws JavaModelException", "diff": ["-\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DICENUNR+\"}\"", "+\t\t\"paramMethod[METHOD_REF]{paramMethod(String, boolean, Object), Ljavadoc.text.BasicTestTextIns;, (Ljava.lang.String;ZLjava.lang.Object;)V, paramMethod, (str, flag, obj), \"+this.positions+R_DRICENUNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f96056af2a900a10f39961e82d81ec01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "38c895fd64a92567249832dd2a8d427fc1bcacc2", "commitAfterChange": "47b4b871bf6d388352229c39f2d0357c2b36e470", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \tprivate void manageOpeningParenthesizedExpression(Expression expression, int numberOfParens)", "signatureAfterChange": "  \tprivate void manageOpeningParenthesizedExpression(Expression expression, int numberOfParens)", "diff": ["-\t\t\tif (this.preferences.insert_space_after_open_paren_in_parenthesized_expression) {", "+\t\t\tif (this.preferences.insert_space_after_opening_paren_in_parenthesized_expression) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9637d4a60fd07dd640660d5e2f777ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerStatementsRecoveryTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void testStatementsRecovery04() throws CoreException", "signatureAfterChange": " public void testStatementsRecovery04() throws CoreException", "diff": ["-\tassertDeltas(", "+\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f97ab31ab0384ec72633e06f847a0300", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchSet.java", "commitBeforeChange": "da39b69e72c50baaaa7ca77863d468ca697fcf61", "commitAfterChange": "ff204ce3a41738619b4636be750fa00b8770f7a8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic boolean visit(TypeDeclaration typeDeclaration, ClassScope scope)", "signatureAfterChange": "\r \tpublic boolean visit(MemberTypeDeclaration typeDeclaration, ClassScope scope)", "diff": ["-\tpublic boolean visit(TypeDeclaration typeDeclaration, ClassScope scope) {\r", "+\tpublic boolean visit(MemberTypeDeclaration typeDeclaration, ClassScope scope) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f980c053d3d7c9d90319dffefbeb4d78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/TypeBindingTests308.java", "commitBeforeChange": "b399cc14c85cc6279d3fbdd38ff116c9655dc352", "commitAfterChange": "8580e60642e681a1d666f59f018926e08e2e8a62", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \tpublic void testMemberType() throws CoreException, IOException", "signatureAfterChange": "\r \tpublic void testMemberType() throws CoreException, IOException", "diff": ["-\t\t\tassertEquals(\"Incorrect no of types\", \"@T Outer\", memberTypes[0].getEnclosingType().toString());\r", "+\t\t\tassertEquals(\"Incorrect no of types\", \"@T Outer\", memberTypes[0].getDeclaringClass().toString());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9870d006de1102906952441262a1388", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": " public void if_acmpeq(Label lbl)", "signatureAfterChange": " public void if_acmpeq(BranchLabel lbl)", "diff": ["-public void if_acmpeq(Label lbl) {", "+public void if_acmpeq(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f988fa8ba9708c588fb4a6a3e430f4c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "a44da875619e9b43e770f0d2c99bb868bc453e29", "commitAfterChange": "5653db0871a030c7f9e856b0346b3dd631ca6156", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r \tprivate void internalGenerateCode(ClassScope classScope, ClassFile classFile)", "signatureAfterChange": "\r \r \tprivate void internalGenerateCode(ClassScope classScope, ClassFile classFile)", "diff": ["-\t\t\tcodeStream.recordPositionsFrom(0, this.sourceStart);\r", "+\t\t\tcodeStream.recordPositionsFrom(0, this.bodyEnd);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f98a4fb741e280a15a5522638582a00a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void codeComplete(String codeSnippet, int position, ICodeCompletionRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r public void codeComplete(String codeSnippet, int position, ICodeCompletionRequestor requestor) throws JavaModelException", "diff": ["-\t\tJavaModelManager.getOptions()\r", "+\t\tJavaCore.getOptions()\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f99651fa7319066acce9c3602ffdbb58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementInfo.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t \tprotected JavaElementInfo()", "signatureAfterChange": "\t \tprotected JavaElementInfo()", "diff": ["-\t\tfChildren = fgEmptyChildren;", "+\t\tfChildren = NO_CHILDREN;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a36bafdf07dbfd06dcdddde4d3df61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void testTypeRefAll_Field() throws CoreException", "signatureAfterChange": " public void testTypeRefAll_Field() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, FIELD_TYPE_DECLARATION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());", "+\tsearch(\"*\", TYPE, FIELD_DECLARATION_TYPE_REFERENCE, getJavaSearchWorkingCopiesScope());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a8a78e06be8435d23cd8151df40bd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public MethodVerifier methodVerifier()", "signatureAfterChange": "  public MethodVerifier methodVerifier()", "diff": ["-\t\tverifier = this.options.complianceLevel < ClassFileConstants.JDK1_5", "+\t\tverifier = this.globalOptions.complianceLevel < ClassFileConstants.JDK1_5"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a8ddf3245e173c7b14fd1dee705753", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "70b32514588b091b133b82607c10c8c78d5b8fe3", "commitAfterChange": "aaa63e79319475935e2167f567ed10fa3d10e895", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic Openable createOpenable(String resourcePath, IJavaSearchScope scope)", "signatureAfterChange": " \tpublic Openable createOpenable(String resourcePath, IJavaSearchScope scope)", "diff": ["-\t\tif ((separatorIndex= resourcePath.indexOf(JarFileEntryDocument.JAR_FILE_ENTRY_SEPARATOR)) > -1) {", "+\t\tif ((separatorIndex= resourcePath.indexOf(IJavaSearchScope.JAR_FILE_ENTRY_SEPARATOR)) > -1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9bd61fa36a54e7090a41d5cc50fea5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "bab2e1777d0a652d936e16a86a09abf0c1466b11", "commitAfterChange": "2a4fce3538de1c54306595d6053c72ffae8a7e60", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public IJavaProject getJavaProject(String name)", "signatureAfterChange": " public IJavaProject getJavaProject(String name)", "diff": ["-\treturn new JavaProject(this.getWorkspace().getRoot().getProject(name), this);", "+\treturn new JavaProject(ResourcesPlugin.getWorkspace().getRoot().getProject(name), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9bd91c2ee236cfea3a566f4826fee3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeleteElementsOperation.java", "commitBeforeChange": "9f89ba73b700aee0d67ac8a5b9556d443c556591", "commitAfterChange": "26722284e82b5d30b5fba9c9525933e4ed72358b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected void verify(IJavaElement element) throws JavaModelException", "signatureAfterChange": " \tprotected void verify(IJavaElement element) throws JavaModelException", "diff": ["-\t\t\tif (child.getResource() != null)", "+\t\t\tif (child.getCorrespondingResource() != null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f131119c164ca23a5080d0287c65b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CompilationUnitDeclaration.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate void cleanUp(TypeDeclaration type)", "signatureAfterChange": " \tprivate void cleanUp(TypeDeclaration type)", "diff": ["-\t\t\tcompilationResult.declaresAnnotations = true;", "+\t\t\tcompilationResult.hasAnnotations = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9f51d9bb84eede1f5095797e17ed859", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "1d6fd3220a380be4db641e43b2002eb0a6f872ab", "commitAfterChange": "f5fccb9c727b0655636fe138af1c3a58b47300b1", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r private SimpleLookupTable findDeltas()", "signatureAfterChange": "\r \r private SimpleLookupTable findDeltas()", "diff": ["-\t\t\tif (!lastState.isStructurallyChanged(p, s)) { // see if we can skip its delta\r", "+\t\t\tif (!lastState.wasStructurallyChanged(p, s)) { // see if we can skip its delta\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa0310852822ee7179f2b749c859d7e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " protected void consumeClassDeclaration()", "signatureAfterChange": " protected void consumeClassDeclaration()", "diff": ["-\t\tswitch(typeDecl.getKind()) {", "+\t\tswitch(typeDecl.kind()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa16d693179afe647b516cd8135c7456", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/WorkQueue.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\t  public void finished(String element)", "signatureAfterChange": "\t  public void finished(SourceFile element)", "diff": ["-public void finished(String element) {", "+public void finished(SourceFile element) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa373362d124b3c49677dcc7d0fd8ef6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/Index.java", "commitBeforeChange": "e8fbf4db76f3cb4cdf82ad5223795b2651c6d983", "commitAfterChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic IQueryResult[] query(String word) throws IOException", "signatureAfterChange": " \tpublic String[] query(String word) throws IOException", "diff": ["-\tpublic IQueryResult[] query(String word) throws IOException {", "+\tpublic String[] query(String word) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa3e665e7b45b1583cf0018a65365c26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " public void testChangeInternalJar() throws CoreException, IOException", "signatureAfterChange": " public void testChangeInternalJar() throws CoreException, IOException", "diff": ["-\t\tdeleteFile(new File(jarName));", "+\t\tdeleteResource(new File(jarName));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa44233720aeeb09b10d869a5c889d64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public TypeDeclaration updatedTypeDeclaration()", "signatureAfterChange": " public TypeDeclaration updatedTypeDeclaration()", "diff": ["-\t\tif (!hasConstructor && typeDeclaration.kind() != IGenericType.INTERFACE) {// if was already reduced, then constructor", "+\t\tif (!hasConstructor && typeDeclaration.kind() != IGenericType.INTERFACE_DECL) {// if was already reduced, then constructor"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa47c09ea2223cc896dbcb1ec4efee37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/env/NameEnvironmentAnswer.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tpublic boolean isSourceType()", "signatureAfterChange": "\r \r public  boolean isSourceType()", "diff": ["-\t */\r", "-\tpublic boolean isSourceType() {\r", "-\t\treturn sourceTypes != null;\r", "-\t}\r", "+public  boolean isSourceType() {\r", "+\treturn sourceType != null;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5155088ffc7f9b85581e1c4a2217a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredInitializer.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public FieldDeclaration updatedFieldDeclaration()", "signatureAfterChange": " public FieldDeclaration updatedFieldDeclaration()", "diff": ["-\t\tif (this.localTypeCount > 0) fieldDeclaration.bits |= ASTNode.HasLocalTypeMASK;", "+\t\tif (this.localTypeCount > 0) fieldDeclaration.bits |= ASTNode.HasLocalType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5395fe620436a5c6f7215d1f198257", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "ce31321c0960eb5a31c3ae1b0d5c06abcf194347", "commitAfterChange": "0b908f8ea1b5e0d333c38d3d38980856c0cb2fec", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void discardJobs(String jobFamily)", "signatureAfterChange": " \tpublic void discardJobs(String jobFamily)", "diff": ["-\t\t\t\twhile (thread != null && executing){", "+\t\t\t\twhile (processingThread != null && executing){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa5a070acaf1bca535f111a04ec6ba3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "31e3c66a70e3c9b69b47c38f0b44d65cff7cbfa3", "commitAfterChange": "09d36d761ce96d68639981e72856240cb8764441", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " public void initializeScanner()", "signatureAfterChange": " public void initializeScanner()", "diff": ["-\tthis.scanner = new CompletionScanner(this.assertMode);", "+\tthis.scanner = new CompletionScanner(this.sourceLevel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa60d645d38e00b5e4ae27acf5c2c6dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "641e9c614e21ced6bfe9a8f5ab4aeecf7613181a", "commitAfterChange": "98fa84ee39c41fd289fab405c645f226d27b7c68", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic MethodBinding tiebreakMethod()", "signatureAfterChange": " \tpublic MethodBinding tiebreakMethod()", "diff": ["-\t\t\t\t\trawArguments[i] =  environment.convertToRawType(originalVariables[i].erasure());", "+\t\t\t\t\trawArguments[i] =  environment.convertToRawType(originalVariables[i].upperBound());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa63999650139b0c29c36d04b2133aa1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "030eb4fda54a6751c1b822374d11bd8e8163881c", "commitAfterChange": "ec1201be6eb9490fec9fdaa6f4ea5d677aacc407", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void addSyntheticEnumValuesMethod(SyntheticMethodBinding methodBinding)", "signatureAfterChange": " \tpublic void addSyntheticEnumValuesMethod(SyntheticMethodBinding methodBinding)", "diff": ["-\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tint attributeNumber = generateMethodInfoAttributes(methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa7de0dafa9d4a1e710ff18b613e385a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e489533002c2a8aea30eadfa50c303ea4823e94d", "commitAfterChange": "31362234b943750140a7714a1b76106b136f08fa", "methodNumberBeforeChange": 167, "methodNumberAfterChange": 167, "signatureBeforeChange": " \tpublic boolean visit(NormalAnnotation node)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation node)", "diff": ["-\t\t\t\tint startOffset= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameLPAREN, pos);", "+\t\t\t\tint startOffset= getScanner().getTokenEndOffset(TerminalTokens.TokenNameLPAREN, pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa8e68848b0b9ee434c4253025490729", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t@Override \tpublic TypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank)", "signatureAfterChange": "  \t@Override \tpublic ITypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank)", "diff": ["-\tpublic TypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank) {", "+\tpublic ITypeAnnotationWalker toTypeParameterBounds(boolean isClassTypeParameter, int parameterRank) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa9d7a07e5f0e00f069fbe12ba48a9da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  \tprotected void findMembers( \t\t\tchar[] token, \t\t\tReferenceBinding receiverType, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tboolean isInsideAnnotationAttribute, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "signatureAfterChange": "  \tprotected void findMembers( \t\t\tchar[] token, \t\t\tReferenceBinding receiverType, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tboolean isInsideAnnotationAttribute, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.KEYWORD, this.actualCompletionPosition);", "+\t\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.KEYWORD, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faa8164120cfe970934432b0831ac285", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchParticipant.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic IPath[] selectIndexes( \t\tSearchPattern pattern, \t\tIJavaSearchScope scope)", "signatureAfterChange": " \tpublic IPath[] selectIndexes( \t\tSearchPattern pattern, \t\tIJavaSearchScope scope)", "diff": ["-\t\treturn this.indexSelector.getIndexKeys();", "+\t\treturn this.indexSelector.getIndexLocations();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "facf0b28b6c22bce455ecfafbe0c7131", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "478c088afa2c10c70f8aaf55254c0edf92d45827", "commitAfterChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": " public FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["-\t\t\t\t\tif (defaultNullnessAnnotationBinding != null && defaultNullnessAnnotationBinding.id == TypeIds.T_ConfiguredAnnotationNonNullByDefault) {", "+\t\t\t\t\tif (defaultNullnessAnnotationBinding != null && defaultNullnessAnnotationBinding.id == TypeIds.T_ConfiguredAnnotationNonNull) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fad312041c23ba8e39441f8840c1a174", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CommitWorkingCopyOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic IJavaModelStatus verify()", "signatureAfterChange": " \tpublic IJavaModelStatus verify()", "diff": ["-\t\tif (cu.hasResourceChanged() && !fForce) {", "+\t\tif (cu.hasResourceChanged() && !force) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fae5f81917d5e51e10c27ae5bf5bdb46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeHierarchyTests.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testSupertypeHierarchyGetSubtypes() throws JavaModelException", "signatureAfterChange": " public void testSupertypeHierarchyGetSubtypes() throws JavaModelException", "diff": ["-\tIType type = getClassFile(\"TypeHierarchy\", getExternalJCLPath(), \"java.lang\", \"Object.class\").getType();", "+\tIType type = getClassFile(\"TypeHierarchy\", getExternalJCLPathString(), \"java.lang\", \"Object.class\").getType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faf0aee2bbea2d51611dfdd9f467cc7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8", "commitAfterChange": "7df061f9da0ab96be87e5851cb157a28c5f5bca0", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": " \tpublic void endVisit(DimensionInfo node)", "signatureAfterChange": " \tpublic void endVisit(ExtraDimension node)", "diff": ["-\tpublic void endVisit(DimensionInfo node) {", "+\tpublic void endVisit(ExtraDimension node) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faf1a5ee1d571c7c444ecb56c1d364b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "9d9b626a341c39b3bd7c3dd97a53439bdcd8e46d", "commitAfterChange": "8fdb14b64608b58e620c67bc0f2758fb559de717", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " protected void consumeMarkerAnnotation()", "signatureAfterChange": " protected void consumeMarkerAnnotation()", "diff": ["-\t\tthis.requestor.acceptTypeReference(annotation.type.getTypeName(), annotation.sourceStart, annotation.sourceEnd);", "+\t\tthis.requestor.acceptAnnotationTypeReference(annotation.type.getTypeName(), annotation.sourceStart, annotation.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb0492854fb8d0796d1431de17979f7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildTestSuiteWithMinimalCompliance(testClass(), F_1_5);", "+\treturn buildComplianceRegressionTestSetupSuite(testClass(), F_1_5);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb07d2640bc01b14568d240b50b2d105", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 251, "methodNumberAfterChange": 247, "signatureBeforeChange": " public void testBug109695h() throws CoreException", "signatureAfterChange": " public void testBug109695h() throws CoreException", "diff": ["-\tint validatedRule = SearchPattern.validateMatchRule(\"UTF6DSS\", SearchPattern.R_CAMELCASE_MATCH);", "+\tint validatedRule = SearchPattern.validateMatchRule(\"UTF6DSS\", SearchPattern.R_CAMEL_CASE_MATCH);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb1e542661ff472b998468d06447b5eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "a08b4c389632f0f20a50182ded68880addc0de18", "commitAfterChange": "5cb40e1ad24651b50221770b935dfa647cb41f4d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "          public synchronized List<AnnotationProcessorFactory> getFactoriesForProject( IJavaProject jproj )", "signatureAfterChange": "          public synchronized List<AnnotationProcessorFactory> getFactoriesForProject( IJavaProject jproj )", "diff": ["-\t\tList<FactoryContainer> containers = AptConfig.getEnabledContainers(jproj);", "+\t\tList<FactoryContainer> containers = FactoryPath.getEnabledContainers(jproj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb215039a945ab307a7d492dda15e524", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public ProblemReporter problemReporter()", "signatureAfterChange": " public ProblemReporter problemReporter()", "diff": ["-\treturn outerMostMethodScope().problemReporter();", "+\treturn methodScope().problemReporter();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb2764c59864f0bc2e5170f2aecfa419", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6e47268ed79fd7b89fd58e0a5c1b77470c0792ef", "commitAfterChange": "dcb63c7bea407ce9399b33fb2441f8ca456fabd4", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \tpublic IClasspathEntry[] getResolvedClasspathContainer(IPath containerPath)", "signatureAfterChange": "\r \tpublic IClasspathEntry[] getResolvedClasspathContainer(IPath containerPath)", "diff": ["-\t\t\t\tif (JavaModelManager.VARIABLE_VERBOSE){\r", "+\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb4c51939b906c81314fe04ca778ce61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/DocumentElementParser.java", "commitBeforeChange": "b9de5f3466a9b4d6687de837720c445097067b16", "commitAfterChange": "39416e9e4305b172d90b88aed3085d98ded0a86c", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r public CompilationUnitDeclaration endParse(int act)", "signatureAfterChange": "\r public CompilationUnitDeclaration endParse(int act)", "diff": ["-\t\trequestor.acceptLineSeparatorPositions(scanner.lineEnds());\r", "+\t\trequestor.acceptLineSeparatorPositions(scanner.getLineEnds());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb5dcccd21b2f05118789822a6f5644b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void test_parameter_specification_inheritance_014()", "signatureAfterChange": " public void test_parameter_specification_inheritance_014()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.ERROR);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb67be1a5d365610b692926552ceb9e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "6b93bc47c94f281cdece9370a844218715786de0", "commitAfterChange": "5a74a1c87d1830c88bea417813f995a5ae4e1a46", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic String toString(int tab)", "diff": ["-\t\tfor (int i = 0; i < scopeIndex; i++)", "+\t\tfor (int i = 0; i < subscopeCount; i++)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb7e3789aabfa01611fea1d4a19893c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "a6b76fc7d7890cbbcb2fc001b8031466dd0ad995", "commitAfterChange": "8c05bff0d88a6a537ed2accc1c62c5430e927aee", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic void set(Map optionsMap)", "signatureAfterChange": " \t \tpublic void set(Map optionsMap)", "diff": ["-\t\tif ((optionValue = optionsMap.get(OPTION_ReportTypeParameterHiding)) != null) updateSeverity(TypeParameterHiding, optionValue);", "+\t\tif ((optionValue = optionsMap.get(OPTION_ReportTypeParameterHiding)) != null) updateSeverity(TypeHiding, optionValue);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb85a0466548eddcb31a424f78365d6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "04e84156f72e78841e81f466d63909a84dc84d02", "commitAfterChange": "f4280b902ee434925603ab3160f9ac7e41c27ef9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildTestSuite(testClass());", "+\t\treturn buildComparableTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb8fa958f5697eb2bd8feea4255bc77a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "6ca7b05ef1b6b0934e3b4a61271beb56d55912f0", "commitAfterChange": "c531b3f0c052a6b596da13730fb589efa2e45e52", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tvoid preAddChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "signatureAfterChange": " \tvoid preAddChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "diff": ["-\t\t\tthis.eventHandler.postAddChildEvent(node, child, property);", "+\t\t\tthis.eventHandler.preAddChildEvent(node, child, property);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb9fe492ad4f063984ab25485f6f67fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void cleanUpIndexes()", "signatureAfterChange": " public void cleanUpIndexes()", "diff": ["-\t\t\t\t\t\tJobManager.verbose(\"Deleting index file \" + indexesFiles[i]); //$NON-NLS-1$", "+\t\t\t\t\t\tUtil.verbose(\"Deleting index file \" + indexesFiles[i]); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba431d660109a8402132e0899c6b33a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \t\tpublic boolean match(MethodInvocation node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(LineComment node, Object other)", "diff": ["+\t\tpublic boolean match(LineComment node, Object other) {", "+\t\t\treturn standardBody(node, other, superMatch ? super.match(node, other) : false);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba6f5b1b95c0b7aee652c9bd4bf4c4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \t\tpublic boolean match(ThrowStatement node, Object other)", "signatureAfterChange": " \t\tpublic boolean match(SingleMemberAnnotation node, Object other)", "diff": ["+\t\t}", "+\t\tpublic boolean match(SingleMemberAnnotation node, Object other) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbb00d7b66efa233214e5ce9e7a472a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorLocator.java", "commitBeforeChange": "6ca82f1a54d472af29c424861c5280a8ebc7b028", "commitAfterChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected int matchLevelForReferences(ConstructorDeclaration constructor)", "signatureAfterChange": " protected int matchLevelForReferences(ConstructorDeclaration constructor)", "diff": ["-\treturn this.pattern.mustResolve ? POTENTIAL_MATCH : ACCURATE_MATCH;", "+\treturn this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbd32e427bba44b00d23afea4da5d6de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\t public void searchDeclarationsOfSentMessages(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "signatureAfterChange": "\t public void searchDeclarationsOfSentMessages(IWorkspace workspace, IJavaElement enclosingElement, IJavaSearchResultCollector resultCollector) throws JavaModelException", "diff": ["-\t\tMatchLocator locator = new MatchLocator2(", "+\t\tMatchLocator locator = new MatchLocator("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbe493d56ca0ba193cd4c1a6b12b15ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "7ce2f84b26c4f2c886cbbe2de7481057d4c242a9", "commitAfterChange": "be0584cfc38c5bd772c8361f3c8f7bf000916f66", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testCreateResourceIncludedPackage2() throws CoreException", "signatureAfterChange": " public void testCreateResourceIncludedPackage2() throws CoreException", "diff": ["-\tassertResourcesEqual(", "+\tassertResourceNamesEqual("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbf34e40495f24fe8c49004e5d13d271", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "a2a0577109951f3af96b6ee7e6f23d457b52d52d", "commitAfterChange": "1987bebfc0499fe07d643a641d2e74ff184f5cc7", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void endVisit(FieldAccess node)", "signatureAfterChange": " \tpublic void endVisit(LambdaExpression node)", "diff": ["+\tpublic void endVisit(LambdaExpression node) {", "+\t\tendVisitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbf7354912e2a0ab503fb3070226d822", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "80b216af2abfbc335ce04bf55fc463ba47e45873", "commitAfterChange": "8eb843ef75292ca86ade9a64a79ec382d0e5f4fa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": "     private static Object convertDOMValueToMirrorValue(Object domValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t   String name,\t \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseMirrorImpl parent, \t\t\t\t\t\t\t\t\t\t\t\t\t   DeclarationImpl decl,  \t\t\t\t\t\t\t\t\t\t\t\t\t   BaseProcessorEnv env, \t\t\t\t\t\t\t\t\t\t\t\t\t   TypeMirror expectedType)", "signatureAfterChange": "     private static Object convertDOMValueToMirrorValue(Object domValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t   String name,\t \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseMirrorImpl parent, \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseDeclarationImpl decl,  \t\t\t\t\t\t\t\t\t\t\t\t\t   BaseProcessorEnv env, \t\t\t\t\t\t\t\t\t\t\t\t\t   TypeMirror expectedType)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\t\t   DeclarationImpl decl, ", "+\t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseDeclarationImpl decl, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc09e1e169cef022f24ef9a0cc949b79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "89aa9a93a47695cf0df5a96fb88f12b96bbc9c64", "commitAfterChange": "45ae48e8cd32bd2f1c31e3208f3342c4041866de", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tConstructorDeclaration constructorDeclaration, \t\tClassScope scope)", "diff": ["-\t\t\tif (method_declaration_brace.equals(FormattingPreferences.NEXT_LINE_SHIFTED)) {", "+\t\t\tif (method_declaration_brace.equals(DefaultCodeFormatterConstants.NEXT_LINE_SHIFTED)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc3ff7517637cd858c48ae08d9637b9f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0e681f80efbcd55630ac88e7932322f24f43cac4", "commitAfterChange": "4a0aba8da7540fe196b62f610441e5b671eaee55", "methodNumberBeforeChange": 401, "methodNumberAfterChange": 401, "signatureBeforeChange": " protected TypeReference getTypeReference(int dim)", "signatureAfterChange": " protected TypeReference getTypeReference(int dim)", "diff": ["-\t\t\tref.sourceEnd = this.endPosition;", "+\t\t\tref.sourceEnd = this.rBracketPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc48d673fca3c94cdf35467d5c24f7e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "1de8e2f6bc728cee690d70795383b83c1f0d652a", "commitAfterChange": "cccafe00dbf29f156949d8f0d0aec370b02aa048", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void copyState(CommitRollbackParser from)", "signatureAfterChange": "  public void copyState(Parser from)", "diff": ["-public void copyState(CommitRollbackParser from) {", "+public void copyState(Parser from) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc4a9288607814d839d2415cc908cfc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "5ab1b44e840f5c63c769a4409a1d1ee2ee2b555d", "commitAfterChange": "180e4e45746dd1c7939f8d071838acd40ff207da", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "signatureAfterChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "diff": ["-\t\tJavaSearchMatch match = new FieldDeclarationMatch(element, accuracy, start, end, SearchEngine.getDefaultSearchParticipant(), resource);", "+\t\tSearchMatch match = new FieldDeclarationMatch(element, accuracy, start, end, SearchEngine.getDefaultSearchParticipant(), resource);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc5f0339f07f8bd868afba5409f01ffe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperMethodInvocation.java", "commitBeforeChange": "522e84acc5c220c07378cd67640c99884ac9cc9d", "commitAfterChange": "e5f48a4d4e39a733649e1d7678dd3cc38b1f57e5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\tif (this.ast.apiLevel >= AST.LEVEL_3_0) {", "+\t\t\tif (this.ast.apiLevel >= AST.JLS3) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc61de2c6c79a3496cc04e56e5b486a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/dom/StandAloneASTParserTest.java", "commitBeforeChange": "6bc11449bdc77b64b2e9fa71343f1b205e63ae9f", "commitAfterChange": "e8ece6af8318a12ec7ce6a4cfeae9e9119159fb6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void test3() throws IOException", "signatureAfterChange": "  \tpublic void test3() throws IOException", "diff": ["-\t\tASTParser parser = ASTParser.newParser(JLS3_INTERNAL);", "+\t\tASTParser parser = ASTParser.newParser(JLS_LATEST);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc6a741138696691156b9f62f7a54b02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif ((expressionIsCast = this.expression instanceof CastExpression) == true) this.expression.bits |= IgnoreNeedForCastCheckMASK; // will check later on", "+\t\tif ((expressionIsCast = this.expression instanceof CastExpression) == true) this.expression.bits |= DisableUnnecessaryCastCheck; // will check later on"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8baad942a96d10dc766192e0323f72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "a8f2b9d6f31a63759a85bef6a1ed8cbb23fbd3fa", "commitAfterChange": "ce41f66e0706b1b71981331d2b2667a0940a3697", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public final void jumpOverMethodBody()", "signatureAfterChange": " public final void jumpOverMethodBody()", "diff": ["-\t\t\t\t\t\t\tswitch (ScannerHelper.ObviousIdentCharNatures[c]) {", "+\t\t\t\t\t\t\tswitch (ScannerHelper.OBVIOUS_IDENT_CHAR_NATURES[c]) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc8d5774eb5955302f5701f010bd43bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "013620872bf40676bc99a8d4e511d32c437edce3", "commitAfterChange": "287b4c9e54d4bce062e6eecece35b8e7ce844a76", "methodNumberBeforeChange": 130, "methodNumberAfterChange": 130, "signatureBeforeChange": " \tpublic boolean visit(NormalAnnotation node)", "signatureAfterChange": " \tpublic boolean visit(Modifier node)", "diff": ["+\tpublic boolean visit(Modifier node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcc1cb4c9898a0d8284f4cfb623e0f9a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionProposal.java", "commitBeforeChange": "602a7d55ff75dfdfa2cae12bead009c418215b66", "commitAfterChange": "183f54b68364b226246fe663acdbcbf6f6f1dd9e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tCompletionProposal(int kind, int completionLocation)", "signatureAfterChange": " \tCompletionProposal(int kind, int completionLocation)", "diff": ["-\t\t\t\t|| (kind > CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {", "+\t\t\t\t|| (kind > CompletionProposal.METHOD_NAME_REFERENCE)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fccdb1894f3a586f9011b748d5cf0bce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c67e4a7bf6db95089bd9ac1663546f14829aeca0", "commitAfterChange": "6667f48fb414bf631c6788d57b69b16addac46f0", "methodNumberBeforeChange": 183, "methodNumberAfterChange": 183, "signatureBeforeChange": " protected FieldDeclaration createFieldDeclaration(Expression initialization, char[] name, int sourceStart, int sourceEnd)", "signatureAfterChange": " protected FieldDeclaration createFieldDeclaration(Expression initialization, char[] name, int sourceStart, int sourceEnd)", "diff": ["-\treturn new FieldDeclaration(null, name, sourceStart, sourceEnd); // TODO: (olivier) why don't we persist the initialization expression?", "+\treturn new FieldDeclaration(initialization, name, sourceStart, sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcdc2c70f1cd0d992d09d7085a2e8186", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "a3e63b72d2efd2058d202d3e2711391afc827fec", "commitAfterChange": "f0131d199789fbf75036ba10803faed4ef08b399", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void testSuggestFieldName022()", "signatureAfterChange": " public void testSuggestFieldName022()", "diff": ["-\t\t\tNamingConventions.VK_CONSTANT_FIELD,", "+\t\t\tNamingConventions.VK_STATIC_FINAL_FIELD,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fceafbc018422acf149bd88fec738472", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "367e4c478a01eb8d845db9b4a1f5f739fd39eea0", "commitAfterChange": "9fa7a44a55558b02d8176a1c36b5ac43ea502966", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " public void testTypeRefGenericAllG3R1_Parameterized() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAllG3R1_Parameterized() throws CoreException", "diff": ["-\tsearch(\"*\", TYPE, PARAMETERIZED_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);", "+\tsearch(\"*\", TYPE, TYPE_ARGUMENT_TYPE_REFERENCE, SearchPattern.R_ERASURE_MATCH, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd1dbe3c99e295dfa81c173b3cbcc42d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "c9c5f11eddd07d2a8299046a3df03585e022db6e", "commitAfterChange": "f9e9347d6997c4c27eb7e36ed44c76f0701d7ce2", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tprivate TypeBinding lowerUpperBound(TypeBinding[] types, List lubStack)", "signatureAfterChange": " \tprivate TypeBinding lowerUpperBound(TypeBinding[] types, ArrayList lubStack)", "diff": ["-\tprivate TypeBinding lowerUpperBound(TypeBinding[] types, List lubStack) {", "+\tprivate TypeBinding lowerUpperBound(TypeBinding[] types, ArrayList lubStack) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd2b7d854826ae3f266c5d48112f70cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultASTVisitor.java", "commitBeforeChange": "4005c370e6cbaf5fe897eaa7c9410e92ff25148d", "commitAfterChange": "f0d3823e693314be74db80c5730855ddd690aa1f", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 115, "signatureBeforeChange": " \tpublic boolean visit(FieldDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(ExtraDimension node)", "diff": ["+\tpublic boolean visit(ExtraDimension node) {", "+\t\treturn visitNode(node);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd2f789679a2671fc49098f13edb7972", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NamingConventionTests.java", "commitBeforeChange": "a3e63b72d2efd2058d202d3e2711391afc827fec", "commitAfterChange": "f0131d199789fbf75036ba10803faed4ef08b399", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " public void testSuggestFieldName021()", "signatureAfterChange": " public void testSuggestFieldName021()", "diff": ["-\t\t\tNamingConventions.VK_CONSTANT_FIELD,", "+\t\t\tNamingConventions.VK_STATIC_FINAL_FIELD,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd428a9bed557173b0c75874e52750b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "commitAfterChange": "0b6f06d77f121375ae3494c8c329aad2cfc0a1a4", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": "  private TypeBinding annotateType(TypeBinding binding, TypeAnnotationWalker walker, char[][][] missingTypeNames)", "signatureAfterChange": "  private TypeBinding annotateType(TypeBinding binding, ITypeAnnotationWalker walker, char[][][] missingTypeNames)", "diff": ["-private TypeBinding annotateType(TypeBinding binding, TypeAnnotationWalker walker, char[][][] missingTypeNames) {", "+private TypeBinding annotateType(TypeBinding binding, ITypeAnnotationWalker walker, char[][][] missingTypeNames) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd546fefd881188dee8390625b198801", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 107, "signatureBeforeChange": " \tpublic boolean visit(Javadoc node)", "signatureAfterChange": " \tpublic boolean visit(Javadoc node)", "diff": ["-\t\tString separator= getLineDelimiter() + getIndentString(node.getStartPosition())  + \" * \"; //$NON-NLS-1$", "+\t\tString separator= getLineDelimiter() + getIndentAtOffset(node.getStartPosition())  + \" * \"; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd547f4fac1f2d3044c7d55700ce337c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "57e05ac5c8db0c06028159bb169607bae2e0ec84", "commitAfterChange": "93b35a5a711d0edb75c141799c4443c91fb39f10", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public Object[] getNonJavaResources() throws JavaModelException", "signatureAfterChange": " public Object[] getNonJavaResources() throws JavaModelException", "diff": ["-\treturn ((PackageFragmentRootInfo) getElementInfo()).getNonJavaResources(getJavaProject(), getUnderlyingResource());", "+\treturn ((PackageFragmentRootInfo) getElementInfo()).getNonJavaResources(getJavaProject(), getResource());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd5839f2b3a1b7b515032bd7ed68a63b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConditionalExpressionTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());", "+\t\treturn buildAllCompliancesTestSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd635ef4f3bf17dca661754998c04b92", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "e6f197651cbdf07261298d2395f1290ce2dfe4c1", "commitAfterChange": "5a485cb39d1ee33622141cf426fac71c4bf93ded", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 56, "signatureBeforeChange": "  \tprivate char[] returnClassName(char[] classInfoName, char separator, int mode)", "signatureAfterChange": "  \tprivate char[] returnClassName(char[] classInfoName, char separator, int mode)", "diff": ["-\t\t\treturn EMPTY_CLASS_NAME;", "+\t\t\treturn EMPTY_NAME;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd6d4081a64f38fcd44d0392d8aa1644", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests2.java", "commitBeforeChange": "7f9e7745cf3f1c024406269afc8bec9564b2443c", "commitAfterChange": "f71ae6e6dfede90c4056a2e033197a9212bd23a2", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void testAccessRestriction7() throws Exception", "signatureAfterChange": " public void testAccessRestriction7() throws Exception", "diff": ["-\t\toptions.put(JavaCore.CODEASSIST_RESTRICTIONS_CHECK, JavaCore.ENABLED);", "+\t\toptions.put(JavaCore.CODEASSIST_FORBIDDEN_REFERENCE_CHECK, JavaCore.ENABLED);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd70e6d0fc63fa22c77cabd053c78ae0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ClasspathContainerInitializer.java", "commitBeforeChange": "c50e76d90729d4f3e0cdd7cf5591d15afd8429b3", "commitAfterChange": "a44f85b2f1ceea345211e0233ce1a337f2608f27", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     public abstract void initialize(IPath containerPath, IJavaProject project) throws JavaModelException;", "signatureAfterChange": "     public abstract void initialize(IPath containerPath, IJavaProject project) throws CoreException;", "diff": ["-    public abstract void initialize(IPath containerPath, IJavaProject project) throws JavaModelException;", "+    public abstract void initialize(IPath containerPath, IJavaProject project) throws CoreException;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd9441d494d48d3a69cbf3bfd136cfb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "9f141d55e2af9b37128bf7c5971a811e92b8911e", "commitAfterChange": "a6f843d25df9099f92853bc4c288a7fde6d9a288", "methodNumberBeforeChange": 621, "methodNumberAfterChange": 621, "signatureBeforeChange": " \tpublic void test606()", "signatureAfterChange": " \tpublic void test606()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_PARENTESIZED_EXPRESSION_IN_RETURN, JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_PARENTHESIZED_EXPRESSION_IN_RETURN, JavaCore.DO_NOT_INSERT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd9da3a0d3b172d274102cfebba61906", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/valueconversion/ValueConversionProcessor.java", "commitBeforeChange": "d8339605195e4a27842529cbdd4cfc67b77ac59c", "commitAfterChange": "ce1a50c038f410b16a75eb29a8e1c64f33a61360", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void process()", "signatureAfterChange": " \t \tpublic void process()", "diff": ["-\t\t\tTestCase.assertNotNull(\"failed to locate type 'sample.Test'\", test);", "+\t\t\tAssert.assertNotNull(\"failed to locate type 'sample.Test'\", test);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd9f5205377d6f8da8bdfc1b460305ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  public void test082() throws JavaModelException", "signatureAfterChange": "  public void test082() throws JavaModelException", "diff": ["-\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+JAVADOC_RELEVANCE_IT+\"}\"", "+\t\t\"BasicTestTextIns[JAVADOC_METHOD_REF]{{@link #BasicTestTextIns(int, float, Class)}, Ljavadoc.text.BasicTestTextIns;, (IFLjava.lang.Class;)V, BasicTestTextIns, (xxx, real, clazz), \"+this.positions+R_DRINRIT+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb936845341e43e0d7a5b9b5cc20bf9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedSourceFolderManager.java", "commitBeforeChange": "5540f6360e90e32ddf4acee0793dedac97444f45", "commitAfterChange": "88aa1b709c25b8b1bf6b428540d305dd5a1a00d3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void ensureFolderExists()", "signatureAfterChange": " \tpublic void ensureFolderExists()", "diff": ["-\t\t\tif (isOnClasspath(srcFolder)) {", "+\t\t\tif (addToClasspath(srcFolder)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdbe06e0c0c2b31211913aa804be34e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "99721e4b150d4129ca339c356f1ffc5191978b56", "commitAfterChange": "258934f1c54d2b465231481daf72639d0983c8ef", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tTypeBinding commonType = scope.mostSpecificCommonType(new TypeBinding[] { valueIfTrueType, valueIfFalseType });", "+\t\t\tTypeBinding commonType = scope.lowerUpperBound(new TypeBinding[] { valueIfTrueType, valueIfFalseType });", "+//\t\t\tTypeBinding commonType = scope.mostSpecificCommonType(new TypeBinding[] { valueIfTrueType, valueIfFalseType });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdbe96b99161bf5a435b4ea24d1c11e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "2df466c4396fe7a5124974aad9f7933176faf1d9", "commitAfterChange": "d00b9ad70dbedf29a635b964d926113aa73c3dfc", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " public void test_message_send_in_control_structure_01()", "signatureAfterChange": " public void test_message_send_in_control_structure_01()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_SPECIFICATION_INSUFFICIENT_INFO, JavaCore.IGNORE);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_NULL_UNCHECKED_CONVERSION, JavaCore.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdc2fb02bc6bcc0fcedcc91c253204db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "8fd47ede750ba6005aab3e86ceccb03a6e16dba8", "commitAfterChange": "e0664fc441b4961f478c3f32edb809e211e609ac", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  \tprivate IRegion getCoveringRegion(int offset, int end)", "signatureAfterChange": "  \tprivate IRegion getCoveringRegion(int offset, int end)", "diff": ["-\t\tIRegion region = this.regions[index];", "+\t\tIRegion region = this.adaptedRegions[index];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdd3a41c521151f3fb12f4618586c3a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocFieldCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void test028() throws JavaModelException", "signatureAfterChange": "  public void test028() throws JavaModelException", "diff": ["-\t\t\"FIELD[FIELD_REF]{FIELD, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, I, FIELD, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"FIELD[FIELD_REF]{FIELD, Lorg.eclipse.jdt.core.tests.BasicTestReferences;, I, FIELD, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdf6f4b7b638c149228365d085bacc49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "a2ea0fcdb64df5f36a0bf2ffec84669e3f62dfd4", "commitAfterChange": "9db80bfa8f5d6f7bab214c95a4d83c3bdedb2628", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " private void runClasspathTest(String classpathInput, String[] expectedClasspathEntries, \t\tString expectedError)", "signatureAfterChange": " private void runClasspathTest(String classpathInput, String[] expectedClasspathEntries, \t\tString expectedError)", "diff": ["-\t} catch (InvalidInputException e) {", "+\t} catch (IllegalArgumentException e) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe149b55538cb4999ebd1d019a14b4c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "e43c8c0f67a0087e9b964d25afd6c8f6f400f425", "commitAfterChange": "a2b79174755a16aced5104d3df93df716516d670", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration memberTypeDeclaration, int bracketBalanceValue)", "diff": ["-\t\tthis.parser().pushOnEnumConstantPartStack(typeDeclaration.getKind() == IGenericType.ENUM);", "+\t\tthis.parser().pushOnEnumConstantPartStack(memberTypeDeclaration.getKind() == IGenericType.ENUM);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe243fa44220c09cee9a6c42d410e696", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " public void if_acmpeq(Label lbl)", "signatureAfterChange": " public void if_acmpeq(BranchLabel lbl)", "diff": ["-public void if_acmpeq(Label lbl) {", "+public void if_acmpeq(BranchLabel lbl) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe2bbe0b7cb8a3fbbbeb3ce82d36431c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "aebd50d4e7ed3a3654e44abaa502f380b7af3ace", "commitAfterChange": "7d7e44bec5cc73af8a58c1959acd433a7f2c6ded", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, boolean proposeAllMemberTypes, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\t\tCompletionProposal proposal = createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\t\tInternalCompletionProposal proposal =  createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe46e879cd0532594a6730fefc5129a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "1ffd93ec138fc38a22c082921b3ee25a9e75ba37", "commitAfterChange": "cef21f9db5e181946eac0a0d175b10763094848c", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic IJavaElement getJavaElement()", "signatureAfterChange": " \tpublic IJavaElement getJavaElement()", "diff": ["-\t\treturn this.element;", "+\t\treturn this.typeRoot;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe50ff2f182ba33aca77c48f7f865071", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "01a6d3cbc8ae1d4959abaf3bcf1d4a46b442d13b", "commitAfterChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "signatureAfterChange": " public RecoveredElement add(TypeDeclaration typeDeclaration, int bracketBalanceValue)", "diff": ["-\tif (typeDeclaration.getKind() == IGenericType.INTERFACE) {", "+\tif (typeDeclaration.kind() == IGenericType.INTERFACE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe52913b6dce8a5d079282c539e41f54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptProject.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void projectClosed()", "signatureAfterChange": " \tpublic void projectClosed()", "diff": ["-\t\t_gfm.clearWorkingCopyMaps();", "+\t\t_gfm.discardWorkingCopyState();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe5c0f2870fd98ce570d0ecc4c8967b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "7aac6f03ecf70666410b0e689c91dafd6d67757a", "commitAfterChange": "465d091146b1d6997709777ea444048487da1d8d", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 138, "signatureBeforeChange": " \t \tprotected void setModifiers(AnnotationTypeMemberDeclaration annotationTypeMemberDecl, org.eclipse.jdt.internal.compiler.ast.AnnotationTypeMemberDeclaration annotationTypeMemberDeclaration)", "signatureAfterChange": " \t \tprotected void setModifiers(AnnotationTypeMemberDeclaration annotationTypeMemberDecl, org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration annotationTypeMemberDeclaration)", "diff": ["-\tprotected void setModifiers(AnnotationTypeMemberDeclaration annotationTypeMemberDecl, org.eclipse.jdt.internal.compiler.ast.AnnotationTypeMemberDeclaration annotationTypeMemberDeclaration) {", "+\tprotected void setModifiers(AnnotationTypeMemberDeclaration annotationTypeMemberDecl, org.eclipse.jdt.internal.compiler.ast.AnnotationMethodDeclaration annotationTypeMemberDeclaration) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6857c2ff9daf4c3a85cf93513ee6be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public FieldBinding addSyntheticFieldForEnumValues()", "signatureAfterChange": " public FieldBinding addSyntheticFieldForEnumValues()", "diff": ["-\t\tthis.synthetics = new HashMap[EMUL_MAX_VALUE];", "+\t\tthis.synthetics = new HashMap[MAX_SYNTHETICS];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6ecd452a3dbdf2b824f0eb54aef307", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/SingleLineTestCase.java", "commitBeforeChange": "d1246b4aff159c8bec10d39c7616aa371724fb25", "commitAfterChange": "3aaa02433bee6eae022db09efeb9fd0aba7da6a0", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tpublic void testNoChange1()", "signatureAfterChange": "  \tpublic void testNoChange1()", "diff": ["-\t\tString content= \"//\";", "+\t\tString content= PREFIX;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe8817e35ae061b7deb98b4d402d0bd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "035e81e22d7f5ffa0ef14b6015456b50ec72de9a", "commitAfterChange": "3d4c80327c4bd6f61a1ef852d9f8cb11ff6d9d62", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public AccessRuleSet getAccessRuleSet(String path)", "signatureAfterChange": " public AccessRuleSet getAccessRuleSet(String path)", "diff": ["-\tint index = encloses(fullPath(path));", "+\tint index = indexOf(fullPath(path));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe891687303969c3919a344b953bac76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public SuperTypeReferencePattern( \tchar[] superQualification, \tchar[] superSimpleName, \tint matchMode,  \tboolean isCaseSensitive)", "signatureAfterChange": " \t public SuperTypeReferencePattern( \tchar[] superQualification, \tchar[] superSimpleName, \tint matchMode,  \tboolean isCaseSensitive)", "diff": ["-\tthis.needsResolve = superQualification != null;", "+\tthis.mustResolve = superQualification != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe9af6ae385182e3cfeae111387882d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AnnotationBinding.java", "commitBeforeChange": "ee7a9f184cb78c9a997b3d97c102d52d6cad8cc9", "commitAfterChange": "5ce130e25c355987e77b700c026948aca2c3cdd7", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic IMemberValuePairBinding[] getAllMemberValuePairs()", "signatureAfterChange": "  \tpublic IMemberValuePairBinding[] getAllMemberValuePairs()", "diff": ["-\t\tReferenceBinding typeBinding = this.internalAnnotation.getAnnotationType();", "+\t\tReferenceBinding typeBinding = this.binding.getAnnotationType();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe9d91e2ed49c959f8b0fe14f192bd10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "1819c30a56affd533a48985d222f687b6215e066", "commitAfterChange": "9e3274a4e22859a72bb671e841084e7489806ddc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, IJavaProject project) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\tthis.indexManager.removeIndex(res.getFullPath());\r", "+\t\t\t\t\t\t\tthis.indexManager.removeIndexFamily(res.getFullPath());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe9e946f673158542b7e908aa0ec3993", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapExecutor.java", "commitBeforeChange": "2073ae07201f3b4750a106d0cadf90473710a63d", "commitAfterChange": "10545bbf89db4e21cbdfaf0260ea872d78aa91e9", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate void handleTopPriorityWraps(WrapRestartException restartException)", "signatureAfterChange": "  \tprivate void handleTopPriorityWraps(WrapRestartThrowable restartException)", "diff": ["-\tprivate void handleTopPriorityWraps(WrapRestartException restartException) {", "+\tprivate void handleTopPriorityWraps(WrapRestartThrowable restartException) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fea1bc380da637f6687d0ad71f862324", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/Index.java", "commitBeforeChange": "12e6c9c820ceba19e41f45f62bc98ca6c5aaa307", "commitAfterChange": "82730fa91cab84d990d4e3898f46564d654b224e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic IEntryResult[] queryEntries(char[] prefix) throws IOException", "signatureAfterChange": " \tpublic EntryResult[] queryEntries(char[] prefix) throws IOException", "diff": ["-\tpublic IEntryResult[] queryEntries(char[] prefix) throws IOException {", "+\tpublic EntryResult[] queryEntries(char[] prefix) throws IOException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb28ea735f77e10bc86822df4ab62e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tTypeAnnotationWalker walker)", "signatureAfterChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tITypeAnnotationWalker walker)", "diff": ["-\t\tTypeAnnotationWalker walker) {", "+\t\tITypeAnnotationWalker walker) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feb724a022d978004d891a91cc07f7cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "427c6bb8409cfca7ba06dea34bdeec6d0eb2d557", "commitAfterChange": "93b7df03b3f298ab65a83070f27251430e6fab81", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\t\tif ((bits & ValueForReturnMASK) != 0) {", "+\t\t\t\t\tif ((bits & IsReturnedValue) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec1b78c9d5aab0fecbfb778957b4656", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptProject.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void projectDeleted()", "signatureAfterChange": " \tpublic void projectDeleted()", "diff": ["-\t\t_gfm.clearAllMaps();", "+\t\t_gfm.discardAllState();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fecaf556070eb8f98793d00761b06893", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "e6009de9b4d4a2d7c4c60a3948647861fa518186", "commitAfterChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate boolean connectEnumSuperclass()", "signatureAfterChange": " \tprivate boolean connectEnumSuperclass()", "diff": ["-\t\tboolean foundCycle = detectCycle(sourceType, rootEnumType, null);", "+\t\tboolean foundCycle = detectHierarchyCycle(sourceType, rootEnumType, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee07b1a575cca5333763d104493d670", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "33bdf149dbe1be0a3eb429c5c10e2e8d6e8332e3", "commitAfterChange": "d3db880f9ce093cbf2c8ff1aba8ac97e00156523", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public MethodVerifier methodVerifier()", "signatureAfterChange": "  public MethodVerifier methodVerifier()", "diff": ["-\t\tverifier = this.options.sourceLevel < ClassFileConstants.JDK1_5", "+\t\tverifier = this.options.complianceLevel < ClassFileConstants.JDK1_5", "-\t\t\t: new MethodVerifier15(this);", "+\t\t\t: new MethodVerifier15(this); // check for covariance even if sourceLevel is < 1.5"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee295f0b0c3aab022c545a280301ed2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "e1f6905bc3f2ff093a39df5e993a363b0e3750b6", "commitAfterChange": "f82f9726f9b94cf05c04c5a478b5d2547399a965", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic static Map getDefaultOptions()", "signatureAfterChange": " \t \tpublic static Map getDefaultOptions()", "diff": ["-\t\t\tCompilerOptions.WARNING);", "+\t\t\tCompilerOptions.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fee9a5de6943ca7ab6309d15d7fe7222", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocMethodCompletionModelTest.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  public void test049() throws JavaModelException", "signatureAfterChange": "  public void test049() throws JavaModelException", "diff": ["-\t\t\"boolean[KEYWORD]{boolean, null, null, boolean, null, \"+this.positions+R_DICNR+\"}\"", "+\t\t\"boolean[KEYWORD]{boolean, null, null, boolean, null, \"+this.positions+R_DRICNR+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feecce0eacbd18322ddd5058095e566e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestOptions.java", "commitBeforeChange": "ab74babcdf0f89ee66e36b91189c0d301a4da95d", "commitAfterChange": "66a4221dd418603b7f2bc6722d99e4e300585ef1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void testInvalidTagsClassNoSupport()", "signatureAfterChange": " \tpublic void testInvalidTagsClassNoSupport()", "diff": ["-\t\trunConformTest(InvalidReferencesClassJavadocComments);", "+\t\trunConformTest(CLASSES_INVALID_COMMENT);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fef6cccdb15ee73b9fbf65c0838cc5b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "65ce77f4b448d83f1af79400e800e6a16d3f741c", "commitAfterChange": "d953024e04caa4804ce7ee43e1c0db8cc73acdeb", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": "  \tpublic void test131()", "signatureAfterChange": "  \tpublic void test131()", "diff": ["+\t\tpreferences.number_of_empty_lines_to_preserve = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff0fd6162b3c826fa9a9a9f6ae24964e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "818dca3cf84fd118ea99497de1f8b977d4253551", "commitAfterChange": "52f6144c4e9af7092e9f26d44a5197a00c39427c", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": "  \tprivate int getTextLength(FormatJavadocBlock block, FormatJavadocText text)", "signatureAfterChange": "  \tprivate int getTextLength(FormatJavadocBlock block, FormatJavadocText text)", "diff": ["-\t\tif (text.isImmutableHtmlTag()) {", "+\t\tif (text.isImmutable()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff233030282426a2f01e603a85c5d457", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTVisitor.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic void endVisit(PrimitiveType node)", "signatureAfterChange": " \tpublic void endVisit(LineComment node)", "diff": ["+\t */", "+\tpublic void endVisit(LineComment node) {", "+\t\t// default implementation: do nothing", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff351a3faea9199d9bf7cf466a059864", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "b8323ccd49cf224a0070d2cb1a7a617400e273ad", "commitAfterChange": "79a2912d77b5ac9bf55d643f1f89285b3b152140", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " EntryResult[] queryIn(Index index) throws IOException", "signatureAfterChange": " EntryResult[] queryIn(Index index) throws IOException", "diff": ["-\treturn index.query(getMatchCategories(), key, matchRule); // match rule is irrelevant when the key is null", "+\treturn index.query(getIndexCategories(), key, matchRule); // match rule is irrelevant when the key is null"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff4f7afbfb4b8a03f0674385d5dd89c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CreateImportsTests.java", "commitBeforeChange": "08b295e40c7c27b53b1136298913fff09d368d63", "commitAfterChange": "d8bba06dba65d28b4ac0590368e9ea6b313bfaa8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void test008() throws JavaModelException", "signatureAfterChange": " \tpublic void test008() throws JavaModelException", "diff": ["-\t\t\tassertDeltas(", "+\t\t\tassertWorkingCopyDeltas("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff69ae0737ca7abedb68c1335267331a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "fe25f265c04b05b78a3922c802443d0f290eb28d", "commitAfterChange": "24d226ada8d61f965d94976697c07601e6dce9f7", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": "  private char[] readIndexState()", "signatureAfterChange": "  private char[] readIndexState()", "diff": ["-\t\t\tJobManager.verbose(\"Failed to read saved index file names\"); //$NON-NLS-1$", "+\t\t\tUtil.verbose(\"Failed to read saved index file names\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff6d1a7dcf877149370c2805542bc789", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "e9215020072f2df9a0b47df094d17dfa3ad95402", "commitAfterChange": "2af56d6fe3e00a7c799ea8c6f7aeb1409e4db2f8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void setJavaConventionsSettings()", "signatureAfterChange": "  \tpublic void setJavaConventionsSettings()", "diff": ["-\t\tthis.alignment_for_enum_constants = Alignment.NONE;", "+\t\tthis.alignment_for_enum_constants = Alignment.M_NO_ALIGNMENT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff762b53c490f75e8e020309c6f4e436", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CollisionCase.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn setupSuite(testClass());", "+\treturn buildAllCompliancesRegressionTestSetupSuite(testClass());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff8b625f0925b5601058c97b7e28532f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LRUCacheEnumerator.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public boolean hasMoreElements()", "signatureAfterChange": " public boolean hasMoreElements()", "diff": ["-\treturn fElementQueue != null;", "+\treturn elementQueue != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff951e8bf7ad2023c8132f4295fa1aa4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "90b7f4b65b3eb709f13c9bd66bd24306b0bf8404", "commitAfterChange": "7635ad9d8208af9add1bbd0cd053ea23dd9e3923", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " public boolean isInterface() throws JavaModelException", "signatureAfterChange": " public boolean isInterface() throws JavaModelException", "diff": ["-\treturn info.getKind() == IGenericType.INTERFACE;", "+\treturn info.getKind() == IGenericType.INTERFACE_DECL;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffada96a5a266408e224538d46fde97f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 46, "signatureBeforeChange": " \t \tprivate int rewriteJavadoc(ASTNode node, StructuralPropertyDescriptor property)", "signatureAfterChange": " \t \tprivate int rewriteJavadoc(ASTNode node, StructuralPropertyDescriptor property)", "diff": ["-\t", "-\t\t\tString indent= getLineDelimiter() + getIndentString(pos);", "+\t\t\tString indent= getLineDelimiter() + getIndentAtOffset(pos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffba2c69a126872a0595bcde141df87b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Wildcard.java", "commitBeforeChange": "7e90cfc843b0651b2df6811a5c412b5db3d07d3e", "commitAfterChange": "5aa22ef02c63418c06be6cd6a1ebf3ebbd649c6f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t \tprivate void resolveAnnotations(Scope scope)", "signatureAfterChange": "  \t \tprivate void resolveAnnotations(Scope scope)", "diff": ["+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=391315", "-\t\t\t\t\tresolveAnnotations((BlockScope) scope, this.annotations[0], new Annotation.TypeUseBinding(Binding.TYPE_USE));", "+\t\t\t\t\tresolveAnnotations((BlockScope) scope, this.annotations[0], new Annotation.TypeUseBinding(Binding.TYPE_PARAMETER));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffc04be6d57b2f8efb2ef44e1c76e856", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetMessageSend.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif ((((NameReference) this.receiver).bits & BindingIds.TYPE) != 0) {", "+\t\t\tif ((((NameReference) this.receiver).bits & Binding.TYPE) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffd28b173e1e92593b5fb0923629f69d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "fbf1dc74111046346637967ca91e93e8fc0c5f38", "commitAfterChange": "30b5f4681e6bde6cf7c8af9cdfc4f18b157d7133", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tpublic ISearchableNameEnvironment newSearchableNameEnvironment(ICompilationUnit[] workingCopies) throws JavaModelException", "signatureAfterChange": " \tpublic SearchableEnvironment newSearchableNameEnvironment(ICompilationUnit[] workingCopies) throws JavaModelException", "diff": ["-\tpublic ISearchableNameEnvironment newSearchableNameEnvironment(ICompilationUnit[] workingCopies) throws JavaModelException {", "+\tpublic SearchableEnvironment newSearchableNameEnvironment(ICompilationUnit[] workingCopies) throws JavaModelException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffd8ece41adc71d04c1a5118a8ecdf7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceElementParserTest.java", "commitBeforeChange": "14aaae6e589afc08756540e2b0c7b0b83003376b", "commitAfterChange": "0f2fe4c87f2d34f3b54dd9231d53f8675d730578", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static Test suite()", "signatureAfterChange": " public static Test suite()", "diff": ["-\treturn buildAllCompliancesRegressionTestSetupSuite(SourceElementParserTest.class);", "+\treturn buildAllCompliancesTestSuite(SourceElementParserTest.class);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ffea6d25b04504314b9757f560a675e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "6b5b085e3e9563b154e5009244bbcc6d1d33692f", "commitAfterChange": "049dab9c31d1b1f51426de321e572c2d874350bd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \r \tprivate void updateClasspath() throws JavaModelException", "signatureAfterChange": "\r \r \tprivate void updateClasspath() throws JavaModelException", "diff": ["-\t\tif (this.mayChangeProjectDependencies){\r", "+\t\tif (this.needCycleCheck){\r"]}], "num": 28957}