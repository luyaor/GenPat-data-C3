{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7970c17b14bb091773ea28debaecf0b7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f58513ca3e37dbcedf6d4440fc34bd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "bdb46398f502c535ec9d92a9621db840f99f202d", "commitAfterChange": "d3120b46bb4300cffeb8a57774ffc0473ab3baac", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testIncompatibleJdkLEvelOnWksp() throws JavaModelException", "signatureAfterChange": " public void testIncompatibleJdkLEvelOnWksp() throws JavaModelException", "diff": ["+\t\tlong wkspRuntimeJDKLevel = CompilerOptions.versionToJdkLevel(wkspRuntime);", "-\t\t\tif (i>0) buffer.append('\\n');", "-\t\t\tbuffer.append(getJdkLevelProblem(wkspRuntime, project.getPackageFragmentRoot(classlibs[i]).getPath().makeRelative().toString(), IMarker.SEVERITY_WARNING));", "+\t\t\tString path = project.getPackageFragmentRoot(classlibs[i]).getPath().makeRelative().toString();", "+\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), new Path(path).makeAbsolute(), true);", "+\t\t\tlong libraryJDK = org.eclipse.jdt.internal.core.util.Util.getJdkLevel(target);", "+\t\t\tif (libraryJDK > wkspRuntimeJDKLevel) {", "+\t\t\t\tif (i>0) buffer.append('\\n');", "+\t\t\t\tbuffer.append(getJdkLevelProblem(wkspRuntime, path, IMarker.SEVERITY_WARNING));", "+\t\t\t}", "-\t\t\tif (i>0) buffer.append('\\n');", "-\t\t\tbuffer.append(getJdkLevelProblem(wkspRuntime, project.getPackageFragmentRoot(classlibs[i]).getPath().makeRelative().toString(), IMarker.SEVERITY_ERROR));", "+\t\t\tString path = project.getPackageFragmentRoot(classlibs[i]).getPath().makeRelative().toString();", "+\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), new Path(path).makeAbsolute(), true);", "+\t\t\tlong libraryJDK = org.eclipse.jdt.internal.core.util.Util.getJdkLevel(target);", "+\t\t\tif (libraryJDK > wkspRuntimeJDKLevel) {", "+\t\t\t\tif (i>0) buffer.append('\\n');", "+\t\t\t\tbuffer.append(getJdkLevelProblem(wkspRuntime, path, IMarker.SEVERITY_ERROR));", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8ef8d3e2f600c28d278b2c4a6305e3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "bdb46398f502c535ec9d92a9621db840f99f202d", "commitAfterChange": "d3120b46bb4300cffeb8a57774ffc0473ab3baac", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void testIncompatibleJdkLEvelOnProject() throws JavaModelException", "signatureAfterChange": " public void testIncompatibleJdkLEvelOnProject() throws JavaModelException", "diff": ["+\tlong projectRuntimeJDKLevel = CompilerOptions.versionToJdkLevel(projectRuntime);", "-\t\tif (i>0) buffer.append('\\n');", "-\t\tbuffer.append(getJdkLevelProblem(projectRuntime, project.getPackageFragmentRoot(classlibs[i]).getPath().makeRelative().toString(), IMarker.SEVERITY_WARNING));", "+\t\tString path = project.getPackageFragmentRoot(classlibs[i]).getPath().makeRelative().toString();", "+\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), new Path(path).makeAbsolute(), true);", "+\t\tlong libraryJDK = org.eclipse.jdt.internal.core.util.Util.getJdkLevel(target);", "+\t\tif (libraryJDK > projectRuntimeJDKLevel) {", "+\t\t\tif (i>0) buffer.append('\\n');", "+\t\t\tbuffer.append(getJdkLevelProblem(projectRuntime, path, IMarker.SEVERITY_WARNING));", "+\t\t}", "-\t\tif (i>0) buffer.append('\\n');", "-\t\tbuffer.append(getJdkLevelProblem(projectRuntime, project.getPackageFragmentRoot(classlibs[i]).getPath().makeRelative().toString(), IMarker.SEVERITY_ERROR));", "+\t\tString path = project.getPackageFragmentRoot(classlibs[i]).getPath().makeRelative().toString();", "+\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), new Path(path).makeAbsolute(), true);", "+\t\tlong libraryJDK = org.eclipse.jdt.internal.core.util.Util.getJdkLevel(target);", "+\t\tif (libraryJDK > projectRuntimeJDKLevel) {", "+\t\t\tif (i>0) buffer.append('\\n');", "+\t\t\tbuffer.append(getJdkLevelProblem(projectRuntime, path, IMarker.SEVERITY_ERROR));", "+\t\t}"]}], "num": 65159}