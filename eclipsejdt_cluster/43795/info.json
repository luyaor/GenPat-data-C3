{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7706811df8d1f3c893dda28528f0ded9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2597dc771849d7e2527db1952c68fb27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "c9dd851a757195fe684b1a5b7f8f16cc8d3ff375", "commitAfterChange": "b79c29d7f1a4a20398432bd28f19825acd39464f", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tvoid findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tvoid findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\t/* initialize progress monitor */", "-\t\t\tif (monitor != null)", "-\t\t\t\tmonitor.beginTask(Messages.engine_searching, 100); ", "+\t\t\t/* initialize progress monitor */", "+\t\t\tint length = participants.length;", "+\t\t\tif (monitor != null)", "+\t\t\t\tmonitor.beginTask(Messages.engine_searching, 100 * length); ", "-\t\t\tfor (int i = 0, l = participants.length; i < l; i++) {", "+\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tSubProgressMonitor subMonitor= monitor==null ? null : new SubProgressMonitor(monitor, 1000);", "-\t\t\t\tif (subMonitor != null) subMonitor.beginTask(\"\", 1000); //$NON-NLS-1$", "-\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Messages.bind(Messages.engine_searching_indexing, new String[] {participant.getDescription()})); ", "+\t\t\t\t\tif (monitor != null) monitor.subTask(Messages.bind(Messages.engine_searching_indexing, new String[] {participant.getDescription()})); ", "-\t\t\t\t\t\tsubMonitor);", "+\t\t\t\t\t\tmonitor==null ? null : new SubProgressMonitor(monitor, 50));", "-\t\t\t\t\tif (subMonitor != null) subMonitor.subTask(Messages.bind(Messages.engine_searching_matching, new String[] {participant.getDescription()})); ", "+\t\t\t\t\tif (monitor != null) monitor.subTask(Messages.bind(Messages.engine_searching_matching, new String[] {participant.getDescription()})); ", "-\t\t\t\t\t\tparticipant.locateMatches(matches, pattern, scope, requestor, subMonitor);", "+\t\t\t\t\t\tparticipant.locateMatches(matches, pattern, scope, requestor, monitor==null ? null : new SubProgressMonitor(monitor, 50));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37ae0f216d904670bdcbfa029c02cb71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "0199702ff6cca8392f62e334c86875a1b31484e2", "commitAfterChange": "4d36cf912bda83cf994dbb030b9c8cbc9e169048", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tvoid findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tvoid findMatches(SearchPattern pattern, SearchParticipant[] participants, IJavaSearchScope scope, SearchRequestor requestor, IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tif (monitor != null && monitor.isCanceled()) throw new OperationCanceledException();", "-\t\t\tif (monitor != null)", "-\t\t\t\tmonitor.beginTask(Messages.engine_searching, 100 * length);", "+\t\t\tSubMonitor loopMonitor = SubMonitor.convert(monitor, Messages.engine_searching, length);", "-\t\t\t\tif (monitor != null && monitor.isCanceled()) throw new OperationCanceledException();", "+\t\t\t\tSubMonitor iterationMonitor = loopMonitor.split(1).setWorkRemaining(100);", "-\t\t\t\t\tif (monitor != null) monitor.subTask(Messages.bind(Messages.engine_searching_indexing, new String[] {participant.getDescription()}));", "+\t\t\t\t\titerationMonitor.subTask(Messages.bind(Messages.engine_searching_indexing, new String[] {participant.getDescription()}));", "-\t\t\t\t\t\tmonitor==null ? null : new SubProgressMonitor(monitor, 50));", "-\t\t\t\t\tif (monitor != null && monitor.isCanceled()) throw new OperationCanceledException();", "+\t\t\t\t\t\titerationMonitor.split(50));", "-\t\t\t\t\tif (monitor != null) monitor.subTask(Messages.bind(Messages.engine_searching_matching, new String[] {participant.getDescription()}));", "+\t\t\t\t\titerationMonitor.subTask(Messages.bind(Messages.engine_searching_matching, new String[] {participant.getDescription()}));", "-\t\t\t\t\t\tparticipant.locateMatches(matches, pattern, scope, requestor, monitor==null ? null : new SubProgressMonitor(monitor, 50));", "+\t\t\t\t\t\tparticipant.locateMatches(matches, pattern, scope, requestor, iterationMonitor.split(50));", "-\t\t\tif (monitor != null)", "-\t\t\t\tmonitor.done();"]}], "num": 43795}