{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "751974a71b42867d1de79b51ce52f5c1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b5100f2b62135dcc0de6b3b93d19ec1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic CompilationUnitDeclaration dietParse(final char[] source)", "signatureAfterChange": " \tpublic boolean hasAlreadyDefinedType(CompilationUnitDeclaration parsedUnit)", "diff": ["+\t}", "+\tpublic boolean hasAlreadyDefinedType(CompilationUnitDeclaration parsedUnit) {", "+\t\tif (parsedUnit == null) return false;", "+\t\tCompilationResult result = parsedUnit.compilationResult;", "+\t\tif (result == null) return false;", "+\t\tfor (int i = 0; i < result.problemCount; i++) {", "+\t\t\tIProblem problem = result.problems[i];", "+\t\t\tif (problem.getID() == IProblem.DuplicateTypes) {", "+\t\t\t\treturn true;", "+\t\t\t}", "+\t\treturn false;", "+\t}\t", "-", "-\tpublic CompilationUnitDeclaration dietParse(final char[] source) {", "-\t\t// source unit", "-\t\tICompilationUnit sourceUnit = new ICompilationUnit() {", "-\t\t\tpublic char[] getContents() {", "-\t\t\t\treturn source;", "-\t\t\t}", "-\t\t\tpublic char[] getFileName() {", "-\t\t\t\treturn EMPTY_FILE_NAME; // not used", "-\t\t\t}", "-\t\t\tpublic char[] getMainTypeName() {", "-\t\t\t\treturn null; // don't need to check if main type name == compilation unit name", "-\t\t\t}", "-\t\t\tpublic char[][] getPackageName() {", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t};", "-\t\t", "-\t\t// diet parse", "-\t\tCompilationResult compilationResult = new CompilationResult(sourceUnit, 0, 0, 0);  ", "-\t\treturn this.parser.dietParse(sourceUnit, compilationResult);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9df995e9dda8244a8d97c771a8d44f78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic boolean hasAlreadyDefinedType(CompilationUnitDeclaration parsedUnit)", "signatureAfterChange": " protected boolean hasAlreadyDefinedType(CompilationUnitDeclaration parsedUnit)", "diff": ["-\t}", "-\tpublic boolean hasAlreadyDefinedType(CompilationUnitDeclaration parsedUnit) {", "-\t\tif (parsedUnit == null) return false;", "-\t\tCompilationResult result = parsedUnit.compilationResult;", "-\t\tif (result == null) return false;", "-\t\tfor (int i = 0; i < result.problemCount; i++) {", "-\t\t\tIProblem problem = result.problems[i];", "-\t\t\tif (problem.getID() == IProblem.DuplicateTypes) {", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\treturn false;", "-\t}\t", "+}", "+protected boolean hasAlreadyDefinedType(CompilationUnitDeclaration parsedUnit) {", "+\tCompilationResult result = parsedUnit.compilationResult;", "+\tif (result == null) return false;", "+\tfor (int i = 0; i < result.problemCount; i++)", "+\t\tif (result.problems[i].getID() == IProblem.DuplicateTypes)", "+\t\t\treturn true;", "+\treturn false;", "+}\t"]}], "num": 59445}