{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08659785ba41da0d763491b86e064ee1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a6598bfe3c645268bb09eb6a192593", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 44, "signatureBeforeChange": " public void testResolveMethodWithInnerTypeInClassFile2() throws JavaModelException", "signatureAfterChange": " public void testResolveMethodWithInnerTypeInClassFile2() throws JavaModelException", "diff": ["- */", "-public void testResolveMethodWithInnerTypeInClassFile2() throws JavaModelException {", "-\tIClassFile cu = getClassFile(\"Resolve\", \"zzz.jar\", \"\", \"MyClass2$Inner.class\");", "-", "-\tString str = cu.getSource();", "-\tString selectAt = \"method\";", "-\tString selection = \"method\";", "-\tint start = str.lastIndexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-", "-\tassertTrue(\"should have one method\", elements.length == 1 && ", "-\t\telements[0].getElementName().equals(\"method\") &&", "-\t\telements[0] instanceof IMethod);\t", "-\t\t", "-\tIMethod method = (IMethod) elements[0];", "-\tISourceRange sourceRange = method.getSourceRange();", "-\tString methodString = \"void method(MyClass2.Inner[] arg){}\";", "-\tint o = str.indexOf(methodString);", "-\tint l = methodString.length();", "-\tassertTrue(\"source range should be (\"+o+\",\"+l+\") and not (\"+sourceRange.getOffset()+\",\"+sourceRange.getLength()+\")\", sourceRange.getOffset() == o && sourceRange.getLength() == l);", "-}", "+ */", "+public void testResolveMethodWithInnerTypeInClassFile2() throws JavaModelException {", "+\tIClassFile cu = getClassFile(\"Resolve\", \"zzz.jar\", \"\", \"MyClass2$Inner.class\");", "+", "+\tString str = cu.getSource();", "+\tString selectAt = \"method\";", "+\tString selection = \"method\";", "+\tint start = str.lastIndexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"method [in MyClass2 [in MyClass2.class [in <default> [in zzz.jar [in Resolve]]]]]\",", "+\t\telements", "+\t);", "+\t\t", "+\tIMethod method = (IMethod) elements[0];", "+\tISourceRange sourceRange = method.getSourceRange();", "+\tString methodString = \"void method(MyClass2.Inner[] arg){}\";", "+\tint o = str.indexOf(methodString);", "+\tint l = methodString.length();", "+\tassertEquals(\"Unexpected offset\", o, sourceRange.getOffset());", "+\tassertEquals(\"Unexpected length\", l, sourceRange.getLength());", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe8083d056883d6f70cbc06f6169e167", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ResolveTests.java", "commitBeforeChange": "34106cbe5c11d866864bb97a52bcf55f920c9662", "commitAfterChange": "f08e2fcfb74b9a513988b6c92b3d0f1c94eb6ecf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void testResolveTypeInComment() throws JavaModelException", "signatureAfterChange": " public void testResolveTypeInComment() throws JavaModelException", "diff": ["- */", "-public void testResolveTypeInComment() throws JavaModelException {", "-\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveTypeInComment.java\");", "-", "-\tString str = cu.getSource();", "-\tString selectAt = \"X */\";", "-\tString selection = \"X\";", "-\tint start = str.indexOf(selectAt);", "-\tint length = selection.length();", "-\tIJavaElement[] elements = cu.codeSelect(start, length);", "-\t", "-\tassertTrue(\"should have one type\", elements.length == 1 &&", "-\t\telements[0] instanceof IType &&", "-\t\t((IType)elements[0]).getFullyQualifiedName().equals(\"p2.X\"));\t", "-}", "+ */", "+public void testResolveTypeInComment() throws JavaModelException {", "+\tICompilationUnit cu = getCompilationUnit(\"Resolve\", \"src\", \"\", \"ResolveTypeInComment.java\");", "+", "+\tString str = cu.getSource();", "+\tString selectAt = \"X */\";", "+\tString selection = \"X\";", "+\tint start = str.indexOf(selectAt);", "+\tint length = selection.length();", "+\tIJavaElement[] elements = cu.codeSelect(start, length);", "+\t", "+\tassertElementsEqual(", "+\t\t\"Unexpected elements\",", "+\t\t\"X [in X.java [in p2 [in src [in Resolve]]]]\",", "+\t\telements", "+\t);", "+}"]}], "num": 9358}