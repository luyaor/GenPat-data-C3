{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e461add13e2b03cf625f845760cef0a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "51660543d24b1e3209dda2cb7e756568", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "65b4e15798189e35310112aac16988bcdf7eef0b", "commitAfterChange": "78b182da9e370f6f00f239fd2a2de8309bdf9aac", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate void disassemble(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \tprivate void disassemble(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\t\tfor (int i = 0; i < length - 1; i++) {", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tif (i != 0) {", "+\t\t\t\t\tbuffer", "+\t\t\t\t\t\t.append(Messages.disassembler_comma)", "+\t\t\t\t\t\t.append(Messages.disassembler_space);", "+\t\t\t\t}", "-\t\t\t\tbuffer", "-\t\t\t\t\t.append(returnClassName(exceptionName, '.', mode))", "-\t\t\t\t\t.append(Messages.disassembler_comma)", "-\t\t\t\t\t.append(Messages.disassembler_space); ", "+\t\t\t\tbuffer.append(returnClassName(exceptionName, '.', mode));", "-\t\t\tchar[] exceptionName = exceptionNames[length - 1];", "-\t\t\tCharOperation.replace(exceptionName, '/', '.');", "-\t\t\tbuffer.append(returnClassName(exceptionName, '.', mode));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0ddf90e8547bf42c3fd4ec6e217949c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "65b4e15798189e35310112aac16988bcdf7eef0b", "commitAfterChange": "78b182da9e370f6f00f239fd2a2de8309bdf9aac", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate void disassembleEnumConstructor(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": "  \tprivate void disassembleEnumConstructor(IClassFileReader classFileReader, char[] className, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\t\tfor (int i = 0; i < length - 1; i++) {", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tif (i != 0) {", "+\t\t\t\t\tbuffer", "+    \t\t\t\t\t.append(Messages.disassembler_comma)", "+    \t\t\t\t\t.append(Messages.disassembler_space);", "+\t\t\t\t}", "-\t\t\t\tbuffer", "-\t\t\t\t\t.append(returnClassName(exceptionName, '.', mode))", "-\t\t\t\t\t.append(Messages.disassembler_comma)", "-\t\t\t\t\t.append(Messages.disassembler_space); ", "+\t\t\t\tbuffer.append(returnClassName(exceptionName, '.', mode));", "-\t\t\tchar[] exceptionName = exceptionNames[length - 1];", "-\t\t\tCharOperation.replace(exceptionName, '/', '.');", "-\t\t\tbuffer.append(returnClassName(exceptionName, '.', mode));"]}], "num": 51372}