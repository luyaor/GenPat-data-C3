{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6a974def9953a31f09a024e4d8a28e5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf6535d4cb0732c93a864a40a2f0879e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "85a51230859ba76a62ce4d566f4cbd47aac06488", "commitAfterChange": "3885d0327ef37626bb68aa8a0a9e1a4a5bb4ba7a", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 62, "signatureBeforeChange": " public static char[] toCharArray(char[] methodSignature, char[] methodName, char[][] parameterNames, boolean fullyQualifyTypeNames, boolean includeReturnType)", "signatureAfterChange": " public static char[] toCharArray(char[] methodSignature, char[] methodName, char[][] parameterNames, boolean fullyQualifyTypeNames, boolean includeReturnType, boolean isVargArgs)", "diff": ["+ */", "+public static char[] toCharArray(char[] methodSignature, char[] methodName, char[][] parameterNames, boolean fullyQualifyTypeNames, boolean includeReturnType, boolean isVargArgs) {", "-\tfor (int i = 0; i < pts.length; i++) {", "-\t\tappendTypeSignature(pts[i], 0 , fullyQualifyTypeNames, buffer);", "+\tfor (int i = 0, max = pts.length; i < max; i++) {", "+\t\tif (i == max - 1) {", "+\t\t\tappendTypeSignature(pts[i], 0 , fullyQualifyTypeNames, buffer, isVargArgs);", "+\t\t} else {", "+\t\t\tappendTypeSignature(pts[i], 0 , fullyQualifyTypeNames, buffer);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cac624fd2799436373c5a24ac4bdfa2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "9a828b6f308f1048d5448d6c6f9c881639322d34", "commitAfterChange": "5028738b115a56f3f04beb6089ff2c05854751f1", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 35, "signatureBeforeChange": " public static char[] toCharArray(char[] methodSignature, char[] methodName, char[][] parameterNames, boolean fullyQualifyTypeNames, boolean includeReturnType)", "signatureAfterChange": " public static char[] toCharArray( \t\tchar[] methodSignature, \t\tchar[] methodName, \t\tchar[][] parameterNames, \t\tboolean fullyQualifyTypeNames, \t\tboolean includeReturnType, \t\tboolean includeFormalTypeParameters, \t\tboolean includeThrownExceptions)", "diff": ["+ */", "+public static char[] toCharArray(", "+\t\tchar[] methodSignature,", "+\t\tchar[] methodName,", "+\t\tchar[][] parameterNames,", "+\t\tboolean fullyQualifyTypeNames,", "+\t\tboolean includeReturnType,", "+\t\tboolean includeFormalTypeParameters,", "+\t\tboolean includeThrownExceptions) {", "+\t// TODO (jeem) - needs to handle includeFormalTypeParameters and includeThrownExceptions"]}], "num": 7733}