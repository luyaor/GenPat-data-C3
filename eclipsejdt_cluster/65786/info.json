{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef6d4f8ab15ba063e916e1b71a8ee8e0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63cc3ba116b34d7d25078111b56f50c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "1348bf3232f6ef4a567f23710b6f05d6366e90ff", "commitAfterChange": "84eba2ceb4c4828ad681b6374034160ffda08eef", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \r public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "signatureAfterChange": "\r \r public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\t\tCompilationResult result = new CompilationResult(topLevelType.getFileName(), i, suppliedLength);\r", "+\t\t\t\tCompilationResult result = new CompilationResult(topLevelType.getFileName(), i, suppliedLength, this.options.maxProblemsPerUnit);\r", "-\t\t\tCompilationResult unitResult = new CompilationResult(sourceUnit, suppliedLength+i, suppliedLength+sourceLength); \r", "+\t\t\tCompilationResult unitResult = new CompilationResult(sourceUnit, suppliedLength+i, suppliedLength+sourceLength, this.options.maxProblemsPerUnit); \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67c242caa76bd18db788692e58d1a2e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void selectType(char[] typeName, IType context) throws JavaModelException", "signatureAfterChange": " \tpublic void selectType(char[] typeName, IType context) throws JavaModelException", "diff": ["-\t\t\t// find the outer most type", "-\t\t\tIType outerType = context;", "-\t\t\tIType parent = context.getDeclaringType();", "-\t\t\twhile (parent != null) {", "-\t\t\t\touterType = parent;", "-\t\t\t\tparent = parent.getDeclaringType();", "-\t\t\t}", "-", "-\t\t\t// compute parse tree for this most outer type", "-\t\t\t\tISourceType outerTypeInfo = (ISourceType) ((SourceType) outerType).getElementInfo();", "-\t\t\t\tCompilationResult result = new CompilationResult(outerTypeInfo.getFileName(), 1, 1, this.compilerOptions.maxProblemsPerUnit);", "+\t\t\t\tCompilationResult result = new CompilationResult((org.eclipse.jdt.internal.compiler.env.ICompilationUnit) cu, 1, 1, this.compilerOptions.maxProblemsPerUnit);"]}], "num": 65786}