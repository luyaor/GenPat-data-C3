{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cbb3207fb34297895a1c137451ca28e8", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0467698af90c7898e15d2ac91de4f1ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 173, "signatureBeforeChange": " \tpublic void _test0176_try_catch()", "signatureAfterChange": " public void test0556_try_catch()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0176_try_catch() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t try {\\n\" + ", "-\t\t\t\t\"\t\t   o = null;\\n\" + ", "-\t\t\t\t\"\t\t   throwException();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t catch (Throwable t) {\\n\" + ", "-\t\t\t\t\"\t\t\t o.toString();\\n\" +", "-\t\t\t\t  // complain: know o is null despite the lack of a definite assignment", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"  void throwException() throws Exception {\\n\" + ", "-\t\t\t\t\"\t\t throw new Exception();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"WARN\"", "-\t\t);", "-\t}", "+// null analysis - try/catch", "+public void test0556_try_catch() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = new Object();\\n\" + ", "+\t\t\t\"    try {\\n\" + ", "+\t\t\t\"      o = null;\\n\" + ", "+\t\t\t\"      throwException();\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    catch (Throwable t) {\\n\" + ", "+\t\t\t\"      o.toString();\\n\" + // complain NPE", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void throwException() throws Exception {\\n\" + ", "+\t\t\t\"    throw new Exception();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd9f1f67ba92a59b4a5868a58f15b594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 223, "signatureBeforeChange": " \tpublic void test0303_switch()", "signatureAfterChange": " public void test0803_switch()", "diff": ["-\t// null analysis -- switch", "-\tpublic void test0303_switch() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\tint k;\\n\" + ", "-\t\t\t\t\"\tvoid foo() {\\n\" + ", "-\t\t\t\t\"\t\tObject o = null;\\n\" + ", "-\t\t\t\t\"\t\tswitch (k) {\\n\" + ", "-\t\t\t\t\"\t\t\tcase 0 :\\n\" + ", "-\t\t\t\t\"\t\t\t  o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t\tcase 1 :\\n\" + ", "-\t\t\t\t\"\t\t\t\to.toString();\\n\" + // quiet: may come through 0 or 1", "-\t\t\t\t\"\t\t\t\tbreak;\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "+// null analysis -- switch", "+public void test0803_switch() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\" int k;\\n\" + ", "+\t\t\t\" void foo() {\\n\" + ", "+\t\t\t\"   Object o = null;\\n\" + ", "+\t\t\t\"   switch (k) {\\n\" + ", "+\t\t\t\"     case 0 :\\n\" + ", "+\t\t\t\"       o = new Object();\\n\" + ", "+\t\t\t\"     case 1 :\\n\" + ", "+\t\t\t\"       o.toString();\\n\" + // complain: may come through 0 or 1", "+\t\t\t\"       break;\\n\" + ", "+\t\t\t\"   }\\n\" + ", "+\t\t\t\" }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}], "num": 27022}