{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbbb09b83b0f30edfad1a597cbead426", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cb1ec01b5aba5530088a468ec6f1a4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 253, "methodNumberAfterChange": 253, "signatureBeforeChange": " protected void pushOnIntStack(int pos)", "signatureAfterChange": " protected void pushOnIntStack(int pos)", "diff": ["-\t\tintStack[++intPtr] = pos;", "+\t\tthis.intStack[++this.intPtr] = pos;", "-\t\t//intPtr is correct ", "-\t\tint oldStackLength = intStack.length;", "-\t\tint oldStack[] = intStack;", "-\t\tintStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldStack, 0, intStack, 0, oldStackLength);", "-\t\tintStack[intPtr] = pos;", "+\t\t//this.intPtr is correct ", "+\t\tint oldStackLength = this.intStack.length;", "+\t\tint oldStack[] = this.intStack;", "+\t\tthis.intStack = new int[oldStackLength + StackIncrement];", "+\t\tSystem.arraycopy(oldStack, 0, this.intStack, 0, oldStackLength);", "+\t\tthis.intStack[this.intPtr] = pos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de4b3628793a49b4292750724c6369a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " protected void consumeAssignmentOperator(int pos)", "signatureAfterChange": " protected void consumeAssignmentOperator(int pos)", "diff": ["-\t\tintStack[++intPtr] = pos;", "+\t\tthis.intStack[++this.intPtr] = pos;", "-\t\t//intPtr is correct ", "-\t\tint oldStackLength = intStack.length;", "-\t\tint oldStack[] = intStack;", "-\t\tintStack = new int[oldStackLength + StackIncrement];", "-\t\tSystem.arraycopy(oldStack, 0, intStack, 0, oldStackLength);", "-\t\tintStack[intPtr] = pos;", "+\t\t//this.intPtr is correct ", "+\t\tint oldStackLength = this.intStack.length;", "+\t\tint oldStack[] = this.intStack;", "+\t\tthis.intStack = new int[oldStackLength + StackIncrement];", "+\t\tSystem.arraycopy(oldStack, 0, this.intStack, 0, oldStackLength);", "+\t\tthis.intStack[this.intPtr] = pos;"]}], "num": 63467}