{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b601ed47cd35b45c6c4e945def20ad45", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cfb12b21c3067fad632be3fa8f701be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "0f549220f498cda7c86a65324f594a6b8e8c2616", "commitAfterChange": "17fcd420e0756889bcaffeff4cf983b2cff84a3e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected int matchNameValue(char[] pattern, char[] name)", "signatureAfterChange": " protected int matchNameValue(char[] pattern, char[] name)", "diff": ["-\tboolean canBePrefix = name.length > pattern.length;", "+\tboolean canBePrefix = name.length >= pattern.length;", "+\tif (this.isCamelCase && matchFirstChar && CharOperation.camelCaseMatch(pattern, name)) {", "+\t\treturn POSSIBLE_CAMELCASE_MATCH;", "+\t}", "-\t\t\tif (sameLength && matchFirstChar && \tCharOperation.equals(pattern, name, this.isCaseSensitive)) {", "+\t\t\tif (!this.isCamelCase && sameLength && matchFirstChar && CharOperation.equals(pattern, name, this.isCaseSensitive)) {", "-\t\t\t}", "-\t\t\tif (this.isCamelCase) {", "-\t\t\t\tif (canBePrefix && matchFirstChar && CharOperation.prefixEquals(pattern, name, this.isCaseSensitive)) {", "-\t\t\t\t\treturn POSSIBLE_PREFIX_MATCH;", "-\t\t\t\t}", "-\t\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(pattern, name)) {", "-\t\t\t\t\treturn POSSIBLE_CAMELCASE_MATCH;", "-\t\t\t\t}", "-\t\t\tif (sameLength && matchFirstChar && \tCharOperation.equals(pattern, name, this.isCaseSensitive)) {", "-\t\t\t\treturn POSSIBLE_FULL_MATCH;", "-\t\t\t}", "-\t\t\t}", "-\t\t\tif (this.isCamelCase && matchFirstChar && CharOperation.camelCaseMatch(pattern, name)) {", "-\t\t\t\treturn POSSIBLE_CAMELCASE_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97d8293d0ab5334d276187007b33a57c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected int matchNameValue(char[] pattern, char[] name)", "signatureAfterChange": " protected int matchNameValue(char[] pattern, char[] name)", "diff": ["-\tif (this.isCamelCase && matchFirstChar && CharOperation.camelCaseMatch(pattern, name)) {", "-\t\treturn POSSIBLE_MATCH;", "+\tif (this.isCamelCase) {", "+\t\tif (matchFirstChar && CharOperation.camelCaseMatch(pattern, name, (this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0)) {", "+\t\t\treturn POSSIBLE_MATCH;", "+\t\t}", "+\t\tif (this.isCaseSensitive) return IMPOSSIBLE_MATCH;", "-\t\t\tif (!this.isCamelCase) {", "-\t\t\t\tif (sameLength && matchFirstChar && CharOperation.equals(pattern, name, this.isCaseSensitive)) {", "-\t\t\t\t\treturn POSSIBLE_MATCH | EXACT_FLAVOR;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+\t\t\tif (sameLength && matchFirstChar && CharOperation.equals(pattern, name, this.isCaseSensitive)) {", "+\t\t\t\treturn POSSIBLE_MATCH | EXACT_FLAVOR;", "-\t\t\t// fall through next case to match as prefix if camel case failed", "+\t\t\tbreak;", "+\t\t\t// TODO_PERFS (frederic) Not sure this lowercase is necessary"]}], "num": 44759}