{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61d8775031ccb5c9058842b206a81386", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aa77ac663296551f09f5c99bbc32195", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 371, "methodNumberAfterChange": 379, "signatureBeforeChange": " public void testBug124624_HM_new() throws CoreException", "signatureAfterChange": " private void setupBug124624() throws JavaModelException", "diff": ["-public void testBug124624_HM_new() throws CoreException {", "+private void setupBug124624() throws JavaModelException {", "-\t\t\"class HatMappage {}\\n\"", "-\t);", "-\tsearch(\"HM\", IJavaSearchConstants.TYPE, IJavaSearchConstants.DECLARATIONS, SearchPattern.R_CAMEL_CASE_MATCH);", "-\tassertSearchResults(", "-\t\t\"src/Test.java HashMap [HashMap] EXACT_MATCH\\n\" + ", "-\t\t\"src/Test.java HtmlMapper [HtmlMapper] EXACT_MATCH\\n\" + ", "-\t\t\"src/Test.java HatMappage [HatMappage] EXACT_MATCH\"", "+\t\t\"class HaxMapxxxx {}\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8964c5b85ee865b42845ff1543448fce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProgrammingProblemsTest.java", "commitBeforeChange": "6e5ceb8786f5ada5e37df504e04cd8d390bc4075", "commitAfterChange": "27e2724327c75ddbe7646447a4af212947b149ed", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void testBug410218e()", "signatureAfterChange": " public void testBug410218e()", "diff": ["-\tcustomOptions.put(JavaCore.COMPILER_PB_DISCOURAGED_INVOCATION_UNLIKELY_ARGUMENT_TYPE, JavaCore.ERROR);", "-\tcustomOptions.put(JavaCore.COMPILER_PB_DISCOURAGED_INVOCATION_UNLIKELY_ARGUMENT_NOT_CASTABLE, JavaCore.WARNING);", "+\tcustomOptions.put(JavaCore.COMPILER_PB_DISCOURAGED_INVOCATION_UNLIKELY_ARGUMENT_TYPE, JavaCore.WARNING);", "-\t\t\t\"\t\treturn ints.indexOf(\\\"ONE\\\"); // bad but suppressed\\n\" +", "-\t\t\t\"\treturn ints.indexOf(o); // not suppressable error\\n\" + ", "+\t\t\t\"\t\treturn ints.indexOf(\\\"ONE\\\"); // really bad but suppressed\\n\" +", "+\t\t\t\"\treturn ints.indexOf(o); // bad but suppressed\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\"\treturn ints.indexOf(o); // not suppressable error\\n\" + ", "-\t\t\"\t                    ^\\n\" + ", "-\t\t\"Discouraged invocation of method indexOf(Object). Argument type Object is incompatible with the likely type Integer according to the declaring type List<Integer>\\n\" + "]}], "num": 4826}