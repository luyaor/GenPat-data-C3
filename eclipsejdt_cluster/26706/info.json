{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b5cdaf17c4322ff484a50d3752f17a06", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f3566591d3d5d54c38e56c29c91bc2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SortCompilationUnitElementsTests.java", "commitBeforeChange": "e060e0428f7f92647e77ad8da2c7818eb4c4e3a7", "commitAfterChange": "ddf48a7e21056eecd0111cd750a59c8617c397eb", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void test022() throws CoreException", "signatureAfterChange": " public void test022() throws CoreException", "diff": ["-\t\t\t\"\t * Returns whether a build command with the given trigger should\\n\" +", "-\t\t\t\"\t * be enabled for the given selection.\\n\" +", "-\t\t\t\"\t * @param projects The projects to use to determine enablement\\n\" +", "-\t\t\t\"\t * @param trigger The build trigger (<code>IncrementalProjectBuilder.*_BUILD</code> constants).\\n\" +", "-\t\t\t\"\t * @return <code>true</code> if the action should be enabled, and\\n\" +", "-\t\t\t\"\t * <code>false</code> otherwise.\\n\" +", "-\t\t\t\"\t */\\n\" +", "-\t\t\t\"\tpublic static boolean isEnabled(IProject[] projects, int trigger) {\\n\" +", "-\t\t\t\"\t\treturn true;\\n\" +", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"\\n\" +", "-\t\t\t\"\t/**\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"\\n\" +", "+\t\t\t\"\t/**\\n\" +", "+\t\t\t\"\t * Returns whether a build command with the given trigger should\\n\" +", "+\t\t\t\"\t * be enabled for the given selection.\\n\" +", "+\t\t\t\"\t * @param projects The projects to use to determine enablement\\n\" +", "+\t\t\t\"\t * @param trigger The build trigger (<code>IncrementalProjectBuilder.*_BUILD</code> constants).\\n\" +", "+\t\t\t\"\t * @return <code>true</code> if the action should be enabled, and\\n\" +", "+\t\t\t\"\t * <code>false</code> otherwise.\\n\" +", "+\t\t\t\"\t */\\n\" +", "+\t\t\t\"\tpublic static boolean isEnabled(IProject[] projects, int trigger) {\\n\" +", "+\t\t\t\"\t\treturn true;\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "614dfe69a80f1d2b81848623927a2d28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "17fb0d366dc56ece924ba729bd213e6dd341345f", "commitAfterChange": "914b6ca8879c091899436a3e165f852aff30c28e", "methodNumberBeforeChange": 391, "methodNumberAfterChange": 391, "signatureBeforeChange": "\r public void testBug485163()", "signatureAfterChange": "\r public void testBug485163()", "diff": ["-\t\t\"\t\\r\\n\" + \r", "+\t\t\"\\r\\n\" + \r", "+\t\t\"\\r\\n\" + \r", "+\t\t\"\t\tObject o =\\r\\n\" + \r", "+\t\t\"\\r\\n\" + \r", "+\t\t\"\t\tnew Object() {\\r\\n\" + \r", "+\t\t\"\\r\\n\" + \r", "+\t\t\"\t\t\tint a;\\r\\n\" + \r", "+\t\t\"\\r\\n\" + \r", "+\t\t\"\t\t\tvoid foo() {\\r\\n\" + \r", "+\t\t\"\\r\\n\" + \r", "+\t\t\"\t\t\t\tString sssss1 = \\\".................................................\\\" + \\\"...........................................\\\";\\r\\n\" + \r", "+\t\t\"\\r\\n\" + \r", "+\t\t\"\t\t\t\tString sssss2 = \\\".................................................\\\" + \\\"...........................................\\\";\\r\\n\" + \r", "+\t\t\"\\r\\n\" + \r", "+\t\t\"\t\t\t}\\r\\n\" + \r", "+\t\t\"\\r\\n\" + \r", "+\t\t\"\t\t};\\r\\n\" + \r", "+\t\t\"\t\tObject o =\\r\\n\" + \r", "+\t\t\"\t\t\t\t\\r\\n\" + \r", "+\t\t\"\t\t\t\tnew Object() {\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t\\r\\n\" + \r", "+\t\t\"\t\t\t\t\tint a;\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t\\r\\n\" + \r", "+\t\t\"\t\t\t\t\tvoid foo() {\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t\t\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t\tString sssss1 = \\\".................................................\\\"\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t\t\t\t+ \\\"...........................................\\\";\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t\t\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t\tString sssss2 = \\\".................................................\\\"\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t\t\t\t+ \\\"...........................................\\\";\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t\t\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t}\\r\\n\" + \r", "+\t\t\"\t\t\t\t\t\\r\\n\" + \r", "+\t\t\"\t\t\t\t};\\r\\n\" + \r", "+\t\t\"\t\t\\r\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2a6fdb091e1a6f9ac165e35cfb064e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void test046()", "signatureAfterChange": " \tpublic void test046()", "diff": ["-\t\t\t\t\"public class X {\\r\\n\" + ", "-\t\t\t\t\"\tclass E1 extends RuntimeException {\\r\\n\" + ", "-\t\t\t\t\"\t\tprivate static final long serialVersionUID = 1L;\\r\\n\" + ", "-\t\t\t\t\"\t}\\r\\n\" + ", "-\t\t\t\t\"\tstatic Object bar() {\\r\\n\" + ", "-\t\t\t\t\"\t\treturn new Object() {\\r\\n\" + ", "-\t\t\t\t\"\t\t\tpublic void foo() {\\r\\n\" + ", "-\t\t\t\t\"\t\t\t\tif (condition())\\r\\n\" + ", "-\t\t\t\t\"\t\t\t\t\tthrow new E1();\\r\\n\" + ", "-\t\t\t\t\"\t\t\t}\\r\\n\" + ", "-\t\t\t\t\"\t\t};\\r\\n\" + ", "-\t\t\t\t\"\t}\\r\\n\" + ", "-\t\t\t\t\"\tstatic boolean condition() {\\r\\n\" + ", "-\t\t\t\t\"\t\treturn false;\\r\\n\" + ", "-\t\t\t\t\"\t}\\r\\n\" + ", "-\t\t\t\t\"\tpublic static void main(String[] args) {\\r\\n\" + ", "-\t\t\t\t\"\t}\\r\\n\" + ", "-\t\t\t\t\"}\\r\\n\" + ", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tclass E1 extends RuntimeException {\\n\" + ", "+\t\t\t\t\"\t\tprivate static final long serialVersionUID = 1L;\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tstatic Object bar() {\\n\" + ", "+\t\t\t\t\"\t\treturn new Object() {\\n\" + ", "+\t\t\t\t\"\t\t\tpublic void foo() {\\n\" + ", "+\t\t\t\t\"\t\t\t\tif (condition())\\n\" + ", "+\t\t\t\t\"\t\t\t\t\tthrow new E1();\\n\" + ", "+\t\t\t\t\"\t\t\t}\\n\" + ", "+\t\t\t\t\"\t\t};\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tstatic boolean condition() {\\n\" + ", "+\t\t\t\t\"\t\treturn false;\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4687574019135d26e9c1b03fc933c60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "db070c14a39516a8671547f6d3e4a976ae6ad4f6", "commitAfterChange": "2936dc77d585d1bce84296ec1690cb761872a148", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " \tpublic void test056()", "signatureAfterChange": " \tpublic void test056()", "diff": ["-\t\t\t\t\"import java.util.Collection;\\n\" + ", "-\t\t\t\t\"   public static String bind(String message, Object binding) {\\n\" + ", "-\t\t\t\t\"      return null;\\n\" + ", "-\t\t\t\t\"   }\\n\" + ", "-\t\t\t\t\"   public static String bind(String message, Object[] bindings) {\\n\" + ", "-\t\t\t\t\"      return null;\\n\" + ", "-\t\t\t\t\"   }\\n\" + ", "+\t\t\t\t\"   public static String bind(String message, Object binding) { return null; }\\n\" + ", "+\t\t\t\t\"   public static String bind(String message, Object[] bindings) { return null; }\\n\" + ", "-\t\t\t\t\"   public static String bind(String message, Object binding) {\\n\" + ", "-\t\t\t\t\"      return null;\\n\" + ", "-\t\t\t\t\"   }\\n\" + ", "-\t\t\t\t\"   public static String bind(String message, Object[] bindings) {\\n\" + ", "-\t\t\t\t\"      return null;\\n\" + ", "-\t\t\t\t\"   }\\n\" + ", "+\t\t\t\t\"   public static String bind(String message, Object binding) { return null; }\\n\" + ", "+\t\t\t\t\"   public static String bind(String message, Object[] bindings) { return null; }\\n\" + ", "-\t\t\t\t\"   void bar() {\\n\" + ", "-\t\t\t\t\"      Y.bind(\\\"\\\", new String[] {\\\"\\\"});\\n\" + ", "-\t\t\t\t\"   }\\n\" + ", "+\t\t\t\t\"   void bar() { Y.bind(\\\"\\\", new String[] {\\\"\\\"}); }\\n\" + ", "-\t}\t", "+\t}"]}], "num": 26706}