{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e06a76ea63b346f67a974d593ee056ec", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f88a06e0a92a7efe51038653f2adce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " \tpublic void test050c()", "signatureAfterChange": " \tpublic void test050c()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tA<Y> foo(A<Y> o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\t\"\t     ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo(A<Y>) has the same erasure foo(A<T>) as another method in type X.C5\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\"\tA<Z> foo(A<Z> o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\t\"\t     ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo(A<Z>) has the same erasure foo(A<T>) as another method in type X.C5\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\t<T extends Y> T foo(A<Y> o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\"\t                ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo(A<Y>) has the same erasure foo(A<T>) as another method in type X.C6\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\t\"\t<T extends Z> T foo(A<Z> o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\"\t                ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Method foo(A<Z>) has the same erasure foo(A<T>) as another method in type X.C6\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\t\t\"\tA<Y> foo(A<Y> o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\t\t\"\t     ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo(A<Y>) has the same erasure foo(A<T>) as another method in type X.C5\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\t\t\"\tA<Z> foo(A<Z> o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\t\t\"\t     ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo(A<Z>) has the same erasure foo(A<T>) as another method in type X.C5\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\t\"\t<T extends Y> T foo(A<Y> o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\t\"\t                ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo(A<Y>) has the same erasure foo(A<T>) as another method in type X.C6\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\t\t\"\t<T extends Z> T foo(A<Z> o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\t\"\t                ^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Method foo(A<Z>) has the same erasure foo(A<T>) as another method in type X.C6\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tA<Y> foo(A<Y> o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo(A<Y>) has the same erasure foo(A<T>) as another method in type X.C5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tA<Z> foo(A<Z> o) {  return null; } // duplicate\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo(A<Z>) has the same erasure foo(A<T>) as another method in type X.C5\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\t<T extends Y> T foo(A<Y> o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t                ^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo(A<Y>) has the same erasure foo(A<T>) as another method in type X.C6\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\t\"\t<T extends Z> T foo(A<Z> o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t                ^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Method foo(A<Z>) has the same erasure foo(A<T>) as another method in type X.C6\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d285d0bebb12cbdbaab1223002d05221", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 593, "methodNumberAfterChange": 593, "signatureBeforeChange": " \tpublic void test0574()", "signatureAfterChange": " \tpublic void test0574()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\t<T extends Integer> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\"\t           ^^^^^^^\\n\" + ", "+\t\t\t\t\"The type parameter T should not be bounded by the final type Integer. Final types cannot be further extended\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\"\t<T extends Integer> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\"\t                      ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Duplicate method foo(Object) in type X.C2\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\t<T extends String> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\"\t           ^^^^^^\\n\" + ", "+\t\t\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\t\"\t<T extends String> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\"\t                     ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Duplicate method foo(Object) in type X.C2\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\t\"\tnew X().new C2().foo((List<String>) null);\\n\" + ", "+\t\t\t\t\"\t                 ^^^\\n\" + ", "+\t\t\t\t\"The method foo(Object) is ambiguous for the type X.C2\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\t\t\"\t<T extends Integer> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\t\"\t           ^^^^^^^\\n\" + ", "+\t\t\t\t\t\"The type parameter T should not be bounded by the final type Integer. Final types cannot be further extended\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\t\t\"\t<T extends Integer> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\t\"\t                      ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Duplicate method foo(Object) in type X.C2\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"3. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\t\t\"\t<T extends String> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\t\"\t           ^^^^^^\\n\" + ", "+\t\t\t\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\t\t\"\t<T extends String> T foo(Object o) {  return null; } // ok\\n\" + ", "+\t\t\t\t\t\"\t                     ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Duplicate method foo(Object) in type X.C2\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\"\t<T extends Integer> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t           ^^^^^^^\\n\" + ", "-\t\t\t\"The type parameter T should not be bounded by the final type Integer. Final types cannot be further extended\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"\t<T extends Integer> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t                      ^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo(Object) in type X.C2\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"\t<T extends String> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t           ^^^^^^\\n\" + ", "-\t\t\t\"The type parameter T should not be bounded by the final type String. Final types cannot be further extended\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"\t<T extends String> T foo(Object o) {  return null; } // ok\\n\" + ", "-\t\t\t\"\t                     ^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Duplicate method foo(Object) in type X.C2\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef2219b47fcc6fc079dc16164f69af09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 179, "methodNumberAfterChange": 179, "signatureBeforeChange": " \tpublic void test054a()", "signatureAfterChange": " \tpublic void test054a()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return; // see test187()", "-", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 6)\\n\" +", "-\t\t\t\"\tString a(X x) {  return null; }\\n\" +", "-\t\t\t\"\t       ^^^^^^\\n\" +", "-\t\t\t\"Method a(X) has the same erasure a(X) as another method in type X\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" +", "-\t\t\t\"\t<T extends X> T a(T x) {  return null; }\\n\" +", "-\t\t\t\"\t                ^^^^^^\\n\" +", "-\t\t\t\"Method a(T) has the same erasure a(X) as another method in type X\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\t<T1, T2> String aaa(X x) {  return null; }\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^\\n\" + ", "+\t\t\t\"Method aaa(X) has the same erasure aaa(X) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\t<T extends X> T aaa(T x) {  return null; }\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^\\n\" + ", "+\t\t\t\"Method aaa(T) has the same erasure aaa(X) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\t<T> String aa(X x) {  return null; }\\n\" + ", "+\t\t\t\"\t           ^^^^^^^\\n\" + ", "+\t\t\t\"Method aa(X) has the same erasure aa(X) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\t<T extends X> T aa(T x) {  return null; }\\n\" + ", "+\t\t\t\"\t                ^^^^^^^\\n\" + ", "+\t\t\t\"Method aa(T) has the same erasure aa(X) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tString a(X x) {  return null; }\\n\" + ", "+\t\t\t\"\t       ^^^^^^\\n\" + ", "+\t\t\t\"Method a(X) has the same erasure a(X) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\t<T extends X> T a(T x) {  return null; }\\n\" + ", "+\t\t\t\"\t                ^^^^^^\\n\" + ", "+\t\t\t\"Method a(T) has the same erasure a(X) as another method in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\t<T> String z(X x) { return null; }\\n\" + ", "+\t\t\t\"\t           ^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method z(X) in type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\t<T, S> Object z(X x) { return null; }\\n\" + ", "+\t\t\t\"\t              ^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method z(X) in type X\\n\" + ", "-\t\t\t// a(X) is already defined in X", "+/* javac 7", "+X.java:3: name clash: <T>aaa(T) and <T1,T2>aaa(X) have the same erasure", "+        <T extends X> T aaa(T x) {  return null; }", "+                        ^", "+  where T,T1,T2 are type-variables:", "+    T extends X declared in method <T>aaa(T)", "+    T1 extends Object declared in method <T1,T2>aaa(X)", "+    T2 extends Object declared in method <T1,T2>aaa(X)", "+X.java:5: name clash: <T#1>aa(T#1) and <T#2>aa(X) have the same erasure", "+        <T extends X> T aa(T x) {  return null; }", "+                        ^", "+  where T#1,T#2 are type-variables:", "+    T#1 extends X declared in method <T#1>aa(T#1)", "+    T#2 extends Object declared in method <T#2>aa(X)", "+X.java:7: a(X) is already defined in X", "+        <T extends X> T a(T x) {  return null; }", "+                        ^", "+X.java:9: name clash: <T#1,S>z(X) and <T#3>z(X) have the same erasure", "+        <T, S> Object z(X x) { return null; }", "+                      ^", "+  where T#1,S,T#3 are type-variables:", "+    T#1 extends Object declared in method <T#1,S>z(X)", "+    S extends Object declared in method <T#1,S>z(X)", "+    T#3 extends Object declared in method <T#3>z(X)", "+4 errors", "+ */"]}], "num": 71729}