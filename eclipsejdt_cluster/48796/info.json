{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81b7c3caa1f2f593153779d35177643e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0d6d81fbebfd15cdc53302eea291251", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void abstractMethodMustBeImplemented(SourceTypeBinding type, MethodBinding abstractMethod)", "signatureAfterChange": " public void abstractMethodMustBeImplemented(SourceTypeBinding type, MethodBinding abstractMethod)", "diff": ["-\t\t\t        typesAsString(abstractMethod.isVarargs(), abstractMethod.parameters, false),", "+\t\t\t        typesAsString(abstractMethod, false),", "-\t\t\t        typesAsString(abstractMethod.isVarargs(), abstractMethod.parameters, true),", "+\t\t\t        typesAsString(abstractMethod, true),", "-\t\t\t        typesAsString(abstractMethod.isVarargs(), abstractMethod.parameters, false),", "+\t\t\t        typesAsString(abstractMethod, false),", "-\t\t\t        typesAsString(abstractMethod.isVarargs(), abstractMethod.parameters, true),", "+\t\t\t        typesAsString(abstractMethod, true),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9a44bb0bfcb874cd00a5ca734f1681a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void abstractMethodMustBeImplemented(SourceTypeBinding type, MethodBinding abstractMethod, MethodBinding concreteMethod)", "signatureAfterChange": " public void abstractMethodMustBeImplemented(SourceTypeBinding type, MethodBinding abstractMethod, MethodBinding concreteMethod)", "diff": ["-\t\t        typesAsString(abstractMethod.isVarargs(), abstractMethod.parameters, false),", "+\t\t        typesAsString(abstractMethod, false),", "-\t\t        typesAsString(concreteMethod.isVarargs(), concreteMethod.parameters, false),", "+\t\t        typesAsString(concreteMethod, false),", "-\t\t        typesAsString(abstractMethod.isVarargs(), abstractMethod.parameters, true),", "+\t\t        typesAsString(abstractMethod, true),", "-\t\t        typesAsString(concreteMethod.isVarargs(), concreteMethod.parameters, true),", "+\t\t        typesAsString(concreteMethod, true),"]}], "num": 48796}