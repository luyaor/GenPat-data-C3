{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4a560b71f4f36006f1a6c9b469de59f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2616e67dea5498b4c0af390d09cacf2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "8411039eacb670f9964cb949d3cc86dcbeba1c88", "commitAfterChange": "c7c6d10c1ba0f70ed921c85d28fd8eb0e35ff277", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "diff": ["+", "+\t\t\t// ensure external jars are refreshed (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=93668)", "+\t\t\t// before search is initialized (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=405051)", "+\t\t\tfinal JavaModel model = manager.getJavaModel();", "+\t\t\ttry {", "+\t\t\t\tif (monitor != null)", "+\t\t\t\t\tmonitor.subTask(Messages.javamodel_refreshing_external_jars);", "+\t\t\t\tmodel.refreshExternalArchives(", "+\t\t\t\t\tnull/*refresh all projects*/,", "+\t\t\t\t\tmonitor == null ? null : new SubProgressMonitor(monitor, 1) // 1% of the time is spent in jar refresh", "+\t\t\t\t);", "+\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t// refreshing failed: ignore", "+\t\t\t}", "+", "-\t\t\tfinal JavaModel model = manager.getJavaModel();", "-", "-\t\t\t// ensure external jars are refreshed (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=93668)", "-\t\t\ttry {", "-\t\t\t\tif (monitor != null)", "-\t\t\t\t\tmonitor.subTask(Messages.javamodel_refreshing_external_jars);", "-\t\t\t\tmodel.refreshExternalArchives(", "-\t\t\t\t\tnull/*refresh all projects*/,", "-\t\t\t\t\tmonitor == null ? null : new SubProgressMonitor(monitor, 1) // 1% of the time is spent in jar refresh", "-\t\t\t\t);", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t// refreshing failed: ignore", "-\t\t\t}", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5081047d0c5981658ff4c0661e4ec16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotationBinding.java", "commitBeforeChange": "93435bbc903bd3b20b6b025e5785dd8f0ccdee63", "commitAfterChange": "725055f2b34cdbfae0fb11f5bfd68ad41728348a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  private static AnnotationBinding buildTargetAnnotation(long bits, LookupEnvironment env)", "signatureAfterChange": "  private static AnnotationBinding buildTargetAnnotation(long bits, LookupEnvironment env)", "diff": ["-\t\tif ((bits & TagBits.AnnotationForLocalVariable) != 0)", "-\t\t\tvalue[index++] = elementType.getField(TypeConstants.UPPER_LOCAL_VARIABLE, true);", "-\t\tif ((bits & TagBits.AnnotationForType) != 0)", "-\t\t\tvalue[index++] = elementType.getField(TypeConstants.TYPE, true);", "-\t\t", "+\t\tif ((bits & TagBits.AnnotationForType) != 0)", "+\t\t\tvalue[index++] = elementType.getField(TypeConstants.TYPE, true);", "+\t\tif ((bits & TagBits.AnnotationForLocalVariable) != 0)", "+\t\t\tvalue[index++] = elementType.getField(TypeConstants.UPPER_LOCAL_VARIABLE, true);"]}], "num": 68261}