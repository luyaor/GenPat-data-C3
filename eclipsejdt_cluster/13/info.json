{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5323499c86c1e07924ba85ccab09ed3f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bbd15cab54c1fbb6b36ae70c7ab6a60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBindingVisitor.java", "commitBeforeChange": "d09fa4802281032dbffe5d54191a48ffcdbfb895", "commitAfterChange": "807a76e3a3770379eee00c55de0aa0f44ab7094a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic static void visit(TypeBindingVisitor visitor, TypeBinding type)", "signatureAfterChange": "  \tpublic static void visit(TypeBindingVisitor visitor, TypeBinding type)", "diff": ["+\t\tSimpleLookupTable visitedCache = visitor.visitedCache;", "+\t\tif (visitedCache == null) {", "+\t\t\tvisitor.visitedCache = new SimpleLookupTable(3);", "+\t\t\tvisitedCache = visitor.visitedCache;", "+\t\t}", "+", "+\t\tObject result = visitedCache.get(type);", "+\t\tif (result == Boolean.TRUE)", "+\t\t\treturn;", "+\t\tvisitedCache.put(type, Boolean.TRUE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac2a7fc03e53bfda3dfcf497db26be86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "616e0cc4b1bc013d67f08c19f7ad98694e8af3c9", "commitAfterChange": "fe30c0f08ddab5b80fae1b7726ce1fae05bb7c1e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["+\t\tfinal Object insertSpaceAfterEllipsisOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_ELLIPSIS);", "+\t\tif (insertSpaceAfterEllipsisOption != null) {", "+\t\t\tthis.insert_space_after_ellipsis = JavaCore.INSERT.equals(insertSpaceAfterEllipsisOption);", "+\t\t}", "+\t\t}", "+\t\tfinal Object insertSpaceBeforeEllipsisOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_ELLIPSIS);", "+\t\tif (insertSpaceBeforeEllipsisOption != null) {", "+\t\t\tthis.insert_space_before_ellipsis = JavaCore.INSERT.equals(insertSpaceBeforeEllipsisOption);"]}], "num": 13}