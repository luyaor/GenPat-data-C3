{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9cf49be3c50e2e171494bdf4989108ab", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83dac3c5c334796493744e58d98d87c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  private IClasspathEntry findSourceAttachmentRecommendation()", "signatureAfterChange": "  private IClasspathEntry findSourceAttachmentRecommendation()", "diff": ["-\t\t\tif (entry != null){", "+\t\t\tif (entry != null) {", "-\t\t\t\tif (target instanceof IResource) {", "-\t\t\t\t\tif (target instanceof IFile) {", "-\t\t\t\t\t\tIFile file = (IFile) target;", "-\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(file.getName())){", "-\t\t\t\t\t\t\treturn entry;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else if (target instanceof IContainer) {", "-\t\t\t\t\t\treturn entry;", "-\t\t\t\t\t}", "-\t\t\t\t} else if (target instanceof java.io.File){", "-\t\t\t\t\tjava.io.File file = JavaModel.getFile(target);", "-\t\t\t\t\tif (file != null) {", "-\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(file.getName())){", "-\t\t\t\t\t\t\treturn entry;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\t// external directory", "-\t\t\t\t\t\treturn entry;", "-\t\t\t\t\t}", "+\t\t\t\tif (target != null) {", "+\t\t\t\t\treturn entry;", "-\t\t\t\t\tif (target instanceof IResource) {", "-\t\t\t\t\t\tif (target instanceof IFile){", "-\t\t\t\t\t\t\tIFile file = (IFile) target;", "-\t\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(file.getName())){", "-\t\t\t\t\t\t\t\treturn entry;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else if (target instanceof IContainer) {", "-\t\t\t\t\t\t\treturn entry;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else if (target instanceof java.io.File){", "-\t\t\t\t\t\tjava.io.File file = (java.io.File) target;", "-\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(file.getName())){", "-\t\t\t\t\t\t\treturn entry;", "-\t\t\t\t\t\t}", "+\t\t\t\t\tif (target != null) {", "+\t\t\t\t\t\treturn entry;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c3555bf7d56b5ce0bb521b6c4e808e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingOpenable.java", "commitBeforeChange": "be89ab2e0ec1e398e3b0603a492d22c9815a6eef", "commitAfterChange": "0460b2dc122bab8976f113fd5dfefdda9aaa1649", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r private void locateMatchesInClassFile() throws CoreException, JavaModelException", "signatureAfterChange": "\r private void locateMatchesInClassFile() throws CoreException, JavaModelException", "diff": ["-\tBinaryType binaryType = (BinaryType)classFile.getType();\r", "-\tIBinaryType info;\r", "-\tif (classFile.isOpen()) {\r", "-\t\t// reuse the info from the java model cache\r", "-\t\tinfo = (IBinaryType)binaryType.getRawInfo();\r", "-\t} else {\r", "-\t\t// create a temporary info\r", "-\t\ttry {\r", "-\t\t\tIJavaElement pkg = classFile.getParent();\r", "-\t\t\tPackageFragmentRoot root = (PackageFragmentRoot)pkg.getParent();\r", "-\t\t\tif (root.isArchive()) {\r", "-\t\t\t\t// class file in a jar\r", "-\t\t\t\tString pkgPath = pkg.getElementName().replace('.', '/');\r", "-\t\t\t\tString classFilePath = \r", "-\t\t\t\t\t(pkgPath.length() > 0) ?\r", "-\t\t\t\t\t\tpkgPath + \"/\" + classFile.getElementName() : //$NON-NLS-1$\r", "-\t\t\t\t\t\tclassFile.getElementName();\r", "-\t\t\t\tZipFile zipFile = null;\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tzipFile = ((JarPackageFragmentRoot)root).getJar();\r", "-\t\t\t\t\tinfo = org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(\r", "-\t\t\t\t\t\tzipFile,\r", "-\t\t\t\t\t\tclassFilePath);\r", "-\t\t\t\t} finally {\r", "-\t\t\t\t\tif (zipFile != null) {\r", "-\t\t\t\t\t\ttry {\r", "-\t\t\t\t\t\t\tzipFile.close();\r", "-\t\t\t\t\t\t} catch (IOException e) {\r", "-\t\t\t\t\t\t\t// ignore \r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t}\r", "-\t\t\t} else {\r", "-\t\t\t\t// class file in a directory\r", "-\t\t\t\tString osPath = this.resource.getFullPath().toOSString();\r", "-\t\t\t\tinfo = org.eclipse.jdt.internal.compiler.classfmt.ClassFileReader.read(osPath);\r", "-\t\t\t}\r", "-\t\t} catch (org.eclipse.jdt.internal.compiler.classfmt.ClassFormatException e) {\r", "-\t\t\t//e.printStackTrace();\r", "-\t\t\treturn;\r", "-\t\t} catch (java.io.IOException e) {\r", "-\t\t\tthrow new JavaModelException(e, IJavaModelStatusConstants.IO_EXCEPTION);\r", "-\t\t}\r", "-\t}\r", "+\tIBinaryType info = this.locator.getBinaryInfo(classFile, this.resource);\r", "+\tBinaryType binaryType = (BinaryType)classFile.getType();\r"]}], "num": 59006}