{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10ac1f0c37062c3c5538e1900ec0edf8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fcec81c53d56a3e6667d3fa63b9ec37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 23, "signatureBeforeChange": "  protected void consumeCatchFormalParameter(boolean isVarArgs)", "signatureAfterChange": " protected void consumeCatchFormalParameter()", "diff": ["+protected void consumeCatchFormalParameter() {", "+\tsuper.consumeCatchFormalParameter();", "+\tthis.patternLocator.match((LocalDeclaration) this.astStack[this.astPtr], this.nodeSet);", "+}", "-", "-protected void consumeCatchFormalParameter(boolean isVarArgs) {", "-\tsuper.consumeCatchFormalParameter(isVarArgs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcdf62cdfe8610c10cb564ec49cb4645", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void consumeCatchFormalParameter(boolean isVarArgs)", "signatureAfterChange": " protected void consumeCatchFormalParameter()", "diff": ["+protected void consumeCatchFormalParameter() {", "+\tsuper.consumeCatchFormalParameter();", "+", "+\t// Flush comments prior to this formal parameter so the declarationSourceStart of the following parameter", "+\t// is correctly set (see bug 80904)", "+\t// Note that this could be done in the Parser itself, but this would slow down all parsers, when they don't need", "+\t// the declarationSourceStart to be set", "+\tflushCommentsDefinedPriorTo(this.scanner.currentPosition);", "+}", "-}", "-protected void consumeCatchFormalParameter(boolean isVarArgs) {", "-\tsuper.consumeCatchFormalParameter(isVarArgs);"]}], "num": 9438}