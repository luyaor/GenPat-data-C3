{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdf27dda1f1c286295d9f2ddb55bd259", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "088062cbd195f78122837583c46768b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator2.java", "commitBeforeChange": "d9032a87dfcb69e19b4c3aae869d4a786d1fb149", "commitAfterChange": "eee6512d26cd1c50a9b02d1b4b78531f507d95fc", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected void createAndResolveBindings(PotentialMatch[] potentialMatches)", "signatureAfterChange": " \tprotected void createAndResolveBindings(PotentialMatch[] potentialMatches, int start, int length)", "diff": ["-\tprotected void createAndResolveBindings(PotentialMatch[] potentialMatches) {", "+\tprotected void createAndResolveBindings(PotentialMatch[] potentialMatches, int start, int length) {", "-\t\tfor (int i = 0, maxUnits = potentialMatches.length; i < maxUnits; i++) {", "+\t\tfor (int i = start, maxUnits = start+length; i < maxUnits; i++) {", "+\t\t\t\tif (SearchEngine.VERBOSE) {", "+\t\t\t\t\tSystem.out.println(\"Parsing \" + potentialMatch.openable.toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t\t}", "+", "-\t\t\t\t", "-\t\t\t\tif (options.verbose) {", "-\t\t\t\t\tSystem.out.println(", "-\t\t\t\t\t\tUtil.bind(", "-\t\t\t\t\t\t\t\"compilation.request\" , //$NON-NLS-1$", "-\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\tString.valueOf(i + 1),", "-\t\t\t\t\t\t\t\tString.valueOf(maxUnits),", "-\t\t\t\t\t\t\t\tnew String(potentialMatch.getFileName())}));", "+\t\t\t\t\t\t\t\t", "+\t\t\t\t// initial type binding creation", "+\t\t\t\tif (parsedUnit != null && !parsedUnit.isEmpty()) {", "+\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);", "-\t\t\t\t// initial type binding creation", "-\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98e0b7fb1ff693234636025da327ef45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator2.java", "commitBeforeChange": "d9032a87dfcb69e19b4c3aae869d4a786d1fb149", "commitAfterChange": "eee6512d26cd1c50a9b02d1b4b78531f507d95fc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "signatureAfterChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "diff": ["-\t\t// copy array because elements  from the original are removed below", "+\t\tint index = 0;", "+\t\twhile (index < length) {", "+\t\t\tint max = Math.min(MAX_AT_ONCE, length-index);", "+\t\t\tlocateMatches(javaProject, potentialMatches, index, max);", "+\t\t\tindex += max;", "+\t\t}", "+\t}", "-\t\tSystem.arraycopy(potentialMatches, 0, copy, 0, length);", "-\t", "-", "-\t\t\tthis.createAndResolveBindings(potentialMatches);", "-\t", "-\t", "-\t\t\t\t\tif (this.options.verbose)", "-\t\t\t\t\t\tSystem.out.println(", "-\t\t\t\t\t\t\tUtil.bind(", "-\t\t\t\t\t\t\t\t\"compilation.process\" , //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\t\tString.valueOf(i + 1),", "-\t\t\t\t\t\t\t\t\tString.valueOf(totalUnits),", "-\t\t\t\t\t\t\t\t\tnew String(unitsToProcess[i].getFileName())}));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce40443f7f8927e066416b5b88b03e1d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator2.java", "commitBeforeChange": "d9032a87dfcb69e19b4c3aae869d4a786d1fb149", "commitAfterChange": "eee6512d26cd1c50a9b02d1b4b78531f507d95fc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate void locateMatches(JavaProject javaProject) throws JavaModelException", "signatureAfterChange": " \tprivate void locateMatches(JavaProject javaProject, PotentialMatch[] potentialMatches, int start, int length) throws JavaModelException", "diff": ["-\t\t// copy array because elements  from the original are removed below", "+\t}", "+\tprivate void locateMatches(JavaProject javaProject, PotentialMatch[] potentialMatches, int start, int length) throws JavaModelException {", "+\t\t", "+\t\t// copy array because elements  from the original are removed below", "-\t\tSystem.arraycopy(potentialMatches, 0, copy, 0, length);", "+\t\tSystem.arraycopy(potentialMatches, start, copy, 0, length);", "-\t", "+\t\t", "-", "+\t\t", "-\t\t\tthis.createAndResolveBindings(potentialMatches);", "+\t\t\tthis.createAndResolveBindings(potentialMatches, start, length);", "-\t", "+\t\t", "-\t", "+\t\tpotentialMatches = null;", "+\t\t", "-\t\t\t\t\tif (this.options.verbose)", "-\t\t\t\t\t\tSystem.out.println(", "-\t\t\t\t\t\t\tUtil.bind(", "-\t\t\t\t\t\t\t\t\"compilation.process\" , //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\t\tString.valueOf(i + 1),", "-\t\t\t\t\t\t\t\t\tString.valueOf(totalUnits),", "-\t\t\t\t\t\t\t\t\tnew String(unitsToProcess[i].getFileName())}));"]}], "num": 40851}