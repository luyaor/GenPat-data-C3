{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c3bee31c192308c80859695b112172e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a1c005dfc18d8f17b024299ac6b0ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "5db1115bce054858f0e417b54c74179d7e6009d1", "commitAfterChange": "7a8c3dc423c0b39a0d91a8547c98a520bb9dee61", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate CompilationUnitDeclaration convert(ISourceType[] sourceTypes, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate CompilationUnitDeclaration convert(ISourceType[] sourceTypes, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\tthis.unit.types = new TypeDeclaration[typeCount];", "+\t\tfinal TypeDeclaration[] types = new TypeDeclaration[typeCount];", "+\t\t/*", "+\t\t * We used a temporary types collection to prevent this.unit.types from being null during a call to", "+\t\t * convert(...) when the source is syntactically incorrect and the parser is flushing the unit's types.", "+\t\t * See https://bugs.eclipse.org/bugs/show_bug.cgi?id=97466", "+\t\t */", "-\t\t\tthis.unit.types[i] =", "-\t\t\t\tconvert((SourceType) typeInfo.getHandle(), compilationResult);", "+\t\t\ttypes[i] = convert((SourceType) typeInfo.getHandle(), compilationResult);", "+\t\tthis.unit.types = types;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80d3e06684d839d62f5d9cf2cac699c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9c382b975bd859fabf0a4e2e50d8235074d1b233", "commitAfterChange": "4e96c3149b06a18db826fbf0e9331240092b91b0", "methodNumberBeforeChange": 429, "methodNumberAfterChange": 429, "signatureBeforeChange": "  public void recoveryExitFromVariable()", "signatureAfterChange": "  public void recoveryExitFromVariable()", "diff": ["-", "-\t\t\tint end = ((RecoveredField)this.currentElement).fieldDeclaration.sourceEnd;", "-\t\t\tthis.currentElement.updateSourceEndIfNecessary(end);", "-\t\t\tthis.currentElement = this.currentElement.parent;", "+\t\t\t// Do not move focus to parent if we are still inside an array initializer", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=292087 ", "+\t\t\tif (this.currentElement.bracketBalance <= 0) {", "+\t\t\t\tint end = ((RecoveredField)this.currentElement).fieldDeclaration.sourceEnd;", "+\t\t\t\tthis.currentElement.updateSourceEndIfNecessary(end);", "+\t\t\t\tthis.currentElement = this.currentElement.parent;", "+\t\t\t}"]}], "num": 67421}