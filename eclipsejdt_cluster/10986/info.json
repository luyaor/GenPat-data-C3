{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7d1a8c056ad7b6a6eca4a14d0832f6d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0ad5e0eae661d5fabc541e1b73ef4de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "23df6bbbb36a9f50a63aa5ce59d1913148166f08", "commitAfterChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tString returnSignature, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tString[] parameterSignatures, \tboolean varargs, \tIMethod method, \tint matchRule)", "signatureAfterChange": " public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tString returnSignature, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tString[] parameterSignatures, \tboolean varargs, \tIMethod method, \tint matchRule)", "diff": ["-\t// Store type signature and arguments for declaring type", "+\t// Get unique key for parameterized constructors", "+\tString uniqueKey = null;", "-\t\tString methodReceiverType = Util.extractMethodReceiverType(((ParameterizedSourceMethod)method).uniqueKey);", "+\t\tuniqueKey = ((ParameterizedSourceMethod)method).uniqueKey;", "+\t} else if (method instanceof ParameterizedBinaryMethod) {", "+\t\tuniqueKey = ((ParameterizedBinaryMethod)method).uniqueKey;", "+\t} else {", "+\t\tmethodParameters = true;", "+\t}", "+", "+\t// Store type signature and arguments for declaring type", "+\tif (uniqueKey != null) {", "+\t\tString methodReceiverType = Util.extractMethodReceiverType(uniqueKey);", "-\tmethodParameters = !(method instanceof ParameterizedSourceMethod);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de50728985768061245d75e3c82dcd38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "23df6bbbb36a9f50a63aa5ce59d1913148166f08", "commitAfterChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public ConstructorPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] declaringSimpleName,\t \tchar[] declaringQualification, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tString[] parameterSignatures, \tIMethod method, \tboolean varargs, \tint matchRule)", "signatureAfterChange": " public ConstructorPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] declaringSimpleName,\t \tchar[] declaringQualification, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tString[] parameterSignatures, \tIMethod method, \tboolean varargs, \tint matchRule)", "diff": ["-\t// Store type signature and arguments for declaring type", "+\t// Get unique key for parameterized constructors", "+\tString uniqueKey = null;", "-\t\tString methodReceiverType = Util.extractMethodReceiverType(((ParameterizedSourceMethod)method).uniqueKey);", "+\t\tuniqueKey = ((ParameterizedSourceMethod)method).uniqueKey;", "+\t} else if (method instanceof ParameterizedBinaryMethod) {", "+\t\tuniqueKey = ((ParameterizedBinaryMethod)method).uniqueKey;", "+\t} else {", "+\t\tconstructorParameters = true;", "+\t}", "+", "+\t// Store type signature and arguments for declaring type", "+\tif (uniqueKey != null) {", "+\t\tString methodReceiverType = Util.extractMethodReceiverType(uniqueKey);", "-\tconstructorParameters = !(method instanceof ParameterizedSourceMethod);"]}], "num": 10986}