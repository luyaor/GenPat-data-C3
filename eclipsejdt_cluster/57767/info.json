{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e4004e7835c03b934e952147bcc5f49", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6af7795b07609137f325cabdf91d863c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "commitAfterChange": "fb03590c09a39a7f190240bf883ad18bc23e5222", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tprivate void _createBatchClassLoader(Map<FactoryContainer, FactoryPath.Attributes> containers, \t\t\tIJavaProject p)", "signatureAfterChange": " \tprivate ClassLoader _createBatchClassLoader(Map<FactoryContainer, FactoryPath.Attributes> containers, \t\t\tIJavaProject p)", "diff": ["-\tprivate void _createBatchClassLoader(Map<FactoryContainer, FactoryPath.Attributes> containers,", "-\t\t\tIJavaProject p) ", "-\t{", "-\t\t", "+\t */", "+\tprivate ClassLoader _createBatchClassLoader(Map<FactoryContainer, FactoryPath.Attributes> containers,", "+\t\t\tIJavaProject p) {\t\t", "+\t\tClassLoader result = null;", "-\t\tClassLoader parentCL = _iterativeLoaders.get(p);", "-\t\tif (parentCL == null) {", "-\t\t\tparentCL = AnnotationProcessorFactoryLoader.class.getClassLoader();", "+\t\tsynchronized (cacheMutex) {", "+\t\t\tClassLoader parentCL = _iterativeLoaders.get(p);", "+\t\t\tif (parentCL == null) {", "+\t\t\t\tparentCL = AnnotationProcessorFactoryLoader.class.getClassLoader();", "+\t\t\t}", "+\t\t\t", "+\t\t\tif ( fileList.size() > 0 ) {", "+\t\t\t\tresult = createClassLoader( fileList, parentCL);", "+\t\t\t\t_batchLoaders.put(p, result);", "+\t\t\t}", "-\t\t", "-\t\tif ( fileList.size() > 0 ) {", "-\t\t\t_batchLoaders.put(p,createClassLoader( fileList, parentCL));", "-\t\t}", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c99ead123129c16ff33b37bfd209467d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate List<AnnotationProcessorFactory> loadFactories( Map<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "signatureAfterChange": " \tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories( Map<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "diff": ["-\tprivate List<AnnotationProcessorFactory> loadFactories( Map<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "+\tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories( Map<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "-\t\tList<AnnotationProcessorFactory> factories = new ArrayList(containers.size());", "+\t\tMap<AnnotationProcessorFactory, FactoryPath.Attributes> factoriesAndAttrs = ", "+\t\t\tnew LinkedHashMap<AnnotationProcessorFactory, FactoryPath.Attributes>(containers.size() * 4 / 3 + 1);", "-", "-\t\tfor ( FactoryContainer fc : containers.keySet() )", "+\t\t", "+\t\tfor ( Map.Entry<FactoryContainer, FactoryPath.Attributes> entry : containers.entrySet() )", "+\t\t\t\tfinal FactoryContainer fc = entry.getKey();", "-\t\t\t\t\tfactories.add( apf  );", "+\t\t\t\t\tfactoriesAndAttrs.put( apf, entry.getValue() );", "-\t\treturn factories;", "+\t\treturn factoriesAndAttrs;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc2cab4a4d30dfd84fc3afafa1f3e593", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "b5b90ec2f42e0eb7ce3ad684f46b8d872887e632", "commitAfterChange": "9144806e49f76b29608474c4bebb2700b5c20faa", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate ClassLoader _createClassLoader( Map<FactoryContainer, FactoryPath.Attributes> containers )", "signatureAfterChange": " \tprivate ClassLoader _createIterativeClassLoader( Map<FactoryContainer, FactoryPath.Attributes> containers )", "diff": ["-\tprivate ClassLoader _createClassLoader( Map<FactoryContainer, FactoryPath.Attributes> containers )", "+\tprivate ClassLoader _createIterativeClassLoader( Map<FactoryContainer, FactoryPath.Attributes> containers )", "-\t\tfor ( FactoryContainer fc : containers.keySet() ) ", "-\t\t{", "-\t\t\tif ( fc instanceof JarFactoryContainer  )", "-\t\t\t{", "-\t\t\t\tJarFactoryContainer jfc = (JarFactoryContainer) fc;", "+\t\tfor (Map.Entry<FactoryContainer, FactoryPath.Attributes> entry : containers.entrySet()) {", "+\t\t\tFactoryPath.Attributes attr = entry.getValue();", "+\t\t\tFactoryContainer fc = entry.getKey();", "+\t\t\tif (!attr.runInBatchMode() && fc instanceof JarFactoryContainer) {", "+\t\t\t\t\tJarFactoryContainer jfc = (JarFactoryContainer)fc;", "-\t\t\t\t\tAptPlugin.log(mue, \"Could not create ClassLoader for \" + jfc); //$NON-NLS-1$", "+\t\t\t\t\tAptPlugin.log(mue, \"Could not create ClassLoader for \" + fc); //$NON-NLS-1$", "-\t\tClassLoader cl = null;", "-\t\tif ( urlList.size() > 0 )", "-\t\t{", "+\t\tClassLoader cl;", "+\t\tif ( urlList.size() > 0 ) {", "+\t\telse {", "+\t\t\tcl = AnnotationProcessorFactoryLoader.class.getClassLoader();", "+\t\t}"]}], "num": 57767}