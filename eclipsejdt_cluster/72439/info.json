{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f26fae6513b36275c1014850fe0deeb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "715c809b0a0bf2ae1aa9981531c7f566", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/RewriteEventStore.java", "commitBeforeChange": "7183d81a2458b7a9ecc9004f74bf12b52ac2eafc", "commitAfterChange": "54eb6fa8730358fcf98285db139cf9edbd02f92a", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 53, "signatureBeforeChange": " \t \tpublic CopySourceInfo[] getRangeCopySources(ASTNode node)", "signatureAfterChange": " \t \tpublic void revertMovedNodes()", "diff": ["-\t", "-\tpublic CopySourceInfo[] getRangeCopySources(ASTNode node) {", "-\t\tif (this.rangeCopySources == null) {", "-\t\t\treturn null;", "-\t\t}", "-\t\treturn internalGetCopySources(this.rangeCopySources, node);", "-\t}", "+\t", "+\tpublic void revertMovedNodes() {", "+\t\tif (this.nodeRangeInfos != null) {", "+\t\t\tremoveMoveRangePlaceholders();", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a4065557a789ad0672478b5b352f753", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public boolean isDefinitelyAssigned(LocalVariableBinding local)", "signatureAfterChange": "  public void resetNullInfoForFields()", "diff": ["-public boolean isDefinitelyAssigned(LocalVariableBinding local) {", "-", "-\treturn this.initsWhenTrue.isDefinitelyAssigned(local)", "-\t\t\t&& this.initsWhenFalse.isDefinitelyAssigned(local);", "-}", "+public void resetNullInfoForFields() {", "+\tthis.initsWhenTrue.resetNullInfoForFields();", "+\tthis.initsWhenFalse.resetNullInfoForFields();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb5caae7e66643f02de1118cff5e3b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ConditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 25, "signatureBeforeChange": "  public boolean isPotentiallyAssigned(LocalVariableBinding local)", "signatureAfterChange": "  public void updateConstantFieldsMask(FieldBinding field)", "diff": ["-public boolean isPotentiallyAssigned(LocalVariableBinding local) {", "-\treturn this.initsWhenTrue.isPotentiallyAssigned(local)", "-\t\t\t|| this.initsWhenFalse.isPotentiallyAssigned(local);", "-}", "+", "+public void updateConstantFieldsMask(FieldBinding field) {", "+\tthis.initsWhenTrue.updateConstantFieldsMask(field);", "+\tthis.initsWhenFalse.updateConstantFieldsMask(field);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6de5042cd23acca6fdb2bb303d28596", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "commitAfterChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate CompilationParticipantResult cleanNotify( CompilationParticipantEvent cpe )", "signatureAfterChange": " \t \tpublic void cleanStarting(IJavaProject javaProject)", "diff": ["-", "-\tprivate CompilationParticipantResult cleanNotify( CompilationParticipantEvent cpe )", "-\t{", "-\t\tIJavaProject javaProject = cpe.getJavaProject();", "+\t", "+\tpublic void cleanStarting(IJavaProject javaProject){", "-\t\t\tIMarker[] markers = p.findMarkers(AptPlugin.APT_PROCESSOR_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "+\t\t\tIMarker[] markers = p.findMarkers(AptPlugin.APT_BATCH_PROCESSOR_PROBLEM_MARKER, true, IResource.DEPTH_INFINITE);", "-\t\t\tAptPlugin.log(e, \"Unable to delete annotation processor problem markers\"); //$NON-NLS-1$", "+\t\t\tAptPlugin.log(e, \"Unable to delete batch annotation processor markers\"); //$NON-NLS-1$", "-\t\t", "-\t\treturn GENERIC_COMPILATION_RESULT;", "-\t}\t", "+\t}"]}], "num": 72439}