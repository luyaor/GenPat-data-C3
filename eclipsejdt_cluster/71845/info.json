{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff527964166a42c20ada6a6d31c9dd34", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0467f89908ed7455c473be29171863d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "c67ad5667d81e7ca8719e3b0faf6c7f2b84f03ce", "commitAfterChange": "55a2e1357c3327be6468ccea0fa1bd5884ed35ad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding capture(Scope scope, int position)", "signatureAfterChange": " \tpublic TypeBinding capture(Scope scope, int position)", "diff": ["-\t\tTypeBinding[] originalArguments = arguments, capturedArguments = originalArguments;", "+\t\tTypeBinding[] originalArguments = arguments;", "-\t\tcapturedArguments = new TypeBinding[length];", "+\t\tTypeBinding[] capturedArguments = new TypeBinding[length];", "+\t\t", "-\t\tif (capturedArguments != originalArguments) {", "-\t\t\tParameterizedTypeBinding capturedParameterizedType = this.environment.createParameterizedType(this.type, capturedArguments, enclosingType());", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tTypeBinding argument = capturedArguments[i];", "-\t\t\t\tif (argument.isCapture()) {", "-\t\t\t\t\t((CaptureBinding)argument).initializeBounds(capturedParameterizedType);", "-\t\t\t\t}", "+\t\tParameterizedTypeBinding capturedParameterizedType = this.environment.createParameterizedType(this.type, capturedArguments, enclosingType());", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tTypeBinding argument = capturedArguments[i];", "+\t\t\tif (argument.isCapture()) {", "+\t\t\t\t((CaptureBinding)argument).initializeBounds(capturedParameterizedType);", "-\t\t\treturn capturedParameterizedType;", "-\t\treturn this;", "+\t\treturn capturedParameterizedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f2507d7eaba02a2823688cbede700c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementNotifier.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected char[][][] getArguments(Argument[] arguments)", "signatureAfterChange": " protected Object[][] getArgumentInfos(Argument[] arguments)", "diff": ["-protected char[][][] getArguments(Argument[] arguments) {", "+protected Object[][] getArgumentInfos(Argument[] arguments) {", "+\tParameterInfo[] parameterInfos = new ParameterInfo[argumentLength];", "-\t\targumentTypes[i] = CharOperation.concatWith(arguments[i].type.getParameterizedTypeName(), '.');", "-\t\targumentNames[i] = arguments[i].name;", "+\t\tArgument argument = arguments[i];", "+\t\targumentTypes[i] = CharOperation.concatWith(argument.type.getParameterizedTypeName(), '.');", "+\t\tchar[] name = argument.name;", "+\t\targumentNames[i] = name;", "+\t\tParameterInfo parameterInfo = new ParameterInfo();", "+\t\tparameterInfo.declarationStart = argument.declarationSourceStart;", "+\t\tparameterInfo.declarationEnd = argument.declarationSourceEnd;", "+\t\tparameterInfo.nameSourceStart = argument.sourceStart;", "+\t\tparameterInfo.nameSourceEnd = argument.sourceEnd;", "+\t\tparameterInfo.modifiers = argument.modifiers;", "+\t\tparameterInfo.name = name;", "+\t\tparameterInfos[i] = parameterInfo;", "-\treturn new char[][][] {argumentTypes, argumentNames};", "+\treturn new Object[][] { parameterInfos, new char[][][] { argumentTypes, argumentNames } };"]}], "num": 71845}