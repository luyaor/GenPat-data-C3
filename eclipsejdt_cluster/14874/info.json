{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45dd9dec3681d6e78b7ac36d5804a755", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3412d7f5031e60f91a5e7c0fd811ac35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "d82ae848a9c4d7b35f614d484418e3b413534446", "commitAfterChange": "c4725a925ff03cde3fc0735f1b7bd65f4e96815b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic TextEdit format(int kind, String source, IRegion[] regions, int indentationLevel, String lineSeparator)", "signatureAfterChange": " \tpublic TextEdit format(int kind, String source, IRegion[] regions, int indentationLevel, String lineSeparator)", "diff": ["+\t\tboolean includeComments =  (kind & F_INCLUDE_COMMENTS) != 0;", "-\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, lineSeparator, regions);", "+\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\t\tboolean includeComments =  (kind & F_INCLUDE_COMMENTS) != 0; // || FORCE_NEW_COMMENTS_FORMAT;", "-\t\t\t\treturn formatExpression(source, indentationLevel, lineSeparator, regions);", "+\t\t\t\treturn formatExpression(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\t\treturn formatStatements(source, indentationLevel, lineSeparator, regions);", "+\t\t\t\treturn formatStatements(source, indentationLevel, lineSeparator, regions, includeComments);", "-\t\t\t\tincludeComments =  (kind & F_INCLUDE_COMMENTS) != 0; // || FORCE_NEW_COMMENTS_FORMAT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90b09f5285cee1af1d4cfe6ce84387e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "628e9c4648e198faf112f84ab4f79974c542dba4", "commitAfterChange": "a5c3db41a58c8521d5f8f73e141ab57108cd47bc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic String format( \t\t\tint kind, \t\t\tString source, \t\t\tint indentationLevel, \t\t\tint[] positions, \t\t\tString lineSeparator, \t\t\tMap options)", "signatureAfterChange": " \tpublic String format( \t\t\tint kind, \t\t\tString source, \t\t\tint indentationLevel, \t\t\tint[] positions, \t\t\tString lineSeparator, \t\t\tMap options)", "diff": ["-\t\t\t\t", "+", "+\t\tString result = source;\t\t\t\t", "-\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tresult = formatClassBodyDeclarations(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tthis.positionsMapping = positions;", "+\t\t\t\tbreak;", "-\t\t\t\treturn formatCompilationUnit(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tresult = formatCompilationUnit(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tthis.positionsMapping = positions;", "+\t\t\t\tbreak;", "-\t\t\t\treturn formatExpression(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tresult = formatExpression(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tthis.positionsMapping = positions;", "+\t\t\t\tbreak;", "-\t\t\t\treturn formatStatements(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tresult = formatStatements(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tthis.positionsMapping = positions;", "-\t\tthis.positionsMapping = positions;", "-\t\treturn source;", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6f75efe290ea2113671e58b2b97f38e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "045a67be23e966bc4b7f49b2b17d7449e71c3890", "commitAfterChange": "09d26eca94e41cb67a73a9cec71e813ec866fc65", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic String format( \t\t\tint kind, \t\t\tString source, \t\t\tint indentationLevel, \t\t\tint[] positions, \t\t\tString lineSeparator)", "signatureAfterChange": " \tpublic String format( \t\t\tint kind, \t\t\tString source, \t\t\tint indentationLevel, \t\t\tint[] positions, \t\t\tString lineSeparator, \t\t\tMap options)", "diff": ["-\t\t\tString lineSeparator) {", "+\t\t\tString lineSeparator,", "+\t\t\tMap options) {", "-\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, positions, lineSeparator);", "+\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\treturn formatCompilationUnit(source, indentationLevel, positions, lineSeparator);", "+\t\t\t\treturn formatCompilationUnit(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\treturn formatExpression(source, indentationLevel, positions, lineSeparator);", "+\t\t\t\treturn formatExpression(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\treturn formatStatements(source, indentationLevel, positions, lineSeparator);", "+\t\t\t\treturn formatStatements(source, indentationLevel, positions, lineSeparator, options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7430d8e1ba786ce66c30c336881e469", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic String format( \t\t\tint kind, \t\t\tString source, \t\t\tint indentationLevel, \t\t\tint[] positions, \t\t\tString lineSeparator, \t\t\tMap options)", "signatureAfterChange": " \tpublic TextEdit format( \t\t\tint kind, \t\t\tString source, \t\t\tint offset, \t\t\tint length, \t\t\tint indentationLevel, \t\t\tString lineSeparator)", "diff": ["-\tpublic String format(", "+\tpublic TextEdit format(", "+\t\t\tint offset,", "+\t\t\tint length,", "-\t\t\tint[] positions,", "-\t\t\tString lineSeparator,", "-\t\t\tMap options) {", "+\t\t\tString lineSeparator) {", "-\t\tString result = source;\t\t\t\t", "-\t\t\t\tresult = formatClassBodyDeclarations(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\tbreak;", "+\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\t\tresult = formatCompilationUnit(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\tbreak;", "+\t\t\t\treturn formatCompilationUnit(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\t\tresult = formatExpression(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\tbreak;", "+\t\t\t\treturn formatExpression(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\t\tresult = formatStatements(source, indentationLevel, positions, lineSeparator, options);", "-\t\t\t\tbreak;", "+\t\t\t\treturn formatStatements(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\t\tresult = probeFormatting(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\treturn probeFormatting(source, indentationLevel, lineSeparator, offset, length);", "-\t\tthis.positionsMapping = positions;", "-\t\treturn result;", "-\t}", "+\t\treturn null;"]}], "num": 14874}