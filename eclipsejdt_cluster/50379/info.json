{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cfbd670e9ca99ee5f2dfc83e5dc38962", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59b18768fcaadb6cb10a605ce68125b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "6dec9cb80d749866ad6a2b5d18c470f71732f9d8", "commitAfterChange": "a93fb5b3ff3b79e22a571c64a770b96117073c58", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t} else {", "-\t\tboolean isStatic = this.codegenBinding.isStatic();", "-\t\tboolean isThisReceiver = this.receiver instanceof ThisReference;", "-\t\tConstant fieldConstant = this.codegenBinding.constant();", "-\t\tif (fieldConstant != Constant.NotAConstant) {", "-\t\t\tif (!isThisReceiver) {", "-\t\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "-\t\t\t\tif (!isStatic){", "-\t\t\t\t\tcodeStream.invokeObjectGetClass();", "-\t\t\t\t\tcodeStream.pop();", "-\t\t\t\t}", "+\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\treturn;", "+\t}", "+\tboolean isStatic = this.codegenBinding.isStatic();", "+\tboolean isThisReceiver = this.receiver instanceof ThisReference;", "+\tConstant fieldConstant = this.codegenBinding.constant();", "+\tif (fieldConstant != Constant.NotAConstant) {", "+\t\tif (!isThisReceiver) {", "+\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "+\t\t\tif (!isStatic){", "+\t\t\t\tcodeStream.invokeObjectGetClass();", "+\t\t\t\tcodeStream.pop();", "+\t\t}", "+\t\tif (valueRequired) {", "+\t\t\tcodeStream.generateConstant(fieldConstant, implicitConversion);", "+\t\t}", "+\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\treturn;", "+\t}", "+\tif (valueRequired || (!isThisReceiver && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)) {", "+\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "+\t\tif (this.codegenBinding.declaringClass == null) { // array length", "+\t\t\tcodeStream.arraylength();", "-\t\t\t\tcodeStream.generateConstant(fieldConstant, implicitConversion);", "+\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t\t} else {", "+\t\t\t\t// could occur if !valueRequired but compliance >= 1.4", "+\t\t\t\tcodeStream.pop();", "-\t\t\tif (valueRequired || (!isThisReceiver && currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4)) {", "-\t\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "-\t\t\t\tif (this.codegenBinding.declaringClass == null) { // array length", "-\t\t\t\t\tcodeStream.arraylength();", "-\t\t\t\t\tif (valueRequired) {", "-\t\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\t// could occur if !valueRequired but compliance >= 1.4", "-\t\t\t\t\t\tcodeStream.pop();", "-\t\t\t\t\t}", "+\t\t\tif (syntheticAccessors == null || syntheticAccessors[READ] == null) {", "+\t\t\t\tif (isStatic) {", "+\t\t\t\t\tcodeStream.getstatic(this.codegenBinding);", "-\t\t\t\t\tif (syntheticAccessors == null || syntheticAccessors[READ] == null) {", "-\t\t\t\t\t\tif (isStatic) {", "-\t\t\t\t\t\t\tcodeStream.getstatic(this.codegenBinding);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tcodeStream.getfield(this.codegenBinding);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcodeStream.invokestatic(syntheticAccessors[READ]);", "-\t\t\t\t\t}", "-\t\t\t\t\tif (valueRequired) {", "-\t\t\t\t\t\tif (this.genericCast != null) codeStream.checkcast(this.genericCast);\t\t\t", "-\t\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\t// could occur if !valueRequired but compliance >= 1.4", "-\t\t\t\t\t\tswitch (this.codegenBinding.type.id) {", "-\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\tcodeStream.pop2();", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\tdefault :", "-\t\t\t\t\t\t\t\tcodeStream.pop();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "+\t\t\t\t\tcodeStream.getfield(this.codegenBinding);", "-\t\t\t\tif (!isThisReceiver) {", "-\t\t\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);\t\t\t\t", "-\t\t\t\t\tif (!isStatic){", "-\t\t\t\t\t\tcodeStream.invokeObjectGetClass(); // perform null check", "+\t\t\t\tcodeStream.invokestatic(syntheticAccessors[READ]);", "+\t\t\t}", "+\t\t\tif (valueRequired) {", "+\t\t\t\tif (this.genericCast != null) codeStream.checkcast(this.genericCast);\t\t\t", "+\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t\t} else {", "+\t\t\t\t// could occur if !valueRequired but compliance >= 1.4", "+\t\t\t\tswitch (this.codegenBinding.type.id) {", "+\t\t\t\t\tcase T_long :", "+\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\tcodeStream.pop2();", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault :", "-\t\t\t\t\t}", "+\t} else {", "+\t\tif (isThisReceiver) {", "+\t\t\tif (isStatic){", "+\t\t\t\t// if no valueRequired, still need possible side-effects of <clinit> invocation, if field belongs to different class", "+\t\t\t\tif (this.binding.original().declaringClass != this.receiverType.erasure()) {", "+\t\t\t\t\tMethodBinding accessor = syntheticAccessors == null ? null : syntheticAccessors[READ]; ", "+\t\t\t\t\tif (accessor == null) {", "+\t\t\t\t\t\tcodeStream.getstatic(this.codegenBinding);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tcodeStream.invokestatic(accessor);", "+\t\t\t\t\t}", "+\t\t\t\t\tswitch (this.codegenBinding.type.id) {", "+\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\tcodeStream.pop2();", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\tcodeStream.pop();", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);\t\t\t\t", "+\t\t\tif (!isStatic){", "+\t\t\t\tcodeStream.invokeObjectGetClass(); // perform null check", "+\t\t\t\tcodeStream.pop();", "+\t\t\t}", "+\t\t}\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69b600319935ff01b40266719bbc192e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": " public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["+ */", "+public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired) {", "+\tint pc = codeStream.position;", "+\tif (constant != Constant.NotAConstant) {", "+\t\t\tcodeStream.generateConstant(constant, implicitConversion);", "-\t */", "-\tpublic void generateCode(", "-\t\tBlockScope currentScope,", "-\t\tCodeStream codeStream,", "-\t\tboolean valueRequired) {", "-", "-\t\tint pc = codeStream.position;", "-\t\tif (constant != NotAConstant) {", "+\t} else {", "+\t\tboolean isStatic = this.codegenBinding.isStatic();", "+\t\tConstant fieldConstant = this.codegenBinding.constant();", "+\t\tif (fieldConstant != Constant.NotAConstant) {", "+\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "+\t\t\tif (!isStatic){", "+\t\t\t\tcodeStream.invokeObjectGetClass();", "+\t\t\t\tcodeStream.pop();", "+\t\t\t}", "-\t\t\t\tcodeStream.generateConstant(constant, implicitConversion);", "+\t\t\t\tcodeStream.generateConstant(fieldConstant, implicitConversion);", "-\t\t\tboolean isStatic = this.codegenBinding.isStatic();", "-\t\t\tif (this.codegenBinding.isConstantValue()) {", "-\t\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "-\t\t\t\tif (!isStatic){", "-\t\t\t\t\tcodeStream.invokeObjectGetClass();", "-\t\t\t\t\tcodeStream.pop();", "-\t\t\t\t}", "-\t\t\t\tif (valueRequired) {", "-\t\t\t\t\tcodeStream.generateConstant(this.codegenBinding.constant(), implicitConversion);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "-\t\t\t\tif (valueRequired || currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4) {", "-\t\t\t\t\tif (this.codegenBinding.declaringClass == null) { // array length", "-\t\t\t\t\t\tcodeStream.arraylength();", "-\t\t\t\t\t\tif (valueRequired) {", "-\t\t\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t// could occur if !valueRequired but compliance >= 1.4", "-\t\t\t\t\t\t\tcodeStream.pop();", "-\t\t\t\t\t\t}", "+\t\t\treceiver.generateCode(currentScope, codeStream, !isStatic);", "+\t\t\tif (valueRequired || currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4) {", "+\t\t\t\tif (this.codegenBinding.declaringClass == null) { // array length", "+\t\t\t\t\tcodeStream.arraylength();", "+\t\t\t\t\tif (valueRequired) {", "+\t\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\t\t\t\t\tif (syntheticAccessors == null || syntheticAccessors[READ] == null) {", "-\t\t\t\t\t\t\tif (isStatic) {", "-\t\t\t\t\t\t\t\tcodeStream.getstatic(this.codegenBinding);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tcodeStream.getfield(this.codegenBinding);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tcodeStream.invokestatic(syntheticAccessors[READ]);", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (valueRequired) {", "-\t\t\t\t\t\t\tif (this.genericCast != null) codeStream.checkcast(this.genericCast);\t\t\t", "-\t\t\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t// could occur if !valueRequired but compliance >= 1.4", "-\t\t\t\t\t\t\tswitch (this.codegenBinding.type.id) {", "-\t\t\t\t\t\t\t\tcase T_long :", "-\t\t\t\t\t\t\t\tcase T_double :", "-\t\t\t\t\t\t\t\t\tcodeStream.pop2();", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t\tdefault :", "-\t\t\t\t\t\t\t\t\tcodeStream.pop();", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tif (!isStatic){", "-\t\t\t\t\t\tif (!(this.receiver instanceof ThisReference)) codeStream.invokeObjectGetClass(); // perform null check", "+\t\t\t\t\t\t// could occur if !valueRequired but compliance >= 1.4", "+\t\t\t\t} else {", "+\t\t\t\t\tif (syntheticAccessors == null || syntheticAccessors[READ] == null) {", "+\t\t\t\t\t\tif (isStatic) {", "+\t\t\t\t\t\t\tcodeStream.getstatic(this.codegenBinding);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcodeStream.getfield(this.codegenBinding);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tcodeStream.invokestatic(syntheticAccessors[READ]);", "+\t\t\t\t\t}", "+\t\t\t\t\tif (valueRequired) {", "+\t\t\t\t\t\tif (this.genericCast != null) codeStream.checkcast(this.genericCast);\t\t\t", "+\t\t\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// could occur if !valueRequired but compliance >= 1.4", "+\t\t\t\t\t\tswitch (this.codegenBinding.type.id) {", "+\t\t\t\t\t\t\tcase T_long :", "+\t\t\t\t\t\t\tcase T_double :", "+\t\t\t\t\t\t\t\tcodeStream.pop2();", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tdefault :", "+\t\t\t\t\t\t\t\tcodeStream.pop();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tif (!isStatic){", "+\t\t\t\t\tif (!(this.receiver instanceof ThisReference)) codeStream.invokeObjectGetClass(); // perform null check", "+\t\t\t\t\tcodeStream.pop();", "-\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+}"]}], "num": 50379}