{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c25920276c1a7047a7bc83818797977", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56b1c700ae550b8fbc64181abe5e1a18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration, \t\t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope)", "diff": ["-public class LocalDeclarationVisitor extends AbstractSyntaxTreeVisitorAdapter {", "-\tpublic boolean visit(", "-\t\t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration,", "-\t\t\tBlockScope scope) {", "-\t\tif ((matchSet.matchContainer & SearchPattern.METHOD) != 0) {", "-\t\t\tmatchSet.checkMatching(anonymousTypeDeclaration);", "-\t\t}", "-\t\treturn true; ", "-\t}", "+public class NoClassNoMethodDeclarationVisitor extends AbstractSyntaxTreeVisitorAdapter {", "+\tpublic boolean visit(ConstructorDeclaration constructorDeclaration, ClassScope scope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d13eeb45538effc92247db0233031945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration, \t\t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope)", "diff": ["-public class LocalDeclarationVisitor extends AbstractSyntaxTreeVisitorAdapter {", "-\tpublic boolean visit(", "-\t\t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration,", "-\t\t\tBlockScope scope) {", "-\t\tif ((matchSet.matchContainer & SearchPattern.METHOD) != 0) {", "-\t\t\tmatchSet.checkMatching(anonymousTypeDeclaration);", "-\t\t}", "-\t\treturn true; ", "-\t}", "+public class MethodButNoClassDeclarationVisitor extends NoClassNoMethodDeclarationVisitor {", "+\tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope) {", "+\t\tmatchSet.checkMatching(anonymousTypeDeclaration);", "+\t\treturn true; ", "+\t}"]}], "num": 11042}