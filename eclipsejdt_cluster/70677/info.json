{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2863a306fa5cb5d36bf2abfde9e61f18", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8542392e665dfe8e45d41fbe27d4e48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "381b0c5e3a54bec6f421d38d7ee5fd38c998afc2", "commitAfterChange": "140563af50526c3e1d6be899503d29113c538e25", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "diff": ["-\t\tReferenceBinding memberType = scope.getMemberType(token, enclosingType);", "+\t\tTypeBinding memberType = scope.getMemberType(token, enclosingType);", "-\t\treturn this.resolvedType = scope.environment().convertToRawType(memberType);", "+\t\tmemberType = scope.environment().convertToRawType(memberType);", "+\t\tif (memberType.isRawType() && scope.compilerOptions().reportRawTypeReference) {", "+\t\t\tscope.problemReporter().rawTypeReference(this, memberType);", "+\t\t}", "+\t\treturn this.resolvedType = memberType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d87ee7c1fb5add43bae8f08e82a505", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "diff": ["-", "-\t\tTypeBinding memberType = scope.getMemberType(token, enclosingType);", "+\t\tTypeBinding memberType = this.resolvedType = scope.getMemberType(token, enclosingType);", "+\t\tboolean hasError = false;", "-\t\t\tthis.resolvedType = memberType;", "+\t\t\thasError = true;\t\t", "-\t\t\treturn null;", "+\t\t\tmemberType = ((ReferenceBinding)memberType).closestMatch();", "+\t\t\tif (memberType == null) {", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\tif (hasError) {", "+\t\t\t// do not store the computed type, keep the problem type instead", "+\t\t\treturn memberType;", "+\t\t}\t\t"]}], "num": 70677}