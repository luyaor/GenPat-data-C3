{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e011bd2eda0e89a1d44726602ce0fbf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d53e1848983ff4aba1686c1a7d1898d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "be3b8398abdd134469cb25f74becb573498bac14", "commitAfterChange": "5c654dd7dd9bc98526f6c419699195d84517b84b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected int matchNameValue(char[] pattern, char[] name)", "signatureAfterChange": " protected int matchNameValue(char[] pattern, char[] name)", "diff": ["-\t\t\tif (!this.isCamelCase && sameLength && matchFirstChar && CharOperation.equals(pattern, name, this.isCaseSensitive)) {", "-\t\t\t\treturn POSSIBLE_FULL_MATCH;", "+\t\t\tif (!this.isCamelCase) {", "+\t\t\t\tif (sameLength && matchFirstChar && CharOperation.equals(pattern, name, this.isCaseSensitive)) {", "+\t\t\t\t\treturn POSSIBLE_FULL_MATCH;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "-\t\t\tbreak;", "+\t\t\t// fall through next case to match as prefix if camel case failed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c8d617c5022465ae4130d30bf91a75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  protected int matchLevel(ImportReference importRef)", "signatureAfterChange": "  protected int matchLevel(ImportReference importRef)", "diff": ["-\t\tif (this.isCamelCase && matchFirstChar && CharOperation.camelCaseMatch(qualifiedPattern, qualifiedTypeName)) {", "-\t\t\treturn POSSIBLE_MATCH;", "+\t\tif (this.isCamelCase) {", "+\t\t\tif (matchFirstChar && CharOperation.camelCaseMatch(qualifiedPattern, qualifiedTypeName, (this.matchMode & SearchPattern.R_PREFIX_MATCH) != 0)) {", "+\t\t\t\treturn POSSIBLE_MATCH;", "+\t\t\t}", "+\t\t\tif (this.isCaseSensitive) return IMPOSSIBLE_MATCH;"]}], "num": 54904}