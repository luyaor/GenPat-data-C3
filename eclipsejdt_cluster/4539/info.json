{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91cc35d465c0ab0e57ffa2177992e5c7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a533da46b9c8587c07e64b2f3b8337f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "1f0aede878bd9679fe6f1bdbe19692f824725764", "commitAfterChange": "87660c5ea6c5314be962a8ffe014cc291abc05a7", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["-\t\t\t\t\tif (target != null && project.getOption(JavaCore.CORE_INCOMPATIBLE_JDK_LEVEL, true) != JavaCore.IGNORE) {", "+\t\t\t\t\tif (target != null && !JavaCore.IGNORE.equals(project.getOption(JavaCore.CORE_INCOMPATIBLE_JDK_LEVEL, true))) {", "-\t\t\t\t\t\tif (project.getOption(JavaCore.CORE_INCOMPATIBLE_JDK_LEVEL, true) != JavaCore.IGNORE) {", "+\t\t\t\t\t\tif (!JavaCore.IGNORE.equals(project.getOption(JavaCore.CORE_INCOMPATIBLE_JDK_LEVEL, true))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bb005861388f9cc8768ad25e60bbcb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticAccessMethodBinding.java", "commitBeforeChange": "37ef962b78fbc30ac28041498d0fd35e1634577e", "commitAfterChange": "a4342ed9aa4d42a5f6414550e01ed96e0ac5d655", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic SyntheticAccessMethodBinding(FieldBinding targetField, boolean isReadAccess, ReferenceBinding declaringClass)", "signatureAfterChange": " \t \tpublic SyntheticAccessMethodBinding(FieldBinding targetField, boolean isReadAccess, ReferenceBinding declaringClass)", "diff": ["-\t\t\t\t\tif (this.selector == methods[i].selector && this.areParametersEqual(methods[i])) {", "+\t\t\t\t\tif (CharOperation.equals(this.selector, methods[i].selector) && this.areParametersEqual(methods[i])) {", "-\t\t\t\t\t\tif (this.selector == knownAccessMethods[i].selector && this.areParametersEqual(methods[i])) {", "+\t\t\t\t\t\tif (CharOperation.equals(this.selector, knownAccessMethods[i].selector) && this.areParametersEqual(methods[i])) {"]}], "num": 4539}