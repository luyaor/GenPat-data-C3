{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39c80640f14f0aaa26eb5c7046ce04f0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5446328a8ab75aff6a54c36a3679e48e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "cfebe74b0993aa8e5991953b9cbb508424b8c095", "commitAfterChange": "c16713f6dd450429a4303737780dffe1c893ae16", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["+\t\tfinal Object indentBodyDeclarationsCompareToAnnotationDeclarationHeaderOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INDENT_BODY_DECLARATIONS_COMPARE_TO_ANNOTATION_DECLARATION_HEADER);", "+\t\tif (indentBodyDeclarationsCompareToAnnotationDeclarationHeaderOption != null) {", "+\t\t\tthis.indent_body_declarations_compare_to_annotation_declaration_header = DefaultCodeFormatterConstants.TRUE.equals(indentBodyDeclarationsCompareToAnnotationDeclarationHeaderOption);", "+\t\t}", "+\t\t}", "+\t\tfinal Object insertNewLineInEmptyAnnotationDeclarationOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_IN_EMPTY_ANNOTATION_DECLARATION);", "+\t\tif (insertNewLineInEmptyAnnotationDeclarationOption != null) {", "+\t\t\tthis.insert_new_line_in_empty_annotation_declaration = JavaCore.INSERT.equals(insertNewLineInEmptyAnnotationDeclarationOption);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38a5d9d4a39eaf31a613c23ae314470", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "28020d0b0ceb0e665c1071bfd968796eb9e2e394", "commitAfterChange": "def990b8509828ed437909a92c80eeb89428931a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void set(Map settings)", "signatureAfterChange": "  \tpublic void set(Map settings)", "diff": ["-\t\tfinal Object insertSpaceBeforeExpressionInReturnOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_EXPRESSION_IN_RETURN);", "-\t\tif (insertSpaceBeforeExpressionInReturnOption != null) {", "-\t\t\tthis.insert_space_before_expression_in_return = JavaCore.INSERT.equals(insertSpaceBeforeExpressionInReturnOption);", "-\t\t}", "+\t\t}", "+\t\tfinal Object insertSpaceBeforeParenthesizedExpressionInReturnOption = settings.get(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_BEFORE_PARENTESIZED_EXPRESSION_IN_RETURN);", "+\t\tif (insertSpaceBeforeParenthesizedExpressionInReturnOption != null) {", "+\t\t\tthis.insert_space_before_parenthesized_expression_in_return = JavaCore.INSERT.equals(insertSpaceBeforeParenthesizedExpressionInReturnOption);"]}], "num": 30444}