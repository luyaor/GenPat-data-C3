{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69457505113c9c6199da03893d0f1bba", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c33e05a8de3aec686cfb0889043676b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "bf0f3c0ee6c28cc3716705a3315c5622fc576ce2", "commitAfterChange": "f192de6c5260ed351db3279698866194d932822c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\t\t\ttry {", "-\t\t\t\tthis.buildBindings(type.getCompilationUnit());", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t// nothing we can do here: ignore", "-\t\t\t}", "+\t\t\tICompilationUnit sourceUnit = (ICompilationUnit)type.getCompilationUnit();", "+\t\t\tthis.accept(sourceUnit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a54dbb8bda5a05da12c55ec32994c4eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyNotInClasspathTests.java", "commitBeforeChange": "acb78a276c067a425abc6d87dbb7eb61d13a2cd0", "commitAfterChange": "a105f81992f5bd4d6508e905eedff01391ae5134", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testIsOnClasspath() throws CoreException", "signatureAfterChange": " public void testIsOnClasspath() throws CoreException", "diff": ["-\t\ttry {", "-\t\t\tworkingCopy.getJavaProject().isOnClasspath(workingCopy);", "-\t\t\t// shouldn't reach that far, since isOnClasspath should throw an exception (not present)", "-\t\t\tassertTrue(\"working copy shouldn't answer to isOnClasspath\", false);", "-\t\t} catch(JavaModelException e) {", "-\t\t}", "+\t\tboolean isOnClasspath = workingCopy.getJavaProject().isOnClasspath(workingCopy);", "+\t\tassertTrue(\"working copy shouldn't answer to isOnClasspath\", !isOnClasspath);"]}], "num": 41068}