{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "45136fc73077451719a2f003abc577f8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "067f60ec85b3a673c0f93748ba47dbfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "ec8e689e69ce65d5a3f127f9c7126c4bebdd7b60", "commitAfterChange": "c922c60b9bc5fcda7fb9f2a477eba6f8f95a6cf9", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void _test006() throws CoreException", "signatureAfterChange": " \tpublic void test006() throws CoreException", "diff": ["-\tpublic void _test006() throws CoreException {", "-\t\tICompilationUnit[][] workingCopyBatches = new ICompilationUnit[2][];", "-\t\t\tMarkerInfo[] firstMarkerInfos = createMarkerInfos(new String[] {", "-\t\t\t\t\"package p1;\\n\" +", "-\t\t\t\t\"public class X extends /*start*/Y/*end*/ {\\n\" +", "-\t\t\tworkingCopyBatches[0] = createWorkingCopies(firstMarkerInfos);", "-\t\t\tMarkerInfo[] secondMarkerInfos = createMarkerInfos(new String[] {", "+\t */", "+\tpublic void test006() throws CoreException {", "+\t\tICompilationUnit[] workingCopies = null;", "+\t\ttry {", "+\t\t\tMarkerInfo[] markerInfos = createMarkerInfos(new String[] {", "+\t\t\t\t\"/P/p1/X.java\",", "+\t\t\t\t\"package p1;\\n\" +", "+\t\t\t\t\"public class X extends Y {\\n\" +", "+\t\t\t\t\"}\",", "-\t\t\tworkingCopyBatches[1] = createWorkingCopies(secondMarkerInfos);", "-\t\t\t", "-\t\t\tTestASTRequestor requestor = new TestASTRequestor(workingCopyBatches);", "-\t\t\tresolveASTs(requestor);", "-\t\t\tassertASTNodesEqual(", "-\t\t\t\t\"package p1;\\n\" + ", "-\t\t\t\t\"public class X extends Y {\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"package p1;\\n\" + ", "-\t\t\t\t\"public class Y {\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\",", "-\t\t\t\trequestor.asts", "-\t\t\t);", "-\t\t\t", "-\t\t\t// compare the bindings coming from the first AST and the last AST", "-\t\t\tType superX = (Type) findNode((CompilationUnit) requestor.asts.get(0), firstMarkerInfos[0]);", "-\t\t\tTypeDeclaration typeY = (TypeDeclaration) findNode((CompilationUnit) requestor.asts.get(1), secondMarkerInfos[0]);", "-\t\t\tIBinding superXBinding = superX.resolveBinding();", "-\t\t\tIBinding typeYBinding = typeY.resolveBinding();", "-\t\t\tassertTrue(\"Super of X and Y should be the same\", superXBinding == typeYBinding);", "+\t\t\tassertRequestedBindingFound(markerInfos, \"p1/Y\");", "-\t\t\tdiscardWorkingCopies(workingCopyBatches);", "+\t\t\tdiscardWorkingCopies(workingCopies);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec1c5a26f727530b7b3d4623908fb60b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "e4a2d2b531fec7e8dfebadf46195d19caa4fd924", "commitAfterChange": "b7872d5f1e96b5357df6dd8bf0aac5fc8ccf3c6d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void _test006() throws CoreException", "signatureAfterChange": " \tpublic void test006() throws CoreException", "diff": ["-\tpublic void _test006() throws CoreException {", "-\t\tICompilationUnit[][] workingCopyBatches = new ICompilationUnit[2][];", "-\t\t\tMarkerInfo[] firstMarkerInfos = createMarkerInfos(new String[] {", "-\t\t\t\t\"package p1;\\n\" +", "-\t\t\t\t\"public class X extends /*start*/Y/*end*/ {\\n\" +", "-\t\t\tworkingCopyBatches[0] = createWorkingCopies(firstMarkerInfos);", "-\t\t\tMarkerInfo[] secondMarkerInfos = createMarkerInfos(new String[] {", "+\t */", "+\tpublic void test006() throws CoreException {", "+\t\tICompilationUnit[] workingCopies = null;", "+\t\ttry {", "+\t\t\tMarkerInfo[] markerInfos = createMarkerInfos(new String[] {", "+\t\t\t\t\"/P/p1/X.java\",", "+\t\t\t\t\"package p1;\\n\" +", "+\t\t\t\t\"public class X extends Y {\\n\" +", "+\t\t\t\t\"}\",", "-\t\t\tworkingCopyBatches[1] = createWorkingCopies(secondMarkerInfos);", "-\t\t\t", "-\t\t\tTestASTRequestor requestor = new TestASTRequestor(workingCopyBatches);", "-\t\t\tresolveASTs(requestor);", "-\t\t\tassertASTNodesEqual(", "-\t\t\t\t\"package p1;\\n\" + ", "-\t\t\t\t\"public class X extends Y {\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"package p1;\\n\" + ", "-\t\t\t\t\"public class Y {\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"\\n\",", "-\t\t\t\trequestor.asts", "-\t\t\t);", "-\t\t\t", "-\t\t\t// compare the bindings coming from the first AST and the last AST", "-\t\t\tType superX = (Type) findNode((CompilationUnit) requestor.asts.get(0), firstMarkerInfos[0]);", "-\t\t\tTypeDeclaration typeY = (TypeDeclaration) findNode((CompilationUnit) requestor.asts.get(1), secondMarkerInfos[0]);", "-\t\t\tIBinding superXBinding = superX.resolveBinding();", "-\t\t\tIBinding typeYBinding = typeY.resolveBinding();", "-\t\t\tassertTrue(\"Super of X and Y should be the same\", superXBinding == typeYBinding);", "+\t\t\tassertBindingFound(markerInfos, \"p1/Y\");", "-\t\t\tdiscardWorkingCopies(workingCopyBatches);", "+\t\t\tdiscardWorkingCopies(workingCopies);"]}], "num": 51314}