{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e65f64e050444a4fc47524cdd4a52aed", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e7cd6017c294640d70e1793f22ebd8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void consumeMethodHeaderName()", "signatureAfterChange": " protected void consumeMethodHeaderName()", "diff": ["-\tmd.selector = identifierStack[identifierPtr];", "-\tlong selectorSourcePositions = identifierPositionStack[identifierPtr--];", "-\tidentifierLengthPtr--;", "+\tmd.selector = this.identifierStack[identifierPtr];", "+\tlong selectorSourcePositions = this.identifierPositionStack[this.identifierPtr--];", "+\tthis.identifierLengthPtr--;", "-\tmd.returnType = getTypeReference(intStack[intPtr--]);", "+\tmd.returnType = getTypeReference(this.intStack[this.intPtr--]);", "-\tmd.declarationSourceStart = intStack[intPtr--];", "-\tmd.modifiers = intStack[intPtr--];", "+\tmd.declarationSourceStart = this.intStack[this.intPtr--];", "+\tmd.modifiers = this.intStack[this.intPtr--];", "+\t// consume annotations", "+\tint length;", "+\tif ((length = this.expressionLengthStack[this.expressionLengthPtr--]) != 0) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.expressionStack, ", "+\t\t\t(this.expressionPtr -= length) + 1, ", "+\t\t\tmd.annotations = new Annotation[length], ", "+\t\t\t0, ", "+\t\t\tlength); ", "+\t}", "-\tmd.sourceEnd = lParenPos;", "-\tmd.bodyStart = lParenPos+1;", "-\tlistLength = 0; // initialize listLength before reading parameters/throws", "+\tmd.sourceEnd = this.lParenPos;", "+\tmd.bodyStart = this.lParenPos+1;", "+\tthis.listLength = 0; // initialize listLength before reading parameters/throws", "-\tif (currentElement != null){", "-\t\tif (currentElement instanceof RecoveredType ", "+\tif (this.currentElement != null){", "+\t\tif (this.currentElement instanceof RecoveredType ", "-\t\t\t|| (scanner.getLineNumber(md.returnType.sourceStart)", "-\t\t\t\t\t== scanner.getLineNumber(md.sourceStart))){", "-\t\t\tlastCheckPoint = md.bodyStart;", "-\t\t\tcurrentElement = currentElement.add(md, 0);", "-\t\t\tlastIgnoredToken = -1;\t\t\t", "+\t\t\t|| (this.scanner.getLineNumber(md.returnType.sourceStart)", "+\t\t\t\t\t== this.scanner.getLineNumber(md.sourceStart))){", "+\t\t\tthis.lastCheckPoint = md.bodyStart;", "+\t\t\tthis.currentElement = currentElement.add(md, 0);", "+\t\t\tthis.lastIgnoredToken = -1;\t\t\t", "-\t\t\tlastCheckPoint = md.sourceStart;", "-\t\t\trestartRecovery = true;", "+\t\t\tthis.lastCheckPoint = md.sourceStart;", "+\t\t\tthis.restartRecovery = true;", "+\t\t}", "+\t}\t\t", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e1df0cd2ba321b1f4d540814c4990c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": " protected void consumeStatementFor()", "signatureAfterChange": " protected void consumeStatementFor()", "diff": ["-\tastLengthPtr--;", "-\tStatement statement = (Statement) astStack[astPtr--];", "+\tthis.astLengthPtr--;", "+\tStatement statement = (Statement) this.astStack[this.astPtr--];", "-\tif ((length = expressionLengthStack[expressionLengthPtr--]) == 0) {", "+\tif ((length = this.expressionLengthStack[this.expressionLengthPtr--]) == 0) {", "-\t\texpressionPtr -= length;", "+\t\tthis.expressionPtr -= length;", "-\t\t\texpressionStack, ", "-\t\t\texpressionPtr + 1, ", "+\t\t\tthis.expressionStack, ", "+\t\t\tthis.expressionPtr + 1, ", "-\tif (expressionLengthStack[expressionLengthPtr--] != 0)", "-\t\tcond = expressionStack[expressionPtr--];", "+\tif (this.expressionLengthStack[this.expressionLengthPtr--] != 0)", "+\t\tcond = this.expressionStack[this.expressionPtr--];", "-\tif ((length = astLengthStack[astLengthPtr--]) == 0) {", "+\tif ((length = this.astLengthStack[this.astLengthPtr--]) == 0) {", "-\t\t\tlength = expressionLengthStack[expressionLengthPtr--];", "-\t\t\texpressionPtr -= length;", "+\t\t\tlength = this.expressionLengthStack[this.expressionLengthPtr--];", "+\t\t\tthis.expressionPtr -= length;", "-\t\t\t\texpressionStack, ", "-\t\t\t\texpressionPtr + 1, ", "+\t\t\t\tthis.expressionStack, ", "+\t\t\t\tthis.expressionPtr + 1, ", "-\t\t\tastPtr -= length;", "+\t\t\tthis.astPtr -= length;", "-\t\t\t\tastStack, ", "-\t\t\t\tastPtr + 1, ", "+\t\t\t\tthis.astStack, ", "+\t\t\t\tthis.astPtr + 1, ", "-\t\t\tintStack[intPtr--], ", "-\t\t\tendStatementPosition)); ", "+\t\t\tthis.intStack[this.intPtr--], ", "+\t\t\tthis.endStatementPosition)); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db0411b737fc2df41c476fe4cd529e06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic SourceMapper(IPath zipPath, String rootPath, JavaModel model)", "signatureAfterChange": "\r \tpublic SourceMapper(IPath zipPath, String rootPath, JavaModel model)", "diff": ["-\t\tfZipPath = zipPath;\r", "-\t\tfRootPath = rootPath.replace('\\\\', '/');\r", "-\t\tif (fRootPath.endsWith(\"/\" )) { //$NON-NLS-1$\r", "-\t\t\tfRootPath = fRootPath.substring(0, fRootPath.lastIndexOf('/'));\r", "+\t\tthis.fZipPath = zipPath;\r", "+\t\tthis.fRootPath = rootPath.replace('\\\\', '/');\r", "+\t\tif (this.fRootPath.endsWith(\"/\" )) { //$NON-NLS-1$\r", "+\t\t\tthis.fRootPath = this.fRootPath.substring(0, this.fRootPath.lastIndexOf('/'));\r", "-\t\tfJavaModel = model;\r", "-\t\tfSourceRanges = new HashMap();\r", "-\t\tfParameterNames = new HashMap();\r", "-\t\timportsTable = new HashMap();\r", "-\t\timportsCounterTable = new HashMap();\r", "+\t\tthis.fJavaModel = model;\r", "+\t\tthis.fSourceRanges = new HashMap();\r", "+\t\tthis.fParameterNames = new HashMap();\r", "+\t\tthis.importsTable = new HashMap();\r", "+\t\tthis.importsCounterTable = new HashMap();\r", "+\t\t\r", "+\t\tIResource zipResource = ResourcesPlugin.getWorkspace().getRoot().findMember(zipPath);\r", "+\r", "+\t\tthis.encoding = (String) JavaCore.getOptions().get(CompilerOptions.OPTION_Encoding);\r", "+\t\tif (\"\".equals(this.encoding)) this.encoding = null; //$NON-NLS-1$\r"]}], "num": 56455}