{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb2678dc4d57c7eb4cf18b15bdf8c439", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cfe570bd9f1d813306b66f1875e6bea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "2bf89c240ddd3251e4b1d84f5113b5b23a25a1c7", "commitAfterChange": "d9ef1de09cb72d13b8a3503336aa24f1ef9b23e2", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic synchronized ZipFile getZipFile(IPath path) throws CoreException", "signatureAfterChange": " \tpublic synchronized ZipFile getZipFile(IPath path) throws CoreException", "diff": ["-\t\t\tif (file == null || file.getType() != IResource.FILE) {", "+\t\t\tif (file == null) { // external file", "-\t\t\t} else {", "-\t\t\t\tIPath location = file.getLocation();", "-\t\t\t\tif (location == null) {", "-\t\t\t\t\tthrow new CoreException(new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"file.notFound\"), null)); //$NON-NLS-1$", "+\t\t\t} else { // internal resource (not an IFile or not existing)", "+\t\t\t\tIPath location;", "+\t\t\t\tif (file.getType() != IResource.FILE || (location = file.getLocation()) == null) {", "+\t\t\t\t\tthrow new CoreException(new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"file.notFound\", path.toString()), null)); //$NON-NLS-1$", "-\t\t\t\tthrow new CoreException(new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"file.notFound\"), null)); //$NON-NLS-1$", "+\t\t\t\tthrow new CoreException(new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"file.notFound\", path.toString()), null)); //$NON-NLS-1$", "-\t\t\t\tthrow new CoreException(new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"file.notFound\"), null)); //$NON-NLS-1$", "+\t\t\t\tthrow new CoreException(new Status(IStatus.ERROR, JavaCore.PLUGIN_ID, -1, Util.bind(\"file.notFound\", path.toString()), null)); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e43ee6ebbf1ef91a263545e042e5dab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/MarkedASTFlattener.java", "commitBeforeChange": "ff1eb602a8aea39b1e15b206441aadf76bfaa984", "commitAfterChange": "dc5ee42cb3e5694c60c3a1f62c20766cb3cb2274", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void preVisit(ASTNode node)", "signatureAfterChange": " \tpublic void preVisit(ASTNode node)", "diff": ["-\t\tint index = markerInfo.indexOfASTStart(node.getStartPosition());", "-\t\tif (index != -1 && node.getStartPosition() + node.getLength() == markerInfo.astEnds[index]) {", "-\t\t\tmarkerName = String.valueOf(index + 1);", "-\t\t\t", "-\t\t\tif (this.nodeFromMarker.get(markerName) == null) {", "-\t\t\t\tthis.markerFromNode.put(node, markerName);", "-\t\t\t\tthis.nodeFromMarker.put(markerName, node);", "-\t\t\t\tthis.markerPositonInBuffer.put(markerName, new Integer(this.buffer.length()));", "+\t\tint index = -1;", "+\t\tfound : while ((index = markerInfo.indexOfASTStart(node.getStartPosition(), index + 1)) != -1) {", "+\t\t\tif (node.getStartPosition() + node.getLength() == markerInfo.astEnds[index]) {", "+\t\t\t\tmarkerName = String.valueOf(index + 1);", "+\t\t\t\t", "+\t\t\t\tif (this.nodeFromMarker.get(markerName) == null) {", "+\t\t\t\t\tthis.markerFromNode.put(node, markerName);", "+\t\t\t\t\tthis.nodeFromMarker.put(markerName, node);", "+\t\t\t\t\tthis.markerPositonInBuffer.put(markerName, new Integer(this.buffer.length()));", "+\t\t\t\t\tthis.foundNodeFromMarker[index] = true;", "+\t\t\t\t}", "+\t\t\t\t", "+\t\t\t\tbreak found;"]}], "num": 9880}