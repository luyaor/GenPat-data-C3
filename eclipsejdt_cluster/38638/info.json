{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "72824a08c9198021f4297ec10372da00", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7dce8609d27c0495c497d1a7de0d51e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "b94c15d0468e2c86a83d3434786ffbaf7e2c6cc7", "commitAfterChange": "bced152ccb3e158a71b16f3ed40ab742859aea61", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \t\tpublic void preferenceChange(IEclipsePreferences.PreferenceChangeEvent event)", "signatureAfterChange": " \t\tpublic void preferenceChange(IEclipsePreferences.PreferenceChangeEvent event)", "diff": ["-\t\t\t\tString newValue = (String)event.getNewValue();", "-\t\t\t\tif (newValue != null && !(newValue = newValue.trim()).equals(CP_ENTRY_IGNORE)) {", "-\t\t\t\t\tgetJavaModelManager().variables.put(varName, new Path(newValue));", "+\t\t\t\tJavaModelManager manager = getJavaModelManager();", "+\t\t\t\tif (manager.variablesWithInitializer.contains(varName)) {", "+\t\t\t\t\t// revert preference value as we will not apply it to JavaCore classpath variable", "+\t\t\t\t\tmanager.getInstancePreferences().put(varName, (String)event.getOldValue());", "-\t\t\t\t\tgetJavaModelManager().variables.remove(varName);", "+\t\t\t\t\tString newValue = (String)event.getNewValue();", "+\t\t\t\t\tif (newValue != null && !(newValue = newValue.trim()).equals(CP_ENTRY_IGNORE)) {", "+\t\t\t\t\t\tmanager.variables.put(varName, new Path(newValue));", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tmanager.variables.remove(varName);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "825b5f5c9332a21370754a2da0f19ccb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "d03a83de0fe5be0e8f8f09b8efe99101b67367a2", "commitAfterChange": "e583360467dd665e6a3741180b503b0c70aed18f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t\tpublic void propertyChange(Preferences.PropertyChangeEvent event)", "signatureAfterChange": " \t\tpublic void propertyChange(Preferences.PropertyChangeEvent event)", "diff": ["-\t\t\t\t// update path cache", "-\t\t\t\tif (newValue == null || newValue.equals(CP_ENTRY_IGNORE)) {", "-\t\t\t\t\tVariables.remove(varName);", "-\t\t\t\t} else {", "+\t\t\t\tif (newValue != null && !(newValue = newValue.trim()).equals(CP_ENTRY_IGNORE)) {", "+\t\t\t\t} else {", "+\t\t\t\t\tVariables.remove(varName);", "-\t\t\t\t// update path cache", "-\t\t\t\trecreatePersistedContainer(propertyName, ((String)event.getNewValue()).trim(), false);", "+\t\t\t\tString newValue = (String)event.getNewValue();", "+\t\t\t\tif (newValue != null && !(newValue = newValue.trim()).equals(CP_ENTRY_IGNORE)) {", "+\t\t\t\t\trecreatePersistedContainer(propertyName, newValue, false);", "+\t\t\t\t}"]}], "num": 38638}