{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6758cb34757d5b2b0ad79df8a6265834", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a68c9c1b4626651d7ba3a2ed0bc0161a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "e94247ea6ac5ec863496bda9d3658e2dc349e6ab", "commitAfterChange": "9448736fbeb476ae8eacb15d6ea8788cf2db77a1", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 68, "signatureBeforeChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\t    boolean isBreak = htmlTagID == JAVADOC_SINGLE_BREAK_TAG_ID;", "-\t\tif (!isBreak) {", "+\t    boolean isHtmlBreakTag = htmlTagID == JAVADOC_SINGLE_BREAK_TAG_ID;", "+\t\tboolean isHtmlSeparatorTag = htmlTagID == JAVADOC_SEPARATOR_TAGS_ID;", "+\t\tif (!isHtmlBreakTag) {", "-\t", "+", "-\t\t\t\t\t\toverEndLine = (this.column + htmlTag.getLength()) > this.formatter.preferences.comment_line_length;", "+\t\t\t\t\t\toverEndLine = (this.column + getTextLength(block, htmlTag)) > (this.formatter.preferences.comment_line_length+1);", "-\t\t\t\t\tprintJavadocGapLines(previousEnd+1, node.sourceStart-1, newLines, clearBlankLines, false, null);", "+\t\t\t\t\tif (newLines > 0 || (idx > 1 && (previousEnd+1) <= (nextStart-1))) {", "+\t\t\t\t\t\tprintJavadocGapLines(previousEnd+1, node.sourceStart-1, newLines, clearBlankLines, false, null);", "+\t\t\t\t\t}", "-\t\t\t\t\t\tif (!needIndentation && (text.htmlIndexes[idx-1] & JAVADOC_TAGS_ID_MASK) == JAVADOC_SEPARATOR_TAGS_ID) {", "+\t\t\t\t\t\tif (!needIndentation && text.isTextAfterHtmlSeparatorTag(idx-1)) {", "-\t\t\t\t\tprintJavadocTextLine(buffer, nextStart, end, block, idx==1/*first text?*/, needIndentation, idx==0/* opening html tag?*/ || text.htmlIndexes[idx-1] != -1);", "+\t\t\t\t\tboolean firstText = idx==1;", "+\t\t\t\t\tif (idx > 1 && (previousEnd+1) > (nextStart-1)) {", "+\t\t\t\t\t\tfirstText = true;", "+\t\t\t\t\t}", "+\t\t\t\t\tprintJavadocTextLine(buffer, nextStart, end, block, firstText, needIndentation, idx==0/* opening html tag?*/ || text.htmlIndexes[idx-1] != -1);", "-\t\t\t\t    \tif (htmlTagID == JAVADOC_SEPARATOR_TAGS_ID) {", "+\t\t\t\t    \tif (isHtmlSeparatorTag) {", "-    \t\t\t\treturn 1;", "+\t\t\t\t\treturn 1;", "-\t\t\t\t", "+", "-\t\t", "+", "-\t    boolean closingTag = isBreak || (text.htmlIndexes != null && (text.htmlIndexes[max] & JAVADOC_TAGS_ID_MASK) == htmlTagID);", "+\t    boolean closingTag = isHtmlBreakTag || (text.htmlIndexes != null && (text.htmlIndexes[max] & JAVADOC_TAGS_ID_MASK) == htmlTagID);", "-\t\t    if (max > 0 && htmlTagID == JAVADOC_SEPARATOR_TAGS_ID && closingTag) {", "+\t\t    if (max > 0 && isHtmlSeparatorTag && closingTag) {", "-\t    ", "+", "-\t\tif (!needIndentation && !isBreak && text.htmlIndexes != null && (text.htmlIndexes[max] & JAVADOC_TAGS_ID_MASK) == JAVADOC_SEPARATOR_TAGS_ID) {", "+\t\tif (!needIndentation && !isHtmlBreakTag && text.htmlIndexes != null && text.isTextAfterHtmlSeparatorTag(max)) {", "-\t\t", "+", "-\t    if (max > 0 && htmlTagID == JAVADOC_SEPARATOR_TAGS_ID) {", "+\t    if (max > 0 && isHtmlSeparatorTag) {", "-\t}", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6f5d162ba4d2e90b7631f3185485445", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 67, "signatureBeforeChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block)", "signatureAfterChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block)", "diff": ["-\t\tboolean textOnNewLine = (block.isParamTag() && this.formatter.preferences.comment_insert_new_line_for_parameter) || !block.hasTextOnTagLine();", "-\t    int tagCategory =  text.getHtmlTagID();", "+\t\tboolean textOnNewLine = (text == block.nodes[0] && ((block.isParamTag() && this.formatter.preferences.comment_insert_new_line_for_parameter) || !block.hasTextOnTagLine())) || text.linesBefore > 0;", "+\t    int htmlTagID = text.getHtmlTagID();", "-\t    if (tagCategory != JAVADOC_SINGLE_BREAK_TAG_ID) {", "+\t    boolean isBreak = htmlTagID == JAVADOC_SINGLE_BREAK_TAG_ID;", "+\t\tif (!isBreak) {", "-\t\t\tboolean isCode = tagCategory == JAVADOC_CODE_TAGS_ID;", "-\t\t\tfor (int i=0, ptr=0; i<=max ; i++) {", "+\t\t\tboolean isCode = htmlTagID == JAVADOC_CODE_TAGS_ID;", "+\t\t\tfor (int idx=0, ptr=0; idx<=max || (text.htmlNodesPtr != -1 && ptr <= text.htmlNodesPtr); idx++) {", "-\t\t\t\tint end = (int) (text.separators[i] >>> 32);", "+\t\t\t\tint end = (idx > max) ? text.sourceEnd : (int) (text.separators[idx] >>> 32);", "+\t\t\t\t\tif (idx > max)  {", "+\t\t\t\t\t\treturn linesAfter;", "+\t\t\t\t\t}", "-\t\t\t\t\tif (i > 0 && linesAfter > 0) {", "+\t\t\t\t\tif (idx > 0 && linesAfter > 0) {", "-\t\t\t\t\tprintJavadocTextLine(buffer, nextStart, end, block, i==1/*first text?*/, needIndentation, i==0/* opening html tag?*/);", "-\t\t\t\t    if (i==0 && tagCategory == JAVADOC_SEPARATOR_TAGS_ID) {", "-\t\t\t\t    \tlinesAfter = 1;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tlinesAfter = 0;", "+\t\t\t\t\tif (idx > 0) {", "+\t\t\t\t\t\tif (!needIndentation && (text.htmlIndexes[idx-1] & JAVADOC_TAGS_ID_MASK) == JAVADOC_SEPARATOR_TAGS_ID) {", "+\t\t\t\t\t\t\tneedIndentation = true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\tprintJavadocTextLine(buffer, nextStart, end, block, idx==1/*first text?*/, needIndentation, idx==0/* opening html tag?*/ || text.htmlIndexes[idx-1] != -1);", "+\t\t\t\t\tlinesAfter = 0;", "+\t\t\t\t    if (idx==0) {", "+\t\t\t\t    \tif (htmlTagID == JAVADOC_SEPARATOR_TAGS_ID) {", "+\t\t\t\t\t    \tlinesAfter = 1;", "+\t\t\t\t\t    }", "+\t\t\t\t\t} else if (text.htmlIndexes[idx-1] == JAVADOC_SINGLE_BREAK_TAG_ID) {", "+\t\t\t\t    \tlinesAfter = 1;", "+\t\t\t\t    }", "-\t\t\t\tnextStart = (int) text.separators[i];", "-\t\t\t\tif (!clearBlankLines && (wasHtmlTag || i==0 || i==max)) {", "-\t\t\t\t\tint endLine = Util.getLineNumber(end, this.lineEnds, startLine-1, this.maxLines);", "-\t\t\t\t\tstartLine = Util.getLineNumber(nextStart, this.lineEnds, endLine-1, this.maxLines);", "-\t\t\t\t\tif (linesAfter < (startLine - endLine)) {", "-\t\t\t\t\t\tlinesAfter = startLine - endLine;", "+\t\t\t\tnextStart = (int) text.separators[idx];", "+\t\t\t\tint endLine = Util.getLineNumber(end, this.lineEnds, startLine-1, this.maxLines);", "+\t\t\t\tstartLine = Util.getLineNumber(nextStart, this.lineEnds, endLine-1, this.maxLines);", "+\t\t\t\tint linesGap = startLine - endLine;", "+\t\t\t\tif (linesGap > 0) {", "+\t\t\t\t\tif (clearBlankLines) {", "+\t\t\t\t\t\t// keep previously computed lines after", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (wasHtmlTag || idx==0 || (idx==max && ((text.htmlIndexes[max] & JAVADOC_TAGS_ID_MASK) == htmlTagID))) {", "+\t\t\t\t\t\t\tif (linesAfter < linesGap) {", "+\t\t\t\t\t\t\t\tlinesAfter = linesGap;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\ttextOnNewLine = linesAfter > 0;", "+\t    boolean closingTag = isBreak || (text.htmlIndexes != null && (text.htmlIndexes[max] & JAVADOC_TAGS_ID_MASK) == htmlTagID);", "-\t\t    if (max > 0 && tagCategory == JAVADOC_SEPARATOR_TAGS_ID) {", "+\t\t    if (max > 0 && htmlTagID == JAVADOC_SEPARATOR_TAGS_ID && closingTag) {", "-\t\t\t\tint newLines = linesAfter;", "-//\t\t\t\tif (newLines > 1 && clearBlankLines) newLines = 1;", "-\t\t\t\tprintJavadocGapLines(previousEnd+1, nextStart-1, newLines, clearBlankLines, false, buffer);", "+\t\t\t\tprintJavadocGapLines(previousEnd+1, nextStart-1, linesAfter, clearBlankLines, false, buffer);", "+\t\t\t\ttextOnNewLine = true;", "-\t\tboolean needIndentation = buffer.length() == 0 && textOnNewLine;", "-\t\tprintJavadocTextLine(buffer, nextStart, text.sourceEnd, block, false /*not the first text*/, needIndentation, true/* closing html tag*/);", "+\t\tboolean needIndentation = textOnNewLine;", "+\t\tif (!needIndentation && !isBreak && text.htmlIndexes != null && (text.htmlIndexes[max] & JAVADOC_TAGS_ID_MASK) == JAVADOC_SEPARATOR_TAGS_ID) {", "+\t\t\tneedIndentation = true;", "+\t\t}", "+\t\tprintJavadocTextLine(buffer, nextStart, text.sourceEnd, block, max<=0 /*not the first text*/, needIndentation, closingTag/* closing html tag*/);", "-\t    if (max > 0 && tagCategory == JAVADOC_SEPARATOR_TAGS_ID) {", "+\t    if (max > 0 && htmlTagID == JAVADOC_SEPARATOR_TAGS_ID) {"]}], "num": 31292}