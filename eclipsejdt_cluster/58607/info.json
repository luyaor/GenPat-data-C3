{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89294a0e5fa09ea0c43e6bc4060234fd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a7190d5d79d0477c52e9d46e0b9e984c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "d92419d7d90bedd902391c7e83696cf6304867ae", "commitAfterChange": "5a71e292125f730be1fbb909dc68614ec3d003c5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate CompilationUnitDeclaration convert(ISourceType[] sourceTypes, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate CompilationUnitDeclaration convert(ISourceType[] sourceTypes, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\t// if more than 10 annotations, diet parse as this is faster", "-\t\t\treturn new Parser(this.problemReporter, true).dietParse(this.cu, compilationResult);", "+\t\t\t// If more than 10 annotations, diet parse as this is faster, but not if", "+\t\t\t// the client wants local and anonymous types to be converted (https://bugs.eclipse.org/bugs/show_bug.cgi?id=254738) ", "+\t\t\tif ((this.flags & LOCAL_TYPE) == 0) {", "+\t\t\t\treturn new Parser(this.problemReporter, true).dietParse(this.cu, compilationResult);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1ab7e1ce064b3ff8f01ab7e034c1f36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "f579b11bede548939a8cf4eec5dd45079a765f08", "commitAfterChange": "47c189142bd056f8bc16562cbff55a5962ea3c3c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "diff": ["+\t\t\t\t} else if ((argument.implicitConversion & BOXING) != 0) {", "+\t\t\t\t\tcontinue; // boxing has a side effect: (int) char   is not boxed as simple char"]}], "num": 58607}