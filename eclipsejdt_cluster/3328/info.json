{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b39ecda5e5a26f3abaac468cd472d545", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ef3db5918a26fab33da09a7ff673fef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["+\t\t\tboolean catchHasError = false;", "-\t\t\t\tif ((argumentTypes[i] = catchArguments[i].resolveForCatch(catchScope)) == null)", "-\t\t\t\t\treturn;", "+\t\t\t\tif ((argumentTypes[i] = catchArguments[i].resolveForCatch(catchScope)) == null) {", "+\t\t\t\t\tcatchHasError = true;", "+\t\t\t\t}", "-", "+\t\t\tif (catchHasError) {", "+\t\t\t\treturn;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "172f110e0b324059de184b688592b983", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite)", "signatureAfterChange": " \tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite)", "diff": ["-\t\tboolean varArgCase = method.isVararg();", "+\t\tboolean isVarArgs = method.isVarargs();", "-\t\t\tif (!varArgCase || argLength < paramLength - 1)", "+\t\t\tif (!isVarArgs || argLength < paramLength - 1)", "-\t\t\tif (varArgCase) {", "+\t\t\tif (isVarArgs) {"]}], "num": 3328}