{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad8f6b73cfdeff674f4177f6b7b390cf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4af1981a57145726f4bfbb9b4fb72f25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "commitAfterChange": "b59e8f0806fa806958cc3eb16b0ec9b7087aa86f", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " protected String getPluginDirectoryPath()", "signatureAfterChange": " protected String getPluginDirectoryPath()", "diff": ["-\tCodeSource javaCoreCodeSource = JavaCore.class.getProtectionDomain().getCodeSource();", "-\tif (javaCoreCodeSource != null) {", "-\t\tURL javaCoreUrl = javaCoreCodeSource.getLocation();", "-\t\tString javaCorePath = javaCoreUrl.getFile();", "-\t\tint index = javaCorePath.indexOf(JavaCore.PLUGIN_ID);", "-\t\tif (index != -1) {", "-\t\t\tString pluginsPath = javaCorePath.substring(0, index);", "-\t\t\tFile pluginsFile = new File(pluginsPath);", "-\t\t\tString[] list = pluginsFile.list(new FilenameFilter() {", "-\t\t\t\tpublic boolean accept(File dir, String name) {", "-\t\t\t\t\treturn name.startsWith( \"org.eclipse.jdt.core.tests.model\");", "-\t\t\t\t}", "-\t\t\t});", "-\t\t\tif (list != null && list.length > 0) {", "-\t\t\t\treturn pluginsPath + list[0];", "-\t\t\t}", "-\t\t}", "+\ttry {", "+\t\treturn new File(Platform.resolve(Platform.getPlugin(\"org.eclipse.jdt.core.tests.model\").getDescriptor().getInstallURL()).getFile()).getAbsolutePath();", "+\t} catch (IOException e) {", "+\t\t//Error"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77c02e9a1bb55986f8fe4487b51d452d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "commitAfterChange": "b59e8f0806fa806958cc3eb16b0ec9b7087aa86f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected String getPluginDirectoryPath()", "signatureAfterChange": " \tprotected String getPluginDirectoryPath()", "diff": ["-\t\tCodeSource javaCoreCodeSource = JavaCore.class.getProtectionDomain().getCodeSource();", "-\t\tif (javaCoreCodeSource != null) {", "-\t\t\tURL javaCoreUrl = javaCoreCodeSource.getLocation();", "-\t\t\tString javaCorePath = javaCoreUrl.getFile();", "-\t\t\tint index = javaCorePath.indexOf(JavaCore.PLUGIN_ID);", "-\t\t\tif (index != -1) {", "-\t\t\t\tString pluginsPath = javaCorePath.substring(0, index);", "-\t\t\t\tFile pluginsFile = new File(pluginsPath);", "-\t\t\t\tString[] list = pluginsFile.list(new FilenameFilter() {", "-\t\t\t\t\tpublic boolean accept(File dir, String name) {", "-\t\t\t\t\t\treturn name.startsWith( \"org.eclipse.jdt.core.tests.model\");", "-\t\t\t\t\t}", "-\t\t\t\t});", "-\t\t\t\tif (list != null && list.length > 0) {", "-\t\t\t\t\treturn pluginsPath + list[0];", "-\t\t\t\t}", "-\t\t\t}", "+\t\ttry {", "+\t\t\treturn new File(Platform.resolve(Platform.getPlugin(\"org.eclipse.jdt.core.tests.model\").getDescriptor().getInstallURL()).getFile()).getAbsolutePath();", "+\t\t} catch (IOException e) {", "+\t\t\t//Error"]}], "num": 60760}