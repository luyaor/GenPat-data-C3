{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d687a19967a890d14a790472c0c3f392", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662757530d542525ea31d98b3e9527d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "aa46ed677ee85f03d71a5e403b6a2449b883ffe1", "commitAfterChange": "c0de86876da4886baced9b3782c3e678b86d856e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": " \t public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\tcase CAN_ONLY_NULL:", "-\t\t\t\tif (checkType == CAN_ONLY_NULL_NON_NULL) {", "-\t\t\t\t\tscope.problemReporter().localVariableCannotBeNull(local, reference);", "-\t\t\t\t}", "+\t\t\t\tscope.problemReporter().localVariableCannotBeNull(local, reference);", "+\t\t\tif (flowInfo.isPotentiallyNonNull(local)) {", "+\t\t\t  recordNullReference(local, reference,CAN_ONLY_NON_NULL);", "+\t\t\t} else {", "+\t\t\t  recordNullReference(local, reference, checkType);", "+\t\t\t}", "+\t\t\treturn;", "+\t\tcase CAN_ONLY_NULL:", "+\t\t\tif (flowInfo.isPotentiallyNonNull(local)", "+\t\t\t\t\t|| flowInfo.isPotentiallyUnknown(local)) {", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "+\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, reference);", "+\t\t\t\treturn;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f703bb37f92c8e335eade2d12f1e7693", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "aa46ed677ee85f03d71a5e403b6a2449b883ffe1", "commitAfterChange": "c0de86876da4886baced9b3782c3e678b86d856e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void complainOnDeferredNullChecks(BlockScope scope, FlowInfo flowInfo)", "signatureAfterChange": " public void complainOnDeferredNullChecks(BlockScope scope, FlowInfo flowInfo)", "diff": ["+\t\t\t\tcase CAN_ONLY_NON_NULL :", "+\t\t\t\t\tif (flowInfo.isDefinitelyNonNull(local)) {", "+\t\t\t\t\t\tthis.nullReferences[i] = null;", "+\t\t\t\t\t\tscope.problemReporter().localVariableCannotBeNull(local, expression);", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "+\t\t\t\t\t\tthis.nullReferences[i] = null;", "+\t\t\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, expression);", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;"]}], "num": 2238}