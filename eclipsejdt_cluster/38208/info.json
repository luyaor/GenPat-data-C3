{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48b10d17d0466efbaf9b38498c4cb4ee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c45f5a3679b27251b0c74d3a15f8d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "f36c718beb8bf08713390b2fd835e572041478ae", "commitAfterChange": "de0ec0255833f27449d5f59da580e82b41fe6f0d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "  public int getNextToken() throws InvalidInputException", "signatureAfterChange": "  public int getNextToken() throws InvalidInputException", "diff": ["-\t", "-", "-\tif (token == TokenNameLPAREN && atLambdaParameterList()) {", "-\t\tthis.nextToken = token;", "-\t\ttoken = TokenNameBeginLambda;", "-\t} else if (token == TokenNameLESS && atReferenceExpression()) {", "-\t\tthis.nextToken = token;", "-\t\ttoken = TokenNameBeginTypeArguments;", "-\t} else if (token == TokenNameAT && atTypeAnnotation()) {", "-\t\ttoken = TokenNameAT308;", "-\t\tif (atEllipsisAnnotation()) {", "-\t\t\tthis.nextToken = token;", "-\t\t\ttoken = TokenNameAT308DOTDOTDOT;", "-\t\t}", "+\tif (token == TokenNameLPAREN || token == TokenNameLESS || token == TokenNameAT) {", "+\t\ttoken = disambiguatedToken(token);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "985358800f41de3b3e755472524fd103", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/TextEditsBuilder.java", "commitBeforeChange": "b2b8c809039544e3b7857112d3dba58d84cc4820", "commitAfterChange": "8f8bb370f097d2a34f004c1d0b29e00cd828b5b6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tprivate void bufferWhitespaceBefore(Token token, int index)", "signatureAfterChange": "  \tprivate void bufferWhitespaceBefore(Token token, int index)", "diff": ["-\t\t\t\tif (this.options.indent_empty_lines && token.tokenType != TokenNameNotAToken)", "-\t\t\t\t\tindentToken = (index == 0 || token.getIndent() > getPrevious().getIndent()) ? token : getPrevious();", "+\t\t\t\tif (this.options.indent_empty_lines && token.tokenType != TokenNameNotAToken) {", "+\t\t\t\t\tif (index == 0) {", "+\t\t\t\t\t\tindentToken = token;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tToken previous = this.tm.get(this.tm.findFirstTokenInLine(index - 1, true, false));", "+\t\t\t\t\t\tindentToken = (token.getIndent() > previous.getIndent()) ? token : previous;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 38208}