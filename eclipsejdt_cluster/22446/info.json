{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a48a966a09e843f0eeb5171fcf964fa", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "305db0ead2789c8d6e22663797fa4500", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "79a792fd2ce5bf4b6db39e3bfe8729f652ff2091", "commitAfterChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tpublic void copy(File src, File dest) throws IOException", "signatureAfterChange": " \tpublic void copy(File src, File dest) throws IOException", "diff": ["-\t\tout.write(srcBytes);", "-\t\tout.close();", "+\t\ttry {", "+\t\t\tout.write(srcBytes);", "+\t\t} finally {", "+\t\t\tout.close();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1d6963069e9f92fba531fda07b0be2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "79a792fd2ce5bf4b6db39e3bfe8729f652ff2091", "commitAfterChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " private void runTest( \t\tboolean shouldCompileOK,  \t\tString[] testFiles,  \t\tString commandLine, \t\tMatcher outOutputStringMatcher, \t\tMatcher errOutputStringMatcher, \t\tboolean shouldFlushOutputDirectory)", "signatureAfterChange": " private void runTest( \t\tboolean shouldCompileOK,  \t\tString[] testFiles,  \t\tString commandLine, \t\tMatcher outOutputStringMatcher, \t\tMatcher errOutputStringMatcher, \t\tboolean shouldFlushOutputDirectory)", "diff": ["-\t\t\tsourceFileWriter.write(testFiles[i + 1]);", "-\t\t\tsourceFileWriter.close();", "+\t\t\ttry {", "+\t\t\t\tsourceFileWriter.write(testFiles[i + 1]);", "+\t\t\t} finally {", "+\t\t\t\tsourceFileWriter.close();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "824867441dccef52c17ebc752c596b0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "874cc60b34062d184abafc157c764e3af128769a", "commitAfterChange": "946979c8e5ddaa5ee72e6c4a1d2d619fb28b1d8f", "methodNumberBeforeChange": 593, "methodNumberAfterChange": 593, "signatureBeforeChange": " public void testBug222284() throws Exception", "signatureAfterChange": " public void testBug222284() throws Exception", "diff": ["-\t\tdeleteExternalResource(jarName);", "-\t\tsimulateRestart();", "+\t\ttry {", "+\t\t\tdeleteExternalResource(jarName);", "+\t\t} finally {", "+\t\t\tsimulateRestart();", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4ffb7b1c561c60da0fe9af82167bd93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "79a792fd2ce5bf4b6db39e3bfe8729f652ff2091", "commitAfterChange": "61910f9ffdfc607d31120af5ce39e6bf8d69bab0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected void runTest( \t\t\tboolean shouldCompileOK,  \t\t\tString[] testFiles,  \t\t\tObject extraArguments, \t\t\tString expectedOutOutputString, \t\t\tString expectedErrOutputString, \t\t\tboolean shouldFlushOutputDirectory, \t\t\tTestCompilationProgress progress)", "signatureAfterChange": " \tprotected void runTest( \t\t\tboolean shouldCompileOK,  \t\t\tString[] testFiles,  \t\t\tObject extraArguments, \t\t\tString expectedOutOutputString, \t\t\tString expectedErrOutputString, \t\t\tboolean shouldFlushOutputDirectory, \t\t\tTestCompilationProgress progress)", "diff": ["-\t\t\t\t\tsourceFileWriter.write(testFiles[i + 1]);", "-\t\t\t\t\tsourceFileWriter.close();", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tsourceFileWriter.write(testFiles[i + 1]);", "+\t\t\t\t\t} finally {", "+\t\t\t\t\t\tsourceFileWriter.close();", "+\t\t\t\t\t}"]}], "num": 22446}