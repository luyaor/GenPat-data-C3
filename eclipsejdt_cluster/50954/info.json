{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "833a1da4d529e6d518ec843ae8bbf4e7", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7567e2697958a0f08420fffd5b0e68ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/State.java", "commitBeforeChange": "376cf3e1a3637f0d6698064b8aa139e3173f12de", "commitAfterChange": "15d76232d8d0f6d3d473493e1ebc4002775a58d1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r void recordLastStructuralChanges(IProject prereqProject, int prereqBuildNumber)", "signatureAfterChange": "\r \r void recordStructuralDependency(IProject prereqProject, State prereqState)", "diff": ["-void recordLastStructuralChanges(IProject prereqProject, int prereqBuildNumber) {\r", "-\tstructuralBuildNumbers.put(prereqProject.getName(), new Integer(prereqBuildNumber));\r", "+void recordStructuralDependency(IProject prereqProject, State prereqState) {\r", "+\tif (prereqState != null)\r", "+\t\tstructuralBuildTimes.put(prereqProject.getName(), new Long(prereqState.lastStructuralBuildTime));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc4cd2351a55662827c18e04a38ea695", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "9b845d774c1c19314da22ed0751cec3d607d5455", "commitAfterChange": "649631b834e755f12bf40b9c916ce9dfc765a8d0", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException", "signatureAfterChange": "  protected void writeClassFileContents(ClassFile classFile, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException", "diff": ["-protected void writeClassFileBytes(byte[] bytes, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException {", "+protected void writeClassFileContents(ClassFile classFile, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException {", "+//\tInputStream input = new SequenceInputStream(", "+//\t\t\tnew ByteArrayInputStream(classFile.header, 0, classFile.headerOffset),", "+//\t\t\tnew ByteArrayInputStream(classFile.contents, 0, classFile.contentsOffset));", "+\tInputStream input = new ByteArrayInputStream(classFile.getBytes());", "-\t\tfile.setContents(new ByteArrayInputStream(bytes), true, false, null);", "+\t\tfile.setContents(input, true, false, null);", "-\t\tfile.create(new ByteArrayInputStream(bytes), IResource.FORCE | IResource.DERIVED, null);", "+\t\tfile.create(input, IResource.FORCE | IResource.DERIVED, null);"]}], "num": 50954}