{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e4856d38628558ae62a4adfb5caba34", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d402e376b8e6a331ec72e28afa8b6e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b9c215c1a0014055731b42921e6d8437fe5d1c30", "commitAfterChange": "cf30dcc5cf110d772b62d35f57e0c35d494f0e46", "methodNumberBeforeChange": 229, "methodNumberAfterChange": 229, "signatureBeforeChange": " \tpublic void test227()", "signatureAfterChange": " \tpublic void test227()", "diff": ["+\t\t\t\"Type safety: The method iterator() belongs to the raw type List. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tvoid m2() { for (Iterator<X> i = list().iterator(); i.hasNext();); }  // unsafe conversion\\n\" + ", "+\t\t\t\"\t                                 ^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"7. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"7. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"8. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"9. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"9. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 11)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78c394158df484c61c329809f3402724", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6d9cd9b246f8b8740f4a501085a32633b2b6c2af", "commitAfterChange": "470afdfff602b441f9a45a7d903230534423c9ca", "methodNumberBeforeChange": 229, "methodNumberAfterChange": 229, "signatureBeforeChange": " \tpublic void test227()", "signatureAfterChange": " \tpublic void test227()", "diff": ["-\t\t\t\"Type safety: The method iterator() belongs to the raw type List. References to generic type List<E> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tvoid m2() { for (Iterator<X> i = list().iterator(); i.hasNext();); }  // unsafe conversion\\n\" + ", "-\t\t\t\"\t                                 ^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"7. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"8. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"9. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"8. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"10. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 11)\\n\" + "]}], "num": 72213}