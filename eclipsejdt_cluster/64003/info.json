{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbf1aa51fd1a3dda4510b1f3af272aea", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571703400d5d89c8d1e0fa6b7a7d2bf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProjectElementInfo.java", "commitBeforeChange": "c09e95424aee3fa583749f78830353a794128164", "commitAfterChange": "c7b59a28aedb68eaaa1a4a3fd7cd0012ca10b3f9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "signatureAfterChange": " \tprivate Object[] computeNonJavaResources(JavaProject project)", "diff": ["+\t\tchar[][] exclusionPatterns = null;", "+\t\t\t\t\texclusionPatterns = ((ClasspathEntry)entry).fulExclusionPatternChars();", "-\t\t\t\t\t\t// check if this file might be a jar or a zip inside the build path", "+\t\t\t\t\t\t// ignore this file if referred to on the build path", "+\t\t\t\t\t\tString resName = res.getName();", "-\t\t\t\t\t\t\tString resName = res.getName();", "-\t\t\t\t\t\t\tif (srcIsProject && Util.isValidCompilationUnitName(resName)) {", "+\t\t\t\t\t\t\tif (srcIsProject ", "+\t\t\t\t\t\t\t\t&& Util.isValidCompilationUnitName(resName)", "+\t\t\t\t\t\t\t\t&& !Util.isExcluded(res, exclusionPatterns)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7221d6621c193025e7814eb678d07d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "723628e20cdcca3d7368991555fbb1e08f7222a1", "commitAfterChange": "daa096617d4294add6bd8531102c2906f3417dbb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected boolean computeChildren(OpenableElementInfo info, IResource resource) throws JavaModelException", "signatureAfterChange": " protected boolean computeChildren(OpenableElementInfo info, IResource resource) throws JavaModelException", "diff": ["+\t\tchar[][] exclusionPatterns = ((PackageFragmentRoot)getPackageFragmentRoot()).getExclusionPatterns();", "-\t\t\tif (child.getType() != IResource.FOLDER) {", "+\t\t\tif (child.getType() != IResource.FOLDER", "+\t\t\t\t\t&& !Util.isExcluded(child, exclusionPatterns)) {"]}], "num": 64003}