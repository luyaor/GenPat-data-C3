{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b4b67af28a67976e613f29d7f1771f3b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02d084fe0289c4257cda160076121e28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic IJavaModelStatus verify()", "signatureAfterChange": "\r public IJavaModelStatus verify()", "diff": ["+ */\r", "+public IJavaModelStatus verify() {\r", "+\tIJavaModelStatus status = super.verify();\r", "+\tif (!status.isOK()) {\r", "+\t\treturn status;\r", "+\t}\r", "+\tIJavaProject javaProject = (IJavaProject)getElementToProcess();\r", "-\t */\r", "-\tpublic IJavaModelStatus verify() {\r", "-\t\tIJavaModelStatus status = super.verify();\r", "-\t\tif (!status.isOK()) {\r", "-\t\t\treturn status;\r", "-\t\t}\r", "-\t\tIClasspathEntry[] cp = this.newRawPath;\r", "-\t\tIJavaProject javaProject = (IJavaProject) getElementToProcess();\r", "-\t\tIPath projectPath = javaProject.getProject().getFullPath();\r", "-\r", "-\t\tIPath outputLocation;\r", "-\t\ttry {\r", "-\t\t\toutputLocation = javaProject.getOutputLocation();\r", "-\t\t} catch (JavaModelException e) {\r", "-\t\t\treturn e.getJavaModelStatus();\r", "-\t\t}\r", "-\t\tfor (int i = 0; i < cp.length; i++) {\r", "-\t\t\tif (cp[i].getEntryKind() == IClasspathEntry.CPE_SOURCE) {\r", "-\t\t\t\tIPath entry = cp[i].getPath();\r", "-\t\t\t\tif (!entry.equals(projectPath)\r", "-\t\t\t\t\t&& !entry.equals(outputLocation)\r", "-\t\t\t\t\t&& (outputLocation.isPrefixOf(entry) || entry.isPrefixOf(outputLocation))) {\r", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, entry);\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\treturn JavaModelStatus.VERIFIED_OK;\r", "+\t// retrieve output location\r", "+\tIPath outputLocation;\r", "+\ttry {\r", "+\t\toutputLocation = javaProject.getOutputLocation();\r", "+\t} catch(JavaModelException e){\r", "+\t\treturn e.getJavaModelStatus();\r", "+\treturn JavaConventions.validateClasspath(javaProject, this.newRawPath, outputLocation);\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9309a98c295ff58fca4083ea7a74acab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "e719dd5a3586c01e5265dc68f8e6023c180424cf", "commitAfterChange": "4e66475f9a73014d666c99c51fe059857a4663fa", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public void add(IResource element)", "signatureAfterChange": "\r public void add(IResource element)", "diff": ["+\tthis.add(element, true);\r", "+}\r", "-\tif (element instanceof IProject) {\r", "-\t\t\tIClasspathEntry[] entries = javaProject.getExpandedClasspath(true);\r", "-\t\t\t\tthis.add(entry.getPath());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94fab1c170a61a3514dc0b646beb6ef4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "f95e58c822d23fa71cf6c6e2ac3adce80f07a42f", "commitAfterChange": "1c5093c74409d802b34134e981077f69adbcd0bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate JavaElement getJavaElement(LocalVariableBinding binding)", "signatureAfterChange": " \t \tprivate JavaElement getJavaElement(LocalVariableBinding binding)", "diff": ["-\t\t\tIType type = (IType)this.getJavaElementOfCompilationUnit(typeDeclaration, typeDeclaration.binding);", "-\t\t\tif (type != null) {", "-\t\t\t\ttry {", "-\t\t\t\t\tIInitializer[] initializers = type.getInitializers();", "-\t\t\t\t\tif (initializers != null) {", "-\t\t\t\t\t\tdone : for (int i = 0; i < initializers.length; i++) {", "-\t\t\t\t\t\t\tIInitializer initializer = initializers[i];", "-\t\t\t\t\t\t\tISourceRange sourceRange = initializer.getSourceRange();", "-\t\t\t\t\t\t\tif (sourceRange != null) {", "-\t\t\t\t\t\t\t\tint initializerStart = sourceRange.getOffset();", "-\t\t\t\t\t\t\t\tint initializerEnd = initializerStart + sourceRange.getLength();", "-\t\t\t\t\t\t\t\tif (initializerStart <= local.sourceStart &&", "-\t\t\t\t\t\t\t\t\t\tlocal.sourceEnd <= initializerEnd) {", "-\t\t\t\t\t\t\t\t\tparent = (JavaElement)initializer;", "-\t\t\t\t\t\t\t\t\tbreak done;", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\tJavaElement type = this.getJavaElementOfCompilationUnit(typeDeclaration, typeDeclaration.binding);", "+\t\t\tparent = Util.getUnresolvedJavaElement(local.sourceStart, local.sourceEnd, type);"]}], "num": 15304}