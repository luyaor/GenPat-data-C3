{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "06fe0c78bee67a81107f9dbd10dd6906", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08a2ee6629b6c5291717af27791f1b62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "649631b834e755f12bf40b9c916ce9dfc765a8d0", "commitAfterChange": "19a679a95bc1c8afc10cb50ce5a617f6914888ae", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 168, "signatureBeforeChange": " \tprivate void createTypeProposal( \t\t\tReferenceBinding refBinding, \t\t\tchar[] typeName, \t\t\tint accessibility, \t\t\tchar[] completionName, \t\t\tint relevance, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "signatureAfterChange": " \tprivate void createTypeProposal( \t\t\tReferenceBinding refBinding, \t\t\tchar[] typeName, \t\t\tint accessibility, \t\t\tchar[] completionName, \t\t\tint relevance, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\tproposal.setSignature(getSignature(refBinding));", "+\t\t\tproposal.setSignature(getCompletedTypeSignature(refBinding));", "-\t\t\tproposal.setSignature(getSignature(refBinding));", "+\t\t\tproposal.setSignature(getCompletedTypeSignature(refBinding));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ba38557823b049ff0f2e52d29407d51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "d67eaa74be09a5fdb9a99cc1f9fc8d45fa370350", "commitAfterChange": "06245fd2babdc26904fe63b2efeb2b3ec75db92f", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tprivate void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "signatureAfterChange": "  \tprivate void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall)", "diff": ["-\t\t\t\t\t//proposal.setDeclarationSignature(null);", "+\t\t\t\t\tproposal.setDeclarationSignature(getSignature(receiverType));", "-\t\t\t\t\t//proposal.setDeclarationSignature(null);", "+\t\t\t\t\tproposal.setDeclarationSignature(getSignature(receiverType));"]}], "num": 11745}