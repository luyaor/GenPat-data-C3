{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6f90ab404ee8048057ec126c87ec713d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "351b614a6d186abc67b09cdaf50e6609", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "ccd7473ab5b04db82ccb351c0af62494fa41a13b", "commitAfterChange": "9c357e8e5c2796babe39d59e34a125e96b5dcee2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t\tTypeBinding boxedType = scope.environment().computeBoxingType(compileTimeType);", "-\t\t\t\tthis.implicitConversion = BOXING | (compileTimeType.id << 4) | compileTimeType.id; // use primitive type only in implicitConversion", "-\t\t\t\tcompileTimeType = boxedType;", "+\t\t\t\tTypeBinding boxedType = scope.environment().computeBoxingType(runtimeTimeType);", "+\t\t\t\tif (boxedType == runtimeTimeType) // Object o = 12;", "+\t\t\t\t\tboxedType = compileTimeType; ", "+\t\t\t\tthis.implicitConversion = BOXING | (boxedType.id << 4) + compileTimeType.id;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f99ed469d7274de766a3d6b47a30207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "signatureAfterChange": "  \tpublic void computeConversion(Scope scope, TypeBinding runtimeTimeType, TypeBinding compileTimeType)", "diff": ["-\t\t\t\tcompileTimeType = scope.environment().computeBoxingType(compileTimeType);", "+\t\t\t\tTypeBinding unboxedType = scope.environment().computeBoxingType(compileTimeType);", "+\t\t\t\tscope.problemReporter().autoboxing(this, compileTimeType, runtimeTimeType);", "+\t\t\t\tcompileTimeType = unboxedType;", "+\t\t\t\tscope.problemReporter().autoboxing(this, compileTimeType, runtimeTimeType);"]}], "num": 60815}