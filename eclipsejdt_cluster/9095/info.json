{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2084cd1c64aeb40a69fb9788997c4b9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "107cc0f331f36a359697631c7e769a35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 176, "methodNumberAfterChange": 176, "signatureBeforeChange": " public void invalidField(QualifiedNameReference nameRef, FieldBinding field, int index, TypeBinding searchedType)", "signatureAfterChange": " public void invalidField(QualifiedNameReference nameRef, FieldBinding field, int index, TypeBinding searchedType)", "diff": ["+\t", "+\tchar[] lastToken = nameRef.tokens[nameRef.tokens.length - 1];", "+\tif (lastToken.length == 0) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18ccf0b9d6432386c909450ea093e985", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeElementImpl.java", "commitBeforeChange": "d8bc0369a4febbf26184c3abdfb00924e5abcf8a", "commitAfterChange": "840a1f2f1e9b39c00b9c2e1286430c4050c7bac6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \t@Override \tpublic String toString()", "signatureAfterChange": "  \t@Override \tpublic String toString()", "diff": ["-\t\treturn new String(CharOperation.concatWith(binding.compoundName, '.'));", "+\t\tchar[] concatWith = CharOperation.concatWith(binding.compoundName, '.');", "+\t\tif (binding.isNestedType()) {", "+\t\t\tCharOperation.replace(concatWith, '$', '.');", "+\t\t\treturn new String(concatWith);", "+\t\t}", "+\t\treturn new String(concatWith);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d30a286c1b551c3b59d2008001684d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "4253c3857fdc6ac2b7d8f2fab949e195fec88f49", "commitAfterChange": "72ac6cbecbda631e09e5ff29bcd95cc93135ab26", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  private String removeKnownDifferences(String comment)", "signatureAfterChange": "  private String cleanAllKnownDifferences(String comment)", "diff": ["-private String removeKnownDifferences(String comment) {", "+private String cleanAllKnownDifferences(String comment) {", "-\t\t\tcleanedComment = removeHeaderAndFooter(comment);", "-\t\t\tcleanedComment = cleanPreTags(cleanedComment);", "+\t\t\tcleanedComment = cleanHeaderAndFooter(comment);", "+\t\t\tString newComment = cleanPreTags(cleanedComment);", "+\t\t\tif (cleanedComment == newComment) {", "+\t\t\t\tcleanedComment = cleanCodeTags(cleanedComment);", "+\t\t\t} else {", "+\t\t\t\tcleanedComment = newComment;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c368057aababf5dcd6596f96355ab94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathLocation.java", "commitBeforeChange": "39c19ac69bf67c1b8b2b5511a6f5511e53b75c22", "commitAfterChange": "b09783983d142adfd46747128d8619308afbe37b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tAccessRestriction fetchAccessRestriction(String qualifiedBinaryFileName)", "signatureAfterChange": " \tAccessRestriction fetchAccessRestriction(String qualifiedBinaryFileName)", "diff": ["-\t\treturn this.accessRuleSet", "-\t\t\t\t\t.getViolatedRestriction(", "-\t\t\t\t\t\tqualifiedBinaryFileName.substring(0, qualifiedBinaryFileName.length() - SUFFIX_CLASS.length)", "-\t\t\t\t\t\t.toCharArray());", "+\t\tchar [] qualifiedTypeName = qualifiedBinaryFileName.", "+\t\t\tsubstring(0, qualifiedBinaryFileName.length() - SUFFIX_CLASS.length)", "+\t\t\t.toCharArray(); ", "+\t\tif (File.separatorChar == '\\\\') {", "+\t\t\tCharOperation.replace(qualifiedTypeName, File.separatorChar, '/');", "+\t\t}", "+\t\treturn this.accessRuleSet.getViolatedRestriction(qualifiedTypeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dc5f3b36f6ffe4730c9ac7f4b07381b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java", "commitBeforeChange": "72d2a06f24a336dbc8b7ac27591c5281bcc23b34", "commitAfterChange": "d6c0a0baa954d067a4e339447ae467cd8307870c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic static char[] getTypeSignature(TypeBinding typeBinding)", "signatureAfterChange": "  \tpublic static char[] getTypeSignature(TypeBinding typeBinding)", "diff": ["-\t\treturn typeBinding.signature();", "+\t\tchar[] result = typeBinding.signature();", "+\t\tif (result != null) {", "+\t\t\tresult = CharOperation.replaceOnCopy(result, '/', '.');", "+\t\t}", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "679329a6695096ee3cb60700199d4f5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "69166fc4e41eda18ba3ac0adb7fbc59250ec70c0", "commitAfterChange": "55ee0265171c95e2014ca1f0a8ad4553c7329fc1", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r \tpublic IJavaModel getJavaModel()", "signatureAfterChange": "\r \tpublic JavaModel getJavaModel()", "diff": ["-\tpublic IJavaModel getJavaModel() {\r", "-\t\treturn this.cache.getJavaModel();\r", "-\t}\r", "+\tpublic JavaModel getJavaModel() {\r", "+\t\tJavaModel javaModel = this.cache.getJavaModel();\r", "+\t\tif (javaModel == null){\r", "+\t\t\tjavaModel = new JavaModel(ResourcesPlugin.getWorkspace());\r", "+\t\treturn javaModel;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8332189a08e811a1570a076e899d1a08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "c0f9d8b84abc89ce64134386f4c44ab56579df25", "commitAfterChange": "9ba8652d2cebf2117416af5e39a70e172556117b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["+\t\t\t\tchar[] exceptionType = Signature.toCharArray(localVariableTableEntry.getDescriptor());", "+\t\t\t\tCharOperation.replace(exceptionType, '/', '.');", "-\t\t\t\t\t.append(Signature.toCharArray(localVariableTableEntry.getDescriptor()));", "+\t\t\t\t\t.append(exceptionType);", "+\t\t\tchar[] exceptionType = Signature.toCharArray(localVariableTableEntry.getDescriptor());", "+\t\t\tCharOperation.replace(exceptionType, '/', '.');", "-\t\t\t\t.append(Signature.toCharArray(localVariableTableEntry.getDescriptor()));", "+\t\t\t\t.append(exceptionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88151ac69e91458d4055c4204e07fb8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexerRequestor.java", "commitBeforeChange": "bbb0dcb779d919061a7831a79389e1c049a224cf", "commitAfterChange": "1757e38a5d83efbdcae1f40063864d000049242c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private void enterEnum(TypeInfo typeInfo)", "signatureAfterChange": " private void enterEnum(TypeInfo typeInfo)", "diff": ["-\tthis.indexer.addEnumDeclaration(typeInfo.modifiers, packageName, typeInfo.name, typeNames, typeInfo.superinterfaces, typeInfo.secondary);", "+\tchar[] superclass = typeInfo.superclass == null ? CharOperation.concatWith(TypeConstants.JAVA_LANG_ENUM, '.'): typeInfo.superclass;", "+\tthis.indexer.addEnumDeclaration(typeInfo.modifiers, packageName, typeInfo.name, typeNames, superclass, typeInfo.superinterfaces, typeInfo.secondary);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e799d87f6f888fe6a77035fd8542b10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ClassFileMatchLocator.java", "commitBeforeChange": "3c48c9fa4ac4d99dec40bf37b65e9e7f38ac2398", "commitAfterChange": "b5bf53e6da2ad7bf71cf2aa2a6885479711b42ec", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " boolean matchTypeDeclaration(TypeDeclarationPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "signatureAfterChange": " boolean matchTypeDeclaration(TypeDeclarationPattern pattern, Object binaryInfo, IBinaryType enclosingBinaryType)", "diff": ["-\t\tif (!checkTypeName(pattern.simpleName, pattern.pkg, fullyQualifiedTypeName, pattern.isCaseSensitive(), pattern.isCamelCase())) return false;", "+\t\tchar[] simpleName = (pattern.getMatchMode() | SearchPattern.R_PREFIX_MATCH) != 0", "+\t\t\t? CharOperation.concat(pattern.simpleName, IIndexConstants.ONE_STAR)", "+\t\t\t: pattern.simpleName;", "+\t\tif (!checkTypeName(simpleName, pattern.pkg, fullyQualifiedTypeName, pattern.isCaseSensitive(), pattern.isCamelCase())) return false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb4406598bd5311606c08838c6fa9e41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "c87dd117aac30a89b6ea22519637d9f69471ec0b", "commitAfterChange": "c79af2ee01d3f2093b2668c0a663bf8f76d7429f", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " protected void consumeSingleStaticImportDeclarationName()", "signatureAfterChange": " protected void consumeSingleStaticImportDeclarationName()", "diff": ["-\t\trequestor.acceptUnknownReference(impt.tokens[length], start);", "+\t\tchar[] last = impt.tokens[length];", "+\t\t// accept all possible kind for last name, index users will have to select the right one...", "+\t\t// see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=86901", "+\t\trequestor.acceptFieldReference(last, start);", "+\t\trequestor.acceptMethodReference(last, 0,start);", "+\t\trequestor.acceptTypeReference(last, start);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e07bd99cad5a633afc6041211406670f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/APTTestBase.java", "commitBeforeChange": "5c6399fd62b5d745b35044e3bff8596573e78ddc", "commitAfterChange": "b38ea18c4c246fdf929a93f8bcd525af65beb341", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void setUp() throws Exception", "signatureAfterChange": " \tpublic void setUp() throws Exception", "diff": ["-\t\tIPath projectPath = env.addProject( getProjectName(), \"1.5\" ); //$NON-NLS-1$", "+\t\tfinal String projectName = getProjectName();", "+\t\tif( projectName == null )", "+\t\t\tthrow new IllegalStateException();", "+\t\tIPath projectPath = env.addProject( getProjectName(), \"1.5\" );", "-\t\tfullBuild( projectPath );", "+\t\t//fullBuild( projectPath );", "-", "+\t\t", "+\t\tAptConfig.setEnabled(null, true);"]}], "num": 9095}