{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6eefd54234537df1da98a73fbb074100", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "077ce98c3be905e6de7f34f2b8647c03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \t \tpublic void test050()", "signatureAfterChange": " \t \tpublic void test050()", "diff": ["-\t\t\t\"     1  istore_0\\n\" + ", "-\t\t\t\"     2  iload_0\\n\" + ", "+\t\t\t\"     1  istore_0 [i]\\n\" + ", "+\t\t\t\"     2  iload_0 [i]\\n\" + ", "-\t\t\t\"     8  getstatic #26 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"    11  iload_0\\n\" + ", "-\t\t\t\"    12  invokevirtual #32 <Method java/io/PrintStream.println(I)V>\\n\" + ", "+\t\t\t\"     8  getstatic java/lang/System.out Ljava/io/PrintStream; [26]\\n\" + ", "+\t\t\t\"    11  iload_0 [i]\\n\" + ", "+\t\t\t\"    12  invokevirtual java/io/PrintStream.println(I)V [32]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c9de6bf2e65b2076ef5a497ba1445b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "16d2bb22ab0669ee00790465fa843455279af5ae", "commitAfterChange": "cb2ffae6de1377c8c53c98f0144305fd03d135f4", "methodNumberBeforeChange": 534, "methodNumberAfterChange": 534, "signatureBeforeChange": " \tpublic void test530()", "signatureAfterChange": " \tpublic void test530()", "diff": ["-\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: LinkedList is a raw type. References to generic type LinkedList<E> should be parameterized\\n\" + ", "+\t\t\t\"LinkedList is a raw type. References to generic type LinkedList<E> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: ArrayList is a raw type. References to generic type ArrayList<E> should be parameterized\\n\" + ", "+\t\t\t\"ArrayList is a raw type. References to generic type ArrayList<E> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: ArrayList is a raw type. References to generic type ArrayList<E> should be parameterized\\n\" + ", "+\t\t\t\"ArrayList is a raw type. References to generic type ArrayList<E> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bbcbc797d532bc6d53bafa15512e08e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic void test004()", "signatureAfterChange": "  \tpublic void test004()", "diff": ["-\t\t\t\t\"class Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" +", "+\t\t\t\t\"class Y<T> extends X<A> { @Override public T foo() { return super.foo(); } }\\n\" +", "-\t\t\t\"\tclass Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" + ", "-\t\t\t\"\t                                   ^^^^^\\n\" + ", "+\t\t\t\"\tclass Y<T> extends X<A> { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\"\t                                             ^^^^^\\n\" + ", "-\t\t\t\"\tclass Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" + ", "-\t\t\t\"\t                                                  ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"\tclass Y<T> extends X<A> { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\"\t                                                            ^^^^^^^^^^^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d23a8699e5d8f0bb9054a908b1a1a18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void test014()", "signatureAfterChange": " public void test014()", "diff": ["-\t\t\"     1  newarray #10 int\\n\" + ", "+\t\t\"     1  newarray int [10]\\n\" + ", "-\t\t\"     7  astore_1\\n\" + ", "-\t\t\"     8  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\"    11  ldc #23 <String \\\"SUCCESS\\\">\\n\" + ", "-\t\t\"    13  invokevirtual #29 <Method java/io/PrintStream.println(Ljava/lang/String;)V>\\n\" + ", "+\t\t\"     7  astore_1 [tab]\\n\" + ", "+\t\t\"     8  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\"    11  ldc <String \\\"SUCCESS\\\"> [23]\\n\" + ", "+\t\t\"    13  invokevirtual java/io/PrintStream.println(Ljava/lang/String;)V [29]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "437325373a39e0dc565069c319adcaec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "066f1fe71d5d139e5a681c9aeece89fa867b71b7", "commitAfterChange": "39951c3ce9f26380d44e65dd4f0a9c708c89c0d1", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void test013()", "signatureAfterChange": " \tpublic void test013()", "diff": ["-\t\t\t\"<compiler name=\\\"{1}\\\" copyright=\\\"{2}\\\" version=\\\"{3}\\\">\\n\" + ", "+\t\t\t\"<compiler copyright=\\\"{2}\\\" name=\\\"{1}\\\" version=\\\"{3}\\\">\\n\" + ", "-\t\t\t\"\t\t\t<problems problems=\\\"1\\\" errors=\\\"1\\\" warnings=\\\"0\\\">\\n\" + ", "-\t\t\t\"\t\t\t\t<problem charEnd=\\\"28\\\" charStart=\\\"25\\\" severity=\\\"ERROR\\\" line=\\\"3\\\" id=\\\"UndefinedType\\\">\\n\" + ", "+\t\t\t\"\t\t\t<problems errors=\\\"1\\\" problems=\\\"1\\\" warnings=\\\"0\\\">\\n\" + ", "+\t\t\t\"\t\t\t\t<problem charEnd=\\\"28\\\" charStart=\\\"25\\\" id=\\\"UndefinedType\\\" line=\\\"3\\\" severity=\\\"ERROR\\\">\\n\" + ", "-\t\t\t\"\t\t\t\t\t<source_context value=\\\"Zork z;\\\" sourceStart=\\\"0\\\" sourceEnd=\\\"3\\\"/>\\n\" + ", "+\t\t\t\"\t\t\t\t\t<source_context sourceEnd=\\\"3\\\" sourceStart=\\\"0\\\" value=\\\"Zork z;\\\"/>\\n\" + ", "-\t\t\t\"\t\t<problem_summary problems=\\\"1\\\" errors=\\\"1\\\" warnings=\\\"0\\\" tasks=\\\"0\\\"/>\\n\" + ", "+\t\t\t\"\t\t<problem_summary errors=\\\"1\\\" problems=\\\"1\\\" tasks=\\\"0\\\" warnings=\\\"0\\\"/>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "529dbe16c122f48e83eab270e587e8ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "commitAfterChange": "0f3bb2f63b9bc5a0a723cb21573a9214f49a822c", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": " public void testTypeRefGenericAll01_TypeVariableBound() throws CoreException", "signatureAfterChange": " public void testTypeRefGenericAll01_TypeVariableBound() throws CoreException", "diff": ["-\t\t\"src/test01/Generic.java test01.Generic [public class Generic<T extends \ufffd|Types|\ufffd, U extends Types & Comparable<Types> & Serializable, V extends A<? super Types>> {@99] EXACT_MATCH\\n\" +", "-\t\t\"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends \ufffd|Types|\ufffd & Comparable<Types> & Serializable, V extends A<? super Types>> {@116] EXACT_MATCH\\n\" +", "-\t\t\"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & \ufffd|Comparable|\ufffd<Types> & Serializable, V extends A<? super Types>> {@124] EXACT_MATCH\\n\" +", "-\t\t\"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & Comparable<Types> & \ufffd|Serializable|\ufffd, V extends A<? super Types>> {@144] EXACT_MATCH\\n\" +", "-\t\t\"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & Comparable<Types> & Serializable, V extends \ufffd|A|\ufffd<? super Types>> {@168] EXACT_MATCH\"", "+\t\t\"src/test01/Generic.java test01.Generic [public class Generic<T extends !|Types|!, U extends Types & Comparable<Types> & Serializable, V extends A<? super Types>> {@99] EXACT_MATCH\\n\" +", "+\t\t\"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends !|Types|! & Comparable<Types> & Serializable, V extends A<? super Types>> {@116] EXACT_MATCH\\n\" +", "+\t\t\"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & !|Comparable|!<Types> & Serializable, V extends A<? super Types>> {@124] EXACT_MATCH\\n\" +", "+\t\t\"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & Comparable<Types> & !|Serializable|!, V extends A<? super Types>> {@144] EXACT_MATCH\\n\" +", "+\t\t\"src/test01/Generic.java test01.Generic [public class Generic<T extends Types, U extends Types & Comparable<Types> & Serializable, V extends !|A|!<? super Types>> {@168] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f231d787b273df3287734f8d58c7519", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void test031()", "signatureAfterChange": " \tpublic void test031()", "diff": ["-\t\t\t\"     2  istore_1\\n\" + ", "-\t\t\t\"     3  iload_1\\n\" + ", "+\t\t\t\"     2  istore_1 [i]\\n\" + ", "+\t\t\t\"     3  iload_1 [i]\\n\" + ", "-\t\t\t\"     8  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"    11  iload_1\\n\" + ", "-\t\t\t\"    12  invokevirtual #27 <Method java/io/PrintStream.println(I)V>\\n\" + ", "+\t\t\t\"     8  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"    11  iload_1 [i]\\n\" + ", "+\t\t\t\"    12  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bbabe88ca26069c5f17c335cec10d99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "f8fd71e42120d981a783dd80ec418ad1ea7de0d5", "commitAfterChange": "518136359f5965283b51c0a8b8ed6cb4be064713", "methodNumberBeforeChange": 179, "methodNumberAfterChange": 179, "signatureBeforeChange": " \tpublic void test054a()", "signatureAfterChange": " \tpublic void test054a()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 6)\\r\\n\" + ", "-\t\t\t\"\tString a(X x) {  return null; }\\r\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tString a(X x) {  return null; }\\n\" + ", "-\t\t\t\"Duplicate method a(X) in type X\\n\" + ", "+\t\t\t\"Method a(X) has the same erasure a(X) as another method in type X\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\r\\n\" + ", "-\t\t\t\"\t<T extends X> T a(T x) {  return null; }\\r\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\t<T extends X> T a(T x) {  return null; }\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9456cd11953eb2d7e46a6423223eef62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DefaultMethodsTest.java", "commitBeforeChange": "2adf5e7af76ae05ae6976726576af8c12845ba88", "commitAfterChange": "f8ad0d5bfc02915772c8bb705662d0256beab7ec", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void _testModifiers1a()", "signatureAfterChange": " \tpublic void _testModifiers1a()", "diff": ["-\t\t\t\"    void foo1() default {}\\n\" +", "-\t\t\t\"    public synchronized void foo2() default {}\\n\" +", "-\t\t\t\"    stritfp void foo3() default {}\\n\" + // typo in strictfp", "-\t\t\t\"    public strictfp synchronized void foo4() default {}\\n\" +", "-\t\t\t\"    public strictfp synchronized @Annot void foo5() default {}\\n\" +", "+\t\t\t\"    default void foo1() {}\\n\" +", "+\t\t\t\"    public default synchronized void foo2() {}\\n\" +", "+\t\t\t\"    stritfp default void foo3() {}\\n\" + // typo in strictfp", "+\t\t\t\"    default public strictfp synchronized void foo4() {}\\n\" +", "+\t\t\t\"    public strictfp  default synchronized @Annot void foo5() {}\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e200f9b074fc18718bbcd1b9dd03f91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 293, "methodNumberAfterChange": 293, "signatureBeforeChange": " public void testBug330313_wksp1_16_njl()", "signatureAfterChange": " public void testBug330313_wksp1_16_njl()", "diff": ["-\t\t\"\t\t\t\t\t// || declaration.modifiers != 0\\n\" + ", "-\t\t\"\t\t\t\t\t|| (this.scanner\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t.getLineNumber(declaration.type.sourceStart)\\n\" + ", "-\t\t\"\t\t\t\t\t\t!= this.scanner\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t.getLineNumber((int) (namePosition >>> 32))))) {\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t// || declaration.modifiers != 0\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t|| (this.scanner.getLineNumber(\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\tdeclaration.type.sourceStart) != this.scanner\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t.getLineNumber(\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t(int) (namePosition >>> 32))))) {\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac7cd45a6e65e816974419f4bb9f53b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AnnotationValueConversionTests.java", "commitBeforeChange": "7109b1b8695adc90efc89b381fbef11f66adc5d7", "commitAfterChange": "737754e9e10e391c87e1274f991c2e257be4069b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\") \tpublic void testLongConversion_Reflection() throws Exception", "signatureAfterChange": " \t@SuppressWarnings(\"nls\") \tpublic void testLongConversion_Reflection() throws Exception", "diff": ["-\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber z expected true but got false\", testPath),", "-\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber s expected 49 but got 0\", testPath),", "-\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber i expected 49 but got 0\", testPath),", "-\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber c expected 1 but got 0\", testPath),", "-\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for memeber b expected 49 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for member z expected true but got false\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for member s expected 49 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for member i expected 49 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for member c expected 1 but got 0\", testPath),", "+\t\t\t\tnew ExpectedProblem(\"\", \"value mismatch for member b expected 49 but got 0\", testPath),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b331058325c077e172ed0ab2ee81d33d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/TypeAnnotationSyntaxTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "\r public void test0082() throws IOException", "signatureAfterChange": "\r public void test0082() throws IOException", "diff": ["-\tassertEquals(\"Wrong location\", \"{0}\", locations.get(\"@B\"));\r", "-\tassertEquals(\"Wrong location\", \"{1}\", locations.get(\"@E\"));\r", "-\tassertEquals(\"Wrong location\", \"{1,0}\", locations.get(\"@F\"));\r", "-\tassertEquals(\"Wrong location\", \"{1,1}\", locations.get(\"@G\"));\r", "-\tassertEquals(\"Wrong location\", \"{1,2}\", locations.get(\"@H\"));\r", "+\tassertEquals(\"Wrong location\", \"[TYPE_ARGUMENT(0)]\", locations.get(\"@B\"));\r", "+\tassertEquals(\"Wrong location\", \"[TYPE_ARGUMENT(1)]\", locations.get(\"@E\"));\r", "+\tassertEquals(\"Wrong location\", \"[TYPE_ARGUMENT(1), ARRAY]\", locations.get(\"@F\"));\r", "+\tassertEquals(\"Wrong location\", \"[TYPE_ARGUMENT(1), ARRAY, ARRAY]\", locations.get(\"@G\"));\r", "+\tassertEquals(\"Wrong location\", \"[TYPE_ARGUMENT(1), ARRAY, ARRAY, ARRAY]\", locations.get(\"@H\"));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd2e0588ef2ee040ca075496e5293a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void test005()", "signatureAfterChange": "  \tpublic void test005()", "diff": ["-\t\t\t\t\"class Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\",", "+\t\t\t\t\"class Y<T> extends X<A> { @Override public T foo() { return super.foo(); } }\\n\",", "-\t\t\t\"\tclass Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" + ", "-\t\t\t\"\t                                   ^^^^^\\n\" + ", "+\t\t\t\"\tclass Y<T> extends X<A> { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\"\t                                             ^^^^^\\n\" + ", "-\t\t\t\"\tclass Y<T> extends X<A> { public T foo() { return super.foo(); } }\\n\" + ", "-\t\t\t\"\t                                                  ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"\tclass Y<T> extends X<A> { @Override public T foo() { return super.foo(); } }\\n\" + ", "+\t\t\t\"\t                                                            ^^^^^^^^^^^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5b8cd8cb494ecc5057159f890390c07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void test023()", "signatureAfterChange": " \tpublic void test023()", "diff": ["-\t\t\t\"     2  istore_1\\n\" + ", "-\t\t\t\"     3  iload_1\\n\" + ", "+\t\t\t\"     2  istore_1 [i]\\n\" + ", "+\t\t\t\"     3  iload_1 [i]\\n\" + ", "-\t\t\t\"     7  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"    10  iload_1\\n\" + ", "-\t\t\t\"    11  invokevirtual #27 <Method java/io/PrintStream.println(I)V>\\n\" + ", "+\t\t\t\"     7  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"    10  iload_1 [i]\\n\" + ", "+\t\t\t\"    11  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d86562d395d0486019d4faab8afd69f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void test034()", "signatureAfterChange": " \tpublic void test034()", "diff": ["-\t\t\t\"     2  istore_1\\n\" + ", "-\t\t\t\"     3  iload_1\\n\" + ", "+\t\t\t\"     2  istore_1 [i]\\n\" + ", "+\t\t\t\"     3  iload_1 [i]\\n\" + ", "-\t\t\t\"     9  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"    12  iload_1\\n\" + ", "-\t\t\t\"    13  invokevirtual #27 <Method java/io/PrintStream.println(I)V>\\n\" + ", "+\t\t\t\"     9  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"    12  iload_1 [i]\\n\" + ", "+\t\t\t\"    13  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4f00088ed39c4d3e2b8c340b19f5211", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavadocTextCompletionModelTest.java", "commitBeforeChange": "b90d03d10edcf027d98e7722223f9b745793a6bb", "commitAfterChange": "e353428f475e976a008afa67ff7f1e16e03ec95c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void test005() throws JavaModelException", "signatureAfterChange": "  public void test005() throws JavaModelException", "diff": ["-\t\t\"link[JAVADOC_INLINE_TAG]{{@link }, null, null, link, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"docRoot[JAVADOC_INLINE_TAG]{{@docRoot }, null, null, docRoot, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"inheritDoc[JAVADOC_INLINE_TAG]{{@inheritDoc }, null, null, inheritDoc, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"linkplain[JAVADOC_INLINE_TAG]{{@linkplain }, null, null, linkplain, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "-\t\t\"value[JAVADOC_INLINE_TAG]{{@value }, null, null, value, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\"", "+\t\t\"link[JAVADOC_INLINE_TAG]{{@link}, null, null, link, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "+\t\t\"docRoot[JAVADOC_INLINE_TAG]{{@docRoot}, null, null, docRoot, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "+\t\t\"inheritDoc[JAVADOC_INLINE_TAG]{{@inheritDoc}, null, null, inheritDoc, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "+\t\t\"linkplain[JAVADOC_INLINE_TAG]{{@linkplain}, null, null, linkplain, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\\n\" + ", "+\t\t\"value[JAVADOC_INLINE_TAG]{{@value}, null, null, value, null, \"+this.positions+JAVADOC_RELEVANCE+\"}\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e91e5704c1ca3c362ec6da1ac291dcf9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "9b0b9be20fe15cfaaf5f2085fd6c89bedb4ddb87", "commitAfterChange": "fa0e82d308d3296777700187006d45ae091ad828", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 134, "signatureBeforeChange": " public void testCompletionInstanceofOperator1() throws JavaModelException", "signatureAfterChange": " public void testCompletionInstanceofOperator1() throws JavaModelException", "diff": ["-\t\tString completeBehind = \"x instanceof ZZZCompletionInstanceof\";", "+\t\tString completeBehind = \"x instanceof WWWCompletionInstanceof\";", "-\t\t\t\"element:ZZZCompletionInstanceof1    completion:ZZZCompletionInstanceof1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXPECTED_TYPE)+\"\\n\" +", "-\t\t\t\"element:ZZZCompletionInstanceof2    completion:ZZZCompletionInstanceof2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXACT_EXPECTED_TYPE)+\"\\n\" +", "-\t\t\t\"element:ZZZCompletionInstanceof3    completion:ZZZCompletionInstanceof3    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXPECTED_TYPE)+\"\\n\" +", "-\t\t\t\"element:ZZZCompletionInstanceof4    completion:ZZZCompletionInstanceof4    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),", "+\t\t\t\"element:WWWCompletionInstanceof1    completion:WWWCompletionInstanceof1    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXPECTED_TYPE)+\"\\n\" +", "+\t\t\t\"element:WWWCompletionInstanceof2    completion:WWWCompletionInstanceof2    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXACT_EXPECTED_TYPE)+\"\\n\" +", "+\t\t\t\"element:WWWCompletionInstanceof3    completion:WWWCompletionInstanceof3    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_EXPECTED_TYPE)+\"\\n\" +", "+\t\t\t\"element:WWWCompletionInstanceof4    completion:WWWCompletionInstanceof4    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9c4db54b39bb454c939d20226cf355f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "eaa3dc329700f9b17c5ba178d826ab61f47e8466", "commitAfterChange": "1534c3fb9312be746c807d9f0aa370d7a2598284", "methodNumberBeforeChange": 830, "methodNumberAfterChange": 830, "signatureBeforeChange": " public void test0809()", "signatureAfterChange": " public void test0809()", "diff": ["-\t\t\"1. WARNING in X.java (at line 22)\\n\" +", "+\t\t\"1. WARNING in X.java (at line 23)\\n\" +", "-\t\t\"2. ERROR in X.java (at line 23)\\n\" +", "+\t\t\"2. ERROR in X.java (at line 24)\\n\" +", "-\t\t\"3. ERROR in X.java (at line 26)\\n\" +", "+\t\t\"3. ERROR in X.java (at line 27)\\n\" +", "-\t\t\"4. WARNING in X.java (at line 36)\\n\" +", "+\t\t\"4. WARNING in X.java (at line 37)\\n\" +", "-\t\t\"5. ERROR in X.java (at line 39)\\n\" +", "+\t\t\"5. ERROR in X.java (at line 40)\\n\" +"]}], "num": 54977}