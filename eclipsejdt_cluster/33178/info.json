{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eecf6087633371ab58b96ee1d004567a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5aa3f436d697493dfe1c4e59a45c6cc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "dc82ed373b675aa38d1bde68b062faa0d442c79e", "commitAfterChange": "64d407c3842574a4737f2282e8c1c92e6622ad03", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tprivate void checkAndSetModifiers()", "signatureAfterChange": " \t \tprivate void checkAndSetModifiers()", "diff": ["-\t\t\t\tif ((realModifiers & UNEXPECTED_MODIFIERS) != 0)", "+\t\t\t\tif ((realModifiers & UNEXPECTED_MODIFIERS) != 0) {", "+\t\t\t\t\tmodifiers &= ~ClassFileConstants.AccAbstract; // avoid leaking abstract modifier", "+\t\t\t\t\trealModifiers &= ~ClassFileConstants.AccAbstract;", "+//\t\t\t\t\tmodifiers &= ~(realModifiers & UNEXPECTED_MODIFIERS);", "+//\t\t\t\t\trealModifiers = modifiers & ExtraCompilerModifiers.AccJustFlag;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90902f1bd3092e3f8db22013909c1678", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "fa4cf904b1d5690e02fc0246dbc8bc14a58e5d04", "commitAfterChange": "4ddddb5424dafb4b8650d4349863e03fece6ac06", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate void decodeModifiers(StringBuffer buffer, int accessFlags, boolean printDefault, boolean asBridge, int[] checkBits)", "signatureAfterChange": "  \tprivate void decodeModifiers(StringBuffer buffer, int accessFlags, boolean printDefault, boolean asBridge, int[] checkBits)", "diff": ["+\t\t\t\tcase IModifierConstants.ACC_SYNTHETIC :", "+\t\t\t\t\tfirstModifier = appendModifier(buffer, accessFlags, IModifierConstants.ACC_SYNTHETIC, \"synthetic\", firstModifier); //$NON-NLS-1$", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase IModifierConstants.ACC_MANDATED :", "+\t\t\t\t\tfirstModifier = appendModifier(buffer, accessFlags, IModifierConstants.ACC_MANDATED, \"mandated\", firstModifier); //$NON-NLS-1$", "+\t\t\t\t\tbreak;"]}], "num": 33178}