{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "67bef70f58d8c3263c21bb9c0ff059f8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1455ecfd76f7120c2865f10749ec0f9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "66739287b2d3a0b24738cbe127f6734b4a52ead5", "commitAfterChange": "d667556b472b549dae598b16fc5bd74e43e73666", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic int generateMethodInfoAttribute(MethodBinding methodBinding)", "signatureAfterChange": " \tpublic int generateMethodInfoAttribute(MethodBinding methodBinding)", "diff": ["-\t\t// Deprecated attribute", "-\t\t// Check that there is enough space to write the deprecated attribute", "-\t\tif (contentsOffset + 6 >= (contentsLength = contents.length)) {", "-\t\t    // TODO (olivier) why isn't space check inside the condition #isDeprecated ?", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "-\t\t}", "+\t\t\t// Deprecated attribute", "+\t\t\t// Check that there is enough space to write the deprecated attribute", "+\t\t\tif (contentsOffset + 6 >= (contentsLength = contents.length)) {", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tcontents,", "+\t\t\t\t\t0,", "+\t\t\t\t\t(contents = new byte[contentsLength + INCREMENT_SIZE]),", "+\t\t\t\t\t0,", "+\t\t\t\t\tcontentsLength);", "+\t\t\t}", "-\t\t// Synthetic attribute", "-\t\t// Check that there is enough space to write the deprecated attribute", "-\t\tif (contentsOffset + 6 >= (contentsLength = contents.length)) {", "-\t\t    // TODO (olivier) why isn't space check inside the condition #isSynthetic ?", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tcontents,", "-\t\t\t\t0,", "-\t\t\t\t(contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t0,", "-\t\t\t\tcontentsLength);", "-\t\t}", "+\t\t\t// Synthetic attribute", "+\t\t\t// Check that there is enough space to write the deprecated attribute", "+\t\t\tif (contentsOffset + 6 >= (contentsLength = contents.length)) {", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tcontents,", "+\t\t\t\t\t0,", "+\t\t\t\t\t(contents = new byte[contentsLength + INCREMENT_SIZE]),", "+\t\t\t\t\t0,", "+\t\t\t\t\tcontentsLength);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8922df171c1f4c33c4b7eeff852303a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "a05a975af5c0bba95d0d398d2bd3a368d9cd616f", "commitAfterChange": "3a562aaf09f9f323b583086b80b4683378886606", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic int generateMethodInfoAttribute(MethodBinding methodBinding)", "signatureAfterChange": " \tpublic int generateMethodInfoAttribute(MethodBinding methodBinding)", "diff": ["-\t\tint contentsLength;", "-\t\t\tif (contentsOffset + (8 + length * 2) >= (contentsLength = contents.length)) {", "-\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\tcontents,", "-\t\t\t\t\t0,", "-\t\t\t\t\t(contents =", "-\t\t\t\t\t\tnew byte[contentsLength + Math.max(INCREMENT_SIZE, (8 + length * 2))]),", "-\t\t\t\t\t0,", "-\t\t\t\t\tcontentsLength);", "+\t\t\tif (contentsOffset + (8 + length * 2) >= this.contents.length) {", "+\t\t\t\tresizePoolContents(8 + length * 2);", "-\t\t\tif (contentsOffset + 6 >= (contentsLength = contents.length)) {", "-\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\tcontents,", "-\t\t\t\t\t0,", "-\t\t\t\t\t(contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t0,", "-\t\t\t\t\tcontentsLength);", "+\t\t\tif (contentsOffset + 6 >= this.contents.length) {", "+\t\t\t\tresizePoolContents(6);", "-\t\t\tif (contentsOffset + 6 >= (contentsLength = contents.length)) {", "-\t\t\t\tSystem.arraycopy(", "-\t\t\t\t\tcontents,", "-\t\t\t\t\t0,", "-\t\t\t\t\t(contents = new byte[contentsLength + INCREMENT_SIZE]),", "-\t\t\t\t\t0,", "-\t\t\t\t\tcontentsLength);", "+\t\t\tif (contentsOffset + 6 >= this.contents.length) {", "+\t\t\t\tresizePoolContents(6);"]}], "num": 60063}