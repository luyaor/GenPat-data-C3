{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43fc9cef10b4316d72e5af8b0f2fa414", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35f76c8cefebe321a8ca68b11651efdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "f8e9cc8d760d40e7aca97ebb627c5ab02392d804", "commitAfterChange": "78ca28be54dd37f4936afd7f9f84bc9cf69d2754", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \t\tpublic void setLog(String logFileName) throws InvalidInputException", "signatureAfterChange": "  \t\tpublic void setLog(String logFileName) throws InvalidInputException", "diff": ["-\t\t\t\t\t\tparameters.clear();", "-\t\t\t\t\t\tparameters.put(COMPILER_NAME, Main.bind(\"compiler.name\")); //$NON-NLS-1$", "-\t\t\t\t\t\tparameters.put(COMPILER_VERSION, Main.bind(\"compiler.version\")); //$NON-NLS-1$", "-\t\t\t\t\t\tparameters.put(COMPILER_COPYRIGHT, Main.bind(\"compiler.copyright\")); //$NON-NLS-1$", "-\t\t\t\t\t\tthis.printTag(COMPILER, parameters, true, false);", "+\t\t\t\t\t\tthis.parameters.clear();", "+\t\t\t\t\t\tthis.parameters.put(COMPILER_NAME, Main.bind(\"compiler.name\")); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.parameters.put(COMPILER_VERSION, Main.bind(\"compiler.version\")); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.parameters.put(COMPILER_COPYRIGHT, Main.bind(\"compiler.copyright\")); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.printTag(COMPILER, this.parameters, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6619272e2f7f6f58e4ad135513d31dfa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "302df05b099c1ea06faca0b00f806513c7db6904", "commitAfterChange": "c661afbb38268ca6f18a772df813f6c69bb9e17c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": " public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\tif (this.codegenBinding.canBeSeenBy(receiverType, this, currentScope)) {", "-\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "+\tif (this.codegenBinding.canBeSeenBy(this.receiverType, this, currentScope)) {", "+\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "-\t\tcodeStream.generateConstant(postIncrement.expression.constant, implicitConversion);", "+\t\tcodeStream.generateConstant(postIncrement.expression.constant, this.implicitConversion);", "-\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "+\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "-\t\tcodeStream.generateConstant(postIncrement.expression.constant, implicitConversion);", "+\t\tcodeStream.generateConstant(postIncrement.expression.constant, this.implicitConversion);"]}], "num": 63144}