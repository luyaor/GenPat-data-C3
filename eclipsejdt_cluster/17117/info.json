{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f87ee0c262874ef9c8ec03ca1a90b48a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b47e3d6a882c70f4fe181413fbcdb76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic ICompilationUnit getWorkingCopy(String fileName, String source) throws JavaModelException", "signatureAfterChange": " \tpublic ICompilationUnit getWorkingCopy(String fileName, String source) throws JavaModelException", "diff": ["+\t\tIPath folder = new Path(fileName).removeLastSegments(1);", "-\t\t\tcreateFolder(new Path(fileName).removeLastSegments(1));", "+\t\t\tcreateFolder(folder);", "-\t\treturn super.getWorkingCopy(fileName, source, true/*compute problems*/);", "+\t\tICompilationUnit workingCopy = super.getWorkingCopy(fileName, source, true/*compute problems*/);", "+\t\tworkingCopy.commitWorkingCopy(true, null);\t// need to commit to index file", "+\t\treturn workingCopy;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f84d3f2cdefb6bbc420753456afdbe3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchParticipant.java", "commitBeforeChange": "70b780777178f4dd831373dfdb6a82dc7d72da2c", "commitAfterChange": "52fd80fda11aa80700968fe6bc7615e538e4f584", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic final void scheduleDocumentIndexing(SearchDocument document, IPath indexLocation)", "signatureAfterChange": " \tpublic final void scheduleDocumentIndexing(SearchDocument document, IPath indexLocation)", "diff": ["-\t\tJavaModelManager.getJavaModelManager().getIndexManager().scheduleDocumentIndexing(document, containerPath, indexLocation.toOSString(), this);", "+\t\tIndexManager manager = JavaModelManager.getJavaModelManager().getIndexManager();", "+\t\tString osIndexLocation = indexLocation.toOSString();", "+\t\t// TODO (jerome) should not have to create index manually, should expose API that recreates index instead", "+\t\tmanager.ensureIndexExists(osIndexLocation, containerPath);", "+\t\tmanager.scheduleDocumentIndexing(document, containerPath, osIndexLocation, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbef5872014607bbb9138162f5bd3eb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ae391996f2ba5153face2dc96f44fbe25cc6cfcf", "commitAfterChange": "bd2d6cba91ea60af9a4818216d0ebbc8f0ef4bb2", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite, boolean inStaticContext)", "signatureAfterChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite, boolean inStaticContext)", "diff": ["-\t\t\t\t\t\t\tif (verifier.isParameterSubsignature(matchingMethod.original(), currentMethod.original())) {", "+\t\t\t\t\t\t\tMethodBinding matchingOriginal = matchingMethod.original();", "+\t\t\t\t\t\t\tMethodBinding currentOriginal = matchingOriginal.findOriginalInheritedMethod(currentMethod);", "+\t\t\t\t\t\t\tif (currentOriginal != null && verifier.isParameterSubsignature(matchingOriginal, currentOriginal)) {"]}], "num": 17117}