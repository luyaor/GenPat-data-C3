{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6d0d79f5ab70e532f2a42249f0d3014", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebe9c33c58027c763085a3f43c48a6bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "40ad9904e939ba54abece52421044021edd6e1c0", "commitAfterChange": "8d45cb26fc5ad244f93e8632d761d46ad4a120cf", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate boolean connectSuperclass()", "signatureAfterChange": " \tprivate boolean connectSuperclass()", "diff": ["-\t\t\t\tsourceType.typeBits |= superclass.typeBits;", "+\t\t\t\tsourceType.typeBits |= (superclass.typeBits & TypeIds.InheritableBits);", "+\t\t\t\t// further analysis against white lists for the unlikely case we are compiling java.io.*:", "+\t\t\t\tif ((sourceType.typeBits & (TypeIds.BitAutoCloseable|TypeIds.BitCloseable)) != 0)", "+\t\t\t\t\tsourceType.typeBits |= sourceType.applyCloseableWhitelists();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f49b6a1913adc2739d18efb886a6f8d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "8cb3365a924e5869d5c8a5715a80d4cd8189b243", "commitAfterChange": "4ec04ec7ec987de2e86c2ac8cdacbf6a8acd72a4", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic ReferenceBinding superclass()", "signatureAfterChange": " \tpublic ReferenceBinding superclass()", "diff": ["+\t\t\tthis.typeBits |= (this.superclass.typeBits & TypeIds.InheritableBits);", "+\t\t\tif ((this.typeBits & (TypeIds.BitAutoCloseable|TypeIds.BitCloseable)) != 0) // avoid the side-effects of hasTypeBit()! ", "+\t\t\t\tthis.typeBits |= applyCloseableClassWhitelists();"]}], "num": 12460}