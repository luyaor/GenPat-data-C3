{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a2f929d59856e4d88c1d78dd9006a74", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d41e97da2a089c1f942ed743fc27ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/core/compiler/CharOperation.java", "commitBeforeChange": "059424facf2daa3b3bdf94b9d6b6a2ca427f043f", "commitAfterChange": "4b5062599ea5f6d5d2aaa7c7068d9e4017337374", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic static final boolean pathMatch( \t\tchar[] pattern, \t\tchar[] filepath, \t\tboolean isCaseSensitive, \t\tchar pathSeparator)", "signatureAfterChange": " \tpublic static final boolean pathMatch( \t\tchar[] pattern, \t\tchar[] filepath, \t\tboolean isCaseSensitive, \t\tchar pathSeparator)", "diff": ["-\t\t// special case: pattern foo is equivalent to **\\foo (not absolute)", "-\t\tboolean freeLeadingDoubleStar= pattern[0] != pathSeparator;", "-", "-\t\tint pSegmentStart, pLength = pattern.length;", "-", "-\t\tif (freeLeadingDoubleStar){", "-\t\t\tpSegmentStart = 0;", "-\t\t} else {", "-\t\t\tpSegmentStart = 1;", "-\t\t}", "+\t\tint pSegmentStart = pattern[0] == pathSeparator ? 1 : 0;", "+\t\tint pLength = pattern.length;", "-\t\t\t&& !freeLeadingDoubleStar"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b031a2d7d03f98ad824eb8461d048f90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/CharOperation.java", "commitBeforeChange": "f97b24f3f8e94d8f54a74d9a196551c56851e735", "commitAfterChange": "edd951b2efc6b8f7b24cb3f178fd99c174eb6c7a", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public static final boolean pathMatch(char[] pattern, char[] filepath, boolean isCaseSensitive, char pathSeparator)", "signatureAfterChange": " public static final boolean pathMatch(char[] pattern, char[] filepath, boolean isCaseSensitive, char pathSeparator)", "diff": ["-\tboolean freePrefixDoubleStar = pattern[0] != pathSeparator;", "+\tboolean freeLeadingDoubleStar = pattern[0] != pathSeparator;", "-\tboolean freeSuffixDoubleStar = pattern[pLength-1] == pathSeparator;", "+\tboolean freeTrailingDoubleStar = pattern[pLength-1] == pathSeparator;", "-\t\t\t\t&& !freePrefixDoubleStar", "+\t\t\t\t&& !freeLeadingDoubleStar", "-\t\t\t\t|| (pSegmentStart == pLength &&  freeSuffixDoubleStar); ", "+\t\t\t\t|| (pSegmentStart == pLength &&  freeTrailingDoubleStar); "]}], "num": 4737}