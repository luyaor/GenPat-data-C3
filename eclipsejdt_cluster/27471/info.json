{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e905ecd02084ee785921ac0a1a1898c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f516b286249ebd53b7fddbcdbc78c854", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "commitAfterChange": "de8aa9940086fe152901aa168536f30670945804", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void disassemble(IAnnotationComponent annotationComponent, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": "  \tprivate void disassemble(IExtendedAnnotation extendedAnnotation, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["+\tprivate void disassemble(IExtendedAnnotation extendedAnnotation, StringBuffer buffer, String lineSeparator, int tabNumber, int mode) {", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\tfinal int typeIndex = extendedAnnotation.getTypeIndex();", "+\t\tfinal char[] typeName = CharOperation.replaceOnCopy(extendedAnnotation.getTypeName(), '/', '.');", "+\t\tbuffer.append(", "+\t\t\tMessages.bind(Messages.disassembler_extendedannotationentrystart, new String[] {", "+\t\t\t\tInteger.toString(typeIndex),", "+\t\t\t\tnew String(returnClassName(Signature.toCharArray(typeName), '.', mode))", "+\t\t\t}));", "+\t\tfinal IAnnotationComponent[] components = extendedAnnotation.getComponents();", "+\t\tfor (int i = 0, max = components.length; i < max; i++) {", "+\t\t\tdisassemble(components[i], buffer, lineSeparator, tabNumber + 1, mode);", "+\t\t}", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\tint targetType = extendedAnnotation.getTargetType();", "+\t\tbuffer.append(", "+\t\t\t\tMessages.bind(Messages.disassembler_extendedannotation_targetType, new String[] {", "+\t\t\t\t\tInteger.toHexString(targetType),", "+\t\t\t\t\tgetTargetType(targetType),", "+\t\t\t\t}));", "+\t\tswitch(targetType) {", "+\t\t\tcase IExtendedAnnotationConstants.METHOD_RECEIVER :", "+\t\t\tcase IExtendedAnnotationConstants.METHOD_RETURN_TYPE :", "+\t\t\tcase IExtendedAnnotationConstants.FIELD :", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t}", "+\t\t", "+\t\tswitch(targetType) {", "+\t\t\tcase IExtendedAnnotationConstants.WILDCARD_BOUND :", "+\t\t\t\tint wildcardLocationType = extendedAnnotation.getWildcardLocationType();", "+\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_extendedannotation_wildcardlocationtype, new String[] {", "+\t\t\t\t\t\t\tInteger.toString(wildcardLocationType),", "+\t\t\t\t\t\t\tgetTargetType(wildcardLocationType),", "+\t\t\t\t\t\t}));", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 3);", "+\t\t\t\tdisassembleTargetTypeContents(true, wildcardLocationType, extendedAnnotation, buffer, lineSeparator, tabNumber + 3, mode);", "+\t\t\t\tbreak;", "+\t\t\tcase IExtendedAnnotationConstants.WILDCARD_BOUND_GENERIC_OR_ARRAY :", "+\t\t\t\twildcardLocationType = extendedAnnotation.getWildcardLocationType();", "+\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_extendedannotation_wildcardlocationtype, new String[] {", "+\t\t\t\t\t\t\tInteger.toString(wildcardLocationType),", "+\t\t\t\t\t\t\tgetTargetType(wildcardLocationType),", "+\t\t\t\t\t\t}));", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 3);", "+\t\t\t\tdisassembleTargetTypeContents(true, wildcardLocationType, extendedAnnotation, buffer, lineSeparator, tabNumber + 3, mode);", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\t\tbuffer.append(", "+\t\t\t\t\t\tMessages.bind(Messages.disassembler_extendedannotation_locations, new String[] {", "+\t\t\t\t\t\t\ttoString(extendedAnnotation.getLocations()),", "+\t\t\t\t\t\t}));", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tdisassembleTargetTypeContents(false, targetType, extendedAnnotation, buffer, lineSeparator, tabNumber, mode);", "+\t\t}", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\tbuffer.append(Messages.disassembler_extendedannotationentryend);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5f894659e989eada44960783b1caf5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void disassemble(IExtendedAnnotation extendedAnnotation, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \t \tprivate void disassemble(IExtendedAnnotation extendedAnnotation, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-", "+\t", "-\t\t\tcase IExtendedAnnotationConstants.METHOD_RETURN_TYPE :", "+\t\t\tcase IExtendedAnnotationConstants.METHOD_RETURN:", "-\t\t}", "-\t\t", "-\t\tswitch(targetType) {", "-\t\t\tcase IExtendedAnnotationConstants.WILDCARD_BOUND :", "-\t\t\t\tint wildcardLocationType = extendedAnnotation.getWildcardLocationType();", "-\t\t\t\tbuffer.append(", "-\t\t\t\t\t\tMessages.bind(Messages.disassembler_extendedannotation_wildcardlocationtype, new String[] {", "-\t\t\t\t\t\t\tInteger.toString(wildcardLocationType),", "-\t\t\t\t\t\t\tgetTargetType(wildcardLocationType),", "-\t\t\t\t\t\t}));", "-\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 3);", "-\t\t\t\tdisassembleTargetTypeContents(true, wildcardLocationType, extendedAnnotation, buffer, lineSeparator, tabNumber + 3, mode);", "-\t\t\t\tbreak;", "-\t\t\tcase IExtendedAnnotationConstants.WILDCARD_BOUND_GENERIC_OR_ARRAY :", "-\t\t\t\twildcardLocationType = extendedAnnotation.getWildcardLocationType();", "-\t\t\t\tbuffer.append(", "-\t\t\t\t\t\tMessages.bind(Messages.disassembler_extendedannotation_wildcardlocationtype, new String[] {", "-\t\t\t\t\t\t\tInteger.toString(wildcardLocationType),", "-\t\t\t\t\t\t\tgetTargetType(wildcardLocationType),", "-\t\t\t\t\t\t}));", "-\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 3);", "-\t\t\t\tdisassembleTargetTypeContents(true, wildcardLocationType, extendedAnnotation, buffer, lineSeparator, tabNumber + 3, mode);", "-\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "-\t\t\t\tbuffer.append(", "-\t\t\t\t\t\tMessages.bind(Messages.disassembler_extendedannotation_locations, new String[] {", "-\t\t\t\t\t\t\ttoString(extendedAnnotation.getLocations()),", "-\t\t\t\t\t\t}));", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "+\t\tdisassembleTypePathContents(targetType, extendedAnnotation, buffer, lineSeparator, tabNumber, mode);"]}], "num": 27471}