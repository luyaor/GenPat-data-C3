{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69bbfa263d722212a51ef9f136be7d61", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7281e96db29a07f35739ea8c2e7a581d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "b443266efad90a821512122003393c3e0df31fae", "commitAfterChange": "dc882d5765f5ebe6ddd0fd95b556bea362bb123f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, String specificOutputLocation)", "signatureAfterChange": " \tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, IPath[] exclusionPatterns, String specificOutputLocation)", "diff": ["-\tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, String specificOutputLocation) {", "+\tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, IPath[] exclusionPatterns, String specificOutputLocation) {", "-\t\tIClasspathEntry entry = JavaCore.newSourceEntry(path, new Path[0], outputPath);", "+\t\tIClasspathEntry entry = JavaCore.newSourceEntry(path, exclusionPatterns == null ? new Path[0] : exclusionPatterns, outputPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "932702f522bf68d4fa7627023b3e3244", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "57a5b48f21667b49d69da15f48898dd1388574d1", "commitAfterChange": "d0c710b350470279ed477deeb2dc35e8e7c8e9c9", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprivate char[] readSource(ZipEntry entry, ZipFile zip)", "signatureAfterChange": " \tprivate char[] readSource(ZipEntry entry, ZipFile zip, String charSet)", "diff": ["-\tprivate char[] readSource(ZipEntry entry, ZipFile zip) {", "+\tprivate char[] readSource(ZipEntry entry, ZipFile zip, String charSet) {", "-\t\t\t\treturn Util.bytesToChar(bytes, this.encoding);", "+\t\t\t\treturn Util.bytesToChar(bytes, charSet == null ? this.encoding : charSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1dc02575f15a4793446577bf72b5966", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/MultiCatchExceptionLabel.java", "commitBeforeChange": "ddff8dde894947390c9a90bd347a6ae6239b2112", "commitAfterChange": "e1bb62a6f97249ff77a2f0164d289109644f1d09", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void initialize(UnionTypeReference typeReference)", "signatureAfterChange": " \t \tpublic void initialize(UnionTypeReference typeReference, Annotation [] annotations)", "diff": ["-\tpublic void initialize(UnionTypeReference typeReference) {", "+\tpublic void initialize(UnionTypeReference typeReference, Annotation [] annotations) {", "-\t\t\tthis.exceptionLabels[i] = new ExceptionLabel(this.codeStream, typeReferences[i].resolvedType, typeReferences[i]);", "+\t\t\tthis.exceptionLabels[i] = new ExceptionLabel(this.codeStream, typeReferences[i].resolvedType, typeReferences[i], i == 0 ? annotations : null);"]}], "num": 64716}