{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cd2fec721a274bb039a9fdb01264c78f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83ec905ae5a679bb01190cc17a5ee6d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "commitAfterChange": "7b084156620c5c922d11b27bd8e1266a04bb9736", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\t// compare actual null-status against parameter annotations of the called method:", "-\t\t\tint nullStatus = this.arguments[i].nullStatus(flowInfo);", "-\t\t\tif (nullStatus != FlowInfo.NON_NULL ", "-\t\t\t\t\t&& this.binding.parameterNonNullness != null", "-\t\t\t\t\t&& this.binding.parameterNonNullness[i].booleanValue()) // if @NonNull is required", "-\t\t\t{", "-\t\t\t\tchar[][] annotationName = currentScope.environment().globalOptions.nonNullAnnotationName;", "-\t\t\t\tcurrentScope.problemReporter().possiblyNullToNonNullParameter(this.arguments[i], nullStatus, annotationName[annotationName.length-1]);", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e5b21b7f1c6c5dc2e82d140c22d4617", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "cae9ac3f3bd4524b89151e8f2c6e6070f18aac7e", "commitAfterChange": "f3a9a35ca8efb18af02ecb3e66babcf087ffbe69", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\t\t\t/* Disabled bug 70827 fix as too much time consuming", "+\t\t\t*/"]}], "num": 58747}