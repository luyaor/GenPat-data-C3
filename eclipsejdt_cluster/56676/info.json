{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d381e4382c265292f039d139666f6313", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08a7a095e7e42f60ca8952906841d5ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a53e0f6f60b988e927d553381431ae6a40286252", "commitAfterChange": "2d9b05bb71b127652760933dafce873a5ec0cb28", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\tMethodBinding first = methods[0];", "-\tint index = length;", "-\twhile (--index > 0 && areReturnTypesEqual(first, methods[index])){/*empty*/}", "-\tif (index > 0) {  // All inherited methods do NOT have the same vmSignature", "-\t\tif (this.type.isInterface())", "-\t\t\tfor (int i = length; --i >= 0;)", "-\t\t\t\tif (methods[i].declaringClass.id == TypeIds.T_JavaLangObject)", "-\t\t\t\t\treturn; // do not complain since the super interface already got blamed", "-\t\tproblemReporter().inheritedMethodsHaveIncompatibleReturnTypes(this.type, methods, length);", "+\tif (!checkInheritedReturnTypes(methods, length))", "-\t}", "-\tindex = 0;", "+\tint index = 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fec66f5586536cd2da0bf32c69abefbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "8022992d2babd233cd628feec0fce3d9f7562016", "commitAfterChange": "6bea0f6636d15fbdebc7403f71192f16cc7a0c9c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkTypeVariableMethods()", "signatureAfterChange": " void checkTypeVariableMethods()", "diff": ["-\t\t\tif (index > 0)", "-\t\t\t\tcheckInheritedMethods(matchingInherited, index + 1); // pass in the length of matching", "+\t\t\tif (index > 0) {", "+\t\t\t\tMethodBinding first = matchingInherited[0];", "+\t\t\t\tint count = index + 1;", "+\t\t\t\twhile (--count > 0 && areReturnTypesEqual(first, matchingInherited[count])){/*empty*/}", "+\t\t\t\tif (count > 0) {  // All inherited methods do NOT have the same vmSignature", "+\t\t\t\t\tproblemReporter().inheritedMethodsHaveIncompatibleReturnTypes(this.type, matchingInherited, index + 1);", "+\t\t\t\t\tcontinue nextSelector;", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 56676}