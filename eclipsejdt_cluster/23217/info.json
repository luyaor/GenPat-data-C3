{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6dc6064a3d9b4984634d8a605e24484", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "490e4debe4cf5fdeb4f62f46644ce8f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "86c239f2e66a4d986257b0e0acb4d18b2648df10", "commitAfterChange": "0660c8d5b36b733c21ef1069dd1616322b9b5c53", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected IType createTypeHandle(char[] simpleTypeName)", "signatureAfterChange": " protected IType createTypeHandle(char[] simpleTypeName)", "diff": ["-\ttry {", "-\t\t// ensure this is a top level type (see bug 20011  Searching for Inner Classes gives bad search results)", "-\t\treturn getTopLevelType(((ClassFile) currentOpenable).getType());", "-\t} catch (JavaModelException e) {", "-\t\treturn null;", "-\t}", "+\t// ensure this is a top level type (see bug 20011  Searching for Inner Classes gives bad search results)", "+\treturn getTopLevelType(((ClassFile) currentOpenable).getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee45cb8c618247ba36d5a5668019e019", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "eb10ec59bc98c7f83476bce7202c39d197cae0df", "commitAfterChange": "f7fbe1c2009ea9c5d97d4fd12e8279412bfffc23", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tpublic IType createTypeHandle(char[] simpleTypeName)", "signatureAfterChange": "\r \tpublic IType createTypeHandle(char[] simpleTypeName)", "diff": ["+\t\t\tIType type; \r", "-\t\t\t\treturn ((org.eclipse.jdt.internal.core.ClassFile)currentOpenable).getType();\r", "+\t\t\t\ttype = ((org.eclipse.jdt.internal.core.ClassFile)currentOpenable).getType();\r", "+\t\t\t// ensure this is a top level type (see bug 20011  Searching for Inner Classes gives bad search results)\r", "+\t\t\tIType declaringType = type.getDeclaringType();\r", "+\t\t\twhile (declaringType != null) {\r", "+\t\t\t\ttype = declaringType;\r", "+\t\t\t\tdeclaringType = type.getDeclaringType();\r", "+\t\t\t}\r", "+\t\t\treturn type;\r"]}], "num": 23217}