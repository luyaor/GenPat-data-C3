{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9dc5d75b2d8395acbf4b8f8f9d205045", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cc719944b1522e0992cd34d45e5363d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "9951b7a54ba18cc36a88513505c20a6b6559265f", "commitAfterChange": "37e893fac6e74361f92234e78fe4ff338a9de8c2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \tpublic void computePackageFragmentRoots(\r \t\tObjectVector accumulatedRoots, \r \t\tObjectSet visitedProjects, \r \t\tboolean insideOriginalProject,\r \t\tboolean checkExistency,\r \t\tboolean computeBuilderRoots)", "signatureAfterChange": "\r \tpublic void computePackageFragmentRoots(\r \t\tObjectVector accumulatedRoots, \r \t\tObjectSet rootIDs, \r \t\tboolean insideOriginalProject,\r \t\tboolean checkExistency,\r \t\tboolean computeBuilderRoots)", "diff": ["-\t\tObjectSet visitedProjects, \r", "+\t\tObjectSet rootIDs, \r", "-\t\t\r", "-\t\tif (visitedProjects.contains(this)) return;\r", "-\t\tvisitedProjects.add(this);\r", "-\t\t\r", "+\r", "+\t\tif (insideOriginalProject){\r", "+\t\t\trootIDs.add(rootID());\r", "+\t\t}\t\r", "-\t\t\t\t\tvisitedProjects,\r", "+\t\t\t\t\trootIDs,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f2db632e40e290b204aa070f036f784", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "40a6830e5d047359c5255f8a6387f3c89500c57a", "commitAfterChange": "0a14997b28c3a3bedf1328eae8dea74c42621edc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet rootIDs, \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "signatureAfterChange": "\t\t\t \tprivate void computeExpandedClasspath( \t\tJavaProject initialProject,  \t\tboolean ignoreUnresolvedVariable, \t\tboolean generateMarkerOnError, \t\tHashSet rootIDs, \t\tObjectVector accumulatedEntries, \t\tMap preferredClasspaths, \t\tMap preferredOutputs) throws JavaModelException", "diff": ["-\t\tif (rootIDs.contains(this)){", "+\t\tString projectRootId = this.rootID();", "+\t\tif (rootIDs.contains(projectRootId)){", "-\t\trootIDs.add(this);", "+\t\trootIDs.add(projectRootId);", "-\t\t\t\trootIDs.add(rootID);", "+\t\t\t\trootIDs.add(rootID);"]}], "num": 61803}