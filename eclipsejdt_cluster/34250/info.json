{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81012c0d1573954e7e6f2f612cf90e03", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db026583450ed61e7f6106e201fd378", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ebce33160782a7ccea09c2470ab996fbaa0bcfe9", "commitAfterChange": "9cb2a494fe1e21879b04a456ce6a7676566f2732", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\t\t\telse", "-\t\t\t\t\t\t\t\t\t// make the user qualify the type, likely wants the first inherited type", "-\t\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\t\t// make the user qualify the type, likely wants the first inherited type", "+\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae802d15113a81924eb9d3476a627847", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "7499dd3309f66badc0b9a54f55f1bb48d32b67b2", "commitAfterChange": "7fcce8c57c783f249352148215037cdd2cb340b1", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "signatureAfterChange": " \tfinal Binding getTypeOrPackage(char[] name, int mask)", "diff": ["-\t\t\t\t\t\tif (CharOperation.equals(sourceType.sourceName, name)) {", "-\t\t\t\t\t\t\tif (foundType != null && foundType != sourceType)", "-\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);", "-\t\t\t\t\t\t\treturn sourceType;", "-\t\t\t\t\t\t}", "-", "+\t\t\t\t\t\t// 6.5.5.1 - simple name favors member type over top-level type in same unit", "+\t\t\t\t\t\tif (CharOperation.equals(sourceType.sourceName, name)) {", "+\t\t\t\t\t\t\tif (foundType != null && foundType != sourceType)", "+\t\t\t\t\t\t\t\treturn new ProblemReferenceBinding(name, InheritedNameHidesEnclosingName);", "+\t\t\t\t\t\t\treturn sourceType;", "+\t\t\t\t\t\t}"]}], "num": 34250}