{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f1b86c2ca4bd74e03237129f7079885", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "398a21c23535d8c2df4ca77e1e3e928d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "91cab663afb499abc33d6e434c4eaeb82aebffd5", "commitAfterChange": "316ebf3c8778d533770eaa12593a9b983e065138", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tif (this.arguments != null) {", "-\t\t\t\tfor (int i = 0, count = this.arguments.length; i < count; i++) {", "-\t\t\t\t\t// if this method uses a type parameter declared by the declaring class,", "-\t\t\t\t\t// it can't be static. https://bugs.eclipse.org/bugs/show_bug.cgi?id=318682", "-\t\t\t\t\tif (this.arguments[i].binding != null && (this.arguments[i].binding.type instanceof TypeVariableBinding)) {", "-\t\t\t\t\t\tBinding declaringElement = ((TypeVariableBinding)this.arguments[i].binding.type).declaringElement;", "-\t\t\t\t\t\tif (this.binding != null && this.binding.declaringClass == declaringElement)", "-\t\t\t\t\t\t\tthis.bits &= ~ASTNode.CanBeStatic;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "876dc24d2b79ac88d89dc4a46b98a221", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "06cedbd8bd184e3f34c939385e2cbddd9e3aedca", "commitAfterChange": "0d09a2966f3cebfb8d6601000e2b64259fed7dd8", "methodNumberBeforeChange": 427, "methodNumberAfterChange": 427, "signatureBeforeChange": " protected void markEnclosingMemberWithLocalType()", "signatureAfterChange": " protected void markEnclosingMemberWithLocalType()", "diff": ["+\tmarkEnclosingMemberWithLocalTypeOrLambda();", "+}"]}], "num": 51991}