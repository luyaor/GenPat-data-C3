{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e0762ae265f3d19b1a780b4bcebd466", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d8e9f4451b298eecb07bae2c6ea5bfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "6fb362f5d4ff00934fbc56c75799ebc442d91e1a", "commitAfterChange": "2bde2b2ad3abd756d3b6c192c1f99c1def67623d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void elementAdded(Openable element, IResourceDelta delta, RootInfo rootInfo)", "signatureAfterChange": " \tprivate void elementAdded(Openable element, IResourceDelta delta, RootInfo rootInfo)", "diff": ["-\t\t\taddToParentInfo(element);", "+\t\t\tif (delta == null || (delta.getFlags() & IResourceDelta.MOVED_FROM) == 0) {", "+\t\t\t\t// regular element addition", "+\t\t\t\tif (!isPrimaryWorkingCopy(element, elementType)) { // filter out changes to primary compilation unit in working copy mode", "+\t\t\t\t\taddToParentInfo(element);", "+\t\t\t\t\t", "+\t\t\t\t\t// Force the element to be closed as it might have been opened ", "+\t\t\t\t\t// before the resource modification came in and it might have a new child", "+\t\t\t\t\t// For example, in an IWorkspaceRunnable:", "+\t\t\t\t\t// 1. create a package fragment p using a java model operation", "+\t\t\t\t\t// 2. open package p", "+\t\t\t\t\t// 3. add file X.java in folder p", "+\t\t\t\t\t// When the resource delta comes in, only the addition of p is notified, ", "+\t\t\t\t\t// but the package p is already opened, thus its children are not recomputed", "+\t\t\t\t\t// and it appears empty.", "+\t\t\t\t\tclose(element);", "-\t\t\t// Force the element to be closed as it might have been opened ", "-\t\t\t// before the resource modification came in and it might have a new child", "-\t\t\t// For example, in an IWorkspaceRunnable:", "-\t\t\t// 1. create a package fragment p using a java model operation", "-\t\t\t// 2. open package p", "-\t\t\t// 3. add file X.java in folder p", "-\t\t\t// When the resource delta comes in, only the addition of p is notified, ", "-\t\t\t// but the package p is already opened, thus its children are not recomputed", "-\t\t\t// and it appears empty.", "-\t\t\tclose(element);", "+\t\t\t\t\tcurrentDelta().added(element);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\t// element is moved", "+\t\t\t\taddToParentInfo(element);", "+\t\t\t\tclose(element);", "-\t\t\tif (delta != null && (delta.getFlags() & IResourceDelta.MOVED_FROM) != 0) {", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\t// filter out changes to primary compilation unit in working copy mode", "-\t\t\t\tif (!isPrimaryWorkingCopy(element, elementType)) {", "-\t\t\t\t\tcurrentDelta().added(element);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7048afceca288a6907a89fd8337c122e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "6fb362f5d4ff00934fbc56c75799ebc442d91e1a", "commitAfterChange": "2bde2b2ad3abd756d3b6c192c1f99c1def67623d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate void elementRemoved(Openable element, IResourceDelta delta, RootInfo rootInfo)", "signatureAfterChange": " \tprivate void elementRemoved(Openable element, IResourceDelta delta, RootInfo rootInfo)", "diff": ["-\t\tif (element.isOpen()) {", "-\t\t\tclose(element);", "-\t\t}", "-\t\tremoveFromParentInfo(element);", "-\t\tif (delta != null && (delta.getFlags() & IResourceDelta.MOVED_TO) != 0) {", "+\t\tif (delta == null || (delta.getFlags() & IResourceDelta.MOVED_TO) == 0) {", "+\t\t\t// regular element removal", "+\t\t\tif (!isPrimaryWorkingCopy(element, elementType)) { // filter out changes to primary compilation unit in working copy mode", "+\t\t\t\tclose(element);", "+\t\t\t\tremoveFromParentInfo(element);", "+\t\t\t\tcurrentDelta().removed(element);", "+\t\t\t}", "+\t\t} else {", "+\t\t\t// element is moved", "+\t\t\tclose(element);", "+\t\t\tremoveFromParentInfo(element);", "-\t\t\t}", "-\t\t} else {", "-\t\t\t// filter out changes to primary compilation unit in working copy mode", "-\t\t\tif (!isPrimaryWorkingCopy(element, elementType)) {", "-\t\t\t\tcurrentDelta().removed(element);"]}], "num": 48273}