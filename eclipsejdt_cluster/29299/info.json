{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a43491a7a0f48fc78511187c31d6ba2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bced6ac3bfca5fca5f75201e06cc310", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTypeHierarchyTests.java", "commitBeforeChange": "f15f3a4daa4f7cbf363475bdb20d4707912f834f", "commitAfterChange": "1e2211eded7d5ae87dfcf507bb00676a5a81d8e9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Test suite()", "signatureAfterChange": " \tpublic static Test suite()", "diff": ["-\t\tTest suite = buildSuite(FullSourceWorkspaceTypeHierarchyTests.class);", "-\t\tCOUNT = suite.countTestCases();", "-\t\treturn suite;", "+        Test suite = buildSuite(testClass());", "+        TESTS_COUNT = suite.countTestCases();", "+        createPrintStream(testClass().getName(), LOG_STREAMS, TESTS_COUNT, null);", "+        return suite;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95906a7c001b65b4dd430e4c1e39519", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "3bee81801e0cbcb336e03bca8adb4995284ca6ec", "commitAfterChange": "80d1d12dd777676d1d11b6b228822545c397912f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t// must verify that exceptions potentially thrown by this expression are caught in the method", "+\t\t// check captured variables are initialized in current context (26134)", "+\t\tcheckCapturedLocalInitializationIfNecessary(this.binding.declaringClass, currentScope, flowInfo);", "-\t\tif (((thrownExceptions = binding.thrownExceptions).length) != 0) {", "+\t\tif (((thrownExceptions = this.binding.thrownExceptions).length) != 0) {", "+\t\t"]}], "num": 29299}