{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "27ecc4bf778af01a37f198235ef51a6b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a854fc1cbac973d3af7572d7addbe59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "77f822579c514662c97fa5cfdb004c75e9bbd57e", "commitAfterChange": "60adc6e9bd2a19d1f00a26879d59da4db15980bb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r public void handleAccessEmulationAsWarning(boolean flag)", "signatureAfterChange": "\r public void setAccessEmulationSeverity(int flag)", "diff": ["+public void setAccessEmulationSeverity(int flag) {\r", "+\terrorThreshold &= ~AccessEmulation;\r", "+\twarningThreshold &= ~AccessEmulation;\r", "+\tswitch(flag){\r", "+\t\tcase ERROR : \r", "+\t\t\terrorThreshold |= AccessEmulation;\r", "+\t\t\tbreak;\r", "+\t\tcase WARNING : \r", "+\t\t\twarningThreshold |= AccessEmulation;\r", "+\t\t\tbreak;\r", "+\t}\r", "+}\r", "-public void handleAccessEmulationAsWarning(boolean flag) {\r", "-\tif (flag) {\r", "-\t\twarningThreshold |= AccessEmulation;\r", "-\t} else {\r", "-\t\twarningThreshold &= ~AccessEmulation;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2df0aa15658ecf64ee3eb57cd267df1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "77f822579c514662c97fa5cfdb004c75e9bbd57e", "commitAfterChange": "60adc6e9bd2a19d1f00a26879d59da4db15980bb", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \r public void handleNonExternalizedStringLiteralAsWarning(boolean flag)", "signatureAfterChange": "\r public void setNonExternalizedStringLiteralSeverity(int flag)", "diff": ["+public void setNonExternalizedStringLiteralSeverity(int flag) {\r", "+\terrorThreshold &= ~NonExternalizedString;\r", "+\twarningThreshold &= ~NonExternalizedString;\r", "+\tswitch(flag){\r", "+\t\tcase ERROR : \r", "+\t\t\terrorThreshold |= NonExternalizedString;\r", "+\t\t\tbreak;\r", "+\t\tcase WARNING : \r", "+\t\t\twarningThreshold |= NonExternalizedString;\r", "+\t\t\tbreak;\r", "+\t}\t\r", "-\r", "-public void handleNonExternalizedStringLiteralAsWarning(boolean flag) {\r", "-\tif (flag) {\r", "-\t\twarningThreshold |= NonExternalizedString;\r", "-\t} else {\r", "-\t\twarningThreshold &= ~NonExternalizedString;\r", "-\t}\r", "-}\r"]}], "num": 16819}