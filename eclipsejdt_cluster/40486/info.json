{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "985e5d6cf5825d8fa2aa2fba3f17f657", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c2ba3c19a925181182cceb69f2da65a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "93ae272625cf7aea539e03a762b5190105386996", "commitAfterChange": "c6f78f890c1ca00b0157b632da091fae2c781833", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 44, "signatureBeforeChange": "   \tprivate void printIndentationIfNecessary(StringBuffer buffer)", "signatureAfterChange": "  \tprivate void printIndentationIfNecessary(StringBuffer buffer)", "diff": ["-", "-\t\tint indentationColumn = (this.useTab ? this.indentationLevel * this.tabSize : this.indentationLevel)+1;", "-\t\tif (this.column < indentationColumn) {", "-\t\t\tfor (int i = getColumnIndentationLevel(), max = this.indentationLevel; i < max; i++) { ", "-\t\t\t\tif (this.useTab) {", "-\t\t\t\t\tthis.tab(buffer);", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.column++;", "-\t\t\t\t\tbuffer.append(this.fillingSpace);", "+\t\tswitch(this.tabChar) {", "+\t\t\tcase DefaultCodeFormatterOptions.TAB :", "+\t\t\t\twhile (this.column <= this.indentationLevel) {", "+\t\t\t\t\tbuffer.append('\\t');", "+\t\t\t\t\tthis.lastNumberOfNewLines = 0;", "+\t\t\t\t\tint complement = this.tabLength - ((this.column - 1) % this.tabLength); // amount of space", "+\t\t\t\t\tthis.column += complement;", "-\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase DefaultCodeFormatterOptions.SPACE :", "+\t\t\t\twhile (this.column <= this.indentationLevel) {", "+\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\tthis.column++;", "+\t\t\t\t\tthis.needSpace = false;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase DefaultCodeFormatterOptions.MIXED :", "+\t\t\t\twhile (this.column <= this.indentationLevel) {", "+\t\t\t\t\tif ((this.column - 1 + this.tabLength) <= this.indentationLevel) {", "+\t\t\t\t\t\tbuffer.append('\\t');", "+\t\t\t\t\t\tthis.column += this.tabLength;", "+\t\t\t\t\t} else if ((this.column - 1 + this.indentationSize) <= this.indentationLevel) {", "+\t\t\t\t\t\t// print one indentation", "+\t\t\t\t\t\tfor (int i = 0, max = this.indentationSize; i < max; i++) {", "+\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\tthis.column++;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\tthis.column++;", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.needSpace = false;", "+\t\t\t\t}", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd123b620fb04e099e86a4153ef6afe5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a443bde4ac794ade15630c52c634e854501ba28b", "commitAfterChange": "72ba7571355a0e63732cf56b0d703b7f9220ee79", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": "  \tprivate boolean printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "signatureAfterChange": "  \tprivate boolean printBlockComment(int currentTokenStartPosition, int currentTokenEndPosition)", "diff": ["-\t\tthis.indentationLevel = (this.column / this.tabLength) * this.tabLength;", "-\t\tthis.column = this.indentationLevel + 1;", "-\t\tthis.numberOfIndentations = this.indentationLevel / this.indentationSize;", "+\t\tswitch (this.tabChar) {", "+\t\t\tcase DefaultCodeFormatterOptions.TAB:", "+\t\t\t\tswitch (this.tabLength) {", "+\t\t\t\t\tcase 0:", "+\t\t\t\t\t\tthis.indentationLevel = 0;", "+\t\t\t\t\t\tthis.column = 1;", "+\t\t\t\t\t\tthis.numberOfIndentations = 0;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase 1:", "+\t\t\t\t\t\tthis.indentationLevel = this.column - 1;", "+\t\t\t\t\t\tthis.numberOfIndentations = this.indentationLevel;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tthis.indentationLevel = (this.column / this.tabLength) * this.tabLength;", "+\t\t\t\t\t\tthis.column = this.indentationLevel + 1;", "+\t\t\t\t\t\tthis.numberOfIndentations = this.indentationLevel / this.tabLength;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase DefaultCodeFormatterOptions.MIXED:", "+\t\t\t\tif (this.tabLength == 0) {", "+\t\t\t\t\tthis.indentationLevel = 0;", "+\t\t\t\t\tthis.column = 1;", "+\t\t\t\t\tthis.numberOfIndentations = 0;", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.indentationLevel = this.column - 1;", "+\t\t\t\t\tthis.numberOfIndentations = this.indentationLevel / this.tabLength;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase DefaultCodeFormatterOptions.SPACE:", "+\t\t\t\tif (this.indentationSize == 0) {", "+\t\t\t\t\tthis.indentationLevel = 0;", "+\t\t\t\t\tthis.column = 1;", "+\t\t\t\t\tthis.numberOfIndentations = 0;", "+\t\t\t\t} else {", "+\t\t\t\t\tthis.indentationLevel = this.column - 1;", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t}"]}], "num": 40486}