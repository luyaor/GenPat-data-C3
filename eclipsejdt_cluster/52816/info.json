{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a4bd87aec5b3b882d3b4a361f6fa6d6", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a303d97ae3a730a68981a6c5c927efb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "e418a86ea68ac7ee09175e91ece0db3dcd81b05d", "commitAfterChange": "6d898d0dc8b1f25620aa98bef60507dd5c512289", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": "\r protected void consumeEnterAnonymousClassBody()", "signatureAfterChange": "\r protected void consumeEnterAnonymousClassBody()", "diff": ["-\t\t// the recoveryTokenCheck will deal with the open brace\t\t\r", "-\t\tcurrentElement = currentElement.add(anonymousType, 0);\r", "-\t\tcurrentToken = 0; // opening brace already taken into account\r", "+\t\t/*\r", "+\t\t * Use special bracketBalance of -2, to be treated specially in the recovery token check,\r", "+\t\t * instead of changing the currentToken value (to 0 previously) and thus causing to restart\r", "+\t\t * recovery.\r", "+\t\t */\r", "+\t\tcurrentElement = currentElement.add(anonymousType, -2);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5ffe35153c6bd0363fbb099ed673876", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "e418a86ea68ac7ee09175e91ece0db3dcd81b05d", "commitAfterChange": "6d898d0dc8b1f25620aa98bef60507dd5c512289", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r protected void consumeAllocationHeader()", "signatureAfterChange": "\r protected void consumeAllocationHeader()", "diff": ["-\t\tcurrentElement = currentElement.add(anonymousType, 0);\r", "+\t\t/*\r", "+\t\t * Use special bracketBalance of -2, to be treated specially in the recovery token check,\r", "+\t\t * instead of changing the currentToken value (to 0 previously) and thus causing to restart\r", "+\t\t * recovery.\r", "+\t\t */\r", "+\t\tcurrentElement = currentElement.add(anonymousType, -2); \r", "+\t\t\r", "-\t\tcurrentToken = 0; // opening brace already taken into account\r"]}], "num": 52816}