{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66255edcac956488e92f66ba32bf67f5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65061983e4f847e11796f1a8416d7c6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "7c3080ba45bd79ddd7d628abfc7780ee747e39e8", "commitAfterChange": "5658c822d90e268f3a7dca76bdc6b8fd41b3f9c3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public void indexSourceFolder(JavaProject javaProject, IPath sourceFolder, final char[][] exclusionPattern)", "signatureAfterChange": " public void indexSourceFolder(JavaProject javaProject, IPath sourceFolder, final char[][] exclusionPattern)", "diff": ["-\tfinal IPath container = project.getFullPath();", "-\tIContainer folder = container.equals(sourceFolder)", "-\t\t? (IContainer) project", "-\t\t : (IContainer) ResourcesPlugin.getWorkspace().getRoot().getFolder(sourceFolder);", "-\ttry {", "-// KJ : Release next week", "-//\t\tfolder.accept(new IResourceProxyVisitor() {", "-//\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "-//\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-//\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) { ", "-//\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-//\t\t\t\t\t\tif (!Util.isExcluded(resource, exclusionPattern))", "-\t\tfolder.accept(new IResourceVisitor() {", "-\t\t\tpublic boolean visit(IResource resource) throws CoreException {", "-\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\tif (Util.isJavaFileName(resource.getName()) && !Util.isExcluded(resource, exclusionPattern)) {", "-\t\t\t\t\t\taddSource((IFile)resource, container);", "-\t\t\t\t\t}", "-\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t});", "-\t} catch (CoreException e) {", "-\t\t// Folder does not exist.", "-\t\t// It will be indexed only when DeltaProcessor detects its addition", "-\t}", "+\tthis.request(new AddFolderToIndex(sourceFolder, project, exclusionPattern, this));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd9bf80ea1e54a4bcfa179e380d54eb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddFolderToIndex.java", "commitBeforeChange": "1fda88770408371beaeaafdec7d9be6b39cd42f5", "commitAfterChange": "149a16962b36e6d4b4296a40fc42d0af98ac09df", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-// KJ : Release next week", "-//\t\t\tfolder.accept(new IResourceProxyVisitor() {", "-//\t\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "-//\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-//\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) { ", "-//\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-//\t\t\t\t\t\t\tif (!Util.isExcluded(resource, exclusionPattern))", "-\t\t\tfolder.accept(new IResourceVisitor() {", "-\t\t\t\tpublic boolean visit(IResource resource) throws CoreException {", "-\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\tif (Util.isJavaFileName(resource.getName()) && !Util.isExcluded(resource, pattern)) {", "-\t\t\t\t\t\t\tindexManager.addSource((IFile)resource, container);", "+\t\t\tfolder.accept(", "+\t\t\t\tnew IResourceProxyVisitor() {", "+\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "+\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) {", "+\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "+\t\t\t\t\t\t\t\tif (!Util.isExcluded(resource, exclusionPattern))", "+\t\t\t\t\t\t\t\t\tindexManager.addSource((IFile)resource, container);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\treturn true;", "-\t\t\t\t\treturn true;", "-\t\t\t\t}", "-\t\t\t});", "+\t\t\t\t},", "+\t\t\t\tIResource.NONE", "+\t\t\t);"]}], "num": 22353}