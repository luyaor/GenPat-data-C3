{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe907c8ad7770b55d66e6dc88fff7392", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04332c4ecd09aeac5d3e685756318d38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public MethodBinding binding(TypeBinding targetType, boolean reportErrors, Scope scope)", "signatureAfterChange": " public MethodBinding binding(TypeBinding targetType, Scope scope)", "diff": ["-public MethodBinding binding(TypeBinding targetType, boolean reportErrors, Scope scope) {", "-\tif (this.suspendedResolutionState != null && targetType != null) {", "-\t\tsetExpectedType(targetType);", "-\t\tif (!resolvePart2(this.suspendedResolutionState)) {", "-\t\t\tif (reportErrors && !this.suspendedResolutionState.hasReportedError) {", "-\t\t\t\tif (this.suspendedResolutionState.cannotInferDiamond)", "-\t\t\t\t\tscope.problemReporter().cannotInferElidedTypes(this);", "-\t\t\t\telse", "-\t\t\t\t\tscope.problemReporter().genericInferenceError(\"constructor is unexpectedly unresolved\", this); //$NON-NLS-1$", "-\t\t\t\tthis.suspendedResolutionState.hasReportedError = true;", "-\t\t\t}", "-\t\t\treturn null;", "-\t\t}", "-\t}", "-\tif (reportErrors && this.binding != null && !this.binding.isValidBinding()) {", "-\t\tif (this.binding.declaringClass == null)", "-\t\t\tthis.binding.declaringClass = (ReferenceBinding) this.resolvedType;", "-\t\tif (this.suspendedResolutionState != null) {", "-\t\t\tscope.problemReporter().invalidConstructor(this, this.binding);", "-\t\t\tthis.suspendedResolutionState.hasReportedError = true;", "-\t\t}", "-\t}", "+public MethodBinding binding(TypeBinding targetType, Scope scope) {", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c49aa5082ab612207a25782256eff5e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "signatureAfterChange": "  public void manageSyntheticAccessIfNecessary(BlockScope currentScope, FlowInfo flowInfo, boolean isReadAccess)", "diff": ["-\t\tthis.codegenBinding = codegenField;", "-\t\t}", "-\t\t// if the binding declaring class is not visible, need special action", "-\t\t// for runtime compatibility on 1.2 VMs : change the declaring class of the binding", "-\t\t// NOTE: from target 1.2 on, field's declaring class is touched if any different from receiver type", "-\t\t// and not from Object or implicit static field access.", "-\t\tif (fieldBinding.declaringClass != this.actualReceiverType", "-\t\t\t\t&& !this.actualReceiverType.isArrayType()", "-\t\t\t\t&& fieldBinding.declaringClass != null // array.length", "-\t\t\t\t&& fieldBinding.constant() == Constant.NotAConstant) {", "-\t\t\tCompilerOptions options = currentScope.compilerOptions();", "-\t\t\tif ((options.targetJDK >= ClassFileConstants.JDK1_2", "-\t\t\t\t\t&& (options.complianceLevel >= ClassFileConstants.JDK1_4 || !fieldBinding.isStatic())", "-\t\t\t\t\t&& fieldBinding.declaringClass.id != TypeIds.T_JavaLangObject) // no change for Object fields", "-\t\t\t\t\t|| !fieldBinding.declaringClass.canBeSeenBy(currentScope)) {", "-", "-\t\t\t\t\tthis.codegenBinding =", "-\t\t\t\t\t    currentScope.enclosingSourceType().getUpdatedFieldBinding(", "-\t\t\t\t\t\t       codegenField,", "-\t\t\t\t\t\t        (ReferenceBinding)this.actualReceiverType.erasure());", "-\t\t\t}"]}], "num": 33557}