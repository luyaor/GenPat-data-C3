{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1984741f23fc51fa7fa3c659dd7b5741", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45593bf99797a9aab28702bc34ddb03f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1037, "methodNumberAfterChange": 1037, "signatureBeforeChange": " public void test1013()", "signatureAfterChange": " public void test1013()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 14)\\r\\n\" +", "-\t\t\"\tvoid foo(List l1, List<X> l2) {\\r\\n\" +", "-\t\t\"\t         ^^^^\\n\" +", "-\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 15)\\r\\n\" +", "-\t\t\"\tX x = bar1(l1, l2);\\r\\n\" +", "-\t\t\"\t      ^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar1(List, List) of the generic method bar1(List<T>, List<T>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. ERROR in X.java (at line 15)\\r\\n\" +", "-\t\t\"\tX x = bar1(l1, l2);\\r\\n\" +", "-\t\t\"\t      ^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Object to X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 15)\\r\\n\" +", "-\t\t\"\tX x = bar1(l1, l2);\\r\\n\" +", "-\t\t\"\t           ^^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<T>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. WARNING in X.java (at line 17)\\r\\n\" +", "-\t\t\"\tList<X> lx = bar2(l1, l2);\\r\\n\" +", "-\t\t\"\t             ^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar2(List, List) of the generic method bar2(List<T>, List<T>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. WARNING in X.java (at line 17)\\r\\n\" +", "-\t\t\"\tList<X> lx = bar2(l1, l2);\\r\\n\" +", "-\t\t\"\t             ^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<X>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"7. WARNING in X.java (at line 17)\\r\\n\" +", "-\t\t\"\tList<X> lx = bar2(l1, l2);\\r\\n\" +", "-\t\t\"\t                  ^^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<T>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\"\tvoid foo(List l1, List<X> l2) {\\n\" + ", "+\t\t\"\t         ^^^^\\n\" + ", "+\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\"\tX x = bar1(l1, l2);\\n\" + ", "+\t\t\"\t      ^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar1(List, List<X>) of the generic method bar1(List<T>, List<T>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\"\tX x = bar1(l1, l2);\\n\" + ", "+\t\t\"\t      ^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Object to X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\"\tX x = bar1(l1, l2);\\n\" + ", "+\t\t\"\t           ^^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\"\tList<X> lx = bar2(l1, l2);\\n\" + ", "+\t\t\"\t             ^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar2(List, List<X>) of the generic method bar2(List<T>, List<T>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\"\tList<X> lx = bar2(l1, l2);\\n\" + ", "+\t\t\"\t             ^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<X>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 17)\\n\" + ", "+\t\t\"\tList<X> lx = bar2(l1, l2);\\n\" + ", "+\t\t\"\t                  ^^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<X>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72c485a69e2102300ab050d112b5e053", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1039, "methodNumberAfterChange": 1039, "signatureBeforeChange": " public void test1015()", "signatureAfterChange": " public void test1015()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 3)\\n\" +", "-\t\t\"\tvoid foo1(List l, List<String> ls) {\\n\" +", "-\t\t\"\t          ^^^^\\n\" +", "-\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" +", "-\t\t\"\t                   ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar(List, List) of the generic method bar(List<U>, List<V>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" +", "-\t\t\"\t                   ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" +", "-\t\t\"\t                       ^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<U>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tString s = bar(l, ls);\\n\" +", "-\t\t\"\t           ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar(List, List) of the generic method bar(List<U>, List<V>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. ERROR in X.java (at line 5)\\n\" +", "-\t\t\"\tString s = bar(l, ls);\\n\" +", "-\t\t\"\t           ^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from List to String\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"7. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tString s = bar(l, ls);\\n\" +", "-\t\t\"\t               ^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<U>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tvoid foo1(List l, List<String> ls) {\\n\" + ", "+\t\t\"\t          ^^^^\\n\" + ", "+\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" + ", "+\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar(List, List<String>) of the generic method bar(List<U>, List<V>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" + ", "+\t\t\"\t                   ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<String>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tList<String> ls1 = bar(l, ls);\\n\" + ", "+\t\t\"\t                       ^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tString s = bar(l, ls);\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar(List, List<String>) of the generic method bar(List<U>, List<V>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tString s = bar(l, ls);\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from List to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tString s = bar(l, ls);\\n\" + ", "+\t\t\"\t               ^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ddbebc162ea9c14ac630c0f4c6ff793", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 1038, "methodNumberAfterChange": 1038, "signatureBeforeChange": " public void test1014()", "signatureAfterChange": " public void test1014()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. WARNING in X.java (at line 4)\\n\" +", "-\t\t\"\tvoid foo1(List l, List<String> ls) {\\n\" +", "-\t\t\"\t          ^^^^\\n\" +", "-\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tSet<Map.Entry<String,String>> mss1 = bar(l, ls).entrySet();\\n\" +", "-\t\t\"\t                                     ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar(List, List) of the generic method bar(List<U>, List<V>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"3. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tSet<Map.Entry<String,String>> mss1 = bar(l, ls).entrySet();\\n\" +", "-\t\t\"\t                                     ^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: The expression of type Set needs unchecked conversion to conform to Set<Map.Entry<String,String>>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"4. WARNING in X.java (at line 5)\\n\" +", "-\t\t\"\tSet<Map.Entry<String,String>> mss1 = bar(l, ls).entrySet();\\n\" +", "-\t\t\"\t                                         ^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<U>\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"5. WARNING in X.java (at line 6)\\n\" +", "-\t\t\"\tString s = bar(l, ls).entrySet();\\n\" +", "-\t\t\"\t           ^^^^^^^^^^\\n\" +", "-\t\t\"Type safety: Unchecked invocation bar(List, List) of the generic method bar(List<U>, List<V>) of type X\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"6. ERROR in X.java (at line 6)\\n\" +", "-\t\t\"\tString s = bar(l, ls).entrySet();\\n\" +", "-\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Set to String\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"7. WARNING in X.java (at line 6)\\n\" +", "-\t\t\"\tString s = bar(l, ls).entrySet();\\n\" +", "-\t\t\"\t               ^\\n\" +", "-\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<U>\\n\" +", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tvoid foo1(List l, List<String> ls) {\\n\" + ", "+\t\t\"\t          ^^^^\\n\" + ", "+\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tSet<Map.Entry<String,String>> mss1 = bar(l, ls).entrySet();\\n\" + ", "+\t\t\"\t                                     ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar(List, List<String>) of the generic method bar(List<U>, List<V>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tSet<Map.Entry<String,String>> mss1 = bar(l, ls).entrySet();\\n\" + ", "+\t\t\"\t                                     ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: The expression of type Set needs unchecked conversion to conform to Set<Map.Entry<String,String>>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tSet<Map.Entry<String,String>> mss1 = bar(l, ls).entrySet();\\n\" + ", "+\t\t\"\t                                         ^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tString s = bar(l, ls).entrySet();\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: Unchecked invocation bar(List, List<String>) of the generic method bar(List<U>, List<V>) of type X\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\tString s = bar(l, ls).entrySet();\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type mismatch: cannot convert from Set to String\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tString s = bar(l, ls).entrySet();\\n\" + ", "+\t\t\"\t               ^\\n\" + ", "+\t\t\"Type safety: The expression of type List needs unchecked conversion to conform to List<Object>\\n\" + "]}], "num": 10950}