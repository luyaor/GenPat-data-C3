{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e1ea6e115857eb461ed625052428b9a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a550ae83d41105d07358453b0225e75c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic boolean match(VariableDeclarationFragment node, Object other)", "signatureAfterChange": " \tpublic boolean match(TypeMethodReference node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(TypeMethodReference node, Object other) {", "+\t\tif (!(other instanceof TypeMethodReference)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tTypeMethodReference o = (TypeMethodReference) other;", "+\t\treturn (", "+\t\t\tsafeSubtreeMatch(node.getType(), o.getType())", "+\t\t\t\t&& safeSubtreeListMatch(node.typeArguments(), o.typeArguments())", "+\t\t\t\t&& safeSubtreeMatch(node.getName(), o.getName()));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f23fd026100f8df38b7a35bdc66c5b44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTMatcher.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tpublic boolean match(VariableDeclarationExpression node, Object other)", "signatureAfterChange": " \tpublic boolean match(TextElement node, Object other)", "diff": ["+\t */", "+\tpublic boolean match(TextElement node, Object other) {", "+\t\tif (!(other instanceof TextElement)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tTextElement o = (TextElement) other;", "+\t\treturn safeEquals(node.getText(), o.getText());", "+\t}"]}], "num": 37536}