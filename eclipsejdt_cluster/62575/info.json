{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a18a3d97a8f3fe0f27376c1d7dd1837", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ca3c754fe3d5ea14eb5078d0846b54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "82286041004c3a1c8b03ed85a8b5ba0c85e39f08", "commitAfterChange": "c3894f02481a65e7c5a6b2e211e3716b20cd9dd8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate AST(int level)", "signatureAfterChange": " \tprivate AST(int level)", "diff": ["+\t\t\tcase JLS8 :", "+\t\t\t\tthis.apiLevel = level;", "+\t\t\t\t// initialize a scanner", "+\t\t\t\tthis.scanner = new Scanner(", "+\t\t\t\t\t\ttrue /*comment*/,", "+\t\t\t\t\t\ttrue /*whitespace*/,", "+\t\t\t\t\t\tfalse /*nls*/,", "+\t\t\t\t\t\tClassFileConstants.JDK1_8 /*sourceLevel*/,", "+\t\t\t\t\t\tClassFileConstants.JDK1_8 /*complianceLevel*/,", "+\t\t\t\t\t\tnull/*taskTag*/,", "+\t\t\t\t\t\tnull/*taskPriorities*/,", "+\t\t\t\t\t\ttrue/*taskCaseSensitive*/);", "+\t\t\t\tbreak;\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f3d716de05faa6fbc6ca378f28d11e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate AST(int level)", "signatureAfterChange": " \tprivate AST(int level)", "diff": ["-\t */", "-\tprivate AST(int level) {", "-\t\tif ((level != AST.JLS2)", "-\t\t\t&& (level != AST.JLS3)) {", "-\t\t\tthrow new IllegalArgumentException();", "-\t\t}", "-\t\tthis.apiLevel = level;", "-\t\t// initialize a scanner", "-\t\tthis.scanner = new Scanner(", "-\t\t\t\ttrue /*comment*/,", "-\t\t\t\ttrue /*whitespace*/,", "-\t\t\t\tfalse /*nls*/,", "-\t\t\t\tClassFileConstants.JDK1_3 /*sourceLevel*/,", "-\t\t\t\tClassFileConstants.JDK1_5 /*complianceLevel*/,", "-\t\t\t\tnull/*taskTag*/,", "-\t\t\t\tnull/*taskPriorities*/,", "-\t\t\t\ttrue/*taskCaseSensitive*/);", "-\t}", "+\tprivate AST(int level) {", "+\t\tswitch(level) {", "+\t\t\tcase JLS2_INTERNAL :", "+\t\t\tcase JLS3 :", "+\t\t\t\tthis.apiLevel = level;", "+\t\t\t\t// initialize a scanner", "+\t\t\t\tthis.scanner = new Scanner(", "+\t\t\t\t\t\ttrue /*comment*/,", "+\t\t\t\t\t\ttrue /*whitespace*/,", "+\t\t\t\t\t\tfalse /*nls*/,", "+\t\t\t\t\t\tClassFileConstants.JDK1_3 /*sourceLevel*/,", "+\t\t\t\t\t\tClassFileConstants.JDK1_5 /*complianceLevel*/,", "+\t\t\t\t\t\tnull/*taskTag*/,", "+\t\t\t\t\t\tnull/*taskPriorities*/,", "+\t\t\t\t\t\ttrue/*taskCaseSensitive*/);", "+\t\t\t\tbreak;", "+\t\t\tcase JLS4 :", "+\t\t\t\tthis.apiLevel = level;", "+\t\t\t\t// initialize a scanner", "+\t\t\t\tthis.scanner = new Scanner(", "+\t\t\t\t\t\ttrue /*comment*/,", "+\t\t\t\t\t\ttrue /*whitespace*/,", "+\t\t\t\t\t\tfalse /*nls*/,", "+\t\t\t\t\t\tClassFileConstants.JDK1_7 /*sourceLevel*/,", "+\t\t\t\t\t\tClassFileConstants.JDK1_7 /*complianceLevel*/,", "+\t\t\t\t\t\tnull/*taskTag*/,", "+\t\t\t\t\t\tnull/*taskPriorities*/,", "+\t\t\t\t\t\ttrue/*taskCaseSensitive*/);", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\tthrow new IllegalArgumentException(\"Unsupported JLS level\"); //$NON-NLS-1$", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6b6436a3af38c4026caec63c3a37406", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tvoid initialize(ReferenceBinding someType, TypeBinding[] someArguments)", "signatureAfterChange": "  \tvoid initialize(ReferenceBinding someType, TypeBinding[] someArguments)", "diff": ["-\t\t\t\tboolean isWildcardArgument = someArgument.isWildcard();", "-\t\t\t\tif (isWildcardArgument) {", "-\t\t\t\t\tthis.tagBits |= TagBits.HasDirectWildcard;", "-\t\t\t\t}", "-\t\t\t\tif (!isWildcardArgument || ((WildcardBinding) someArgument).boundKind != Wildcard.UNBOUND) {", "-\t\t\t\t\tthis.tagBits |= TagBits.IsBoundParameterizedType;", "+\t\t\t\tswitch (someArgument.kind()) {", "+\t\t\t\t\tcase Binding.WILDCARD_TYPE :", "+\t\t\t\t\t\tthis.tagBits |= TagBits.HasDirectWildcard;", "+\t\t\t\t\t\tif (((WildcardBinding) someArgument).boundKind != Wildcard.UNBOUND) {", "+\t\t\t\t\t\t\tthis.tagBits |= TagBits.IsBoundParameterizedType;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase Binding.INTERSECTION_TYPE :", "+\t\t\t\t\t\tthis.tagBits |= TagBits.HasDirectWildcard;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault :", "+\t\t\t\t\t\tthis.tagBits |= TagBits.IsBoundParameterizedType;", "+\t\t\t\t\t\tbreak;"]}], "num": 62575}