{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "69a9191604e1ae2b4e1ec75d6351fb69", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "000cdbde3fa11a45bf7b87cfde1ded7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "aa3a93ccc3206cb1748c8a2362c7163309a5a4d8", "commitAfterChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic boolean visit(UnaryExpression unaryExpression, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(UnaryExpression unaryExpression, BlockScope scope)", "diff": ["-\t\tif (numberOfParens > 0) manageOpeningParenthesizedExpression(unaryExpression, numberOfParens);", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageOpeningParenthesizedExpression(unaryExpression, numberOfParens);", "+\t\t}", "-\t\tif (this.preferences.insert_space_after_unary_operator) this.scribe.space();", "+\t\tif (this.preferences.insert_space_after_unary_operator) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "-\t\tif (numberOfParens > 0) manageClosingParenthesizedExpression(unaryExpression, numberOfParens);", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageClosingParenthesizedExpression(unaryExpression, numberOfParens);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccefc7eb16e30baa75a33df906344c09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/NewCodeFormatter.java", "commitBeforeChange": "a5c6e1f76d5a6c03c6d1a939c4f8dbefac55cdca", "commitAfterChange": "10f61af06f4d12e71dbad86581b20a4a2b3267b7", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompoundAssignment compoundAssignment, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompoundAssignment compoundAssignment, \t\tBlockScope scope)", "diff": ["-\t\tif (numberOfParens > 0) manageOpeningParenthesizedExpression(compoundAssignment, numberOfParens);", "-\t\t", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageOpeningParenthesizedExpression(compoundAssignment, numberOfParens);", "+\t\t}", "-\t\tif (this.preferences.insert_space_after_assignment_operators) this.scribe.space();", "-", "+\t\tif (this.preferences.insert_space_after_assignment_operators) {", "+\t\t\tthis.scribe.space();", "+\t\t}", "-\t\tif (numberOfParens > 0) manageClosingParenthesizedExpression(compoundAssignment, numberOfParens);", "+\t\tif (numberOfParens > 0) {", "+\t\t\tmanageClosingParenthesizedExpression(compoundAssignment, numberOfParens);", "+\t\t}"]}], "num": 62237}