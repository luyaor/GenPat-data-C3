{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "939a7e7b976080991b061186bde33810", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daf901d33d05c42e7b2ba6cec829b210", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "0199702ff6cca8392f62e334c86875a1b31484e2", "commitAfterChange": "4d36cf912bda83cf994dbb030b9c8cbc9e169048", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\tif (monitor == null) {", "-\t\t\tmonitor= new NullProgressMonitor();", "+", "+\t\tSubMonitor subMonitor = SubMonitor.convert(monitor,", "+\t\t\t\tMessages.bind(Messages.importRewrite_processDescription), 2);", "+\t\tif (!hasRecordedChanges()) {", "+\t\t\tthis.createdImports= CharOperation.NO_STRINGS;", "+\t\t\tthis.createdStaticImports= CharOperation.NO_STRINGS;", "+\t\t\treturn new MultiTextEdit();", "-\t\ttry {", "-\t\t\tmonitor.beginTask(Messages.bind(Messages.importRewrite_processDescription), 2);", "-\t\t\tif (!hasRecordedChanges()) {", "-\t\t\t\tthis.createdImports= CharOperation.NO_STRINGS;", "-\t\t\t\tthis.createdStaticImports= CharOperation.NO_STRINGS;", "-\t\t\t\treturn new MultiTextEdit();", "-\t\t\t}", "-", "-\t\t\tCompilationUnit usedAstRoot= this.astRoot;", "-\t\t\tif (usedAstRoot == null) {", "-\t\t\t\tASTParser parser= ASTParser.newParser(AST.JLS8);", "-\t\t\t\tparser.setSource(this.compilationUnit);", "-\t\t\t\tparser.setFocalPosition(0); // reduced AST", "-\t\t\t\tparser.setResolveBindings(false);", "-\t\t\t\tusedAstRoot= (CompilationUnit) parser.createAST(new SubProgressMonitor(monitor, 1));", "-\t\t\t}", "-", "-\t\t\tImportRewriteConfiguration config= buildImportRewriteConfiguration();", "-", "-\t\t\tImportRewriteAnalyzer computer=", "-\t\t\t\tnew ImportRewriteAnalyzer(this.compilationUnit, usedAstRoot, config);", "-", "-\t\t\tfor (String addedImport : this.addedImports) {", "-\t\t\t\tboolean isStatic = STATIC_PREFIX == addedImport.charAt(0);", "-\t\t\t\tString qualifiedName = addedImport.substring(1);", "-\t\t\t\tcomputer.addImport(isStatic, qualifiedName);", "-\t\t\t}", "-", "-\t\t\tfor (String removedImport : this.removedImports) {", "-\t\t\t\tboolean isStatic = STATIC_PREFIX == removedImport.charAt(0);", "-\t\t\t\tString qualifiedName = removedImport.substring(1);", "-\t\t\t\tcomputer.removeImport(isStatic, qualifiedName);", "-\t\t\t}", "-", "-\t\t\tfor (String typeExplicitSimpleName : this.typeExplicitSimpleNames) {", "-\t\t\t\tcomputer.requireExplicitImport(false, typeExplicitSimpleName);", "-\t\t\t}", "-", "-\t\t\tfor (String staticExplicitSimpleName : this.staticExplicitSimpleNames) {", "-\t\t\t\tcomputer.requireExplicitImport(true, staticExplicitSimpleName);", "-\t\t\t}", "-", "-\t\t\tImportRewriteAnalyzer.RewriteResult result= computer.analyzeRewrite(new SubProgressMonitor(monitor, 1));", "-", "-\t\t\tthis.createdImports= result.getCreatedImports();", "-\t\t\tthis.createdStaticImports= result.getCreatedStaticImports();", "-", "-\t\t\treturn result.getTextEdit();", "-\t\t} finally {", "-\t\t\tmonitor.done();", "+\t\tCompilationUnit usedAstRoot= this.astRoot;", "+\t\tif (usedAstRoot == null) {", "+\t\t\tASTParser parser= ASTParser.newParser(AST.JLS8);", "+\t\t\tparser.setSource(this.compilationUnit);", "+\t\t\tparser.setFocalPosition(0); // reduced AST", "+\t\t\tparser.setResolveBindings(false);", "+\t\t\tusedAstRoot= (CompilationUnit) parser.createAST(subMonitor.split(1));", "+", "+\t\tImportRewriteConfiguration config= buildImportRewriteConfiguration();", "+", "+\t\tImportRewriteAnalyzer computer=", "+\t\t\tnew ImportRewriteAnalyzer(this.compilationUnit, usedAstRoot, config);", "+", "+\t\tfor (String addedImport : this.addedImports) {", "+\t\t\tboolean isStatic = STATIC_PREFIX == addedImport.charAt(0);", "+\t\t\tString qualifiedName = addedImport.substring(1);", "+\t\t\tcomputer.addImport(isStatic, qualifiedName);", "+\t\t}", "+", "+\t\tfor (String removedImport : this.removedImports) {", "+\t\t\tboolean isStatic = STATIC_PREFIX == removedImport.charAt(0);", "+\t\t\tString qualifiedName = removedImport.substring(1);", "+\t\t\tcomputer.removeImport(isStatic, qualifiedName);", "+\t\t}", "+", "+\t\tfor (String typeExplicitSimpleName : this.typeExplicitSimpleNames) {", "+\t\t\tcomputer.requireExplicitImport(false, typeExplicitSimpleName);", "+\t\t}", "+", "+\t\tfor (String staticExplicitSimpleName : this.staticExplicitSimpleNames) {", "+\t\t\tcomputer.requireExplicitImport(true, staticExplicitSimpleName);", "+\t\t}", "+", "+\t\tImportRewriteAnalyzer.RewriteResult result= computer.analyzeRewrite(subMonitor.split(1));", "+", "+\t\tthis.createdImports= result.getCreatedImports();", "+\t\tthis.createdStaticImports= result.getCreatedStaticImports();", "+", "+\t\treturn result.getTextEdit();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0a14791d114087d7c0b560bfd3b64ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "f8f573fb4945f47fa2e1f634d0b55fa9e0151f17", "commitAfterChange": "b1e2ed2bb1403d1f729ccda27eb7b9ebe7009bed", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["+\t\t\tImportRewriteConfiguration config= buildImportRewriteConfiguration();", "+", "-\t\t\t\tnew ImportRewriteAnalyzer(", "-\t\t\t\t\t\tthis.compilationUnit,", "-\t\t\t\t\t\tusedAstRoot,", "-\t\t\t\t\t\tthis.importOrder,", "-\t\t\t\t\t\tthis.importOnDemandThreshold,", "-\t\t\t\t\t\tthis.staticImportOnDemandThreshold,", "-\t\t\t\t\t\tthis.restoreExistingImports,", "-\t\t\t\t\t\tthis.useContextToFilterImplicitImports);", "-\t\t\tcomputer.setFilterImplicitImports(this.filterImplicitImports);", "+\t\t\t\tnew ImportRewriteAnalyzer(this.compilationUnit, usedAstRoot, config);", "-\t\t\tif (this.addedImports != null) {", "-\t\t\t\tfor (int i= 0; i < this.addedImports.size(); i++) {", "-\t\t\t\t\tString curr= (String) this.addedImports.get(i);", "-\t\t\t\t\tcomputer.addImport(curr.substring(1), STATIC_PREFIX == curr.charAt(0), usedAstRoot, this.restoreExistingImports);", "-\t\t\t\t}", "+\t\t\tfor (String addedImport : this.addedImports) {", "+\t\t\t\tboolean isStatic = STATIC_PREFIX == addedImport.charAt(0);", "+\t\t\t\tString qualifiedName = addedImport.substring(1);", "+\t\t\t\tcomputer.addImport(isStatic, qualifiedName);", "-\t\t\tif (this.removedImports != null) {", "-\t\t\t\tfor (int i= 0; i < this.removedImports.size(); i++) {", "-\t\t\t\t\tString curr= (String) this.removedImports.get(i);", "-\t\t\t\t\tcomputer.removeImport(curr.substring(1), STATIC_PREFIX == curr.charAt(0));", "-\t\t\t\t}", "+\t\t\tfor (String removedImport : this.removedImports) {", "+\t\t\t\tboolean isStatic = STATIC_PREFIX == removedImport.charAt(0);", "+\t\t\t\tString qualifiedName = removedImport.substring(1);", "+\t\t\t\tcomputer.removeImport(isStatic, qualifiedName);", "-\t\t\tTextEdit result= computer.getResultingEdits(new SubProgressMonitor(monitor, 1));", "-\t\t\tthis.createdImports= computer.getCreatedImports();", "-\t\t\tthis.createdStaticImports= computer.getCreatedStaticImports();", "-\t\t\treturn result;", "+\t\t\tfor (String typeExplicitSimpleName : this.typeExplicitSimpleNames) {", "+\t\t\t\tcomputer.requireExplicitImport(false, typeExplicitSimpleName);", "+\t\t\t}", "+", "+\t\t\tfor (String staticExplicitSimpleName : this.staticExplicitSimpleNames) {", "+\t\t\t\tcomputer.requireExplicitImport(true, staticExplicitSimpleName);", "+\t\t\t}", "+", "+\t\t\tImportRewriteAnalyzer.RewriteResult result= computer.analyzeRewrite(new SubProgressMonitor(monitor, 1));", "+", "+\t\t\tthis.createdImports= result.getCreatedImports();", "+\t\t\tthis.createdStaticImports= result.getCreatedStaticImports();", "+", "+\t\t\treturn result.getTextEdit();", "+\t}"]}], "num": 983}