{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7b2f20ffd0193aa2fcd30620a7eb54c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07dc8af76be2b7ddf14486e82f87ad4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedAllocationExpression.java", "commitBeforeChange": "0d32c20ed2cca4af752cdfe8890dae5f9b83ecc6", "commitAfterChange": "e9319b33025ecf8b2148a8134d3733884dd65fff", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t// tolerate some error cases", "-\t\tif (binding == null || ", "-\t\t\t\t!(binding.isValidBinding() || ", "-\t\t\t\t\tbinding.problemId() == ProblemReasons.NotVisible))", "+\t\tif (binding == null) {", "+\t\t}", "+\t\t", "+\t\t// tolerate some error cases", "+\t\tif (!binding.isValidBinding()) {", "+\t\t\tswitch (binding.problemId()) {", "+\t\t\t\tcase ProblemReasons.NotVisible:", "+\t\t\t\t\t// visibility is ignored", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ProblemReasons.NotFound:", "+\t\t\t\t\tif (resolvedType != null && resolvedType.isValidBinding()) {", "+\t\t\t\t\t\tthrow new SelectionNodeFound(resolvedType);", "+\t\t\t\t\t}", "+\t\t\t\t\tthrow new SelectionNodeFound();", "+\t\t\t\tdefault:", "+\t\t\t\t\tthrow new SelectionNodeFound();", "+\t\t\t}", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa53eb8f1465ef9296fd27971d8a6b69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnMessageSend.java", "commitBeforeChange": "56f3bbb73aa99ee6555dd2c0907e97e8dc1e94d7", "commitAfterChange": "c0dbae49a063a155ff0c3258193fbafd8195ac70", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "\r \r \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-public TypeBinding resolveType(BlockScope scope) {\r", "-\tsuper.resolveType(scope);\r", "-\tif (binding == null || !binding.isValidBinding())\r", "-\t\tthrow new SelectionNodeFound();\r", "-\telse\r", "-\t\tthrow new SelectionNodeFound(binding);\r", "-}\r", "+\tpublic TypeBinding resolveType(BlockScope scope) {\r", "+\t\tsuper.resolveType(scope);\r", "+\t\t// tolerate non visible match\r", "+\t\tif (binding == null || !(binding.isValidBinding() || binding.problemId() == ProblemReasons.NotVisible))\r", "+\t\t\tthrow new SelectionNodeFound();\r", "+\t\telse\r", "+\t\t\tthrow new SelectionNodeFound(binding);\r"]}], "num": 12399}