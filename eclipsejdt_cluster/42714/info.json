{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b58299fd2a5234ab5dd4ba5d86097993", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "692f1a98d4215848938aaafb5b24f57a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "\t \tpublic String getOption(String optionName, boolean inheritJavaCoreOptions)", "signatureAfterChange": "\t \tpublic String getOption(String optionName, boolean inheritJavaCoreOptions)", "diff": ["-\t\t// bug 45112 backward compatibility.", "-\t\t// TODO (frederic) remove for 3.0", "-\t\tif (JavaCore.OLD_COMPILER_PB_INVALID_ANNOTATION.equals(optionName)) {", "-\t\t\tpropertyName = JavaCore.COMPILER_PB_INVALID_JAVADOC;", "-\t\t}", "-\t\telse if (JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION.equals(optionName)) {", "-\t\t\tpropertyName = JavaCore.COMPILER_PB_MISSING_JAVADOC;", "-\t\t}", "-\t\t// end bug 45112"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bc8c05e5c1e5e454c4e2b0d61087362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "3f75c9397ff53f65021c19499da76d98c9e23550", "commitAfterChange": "d3a9da1814717a2c18ee252440a7a4915c82ca4d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \t\tprotected boolean parseParam() throws InvalidInputException", "signatureAfterChange": "  \t\tprotected boolean parseParam() throws InvalidInputException", "diff": ["-\t\t\tif (this.identifierPtr < 0) {", "-\t\t\t\t// workaround, empty token should set an empty identifier by scanner and so identifierPtr should be == 0", "-\t\t\t\tif (completionScanner.getCurrentIdentifierSource() == CompletionScanner.EmptyCompletionIdentifier) {", "-\t\t\t\t\tnamePosition = completionScanner.completedIdentifierStart;", "-\t\t\t\t\tstartPosition = completionScanner.completedIdentifierStart;", "-\t\t\t\t\tendPosition = completionScanner.completedIdentifierEnd;", "-\t\t\t\t}", "-\t\t\t} else {", "+\t\t\tif (this.identifierPtr >= 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b707b3887fe3be67f0a3e1579009f9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "e7d68ec2d663a4004dd179e8b24b6bf274b4aec8", "commitAfterChange": "73e990658c0c11a1ac66288f4310a28c7e119a3e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ASTConverter(Map options, boolean resolveBindings, IProgressMonitor monitor)", "signatureAfterChange": "  \tpublic ASTConverter(Map options, boolean resolveBindings, IProgressMonitor monitor)", "diff": ["-\t\tlong sourceLevel = ClassFileConstants.JDK1_3;", "-\t\tif (JavaCore.VERSION_1_4.equals(sourceModeSetting)) {", "-\t\t\tsourceLevel = ClassFileConstants.JDK1_4;", "-\t\t} else if (JavaCore.VERSION_1_5.equals(sourceModeSetting)) {", "-\t\t\tsourceLevel = ClassFileConstants.JDK1_5;", "+\t\tlong sourceLevel = CompilerOptions.versionToJdkLevel(sourceModeSetting);", "+\t\tif (sourceLevel == 0) {", "+\t\t\t// unknown sourceModeSetting", "+\t\t\tsourceLevel = ClassFileConstants.JDK1_3;", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d361e730942cef1b458de3313a2fd4d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitStructureRequestor.java", "commitBeforeChange": "035672481c2d56adf6c244f2439c7ebb1707c88e", "commitAfterChange": "ec5dcab20d3dd38f3f0b34d217969a2e8a9b29f6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " protected void enterType( \tint declarationStart, \tint modifiers, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd, \tchar[] superclass, \tchar[][] superinterfaces)", "signatureAfterChange": " protected void enterType( \tint declarationStart, \tint modifiers, \tchar[] name, \tint nameSourceStart, \tint nameSourceEnd, \tchar[] superclass, \tchar[][] superinterfaces)", "diff": ["-\tif (parentInfo instanceof SourceFieldElementInfo && superclass == null && superinterfaces == null) { // case of enum constant init", "-\t\tsuperclass =  parentHandle.getParent().getElementName().toCharArray();", "-\t\tmodifiers |= Flags.AccEnum;", "-\t}", "-\t"]}], "num": 42714}