{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ecfa55dcdc2b7fdfccbffbef427e397f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "173c010fe987498a80c4ae9fed4a0d01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "6486279fd39d7600a3c581a75f5a979b2834ec56", "commitAfterChange": "ec093de0c723a8394ab4c83656f6e94579a11225", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void tearDownSuite() throws Exception", "signatureAfterChange": " public void tearDownSuite() throws Exception", "diff": ["-\tSystem.out.println();", "+\tStringBuffer buffer = new StringBuffer(LINE_SEPARATOR);", "-\t\t\tSystem.out.print(size);", "-\t\t\tSystem.out.print(\" file\");", "+\t\t\tbuffer.append(size);", "+\t\t\tbuffer.append(\" file\");", "-\t\t\t\tSystem.out.print(\" has \");", "+\t\t\t\tbuffer.append(\" has \");", "-\t\t\t\tSystem.out.print(\"s have \");", "+\t\t\t\tbuffer.append(\"s have \");", "-\t\t\tSystem.out.print(FAILURES[i]);", "-\t\t\tSystem.out.println('!');", "+\t\t\tbuffer.append(FAILURES[i]);", "+\t\t\tbuffer.append('!');", "+\t\t\tbuffer.append(LINE_SEPARATOR);", "-\tSystem.out.println();", "+\tbuffer.append(LINE_SEPARATOR);", "-\t\t\tSystem.out.println(\"List of file(s) with \"+FAILURES[i]+\":\");", "+\t\t\tbuffer.append(\"List of file(s) with \");", "+\t\t\tbuffer.append(FAILURES[i]);", "+\t\t\tbuffer.append(':');", "+\t\t\tbuffer.append(LINE_SEPARATOR);", "-\t\t\t\tSystem.out.println(\"\t- \"+failures.get(j));", "+\t\t\t\tbuffer.append(\"\t- \");", "+\t\t\t\tbuffer.append(failures.get(j));", "+\t\t\t\tbuffer.append(LINE_SEPARATOR);", "+", "+\t// Log failures", "+\tif (LOG_STREAM == null) {", "+\t\tSystem.out.println(buffer.toString());", "+\t} else {", "+\t\tLOG_STREAM.print(buffer.toString());", "+\t\tLOG_STREAM.close();", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53a0eabd137f4d8a65c1589c1cb67b43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "ded90d967b480e6d7d22b3283d60f4ed44ccc489", "commitAfterChange": "18c83b91d182e52feafdad6b2c46eb79ffb0e002", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tprotected void startBuild(Hashtable options, boolean noWarning) throws IOException, CoreException", "signatureAfterChange": " \tprotected void startBuild(Hashtable options, boolean noWarning) throws IOException, CoreException", "diff": ["-\t\t\t/*", "-\t\t\tif (LOG_DIR == null) {", "-\t\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\t\tint max = size > 10 ? 10 : size;", "-\t\t\t\tfor (int i=0; i<max; i++) {", "-\t\t\t\t\tbuffer.append(resources.get(i));", "-\t\t\t\t\tbuffer.append(\":\\n\\t\");", "-\t\t\t\t\tbuffer.append(messages.get(i));", "-\t\t\t\t\tbuffer.append('\\n');", "-\t\t\t\t}", "-\t\t\t\tif (size > max)", "-\t\t\t\t\tbuffer.append(\"...\\n\");", "-\t\t\t\tassertTrue(\"Unexpected marker(s):\\n\" + buffer.toString(), size==0);", "+\t\t\tStringBuffer debugBuffer = new StringBuffer();", "+\t\t\tfor (int i=0; i<size; i++) {", "+\t\t\t\tdebugBuffer.append(resources.get(i));", "+\t\t\t\tdebugBuffer.append(\":\\n\\t\");", "+\t\t\t\tdebugBuffer.append(messages.get(i));", "+\t\t\t\tdebugBuffer.append('\\n');", "-\t\t\t*/", "-//\t\t\tif (LOG_DIR != null || DEBUG) {", "-\t\t\t\tStringBuffer debugBuffer = new StringBuffer();", "-\t\t\t\tfor (int i=0; i<size; i++) {", "-\t\t\t\t\tdebugBuffer.append(resources.get(i));", "-\t\t\t\t\tdebugBuffer.append(\":\\n\\t\");", "-\t\t\t\t\tdebugBuffer.append(messages.get(i));", "-\t\t\t\t\tdebugBuffer.append('\\n');", "-\t\t\t\t}", "-\t\t\t\tSystem.out.println(\"ERROR: Unexpected marker(s):\\n\" + debugBuffer.toString());", "-//\t\t\t}", "+\t\t\tSystem.out.println(this.scenarioShortName+\": Unexpected ERROR marker(s):\\n\" + debugBuffer.toString());", "+\t\t\tSystem.out.println(\"--------------------\");"]}], "num": 17762}