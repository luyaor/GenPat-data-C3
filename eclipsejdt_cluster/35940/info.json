{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a16ea0d233310b87b04279d047713b95", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d5ea0805a3dba0c72c5b4d2f0d52aad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "380f51fb07b01d50fdf783879a49310c31bf8dde", "commitAfterChange": "cdb3e8d99e2ddf40df3afd879c65627abb3809dc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  private boolean isClasspathBroken(IClasspathEntry[] classpath, IProject p) throws CoreException", "signatureAfterChange": "  private boolean isClasspathBroken(JavaProject jProj, boolean tryRepair) throws CoreException", "diff": ["-private boolean isClasspathBroken(IClasspathEntry[] classpath, IProject p) throws CoreException {", "-\tIMarker[] markers = p.findMarkers(IJavaModelMarker.BUILDPATH_PROBLEM_MARKER, false, IResource.DEPTH_ZERO);", "-\tfor (int i = 0, l = markers.length; i < l; i++)", "-\t\tif (markers[i].getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_ERROR)", "+private boolean isClasspathBroken(JavaProject jProj, boolean tryRepair) throws CoreException {", "+\tIMarker[] markers = jProj.getProject().findMarkers(IJavaModelMarker.BUILDPATH_PROBLEM_MARKER, false, IResource.DEPTH_ZERO);", "+\tfor (int i = 0, l = markers.length; i < l; i++) {", "+\t\tif (markers[i].getAttribute(IMarker.SEVERITY, -1) == IMarker.SEVERITY_ERROR) {", "+\t\t\tif (tryRepair) {", "+\t\t\t\tObject code = markers[i].getAttribute(IJavaModelMarker.ID);", "+\t\t\t\tif (code instanceof Integer && ((Integer)code) == IJavaModelStatusConstants.CP_INVALID_EXTERNAL_ANNOTATION_PATH) {", "+\t\t\t\t\tnew ClasspathValidation(jProj).validate();", "+\t\t\t\t\treturn isClasspathBroken(jProj, false);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b85e6dc99059b79122107a3a19c72ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMethod.java", "commitBeforeChange": "c6d4125101bf5167c8111f17bf85f3fddd64ca03", "commitAfterChange": "42809a61ef9e5b72c9cffca62cbb33391fa05b96", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected void toStringName(StringBuffer buffer)", "signatureAfterChange": " protected void toStringName(StringBuffer buffer, int flags)", "diff": ["+}", "+protected void toStringName(StringBuffer buffer, int flags) {", "-\tString[] parameters = this.getParameterTypes();", "+\tString[] parameters = getParameterTypes();", "+\t\tboolean isVarargs = Flags.isVarargs(flags);", "-\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t} else if (isVarargs) {", "+\t\t\t\t// remove array from signature", "+\t\t\t\tString parameter = parameters[i].substring(1);", "+\t\t\t\tbuffer.append(Signature.toString(parameter));", "+\t\t\t\tbuffer.append(\" ...\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de379096b48ce4818a5734fb3b8bf207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "c6d4125101bf5167c8111f17bf85f3fddd64ca03", "commitAfterChange": "42809a61ef9e5b72c9cffca62cbb33391fa05b96", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 26, "signatureBeforeChange": " protected void toStringName(StringBuffer buffer)", "signatureAfterChange": " protected void toStringName(StringBuffer buffer, int flags)", "diff": ["+}", "+protected void toStringName(StringBuffer buffer, int flags) {", "-\tString[] parameters = this.getParameterTypes();", "+\tString[] parameters = getParameterTypes();", "+\t\tboolean isVarargs = Flags.isVarargs(flags);", "-\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));", "+\t\t\t} else if (isVarargs) {", "+\t\t\t\t// remove array from signature", "+\t\t\t\tString parameter = parameters[i].substring(1);", "+\t\t\t\tbuffer.append(Signature.toString(parameter));", "+\t\t\t\tbuffer.append(\" ...\"); //$NON-NLS-1$", "+\t\t\t} else {", "+\t\t\t\tbuffer.append(Signature.toString(parameters[i]));"]}], "num": 35940}