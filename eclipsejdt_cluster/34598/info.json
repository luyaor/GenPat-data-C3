{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2424afb81349d8c59ee913863ead38e6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4193112e4c5bfb9b8d2f59e34e1117b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "7fbe952294966532b57b4bfe2515ab0aecac086b", "commitAfterChange": "08da5fe92b01e8f28a2723830b850e2535cd0d89", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "diff": ["-\t\t\t\t\tindexManager.indexAll(element.getJavaProject().getProject());\r", "+\t\t\t\t\tthis.indexManager.indexAll(element.getJavaProject().getProject());\r", "-\t\t\t\t\tindexManager.removeIndex(element.getJavaProject().getProject().getFullPath());\r", "+\t\t\t\t\tthis.indexManager.discardJobs(element.getElementName());\r", "+\t\t\t\t\tthis.indexManager.removeIndex(element.getJavaProject().getProject().getFullPath());\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e11c4e85284e2b0f18598403aef1e74f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "dfb6faa43f2b4b31b30703252d7bbb74a95630e4", "commitAfterChange": "a434b83fdb35caf549734b6ce8e074f1425aafc9", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "diff": ["-\t\t\t\t\t\tindexManager.removeIndex(jarPath);\r", "+\t\t\t\t\t\tthis.indexManager.discardJobs(jarPath.toString());\r", "+\t\t\t\t\t\tthis.indexManager.removeIndex(jarPath);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95906a7c001b65b4dd430e4c1e39519", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "3bee81801e0cbcb336e03bca8adb4995284ca6ec", "commitAfterChange": "80d1d12dd777676d1d11b6b228822545c397912f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t// must verify that exceptions potentially thrown by this expression are caught in the method", "+\t\t// check captured variables are initialized in current context (26134)", "+\t\tcheckCapturedLocalInitializationIfNecessary(this.binding.declaringClass, currentScope, flowInfo);", "-\t\tif (((thrownExceptions = binding.thrownExceptions).length) != 0) {", "+\t\tif (((thrownExceptions = this.binding.thrownExceptions).length) != 0) {", "+\t\t"]}], "num": 34598}