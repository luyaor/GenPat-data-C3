{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4466ad1de6897ee6d3af214b8f53f917", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72052da235c04f95a634682b94c4bee2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "1203ec285e9510454e7eee6b9217d8d694a24e95", "commitAfterChange": "fe9d56739c7ee5a42ad73e908441932d571ee55b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public MethodPattern( \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tString returnSignature, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tString[] parameterSignatures, \tIMethod method, \tint limitTo, \tint matchRule)", "signatureAfterChange": " public MethodPattern( \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tString returnSignature, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tString[] parameterSignatures, \tIMethod method, \tint limitTo, \tint matchRule)", "diff": ["-//\tString genericSignature = null;", "-\tString key;", "-\tif (method.isResolved() && (new BindingKey(key = method.getKey())).isParameterizedMethod()) {", "-\t\tgenericDeclaringTypeSignature = Util.getDeclaringTypeSignature(key);", "+\tif (method.isResolved()) {", "+\t\tString key = method.getKey();", "+\t\tBindingKey bindingKey = new BindingKey(key);", "+\t\tif (bindingKey.isParameterizedType()) {", "+\t\t\tgenericDeclaringTypeSignature = Util.getDeclaringTypeSignature(key);", "+\t\t\t// Store type signature and arguments for declaring type", "+\t\t\tif (genericDeclaringTypeSignature != null) {", "+\t\t\t\t\tthis.typeSignatures = Util.splitTypeLevelsSignature(genericDeclaringTypeSignature);", "+\t\t\t\t\tsetTypeArguments(Util.getAllTypeArguments(this.typeSignatures));", "+\t\t\t}", "+\t\t}", "-\t}", "-", "-\t// Store type signature and arguments for declaring type", "-\tif (genericDeclaringTypeSignature != null) {", "-\t\tthis.typeSignatures = Util.splitTypeLevelsSignature(genericDeclaringTypeSignature);", "-\t\tsetTypeArguments(Util.getAllTypeArguments(this.typeSignatures));", "-\t} else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "723a74356d8b3f6b7daa9881e74aa823", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "1203ec285e9510454e7eee6b9217d8d694a24e95", "commitAfterChange": "fe9d56739c7ee5a42ad73e908441932d571ee55b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public ConstructorPattern( \tchar[] declaringSimpleName,\t \tchar[] declaringQualification, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tString[] parameterSignatures, \tIMethod method, \tint limitTo, \tint matchRule)", "signatureAfterChange": " public ConstructorPattern( \tchar[] declaringSimpleName,\t \tchar[] declaringQualification, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tString[] parameterSignatures, \tIMethod method, \tint limitTo, \tint matchRule)", "diff": ["-\tString key;", "-\tBindingKey bindingKey;", "-\tif (method.isResolved() && ((bindingKey = new BindingKey(key = method.getKey())).isParameterizedType() || bindingKey.isParameterizedMethod())) {", "-\t\tgenericDeclaringTypeSignature = Util.getDeclaringTypeSignature(key);", "+\tif (method.isResolved()) {", "+\t\tString key = method.getKey();", "+\t\tBindingKey bindingKey = new BindingKey(key);", "+\t\tif (bindingKey.isParameterizedType()) {", "+\t\t\tgenericDeclaringTypeSignature = Util.getDeclaringTypeSignature(key);", "+\t\t\t// Store type signature and arguments for declaring type", "+\t\t\tif (genericDeclaringTypeSignature != null) {", "+\t\t\t\t\tthis.typeSignatures = Util.splitTypeLevelsSignature(genericDeclaringTypeSignature);", "+\t\t\t\t\tsetTypeArguments(Util.getAllTypeArguments(this.typeSignatures));", "+\t\t\t}", "+\t\t}", "-\t\tconstructorParameters = true;", "-\t}", "-", "-\t// Store type signature and arguments for declaring type", "-\tif (genericDeclaringTypeSignature != null) {", "-\t\tthis.typeSignatures = Util.splitTypeLevelsSignature(genericDeclaringTypeSignature);", "-\t\tsetTypeArguments(Util.getAllTypeArguments(this.typeSignatures));", "-\t} else {", "+\t\tthis.constructorParameters = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a85fb90640fff95db60ef171c98d8f57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "b7b27ff488733ad97566caef0cb2bdd99a3b7b63", "commitAfterChange": "d2bf5e6bc7d5c8ce5696375ed384baae09128c52", "methodNumberBeforeChange": 401, "methodNumberAfterChange": 400, "signatureBeforeChange": " protected void resetStacks()", "signatureAfterChange": " protected void resetStacks()", "diff": ["-\tif (this.scanner != null && this.scanner.currentLine != null) {", "-\t\tthis.scanner.currentLine.clear();", "+\tif (this.scanner != null) {", "+\t\tfinal NLSLine line = this.scanner.currentLine;", "+\t\tif (line != null) {", "+\t\t\tline.clear();", "+\t\t}"]}], "num": 15912}