{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42369cf24f886f7bc85ab29ec353710f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28c1574c835173ba19e8ce317a967c98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void test022() throws Exception", "signatureAfterChange": " \t \tpublic void test033_field() throws Exception", "diff": ["-\t// local variable + generic or array", "-\tpublic void test022() throws Exception {", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface A {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"B.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface B {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"C.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface C {\\n\" + ", "-\t\t\t\t\"\tchar value() default '-';\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"\tString[][] bar() {\\n\" + ", "-\t\t\t\t\"\t\treturn new String[][] {};\" +", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tvoid foo(String s) {\\n\" + ", "-\t\t\t\t\"\t\t@C int i;\\n\" + ", "-\t\t\t\t\"\t\t@A String [] @B(3)[] tab = bar();\\n\" + ", "-\t\t\t\t\"\t\tif (tab != null) {\\n\" + ", "-\t\t\t\t\"\t\t\ti = 0;\\n\" + ", "-\t\t\t\t\"\t\t\tSystem.out.println(i + tab.length);\\n\" + ", "-\t\t\t\t\"\t\t} else {\\n\" + ", "-\t\t\t\t\"\t\t\tSystem.out.println(tab.length);\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t\ti = 4;\\n\" + ", "-\t\t\t\t\"\t\tSystem.out.println(-i + tab.length);\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\"      #49 @C(\\n\" + ", "-\t\t\t\"        target type = 0x8 LOCAL_VARIABLE\\n\" + ", "-\t\t\t\"        local variable entries:\\n\" + ", "-\t\t\t\"          [pc: 11, pc: 24] index: 2\\n\" + ", "-\t\t\t\"          [pc: 34, pc: 46] index: 2\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"      #50 @A(\\n\" + ", "-\t\t\t\"        target type = 0x9 LOCAL_VARIABLE_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        local variable entries:\\n\" + ", "-\t\t\t\"          [pc: 5, pc: 46] index: 3\\n\" + ", "-\t\t\t\"        locations = {1}\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "-\t\t\t\"      #45 @B(\\n\" + ", "-\t\t\t\"        #46 value=(int) 3 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x9 LOCAL_VARIABLE_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        local variable entries:\\n\" + ", "-\t\t\t\"          [pc: 5, pc: 46] index: 3\\n\" + ", "-\t\t\t\"        locations = {0}\\n\" + ", "+\t", "+\tpublic void test033_field() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"import java.lang.annotation.*;\\n\" + ", "+\t\t\t\t\"@Target(ElementType.TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(RetentionPolicy.RUNTIME)\\n\" + ", "+\t\t\t\t\"@interface A {}\\n\",", "+\t\t\t\t", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tjava.util.List<@A String> field;\\n\" +", "+\t\t\t\t\"}\",", "+\t\t},", "+\t\t\"\");", "+\t\t// javac-b81: Bytes:10[0 1 19 1 3 0 0 9 0 0]", "+\t\tString expectedOutput =", "+\t\t\t\"    RuntimeVisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"      #10 @A(\\n\" + ", "+\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\"        location = [TYPE_ARGUMENT(0)]\\n\" + ", "+\t\t\t\"      )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d96bc41895850c066c4f3cf7d6c202d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TypeAnnotationTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void test031() throws Exception", "signatureAfterChange": " \t \tpublic void test046_methodParameter() throws Exception", "diff": ["+\t", "+\tpublic void test046_methodParameter() throws Exception {", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\tint foo(int i, double d, @B(3) String s) {\\n\" +", "+\t\t\t\t\"\t\treturn s.length();\\n\" +", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t\t\t", "+\t\t\t\t\"B.java\",", "+\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "+\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "+\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "+\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "+\t\t\t\t\"@Retention(CLASS)\\n\" + ", "+\t\t\t\t\"@interface B {\\n\" + ", "+\t\t\t\t\"\tint value() default -1;\\n\" + ", "+\t\t\t\t\"}\",", "+\t\t},", "+\t\t\"\");", "+\t\t// javac-b81: Bytes:14[0 1 22 1 0 0 11 0 1 0 12 73 0 13]", "+\t\tString expectedOutput =", "+\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\"      #29 @B(\\n\" + ", "+\t\t\t\"        #30 value=(int) 3 (constant type)\\n\" + ", "+\t\t\t\"        target type = 0x16 METHOD_FORMAL_PARAMETER\\n\" + ", "+\t\t\t\"        method parameter index = 2\\n\" + ", "+\t\t\t\"      )\\n\";", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"X.class\", \"X\", expectedOutput, ClassFileBytesDisassembler.SYSTEM);", "+\t}", "-\t// method type parameter bound generic or array", "-\tpublic void test031() throws Exception {", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"A.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface A {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"B.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface B {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"C.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_USE)\\n\" + ", "-\t\t\t\t\"@Retention(CLASS)\\n\" + ", "-\t\t\t\t\"@interface C {\\n\" + ", "-\t\t\t\t\"\tint value() default -1;\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"D.java\",", "-\t\t\t\t\"import java.lang.annotation.Target;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.ElementType.*;\\n\" + ", "-\t\t\t\t\"import java.lang.annotation.Retention;\\n\" + ", "-\t\t\t\t\"import static java.lang.annotation.RetentionPolicy.*;\\n\" + ", "-\t\t\t\t\"@Target(TYPE_PARAMETER)\\n\" + ", "-\t\t\t\t\"@Retention(RUNTIME)\\n\" + ", "-\t\t\t\t\"@interface D {\\n\" + ", "-\t\t\t\t\"\tString value() default \\\"default\\\";\\n\" + ", "-\t\t\t\t\"Z.java\",", "-\t\t\t\t\"public class Z<T> {}\",", "-\t\t\t\t\"\t<@D U, T extends Z<@A String @C[][]@B[]> & @B(3) Cloneable> void foo(U u, T t) {}\\n\" +", "-\t\t\t\"      #31 @D(\\n\" + ", "-\t\t\t\"        target type = 0x20 METHOD_TYPE_PARAMETER\\n\" + ", "-\t\t\t\"        type parameter index = 0\\n\" + ", "-\t\t\t\"      #32 @A(\\n\" + ", "-\t\t\t\"        target type = 0x13 METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        type parameter index = 1 type parameter bound index = 0\\n\" + ", "-\t\t\t\"        locations = {0,2}\\n\" + ", "-\t\t\t\"      #26 @C(\\n\" + ", "-\t\t\t\"        target type = 0x13 METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        type parameter index = 1 type parameter bound index = 0\\n\" + ", "-\t\t\t\"        locations = {0}\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"      #27 @B(\\n\" + ", "-\t\t\t\"        target type = 0x13 METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY\\n\" + ", "-\t\t\t\"        type parameter index = 1 type parameter bound index = 0\\n\" + ", "-\t\t\t\"        locations = {0,1}\\n\" + ", "-\t\t\t\"      )\\n\" + ", "-\t\t\t\"      #27 @B(\\n\" + ", "-\t\t\t\"        #28 value=(int) 3 (constant type)\\n\" + ", "-\t\t\t\"        target type = 0x12 METHOD_TYPE_PARAMETER_BOUND\\n\" + ", "-\t\t\t\"        type parameter index = 1 type parameter bound index = 1\\n\" + "]}], "num": 43641}