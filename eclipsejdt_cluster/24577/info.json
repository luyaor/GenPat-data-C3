{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8510c8a1b3b1f8ad873954125dd16c0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c6ed18146ab1d4b77468235121b7c04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a708a833352a17a462cbe9e9346d660fa6317a1e", "commitAfterChange": "0e8e783b8823e467b82792c7ef9289caad32e202", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 57, "signatureBeforeChange": "  \tprivate void printBlockCommentHeaderLine(StringBuffer buffer)", "signatureAfterChange": "  \tprivate void printBlockCommentHeaderLine(StringBuffer buffer)", "diff": ["-\t    \tStringBuffer insert = new StringBuffer();", "-\t    \tinsert.append(this.lineSeparator);", "+\t    \tthis.tempBuffer.setLength(0);", "+\t    \tthis.tempBuffer.append(this.lineSeparator);", "-\t    \tprintIndentationIfNecessary(insert);", "-\t    \tinsert.append(BLOCK_LINE_PREFIX);", "+\t\t\tprintIndentationIfNecessary(this.tempBuffer);", "+\t    \tthis.tempBuffer.append(BLOCK_LINE_PREFIX);", "-\t    \tbuffer.insert(0, insert.toString());", "+\t    \tbuffer.insert(0, this.tempBuffer.toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ac97b2477196d23642394348109b368", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "6e72651dcdb7889db1f539504aa6882d0755cb06", "commitAfterChange": "3cd6c6019199ef77159b2d8f74a256f0294dd83c", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic boolean hasClasspathCycle(IClasspathEntry[] entries)", "signatureAfterChange": " \tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath)", "diff": ["-\tpublic boolean hasClasspathCycle(IClasspathEntry[] entries) {", "-\t\t", "-\t\tHashSet cycleParticipants = new HashSet();", "-\t\tupdateCycleParticipants(entries, new ArrayList(), cycleParticipants, getWorkspace().getRoot());", "-\t\treturn !cycleParticipants.isEmpty();", "+\tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath) {", "+\t\tHashSet visited = new HashSet();", "+\t\tvisited.add(getElementName());", "+\t\treturn hasClasspathCycle(preferredClasspath, visited, ResourcesPlugin.getWorkspace().getRoot());", "+\t}"]}], "num": 24577}