{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d034e9a675af4ea3de8913a74f9d4fcc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24b2c2b4e3ee894337422e36c68494e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodDeclaration.java", "commitBeforeChange": "ebf5deb17f462a2a1a50c9b4076f1d52394081e1", "commitAfterChange": "a6672627189e3721a2c066ce225fd09afe979f63", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tvoid accept0(ASTVisitor visitor)", "signatureAfterChange": " \tvoid accept0(ASTVisitor visitor)", "diff": ["-\t\t\t\tacceptChildren(visitor, this.extraDimensionInfos);", "+\t\t\t\tacceptChildren(visitor, this.extraDimensionInfos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d6d49238a1237fc5f86ad55c8fc2d7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "e73fec9ebc1e2bb3cd00d457b0e3583658fef4f1", "commitAfterChange": "fccc3c9fd12b95c908b1566d2444bf312ceefff2", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void shutdown()", "signatureAfterChange": " \tpublic void shutdown()", "diff": ["-\t\tthis.processingThread = null; // mark the job manager as shutting down so that the thread will stop by itself", "+\t\t\t\t\tthis.processingThread = null; // mark the job manager as shutting down so that the thread will stop by itself", "+\t\t\t\t// in case processing thread is handling a job"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62d65d92ddd72ba2f516e566ec3b8aef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "90446deb5ff00e2c453829fc18ea8a59d5a8861c", "commitAfterChange": "ef64dfb1a9bd58abd3ed7efdfca1e31c5bb17269", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tprivate void completionOnReferenceExpressionName(ASTNode astNode, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": " \tprivate void completionOnReferenceExpressionName(ASTNode astNode, Binding qualifiedBinding, Scope scope)", "diff": ["+\t\t\t\tsetSourceAndTokenRange(referenceExpression.nameSourceStart, referenceExpression.sourceEnd);", "-\t\t\t\t\tsetSourceAndTokenRange(referenceExpression.nameSourceStart, referenceExpression.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "693822c2f82e87789546f9e77e789bd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "76f5a1c536420ff37c3b13a645ebec88bfc3c494", "commitAfterChange": "902ad81671a3859ccd7100f43d06275b71901e88", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, IWorkingCopy[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " private void buildForProject(JavaProject project, ArrayList infos, ArrayList units, IWorkingCopy[] workingCopies, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\ttry {", "-\t\t\t\tthis.hierarchyResolver = ", "-\t\t\t\t\tnew HierarchyResolver(this.searchableEnvironment, project.getOptions(true), this, new DefaultProblemFactory());", "-\t\t\t\tif (focusType != null) {", "-\t\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "-\t\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "-\t\t\t\t\tif (focusTypeBinding == null ", "-\t\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {", "-\t\t\t\t\t\t// focus type is not visible in this project: no need to go further", "-\t\t\t\t\t\treturn;", "-\t\t\t\t\t}", "+\t\t}", "+\t\ttry {", "+\t\t\tthis.hierarchyResolver = ", "+\t\t\t\tnew HierarchyResolver(this.searchableEnvironment, project.getOptions(true), this, new DefaultProblemFactory());", "+\t\t\tif (focusType != null) {", "+\t\t\t\tchar[] fullyQualifiedName = focusType.getFullyQualifiedName().toCharArray();", "+\t\t\t\tReferenceBinding focusTypeBinding = this.hierarchyResolver.setFocusType(CharOperation.splitOn('.', fullyQualifiedName));", "+\t\t\t\tif (focusTypeBinding == null ", "+\t\t\t\t\t|| (!inProjectOfFocusType && (focusTypeBinding.tagBits & TagBits.HierarchyHasProblems) > 0)) {", "+\t\t\t\t\t// focus type is not visible in this project: no need to go further", "+\t\t\t\t\treturn;", "-\t\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits, monitor);", "-\t\t\t} finally {", "-\t\t\t\tif (inProjectOfFocusType) {", "-\t\t\t\t\tthis.nameLookup.setUnitsToLookInside(null);", "-\t\t\t\t}", "+\t\t\t}", "+\t\t\tthis.hierarchyResolver.resolve(genericTypes, compilationUnits, monitor);", "+\t\t} finally {", "+\t\t\tif (inProjectOfFocusType) {", "+\t\t\t\tthis.nameLookup.setUnitsToLookInside(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80a679c0f4e330e98942d388ad0a8021", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "bf4b5cbb0c17d86f379f63c2109dde3d8c4c0801", "commitAfterChange": "bd673e70d2edbc0e521113de6223a36ce39b9f38", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void setDepth(int depth)", "signatureAfterChange": "  \tpublic void setDepth(int depth)", "diff": ["+\t\tbits &= ~DepthMASK; // flush previous depth if any\t\t\t", "-\t\t\tbits &= ~DepthMASK; // flush previous depth if any\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9534ec62536f0db7cc279d6b85d34184", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration, \t\t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope)", "diff": ["-\tpublic boolean visit(", "-\t\t\tAnonymousLocalTypeDeclaration anonymousTypeDeclaration,", "-\t\t\tBlockScope scope) {", "+\t}", "+\tpublic boolean visit(AnonymousLocalTypeDeclaration anonymousTypeDeclaration, BlockScope scope) {", "+\t\t\treturn false; // don't visit members as this was done during reportMatching(...)", "-\t\treturn false; // don't visit members as this was done during reportMatching(...)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b11c752fe39f47b378822f13c802abc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "ddff8dde894947390c9a90bd347a6ae6239b2112", "commitAfterChange": "e1bb62a6f97249ff77a2f0164d289109644f1d09", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public FieldBinding resolveTypeFor(FieldBinding field)", "signatureAfterChange": " public FieldBinding resolveTypeFor(FieldBinding field)", "diff": ["+\t\t\t\tAnnotation.isTypeUseCompatible(fieldDecl.type, this.scope, fieldDecl.annotations);", "-\t\t\tAnnotation.isTypeUseCompatible(fieldDecl.type, this.scope, fieldDecl.annotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2cc0de123f519c3558764729a95ece5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "79230cd7762a4c67bbe12b2445e22b464f420455", "commitAfterChange": "0e2b95cbd8acd25a30eff4aa5a4e5b34fa13b0c5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void discardJobsUntilNextProjectAddition(String jobFamily)", "signatureAfterChange": "\r public void discardJobsUntilNextProjectAddition(String jobFamily)", "diff": ["+\t\t\t\tcurrentJob.cancel();\r", "-\t\t\t\t\t// request a cancel and wait until current job has accepted the cancel\r", "-\t\t\t\t\tcurrentJob.cancel();\r", "+\t\t\t\t\t// wait until current active job has accepted the cancel\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a432f18b4e771ab0ac3136e0bce8d8c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayAllocationExpression.java", "commitBeforeChange": "a51f0328f1978f4c547fe994573879b0bcceba88", "commitAfterChange": "cbe22d350fa314e6e5df169cf670cab9bb8c2a20", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\tif (this.annotationsOnDimensions != null) {", "+\t\t\t\tthis.resolvedType = resolveAnnotations(scope, this.annotationsOnDimensions, this.resolvedType);", "+\t\t\t}", "+", "-\t\t}", "-\t\tif (this.annotationsOnDimensions != null) {", "-\t\t\tthis.resolvedType = resolveAnnotations(scope, this.annotationsOnDimensions, this.resolvedType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad8789e9f28cafbb025cf2e20f5b3d47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "ebc568fad377cf85a79bc0aeeea9122e5115f057", "commitAfterChange": "75c11b9993cee3cc0c66baeb87390d3f47878de0", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit,  \t\t\tICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "signatureAfterChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit,  \t\t\tICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\t\t\t\tgetMethodBodies(unit, 0);", "+\t\t\tgetMethodBodies(unit, 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6c5afa26714611e719a573f362ebdec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "9fa3233c96ef5a5d9fd8dee21980d4556ff02acf", "commitAfterChange": "aaf170940df69859b8346215378f5413e498b0cd", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "\r \tprotected Object readState(IProject project) throws CoreException", "signatureAfterChange": "\r \tprotected Object readState(IProject project) throws CoreException", "diff": ["-\t\t\t\t\telse if (JavaBuilder.DEBUG)\r", "+\t\t\t\t\tif (JavaBuilder.DEBUG)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de9ac67aa39fd4cb319ae519eb345a32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "b16af955ad096598d372b7b23da79db705ddee11", "commitAfterChange": "906228369eed23f930bc548422a9ed0c01a3237e", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "  protected void appendNullAnnotation(StringBuffer nameBuffer, CompilerOptions options)", "signatureAfterChange": "  protected void appendNullAnnotation(StringBuffer nameBuffer, CompilerOptions options)", "diff": ["-\t    } else if ((this.tagBits & TagBits.AnnotationNullable) != 0) {", "+\t    }", "+\t    if ((this.tagBits & TagBits.AnnotationNullable) != 0) {"]}], "num": 57282}