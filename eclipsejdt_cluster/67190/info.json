{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d394bdc6d7e279dc45a367d19219515", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71df4ea0200f6eb560edd4603fab8475", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "4d55f350050ba4edf3b2412d978c3ac5196dfdab", "commitAfterChange": "5ecb122541edd5248d78fa71da4e765f09449a6c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void removeTempClass(String className)", "signatureAfterChange": "  \tpublic void removeTempClass(String className)", "diff": ["-\t\tString[] filesNames = dir.list();", "-\t\tfor (int i = 0, max = filesNames.length; i < max; i++) {", "-\t\t\tif (filesNames[i].indexOf(className) != -1) {", "-\t\t\t\tnew File(SOURCE_DIRECTORY + File.separator + filesNames[i]).delete();", "+\t\tString[] fileNames = dir.list();", "+\t\tif (fileNames != null) {", "+\t\t\tfor (int i = 0, max = fileNames.length; i < max; i++) {", "+\t\t\t\tif (fileNames[i].indexOf(className) != -1) {", "+\t\t\t\t\tnew File(SOURCE_DIRECTORY + File.separator + fileNames[i]).delete();", "+\t\t\t\t}", "-\t\tfilesNames = dir.list();", "-\t\tfor (int i = 0, max = filesNames.length; i < max; i++) {", "-\t\t\tif (filesNames[i].indexOf(className) != -1) {", "-\t\t\t\tnew File(EVAL_DIRECTORY + File.separator + filesNames[i]).delete();", "+\t\tfileNames = dir.list();", "+\t\tif (fileNames != null) {", "+\t\t\tfor (int i = 0, max = fileNames.length; i < max; i++) {", "+\t\t\t\tif (fileNames[i].indexOf(className) != -1) {", "+\t\t\t\t\tnew File(EVAL_DIRECTORY + File.separator + fileNames[i]).delete();", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a023a11d02452d6e3577f1796dcd8b96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileComparatorTest.java", "commitBeforeChange": "4d55f350050ba4edf3b2412d978c3ac5196dfdab", "commitAfterChange": "5ecb122541edd5248d78fa71da4e765f09449a6c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void removeTempClass(String className)", "signatureAfterChange": "  \tpublic void removeTempClass(String className)", "diff": ["-\t\tString[] filesNames = dir.list();", "-\t\tfor (int i = 0, max = filesNames.length; i < max; i++) {", "-\t\t\tif (filesNames[i].indexOf(className) != -1) {", "-\t\t\t\tnew File(SOURCE_DIRECTORY + File.separator + filesNames[i]).delete();", "+\t\tString[] fileNames = dir.list();", "+\t\tif (fileNames != null) {", "+\t\t\tfor (int i = 0, max = fileNames.length; i < max; i++) {", "+\t\t\t\tif (fileNames[i].indexOf(className) != -1) {", "+\t\t\t\t\tnew File(SOURCE_DIRECTORY + File.separator + fileNames[i]).delete();", "+\t\t\t\t}", "-\t\tfilesNames = dir.list();", "-\t\tfor (int i = 0, max = filesNames.length; i < max; i++) {", "-\t\t\tif (filesNames[i].indexOf(className) != -1) {", "-\t\t\t\tnew File(EVAL_DIRECTORY + File.separator + filesNames[i]).delete();", "+\t\tfileNames = dir.list();", "+\t\tif (fileNames != null) {", "+\t\t\tfor (int i = 0, max = fileNames.length; i < max; i++) {", "+\t\t\t\tif (fileNames[i].indexOf(className) != -1) {", "+\t\t\t\t\tnew File(EVAL_DIRECTORY + File.separator + fileNames[i]).delete();", "+\t\t\t\t}"]}], "num": 67190}