{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "805e850bb8d1f1e0d26f7ddfe2e4ea9a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e89e62582d380ab970837a35b8c89ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "7389e11979cd050788c8fca32e602540d323e3bc", "commitAfterChange": "f648e00954eb66eab2f0a3616ffa7ea04e41eae3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["-\t\tchar current = peekChar();", "-\t\tswitch (current) {", "-\t\t\tcase '*' :", "-\t\t\tcase '\\u000c' :", "-\t\t\tcase ' ' :", "-\t\t\tcase '\\t' :", "-\t\t\tcase '\\r' :", "-\t\t\tcase '\\n' :", "-\t\t\t\tint end = this.index - 1;", "-\t\t\t\tif (startPosition <= this.cursorLocation && this.cursorLocation <= end) {", "-\t\t\t\t\t// completion on empty '@' => all tags", "-\t\t\t\t\tlong position = (((long)end)<<32) + end;", "-\t\t\t\t\tchar[][][] tags = possibleTags(null, this.lineStarted);", "-\t\t\t\t\tif (tags != null) {", "-\t\t\t\t\t\tthis.completionNode = new CompletionOnJavadocTag(null, position, startPosition, end, tags);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\tboolean ls = this.lineStarted;", "-\t\t\t\treadTokenSafely();", "-\t\t\t\tend = this.index - 1;", "-\t\t\t\tif (startPosition <= this.cursorLocation && this.cursorLocation <= end) {", "-\t\t\t\t\tif (this.inlineTagStarted && this.scanner.currentCharacter == '}') {", "-\t\t\t\t\t\tend = this.scanner.currentPosition;", "-\t\t\t\t\t}", "-\t\t\t\t\tlong position = (((long)this.scanner.getCurrentTokenStartPosition())<<32) + end;", "-\t\t\t\t\tchar[] prefix = this.scanner.getCurrentIdentifierSource();", "-\t\t\t\t\tchar[][][] tags = possibleTags(prefix, ls);", "-\t\t\t\t\tif (tags != null) {", "-\t\t\t\t\t\tthis.completionNode = new CompletionOnJavadocTag(prefix, position, startPosition, end, tags);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+\t\tboolean newLine = !this.lineStarted;", "+\t\tboolean valid = super.parseTag(previousPosition);", "+\t\tboolean inCompletion = (this.tagSourceStart <= (this.cursorLocation+1) && this.cursorLocation <= this.tagSourceEnd) // completion cursor is between first and last stacked identifiers", "+\t\t\t|| ((this.tagSourceStart == (this.tagSourceEnd+1) && this.tagSourceEnd == this.cursorLocation)); // or it's a completion on empty token", "+\t\tif (inCompletion) {", "+\t\t\tint end = this.tagSourceEnd;", "+\t\t\tif (this.inlineTagStarted && this.scanner.currentCharacter == '}') {", "+\t\t\t\tend = this.scanner.currentPosition;", "+\t\t\t}", "+\t\t\tlong position = (((long)startPosition)<<32) + end;", "+\t\t\tint length = this.tagSourceEnd-this.tagSourceStart+1;", "+\t\t\tchar[] tag = new char[length];", "+\t\t\tSystem.arraycopy(this.source, this.tagSourceStart, tag, 0, length);", "+\t\t\tchar[][][] tags = possibleTags(tag, newLine);", "+\t\t\tif (tags != null) {", "+\t\t\t\tthis.completionNode = new CompletionOnJavadocTag(tag, position, startPosition, end, tags);", "+\t\t\t}", "-\t\treturn super.parseTag(previousPosition);", "+\t\treturn valid;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e2c3ca77ff6e2c6d9741f14d9c9ac1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadocParser.java", "commitBeforeChange": "eb1301b98f2da1fb78fff513bcf414717fc53a5b", "commitAfterChange": "3707a04a590722ca1140d7955ba0f8b75fc66814", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected Object createTypeReference(int primitiveToken)", "signatureAfterChange": " \tprotected Object createTypeReference(int primitiveToken)", "diff": ["-\t\t\tif (this.identifierStack[this.identifierPtr] == CompletionScanner.EmptyCompletionIdentifier) {", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t\t// See if completion is in qualification", "-\t\t\tint size = nbIdentifiers;", "-\t\t\tif (this.tagSourceStart <= this.cursorLocation && this.cursorLocation <= this.tagSourceEnd) {", "-\t\t\t\tfor (size=0; size<nbIdentifiers; size++) {", "-\t\t\t\t\tint start = (int) (this.identifierPositionStack[size] >>> 32);", "-\t\t\t\t\tint end = (int) this.identifierPositionStack[size];", "-\t\t\t\t\tif (start <= this.cursorLocation && this.cursorLocation <= end) {", "-\t\t\t\t\t\tsize++;", "-\t\t\t\t\t\tbreak;", "+\t\t\tfor (int i=startPtr; i<this.identifierPtr; i++) {", "+\t\t\t\tint start = (int) (this.identifierPositionStack[i] >>> 32);", "+\t\t\t\tint end = (int) this.identifierPositionStack[i];", "+\t\t\t\tif (start <= this.cursorLocation && this.cursorLocation <= end) {", "+\t\t\t\t\tif (i == startPtr) {", "+\t\t\t\t\t\tthis.completionNode = new CompletionOnJavadocSingleTypeReference(", "+\t\t\t\t\t\t\t\t\tthis.identifierStack[startPtr],", "+\t\t\t\t\t\t\t\t\tthis.identifierPositionStack[startPtr],", "+\t\t\t\t\t\t\t\t\tthis.tagSourceStart,", "+\t\t\t\t\t\t\t\t\tthis.tagSourceEnd);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tchar[][] tokens = new char[i][];", "+\t\t\t\t\t\tSystem.arraycopy(this.identifierStack, startPtr, tokens, 0, i);", "+\t\t\t\t\t\tlong[] positions = new long[i+1];", "+\t\t\t\t\t\tSystem.arraycopy(this.identifierPositionStack, startPtr, positions, 0, i+1);", "+\t\t\t\t\t\tthis.completionNode = new CompletionOnJavadocQualifiedTypeReference(tokens, this.identifierStack[i], positions, this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t\t\tbreak;", "-\t\t\t", "-\t\t\t// Copy only tokens necessary for completion", "-\t\t\tchar[][] tokens = new char[size-1][];", "-\t\t\tSystem.arraycopy(this.identifierStack, startPtr, tokens, 0, size-1);", "-\t\t\tlong[] positions = new long[size];", "-\t\t\tSystem.arraycopy(this.identifierPositionStack, startPtr, positions, 0, size);", "-\t\t\tthis.completionNode = new CompletionOnJavadocQualifiedTypeReference(tokens, this.identifierStack[this.identifierPtr], positions, this.tagSourceStart, this.tagSourceEnd);", "+\t\t\tif (this.completionNode == null) {", "+\t\t\t\tchar[][] tokens = new char[nbIdentifiers-1][];", "+\t\t\t\tSystem.arraycopy(this.identifierStack, startPtr, tokens, 0, nbIdentifiers-1);", "+\t\t\t\tlong[] positions = new long[nbIdentifiers];", "+\t\t\t\tSystem.arraycopy(this.identifierPositionStack, startPtr, positions, 0, nbIdentifiers);", "+\t\t\t\tthis.completionNode = new CompletionOnJavadocQualifiedTypeReference(tokens, this.identifierStack[this.identifierPtr], positions, this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t}"]}], "num": 29941}