{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04323bffbcf3c98bf2465885c6c2612e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31d066371b1d0f03c2f5a20c8ca660a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cc0ef1d5e003ee3b62672de56257b8d688621bfb", "commitAfterChange": "f550bd975516f38afc7e75acccf964ac012b15c3", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 86, "signatureBeforeChange": "  public void testCompletionBasicVariableDeclaration1() throws JavaModelException", "signatureAfterChange": "  public void testCompletionBasicVariableDeclaration1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true, false, true, true, false, true);", "+\t\t", "+\tint rStart = str.lastIndexOf(\"obj\");", "+\tint rEnd = rStart + \"obj\".length();", "+", "+\tint tStart = rStart;", "+\tint tEnd = rEnd;", "-\t\t\"object[VARIABLE_DECLARATION]{object, null, Ljava.lang.Object;, object, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE+ R_NAME_LESS_NEW_CHARACTERS + R_NON_RESTRICTED) + \"}\",", "+\t\t\"object[VARIABLE_DECLARATION]{object, null, Ljava.lang.Object;, object, null, replace[\"+rStart+\", \"+rEnd+\"], token[\"+tStart+\", \"+tEnd+\"], \" + (R_DEFAULT + R_INTERESTING + R_CASE+ R_NAME_LESS_NEW_CHARACTERS + R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41c423ba3c0e6dadf1d1ff3c4ae15aa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cbce30b9f59e4652d4bd8e53671da318f5703bbd", "commitAfterChange": "bb6274460011ae3e14410332fdec5a35eeffca9b", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void testCompletionAfterInstanceof07() throws JavaModelException", "signatureAfterChange": " public void testCompletionAfterInstanceof07() throws JavaModelException", "diff": ["+\tint start2 = str.lastIndexOf(\"a.equal\");", "+\tint end2 = start2 + \"a.equal\".length();", "+\tint start3 = str.lastIndexOf(\"a.\");", "+\tint end3 = start3 + \"a\".length();", "-\t\t\t\"equals[METHOD_REF]{equals(), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), replace[\"+start1+\", \"+end1+\"], token[\"+start1+\", \"+end1+\"], \" + (relevance1) + \"}\",", "+\t\t\t\"equals[METHOD_REF]{equals(), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), replace[\"+start1+\", \"+end1+\"], token[\"+start1+\", \"+end1+\"], \" + (relevance1) + \"}\\n\" +", "+\t\t\t\"equalsFoo[METHOD_REF_WITH_CASTED_RECEIVER]{((CompletionAfterInstanceOf)a).equalsFoo(), Ltest.CompletionAfterInstanceOf;, ()V, Ltest.CompletionAfterInstanceOf;, equalsFoo, null, replace[\"+start2+\", \"+end2+\"], token[\"+start1+\", \"+end1+\"], receiver[\"+start3+\", \"+end3+\"], \" + (relevance1) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4533b55b0f76da52eaae2d98a8aeec23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cbce30b9f59e4652d4bd8e53671da318f5703bbd", "commitAfterChange": "bb6274460011ae3e14410332fdec5a35eeffca9b", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 70, "signatureBeforeChange": " public void testCompletionAfterInstanceof06_01() throws JavaModelException", "signatureAfterChange": " public void testCompletionAfterInstanceof06_01() throws JavaModelException", "diff": ["+\tint start2 = str.lastIndexOf(\"a.equal\");", "+\tint end2 = start2 + \"a.equal\".length();", "+\tint start3 = str.lastIndexOf(\"a.\");", "+\tint end3 = start3 + \"a\".length();", "-\t\t\t\"equals[METHOD_REF]{equals(), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), replace[\"+start1+\", \"+end1+\"], token[\"+start1+\", \"+end1+\"], \" + (relevance1) + \"}\",", "+\t\t\t\"equals[METHOD_REF]{equals(), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), replace[\"+start1+\", \"+end1+\"], token[\"+start1+\", \"+end1+\"], \" + (relevance1) + \"}\\n\" +", "+\t\t\t\"equalsFoo[METHOD_REF_WITH_CASTED_RECEIVER]{((CompletionAfterInstanceOf)a).equalsFoo(), Ltest.CompletionAfterInstanceOf;, ()V, Ltest.CompletionAfterInstanceOf;, equalsFoo, null, replace[\"+start2+\", \"+end2+\"], token[\"+start1+\", \"+end1+\"], receiver[\"+start3+\", \"+end3+\"], \" + (relevance1) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "823af89b8b1b752ca7c1dd523d236901", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cbce30b9f59e4652d4bd8e53671da318f5703bbd", "commitAfterChange": "bb6274460011ae3e14410332fdec5a35eeffca9b", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " public void testCompletionAfterInstanceof03_05() throws JavaModelException", "signatureAfterChange": " public void testCompletionAfterInstanceof03_05() throws JavaModelException", "diff": ["+\tint start2 = str.lastIndexOf(\"a.equal\");", "+\tint end2 = start2 + \"a.equal\".length();", "+\tint start3 = str.lastIndexOf(\"a.\");", "+\tint end3 = start3 + \"a\".length();", "-\t\t\t\"equals[METHOD_REF]{equals(), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), replace[\"+start1+\", \"+end1+\"], token[\"+start1+\", \"+end1+\"], \" + (relevance1) + \"}\",", "+\t\t\t\"equals[METHOD_REF]{equals(), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), replace[\"+start1+\", \"+end1+\"], token[\"+start1+\", \"+end1+\"], \" + (relevance1) + \"}\\n\" +", "+\t\t\t\"equalsFoo[METHOD_REF_WITH_CASTED_RECEIVER]{((CompletionAfterInstanceOf)a).equalsFoo(), Ltest.CompletionAfterInstanceOf;, ()V, Ltest.CompletionAfterInstanceOf;, equalsFoo, null, replace[\"+start2+\", \"+end2+\"], token[\"+start1+\", \"+end1+\"], receiver[\"+start3+\", \"+end3+\"], \" + (relevance1) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b18aa920f2ca8652a3fe4f210b0d88d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "cbce30b9f59e4652d4bd8e53671da318f5703bbd", "commitAfterChange": "bb6274460011ae3e14410332fdec5a35eeffca9b", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " public void testCompletionAfterInstanceof06_02() throws JavaModelException", "signatureAfterChange": " public void testCompletionAfterInstanceof06_02() throws JavaModelException", "diff": ["+\tint start2 = str.lastIndexOf(\"a.equal\");", "+\tint end2 = start2 + \"a.equal\".length();", "+\tint start3 = str.lastIndexOf(\"a.\");", "+\tint end3 = start3 + \"a\".length();", "-\t\t\t\"equals[METHOD_REF]{equals(), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), replace[\"+start1+\", \"+end1+\"], token[\"+start1+\", \"+end1+\"], \" + (relevance1) + \"}\",", "+\t\t\t\"equals[METHOD_REF]{equals(), Ljava.lang.Object;, (Ljava.lang.Object;)Z, equals, (obj), replace[\"+start1+\", \"+end1+\"], token[\"+start1+\", \"+end1+\"], \" + (relevance1) + \"}\\n\" +", "+\t\t\t\"equalsFoo[METHOD_REF_WITH_CASTED_RECEIVER]{((CompletionAfterInstanceOf)a).equalsFoo(), Ltest.CompletionAfterInstanceOf;, ()V, Ltest.CompletionAfterInstanceOf;, equalsFoo, null, replace[\"+start2+\", \"+end2+\"], token[\"+start1+\", \"+end1+\"], receiver[\"+start3+\", \"+end3+\"], \" + (relevance1) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f727fb5e6451f78f336f1e8a55d26dd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SnippetCompletionTests.java", "commitBeforeChange": "0580b12603e025516ea827d181150b0daae85b9b", "commitAfterChange": "f6e646cfd67462923a3ee7e8121ae224b9177415", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void testCodeSnippetAssistForClassFileWithDollar() throws JavaModelException", "signatureAfterChange": " public void testCodeSnippetAssistForClassFileWithDollar() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(false,false,true);", "-\tassertEquals(", "-\t\t\"should have 3 completions\",", "-\t\t\"element:varX    completion:varX    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:varY    completion:varY    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\"+", "-\t\t\"element:void    completion:void    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED) ,", "+\tint tokenStart = snippet.lastIndexOf(\"var\");", "+\tint tokenEnd = tokenStart + \"var\".length();", "+\tassertResults(", "+\t\t\"void[KEYWORD]{void, null, null, void, [\"+tokenStart+\", \"+tokenEnd+\"], \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\"varX[LOCAL_VARIABLE_REF]{varX, null, I, varX, [\"+tokenStart+\", \"+tokenEnd+\"], \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\"varY[LOCAL_VARIABLE_REF]{varY, null, I, varY, [\"+tokenStart+\", \"+tokenEnd+\"], \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\","]}], "num": 7700}