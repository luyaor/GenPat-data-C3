{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3fd4d2c8d43cc22fb4d2c6c794af06e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60495cd412e5de4dd10fc39b7bb55ad4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tpublic void test016()", "signatureAfterChange": " \t \tpublic void test016() throws Exception", "diff": ["-\tpublic void test016() {", "+\tpublic void test016() throws Exception {", "-\t\tString actualOutput = null;", "-\t\ttry {", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\tactualOutput =", "-\t\t\t\tdisassembler.disassemble(", "-                     classFileBytes,", "-                     \"\\n\",", "-                     ClassFileBytesDisassembler.DETAILED); ", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(\"IOException\", false);", "-\t\t}", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\tString actualOutput =", "+\t\t\tdisassembler.disassemble(", "+                 classFileBytes,", "+                 \"\\n\",", "+                 ClassFileBytesDisassembler.DETAILED); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2e4cf26bad39e470404a898c56ea2d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StackMapAttributeTest.java", "commitBeforeChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "commitAfterChange": "b8b352fc846455808f45330cfd0c7d70c44859bf", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t \tpublic void test017()", "signatureAfterChange": " \t \tpublic void test017() throws Exception", "diff": ["-\tpublic void test017() {", "+\tpublic void test017() throws Exception {", "-\t\tString actualOutput = null;", "-\t\ttry {", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "-\t\t\tactualOutput =", "-\t\t\t\tdisassembler.disassemble(", "-                     classFileBytes,", "-                     \"\\n\",", "-                     ClassFileBytesDisassembler.DETAILED); ", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(\"ClassFormatException\", false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(\"IOException\", false);", "-\t\t}", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(new File(OUTPUT_DIR + File.separator  +\"X.class\"));", "+\t\tString actualOutput =", "+\t\t\tdisassembler.disassemble(", "+                 classFileBytes,", "+                 \"\\n\",", "+                 ClassFileBytesDisassembler.DETAILED); "]}], "num": 6485}