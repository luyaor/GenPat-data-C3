{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7831b96f5d38996197a285644663046e", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "720615bf651e4dba1c2d4dacf7777e39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddJarFileToIndex.java", "commitBeforeChange": "fa88cb3d17048056f6b43aa969ba12f4c9456158", "commitAfterChange": "84b18ff929c59d9bd138487e220218b9da4b2ce2", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\t\t\tIPath location = this.resource.getLocation();", "+\t\t\t\t\tURI location = this.resource.getLocationURI();", "-\t\t\t\t\t\tSystem.out.println(\"(\" + Thread.currentThread() + \") [AddJarFileToIndex.execute()] Creating ZipFile on \" + location); //$NON-NLS-1$\t//$NON-NLS-2$", "-\t\t\t\t\tzip = new ZipFile(location.toFile());", "+\t\t\t\t\t\tSystem.out.println(\"(\" + Thread.currentThread() + \") [AddJarFileToIndex.execute()] Creating ZipFile on \" + location.getPath()); //$NON-NLS-1$\t//$NON-NLS-2$", "+\t\t\t\t\tFile file = null;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tfile = org.eclipse.jdt.internal.core.util.Util.toLocalFile(location, progressMonitor);", "+\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\tif (JobManager.VERBOSE) {", "+\t\t\t\t\t\t\torg.eclipse.jdt.internal.core.util.Util.verbose(\"-> failed to index \" + location.getPath() + \" because of the following exception:\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (file == null) {", "+\t\t\t\t\t\tif (JobManager.VERBOSE)", "+\t\t\t\t\t\t\torg.eclipse.jdt.internal.core.util.Util.verbose(\"-> failed to index \" + location.getPath() + \" because the file could not be fetched\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t\tzip = new ZipFile(file);", "+\t\t\t\t\t// external file -> it is ok to use toFile()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ddfd62a5b9394ea9f712674cfe8f49b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 51, "signatureBeforeChange": " \t\t\t \tpublic PrefixExpression convert(UnaryExpression expression)", "signatureAfterChange": " \t\t\t \tpublic PrefixExpression convert(org.eclipse.jdt.internal.compiler.ast.UnaryExpression expression)", "diff": ["-\tpublic PrefixExpression convert(UnaryExpression expression) {", "+\tpublic PrefixExpression convert(org.eclipse.jdt.internal.compiler.ast.UnaryExpression expression) {", "-\t\tswitch ((expression.bits & AstNode.OperatorMASK) >> AstNode.OperatorSHIFT) {", "-\t\t\tcase OperatorIds.PLUS :", "+\t\tswitch ((expression.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.OperatorMASK) >> org.eclipse.jdt.internal.compiler.ast.ASTNode.OperatorSHIFT) {", "+\t\t\tcase org.eclipse.jdt.internal.compiler.ast.OperatorIds.PLUS :", "-\t\t\tcase OperatorIds.MINUS :", "+\t\t\tcase org.eclipse.jdt.internal.compiler.ast.OperatorIds.MINUS :", "-\t\t\tcase OperatorIds.NOT :", "+\t\t\tcase org.eclipse.jdt.internal.compiler.ast.OperatorIds.NOT :", "-\t\t\tcase OperatorIds.TWIDDLE :", "+\t\t\tcase org.eclipse.jdt.internal.compiler.ast.OperatorIds.TWIDDLE :"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d08ac5f32badc664889980d07468f1d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "6d93c54724574eba81fc91ca790fe6d592d64dc9", "commitAfterChange": "2e17585b4d3d6db78eab29e0b5d069f520892645", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " public void testBug118823() throws CoreException, InterruptedException, IOException", "signatureAfterChange": " public void testBug118823() throws CoreException, InterruptedException, IOException", "diff": ["+\t\t// DEBUG", "+\t\tJavaModelManager.VERBOSE = true;", "+\t\torg.eclipse.jdt.internal.core.search.BasicSearchEngine.VERBOSE = true;", "+\t\torg.eclipse.jdt.internal.core.NameLookup.VERBOSE = true;", "+\t\tSystem.out.println(\"--------------------------------------------------------------------------------\");", "+\t\tSystem.out.println(\"Running test \"+getName()+\"...\");", "+", "+\t\t// DEBUG", "+\t\tSystem.out.println(\"--------------------------------------------------------------------------------\");", "+\t\tJavaModelManager.VERBOSE = false;", "+\t\torg.eclipse.jdt.internal.core.search.BasicSearchEngine.VERBOSE = false;", "+\t\torg.eclipse.jdt.internal.core.NameLookup.VERBOSE = false;", "+"]}], "num": 37989}