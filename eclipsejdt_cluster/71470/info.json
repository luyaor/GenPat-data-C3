{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d4f6b6f80b6215a7792f612f7eb5ab6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d92215f22d5fa27ecead47bbbaaa2f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "99c2e25ae0d73d23014ede292757d62545eec1b5", "commitAfterChange": "ee3e92a740c438d4455b4c3423c42bacaa4600fe", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t\tpublic String toString()", "signatureAfterChange": " \t\tpublic String toString()", "diff": ["-\t\t\t\tIJavaElementDelta[] projects = this.deltas[i].getAffectedChildren();", "-\t\t\t\tsortDeltas(projects);", "-\t\t\t\tfor (int j=0, projectsLength=projects.length; j<projectsLength; j++) {", "-\t\t\t\t\tbuffer.append(projects[j]);", "-\t\t\t\t\tif (j != projectsLength-1) {", "-\t\t\t\t\t\tbuffer.append(\"\\n\");", "+\t\t\t\tIJavaElementDelta delta = this.deltas[i];", "+\t\t\t\tIJavaElementDelta[] children = delta.getAffectedChildren();", "+\t\t\t\tint childrenLength=children.length;", "+\t\t\t\tIResourceDelta[] resourceDeltas = delta.getResourceDeltas();", "+\t\t\t\tint resourceDeltasLength = resourceDeltas == null ? 0 : resourceDeltas.length;", "+\t\t\t\tif (childrenLength == 0 && resourceDeltasLength == 0) {", "+\t\t\t\t\tbuffer.append(delta);", "+\t\t\t\t} else {", "+\t\t\t\t\tsortDeltas(children);", "+\t\t\t\t\tfor (int j=0; j<childrenLength; j++) {", "+\t\t\t\t\t\tbuffer.append(children[j]);", "+\t\t\t\t\t\tif (j != childrenLength-1) {", "+\t\t\t\t\t\t\tbuffer.append(\"\\n\");", "+\t\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tIResourceDelta[] nonJavaProjects = this.deltas[i].getResourceDeltas();", "-\t\t\t\tif (nonJavaProjects != null) {", "-\t\t\t\t\tfor (int j=0, nonJavaProjectsLength=nonJavaProjects.length; j<nonJavaProjectsLength; j++) {", "+\t\t\t\t\tfor (int j=0; j<resourceDeltasLength; j++) {", "-\t\t\t\t\t\tbuffer.append(nonJavaProjects[j]);", "-\t\t\t\t\t\tif (j != nonJavaProjectsLength-1) {", "+\t\t\t\t\t\tbuffer.append(resourceDeltas[j]);", "+\t\t\t\t\t\tif (j != resourceDeltasLength-1) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a525d837c47a7b6259a1cafbd250788a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModifyingResourceTests.java", "commitBeforeChange": "5cb77df465dd531494d262adf732c936288e98ee", "commitAfterChange": "2226fcf4e22562d8635ab5b04d9f244dd12a9624", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 1, "signatureBeforeChange": "  protected String getDeltas()", "signatureAfterChange": " protected void assertDeltas(String message, String expected)", "diff": ["+}", "+protected void assertDeltas(String message, String expected) {", "+\tStringBuffer buffer = new StringBuffer();", "+\tIJavaElementDelta[] deltas = this.deltaListener.deltas;", "+\tfor (int i=0, length= deltas.length; i<length; i++) {", "+\t\tIJavaElementDelta[] projects = deltas[i].getAffectedChildren();", "+\t\tfor (int j=0, projectsLength=projects.length; j<projectsLength; j++) {", "+\t\t\tbuffer.append(projects[j]);", "+\t\t\tif (j != projectsLength-1) {", "+\t\t\t\tbuffer.append(\"\\n\");", "+\t\t\t}", "+\t\t}", "+\t\tif (i != length-1) {", "+\t\t\tbuffer.append(\"\\n\\n\");", "+\t\t}", "+\t}", "+\tString actual = buffer.toString();", "+\tif (!expected.equals(actual)){", "+\t \tSystem.out.println(Util.displayString(actual, 2));", "+\t}", "+\tassertEquals(", "+\t\tmessage,", "+\t\texpected,", "+\t\tactual);", "-", "-protected String getDeltas() {", "-\tStringBuffer buffer = new StringBuffer();", "-\tIJavaElementDelta[] deltas = this.deltaListener.deltas;", "-\tfor (int i=0, length= deltas.length; i<length; i++) {", "-\t\tIJavaElementDelta[] projects = deltas[i].getAffectedChildren();", "-\t\tfor (int j=0, projectsLength=projects.length; j<projectsLength; j++) {", "-\t\t\tbuffer.append(projects[j]);", "-\t\t\tif (j != projectsLength-1) {", "-\t\t\t\tbuffer.append(\"\\n\");", "-\t\t\t}", "-\t\t}", "-\t\tif (i != length-1) {", "-\t\t\tbuffer.append(\"\\n\\n\");", "-\t\t}", "-\t}", "-\treturn buffer.toString();"]}], "num": 71470}