{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff22b84ef396a996c745395b5e86c5d5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57af73e5b387ff883499f55df9dc249c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "be3076081a68f52e55442746b375d20d2f473b0c", "commitAfterChange": "85a51230859ba76a62ce4d566f4cbd47aac06488", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public int computeSeverity(int problemId)", "signatureAfterChange": " public int computeSeverity(int problemId)", "diff": ["-\t\t\treturn Warning; // TODO (philippe) need this to default to a warning this.options.getSeverity(CompilerOptions.InexactParameterToVarargs);", "+\t\t\treturn this.options.getSeverity(CompilerOptions.InexactVarargsArgument);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe80fdc8968f54d4e553f7067071e6a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tprivate boolean createParser(JavaProject project) throws JavaModelException", "signatureAfterChange": "\r private boolean createParser(JavaProject project) throws JavaModelException", "diff": ["+ */\r", "+private boolean createParser(JavaProject project) throws JavaModelException {\r", "+\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "+\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\t */\r", "-\tprivate boolean createParser(JavaProject project) throws JavaModelException {\r", "-\t\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "-\t\tIProblemFactory problemFactory = new ProblemFactory();\r", "-\r", "-\t\tCompilerOptions options = new CompilerOptions(null);\r", "-\t\tProblemReporter problemReporter =\r", "-\t\t\tnew ProblemReporter(\r", "-\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\t\toptions,\r", "-\t\t\t\tproblemFactory);\r", "-\t\tthis.lookupEnvironment =\r", "-\t\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-\t\tthis.parser = new MatchLocatorParser(problemReporter);\r", "-\t\treturn true;\r", "-\t\t//this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "-\t}\r", "+\tCompilerOptions options = new CompilerOptions(null);\r", "+\tProblemReporter problemReporter =\r", "+\t\tnew ProblemReporter(\r", "+\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\toptions,\r", "+\t\t\tproblemFactory);\r", "+\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+\tthis.parser = new MatchLocatorParser(problemReporter);\r", "+\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "+}\r"]}], "num": 9837}