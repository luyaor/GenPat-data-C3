{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c1fd6d15efad42811bcedb999e3a30e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2085346d4782b0f443f5b6415fe1f62e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "f427d3141850bb05b4f61e7a5e8cfb86bf8a4b90", "commitAfterChange": "bdac2d6f93f2862f6a2ad385b856d2f81a163437", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 144, "signatureBeforeChange": " public void test122_unusual_classpath()", "signatureAfterChange": " public void test123_classpath()", "diff": ["-public void test122_unusual_classpath(){", "-\tthis.runConformTest(", "-\t\t\t\"X.java\",", "-\t\t\t\"/** */\\n\" + ", "-\t\t\t\"public class X {\\n\" + ", "-\t\t\t\"}\",", "-        \"\\\"\" + OUTPUT_DIR +  File.separator + \"X.java\\\"\"", "-        + \" -1.5 -g -preserveAllLocals\"", "-        + \" -cp \\\"\" + OUTPUT_DIR + \"[+**/OK2;~**/Warn;-KO]\"", "-        + \"\\\"\" + File.pathSeparator + File.pathSeparator + File.pathSeparator", "-        + \" -proceedOnError -referenceInfo -d \\\"\" + OUTPUT_DIR + \"\\\"\",", "-        \"\",", "-        \"\",", "-        true);", "+// without any error message though)", "+public void test123_classpath(){", "+\tString cp = OUTPUT_DIR + \"[+OK2\" + File.pathSeparator + File.pathSeparator + ", "+\t\t\tFile.pathSeparator + \"~Warn\" + File.pathSeparator + \"-KO]\";", "+\trunClasspathTest(", "+\t\tcp, ", "+\t\tnull,", "+\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "261bf75db6060c3f18bb31cc3a81745f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tprotected void verifyComments(ICompilationUnit unit) throws JavaModelException", "signatureAfterChange": " \tprotected void verifyComments(ICompilationUnit unit) throws JavaModelException", "diff": ["-\t\tComment[] unitComments = null;", "+\t\tList unitComments = null;", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_INVALID_JAVADOC, this.compilerOption);", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_TAGS, this.compilerOption);", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_COMMENTS, this.compilerOption);", "-\t\t\t\tproject.setOption(JavaCore.COMPILER_PB_METHOD_WITH_CONSTRUCTOR_NAME, JavaCore.IGNORE);", "-\t\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(this.sourceUnit, this.resolveBinding); // resolve bindings", "-\t\t\t\tif (problems.equals(JavaCore.ERROR)) {", "-\t\t\t\t\tassertEquals(this.prefix+\"Unexpected problems\", 0, compilUnit.getProblems().length); //$NON-NLS-1$", "-\t\t\t\t} else if (problems.equals(JavaCore.WARNING)) {", "-\t\t\t\t\tIProblem[] problemsList = compilUnit.getProblems();", "-\t\t\t\t\tint length = problemsList.length;", "-\t\t\t\t\tSystem.out.println(this.prefix+length+\" unexpected problems:\"); //$NON-NLS-1$", "+\t\t\tproject.setOption(JavaCore.COMPILER_PB_INVALID_JAVADOC, this.compilerOption);", "+\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_TAGS, this.compilerOption);", "+\t\t\tproject.setOption(JavaCore.COMPILER_PB_MISSING_JAVADOC_COMMENTS, this.compilerOption);", "+\t\t\tproject.setOption(JavaCore.COMPILER_PB_METHOD_WITH_CONSTRUCTOR_NAME, JavaCore.IGNORE);", "+\t\t\tCompilationUnit compilUnit = (CompilationUnit) runConversion(this.sourceUnit, this.resolveBinding); // resolve bindings", "+\t\t\tif (this.compilerOption.equals(JavaCore.ERROR)) {", "+\t\t\t\tassumeEquals(this.prefix+\"Unexpected problems\", 0, compilUnit.getProblems().length); //$NON-NLS-1$", "+\t\t\t} else if (this.compilerOption.equals(JavaCore.WARNING)) {", "+\t\t\t\tIProblem[] problemsList = compilUnit.getProblems();", "+\t\t\t\tint length = problemsList.length;", "+\t\t\t\tif (length > 0) {", "+\t\t\t\t\tproblems.append(\"  - \"+this.prefix+length+\" problems:\"); //$NON-NLS-1$", "-\t\t\t\t\t\tSystem.out.println(\"  - \"+problemsList[i]);", "+\t\t\t\t\t\tproblems.append(\"\t+ \"+problemsList[i]);", "-\t\t\t\tunitComments = compilUnit.getCommentTable();", "+\t\t\t}", "+\t\t\tunitComments = compilUnit.getCommentList();", "-\t\tassertNotNull(this.prefix+\"Unexpected problems\", unitComments);", "+\t\tassumeNotNull(this.prefix+\"Unexpected problems\", unitComments);"]}], "num": 57556}