{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36a6ac8a220ee1a3d80d3c8e1efaab19", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b5d82b562871663ccf2efd277236ddd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void checkExceptionHandlers( \t\tTypeBinding[] raisedExceptions, \t\tAstNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": " \t \tpublic void checkExceptionHandlers( \t\tTypeBinding[] raisedExceptions, \t\tAstNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "diff": ["-\t\t\tAstNode sub;", "-\t\t\tif (((sub = traversedContext.subRoutine()) != null) && sub.cannotReturn()) {", "+\t\t\tSubRoutineStatement sub;", "+\t\t\tif (((sub = traversedContext.subRoutine()) != null) && sub.isSubRoutineEscaping()) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90fcaa1a1fd7dd3f551a687b65e6b125", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "bb035342af3e77c43a12431c380fb2a6fe6ec67e", "commitAfterChange": "d9aabee2fc6180b2ed4f4131332dc5a46cc37a0d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void checkExceptionHandlers( \t\tTypeBinding raisedException, \t\tAstNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": "  \tpublic void checkExceptionHandlers( \t\tTypeBinding raisedException, \t\tAstNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "diff": ["-\t\t\tAstNode sub;", "-\t\t\tif (((sub = traversedContext.subRoutine()) != null) && sub.cannotReturn()) {", "+\t\t\tSubRoutineStatement sub;", "+\t\t\tif (((sub = traversedContext.subRoutine()) != null) && sub.isSubRoutineEscaping()) {"]}], "num": 5456}