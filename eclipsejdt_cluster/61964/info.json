{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5aa27f688ea7ed3f8e96b539cfa861f1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "266170663d3906c35a5e2477c9d1834d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a52f17f8883dd812875c341ff752527a9011d961", "commitAfterChange": "b79c86afbec252e4061e220059353bed4588479c", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, InvocationSite site)", "signatureAfterChange": " \tpublic int parameterCompatibilityLevel(MethodBinding method, TypeBinding[] arguments, InvocationSite site)", "diff": ["-\t\t\tint inferenceKind = InferenceContext18.CHECK_UNKNOWN;", "+\t\t\tint inferenceKind = InferenceContext18.CHECK_STRICT;", "-\t\t\t\tinferenceKind = ((ReferenceExpression) site).inferenceKind;", "+\t\t\t\tReferenceExpression referenceExpression = (ReferenceExpression) site;", "+\t\t\t\tcontext = referenceExpression.getInferenceContext((ParameterizedGenericMethodBinding) method);", "+\t\t\t\tif (context != null)", "+\t\t\t\t\tinferenceKind = context.inferenceKind;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95cda54b2f44d4f208dd4bed5924fb8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "ffd0667b5086352f304c15ea4ad31de38892668e", "commitAfterChange": "14609503efe4c7d28a69750ca6853c468e091676", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "signatureAfterChange": "  \tpublic Object reduce(InferenceContext18 inferenceContext) throws InferenceFailureException", "diff": ["-\t\t\t\t\t\t\tinferenceContext.currentBounds.addBounds(innerCtx.b2, inferenceContext.environment);", "-\t\t\t\t\t\t\tinferenceContext.inferenceVariables = innerCtx.inferenceVariables;", "-\t\t\t\t\t\t\tinferenceContext.inferenceKind = innerCtx.inferenceKind;", "-\t\t\t\t\t\t\tinnerCtx.outerContext = inferenceContext;", "-\t\t\t\t\t\t\tinferenceContext.usesUncheckedConversion = innerCtx.usesUncheckedConversion;", "+\t\t\t\t\t\t\tinferenceContext.integrateInnerInferenceB2(innerCtx);"]}], "num": 61964}