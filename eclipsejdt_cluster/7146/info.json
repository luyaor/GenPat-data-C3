{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1ffc655f3e5d4c7c53010ce63780936a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77749ce3251a23b00be349356be41eeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 370, "methodNumberAfterChange": 370, "signatureBeforeChange": " \tpublic void test366()", "signatureAfterChange": " \tpublic void test366()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tvoid foo1(MX<Class<? extends Object>> target, MX<Class> value) {\\n\" + ", "+\t\t\t\"\t                                                 ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 13)\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 22)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tvoid foo5(MX<? extends Class> target, MX<Class> value) {\\n\" + ", "+\t\t\t\"\t                       ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tvoid foo5(MX<? extends Class> target, MX<Class> value) {\\n\" + ", "+\t\t\t\"\t                                         ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tvoid foo6(MX<? super Class> target, MX<Class> value) {\\n\" + ", "+\t\t\t\"\t                     ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\t\"\tvoid foo6(MX<? super Class> target, MX<Class> value) {\\n\" + ", "+\t\t\t\"\t                                       ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tvoid foo7(MX<Class<? extends Class>> target, MX<Class<Class>> value) {\\n\" + ", "+\t\t\t\"\t                             ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"11. WARNING in X.java (at line 21)\\n\" + ", "+\t\t\t\"\tvoid foo7(MX<Class<? extends Class>> target, MX<Class<Class>> value) {\\n\" + ", "+\t\t\t\"\t                                                      ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"12. ERROR in X.java (at line 22)\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 25)\\n\" + ", "+\t\t\t\"13. WARNING in X.java (at line 24)\\n\" + ", "+\t\t\t\"\tvoid foo8(MX<MX<? extends Class>> target, MX<MX<Class>> value) {\\n\" + ", "+\t\t\t\"\t                          ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"14. WARNING in X.java (at line 24)\\n\" + ", "+\t\t\t\"\tvoid foo8(MX<MX<? extends Class>> target, MX<MX<Class>> value) {\\n\" + ", "+\t\t\t\"\t                                                ^^^^^\\n\" + ", "+\t\t\t\"Type safety: Class is a raw type. References to generic type Class<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"15. ERROR in X.java (at line 25)\\n\" + ", "-\t\t\t\"7. ERROR in X.java (at line 31)\\n\" + ", "+\t\t\t\"16. ERROR in X.java (at line 31)\\n\" + ", "-\t\t\t\"8. ERROR in X.java (at line 34)\\n\" + ", "+\t\t\t\"17. ERROR in X.java (at line 34)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3054870b8c9acf79be20e804ffbf209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 231, "signatureBeforeChange": " \tpublic void test227()", "signatureAfterChange": " \tpublic void test227()", "diff": ["-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tList list() { return null; }\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"5. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tvoid m3() { Collection c = null; List l = (List<X>)c; } // unsafe cast\\n\" + ", "+\t\t\t\"\t            ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tvoid m3() { Collection c = null; List l = (List<X>)c; } // unsafe cast\\n\" + ", "+\t\t\t\"\t                                 ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 8)\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"9. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tvoid m4() { Collection c = null; List l = (List<?>)c; } // ok\\n\" + ", "+\t\t\t\"\t            ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: Collection is a raw type. References to generic type Collection<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"10. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tvoid m4() { Collection c = null; List l = (List<?>)c; } // ok\\n\" + ", "+\t\t\t\"\t                                 ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"11. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tvoid m5() { List c = null; List l = (Collection<X>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t            ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"12. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tvoid m5() { List c = null; List l = (Collection<X>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t                           ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"13. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"7. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"14. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"8. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"15. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tvoid m6() { List c = null; List l = (Collection<?>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t            ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"16. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tvoid m6() { List c = null; List l = (Collection<?>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t                           ^^^^\\n\" + ", "+\t\t\t\"Type safety: List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"17. WARNING in X.java (at line 11)\\n\" + ", "-\t\t\t\"9. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"18. ERROR in X.java (at line 11)\\n\" + "]}], "num": 7146}