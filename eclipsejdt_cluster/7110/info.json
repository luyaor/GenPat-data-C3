{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ae2cb6865f48839929742c855588a26d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dda2f091dd66b968ccf8bbd36d84ff5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "6afa93473446fb2c6b874f92c72045670997535f", "commitAfterChange": "e9d42bfbf494b3bd89965c526aaae07d7189c12c", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " public void test_parameter_specification_inheritance_014()", "signatureAfterChange": " public void test_parameter_specification_inheritance_014()", "diff": ["+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\"----------\\n\");", "+\t\t\"----------\\n\"", "+\t\t: // at 1.8 we show null type annotations in the message:", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in p1\\\\Y.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class Y extends X implements IY {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The method @Nullable String getString1(String) from X cannot implement the corresponding method from IY due to incompatible nullness constraints\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in p1\\\\Y.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class Y extends X implements IY {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The method String getString2(String) from X cannot implement the corresponding method from IY due to incompatible nullness constraints\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in p1\\\\Y.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class Y extends X implements IY {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The method getString5(@NonNull String) from X cannot implement the corresponding method from IY due to incompatible nullness constraints\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in p1\\\\Y.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class Y extends X implements IY {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The method getString3(String) from X cannot implement the corresponding method from IY due to incompatible nullness constraints\\n\" + ", "+\t\t\"----------\\n\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "faad9143a5a9c9e24d516b3f310512f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "6afa93473446fb2c6b874f92c72045670997535f", "commitAfterChange": "e9d42bfbf494b3bd89965c526aaae07d7189c12c", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \t \tpublic void testBug416174()", "signatureAfterChange": " \tpublic void testBug416174()", "diff": ["+\t// incompatible null constraints on parameters ", "-\t\t// FIXME(stephan): should report null spec violation", "-\t\trunConformTestWithLibs(", "+\t\tMap options = getCompilerOptions();", "+\t\toptions.put(JavaCore.COMPILER_PB_NONNULL_PARAMETER_ANNOTATION_DROPPED, JavaCore.IGNORE);", "+\t\trunNegativeTestWithLibs(", "-\t\t\t\t\"import org.eclipse.jdt.annotation.NonNull;\\n\" + ", "+\t\t\t\t\"import org.eclipse.jdt.annotation.*;\\n\" + ", "-\t\t\t\t\"\tvoid  foo(List<X> lx) {\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tvoid  foo1(List<X> lx) {}\\n\" +", "+\t\t\t\t\"\tvoid  foo2(List<@NonNull X> lx) {}\\n\" +", "+\t\t\t\t\"\tvoid  foo3(List<@Nullable X> lx) {}\\n\" +", "+\t\t\t\t\"\tvoid  foo4(@NonNull List<@Nullable X> lx) {}\\n\" +", "-\t\t\t\t\"\tvoid  foo(List<@NonNull X> xy) {\\n\" + ", "+\t\t\t\t\"\t@Override void foo1(List<@NonNull X> xy) {}\\n\" + ", "+\t\t\t\t\"\t@Override void foo2(List<X> lx) {}\\n\" +", "+\t\t\t\t\"\t@Override void foo3(List<X> lx) {}\\n\" +", "+\t\t\t\t\"\t@Override void foo4(List<@Nullable X> lx) {}\\n\" + // omitting annotation at toplevel can be tolerated (via option)", "+\t\t\t\t\"}\\n\"", "+\t\t\t},", "+\t\t\toptions,", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tclass Z extends X {\\n\" + ", "+\t\t\t\"\t      ^\\n\" + ", "+\t\t\t\"The method foo1(List<@NonNull X>) from Z cannot implement the corresponding method from X due to incompatible nullness constraints\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tclass Z extends X {\\n\" + ", "+\t\t\t\"\t      ^\\n\" + ", "+\t\t\t\"The method foo2(List<X>) from Z cannot implement the corresponding method from X due to incompatible nullness constraints\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tclass Z extends X {\\n\" + ", "+\t\t\t\"\t      ^\\n\" + ", "+\t\t\t\"The method foo3(List<X>) from Z cannot implement the corresponding method from X due to incompatible nullness constraints\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t}", "-\t\t\t\"1. WARNING in X.java (at line 11)\\n\" + ", "-\t\t\t\"\tvoid  foo(List<@NonNull X> xy) {\\n\" + ", "-\t\t\t\"\t      ^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The method foo(List<X>) of type Z should be tagged with @Override since it actually overrides a superclass method\\n\" + "]}], "num": 7110}