{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4c08f055c29c26950ca2fcfd82e584d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64028909be4c56b95f298ef6c03c3056", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void updateProjectReferences(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException", "signatureAfterChange": " \t \tpublic synchronized void addProjectReferenceChange(JavaProject project, IClasspathEntry[] oldResolvedClasspath)", "diff": ["-\tpublic void updateProjectReferences(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException {", "-\t\tProjectUpdateInfo info;", "-\t\tsynchronized (this) {", "-\t\t\tinfo = (ProjectUpdateInfo) (canChangeResources ? this.projectUpdates.remove(project) /*remove possibly awaiting one*/ : this.projectUpdates.get(project));", "-\t\t\tif (info == null) {", "-\t\t\t\tinfo = new ProjectUpdateInfo();", "-\t\t\t\tinfo.project = project;", "-\t\t\t\tinfo.oldResolvedPath = oldResolvedPath;", "-\t\t\t\tif (!canChangeResources) {", "-\t\t\t\t\tthis.projectUpdates.put(project, info);", "-\t\t\t\t}", "-\t\t    } // else refresh new classpath information", "-\t\t    info.newResolvedPath = newResolvedPath;", "-\t\t    info.newRawPath = newRawPath;", "-\t\t}", "-", "-\t    if (canChangeResources) {", "-\t        info.updateProjectReferencesIfNecessary();", "-\t    } // else project references will be updated on next PRE_BUILD notification", "+\t", "+\tpublic synchronized void addProjectReferenceChange(JavaProject project, IClasspathEntry[] oldResolvedClasspath) {", "+\t\tProjectReferenceChange change = (ProjectReferenceChange) this.projectReferenceChanges.get(project);", "+\t\tif (change == null) {", "+\t\t\tchange = new ProjectReferenceChange(project, oldResolvedClasspath);", "+\t\t\tthis.projectReferenceChanges.put(project, change);", "+\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c2ee0d528aadeebd8ebbc4ff7cda0f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "f1be73585a15718b8d7e7bfcd6517de46dc0a4a4", "commitAfterChange": "c5f13d0ee9ef1590b509e21fa6cb7160b90c28f0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void performClasspathResourceChange(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException", "signatureAfterChange": "  \tpublic void updateProjectReferences(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException", "diff": ["-\tpublic void performClasspathResourceChange(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException {", "-\t    ProjectUpdateInfo info = new ProjectUpdateInfo();", "-\t    info.project = project;", "-\t    info.oldResolvedPath = oldResolvedPath;", "-\t    info.newResolvedPath = newResolvedPath;", "-\t    info.newRawPath = newRawPath;", "+\tpublic void updateProjectReferences(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException {", "+\t\tProjectUpdateInfo info;", "+\t\tsynchronized (this) {", "+\t\t\tinfo = (ProjectUpdateInfo) (canChangeResources ? this.projectUpdates.remove(project) /*remove possibly awaiting one*/ : this.projectUpdates.get(project));", "+\t\t\tif (info == null) {", "+\t\t\t\tinfo = new ProjectUpdateInfo();", "+\t\t\t\tinfo.project = project;", "+\t\t\t\tinfo.oldResolvedPath = oldResolvedPath;", "+\t\t\t\tif (!canChangeResources) {", "+\t\t\t\t\tthis.projectUpdates.put(project, info);", "+\t\t\t\t}", "+\t\t    } // else refresh new classpath information", "+\t\t    info.newResolvedPath = newResolvedPath;", "+\t\t    info.newRawPath = newRawPath;", "+\t\t}", "+", "-\t    \tsynchronized (this) {", "-\t            this.projectUpdates.remove(project); // remove possibly awaiting one", "-\t\t\t}", "-\t        return;", "-\t    }", "-\t    this.recordProjectUpdate(info);", "+\t    } // else project references will be updated on next PRE_BUILD notification"]}], "num": 57267}