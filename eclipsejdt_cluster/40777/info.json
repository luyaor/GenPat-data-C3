{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b26a2723e1af6c1365b41f2459d0678f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "282aa71fca12ed5b80d5f0a140dee0bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "bbf01bd45c20dcf892a1672b9d9c504b05790a01", "commitAfterChange": "64f2a5b8a78095fa170a97cceb8e661d31b0ae71", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "signatureAfterChange": "\r \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "diff": ["+\t */\r", "+\tprotected void updateAffectedProjects(IPath prerequisiteProjectPath) {\r", "+\r", "+\t\ttry {\r", "+\t\t\tIJavaModel model = JavaModelManager.getJavaModelManager().getJavaModel();\r", "+\t\t\tIJavaProject originatingProject = getProject();\r", "+\t\t\tIJavaProject[] projects = model.getJavaProjects();\r", "+\t\t\tfor (int i = 0, projectCount = projects.length; i < projectCount; i++) {\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\tJavaProject project = (JavaProject) projects[i];\r", "+\t\t\t\t\tif (project.equals(originatingProject)) continue; // skip itself\r", "+\t\t\t\t\t\r", "+\t\t\t\t\t// consider ALL dependents (even indirect ones), since they may need to\r", "+\t\t\t\t\t// flush their respective namelookup caches (all pkg fragment roots).\r", "+\r", "+\t\t\t\t\tIClasspathEntry[] classpath = project.getExpandedClasspath(true);\r", "+\t\t\t\t\tfor (int j = 0, entryCount = classpath.length; j < entryCount; j++) {\r", "+\t\t\t\t\t\tIClasspathEntry entry = classpath[j];\r", "+\t\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_PROJECT\r", "+\t\t\t\t\t\t\t&& entry.getPath().equals(prerequisiteProjectPath)) {\r", "+\t\t\t\t\t\t\tproject.updateClassPath(this.fMonitor, this.canChangeResource, this.mayChangeProjectDependencies);\r", "+\t\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t} catch (JavaModelException e) {\r", "+\t\t}\r", "+\t\t\r", "-\tprotected void updateAffectedProjects(IPath prerequisiteProjectPath) {\r", "-\t\ttry {\r", "-\t\t\tIJavaModel model = JavaModelManager.getJavaModelManager().getJavaModel();\r", "-\t\t\tIJavaProject originatingProject =  ((IJavaProject) getElementsToProcess()[0]);\r", "-\t\t\tIJavaProject[] projects = model.getJavaProjects();\r", "-\t\t\tfor (int i = 0, projectCount = projects.length; i < projectCount; i++) {\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tJavaProject project = (JavaProject) projects[i];\r", "-\t\t\t\t\tif (project.equals(originatingProject)) continue; // skip itself\r", "-\t\t\t\t\t\r", "-\t\t\t\t\t// consider ALL dependents (even indirect ones), since they may need to\r", "-\t\t\t\t\t// flush their respective namelookup caches (all pkg fragment roots).\r", "-\r", "-\t\t\t\t\tIClasspathEntry[] classpath = project.getExpandedClasspath(true);\r", "-\t\t\t\t\tfor (int j = 0, entryCount = classpath.length; j < entryCount; j++) {\r", "-\t\t\t\t\t\tIClasspathEntry entry = classpath[j];\r", "-\t\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_PROJECT\r", "-\t\t\t\t\t\t\t&& entry.getPath().equals(prerequisiteProjectPath)) {\r", "-\t\t\t\t\t\t\tproject.updateClassPath(this.fMonitor, this.canChangeResource, this.mayChangeProjectDependencies);\r", "-\t\t\t\t\t\t\tbreak;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "-\t\t} catch (JavaModelException e) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e18884b1674a272f7d3b6b756ca5cf9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "bbf01bd45c20dcf892a1672b9d9c504b05790a01", "commitAfterChange": "64f2a5b8a78095fa170a97cceb8e661d31b0ae71", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tprotected ArrayList determineAffectedPackageFragments(IPath location) throws JavaModelException", "signatureAfterChange": "\r \tprotected ArrayList determineAffectedPackageFragments(IPath location) throws JavaModelException", "diff": ["-\t\tJavaProject project = ((JavaProject) getElementsToProcess()[0]);\r", "+\t\tJavaProject project =getProject();\r", "+\t}\r"]}], "num": 40777}