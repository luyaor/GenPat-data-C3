{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "450de00b5e93a9fe6a0170ec1913292d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57adee4428f4f31f8290396dbf551945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r \tpublic String toString()", "signatureAfterChange": "\r \r \tpublic String toString()", "diff": ["+\t\tswitch(complianceLevel){\r", "+\t\t\tcase JDK1_1 :\r", "+\t\t\t\tbuf.append(\"\\n-compliance JDK: 1.1\"); //$NON-NLS-1$\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase JDK1_2 :\r", "+\t\t\t\tbuf.append(\"\\n-compliance JDK: 1.2\"); //$NON-NLS-1$\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase JDK1_3 :\r", "+\t\t\t\tbuf.append(\"\\n-compliance JDK: 1.3\"); //$NON-NLS-1$\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase JDK1_4 :\r", "+\t\t\t\tbuf.append(\"\\n-compliance JDK: 1.4\"); //$NON-NLS-1$\r", "+\t\t\t\tbreak;\r", "+\t\t}\r", "+\t\tbuf.append(\"\\n-encoding : \" + (defaultEncoding == null ? \"<default>\" : defaultEncoding)); //$NON-NLS-1$ //$NON-NLS-2$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fad171919afde080d7be7aa56b0f037c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/TypeAnnotationSyntaxTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \t\tpublic void storeLocations(Annotation annotation, int[] tab)", "signatureAfterChange": "\r \t\tpublic void storeLocations(Annotation annotation, int[] tab)", "diff": ["-\t\t\tStringBuffer buffer = new StringBuffer(\"{\");\r", "-\t\t\tfor (int i = 0, max = tab.length; i < max; i++) {\r", "+\t\t\t\r", "+\t\t\tStringBuffer buffer = new StringBuffer(\"[\");\r", "+\t\t\tfor (int i = 0, max = tab.length; i < max; i += 2) {\r", "-\t\t\t\t\tbuffer.append(',');\r", "+\t\t\t\t\tbuffer.append(\", \");\r", "-\t\t\t\tbuffer.append(tab[i]);\r", "+\t\t\t\tswitch (tab[i]) {\r", "+\t\t\t\tcase 0:\r", "+\t\t\t\t\tbuffer.append(\"ARRAY\");\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase 1:\r", "+\t\t\t\t\tbuffer.append(\"INNER_TYPE\");\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase 2:\r", "+\t\t\t\t\tbuffer.append(\"WILDCARD\");\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase 3:\r", "+\t\t\t\t\tbuffer.append(\"TYPE_ARGUMENT(\").append(tab[i+1]).append(')');\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "-\t\t\tbuffer.append('}');\r", "+\t\t\tbuffer.append(']');\r"]}], "num": 40344}