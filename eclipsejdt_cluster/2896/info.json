{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "610e800d60a0c02cf17b87fa5cb02fe8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c65a92ac86261e0938c16ce77c4667f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/CompilationUnitSorter.java", "commitBeforeChange": "c270ff57e75841606a99505b6ccf3e93c595f397", "commitAfterChange": "9d28ff91378f9bfbe6756ae0331a10fbb52d3dba", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static void sort(ICompilationUnit compilationUnit, int[] positions, Comparator comparator, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void sort(IJavaElement workingCopy, int[] positions, Comparator comparator, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tpublic static void sort(ICompilationUnit compilationUnit, int[] positions, Comparator comparator, IProgressMonitor monitor) throws CoreException {", "-\t    // TODO: (olivier) Should throw IllegalArgumentException if compilationUnit == null", "-\t    // TODO: (olivier) Should throw IllegalArgumentException if comparator == null", "-\t\tif (comparator == null || compilationUnit == null) {", "-\t\t\treturn;", "-\t\t}", "-\t\tSortElementsOperation operation = new SortElementsOperation(new ICompilationUnit[] { compilationUnit }, new int[][] {positions}, comparator);", "-\t\tJavaCore.run(operation, monitor);", "+\tpublic static void sort(IJavaElement workingCopy, int[] positions, Comparator comparator, IProgressMonitor monitor) throws JavaModelException {", "+\t\tsort(new IJavaElement[] { workingCopy }, new int[][] {positions}, comparator, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df49dd37d98d198ef83144145cff26c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "1ce14f7d38953baa0407a7c04bf1e650dc1a4ab4", "commitAfterChange": "188c9c7dc3851a0a188854f7875a3d0a8c55cb71", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private static HashMap workingCopiesThatCanSeeFocus(org.eclipse.jdt.core.ICompilationUnit[] copies, IJavaElement focus, boolean isPolymorphicSearch, SearchParticipant participant)", "signatureAfterChange": " private static HashMap workingCopiesThatCanSeeFocus(org.eclipse.jdt.core.ICompilationUnit[] copies, SearchPattern pattern, SearchParticipant participant)", "diff": ["-private static HashMap workingCopiesThatCanSeeFocus(org.eclipse.jdt.core.ICompilationUnit[] copies, IJavaElement focus, boolean isPolymorphicSearch, SearchParticipant participant) {", "+private static HashMap workingCopiesThatCanSeeFocus(org.eclipse.jdt.core.ICompilationUnit[] copies, SearchPattern pattern, SearchParticipant participant) {", "-\tif (focus != null) {", "-\t\twhile (!(focus instanceof IJavaProject) && !(focus instanceof JarPackageFragmentRoot)) {", "-\t\t\tfocus = focus.getParent();", "-\t\t}", "-\t}", "-\t\tif (focus == null || IndexSelector.canSeeFocus(focus, isPolymorphicSearch, projectOrJar)) {", "+\t\tif (pattern.focus == null || IndexSelector.canSeeFocus(pattern, projectOrJar)) {"]}], "num": 2896}