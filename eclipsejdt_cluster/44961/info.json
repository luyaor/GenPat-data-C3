{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "39d12be456b44d9bccb99a6449f599a0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30f73b2ff60cf6ab66c7f568637d3121", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testMethodReferencesStringPatternMultipleParamArguments01() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesStringPatternMultipleParamArguments01() throws CoreException", "diff": ["-\t\tsearch(\"generic % <?, ? extends Exception, ? super RuntimeException>\", METHOD, REFERENCES, scope, resultCollector);", "+\t\tsearch(\"<?, ? extends Exception, ? super RuntimeException>generic\", METHOD, REFERENCES, scope, resultCollector);", "-\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [generic(new Object(), new Exception(), new RuntimeException())] EQUIVALENT_MATCH\\n\" + ", "-\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [generic(new Object(), new RuntimeException(), new RuntimeException())] EQUIVALENT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.test() [<Object, Exception, RuntimeException>generic(new Object(), new Exception(), new RuntimeException())] EQUIVALENT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [<Object, RuntimeException, RuntimeException>generic(new Object(), new RuntimeException(), new RuntimeException())] EQUIVALENT_MATCH\\n\" + ", "-\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testMultiple() [generic(new Object(), new Exception(), new RuntimeException())] ERASURE_MATCH\"", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testMultiple() [generic(new Object(), new Exception(), new RuntimeException())] EQUIVALENT_RAW_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "610390c67e13754df89283355601cffd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "98ef2023c1555c55d1d5f30d49ca5e0fe4a5637e", "commitAfterChange": "5e1853176b39914c72e5ae320d60681d91f16d56", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void test045() throws CoreException", "signatureAfterChange": " \tpublic void test045() throws CoreException", "diff": ["-\t\t\t\t\"Lp1/X;\",", "-\t\t\t\t\"Lp1/Y<+Lp1/X;>;\"", "+\t\t\t\t\"Lp1/X;^1\",", "+\t\t\t\t\"Lp1/Y<+Lp1/X;>;^1\"", "-\t\t\t\"Lp1/X;\\n\" +", "-\t\t\t\"Lp1/Y<+Lp1/X;>;\",", "+\t\t\t\"Lp1/X;^1\\n\" +", "+\t\t\t\"Lp1/Y<+Lp1/X;>;^1\","]}], "num": 44961}