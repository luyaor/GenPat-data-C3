{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d12a68e029121ec0d0eba580570ce11f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f3a05f15ea2bc561c8fe29b5509b19b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "634c1488daeae83b3e903190d0e876028963ffaa", "commitAfterChange": "98ef2023c1555c55d1d5f30d49ca5e0fe4a5637e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope unused)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope unused)", "diff": ["-\t\t\tif (typeDeclaration.allocation == null || typeDeclaration.allocation.enumConstant == null) {", "-\t\t\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {\t\t\t\t", "-\t\t\t\t\treportMatching(typeDeclaration, this.enclosingElement, -1, nodeSet, occurrenceCount);", "-\t\t\t\t} else {", "-\t\t\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(typeDeclaration);", "-\t\t\t\t\treportMatching(typeDeclaration, this.enclosingElement, level != null ? level.intValue() : -1, nodeSet, occurrenceCount);", "-\t\t\t\t}", "+\t\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {\t\t\t\t", "+\t\t\t\treportMatching(typeDeclaration, this.enclosingElement, -1, nodeSet, occurrenceCount);", "-\t\t\t\tif (level != null) {", "-\t\t\t\t\tFieldDeclaration enumConstant = typeDeclaration.allocation.enumConstant;", "-\t\t\t\t\tint offset = enumConstant.sourceStart;", "-\t\t\t\t\tSearchMatch match = newDeclarationMatch(this.enclosingElement, this.enclosingElementBinding, level.intValue(), offset, enumConstant.sourceEnd-offset+1);", "-\t\t\t\t\treport(match);", "-\t\t\t\t}", "+\t\t\t\treportMatching(typeDeclaration, this.enclosingElement, level != null ? level.intValue() : -1, nodeSet, occurrenceCount);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7bf5e79d705c1600a4c7f0e9a1394b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5e6cea593f4be5a13a34ce02970d8b34d029a673", "commitAfterChange": "0473b4fed0787a43089ff37104916db5b418eb5b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope unused)", "signatureAfterChange": " \tpublic boolean visit(TypeDeclaration typeDeclaration, BlockScope unused)", "diff": ["-\t\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {\t\t\t\t", "-\t\t\t\treportMatching(typeDeclaration, enclosingElement, -1, nodeSet, occurrenceCount);", "+\t\t\tif (typeDeclaration.allocation == null || typeDeclaration.allocation.enumConstant == null) {", "+\t\t\t\tif ((typeDeclaration.bits & ASTNode.IsAnonymousTypeMASK) != 0) {\t\t\t\t", "+\t\t\t\t\treportMatching(typeDeclaration, enclosingElement, -1, nodeSet, occurrenceCount);", "+\t\t\t\t} else {", "+\t\t\t\t\tInteger level = (Integer) nodeSet.matchingNodes.removeKey(typeDeclaration);", "+\t\t\t\t\treportMatching(typeDeclaration, enclosingElement, level != null ? level.intValue() : -1, nodeSet, occurrenceCount);", "+\t\t\t\t}", "-\t\t\t\treportMatching(typeDeclaration, enclosingElement, level != null ? level.intValue() : -1, nodeSet, occurrenceCount);", "+\t\t\t\tif (level != null) {", "+\t\t\t\t\tFieldDeclaration enumConstant = typeDeclaration.allocation.enumConstant;", "+\t\t\t\t\tint offset = enumConstant.sourceStart;", "+\t\t\t\t\tSearchMatch match = newDeclarationMatch(enclosingElement, level.intValue(), offset, enumConstant.sourceEnd-offset+1);", "+\t\t\t\t\treport(match);", "+\t\t\t\t}"]}], "num": 58213}