{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eae3e8d9a00c52a248d71c5193c4b8b0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43486a1cb4e8721167b60fae1bcf067d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "435dbfda478b30bc22cc75e0040a1a2627ce2c03", "commitAfterChange": "ae336908d63283be4362fa9c31b6c0130b37d725", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected void reportDeclaration(MethodBinding methodBinding, MatchLocator locator, SimpleSet knownMethods) throws CoreException", "signatureAfterChange": " protected void reportDeclaration(MethodBinding methodBinding, MatchLocator locator, SimpleSet knownMethods) throws CoreException", "diff": ["-\tfor (int i = 0; i  < parameterLength; i++)", "-\t\tparameterTypes[i] = Signature.createTypeSignature(parameters[i].sourceName(), false);", "+\tfor (int i = 0; i  < parameterLength; i++) {", "+\t\tchar[] typeName = parameters[i].shortReadableName();", "+\t\tparameterTypes[i] = Signature.createTypeSignature(typeName, false);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "582a9f1b4d3c898a2f37d027812a779c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileInfo.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " private void generateAnnotationsInfos(BinaryMember member, IBinaryAnnotation[] binaryAnnotations, long tagBits, HashMap newElements)", "signatureAfterChange": " private void generateAnnotationsInfos(JavaElement member, char[] parameterName, IBinaryAnnotation[] binaryAnnotations, long tagBits, HashMap newElements)", "diff": ["-private void generateAnnotationsInfos(BinaryMember member, IBinaryAnnotation[] binaryAnnotations, long tagBits, HashMap newElements) {", "+private void generateAnnotationsInfos(JavaElement member, char[] parameterName, IBinaryAnnotation[] binaryAnnotations, long tagBits, HashMap newElements) {", "-\t\t\tgenerateAnnotationInfo(member, newElements, annotationInfo);", "+\t\t\tgenerateAnnotationInfo(member, parameterName, newElements, annotationInfo, null);", "-\tgenerateStandardAnnotationsInfos(member, tagBits, newElements);", "-}", "+\tgenerateStandardAnnotationsInfos(member, parameterName, tagBits, newElements);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0d06ce22330d398cc7a9d1f52206aec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "d46ae5068b0714a5ab659842d2655702483f78d9", "commitAfterChange": "11ed80480677499136ec35fc0806c11b6fa177e4", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public char[] getSourceName()", "signatureAfterChange": " public char[] getSourceName()", "diff": ["-\t\t\tname = new char[name.length - start];", "-\t\t\tSystem.arraycopy(name, start, name, 0, name.length);", "+\t\t\tchar[] newName = new char[name.length - start];", "+\t\t\tSystem.arraycopy(name, start, newName, 0, newName.length);", "+\t\t\tname = newName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed9c9a0d008c12d80993b7c3a9d5f178", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodBinding.java", "commitBeforeChange": "1a1d0cd5c3f07449055c9cbfb6cdfb82225939ca", "commitAfterChange": "563f1e739f7eaff2bdc82dc1444b07f38b7a7a82", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic boolean overrides(IMethodBinding overridenMethod)", "signatureAfterChange": " \tpublic boolean overrides(IMethodBinding overridenMethod)", "diff": ["-\t\tif (!CharOperation.equals(this.binding.selector, overridenCompilerBinding.selector))", "+\t\tchar[] selector = this.binding.selector;", "+\t\tif (!CharOperation.equals(selector, overridenCompilerBinding.selector))", "-\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding[] superMethods = ((ReferenceBinding)match).methods();", "+\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding[] superMethods = ((ReferenceBinding)match).getMethods(selector);"]}], "num": 19007}