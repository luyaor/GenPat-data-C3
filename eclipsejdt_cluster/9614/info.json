{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b72b77c785f8cc83811d9ebf163f04b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8d209c602899f34c8a3c45ec0c734c55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "1d272a4d3d292ca9861e3b30a4f14abda17cb010", "commitAfterChange": "650909e8cb3636454033b091607121770e4ba739", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void checkNPEbyUnboxing(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " protected void checkNPEbyUnboxing(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tif ((this.implicitConversion & UNBOXING) != 0) {", "-\t\tint status = nullStatus(flowInfo, flowContext);", "-\t\tif ((status & FlowInfo.NULL) != 0)", "-\t\t\tscope.problemReporter().nullUnboxing(this, this.resolvedType);", "-\t\telse if ((status & FlowInfo.POTENTIALLY_NULL) != 0)", "-\t\t\tscope.problemReporter().potentialNullUnboxing(this, this.resolvedType);", "+\tif ((this.implicitConversion & UNBOXING) != 0", "+\t\t\t&& (this.bits & ASTNode.IsNonNull) == 0", "+\t\t\t&& nullStatus(flowInfo, flowContext) != FlowInfo.NON_NULL)", "+\t{", "+\t\tflowContext.recordUnboxing(scope, this, flowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b48b433e5d81aec7bc2238f1a49501b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "57dec4f97ab62d03709eb0f38c04abeae05153fc", "commitAfterChange": "6959c7be7767b62f5fa53e20bd2cfda242ece473", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " protected void checkNPEbyUnboxing(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " protected void checkNPEbyUnboxing(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tif ((this.implicitConversion & UNBOXING) != 0) {", "-\t\tint status = nullStatus(flowInfo, flowContext);", "-\t\tif ((status & FlowInfo.NULL) != 0)", "-\t\t\tscope.problemReporter().nullUnboxing(this, this.resolvedType);", "-\t\telse if ((status & FlowInfo.POTENTIALLY_NULL) != 0)", "-\t\t\tscope.problemReporter().potentialNullUnboxing(this, this.resolvedType);", "+\tif ((this.implicitConversion & UNBOXING) != 0", "+\t\t\t&& (this.bits & ASTNode.IsNonNull) == 0", "+\t\t\t&& nullStatus(flowInfo, flowContext) != FlowInfo.NON_NULL)", "+\t{", "+\t\tflowContext.recordUnboxing(scope, this, flowInfo);"]}], "num": 9614}