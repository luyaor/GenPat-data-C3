{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a207fde99215e2b6d3c685efd7b15c9d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6008f8e6b576eb7598452da96cb14178", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "3585d9ff750517d96f094a12a4fb99e502636c59", "commitAfterChange": "59449ee231c1cab95a8f7ec24b57c991cddf580d", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\tmethod.selector = methodInfo.getSelector();", "+\t\tmethod.selector = methodHandle.getElementName().toCharArray();", "-\t\tchar[][] argumentTypeNames = methodInfo.getArgumentTypeNames();", "+\t\tString[] argumentTypeSignatures = methodHandle.getParameterTypes();", "-\t\tint argumentCount = argumentTypeNames == null ? 0 : argumentTypeNames.length;", "+\t\tint argumentCount = argumentTypeSignatures == null ? 0 : argumentTypeSignatures.length;", "-\t\t\tTypeReference typeReference = createTypeReference(argumentTypeNames[i], start, end);", "+\t\t\tchar[] typeName = Signature.toCharArray(argumentTypeSignatures[i].toCharArray());", "+\t\t\tTypeReference typeReference = createTypeReference(typeName, start, end);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95a6fe391bb56d32472d5cf0c83c9606", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "0afb6a8af8c4303e5dd78ba653e96f2baec6aaff", "commitAfterChange": "1decf6de90c742ae800c62bb40e904ecf7cf0dbd", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic SingleVariableDeclaration convert(org.eclipse.jdt.internal.compiler.ast.Argument argument)", "signatureAfterChange": " \t \tpublic SingleVariableDeclaration convert(org.eclipse.jdt.internal.compiler.ast.Argument argument)", "diff": ["-\t\tfinal int extraDimensions = retrieveExtraDimension(nameEnd + 1, argument.type.sourceEnd);", "+\t\tfinal int typeSourceEnd = argument.type.sourceEnd;", "+\t\tfinal int extraDimensions = retrieveExtraDimension(nameEnd + 1, typeSourceEnd);", "+\t\tfinal boolean isVarArgs = argument.isVarArgs;", "+\t\tif (isVarArgs && extraDimensions == 0) {", "+\t\t\t// remove the ellipsis from the type source end", "+\t\t\targument.type.sourceEnd = retrieveEllipsisStartPosition(argument.type.sourceStart, typeSourceEnd);", "+\t\t}", "-\t\tsetTypeForSingleVariableDeclaration(variableDecl, type, extraDimensions);", "+\t\tif (isVarArgs) {", "+\t\t\tsetTypeForSingleVariableDeclaration(variableDecl, type, extraDimensions + 1);", "+\t\t} else {", "+\t\t\tsetTypeForSingleVariableDeclaration(variableDecl, type, extraDimensions);", "+\t\t}", "-\t\tif (argument.isVarArgs) {", "+\t\tif (isVarArgs) {"]}], "num": 68821}