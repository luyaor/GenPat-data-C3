{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "00dd8279a496c3e7cf8d5122cb2998a4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bc6c9d4c59a67486301297f50b0c34e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic StringBuffer print(int tab, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer print(int indent, StringBuffer output)", "diff": ["-\tpublic StringBuffer print(int tab, StringBuffer output) {", "+\tpublic StringBuffer print(int indent, StringBuffer output) {", "-\t\tprintIndent(tab, output);", "-\t\tprintHeader(0, output);", "-\t\treturn printBody(tab, output);", "+\t\tif ((this.bits & IsAnonymousTypeMASK) == 0) {", "+\t\t\tprintIndent(indent, output);", "+\t\t\tprintHeader(0, output);", "+\t\t}", "+\t\treturn printBody(indent, output);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfe6592fbaa98203a8bed0272d0a58c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "20d87d7260da51837a3bc4f2cefbc874868e947f", "commitAfterChange": "b780374be3c7661000af7572b9b8f18e78e84d97", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedTb)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedTb)", "diff": ["-\t\tTypeBinding leafComponentType = expectedTb.leafComponentType();", "-\t\tif (leafComponentType.isBoundParameterizedType() || leafComponentType.isGenericType() || leafComponentType.isTypeVariable()) {", "-\t\t    scope.problemReporter().illegalGenericArray(leafComponentType, this);", "+\t\tif ((this.bits & IsAnnotationDefaultValue) == 0) { // annotation default value need only to be commensurate JLS9.7", "+\t\t\tTypeBinding leafComponentType = expectedTb.leafComponentType();", "+\t\t\tif (leafComponentType.isBoundParameterizedType() || leafComponentType.isGenericType() || leafComponentType.isTypeVariable()) {", "+\t\t\t    scope.problemReporter().illegalGenericArray(leafComponentType, this);", "+\t\t\t}"]}], "num": 63426}