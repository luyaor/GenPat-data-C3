{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "66752194b072b5ae180e43b45ca28c23", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ac338f456f35c91130392909c10d183", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic static void containerPut(IJavaProject project, IPath containerPath, IClasspathContainer container)", "signatureAfterChange": "  \tpublic synchronized void containerPut(IJavaProject project, IPath containerPath, IClasspathContainer container)", "diff": ["-", "-\tpublic static void containerPut(IJavaProject project, IPath containerPath, IClasspathContainer container){", "-", "-\t\tMap projectContainers = (Map)Containers.get(project);", "-\t\tif (projectContainers == null){", "-\t\t\tprojectContainers = new HashMap(1);", "-\t\t\tContainers.put(project, projectContainers);", "-", "-\t\tif (container == null) {", "-\t\t\tprojectContainers.remove(containerPath);", "-\t\t\tMap previousContainers = (Map)PreviousSessionContainers.get(project);", "-\t\t\tif (previousContainers != null){", "-\t\t\t\tpreviousContainers.remove(containerPath);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tprojectContainers.put(containerPath, container);", "-\t\t// do not write out intermediate initialization value", "-\t\tif (container == JavaModelManager.ContainerInitializationInProgress) {", "+\tpublic synchronized void containerPut(IJavaProject project, IPath containerPath, IClasspathContainer container){", "+", "+\t\t// set/unset the initialization in progress", "+\t\tHashSet projectInitializations = containerInitializationInProgress(project);", "+\t\tif (container == CONTAINER_INITIALIZATION_IN_PROGRESS) {", "+\t\t\tprojectInitializations.add(containerPath);", "+\t\t\t", "+\t\t\t// do not write out intermediate initialization value", "+\t\t} else {", "+\t\t\tprojectInitializations.remove(containerPath);", "+", "+\t\t\tMap projectContainers = (Map)this.containers.get(project);", "+\t\t\tif (projectContainers == null){", "+\t\t\t\tprojectContainers = new HashMap(1);", "+\t\t\t\tthis.containers.put(project, projectContainers);", "+\t\t\t}", "+\t", "+\t\t\tif (container == null) {", "+\t\t\t\tprojectContainers.remove(containerPath);", "+\t\t\t\tMap previousContainers = (Map)this.previousSessionContainers.get(project);", "+\t\t\t\tif (previousContainers != null){", "+\t\t\t\t\tpreviousContainers.remove(containerPath);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tprojectContainers.put(containerPath, container);", "+\t\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d6a5691df094bcbdb261f60d98da43a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 76, "signatureBeforeChange": " \t \tpublic static void variablePut(String variableName, IPath variablePath)", "signatureAfterChange": " \t \tpublic synchronized void variablePut(String variableName, IPath variablePath)", "diff": ["-\tpublic static void variablePut(String variableName, IPath variablePath){\t\t", "+\tpublic synchronized void variablePut(String variableName, IPath variablePath){\t\t", "-\t\t// update cache - do not only rely on listener refresh\t\t", "-\t\tif (variablePath == null) {", "-\t\t\tVariables.remove(variableName);", "-\t\t\tPreviousSessionVariables.remove(variableName);", "+\t\t// set/unset the initialization in progress", "+\t\tHashSet initializations = variableInitializationInProgress();", "+\t\tif (variablePath == VARIABLE_INITIALIZATION_IN_PROGRESS) {", "+\t\t\tinitializations.add(variableName);", "+\t\t\t", "+\t\t\t// do not write out intermediate initialization value", "+\t\t\treturn;", "-\t\t\tVariables.put(variableName, variablePath);", "+\t\t\tinitializations.remove(variableName);", "+", "+\t\t\t// update cache - do not only rely on listener refresh\t\t", "+\t\t\tif (variablePath == null) {", "+\t\t\t\tthis.variables.remove(variableName);", "+\t\t\t\tthis.previousSessionVariables.remove(variableName);", "+\t\t\t} else {", "+\t\t\t\tthis.variables.put(variableName, variablePath);", "+\t\t\t}", "-\t\t// do not write out intermediate initialization value", "-\t\tif (variablePath == JavaModelManager.VariableInitializationInProgress){", "-\t\t\treturn;", "-\t\t} "]}], "num": 55145}