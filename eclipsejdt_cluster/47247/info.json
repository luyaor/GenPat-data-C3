{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "08144a4ad40d25799da4d0c684b562c4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1171bf68a73cd0664c6b51050a5f68ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 51, "signatureBeforeChange": " \t \tprivate void parseParameterizedType(char[] typeName)", "signatureAfterChange": " \t \tprivate void parseParameterizedType(char[] typeName)", "diff": ["+\t\tboolean isRaw = false;", "-\t\t\tint rank = 0;", "-\t\t\twhile (!this.scanner.isAtParametersEnd()) {", "-\t\t \t\tif (this.scanner.isAtWildCardStart()) {", "-\t\t \t\t\tparseWildCard(rank++);", "-\t\t \t\t} else {", "-\t\t\t\t\tparseTypeArgument();", "-\t\t \t\t}", "-\t\t\t}", "+\t\t\tif (!this.scanner.isAtRawTypeEnd()) {", "+\t\t\t\tint rank = 0;", "+\t\t\t\twhile (!this.scanner.isAtParametersEnd()) {", "+\t\t\t \t\tif (this.scanner.isAtWildCardStart()) {", "+\t\t\t \t\t\tparseWildCard(rank++);", "+\t\t\t \t\t} else {", "+\t\t\t\t\t\tparseTypeArgument();", "+\t\t\t \t\t}", "+\t\t\t\t}", "+\t\t\t}  else", "+\t\t\t\tisRaw = true;", "-\t\t} // else raw type", "-\t\tconsumeParameterizedType(typeName);", "+\t\t}", "+\t\tconsumeParameterizedType(typeName, isRaw);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7e01fa1d91b2d48f98034796968bcde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c402029b38147be2cd0f42a1bb5c1a1481c8b2ce", "commitAfterChange": "e1f625872c6ea8a6afcf65ff18174690b205ac3b", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 91, "signatureBeforeChange": "  \tprotected FieldDeclaration convertToFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl)", "signatureAfterChange": "  \tprotected FieldDeclaration convertToFieldDeclaration(org.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDecl)", "diff": ["+\t\tIVariableBinding binding = null;", "-\t\t\tvariableDeclarationFragment.resolveBinding();", "+\t\t\tbinding = variableDeclarationFragment.resolveBinding();", "-\t\tconvert(fieldDecl.javadoc, fieldDeclaration);", "+\t\tif (!(this.resolveBindings && binding == null)) {", "+\t\t\tconvert(fieldDecl.javadoc, fieldDeclaration);", "+\t\t}"]}], "num": 47247}