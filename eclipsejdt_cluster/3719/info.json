{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee3b1d1e45e271e4db4b2c4e63169123", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "739b4290e1fe01373aa817405cd9fb19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/BatchImageBuilder.java", "commitBeforeChange": "ea81c272b69912e71302bc84e8947277cf4904b9", "commitAfterChange": "54503993aac98c2e38062e5e25d7566a8b5f1389", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r protected void copyExtraResourcesBack() throws CoreException", "signatureAfterChange": "\r \r protected void copyExtraResourcesBack() throws CoreException", "diff": ["+\t\tif (sourceFolders[i].getFullPath().equals(outputPath)){\r", "+\t\t\t// if one source folder corresponds to the output location, then do nothing\r", "+\t\t\t// since some resource could be duplicated amongst source folders,\r", "+\t\t\t// or if the project == src == bin, then nothing is required anyway\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t}\r", "+\tfor (int i = 0, length = sourceFolders.length; i < length; i++) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b7c42604d840b1bd0684059c0b5ddd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "1302cba8a2d9e7deb014096a0cf438c7f031d8f4", "commitAfterChange": "629f19b9848dc98d62568a3c9b1db94e81597d7a", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "signatureAfterChange": " private MethodBinding resolveTypesFor(MethodBinding method)", "diff": ["-\tif (typeParameters != null) methodDecl.scope.connectTypeVariables(typeParameters);", "+\tif (typeParameters != null) {", "+\t\tmethodDecl.scope.connectTypeVariables(typeParameters);", "+\t\t// Perform deferred bound checks for type variables (only done after type variable hierarchy is connected)", "+\t\tfor (int i = 0, paramLength = typeParameters.length; i < paramLength; i++) {", "+\t\t\ttypeParameters[i].checkBounds(methodDecl.scope);", "+\t\t}", "+\t}", "-\t\t\tresolvedExceptionType = (ReferenceBinding) exceptionTypes[i].resolveType(methodDecl.scope);", "+\t\t\tresolvedExceptionType = (ReferenceBinding) exceptionTypes[i].resolveType(methodDecl.scope, true /* check bounds*/);", "-\t\t\tTypeBinding parameterType = arg.type.resolveType(methodDecl.scope);", "+\t\t\tTypeBinding parameterType = arg.type.resolveType(methodDecl.scope, true /* check bounds*/);", "-\t\t    TypeBinding methodType = returnType.resolveType(methodDecl.scope);", "+\t\t    TypeBinding methodType = returnType.resolveType(methodDecl.scope, true /* check bounds*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efd72ad193be82db390cbe50a161026a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "ce858a15f46aefb0dc8389458854ece8758b0996", "commitAfterChange": "072e01f334627655a97de39ed1aaf9675b446587", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic static void setClasspathVariables( \t\tString[] variableNames, \t\tIPath[] paths, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathVariables( \t\tString[] variableNames, \t\tIPath[] paths, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\t//TODO: (philippe) should check that null cannot be used as variable paths", "+\t\tfor (int i = 0, max = paths.length; i < max; i++) {", "+\t\t\tif (paths[i] == null) Assert.isTrue(false, \"Variable path cannot be null\"); //$NON-NLS-1$", "+\t\t}"]}], "num": 3719}