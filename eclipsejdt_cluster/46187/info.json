{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f037595ea50be8b24f14e65be1d24b5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5432f7b1ba7a98edcf9f2171abf92eba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b98c5445ecec402caa11dd14f61dc75d1a13da5a", "commitAfterChange": "d785f90166aa4c50a893672b2f8b10875313fedd", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic void test0103()", "signatureAfterChange": " \tpublic void test0103() throws Exception", "diff": ["-\tpublic void test0103() {", "+\tpublic void test0103() throws Exception {", "-\t\ttry {", "-\t\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "-\t\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\t\tint index = result.indexOf(expectedOutput);", "-\t\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t\t}", "-\t\t\tif (index == -1) {", "-\t\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t\t}", "-\t\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\t\tassertTrue(false);", "-\t\t} catch (IOException e) {", "-\t\t\tassertTrue(false);", "+\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X.class\");", "+\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\t\tint index = result.indexOf(expectedOutput);", "+\t\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\t\tSystem.out.println(Util.displayString(result, 3));", "+\t\t}", "+\t\tif (index == -1) {", "+\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0ccdff0f4b45379d3df60744c010c61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "3827e55a7e48418475562fed89b9638fa933aedf", "commitAfterChange": "b98c5445ecec402caa11dd14f61dc75d1a13da5a", "methodNumberBeforeChange": 1258, "methodNumberAfterChange": 1258, "signatureBeforeChange": " public void test1228()", "signatureAfterChange": " public void test1228()  throws Exception", "diff": ["-public void test1228() {", "+public void test1228()  throws Exception {", "-\ttry {", "-\t\tFile f = new File(OUTPUT_DIR + File.separator + \"X$BInner$BInnerInner.class\");", "-\t\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "-\t\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "-\t\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "-\t\tint index = result.indexOf(expectedOutput);", "-\t\tif (index == -1 || expectedOutput.length() == 0) {", "-\t\t\tSystem.out.println(Util.displayString(result, 3));", "-\t\t}", "-\t\tif (index == -1) {", "-\t\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "-\t\t}", "-\t} catch (org.eclipse.jdt.core.util.ClassFormatException e) {", "-\t\tassertTrue(false);", "-\t} catch (IOException e) {", "-\t\tassertTrue(false);", "-\t}\t\t\t", "+\tFile f = new File(OUTPUT_DIR + File.separator + \"X$BInner$BInnerInner.class\");", "+\tbyte[] classFileBytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(f);", "+\tClassFileBytesDisassembler disassembler = ToolFactory.createDefaultClassFileBytesDisassembler();", "+\tString result = disassembler.disassemble(classFileBytes, \"\\n\", ClassFileBytesDisassembler.DETAILED);", "+\tint index = result.indexOf(expectedOutput);", "+\tif (index == -1 || expectedOutput.length() == 0) {", "+\t\tSystem.out.println(Util.displayString(result, 3));", "+\t}", "+\tif (index == -1) {", "+\t\tassertEquals(\"Wrong contents\", expectedOutput, result);", "+\t}"]}], "num": 46187}