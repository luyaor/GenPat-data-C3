{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "604926b6ac139c27f4336d0a80cea4cd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae7226c8d59601339c3d040d7a03e897", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "c74124c71dc16aadffc9c127481cf29440dd03c8", "commitAfterChange": "2d053de9651cebac3cf0a82f4012b7196ccb5c83", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-    \t\tthis.exactMethodBinding = isMethodReference() ? scope.getExactMethod(lhsType, this.selector, this) : scope.getExactConstructor(lhsType, this);", "+    \t\tif (lhsType != null && !lhsType.isRawType()) // RawType::m and RawType::new are not exact method references", "+    \t\t\tthis.exactMethodBinding = isMethodReference() ? scope.getExactMethod(lhsType, this.selector, this) : scope.getExactConstructor(lhsType, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5622a3a2e5684bf0b8ed6d863fd3cd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/XMLWriter.java", "commitBeforeChange": "52122b3855e6f0a9596ec4f8fb56fcf44094c219", "commitAfterChange": "79c00ebc09dd86d77f7afcfde083ecfe86e6c03b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void printTag(String name, HashMap parameters, boolean insertTab, boolean insertNewLine, boolean closeTag)", "signatureAfterChange": " \tpublic void printTag(String name, HashMap parameters, boolean insertTab, boolean insertNewLine, boolean closeTag)", "diff": ["-\t\t} else {", "-\t\t\ttab++;", "+\t\tif (parameters != null && !closeTag)", "+\t\t\tthis.tab++;", "+"]}], "num": 44462}