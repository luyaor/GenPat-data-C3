{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de98911a35764ff88619e9126a51f45d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c1e1dcc82ff2cc80449cd8419a0d21e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tpublic boolean visit(TryStatement node)", "signatureAfterChange": " \tpublic boolean visit(TryStatement node)", "diff": ["+\t\tList resources = node.resources();", "+\t\tif (node.getAST().apiLevel() >= AST.JLS4) {", "+\t\t\tif (!node.resources().isEmpty()) {", "+\t\t\t\tthis.buffer.append('(');", "+\t\t\t\tfor (Iterator it = resources.iterator(); it.hasNext(); ) {", "+\t\t\t\t\tVariableDeclarationExpression variable = (VariableDeclarationExpression) it.next();", "+\t\t\t\t\tvariable.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(';');", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthis.buffer.append(')');", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d20a77ed33e97f47416d0e5e975ae7e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "commitAfterChange": "095f68551aabc4fec8e028b2a81b692255ffc31a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic boolean visit(ClassInstanceCreation node)", "signatureAfterChange": " \tpublic boolean visit(ClassInstanceCreation node)", "diff": ["+\t\t\tif (!node.typeParameters().isEmpty()) {", "+\t\t\t\tthis.buffer.append(\"<\");//$NON-NLS-1$", "+\t\t\t\tfor (Iterator it = node.typeParameters().iterator(); it.hasNext(); ) {", "+\t\t\t\t\tTypeParameter t = (TypeParameter) it.next();", "+\t\t\t\t\tt.accept(this);", "+\t\t\t\t\tif (it.hasNext()) {", "+\t\t\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tthis.buffer.append(\">\");//$NON-NLS-1$", "+\t\t\t}"]}], "num": 55569}