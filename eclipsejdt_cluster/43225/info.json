{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96934d983c0940195a0ea857fe4fdb64", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "123dfc32f22ef45437a3db3cc70170a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "25ceba4552ce4df8b00117185ea4a4cf292544fd", "commitAfterChange": "e31e89499c545f3404d7787f4d333516631375ec", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "signatureAfterChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "diff": ["-\t\t\t\t\t\tthis.superclass = scope.getJavaLangObject();", "-\t\t\t\t\t\tthis.superInterfaces = new ReferenceBinding[] { (ReferenceBinding) capturedWildcardBound };", "+\t\t\t\t\t\tthis.setSuperClass(scope.getJavaLangObject());", "+\t\t\t\t\t\tthis.setSuperInterfaces(new ReferenceBinding[] { (ReferenceBinding) capturedWildcardBound });", "-\t\t\t\t\t\t\tthis.superclass = scope.getJavaLangObject();", "+\t\t\t\t\t\t\tthis.setSuperClass(scope.getJavaLangObject());", "-\t\t\t\t\t\t\tthis.superclass = (ReferenceBinding) capturedWildcardBound;", "+\t\t\t\t\t\t\tthis.setSuperClass((ReferenceBinding) capturedWildcardBound);", "-\t\t\t\t\t\tthis.superInterfaces = Binding.NO_SUPERINTERFACES;", "+\t\t\t\t\t\tthis.setSuperInterfaces(Binding.NO_SUPERINTERFACES);", "-\t\t\t\t\tthis.firstBound =  capturedWildcardBound;", "+\t\t\t\t\tthis.setFirstBound(capturedWildcardBound);", "-\t\t\t\t\tthis.superclass = scope.getJavaLangObject();", "-\t\t\t\t\tthis.superInterfaces = Binding.NO_SUPERINTERFACES;", "+\t\t\t\t\tthis.setSuperClass(scope.getJavaLangObject());", "+\t\t\t\t\tthis.setSuperInterfaces(Binding.NO_SUPERINTERFACES);", "-\t\t\t\t\tthis.superclass = scope.getJavaLangObject();", "-\t\t\t\t\tthis.superInterfaces = Binding.NO_SUPERINTERFACES;", "+\t\t\t\t\tthis.setSuperClass(scope.getJavaLangObject());", "+\t\t\t\t\tthis.setSuperInterfaces(Binding.NO_SUPERINTERFACES);", "-\t\t\t\t\tthis.superclass = substitutedVariableSuperclass;", "+\t\t\t\t\tthis.setSuperClass(substitutedVariableSuperclass);", "-\t\t\t\t\t\tthis.superInterfaces = new ReferenceBinding[] { (ReferenceBinding) capturedWildcardBound };", "+\t\t\t\t\t\tthis.setSuperInterfaces(new ReferenceBinding[] { (ReferenceBinding) capturedWildcardBound });", "-\t\t\t\t\t\tthis.superInterfaces = Scope.greaterLowerBound(substitutedVariableInterfaces);", "+\t\t\t\t\t\tthis.setSuperInterfaces(Scope.greaterLowerBound(substitutedVariableInterfaces));", "-\t\t\t\t\t\tthis.superclass = substitutedVariableSuperclass;", "+\t\t\t\t\t\tthis.setSuperClass(substitutedVariableSuperclass);", "-\t\t\t\t\t\tthis.superclass = (ReferenceBinding) capturedWildcardBound;", "+\t\t\t\t\t\tthis.setSuperClass((ReferenceBinding) capturedWildcardBound);", "-\t\t\t\t\t\t\tthis.superclass = substitutedVariableSuperclass;", "+\t\t\t\t\t\t\tthis.setSuperClass(substitutedVariableSuperclass);", "-\t\t\t\t\tthis.superInterfaces = substitutedVariableInterfaces;", "+\t\t\t\t\tthis.setSuperInterfaces(substitutedVariableInterfaces);", "-\t\t\t\tthis.firstBound =  capturedWildcardBound;", "+\t\t\t\tthis.setFirstBound(capturedWildcardBound);", "-\t\t\t\tthis.superclass = substitutedVariableSuperclass;", "-\t\t\t\tthis.superInterfaces = substitutedVariableInterfaces;", "+\t\t\t\tthis.setSuperClass(substitutedVariableSuperclass);", "+\t\t\t\tthis.setSuperInterfaces(substitutedVariableInterfaces);", "-\t\t\t\tthis.superclass = substitutedVariableSuperclass;", "+\t\t\t\tthis.setSuperClass(substitutedVariableSuperclass);", "-\t\t\t\t\tthis.firstBound = substitutedVariableSuperclass;", "+\t\t\t\t\tthis.setFirstBound(substitutedVariableSuperclass);", "-\t\t\t\tthis.superInterfaces = substitutedVariableInterfaces;", "+\t\t\t\tthis.setSuperInterfaces(substitutedVariableInterfaces);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a5a0c2bd2109d3656dd9c3c135b1360", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t\t \tpublic static final Constant computeConstantOperationREMAINDER(Constant left, int leftId, Constant right, int rightId)", "signatureAfterChange": " \t\t \tpublic static final Constant computeConstantOperationREMAINDER(Constant left, int leftId, Constant right, int rightId)", "diff": ["-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.charValue() % right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.charValue() % right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.charValue() % right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.charValue() % right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.charValue() % right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.charValue() % right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.charValue() % right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.charValue() % right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.charValue() % right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.charValue() % right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.charValue() % right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.charValue() % right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.charValue() % right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.charValue() % right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.floatValue() % right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.floatValue() % right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.floatValue() % right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.floatValue() % right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.floatValue() % right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.floatValue() % right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.floatValue() % right.longValue());", "+\t\t\t\t\tcase T_char :\treturn FloatConstant.fromValue(left.floatValue() % right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.floatValue() % right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.floatValue() % right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn FloatConstant.fromValue(left.floatValue() % right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn FloatConstant.fromValue(left.floatValue() % right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn FloatConstant.fromValue(left.floatValue() % right.intValue());", "+\t\t\t\t\tcase T_long:\treturn FloatConstant.fromValue(left.floatValue() % right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.doubleValue() % right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.doubleValue() % right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.doubleValue() % right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.doubleValue() % right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.doubleValue() % right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.doubleValue() % right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.doubleValue() % right.longValue());", "+\t\t\t\t\tcase T_char :\treturn DoubleConstant.fromValue(left.doubleValue() % right.charValue());", "+\t\t\t\t\tcase T_float:\treturn DoubleConstant.fromValue(left.doubleValue() % right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.doubleValue() % right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn DoubleConstant.fromValue(left.doubleValue() % right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn DoubleConstant.fromValue(left.doubleValue() % right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn DoubleConstant.fromValue(left.doubleValue() % right.intValue());", "+\t\t\t\t\tcase T_long:\treturn DoubleConstant.fromValue(left.doubleValue() % right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.byteValue() % right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.byteValue() % right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.byteValue() % right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.byteValue() % right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.byteValue() % right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.byteValue() % right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.byteValue() % right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.byteValue() % right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.byteValue() % right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.byteValue() % right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.byteValue() % right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.byteValue() % right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.byteValue() % right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.byteValue() % right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.shortValue() % right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.shortValue() % right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.shortValue() % right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.shortValue() % right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.shortValue() % right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.shortValue() % right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.shortValue() % right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.shortValue() % right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.shortValue() % right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.shortValue() % right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.shortValue() % right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.shortValue() % right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.shortValue() % right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.shortValue() % right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.intValue() % right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.intValue() % right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.intValue() % right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.intValue() % right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.intValue() % right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.intValue() % right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.intValue() % right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.intValue() % right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.intValue() % right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.intValue() % right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.intValue() % right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.intValue() % right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.intValue() % right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.intValue() % right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.longValue() % right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.longValue() % right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.longValue() % right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.longValue() % right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.longValue() % right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.longValue() % right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.longValue() % right.longValue());", "+\t\t\t\t\tcase T_char :\treturn LongConstant.fromValue(left.longValue() % right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.longValue() % right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.longValue() % right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn LongConstant.fromValue(left.longValue() % right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn LongConstant.fromValue(left.longValue() % right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn LongConstant.fromValue(left.longValue() % right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.longValue() % right.longValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cbd3d90bc60784a18ca4785bd8e2dd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "   \t \tpublic static final Constant computeConstantOperationMINUS(Constant left, int leftId, Constant right, int rightId)", "signatureAfterChange": "   \t \tpublic static final Constant computeConstantOperationMINUS(Constant left, int leftId, Constant right, int rightId)", "diff": ["-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.charValue() - right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.charValue() - right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.charValue() - right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.charValue() - right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.charValue() - right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.charValue() - right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.charValue() - right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.charValue() - right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.charValue() - right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.charValue() - right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.charValue() - right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.charValue() - right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.charValue() - right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.charValue() - right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.floatValue() - right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.floatValue() - right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.floatValue() - right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.floatValue() - right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.floatValue() - right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.floatValue() - right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.floatValue() - right.longValue());", "+\t\t\t\t\tcase T_char :\treturn FloatConstant.fromValue(left.floatValue() - right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.floatValue() - right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.floatValue() - right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn FloatConstant.fromValue(left.floatValue() - right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn FloatConstant.fromValue(left.floatValue() - right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn FloatConstant.fromValue(left.floatValue() - right.intValue());", "+\t\t\t\t\tcase T_long:\treturn FloatConstant.fromValue(left.floatValue() - right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.doubleValue() - right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.doubleValue() - right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.doubleValue() - right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.doubleValue() - right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.doubleValue() - right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.doubleValue() - right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.doubleValue() - right.longValue());", "+\t\t\t\t\tcase T_char :\treturn DoubleConstant.fromValue(left.doubleValue() - right.charValue());", "+\t\t\t\t\tcase T_float:\treturn DoubleConstant.fromValue(left.doubleValue() - right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.doubleValue() - right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn DoubleConstant.fromValue(left.doubleValue() - right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn DoubleConstant.fromValue(left.doubleValue() - right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn DoubleConstant.fromValue(left.doubleValue() - right.intValue());", "+\t\t\t\t\tcase T_long:\treturn DoubleConstant.fromValue(left.doubleValue() - right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.byteValue() - right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.byteValue() - right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.byteValue() - right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.byteValue() - right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.byteValue() - right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.byteValue() - right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.byteValue() - right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.byteValue() - right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.byteValue() - right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.byteValue() - right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.byteValue() - right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.byteValue() - right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.byteValue() - right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.byteValue() - right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.shortValue() - right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.shortValue() - right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.shortValue() - right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.shortValue() - right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.shortValue() - right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.shortValue() - right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.shortValue() - right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.shortValue() - right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.shortValue() - right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.shortValue() - right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.shortValue() - right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.shortValue() - right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.shortValue() - right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.shortValue() - right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.intValue() - right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.intValue() - right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.intValue() - right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.intValue() - right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.intValue() - right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.intValue() - right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.intValue() - right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.intValue() - right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.intValue() - right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.intValue() - right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.intValue() - right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.intValue() - right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.intValue() - right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.intValue() - right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.longValue() - right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.longValue() - right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.longValue() - right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.longValue() - right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.longValue() - right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.longValue() - right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.longValue() - right.longValue());", "+\t\t\t\t\tcase T_char :\treturn LongConstant.fromValue(left.longValue() - right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.longValue() - right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.longValue() - right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn LongConstant.fromValue(left.longValue() - right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn LongConstant.fromValue(left.longValue() - right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn LongConstant.fromValue(left.longValue() - right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.longValue() - right.longValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85ccd8b2c96c684788fcc448eee68b72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t\t \tpublic static final Constant computeConstantOperationDIVIDE(Constant left, int leftId, Constant right, int rightId)", "signatureAfterChange": " \t\t \tpublic static final Constant computeConstantOperationDIVIDE(Constant left, int leftId, Constant right, int rightId)", "diff": ["-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.charValue() / right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.charValue() / right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.charValue() / right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.charValue() / right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.charValue() / right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.charValue() / right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.charValue() / right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.charValue() / right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.charValue() / right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.charValue() / right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.charValue() / right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.charValue() / right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.charValue() / right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.charValue() / right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.floatValue() / right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.floatValue() / right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.floatValue() / right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.floatValue() / right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.floatValue() / right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.floatValue() / right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.floatValue() / right.longValue());", "+\t\t\t\t\tcase T_char :\treturn FloatConstant.fromValue(left.floatValue() / right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.floatValue() / right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.floatValue() / right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn FloatConstant.fromValue(left.floatValue() / right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn FloatConstant.fromValue(left.floatValue() / right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn FloatConstant.fromValue(left.floatValue() / right.intValue());", "+\t\t\t\t\tcase T_long:\treturn FloatConstant.fromValue(left.floatValue() / right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.doubleValue() / right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.doubleValue() / right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.doubleValue() / right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.doubleValue() / right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.doubleValue() / right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.doubleValue() / right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.doubleValue() / right.longValue());", "+\t\t\t\t\tcase T_char :\treturn DoubleConstant.fromValue(left.doubleValue() / right.charValue());", "+\t\t\t\t\tcase T_float:\treturn DoubleConstant.fromValue(left.doubleValue() / right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.doubleValue() / right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn DoubleConstant.fromValue(left.doubleValue() / right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn DoubleConstant.fromValue(left.doubleValue() / right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn DoubleConstant.fromValue(left.doubleValue() / right.intValue());", "+\t\t\t\t\tcase T_long:\treturn DoubleConstant.fromValue(left.doubleValue() / right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.byteValue() / right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.byteValue() / right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.byteValue() / right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.byteValue() / right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.byteValue() / right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.byteValue() / right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.byteValue() / right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.byteValue() / right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.byteValue() / right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.byteValue() / right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.byteValue() / right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.byteValue() / right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.byteValue() / right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.byteValue() / right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.shortValue() / right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.shortValue() / right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.shortValue() / right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.shortValue() / right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.shortValue() / right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.shortValue() / right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.shortValue() / right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.shortValue() / right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.shortValue() / right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.shortValue() / right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.shortValue() / right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.shortValue() / right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.shortValue() / right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.shortValue() / right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.intValue() / right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.intValue() / right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.intValue() / right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.intValue() / right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.intValue() / right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.intValue() / right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.intValue() / right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.intValue() / right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.intValue() / right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.intValue() / right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.intValue() / right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.intValue() / right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.intValue() / right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.intValue() / right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.longValue() / right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.longValue() / right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.longValue() / right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.longValue() / right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.longValue() / right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.longValue() / right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.longValue() / right.longValue());", "+\t\t\t\t\tcase T_char :\treturn LongConstant.fromValue(left.longValue() / right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.longValue() / right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.longValue() / right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn LongConstant.fromValue(left.longValue() / right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn LongConstant.fromValue(left.longValue() / right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn LongConstant.fromValue(left.longValue() / right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.longValue() / right.longValue());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0332053a94442781896e1c72cc41548", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/Constant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tpublic static final Constant computeConstantOperationMULTIPLY(Constant left, int leftId, Constant right, int rightId)", "signatureAfterChange": " \t \tpublic static final Constant computeConstantOperationMULTIPLY(Constant left, int leftId, Constant right, int rightId)", "diff": ["-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.charValue() * right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.charValue() * right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.charValue() * right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.charValue() * right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.charValue() * right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.charValue() * right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.charValue() * right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.charValue() * right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.charValue() * right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.charValue() * right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.charValue() * right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.charValue() * right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.charValue() * right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.charValue() * right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.floatValue() * right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.floatValue() * right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.floatValue() * right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.floatValue() * right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.floatValue() * right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.floatValue() * right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.floatValue() * right.longValue());", "+\t\t\t\t\tcase T_char :\treturn FloatConstant.fromValue(left.floatValue() * right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.floatValue() * right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.floatValue() * right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn FloatConstant.fromValue(left.floatValue() * right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn FloatConstant.fromValue(left.floatValue() * right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn FloatConstant.fromValue(left.floatValue() * right.intValue());", "+\t\t\t\t\tcase T_long:\treturn FloatConstant.fromValue(left.floatValue() * right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.doubleValue() * right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.doubleValue() * right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.doubleValue() * right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.doubleValue() * right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.doubleValue() * right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.doubleValue() * right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.doubleValue() * right.longValue());", "+\t\t\t\t\tcase T_char :\treturn DoubleConstant.fromValue(left.doubleValue() * right.charValue());", "+\t\t\t\t\tcase T_float:\treturn DoubleConstant.fromValue(left.doubleValue() * right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.doubleValue() * right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn DoubleConstant.fromValue(left.doubleValue() * right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn DoubleConstant.fromValue(left.doubleValue() * right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn DoubleConstant.fromValue(left.doubleValue() * right.intValue());", "+\t\t\t\t\tcase T_long:\treturn DoubleConstant.fromValue(left.doubleValue() * right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.byteValue() * right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.byteValue() * right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.byteValue() * right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.byteValue() * right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.byteValue() * right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.byteValue() * right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.byteValue() * right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.byteValue() * right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.byteValue() * right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.byteValue() * right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.byteValue() * right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.byteValue() * right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.byteValue() * right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.byteValue() * right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.shortValue() * right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.shortValue() * right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.shortValue() * right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.shortValue() * right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.shortValue() * right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.shortValue() * right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.shortValue() * right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.shortValue() * right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.shortValue() * right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.shortValue() * right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.shortValue() * right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.shortValue() * right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.shortValue() * right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.shortValue() * right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.intValue() * right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.intValue() * right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.intValue() * right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.intValue() * right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.intValue() * right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.intValue() * right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.intValue() * right.longValue());", "+\t\t\t\t\tcase T_char :\treturn IntConstant.fromValue(left.intValue() * right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.intValue() * right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.intValue() * right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn IntConstant.fromValue(left.intValue() * right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn IntConstant.fromValue(left.intValue() * right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn IntConstant.fromValue(left.intValue() * right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.intValue() * right.longValue());", "-\t\t\t\t\tcase T_char :\treturn Constant.fromValue(left.longValue() * right.charValue());", "-\t\t\t\t\tcase T_float:\treturn Constant.fromValue(left.longValue() * right.floatValue());", "-\t\t\t\t\tcase T_double:\treturn Constant.fromValue(left.longValue() * right.doubleValue());", "-\t\t\t\t\tcase T_byte:\treturn Constant.fromValue(left.longValue() * right.byteValue());", "-\t\t\t\t\tcase T_short:\treturn Constant.fromValue(left.longValue() * right.shortValue());", "-\t\t\t\t\tcase T_int:\t\treturn Constant.fromValue(left.longValue() * right.intValue());", "-\t\t\t\t\tcase T_long:\treturn Constant.fromValue(left.longValue() * right.longValue());", "+\t\t\t\t\tcase T_char :\treturn LongConstant.fromValue(left.longValue() * right.charValue());", "+\t\t\t\t\tcase T_float:\treturn FloatConstant.fromValue(left.longValue() * right.floatValue());", "+\t\t\t\t\tcase T_double:\treturn DoubleConstant.fromValue(left.longValue() * right.doubleValue());", "+\t\t\t\t\tcase T_byte:\treturn LongConstant.fromValue(left.longValue() * right.byteValue());", "+\t\t\t\t\tcase T_short:\treturn LongConstant.fromValue(left.longValue() * right.shortValue());", "+\t\t\t\t\tcase T_int:\t\treturn LongConstant.fromValue(left.longValue() * right.intValue());", "+\t\t\t\t\tcase T_long:\treturn LongConstant.fromValue(left.longValue() * right.longValue());"]}], "num": 43225}