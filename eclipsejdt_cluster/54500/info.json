{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15ced8329a088f257e7a8193179fb93d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7abf3feacccc68ed039ee2f130a93496", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/DefaultProblemFactory.java", "commitBeforeChange": "f3797939fa5164cd62a3ae51074dba1ccea759ff", "commitAfterChange": "0df341e86846b5d019d9adfde0716c02f828f524", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " public static String[] loadMessageTemplates(Locale loc)", "signatureAfterChange": " public static HashtableOfInt loadMessageTemplates(Locale loc)", "diff": ["-public static String[] loadMessageTemplates(Locale loc) {", "+public static HashtableOfInt loadMessageTemplates(Locale loc) {", "-\tString[] templates = new String[MAX_MESSAGES];", "-\tfor (int i = 0, max = templates.length; i < max; i++) {", "-\t\ttry {", "-\t\t\ttemplates[i] = bundle.getString(String.valueOf(i));", "+\tHashtableOfInt templates = new HashtableOfInt(700);", "+\tEnumeration keys = bundle.getKeys();", "+\twhile (keys.hasMoreElements()) {", "+\t    String key = (String)keys.nextElement();", "+\t    try {", "+\t        int messageID = Integer.parseInt(key);", "+\t\t\ttemplates.put(keyFromID(messageID), bundle.getString(key));", "+\t    } catch(NumberFormatException e) {", "+\t        // key ill-formed", "-\t\t}", "+\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6f8a5d713dce6cd329ba45d42955e67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "5978fb5add266a6b89021d9e3d0424d77fb0f8da", "commitAfterChange": "108542969a1d7f14803221b232d5a5fa98603735", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprivate void handleCoreException(CoreException e)", "signatureAfterChange": " \tprivate void handleCoreException(CoreException e)", "diff": ["+\t\tIStatus status = e.getStatus();", "+\t\tString message = e.getMessage();", "+\t\tif (status.isMultiStatus()) {", "+\t\t\tMultiStatus multiStatus = (MultiStatus) status;", "+\t\t\tIStatus[] children = multiStatus.getChildren();", "+\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\tfor (int i = 0, max = children.length; i < max; i++) {", "+\t\t\t\tIStatus child = children[i];", "+\t\t\t\tif (child != null) {", "+\t\t\t\t\tbuffer.append(child.getMessage());", "+\t\t\t\t\tbuffer.append(System.getProperty(\"line.separator\"));//$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tmessage = String.valueOf(buffer);", "+\t\t}", "-\t\t\t\"Core exception in testing environment: \" + e.getMessage()); //$NON-NLS-1$", "+\t\t\t\"Core exception in testing environment: \" + message); //$NON-NLS-1$"]}], "num": 54500}