{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1357f9eb2fca9c9343cb5df7f2ffbce6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17292f1f8bc91a211de0c518a670cf59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "signatureAfterChange": " public TypeBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "diff": ["-\t\t    // do not allow type variables to match with erasures for free", "-\t\t    if (!otherType.isTypeVariable()) otherType = otherType.erasure();", "-\t\t    if (this == otherType || (!isTypeVariable() && erasure() == otherType)) return this;", "+\t\t    // do not allow type variables/intersection types to match with erasures for free", "+\t\t    if (!otherType.isTypeVariable() && !otherType.isIntersectionType()) otherType = otherType.erasure();", "+\t\t    if (this == otherType || (!isTypeVariable() && !isIntersectionType() && erasure() == otherType)) return this;", "-\t\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && currentType.erasure() == otherType)) return currentType;", "+\t\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure() == otherType)) return currentType;", "-\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && currentType.erasure() == otherType))", "+\t\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure() == otherType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35b3b0596e8aa65312da298781be06a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "41c63d173b783da585741afcc316e6689497e1b3", "commitAfterChange": "9211325c9e25bcdca490e5898b25afc780be94ca", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "signatureAfterChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "diff": ["-    if (!isTypeVariable()) {", "-    \t// no ID for type variables", "-        if (this.id == wellKnownErasureID || erasure().id == wellKnownErasureID) return this;", "-    }", "+    if (this.id == wellKnownErasureID || (!isTypeVariable() && erasure().id == wellKnownErasureID)) return this;", "-\t\t\tif (currentType.id == wellKnownErasureID || currentType.erasure().id == wellKnownErasureID) return currentType;", "+\t\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && currentType.erasure().id == wellKnownErasureID)) return currentType;", "-\t\t\tif ((currentType = interfaces[j]).id == wellKnownErasureID || currentType.erasure().id == wellKnownErasureID)", "+\t\t\tif ((currentType = interfaces[j]).id == wellKnownErasureID || (!currentType.isTypeVariable() && currentType.erasure().id == wellKnownErasureID))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "451ed6136d80c759a790089f04d546af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "41c63d173b783da585741afcc316e6689497e1b3", "commitAfterChange": "9211325c9e25bcdca490e5898b25afc780be94ca", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public ReferenceBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "signatureAfterChange": " public ReferenceBinding findSuperTypeWithSameErasure(TypeBinding otherType)", "diff": ["-    if (this == otherType) return this;", "-    ", "-    if (!otherType.isTypeVariable()) {", "-    \totherType = otherType.erasure();", "-   \t    if (!isTypeVariable() && erasure() == otherType) return this;", "-    }", "+    if (!otherType.isTypeVariable()) otherType = otherType.erasure();", "+    if (this == otherType || (!isTypeVariable() && erasure() == otherType)) return this;", "-\t\t\tif (currentType == otherType || currentType.erasure() == otherType) return currentType;", "+\t\t\tif (currentType == otherType || (!currentType.isTypeVariable() && currentType.erasure() == otherType)) return currentType;", "-\t\t\tif ((currentType = interfaces[j]) == otherType || currentType.erasure() == otherType)", "+\t\t\tif ((currentType = interfaces[j]) == otherType || (!currentType.isTypeVariable() && currentType.erasure() == otherType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2d789394039cf597320d0d68d67454b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "d0b9fa49059380aa33c580ecd386773dc780db14", "commitAfterChange": "297d21321fa4e0f1df8ca75fc42ba95a96cc17a8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "signatureAfterChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "diff": ["-\t\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure().id == wellKnownErasureID))", "+\t\t\tif (currentType.id == wellKnownErasureID)", "+\t\t\tswitch(currentType.kind()) {", "+\t\t\t\tcase Binding.PARAMETERIZED_TYPE :", "+\t\t\t\tcase Binding.RAW_TYPE :", "+\t\t\t\tcase Binding.ARRAY_TYPE :", "+\t\t\t\t\tif (currentType.erasure().id == wellKnownErasureID) ", "+\t\t\t\t\t\treturn currentType;", "+\t\t\t}", "-\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure().id == wellKnownErasureID))", "+\t\tif (currentType.id == wellKnownErasureID)", "-", "+\t\tswitch(currentType.kind()) {", "+\t\t\tcase Binding.PARAMETERIZED_TYPE :", "+\t\t\tcase Binding.RAW_TYPE :", "+\t\t\tcase Binding.ARRAY_TYPE : ", "+\t\t\t\tif (currentType.erasure().id == wellKnownErasureID) ", "+\t\t\t\t\treturn currentType;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f887813df63090b4782401037bbd90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBinding.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "signatureAfterChange": " public ReferenceBinding findSuperTypeOriginatingFrom(int wellKnownOriginalID, boolean originalIsClass)", "diff": ["-public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass) {", "+public ReferenceBinding findSuperTypeOriginatingFrom(int wellKnownOriginalID, boolean originalIsClass) {", "-    if (reference.id == wellKnownErasureID || (!isTypeVariable() && !isIntersectionType()  && erasure().id == wellKnownErasureID)) return reference;", "+    if (reference.id == wellKnownOriginalID || (original().id == wellKnownOriginalID)) return reference;", "-    if (erasureIsClass) {", "+    if (originalIsClass) {", "-\t\t\tif (currentType.id == wellKnownErasureID)", "+\t\t\tif (currentType.id == wellKnownOriginalID)", "-\t\t\tswitch(currentType.kind()) {", "-\t\t\t\tcase Binding.PARAMETERIZED_TYPE :", "-\t\t\t\tcase Binding.RAW_TYPE :", "-\t\t\t\tcase Binding.ARRAY_TYPE :", "-\t\t\t\t\tif (currentType.erasure().id == wellKnownErasureID) ", "-\t\t\t\t\t\treturn currentType;", "-\t\t\t}", "+\t\t\tif (currentType.original().id == wellKnownOriginalID) ", "+\t\t\t\treturn currentType;", "-\t\tif (currentType.id == wellKnownErasureID)", "+\t\tif (currentType.id == wellKnownOriginalID)", "-\t\tswitch(currentType.kind()) {", "-\t\t\tcase Binding.PARAMETERIZED_TYPE :", "-\t\t\tcase Binding.RAW_TYPE :", "-\t\t\tcase Binding.ARRAY_TYPE : ", "-\t\t\t\tif (currentType.erasure().id == wellKnownErasureID) ", "-\t\t\t\t\treturn currentType;", "-\t\t}", "+\t\tif (currentType.original().id == wellKnownOriginalID) ", "+\t\t\treturn currentType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbe1b1024b9383e9ad23110cddd102ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "signatureAfterChange": " public ReferenceBinding findSuperTypeErasingTo(int wellKnownErasureID, boolean erasureIsClass)", "diff": ["-    if (this.id == wellKnownErasureID || (!isTypeVariable() && erasure().id == wellKnownErasureID)) return this;", "+    if (this.id == wellKnownErasureID || (!isTypeVariable() && !isIntersectionType()  && erasure().id == wellKnownErasureID)) return this;", "-\t\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && currentType.erasure().id == wellKnownErasureID))", "+\t\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure().id == wellKnownErasureID))", "-\t\tif (itsInterfaces != Binding.NO_SUPERINTERFACES) {", "+\t\t// be resilient to unitialized interfaces (144976)", "+\t\tif (itsInterfaces != null && itsInterfaces != Binding.NO_SUPERINTERFACES) { // null check for extra resilience (144976)", "-\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && currentType.erasure().id == wellKnownErasureID))", "+\t\tif (currentType.id == wellKnownErasureID || (!currentType.isTypeVariable() && !currentType.isIntersectionType() && currentType.erasure().id == wellKnownErasureID))", "-\t\tif (itsInterfaces != Binding.NO_SUPERINTERFACES) {", "+\t\tif (itsInterfaces != null && itsInterfaces != Binding.NO_SUPERINTERFACES) {"]}], "num": 9159}