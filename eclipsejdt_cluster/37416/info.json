{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2711ec05cd272c0c03462d7d2a4a800a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16f8bb31c9e1db7e4ad09e741ca7f312", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "93b9a714e06865506483806f65cbe1e5a927344c", "commitAfterChange": "3af157fbd00b58fecb02a576cde9c4829d0022e5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\t\tif (this.isRaw)", "-\t\t\treturn super.computeUniqueKey(isLeaf);", "-\t\tint length = this.typeArguments.length;", "-\t\tfor (int i = 0; i < length; i++) {", "-\t\t\tTypeBinding typeArgument = this.typeArguments[i];", "-\t\t\tbuffer.append(typeArgument.computeUniqueKey(false/*not a leaf*/));", "+\t\tif (!this.isRaw) {", "+\t\t\tint length = this.typeArguments.length;", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tTypeBinding typeArgument = this.typeArguments[i];", "+\t\t\t\tbuffer.append(typeArgument.computeUniqueKey(false/*not a leaf*/));", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f973a5d5f16df949468e704fd810eb59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "fcb6b52dfb91300241dc1cd9c915f45219747f35", "commitAfterChange": "9d67e78041cfcf4ea8149504d41dd65a12494e92", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \t \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\t\t}\t   \t    ", "+\t\t}", "+\t\tReferenceBinding captureSourceType = null;", "-\t\t        sig.append(this.arguments[i].computeUniqueKey(false/*not a leaf*/));", "+\t\t    \tTypeBinding typeBinding = this.arguments[i];", "+\t\t        sig.append(typeBinding.computeUniqueKey(false/*not a leaf*/));", "+\t\t        if (typeBinding instanceof CaptureBinding)", "+\t\t        \tcaptureSourceType = ((CaptureBinding) typeBinding).sourceType;", "+\t\tif (captureSourceType != null && captureSourceType != this.type) {", "+\t\t\t// contains a capture binding", "+\t\t\tsig.insert(0, \"&\"); //$NON-NLS-1$", "+\t\t\tsig.insert(0, captureSourceType.computeUniqueKey(false/*not a leaf*/));", "+\t\t}"]}], "num": 37416}