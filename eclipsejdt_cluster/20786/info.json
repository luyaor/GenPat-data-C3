{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f10f12ba47b6a5bec3e77fa913754316", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05176fc8b9f9b4b3d933cc12de9c85ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "ef615d69291882d9684ed70ee76e1c7e60ee0223", "commitAfterChange": "ebe3ac242e4ea73be3e2b7919723445904292875", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate static void setUpFullSourceWorkspace() throws IOException, CoreException", "signatureAfterChange": " \tprivate static void setUpFullSourceWorkspace() throws IOException, CoreException", "diff": ["-\t\t\tif (DEBUG) System.out.print(\"Unzipping \"+fullSourceZipPath+\"...\");", "+\t\t\tlong start = System.currentTimeMillis();", "+\t\t\tif (PRINT) {", "+\t\t\t\tSystem.out.println(\"Unzipping \"+fullSourceZipPath);", "+\t\t\t\tSystem.out.print(\"\tin \"+targetWorkspacePath+\"...\");", "+\t\t\t}", "-\t\t\tif (DEBUG) System.out.println(\"done!\");", "+\t\t\tif (PRINT) System.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "-\t\tif (DEBUG) System.out.print(\"Set projects classpaths...\");", "+\t\tlong start = System.currentTimeMillis();", "+\t\tif (PRINT) System.out.print(\"Set projects classpaths...\");", "-\t\tif (DEBUG) System.out.println(\"done!\");", "+\t\tif (PRINT) System.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37d0b9748695052c090e38a6e9424ce3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "3916c67b0128c74e08a07f109332d68e11705964", "commitAfterChange": "db24d1d0025b319685ad3bf80253e7a07fb708a2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate void setUpFullSourceWorkspace() throws IOException, CoreException", "signatureAfterChange": " \tprivate void setUpFullSourceWorkspace() throws IOException, CoreException", "diff": ["-", "-\t\t// Get projects in workspace (save projects creation on local boxes...)", "+\t\t", "+\t\t// Get wksp info", "-\t\tIProject[] projects = workspaceRoot.getProjects();", "-\t\tint projectsLength = projects.length;", "+\t\tString targetWorkspacePath = workspaceRoot.getLocation().toFile().getCanonicalPath();", "-\t\t// If no projects then unzip file", "-\t\tif (projectsLength == 0) {", "-\t\t\tprojects = createFullSourceWorkspace();", "-\t\t\tprojectsLength = projects.length;", "+\t\t// Get projects directories", "+\t\tFile wkspDir = new File(targetWorkspacePath);", "+\t\tFullSourceProjectsFilter filter = new FullSourceProjectsFilter();", "+\t\tFile[] directories = wkspDir.listFiles(filter);", "+\t\tlong start = System.currentTimeMillis();", "+\t\tint dirLength = directories.length;", "+\t\tif (dirLength != 62) {", "+\t\t\tString fullSourceZipPath = getPluginDirectoryPath() + File.separator + \"full-source-R3_0.zip\";", "+\t\t\tSystem.out.println(\"Unzipping \"+fullSourceZipPath);", "+\t\t\tSystem.out.print(\"\tin \"+targetWorkspacePath+\"...\");", "+\t\t\tUtil.unzip(fullSourceZipPath, targetWorkspacePath);", "+\t\t\tSystem.out.println(\" done in \"+(System.currentTimeMillis()-start)+\"ms.\");", "-\t\tfor (int i = 0; i < projectsLength; i++) {", "-\t\t\tENV.addProject(projects[i]);", "+\t\tSystem.out.print(\"Create and open projects in environment...\");", "+\t\tstart = System.currentTimeMillis();", "+\t\tfor (int i = 0; i < dirLength; i++) {", "+\t\t\tString dirName = directories[i].getName();", "+\t\t\tIProject project = workspaceRoot.getProject(dirName);", "+\t\t\tif (project.exists()) {", "+\t\t\t\tENV.addProject(project);", "+\t\t\t} else {", "+\t\t\t\tENV.addProject(dirName);", "+\t\t\t}", "+\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8db78f7ae20f463bc40eb98eaae042cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "ef615d69291882d9684ed70ee76e1c7e60ee0223", "commitAfterChange": "ebe3ac242e4ea73be3e2b7919723445904292875", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private void setUpBigProject() throws CoreException", "signatureAfterChange": " private void setUpBigProject() throws CoreException", "diff": ["-\t\tif (PRINT) System.out.println(\"Create project \"+BIG_PROJECT_NAME+\":\");", "+\t\tif (PRINT) System.out.println(\"Create project \"+BIG_PROJECT_NAME+\" in \"+workspaceRoot.getLocation()+\":\");", "-\t\tif (PRINT) System.out.print(\"\t- create \"+FOLDERS_COUNT+\" folders and \"+PACKAGES_COUNT+\" packages...\");", "+\t\tif (PRINT) System.out.println(\"\t- create \"+FOLDERS_COUNT+\" folders and \"+PACKAGES_COUNT+\" packages...\");", "-\t\t\tif (PRINT && ((i+1)%10)==0) System.out.print(\"\t\t+ folder src\"+i+\"...\");", "+\t\t\tif (PRINT && i>0 && i%10==0) System.out.print(\"\t\t+ folder src\"+i+\"...\");", "-\t\t\tif (PRINT && ((i+1)%10)==0) System.out.println(\"(\"+(System.currentTimeMillis()-top)+\"ms)\");", "+\t\t\tif (PRINT && i>0 && i%10==0) System.out.println(\"(\"+(System.currentTimeMillis()-top)+\"ms)\");", "-\t\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "+\t\t\tSystem.out.println(\"\t\t=> global time = \"+(System.currentTimeMillis()-start)/1000.0+\" seconds)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a289cf6a2789d24be22a363bd450bdc9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "commitAfterChange": "9968b422e7cd1433b2cea24ec6c706b9b3cbabb8", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private void setUpBigProject() throws CoreException", "signatureAfterChange": " private void setUpBigProject() throws CoreException", "diff": ["-\t\tif (PRINT) System.out.println(\"Create project \"+BIG_PROJECT_NAME+\" in \"+workspaceRoot.getLocation()+\":\");", "+", "+\t\t// Print for log in case of project creation troubles...", "+\t\tSystem.out.println(\"Create project \"+BIG_PROJECT_NAME+\" in \"+workspaceRoot.getLocation()+\":\");", "+\t\tSystem.out.println(\"\t- create \"+FOLDERS_COUNT+\" folders and \"+PACKAGES_COUNT+\" packages...\");", "-\t\tif (PRINT) System.out.println(\"\t- create \"+FOLDERS_COUNT+\" folders and \"+PACKAGES_COUNT+\" packages...\");", "-\t\tif (PRINT) {", "-\t\t\tSystem.out.println(\"\t\t=> global time = \"+(System.currentTimeMillis()-start)/1000.0+\" seconds)\");", "-\t\t\tstart = System.currentTimeMillis();", "-\t\t\tSystem.out.print(\"\t- add project to full source workspace...\");", "-\t\t}", "+", "+\t\t// Print for log in case of project creation troubles...", "+\t\tSystem.out.println(\"\t\t=> global time = \"+(System.currentTimeMillis()-start)/1000.0+\" seconds)\");", "+\t\tstart = System.currentTimeMillis();", "+\t\tSystem.out.print(\"\t- add project to full source workspace...\");", "+", "+\t\t// Add project to workspace", "-\t\tif (PRINT) {", "-\t\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "-\t\t\tstart = System.currentTimeMillis();", "-\t\t\tSystem.out.print(\"\t- Create compilation unit with secondary type...\");", "-\t\t}", "+", "+\t\t// Print for log in case of project creation troubles...", "+\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "+\t\tstart = System.currentTimeMillis();", "+\t\tSystem.out.print(\"\t- Create compilation unit with secondary type...\");", "+", "+\t\t// Add CU with secondary type", "-\t\tif (PRINT) {", "-\t\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "-\t\t}", "+\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e30ba9f9f546c4ec92fee03b7af7dca1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "c5ef0e6fd93c55fc5204e498f5b58ab9f95c6ab7", "commitAfterChange": "9968b422e7cd1433b2cea24ec6c706b9b3cbabb8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate static void setUpFullSourceWorkspace() throws IOException, CoreException", "signatureAfterChange": " \tprivate static void setUpFullSourceWorkspace() throws IOException, CoreException", "diff": ["+\t\t\t// Print for log in case of project creation troubles...", "-\t\t\tif (PRINT) {", "-\t\t\t\tSystem.out.println(\"Unzipping \"+fullSourceZipPath);", "-\t\t\t\tSystem.out.print(\"\tin \"+targetWorkspacePath+\"...\");", "-\t\t\t}", "+\t\t\tSystem.out.println(\"Unzipping \"+fullSourceZipPath);", "+\t\t\tSystem.out.print(\"\tin \"+targetWorkspacePath+\"...\");", "+\t\t\t", "+\t\t\t// Unzip file", "-\t\t", "+", "+\t\t\t// Create and open projects", "-\t\t\tif (PRINT) System.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "+\t\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "-\t\t// workaround bug 73253 Project references not set on project open ", "+\t\t// Set classpaths (workaround bug 73253 Project references not set on project open)", "+\t\tSystem.out.print(\"Set projects classpaths...\");", "-\t\tif (PRINT) System.out.print(\"Set projects classpaths...\");", "-\t\tif (PRINT) System.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");", "+\t\tSystem.out.println(\"(\"+(System.currentTimeMillis()-start)+\"ms)\");"]}], "num": 20786}