{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2b8110c7e7867c311f4c7fea9faa3af", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32e69c23ec7603a01e677a6167d3aab5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "f790750ec986a60ef92ab62210a60e7bfe7f2a9e", "commitAfterChange": "5acc9f38696ecf93bf41e3ef5e2738b55bfe04e9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \r \tprivate void checkAndSetModifiersForVariable(LocalVariableBinding varBinding)", "signatureAfterChange": "\r \r \tprivate void checkAndSetModifiersForVariable(LocalVariableBinding varBinding)", "diff": ["-\t\tif ((modifiers & AccAlternateModifierProblem) != 0)\r", "-\t\t\tproblemReporter().duplicateModifierForVariable(varBinding.declaration);\r", "-\r", "+\t\tif ((modifiers & AccAlternateModifierProblem) != 0 && varBinding.declaration != null){\r", "+\t\t\tproblemReporter().duplicateModifierForVariable(varBinding.declaration, this instanceof MethodScope);\r", "+\t\t}\r", "+\t\t\r", "-\t\tif ((realModifiers & unexpectedModifiers) != 0)\r", "-\t\t\tproblemReporter().illegalModifierForVariable(varBinding.declaration);\r", "-\r", "+\t\tif ((realModifiers & unexpectedModifiers) != 0 && varBinding.declaration != null){ \r", "+\t\t\tproblemReporter().illegalModifierForVariable(varBinding.declaration, this instanceof MethodScope);\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "370aefa4a201d7e5e18a6f3432a17248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodScope.java", "commitBeforeChange": "7aac6f03ecf70666410b0e689c91dafd6d67757a", "commitAfterChange": "465d091146b1d6997709777ea444048487da1d8d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate void checkAndSetModifiersForMethod(MethodBinding methodBinding)", "signatureAfterChange": " \tprivate void checkAndSetModifiersForMethod(MethodBinding methodBinding)", "diff": ["-\t\t\tif ((realModifiers & ~(AccPublic | AccAbstract)) != 0)", "-\t\t\t\tproblemReporter().illegalModifierForInterfaceMethod(", "-\t\t\t\t\tmethodBinding.declaringClass,", "-\t\t\t\t\t(AbstractMethodDeclaration) referenceContext);", "+\t\t\tif ((realModifiers & ~(AccPublic | AccAbstract)) != 0) {", "+\t\t\t\tif ((methodBinding.declaringClass.modifiers & AccAnnotation) != 0) {", "+\t\t\t\t\tproblemReporter().illegalModifierForAnnotationMethod((AbstractMethodDeclaration) referenceContext);", "+\t\t\t\t} else {", "+\t\t\t\t\tproblemReporter().illegalModifierForInterfaceMethod((AbstractMethodDeclaration) referenceContext);", "+\t\t\t\t}", "+\t\t\t}", "-\t\t\tproblemReporter().illegalModifierForMethod(", "-\t\t\t\tmethodBinding.declaringClass,", "-\t\t\t\t(AbstractMethodDeclaration) referenceContext);", "+\t\t\tproblemReporter().illegalModifierForMethod((AbstractMethodDeclaration) referenceContext);"]}], "num": 32712}