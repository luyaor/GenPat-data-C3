{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6a3ac86e29ba2b28d248d91dea25141d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a0ac1ad42e1952c1cfcd2ff0682c1c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public MethodBinding[] methods()", "signatureAfterChange": " public MethodBinding[] methods()", "diff": ["-\t\t\t\t\t\t\tif (method.returnType.erasure() != method2.returnType.erasure()) {", "+\t\t\t\t\t\t\tif (TypeBinding.notEquals(method.returnType.erasure(), method2.returnType.erasure())) {", "-\t\t\t\t\t\t\t\t\t\tif (params1[index] != params2[index].erasure()) {", "+\t\t\t\t\t\t\t\t\t\tif (TypeBinding.notEquals(params1[index], params2[index].erasure())) {", "-\t\t\t\t\t\t\t\t\t\t\t\tif (params2[index].erasure() != ((RawTypeBinding)params1[index]).actualType()) {", "+\t\t\t\t\t\t\t\t\t\t\t\tif (TypeBinding.notEquals(params2[index].erasure(), ((RawTypeBinding)params1[index]).actualType())) {", "-\t\t\t\t\t\t\t\t\t\tif (params1[index] == params2[index]) {", "+\t\t\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(params1[index], params2[index])) {", "-\t\t\t\t\t\t\t\t\t\t\tif (params1[index].erasure() != params2[index]) {", "+\t\t\t\t\t\t\t\t\t\t\tif (TypeBinding.notEquals(params1[index].erasure(), params2[index])) {", "-\t\t\t\t\t\t\t\t\t\t\t\t\tif (params1[index].erasure() != ((RawTypeBinding)params2[index]).actualType()) {", "+\t\t\t\t\t\t\t\t\t\t\t\t\tif (TypeBinding.notEquals(params1[index].erasure(), ((RawTypeBinding)params2[index]).actualType())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c86fbbc2cba34f85c00063e7d55cdf13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 142, "methodNumberAfterChange": 142, "signatureBeforeChange": " \tprivate void findExceptionFromTryStatement( \t\t\tchar[] typeName, \t\t\tReferenceBinding exceptionType, \t\t\tReferenceBinding receiverType, \t\t\tSourceTypeBinding invocationType, \t\t\tBlockScope scope, \t\t\tObjectVector typesFound, \t\t\tboolean searchSuperClasses)", "signatureAfterChange": " \tprivate void findExceptionFromTryStatement( \t\t\tchar[] typeName, \t\t\tReferenceBinding exceptionType, \t\t\tReferenceBinding receiverType, \t\t\tSourceTypeBinding invocationType, \t\t\tBlockScope scope, \t\t\tObjectVector typesFound, \t\t\tboolean searchSuperClasses)", "diff": ["-\t\t\tif (exceptionType != javaLangThrowable) {", "+\t\t\tif (TypeBinding.notEquals(exceptionType, javaLangThrowable)) {", "-\t\t\t\twhile(superClass != null && superClass != javaLangThrowable) {", "+\t\t\t\twhile(superClass != null && TypeBinding.notEquals(superClass, javaLangThrowable)) {", "-\t\t\tif (exceptionType == otherType)", "+\t\t\tif (TypeBinding.equalsEquals(exceptionType, otherType))", "-\t\t\t\t\t\t\t\tif (localType == exceptionType) {", "+\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(localType, exceptionType)) {", "-\t\t\t\t\t\t\t\tif (memberTypes[j] == exceptionType) {", "+\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(memberTypes[j], exceptionType)) {", "-\t\t\t\t\t\t\t\tif (types[j] == exceptionType) {", "+\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(types[j], exceptionType)) {"]}], "num": 45818}