{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46338311c3bc78a720e3e3e83c60a2ea", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d89799b4f8b38db57a10d21939099c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForStatement.java", "commitBeforeChange": "8e33f97ee39e8610c3480bf6c8dc09b52195779b", "commitAfterChange": "fe0ff13a85af207787c3e61a795f2b7238947d6c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "diff": ["-\t\t}; ", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e37c3300b9911696fc3ea0377a16297d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "bcf05e1a23e85c2be26c967fe98fcd6135357ea5", "commitAfterChange": "bd19f394e99e7308ae085922e4bf1b95d3c9ebb7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void testCycle4() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle4() throws JavaModelException", "diff": ["-\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});", "+\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "-\t\texpectingCompilingOrder(new String[]{\"p2.Y\", \"p3.Z\", \"p2.Y\"});", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));", "+\t\texpectingCompilingOrder(new String[]{\"p2.Y\", \"p3.Z\", \"p2.Y\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$", "+\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p2\", \"The import p1 cannot be resolved\", c2),", "-\t\t\tnew Problem(\"p2\", \"X cannot be resolved (or is not a valid return type) for the method zork\", c2),", "-\t\t\tnew Problem(\"p2\", \"X cannot be resolved or is not a type\", c2),", "-\t\t\tnew Problem(\"p2\", \"The method foo() is undefined for the type Y\", c2),", "-\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)", "+\t\t\tnew Problem(\"p2\", \"The import p1 cannot be resolved\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p2\", \"X cannot be resolved (or is not a valid return type) for the method zork\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p2\", \"X cannot be resolved or is not a type\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p2\", \"The method foo() is undefined for the type Y\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\tnew Problem(\"p3\", \"X cannot be resolved (or is not a valid return type) for the method foo\", c3),", "-\t\t\tnew Problem(\"p3\", \"The import p1 cannot be resolved\", c3),", "-\t\t\tnew Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3)", "+\t\t\tnew Problem(\"p3\", \"X cannot be resolved (or is not a valid return type) for the method foo\", c3),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p3\", \"The import p1 cannot be resolved\", c3),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tnew Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\"});;", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));", "-\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));", "-\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));", "+\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\"}); //$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$//$NON-NLS-5$ ", "+\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 68372}