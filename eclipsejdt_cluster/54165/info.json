{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ac85e1a97d3ba3042b79a4c6d8a86b3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "022de27c0351261b15fde8c623a3cf3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "332e6bf80afa0c9205b8423548382e869a9bd2ee", "commitAfterChange": "33bc34a3821853585e57fb8a6558511c786d3cdf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);\t", "+\t\t\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10a256ac3b554e8f844e5b7c8b387127", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "332e6bf80afa0c9205b8423548382e869a9bd2ee", "commitAfterChange": "33bc34a3821853585e57fb8a6558511c786d3cdf", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t}", "-\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t}", "-\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t}", "-\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t}", "-\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "674623d8fbc439c89cf916fbd400f780", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "332e6bf80afa0c9205b8423548382e869a9bd2ee", "commitAfterChange": "33bc34a3821853585e57fb8a6558511c786d3cdf", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t}", "-\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t}", "-\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tif (!flowInfo.isMarkedAsNullOrNonNullInAssertExpression(local)) {", "+\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f6f20f8c53162a4c9b18e22835c5913", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "a8ebe98c7b687ea450305732efa25afb0944336e", "commitAfterChange": "96a09d96e56ab454cb92b7163871c6f3413e482e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, \t\t\tFlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, \t\t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\ttrueFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\ttrueFlowInfo.setReachMode(FlowInfo.UNREACHABLE_OR_DEAD);", "-\t\t\t\tfalseFlowInfo.setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\tfalseFlowInfo.setReachMode(FlowInfo.UNREACHABLE_OR_DEAD);", "-\t\t\t\ttrueInfoWhenTrue.setReachMode(FlowInfo.UNREACHABLE);\t\t\t\t", "+\t\t\t\ttrueInfoWhenTrue.setReachMode(FlowInfo.UNREACHABLE_OR_DEAD);\t\t\t\t", "-\t\t\t\tfalseInfoWhenTrue.setReachMode(FlowInfo.UNREACHABLE);\t", "+\t\t\t\tfalseInfoWhenTrue.setReachMode(FlowInfo.UNREACHABLE_OR_DEAD);\t", "-\t\t\t\ttrueInfoWhenFalse.setReachMode(FlowInfo.UNREACHABLE);\t", "+\t\t\t\ttrueInfoWhenFalse.setReachMode(FlowInfo.UNREACHABLE_OR_DEAD);\t", "-\t\t\t\tfalseInfoWhenFalse.setReachMode(FlowInfo.UNREACHABLE);\t", "+\t\t\t\tfalseInfoWhenFalse.setReachMode(FlowInfo.UNREACHABLE_OR_DEAD);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba8b9965e045ada933898ac6e953b01f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "a8ebe98c7b687ea450305732efa25afb0944336e", "commitAfterChange": "96a09d96e56ab454cb92b7163871c6f3413e482e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e713e999609e81c95944b78938652986", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "a8ebe98c7b687ea450305732efa25afb0944336e", "commitAfterChange": "96a09d96e56ab454cb92b7163871c6f3413e482e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\tflowInfo.initsWhenFalse().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);", "-\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE);", "+\t\t\t\t\t\t\tflowInfo.initsWhenTrue().setReachMode(FlowInfo.UNREACHABLE_BY_NULLANALYSIS);"]}], "num": 54165}