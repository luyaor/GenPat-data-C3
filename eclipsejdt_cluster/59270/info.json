{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22ef5c261d2fd172915cfb992ad217a2", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c254ecdf2c72905b64f07f1d7bb91ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic boolean visit(ClassInstanceCreation node)", "signatureAfterChange": " \tpublic boolean visit(ClassInstanceCreation node)", "diff": ["-\t\trewriteOptionalQualifier(node, ClassInstanceCreation.EXPRESSION_PROPERTY, node.getStartPosition());", "-\t\t", "-\t\tint pos= rewriteRequiredNode(node, ClassInstanceCreation.NAME_PROPERTY);", "+\t\tint pos= rewriteOptionalQualifier(node, ClassInstanceCreation.EXPRESSION_PROPERTY, node.getStartPosition());", "+\t\tif (node.getAST().apiLevel() == AST.JLS2) {", "+\t\t\tpos= rewriteRequiredNode(node, ClassInstanceCreation.NAME_PROPERTY);", "+\t\t} else {", "+\t\t\tif (isChanged(node, ClassInstanceCreation.TYPE_ARGUMENTS_PROPERTY)) {", "+\t\t\t\ttry {", "+\t\t\t\t\tpos= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNamenew, pos); //after 'new'", "+\t\t\t\t\trewriteOptionalTypeParameters(node, ClassInstanceCreation.TYPE_ARGUMENTS_PROPERTY, pos, \" \"); //$NON-NLS-1$", "+\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\thandleException(e);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tdoVisit(node, ClassInstanceCreation.TYPE_ARGUMENTS_PROPERTY, 0);", "+\t\t\t}", "+\t\t\tpos= rewriteRequiredNode(node, ClassInstanceCreation.TYPE_PROPERTY);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72758ef054de3c9422e74bfd5682a87b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 127, "signatureBeforeChange": " \tpublic boolean visit(SuperMethodInvocation node)", "signatureAfterChange": " \tpublic boolean visit(SuperMethodInvocation node)", "diff": ["-\t\trewriteOptionalQualifier(node, SuperMethodInvocation.QUALIFIER_PROPERTY, node.getStartPosition());", "+\t\tint pos= rewriteOptionalQualifier(node, SuperMethodInvocation.QUALIFIER_PROPERTY, node.getStartPosition());", "-\t\tint pos= rewriteRequiredNode(node, SuperMethodInvocation.NAME_PROPERTY);", "+\t\tif (node.getAST().apiLevel() >= AST.JLS3) {", "+\t\t\tif (isChanged(node, SuperMethodInvocation.TYPE_ARGUMENTS_PROPERTY)) {", "+\t\t\t\ttry {", "+\t\t\t\t\tpos= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameDOT, pos);", "+\t\t\t\t\trewriteOptionalTypeParameters(node, SuperMethodInvocation.TYPE_ARGUMENTS_PROPERTY, pos, \" \"); //$NON-NLS-1$", "+\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\thandleException(e);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\t", "+\t\tpos= rewriteRequiredNode(node, SuperMethodInvocation.NAME_PROPERTY);"]}], "num": 59270}