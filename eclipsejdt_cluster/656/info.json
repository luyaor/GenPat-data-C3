{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f32ead56f1ae9e8a0239433f2e6ac6ac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14f382fa9a8b741868c7dec0196e9287", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\tmatchReportReference(reference, element, null, null, elementBinding, accuracy, locator);", "+}", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, start, end-start+1, importRef);", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, start, end-start+1, fieldReference);", "-\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, offset, reference.sourceEnd-offset+1, reference);", "-\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, elementBinding, accuracy, -1, -1, reference);", "-\t\t\t\t\t\tmatches[indexOfFirstFieldBinding] = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "-\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);", "-\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, elementBinding, accuracy, -1, -1, reference);", "-\t\t\t\t\t\t\tmatches[i] = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_ACCURATE, -1, -1, reference);", "-\t\t\t\t\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, SearchMatch.A_INACCURATE, -1, -1, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1599ab4fe5f271fa73806e4af5823088", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "b32bff89b335f9213e72a23b143872f67ac07452", "commitAfterChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve)", "diff": ["+\t */", "+\tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve) {", "+\t\treturn findField(receiverType, fieldName, invocationSite, needResolve, false);", "+\t}", "-\tpublic FieldBinding findField(TypeBinding receiverType, char[] fieldName, InvocationSite invocationSite, boolean needResolve) {"]}], "num": 656}