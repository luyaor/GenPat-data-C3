{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03b0625de92effcfac163497aaa80497", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c0d19bb5cc9873339c14a07df55da58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "59d8c0d8b554a42bbafdc0ad10f524f90fa03b31", "commitAfterChange": "57e404e2daf7d7238f36a94c96ffb7a2def97b98", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  protected int matchLevel(ImportReference importRef)", "signatureAfterChange": "  protected int matchLevel(ImportReference importRef)", "diff": ["-\t\tchar[] pattern = this.pattern.simpleName == null", "+\t\tchar[] patternName = this.pattern.simpleName == null", "-\t\t\t\tif (CharOperation.prefixEquals(pattern, qualifiedTypeName, this.isCaseSensitive)) return POTENTIAL_MATCH;", "+\t\t\t\tif (CharOperation.prefixEquals(patternName, qualifiedTypeName, this.isCaseSensitive)) return POTENTIAL_MATCH;", "-\t\t\t\tif (CharOperation.match(pattern, qualifiedTypeName, this.isCaseSensitive)) return POTENTIAL_MATCH;", "+\t\t\t\tif (CharOperation.match(patternName, qualifiedTypeName, this.isCaseSensitive)) return POTENTIAL_MATCH;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "847767f2fb922ce491a7a9ee0dd99b79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "24c9e84b2ec4fea87b1bf2f444e5d541a0e3f479", "commitAfterChange": "0685919bfb078b0c67b52f91b0cdb3192d89246d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public boolean isCompatibleWith(TypeBinding right)", "signatureAfterChange": "  public boolean isCompatibleWith(TypeBinding right)", "diff": ["-\tchar[][] rightName;", "-\t\trightName = ((ReferenceBinding) rightArray.leafComponentType).compoundName;", "-\t\trightName = ((ReferenceBinding) right).compoundName;", "-", "-\tif (CharOperation.equals(rightName, JAVA_LANG_OBJECT))", "-\t\treturn true;", "-\tif (CharOperation.equals(rightName, JAVA_LANG_CLONEABLE))", "-\t\treturn true;", "-\tif (CharOperation.equals(rightName, JAVA_IO_SERIALIZABLE))", "-\t\treturn true;", "+\tswitch (right.leafComponentType().id) {", "+\t    case T_JavaLangObject :", "+\t    case T_JavaLangCloneable :", "+\t    case T_JavaIoSerializable :", "+\t        return true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b6eb0480ebb8ff46e9ad15e706e4e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c39467a5717299e0743e249af795ac84f7541935", "commitAfterChange": "01fe9b211e794ff01834ebe0e40bd02cb1110d75", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": " public static char[] getSignatureSimpleName(char[] typeSignature)", "signatureAfterChange": " public static char[] getSignatureSimpleName(char[] typeSignature)", "diff": ["+\t\tint typeStart = 0;", "-\t\t\tif(qualifiedType[i] == '.') {", "-\t\t\t\tdotCount--;", "+\t\t\tswitch (qualifiedType[i]) {", "+\t\t\t\tcase '.':", "+\t\t\t\t\tdotCount--;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase ' ':", "+\t\t\t\t\ttypeStart = i+1;", "+\t\t\t\t\tbreak;", "-\t\t\t\treturn CharOperation.subarray(qualifiedType, i + 1, qualifiedType.length);", "+\t\t\t\tchar[] simpleName = CharOperation.subarray(qualifiedType, i + 1, qualifiedType.length);", "+\t\t\t\tif (typeStart > 0 && typeStart < qualifiedType.length)", "+\t\t\t\t\treturn CharOperation.concat(CharOperation.subarray(qualifiedType, 0, typeStart), simpleName);", "+\t\t\t\treturn simpleName;"]}], "num": 52142}