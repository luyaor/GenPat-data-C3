{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6dec7aba266d7f73c5e5f9e0dac5909a", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30cf15564adfff785f0be76a15b4018f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding.java", "commitBeforeChange": "a25072f2f70a7d1a2734766b336bcde1a84f9c27", "commitAfterChange": "449564ddb56ce0df027b471cad53b0e520c06234", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ParameterizedMethodBinding(ParameterizedTypeBinding parameterizedDeclaringClass, MethodBinding originalMethod)", "signatureAfterChange": " \tpublic ParameterizedMethodBinding(ParameterizedTypeBinding parameterizedDeclaringClass, MethodBinding originalMethod, boolean isStatic)", "diff": ["-\tpublic ParameterizedMethodBinding(ParameterizedTypeBinding parameterizedDeclaringClass, MethodBinding originalMethod) {", "+\tpublic ParameterizedMethodBinding(ParameterizedTypeBinding parameterizedDeclaringClass, MethodBinding originalMethod, boolean isStatic) {", "-\t\t\t\tparameterizedDeclaringClass.substitute(originalMethod.returnType),", "-\t\t\t\tScope.substitute(parameterizedDeclaringClass, originalMethod.parameters),", "-\t\t\t\tScope.substitute(parameterizedDeclaringClass, originalMethod.thrownExceptions),", "+\t\t\t\tisStatic // no substitution if original was static", "+\t\t\t\t\t\t? originalMethod.returnType", "+\t\t\t\t\t\t: parameterizedDeclaringClass.substitute(originalMethod.returnType),", "+\t\t\t\tisStatic // no substitution if original was static", "+\t\t\t\t\t? originalMethod.parameters", "+\t\t\t\t\t: Scope.substitute(parameterizedDeclaringClass, originalMethod.parameters),", "+\t\t\t\tisStatic // no substitution if original was static", "+\t\t\t\t\t? originalMethod.thrownExceptions", "+\t\t\t\t\t: Scope.substitute(parameterizedDeclaringClass, originalMethod.thrownExceptions),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58cf5f6cdd5da377c8c24a6c8041ae2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "a25072f2f70a7d1a2734766b336bcde1a84f9c27", "commitAfterChange": "449564ddb56ce0df027b471cad53b0e520c06234", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, RawTypeBinding rawType, LookupEnvironment environment)", "signatureAfterChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, RawTypeBinding rawType, LookupEnvironment environment)", "diff": ["-\t    this.parameters = Scope.substitute(this, Scope.substitute(rawType, originalMethod.parameters));", "-\t    this.thrownExceptions = Scope.substitute(this, Scope.substitute(rawType, originalMethod.thrownExceptions));", "-\t    this.returnType = this.substitute(rawType.substitute(originalMethod.returnType));", "+\t\tboolean isStatic = originalMethod.isStatic();", "+\t    this.parameters = Scope.substitute(this, ", "+\t    \t\t\t\t\t\t\t\t\t\tisStatic ? originalMethod.parameters : Scope.substitute(rawType, originalMethod.parameters));", "+\t    this.thrownExceptions = Scope.substitute(this, ", "+\t    \t\t\t\t\t\t\t\t\t\tisStatic ? originalMethod.thrownExceptions : Scope.substitute(rawType, originalMethod.thrownExceptions));", "+\t    this.returnType = this.substitute(isStatic ? originalMethod.returnType : rawType.substitute(originalMethod.returnType));"]}], "num": 20300}