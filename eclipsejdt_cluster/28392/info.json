{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8fb9c8b0ff7af84a8f5c6e501dbf089d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1843e0b08c61ad4b9f0343770fccf3ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void test002()", "signatureAfterChange": " public void test002()", "diff": ["-\t\t\"1. ERROR in X.java (at line 6)\\n\" +", "+\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\"\tBLEU, \\n\" +", "+\t\t\"\t^^^^\\n\" +", "+\t\t\"Duplicate field X.BLEU\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 6)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3de61a89ce8709be44ad59b1eebe316b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "2070676b1e20c45846e614809eff55257373d539", "commitAfterChange": "3e7114db66d7154ea4072c5af4dcd065de055bb8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void testConditional1()", "signatureAfterChange": " \tpublic void testConditional1()", "diff": ["-\t// TODO(Stephan): Fix lub computation to create an intersection type when annotations differ. See comment in Scope#lowerUpperBound.", "-\t\t\t\"1. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\t\"\treturn f == 0 ? good : dubious;\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Null type safety (type annotations): The expression of type \\'List<String>\\' needs unchecked conversion to conform to \\'List<@NonNull String>\\'\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 8)\\n\" + ", "+\t\t\t\"\treturn f == 2 ? dubious : good;\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Null type safety (type annotations): The expression of type \\'List<String>\\' needs unchecked conversion to conform to \\'List<@NonNull String>\\'\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4827e17a6e5e599255b1f52763d83f26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "4748f10b5a3e791bc8e4784d261c474bbab1449a", "commitAfterChange": "c3bed616fda9d34c9c223290e9dda976cadf693c", "methodNumberBeforeChange": 774, "methodNumberAfterChange": 774, "signatureBeforeChange": " public void test768()", "signatureAfterChange": " public void test768()", "diff": ["-\t\t\"3. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\t<T extends Y<Object>, U extends T & Z>  T foo3() { return null; }\\n\" + ", "+\t\t\"\t                                    ^\\n\" + ", "+\t\t\"The interface Y cannot be implemented more than once with different arguments: Y<Object> and Y<String>\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 5)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a1c12bfa276ce8c432445676b237f5b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 219, "methodNumberAfterChange": 219, "signatureBeforeChange": " \tpublic void test076a()", "signatureAfterChange": " \tpublic void test076a()", "diff": ["-\t\t\t\"1. ERROR in A.java (at line 3)\\r\\n\" +", "+\t\t\t\"1. ERROR in A.java (at line 2)\\r\\n\" +", "+\t\t\t\"\t<T, S extends J & I<T>> void foo() { }\\r\\n\" +", "+\t\t\t\"\t                             ^^^^^\\n\" +", "+\t\t\t\"Duplicate method foo() in type A\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in A.java (at line 3)\\r\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e06596383a87d41db08ff2204fcfd3ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "484bb49f20ab3dfdc1bd0aad8e6eff3ac06b3aff", "commitAfterChange": "cfd501694f5288c5b2d25d4e0376aabc070087d8", "methodNumberBeforeChange": 220, "methodNumberAfterChange": 220, "signatureBeforeChange": " \tpublic void test076b()", "signatureAfterChange": " \tpublic void test076b()", "diff": ["-\t\t\t\"1. ERROR in A.java (at line 3)\\r\\n\" +", "+\t\t\t\"1. ERROR in A.java (at line 2)\\r\\n\" +", "+\t\t\t\"\t<T, S extends J & I<T>> void foo() { }\\r\\n\" +", "+\t\t\t\"\t                             ^^^^^\\n\" +", "+\t\t\t\"Duplicate method foo() in type A\\n\" +", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"2. ERROR in A.java (at line 3)\\r\\n\" +"]}], "num": 28392}