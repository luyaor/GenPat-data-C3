{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "edc7f04af6c4b37bee87d587ab10e145", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46e12f5cfd0bf87d77217ca17e22633d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "5121c9e56fe5f00b9263f63c8225d577bc580b73", "commitAfterChange": "ff119e6fb7d599c80d7b7bf4e0ea59e3938447d5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "signatureAfterChange": "  protected boolean findSourceFiles(IResourceDelta delta) throws CoreException", "diff": ["-\t\tIResourceDelta sourceDelta = delta.findMember(md.sourceFolder.getProjectRelativePath());", "-\t\tif (sourceDelta != null) {", "-\t\t\tif (sourceDelta.getKind() == IResourceDelta.REMOVED) {", "-\t\t\t\tif (JavaBuilder.DEBUG)", "-\t\t\t\t\tSystem.out.println(\"ABORTING incremental build... found removed source folder\"); //$NON-NLS-1$", "-\t\t\t\treturn false; // removed source folder should not make it here, but handle anyways (ADDED is supported)", "-\t\t\t}", "-\t\t\tint segmentCount = sourceDelta.getFullPath().segmentCount();", "-\t\t\tIResourceDelta[] children = sourceDelta.getAffectedChildren();", "+\t\tif (md.sourceFolder.equals(javaBuilder.currentProject)) {", "+\t\t\t// skip nested source & output folders when the project is a source folder", "+\t\t\tint segmentCount = delta.getFullPath().segmentCount();", "+\t\t\tIResourceDelta[] children = delta.getAffectedChildren();", "-\t\t\t\tfindSourceFiles(children[j], md, segmentCount);", "-\t\t\tnotifier.checkCancel();", "+\t\t\t\tif (!isExcludedFromProject(children[i].getFullPath()))", "+\t\t\t\t\tfindSourceFiles(children[j], md, segmentCount);", "+\t\t} else {", "+\t\t\tIResourceDelta sourceDelta = delta.findMember(md.sourceFolder.getProjectRelativePath());", "+", "+\t\t\tif (sourceDelta != null) {", "+\t\t\t\tif (sourceDelta.getKind() == IResourceDelta.REMOVED) {", "+\t\t\t\t\tif (JavaBuilder.DEBUG)", "+\t\t\t\t\t\tSystem.out.println(\"ABORTING incremental build... found removed source folder\"); //$NON-NLS-1$", "+\t\t\t\t\treturn false; // removed source folder should not make it here, but handle anyways (ADDED is supported)", "+\t\t\t\t}", "+\t\t\t\tint segmentCount = sourceDelta.getFullPath().segmentCount();", "+\t\t\t\tIResourceDelta[] children = sourceDelta.getAffectedChildren();", "+\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "+\t\t\t\t\tfindSourceFiles(children[j], md, segmentCount);", "+\t\t\t}", "+\t\tnotifier.checkCancel();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5cff40ab6221af30a6a4fda6bb0a313", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "6ca69a40178f9de6a928924e59e2e88fbb52d965", "commitAfterChange": "06fd76b8332a7a5790831ad62dc1626276814e9a", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  protected boolean findAffectedSourceFiles(IResourceDelta delta, ClasspathLocation[] classFoldersAndJars)", "signatureAfterChange": "  protected boolean findAffectedSourceFiles(IResourceDelta delta, ClasspathLocation[] classFoldersAndJars)", "diff": ["-\t\t\tIResourceDelta binaryDelta = delta.findMember(bLocation.getRelativePath());", "-\t\t\tif (binaryDelta != null) {", "-\t\t\t\tif (bLocation instanceof ClasspathJar) {", "-\t\t\t\t\tif (JavaBuilder.DEBUG)", "-\t\t\t\t\t\tSystem.out.println(\"ABORTING incremental build... found delta to jar/zip file\"); //$NON-NLS-1$", "-\t\t\t\t\treturn false; // do full build since jar file was changed (added/removed were caught as classpath change)", "+\t\t\tIPath p = bLocation.getProjectRelativePath();", "+\t\t\tif (p != null) {", "+\t\t\t\tIResourceDelta binaryDelta = delta.findMember(p);", "+\t\t\t\tif (binaryDelta != null) {", "+\t\t\t\t\tif (bLocation instanceof ClasspathJar) {", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)", "+\t\t\t\t\t\t\tSystem.out.println(\"ABORTING incremental build... found delta to jar/zip file\"); //$NON-NLS-1$", "+\t\t\t\t\t\treturn false; // do full build since jar file was changed (added/removed were caught as classpath change)", "+\t\t\t\t\t}", "+\t\t\t\t\tif (binaryDelta.getKind() == IResourceDelta.ADDED || binaryDelta.getKind() == IResourceDelta.REMOVED) {", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)", "+\t\t\t\t\t\t\tSystem.out.println(\"ABORTING incremental build... found added/removed binary folder\"); //$NON-NLS-1$", "+\t\t\t\t\t\treturn false; // added/removed binary folder should not make it here (classpath change), but handle anyways", "+\t\t\t\t\t}", "+\t\t\t\t\tint segmentCount = binaryDelta.getFullPath().segmentCount();", "+\t\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren(); // .class files from class folder", "+\t\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "+\t\t\t\t\t\tfindAffectedSourceFiles(children[j], segmentCount);", "+\t\t\t\t\tnotifier.checkCancel();", "-\t\t\t\tif (binaryDelta.getKind() == IResourceDelta.ADDED || binaryDelta.getKind() == IResourceDelta.REMOVED) {", "-\t\t\t\t\tif (JavaBuilder.DEBUG)", "-\t\t\t\t\t\tSystem.out.println(\"ABORTING incremental build... found added/removed binary folder\"); //$NON-NLS-1$", "-\t\t\t\t\treturn false; // added/removed binary folder should not make it here (classpath change), but handle anyways", "-\t\t\t\t}", "-\t\t\t\tint segmentCount = binaryDelta.getFullPath().segmentCount();", "-\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren(); // .class files from class folder", "-\t\t\t\tfor (int j = 0, m = children.length; j < m; j++)", "-\t\t\t\t\tfindAffectedSourceFiles(children[j], segmentCount);", "-\t\t\t\tnotifier.checkCancel();"]}], "num": 38303}