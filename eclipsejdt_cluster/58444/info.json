{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5172c8afcb10f89c5316525915616cef", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24753503a5a669703a72c606d5861166", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "8726985690d5211d83787440cfdc69960f688cd3", "commitAfterChange": "b2bac1f114347c5119b74b76ba91158e0de76647", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r \tprotected void updateCycleMarkers(IClasspathEntry[] newResolvedPath)", "signatureAfterChange": "\r \tprotected void updateCycleMarkers(IClasspathEntry[] newResolvedPath)", "diff": ["-\r", "+\t\t \r", "-\t\t\tIJavaModel model = JavaModelManager.getJavaModelManager().getJavaModel();\r", "-\t\t\tIJavaProject[] projects = model.getJavaProjects();\r", "-\t\t\tfor (int i = 0, projectCount = projects.length; i < projectCount; i++) {\r", "-\t\t\t\tJavaProject project = (JavaProject)projects[i];\r", "-\t\t\t\tproject.updateCycleMarkers(project.getResolvedClasspath(true));\r", "+\t\t\tJavaProject project = getProject();\r", "+\t\t\tif (!project.hasClasspathCycle(project.getResolvedClasspath(true))\r", "+\t\t\t\t\t&& !project.hasCycleMarker()){\r", "+\t\t\t\treturn;\r", "-\t\t} catch (JavaModelException e) {\r", "+\t\t\r", "+\t\t\tJavaProject.updateAllCycleMarkers();\r", "+\t\t} catch(JavaModelException e){\r", "-\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd54253b677b7df8e34dd39c5b718869", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "589f6f354433243a559cfee0f9641e3e2af4d62f", "commitAfterChange": "078478e8a765943e089111dd6dddc420a7546230", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void indexAll(IProject project)", "signatureAfterChange": " public void indexAll(IProject project)", "diff": ["-\t\tIJavaModel model = JavaModelManager.getJavaModelManager().getJavaModel();", "-\t\tIJavaProject javaProject = ((JavaModel) model).getJavaProject(project);\t", "+\t\tJavaModel model = (JavaModel) JavaModelManager.getJavaModelManager().getJavaModel();", "+\t\tIJavaProject javaProject = model.getJavaProject(project);\t", "-\t}\t", "-\tthis.request(new IndexAllProject(project, this));", "+\t}", "+", "+\t// check if the same request is not already in the queue", "+\tIndexRequest request = new IndexAllProject(project, this);", "+\tfor (int i = this.jobEnd; i >= this.jobStart; i--)", "+\t\tif (request.equals(this.awaitingJobs[i])) return;", "+\tthis.request(request);"]}], "num": 58444}