{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ced2462a64b952ff1b34c07a61c60ff3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "360bdcffe3b9c1f13835e7e4b7a575fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "8b61d97704a2b67ed3d29404b8692bdbf30b8b5d", "commitAfterChange": "7fa6d6b6f60d0d2345e743063241c3eb3452b00f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException {", "+protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException {", "-\tmatch = locator.newTypeReferenceMatch(element, accuracy, reference);", "+\tmatch = locator.newTypeReferenceMatch(element, elementBinding, accuracy, reference);", "-\t\tmatchReportReference((QualifiedNameReference) reference, element, accuracy, locator);", "+\t\tmatchReportReference((QualifiedNameReference) reference, element, elementBinding, accuracy, locator);", "-\t\tmatchReportReference((QualifiedTypeReference) reference, element, accuracy, locator);", "+\t\tmatchReportReference((QualifiedTypeReference) reference, element, elementBinding, accuracy, locator);", "-\t\tmatchReportReference((ArrayTypeReference) reference, element, accuracy, locator);", "+\t\tmatchReportReference((ArrayTypeReference) reference, element, elementBinding, accuracy, locator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a9711419e3d4c2c197c1e7568ee459e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 15, "signatureBeforeChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tif (reference instanceof QualifiedNameReference) {", "-\t\tthis.matchReportReference((QualifiedNameReference)reference, element, accuracy, locator);", "-\t} else if (reference instanceof QualifiedTypeReference) {", "-\t\tthis.matchReportReference((QualifiedTypeReference)reference, element, accuracy, locator);", "-\t} else if (reference instanceof ArrayTypeReference) {", "-\t\tthis.matchReportReference((ArrayTypeReference)reference, element, accuracy, locator);", "-\t} else {", "+\tif (reference instanceof QualifiedNameReference)", "+\t\tmatchReportReference((QualifiedNameReference) reference, element, accuracy, locator);", "+\telse if (reference instanceof QualifiedTypeReference)", "+\t\tmatchReportReference((QualifiedTypeReference) reference, element, accuracy, locator);", "+\telse if (reference instanceof ArrayTypeReference)", "+\t\tmatchReportReference((ArrayTypeReference) reference, element, accuracy, locator);", "+\telse", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "caccf643b3ffd09566e3484c3251ccb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldLocator.java", "commitBeforeChange": "e657b912c1ef94d48e9749f2cbf91c83fff8728f", "commitAfterChange": "a34df737b5102c35af6a4e4a81e1b17f0f972c06", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t} else if (this.pattern.findReferences && reference instanceof QualifiedNameReference) {", "+\t} else if (reference instanceof FieldReference) {", "+\t\tlong position = ((FieldReference) reference).nameSourcePosition;", "+\t\tlocator.report(position, position, element, accuracy);", "+\t} else if (reference instanceof SingleNameReference) {", "+\t\tlocator.report(reference.sourceStart, reference.sourceEnd, element, accuracy);", "+\t} else if (reference instanceof QualifiedNameReference) {", "-\t\tlocator.reportAccurateReference(", "-\t\t\treference.sourceStart, ", "-\t\t\treference.sourceEnd, ", "-\t\t\tqNameRef.tokens, ", "-\t\t\telement, ", "-\t\t\taccuracies);", "-\t} else {", "-\t\tlocator.reportAccurateReference(", "-\t\t\treference.sourceStart, ", "-\t\t\treference.sourceEnd, ", "-\t\t\tnew char[][] {this.pattern.name}, ", "-\t\t\telement, ", "-\t\t\taccuracy);", "+\t\tlocator.reportAccurateReference(reference.sourceStart, reference.sourceEnd, qNameRef.tokens, element, accuracies);"]}], "num": 56523}