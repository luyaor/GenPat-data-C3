{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "10c1b07027c7a4a505d24ae5bf6d1219", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56b07548cf0fa9d4a3a148cab38e33f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "3bee81801e0cbcb336e03bca8adb4995284ca6ec", "commitAfterChange": "80d1d12dd777676d1d11b6b228822545c397912f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t// variation on allocation, where can be specified an enclosing instance and an anonymous type", "-", "+\t\t", "+\t\t// check captured variables are initialized in current context (26134)", "+\t\tcheckCapturedLocalInitializationIfNecessary(", "+\t\t\tthis.superTypeBinding == null ? this.binding.declaringClass : this.superTypeBinding, ", "+\t\t\tcurrentScope, ", "+\t\t\tflowInfo);", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e95906a7c001b65b4dd430e4c1e39519", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "3bee81801e0cbcb336e03bca8adb4995284ca6ec", "commitAfterChange": "80d1d12dd777676d1d11b6b228822545c397912f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\t// must verify that exceptions potentially thrown by this expression are caught in the method", "+\t\t// check captured variables are initialized in current context (26134)", "+\t\tcheckCapturedLocalInitializationIfNecessary(this.binding.declaringClass, currentScope, flowInfo);", "-\t\tif (((thrownExceptions = binding.thrownExceptions).length) != 0) {", "+\t\tif (((thrownExceptions = this.binding.thrownExceptions).length) != 0) {", "+\t\t"]}], "num": 8480}