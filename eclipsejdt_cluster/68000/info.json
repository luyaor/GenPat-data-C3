{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "892fc06897011213f7ca8a986a079e8c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc36ed303524d8f91fc5f652080deaef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "988b834a35e1571af05adddd8db1ce5aaa1f0ff0", "commitAfterChange": "c90773ded969a955dbf869e7d3cd599898423a64", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic static Test suite()", "signatureAfterChange": "  \tpublic static Test suite()", "diff": ["-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingExpressionsTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingInsertBoundTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingMethodDeclTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingMoveCodeTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingStatementsTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingTrackingTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingJavadocTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingTypeDeclTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingGroupNodeTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingRevertTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(SourceModifierTest.class));", "+\t\tsuite.addTest(ASTRewritingExpressionsTest.suite());", "+\t\tsuite.addTest(ASTRewritingInsertBoundTest.suite());", "+\t\tsuite.addTest(ASTRewritingMethodDeclTest.suite());", "+\t\tsuite.addTest(ASTRewritingMoveCodeTest.suite());", "+\t\tsuite.addTest(ASTRewritingStatementsTest.suite());", "+\t\tsuite.addTest(ASTRewritingTrackingTest.suite());", "+\t\tsuite.addTest(ASTRewritingJavadocTest.suite());", "+\t\tsuite.addTest(ASTRewritingTypeDeclTest.suite());", "+\t\tsuite.addTest(ASTRewritingGroupNodeTest.suite());", "+\t\tsuite.addTest(ASTRewritingRevertTest.suite());", "+\t\tsuite.addTest(LineCommentOffsetsTest.suite());", "+\t\tsuite.addTest(ASTRewritingWithStatementsRecoveryTest.suite());", "+\t\tsuite.addTest(ASTRewritePropertyTest.suite());", "+\t\tsuite.addTest(ASTRewritingPackageDeclTest.suite());", "+\t\t", "+\t\tsuite.addTest(SourceModifierTest.suite());", "-\t\tsuite.addTest(addMethodsToSuite(LineCommentOffsetsTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingWithStatementsRecoveryTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritePropertyTest.class));", "-\t\tsuite.addTest(addMethodsToSuite(ASTRewritingPackageDeclTest.class));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff17cc8b895b08e331c87843f4f213b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "c29ff6f3ca53453d86d6a9de68da632d3d253455", "commitAfterChange": "c11e4d3823cd197ba20b5c4c8ef1ddf1ca70b418", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " protected void consumeCastExpressionLL1WithBounds()", "signatureAfterChange": " protected void consumeCastExpressionLL1WithBounds()", "diff": ["-\t", "-\tint additionalBoundsLength = this.genericsLengthStack[this.genericsLengthPtr--];", "-\tTypeReference[] bounds = new TypeReference[additionalBoundsLength + 1];", "-\tthis.genericsPtr -= additionalBoundsLength;", "-\tSystem.arraycopy(this.genericsStack, this.genericsPtr + 1, bounds, 1, additionalBoundsLength);", "-", "-\tpushOnGenericsLengthStack(0); // handle type arguments", "-\tpushOnGenericsIdentifiersLengthStack(this.identifierLengthStack[this.identifierLengthPtr]);", "-\tbounds[0] = getTypeReference(0);", "- ", "+\tint length;", "+\texp = this.expressionStack[this.expressionPtr--];", "+\tthis.expressionLengthPtr --;", "+\tTypeReference[] bounds = new TypeReference[length = this.expressionLengthStack[this.expressionLengthPtr]];", "+\tSystem.arraycopy(this.expressionStack, this.expressionPtr -= (length - 1), bounds, 0, length);", "-\t\t\texp=this.expressionStack[this.expressionPtr] ,", "+\t\t\texp,", "+\tthis.expressionLengthStack[this.expressionLengthPtr] = 1;"]}], "num": 68000}