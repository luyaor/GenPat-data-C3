{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2925b209d3e8a59c24694e997e29ab93", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b90ce70c4b48fba635a1f6029a43ed10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "b6aa1e7468e04a61e529b4c4b0b636e6819cd942", "commitAfterChange": "f02299f44229efd24162310e43cde23c2c805118", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "diff": ["+\t\t\tMethodBinding methodBinding = methodDeclaration.binding;", "+\t\t\t((SourceTypeBinding) methodBinding.declaringClass).resolveTypesFor(methodBinding);\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1314c1a73c3a25b0e14bc853444f76f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "70293ebfba1aa3d3dce9544e23e757d77487db91", "commitAfterChange": "2e4e63b9ed8aad7925bed1f9109d7e2d1a341f45", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \t@Override \tpublic boolean visit(TypeParameter typeParameter, BlockScope scope)", "signatureAfterChange": " \t \t@Override \tpublic boolean visit(TypeParameter typeParameter, BlockScope scope)", "diff": ["+\t\t\t// when we get here, it is guaranteed that class type parameters are connected, but method type parameters may not be.\t\t\t", "+\t\t\tMethodBinding methodBinding = (MethodBinding) binding.declaringElement;", "+\t\t\t((SourceTypeBinding) methodBinding.declaringClass).resolveTypesFor(methodBinding);"]}], "num": 30545}