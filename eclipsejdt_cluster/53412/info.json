{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f513210468ed298e68563ccb5b72712d", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ac60ba9800ba2664d751438f157a2f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "0bd771375c18b7c83a5adef74657e35cf2c86ff3", "commitAfterChange": "5882e29154dfffe57fe4183f714dc74947e8e98d", "methodNumberBeforeChange": 359, "methodNumberAfterChange": 365, "signatureBeforeChange": " \tpublic void _test0702() throws JavaModelException", "signatureAfterChange": " \tpublic void test0708() throws JavaModelException", "diff": ["-\tpublic void _test0702() throws JavaModelException {", "-\t\tparser.setKind(ASTParser.K_EXPRESSION);", "-\t\tString commentsText = \"/**\\n * @generated\\n */\\n\";", "-\t\tchar[] source = commentsText.toCharArray();", "-\t\tparser.setSourceRange(0, source.length);", "-\t\tparser.setCompilerOptions(JavaCore.getOptions());", "-\t\tASTNode result = parser.createAST(null);", "-\t\tassertEquals(\"not a compilation unit\", ASTNode.COMPILATION_UNIT, result.getNodeType());", "+\t */", "+\tpublic void test0708() throws JavaModelException {", "+\t\tfinal char[] source = (\"System.out.println()\\nint i;\\n\").toCharArray();", "+\t\tASTParser parser = ASTParser.newParser(AST.JLS3);", "+\t\tparser.setKind(ASTParser.K_STATEMENTS);", "+\t\tparser.setStatementsRecovery(true);", "+\t\tparser.setSource(source);", "+\t\tASTNode root = parser.createAST(null);", "+\t\tassertEquals(\"Not a block\", ASTNode.BLOCK, root.getNodeType());", "+\t\tBlock block = (Block) root;", "+\t\tList statements = block.statements();", "+\t\tassertEquals(\"Wrong size\", 2, statements.size());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70ebe68a25c83df0409d9f7b3c73cdab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "cc44d533509199a22dee3cb03412b30282a18add", "commitAfterChange": "dee23bd4f5a65ed282a3f4a7e19b637fd72cfc3b", "methodNumberBeforeChange": 314, "methodNumberAfterChange": 316, "signatureBeforeChange": " \tpublic void test0667() throws JavaModelException", "signatureAfterChange": " \tpublic void test0667_2() throws JavaModelException", "diff": ["+\t */", "+\tpublic void test0667_2() throws JavaModelException {", "+\t\tICompilationUnit workingCopy = null;", "+\t\ttry {", "+\t\t\tString contents =", "+\t\t\t\t\"import java.util.ArrayList;\\n\" +", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tList foo() {\\n\" +", "+\t\t\t\t\"\t\treturn null;\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\";", "+\t\t\tworkingCopy = getWorkingCopy(\"/Converter/src/X.java\", true/*resolve*/);", "+\t\t\tASTNode node = buildAST(", "+\t\t\t\tcontents,", "+\t\t\t\tworkingCopy,", "+\t\t\t\tfalse,", "+\t\t\t\tfalse,", "+\t\t\t\ttrue);", "+\t\t\tassertEquals(\"Not a compilation unit\", ASTNode.COMPILATION_UNIT, node.getNodeType());", "+\t\t\tCompilationUnit unit = (CompilationUnit) node;", "+\t\t\tString expectedError = \"List cannot be resolved to a type\";", "+\t\t\tassertProblemsSize(unit, 1, expectedError);", "+\t\t\tnode = getASTNode(unit, 0, 0);", "+\t\t\tassertEquals(\"Not a method declaration\", ASTNode.METHOD_DECLARATION, node.getNodeType());", "+\t\t\tMethodDeclaration declaration = (MethodDeclaration) node;", "+\t\t\tIMethodBinding binding = declaration.resolveBinding();", "-\t\t\tassertEquals(\"LX;.foo()LList;\", binding.getKey());\t\t\t\t", "+\t\t\tassertEquals(\"LX;.foo()LList;\", binding.getKey());"]}], "num": 53412}