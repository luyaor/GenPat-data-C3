{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "985b66b0c05e3724d30f910ac5c57c52", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67c93f394e56f2fab0901a39f0fcbc84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathChange.java", "commitBeforeChange": "d9e2e2bfbd91f5590cc17d29dbb01112d1067957", "commitAfterChange": "e61f569dbc4aa27cac18a55212d084c74e736bfb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int generateDelta(JavaElementDelta delta)", "signatureAfterChange": " \tpublic int generateDelta(JavaElementDelta delta)", "diff": ["+", "+\t\tstate.addForRefresh(this.project); // ensure external jars are refreshed for this project (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=212769 )", "+\t\t\t\t", "+\t\t\t\t// remember timestamp of jars that were removed (in case they are added as external jar in the same operation)", "+\t\t\t\tfor (int j = 0, length = pkgFragmentRoots.length; j < length; j++) {", "+\t\t\t\t\tIPackageFragmentRoot root = pkgFragmentRoots[j];", "+\t\t\t\t\tif (root.isArchive() && !root.isExternal()) {", "+\t\t\t\t\t\tURI location = root.getResource().getLocationURI();", "+\t\t\t\t\t\tFile file = null;", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tIFileStore fileStore = EFS.getStore(location);", "+\t\t\t\t\t\t\tfile = fileStore.toLocalFile(EFS.NONE, null);", "+\t\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\t\t// continue", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (file == null)", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\tlong timeStamp = DeltaProcessor.getTimeStamp(file);", "+\t\t\t\t\t\tIPath externalPath = new org.eclipse.core.runtime.Path(file.getAbsolutePath());", "+\t\t\t\t\t\tstate.getExternalLibTimeStamps().put(externalPath, new Long(timeStamp));", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f776c4ee9c6d4fb059236c5b2561bb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathChange.java", "commitBeforeChange": "fbfdac6d7ce3e57d87b2a41c24ca19b307df27cb", "commitAfterChange": "1f2bb3880562da32cc48ce4bb6e920301c0ee336", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic int generateDelta(JavaElementDelta delta)", "signatureAfterChange": " \tpublic int generateDelta(JavaElementDelta delta)", "diff": ["-", "-\t\t\t\t// remember timestamp of jars that were removed (in case they are added as external jar in the same operation)", "-\t\t\t\tfor (int j = 0, length = pkgFragmentRoots.length; j < length; j++) {", "-\t\t\t\t\tPackageFragmentRoot root = pkgFragmentRoots[j];", "-\t\t\t\t\tif (root.isArchive() && !root.isExternal()) {", "-\t\t\t\t\t\tURI location = root.resource().getLocationURI();", "-\t\t\t\t\t\tFile file = null;", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tIFileStore fileStore = EFS.getStore(location);", "-\t\t\t\t\t\t\tfile = fileStore.toLocalFile(EFS.NONE, null);", "-\t\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\t\t// continue", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tif (file == null)", "-\t\t\t\t\t\t\tcontinue;", "-\t\t\t\t\t\tlong timeStamp = DeltaProcessor.getTimeStamp(file);", "-\t\t\t\t\t\tIPath externalPath = new org.eclipse.core.runtime.Path(file.getAbsolutePath());", "-\t\t\t\t\t\tstate.getExternalLibTimeStamps().put(externalPath, new Long(timeStamp));", "-\t\t\t\t\t}", "-\t\t\t\t}"]}], "num": 34782}