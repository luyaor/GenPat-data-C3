{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e636dcae296f197820ce3e05869e0e6f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bf27d2567f7685ee5f0a7a2ec8c3551", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "3c45dfdaa93e52d5836a3f1e183a61f2a8eac91b", "commitAfterChange": "7b5e14fca8a5cf7d78d10afc4f2876c54b0a784d", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " protected void consumeCastExpressionLL1()", "signatureAfterChange": " protected void consumeCastExpressionLL1()", "diff": ["-\tExpression castType,cast,exp;", "+\tExpression cast,exp;", "-\t\t\tcast = new CastExpression(\texp=expressionStack[expressionPtr+1] ,", "-\t\t\t\t\t\t\t\tcastType = getTypeReference(expressionStack[expressionPtr]));", "+\t\tcast = new CastExpression(", "+\t\t\texp=expressionStack[expressionPtr+1] ,", "+\t\t\tgetTypeReference(expressionStack[expressionPtr]));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a72b95919a25e0877474e522148aa951", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 218, "methodNumberAfterChange": 218, "signatureBeforeChange": " protected void ignoreExpressionAssignment()", "signatureAfterChange": " protected void ignoreExpressionAssignment()", "diff": ["-\t// encoded operator would be: intStack[intPtr]", "-\tintPtr--;", "-\tArrayInitializer arrayInitializer = (ArrayInitializer) expressionStack[expressionPtr--];", "-\texpressionLengthPtr -- ;", "+\t// encoded operator would be: this.intStack[this.intPtr]", "+\tthis.intPtr--;", "+\tArrayInitializer arrayInitializer = (ArrayInitializer) this.expressionStack[this.expressionPtr--];", "+\tthis.expressionLengthPtr -- ;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2f5bbf7b2f73ffa2e0cb0877d49e8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 108, "signatureBeforeChange": "  protected void consumeInstanceOfExpression(int op)", "signatureAfterChange": "  protected void consumeInstanceOfExpression(int op)", "diff": ["-\texpressionStack[expressionPtr] = exp =", "+\tthis.expressionStack[this.expressionPtr] = exp =", "-\t\t\texpressionStack[expressionPtr],", "-\t\t\tgetTypeReference(intStack[intPtr--]),", "+\t\t\tthis.expressionStack[this.expressionPtr],", "+\t\t\tgetTypeReference(this.intStack[this.intPtr--]),", "-\t\texp.sourceEnd = scanner.startPosition - 1;", "+\t\texp.sourceEnd = this.scanner.startPosition - 1;"]}], "num": 16052}