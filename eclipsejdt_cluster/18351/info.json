{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25f16fd67c6fff4ce3737df0c15c246f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55fbcd79966278e3e98aee32c55938df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/comment/JavaDocTestCase.java", "commitBeforeChange": "246965b39748e3da2ea49457412592390c45caa5", "commitAfterChange": "b0e753009ffb9bf0d92f75f621fb0d6188adb57e", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " \tpublic void test75460()", "signatureAfterChange": " \tpublic void test75460()", "diff": ["-\t\t\t\t\" * objects[0] = new String(&quot;Hallo Welt !!!&quot;);\" + DELIMITER +", "-\t\t\t\t\" * objects[1] = new String(&quot;Test !!!&quot;);\" + DELIMITER +", "-\t\t\t\t\" * objects[2] = new Integer(&quot;1980&quot;);\" + DELIMITER +", "+\t\t\t\t\" * objects[0] = new String(\\\"Hallo Welt !!!\\\");\" + DELIMITER +", "+\t\t\t\t\" * objects[1] = new String(\\\"Test !!!\\\");\" + DELIMITER +", "+\t\t\t\t\" * objects[2] = new Integer(\\\"1980\\\");\" + DELIMITER +", "-\t\t\t\t\" * for (int i = 0; i &lt; objs.length; i++) {\" + DELIMITER +", "+\t\t\t\t\" * for (int i = 0; i < objs.length; i++) {\" + DELIMITER +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6066b7167887bc38fc14de45c479e1ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "e7041eebe1b9ef3b1ae9f5f9c79b24274ea327d1", "commitAfterChange": "8585977b682b225927c2b7dfa188383f714b1d41", "methodNumberBeforeChange": 338, "methodNumberAfterChange": 338, "signatureBeforeChange": " public void test187()", "signatureAfterChange": " public void test187()", "diff": ["-\t\t\t\"Method f(List<String>) has the same erasure f(List<E>) as another method in type XX\\n\" + ", "+\t\t\t\"Erasure of method f(List<String>) is the same as another method in type XX\\n\" +", "-\t\t\t\"Method f(List<Integer>) has the same erasure f(List<E>) as another method in type XX\\n\" + ", "+\t\t\t\"Erasure of method f(List<Integer>) is the same as another method in type XX\\n\" +", "-\t\t\t\t\"Method f(List<String>) has the same erasure f(List<E>) as another method in type XX\\n\" + ", "+\t\t\t\t\"Erasure of method f(List<String>) is the same as another method in type XX\\n\" +", "-\t\t\t\t\"Method f(List<Integer>) has the same erasure f(List<E>) as another method in type XX\\n\" + ", "+\t\t\t\t\"Erasure of method f(List<Integer>) is the same as another method in type XX\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2607ae4dc9411e0c509efbbead8d1cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "bf2199048d434ee8a7461950468d3a2335a30990", "commitAfterChange": "99697e231d7abf709bf21ed4dc6a92bbb307b9f9", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " public void testBug429836() throws CoreException", "signatureAfterChange": " public void testBug429836() throws CoreException", "diff": ["-\t\t\"src/b429836/X.java int b429836.X.f1:Lambda(I).foo(int) [x ->] EXACT_MATCH\\n\" +", "-\t\t\"src/b429836/X.java int b429836.X.f2:Lambda(I).foo(int) [(int x) ->] EXACT_MATCH\\n\"+", "-\t\t\"src/b429836/X.java int void b429836.X.main(String[]):Lambda(I).foo(int) [x ->] EXACT_MATCH\\n\"+", "-\t\t\"src/b429836/X.java int void b429836.X.main(String[]):Lambda(I).foo(int) [(int x) ->] EXACT_MATCH\"", "+\t\t\"src/b429836/X.java int b429836.X.f1:<lambda #1>.foo(int) [x ->] EXACT_MATCH\\n\" +", "+\t\t\"src/b429836/X.java int b429836.X.f2:<lambda #1>.foo(int) [(int x) ->] EXACT_MATCH\\n\"+", "+\t\t\"src/b429836/X.java int void b429836.X.main(String[]):<lambda #1>.foo(int) [x ->] EXACT_MATCH\\n\"+", "+\t\t\"src/b429836/X.java int void b429836.X.main(String[]):<lambda #1>.foo(int) [(int x) ->] EXACT_MATCH\""]}], "num": 18351}