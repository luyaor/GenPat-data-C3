{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a98bd068556585c244db5cac9c50595c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "142ed6b3c850cd2672fbda317c09f889", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "15d76232d8d0f6d3d473493e1ebc4002775a58d1", "commitAfterChange": "4fa17c1b64b8340e233248731ac8fd89ed4b9de6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate void disassemble(IFieldInfo fieldInfo, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \tprivate void disassemble(IFieldInfo fieldInfo, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["+\t\twriteNewLine(buffer, lineSeparator, tabNumber);", "-\t\t\t\t\tbuffer.append(constantPoolEntry.getLongValue());", "+\t\t\t\t\tbuffer.append(constantPoolEntry.getLongValue() + \"L\"); //$NON-NLS-1$", "-\t\t\t\t\tbuffer.append(constantPoolEntry.getFloatValue());", "+\t\t\t\t\tbuffer.append(constantPoolEntry.getFloatValue() + \"f\"); //$NON-NLS-1$", "-\t\t\t\t\tbuffer.append(constantPoolEntry.getStringValue());", "+\t\t\t\t\tbuffer.append(\"\\\"\" + constantPoolEntry.getStringValue() + \"\\\"\" );//$NON-NLS-1$//$NON-NLS-2$", "+\t\twriteNewLine(buffer, lineSeparator, tabNumber);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbd7d57b97de4992963658b2e4a84ca5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "ba623d582045575b43eee2b86be165ff58225746", "commitAfterChange": "5f25db2c9c02bf799108bff292447ab679c3c3b7", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkMethods()", "signatureAfterChange": " void checkMethods()", "diff": ["+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcheckForNameClash(currentMethod, inheritedMethod);", "-\t\t\t\t\tcheckAgainstInheritedMethods(currentMethod, matchingInherited, index + 1); // pass in the length of matching", "+\t\t\t\t\tcheckAgainstInheritedMethods(currentMethod, matchingInherited, index + 1, inherited); // pass in the length of matching", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tcheckForInheritedNameClash(inheritedMethod, otherInheritedMethod);"]}], "num": 47672}