{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48d4351359362429155ea2a6f310c0b7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f3566591d3d5d54c38e56c29c91bc2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SortCompilationUnitElementsTests.java", "commitBeforeChange": "e060e0428f7f92647e77ad8da2c7818eb4c4e3a7", "commitAfterChange": "ddf48a7e21056eecd0111cd750a59c8617c397eb", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void test022() throws CoreException", "signatureAfterChange": " public void test022() throws CoreException", "diff": ["-\t\t\t\"\t * Returns whether a build command with the given trigger should\\n\" +", "-\t\t\t\"\t * be enabled for the given selection.\\n\" +", "-\t\t\t\"\t * @param projects The projects to use to determine enablement\\n\" +", "-\t\t\t\"\t * @param trigger The build trigger (<code>IncrementalProjectBuilder.*_BUILD</code> constants).\\n\" +", "-\t\t\t\"\t * @return <code>true</code> if the action should be enabled, and\\n\" +", "-\t\t\t\"\t * <code>false</code> otherwise.\\n\" +", "-\t\t\t\"\t */\\n\" +", "-\t\t\t\"\tpublic static boolean isEnabled(IProject[] projects, int trigger) {\\n\" +", "-\t\t\t\"\t\treturn true;\\n\" +", "-\t\t\t\"\t}\\n\" +", "-\t\t\t\"\\n\" +", "-\t\t\t\"\t/**\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"\\n\" +", "+\t\t\t\"\t/**\\n\" +", "+\t\t\t\"\t * Returns whether a build command with the given trigger should\\n\" +", "+\t\t\t\"\t * be enabled for the given selection.\\n\" +", "+\t\t\t\"\t * @param projects The projects to use to determine enablement\\n\" +", "+\t\t\t\"\t * @param trigger The build trigger (<code>IncrementalProjectBuilder.*_BUILD</code> constants).\\n\" +", "+\t\t\t\"\t * @return <code>true</code> if the action should be enabled, and\\n\" +", "+\t\t\t\"\t * <code>false</code> otherwise.\\n\" +", "+\t\t\t\"\t */\\n\" +", "+\t\t\t\"\tpublic static boolean isEnabled(IProject[] projects, int trigger) {\\n\" +", "+\t\t\t\"\t\treturn true;\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e4c5a881def6eb5799e91dee3ce86df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestForMethod.java", "commitBeforeChange": "a331916366d31b2eac24fa72c43e85436f424bb2", "commitAfterChange": "92833c2313d3c570c2dffa40d03aa84d01695a1a", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "  \tpublic void test104()", "signatureAfterChange": "  \tpublic void test104()", "diff": ["-\t\t\t\"----------\\n\"", "-\t\t\t\t+ \"1. WARNING in test\\\\X.java (at line 2)\\n\"", "-\t\t\t\t+ \"\timport test.copy.*;\\n\"", "-\t\t\t\t+ \"\t       ^^^^^^^^^\\n\"", "-\t\t\t\t+ \"The import test.copy is never used\\n\"", "-\t\t\t\t+ \"----------\\n\"", "-\t\t\t\t+ \"2. ERROR in test\\\\X.java (at line 7)\\n\"", "-\t\t\t\t+ \"\t* @see VisibilityPackage#unknown Invalid ref: non visible class (non existent field)\\n\"", "-\t\t\t\t+ \"\t       ^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"Javadoc: The type VisibilityPackage is not visible\\n\"", "-\t\t\t\t+ \"----------\\n\"", "-\t\t\t\t+ \"3. ERROR in test\\\\X.java (at line 8)\\n\"", "-\t\t\t\t+ \"\t* @see VisibilityPackage#vf_private Invalid ref: non visible class (non existent field)\\n\"", "-\t\t\t\t+ \"\t       ^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"Javadoc: The type VisibilityPackage is not visible\\n\"", "-\t\t\t\t+ \"----------\\n\"", "-\t\t\t\t+ \"4. ERROR in test\\\\X.java (at line 9)\\n\"", "-\t\t\t\t+ \"\t* @see VisibilityPackage#vf_public Invalid ref: non visible class (visible field)\\n\"", "-\t\t\t\t+ \"\t       ^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"Javadoc: The type VisibilityPackage is not visible\\n\"", "-\t\t\t\t+ \"----------\\n\"", "-\t\t\t\t+ \"5. ERROR in test\\\\X.java (at line 10)\\n\"", "-\t\t\t\t+ \"\t* @see VisibilityPackage.VpPrivate#unknown Invalid ref: non visible class and non visible inner class (non existent field)\\n\"", "-\t\t\t\t+ \"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"Javadoc: The type VisibilityPackage is not visible\\n\"", "-\t\t\t\t+ \"----------\\n\"", "-\t\t\t\t+ \"6. ERROR in test\\\\X.java (at line 11)\\n\"", "-\t\t\t\t+ \"\t* @see VisibilityPackage.VpPrivate#vf_private Invalid ref: non visible class and non visible inner class (non visible field)\\n\"", "-\t\t\t\t+ \"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"Javadoc: The type VisibilityPackage is not visible\\n\"", "-\t\t\t\t+ \"----------\\n\"", "-\t\t\t\t+ \"7. ERROR in test\\\\X.java (at line 12)\\n\"", "-\t\t\t\t+ \"\t* @see VisibilityPackage.VpPrivate#vf_public Invalid ref: non visible class and non visible inner class (visible field)\\n\"", "-\t\t\t\t+ \"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"Javadoc: The type VisibilityPackage is not visible\\n\"", "-\t\t\t\t+ \"----------\\n\"", "-\t\t\t\t+ \"8. ERROR in test\\\\X.java (at line 13)\\n\"", "-\t\t\t\t+ \"\t* @see VisibilityPackage.VpPublic#unknown Invalid ref: non visible class and visible inner class (non existent field)\\n\"", "-\t\t\t\t+ \"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"Javadoc: The type VisibilityPackage is not visible\\n\"", "-\t\t\t\t+ \"----------\\n\"", "-\t\t\t\t+ \"9. ERROR in test\\\\X.java (at line 14)\\n\"", "-\t\t\t\t+ \"\t* @see VisibilityPackage.VpPublic#vf_private Invalid ref: non visible class and visible inner class (non visible field)\\n\"", "-\t\t\t\t+ \"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"Javadoc: The type VisibilityPackage is not visible\\n\"", "-\t\t\t\t+ \"----------\\n\"", "-\t\t\t\t+ \"10. ERROR in test\\\\X.java (at line 15)\\n\"", "-\t\t\t\t+ \"\t* @see VisibilityPackage.VpPublic#vf_public Invalid ref: non visible class and visible inner class (visible field)\\n\"", "-\t\t\t\t+ \"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\"", "-\t\t\t\t+ \"Javadoc: The type VisibilityPackage is not visible\\n\"", "-\t\t\t\t+ \"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in test\\\\X.java (at line 7)\\n\" + ", "+\t\t\t\"\t* @see VisibilityPackage#unknown Invalid ref: non visible class (non existent field)\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The type VisibilityPackage is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in test\\\\X.java (at line 8)\\n\" + ", "+\t\t\t\"\t* @see VisibilityPackage#vf_private Invalid ref: non visible class (non existent field)\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The type VisibilityPackage is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in test\\\\X.java (at line 9)\\n\" + ", "+\t\t\t\"\t* @see VisibilityPackage#vf_public Invalid ref: non visible class (visible field)\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The type VisibilityPackage is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in test\\\\X.java (at line 10)\\n\" + ", "+\t\t\t\"\t* @see VisibilityPackage.VpPrivate#unknown Invalid ref: non visible class and non visible inner class (non existent field)\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The type VisibilityPackage is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in test\\\\X.java (at line 11)\\n\" + ", "+\t\t\t\"\t* @see VisibilityPackage.VpPrivate#vf_private Invalid ref: non visible class and non visible inner class (non visible field)\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The type VisibilityPackage is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in test\\\\X.java (at line 12)\\n\" + ", "+\t\t\t\"\t* @see VisibilityPackage.VpPrivate#vf_public Invalid ref: non visible class and non visible inner class (visible field)\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The type VisibilityPackage is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. ERROR in test\\\\X.java (at line 13)\\n\" + ", "+\t\t\t\"\t* @see VisibilityPackage.VpPublic#unknown Invalid ref: non visible class and visible inner class (non existent field)\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The type VisibilityPackage is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. ERROR in test\\\\X.java (at line 14)\\n\" + ", "+\t\t\t\"\t* @see VisibilityPackage.VpPublic#vf_private Invalid ref: non visible class and visible inner class (non visible field)\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The type VisibilityPackage is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. ERROR in test\\\\X.java (at line 15)\\n\" + ", "+\t\t\t\"\t* @see VisibilityPackage.VpPublic#vf_public Invalid ref: non visible class and visible inner class (visible field)\\n\" + ", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: The type VisibilityPackage is not visible\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c836da6740bc4139efdfa97423d1765f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "b1aca9b4105c9a7f1aa8e5460992860c474db551", "commitAfterChange": "e7dd2375779ab49b47ee68f59ed9e6849f2130e6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["+// width)", "-        \"    -target <version>  set classfile target level: 1.1 to 1.6 (or 5, 5.0, 6 or 6.0)\\n\" + ", "+        \"    -target <version>  set classfile target level: 1.1 to 1.6 (or 5, 5.0, 6 or\\n\" +", "+        \"                       6.0)\\n\" + ", "-", "-\tthis.runConformTest(", "-\t\tnew String[0],", "-        \" -help -referenceInfo\",", "+\tString expandedExpectedOutput = ", "-\t\t}),", "+\t\t\t});", "+\t\tthis.runConformTest(", "+\t\tnew String[0],", "+        \" -help -referenceInfo\",", "+        expandedExpectedOutput,", "+\tcheckWidth(expandedExpectedOutput, 80);"]}], "num": 72088}