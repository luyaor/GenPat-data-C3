{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "549f4fdffe3a76715b8ca01abdfd5246", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1aa57fca604642102cb6f35966d4a9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite, boolean tiebreakingVarargsMethods)", "signatureAfterChange": " \tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite, boolean tiebreakingVarargsMethods)", "diff": ["+\t\t\telse  // ensure that computeCompatibleMethod() below can update arguments without harming our caller: (TODO: always copy before the loop? only in 1.8?)", "+\t\t\t\tSystem.arraycopy(arguments, 0, arguments=new TypeBinding[argLength], 0, argLength);", "-\t\tif ((compatibilityLevel = parameterCompatibilityLevel(method, arguments, tiebreakingVarargsMethods)) > NOT_COMPATIBLE) {", "+\t\tif ((compatibilityLevel = myParameterCompatibilityLevel(method, arguments, tiebreakingVarargsMethods, invocationSite)) > NOT_COMPATIBLE) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f408c0a0d7709d3f55b57011945876fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "0edd2a8da94febc0bef7418a02cfac9f1a30d36a", "commitAfterChange": "85f48e0f08275e1f81e9995073d5c4f69bfd0707", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite)", "signatureAfterChange": " \tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite, boolean tiebreakingVarargsMethods)", "diff": ["+\t */", "+\tprotected final MethodBinding computeCompatibleMethod(MethodBinding method, TypeBinding[] arguments, InvocationSite invocationSite, boolean tiebreakingVarargsMethods) {", "-\t\tif ((compatibilityLevel = parameterCompatibilityLevel(method, arguments)) > NOT_COMPATIBLE) {", "+\t\tif ((compatibilityLevel = parameterCompatibilityLevel(method, arguments, tiebreakingVarargsMethods)) > NOT_COMPATIBLE) {"]}], "num": 16062}