{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1a7985c469da8f9334d03eef2df31ea1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8e7ad514144295f63ac628383a4466c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c8343c5add6dda54a91bc7ca5cb7fef7041d4b69", "commitAfterChange": "acfecc45c26bfc8a63894e8f579dfa918573dba0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_DECLARATION)) {", "-\t\t\t\t\tfindMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "-\t\t\t\t}", "-\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {", "-\t\t\t\t\tproposeNewMethod(this.completionToken, scope.enclosingSourceType());", "+\t\t\t\tSourceTypeBinding enclosingType = scope.enclosingSourceType();", "+\t\t\t\tif(!enclosingType.isAnnotationType()) {", "+\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_DECLARATION)) {", "+\t\t\t\t\t\tfindMethods(this.completionToken,null,enclosingType,scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "+\t\t\t\t\t}", "+\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {", "+\t\t\t\t\t\tproposeNewMethod(this.completionToken, enclosingType);", "+\t\t\t\t\t}", "-\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_DECLARATION)) {", "-\t\t\t\t\t\tfindMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "-\t\t\t\t\t}", "-\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {", "-\t\t\t\t\t\tproposeNewMethod(this.completionToken, scope.enclosingSourceType());", "+\t\t\t\t\tSourceTypeBinding enclosingType = scope.enclosingSourceType();", "+\t\t\t\t\tif(!enclosingType.isAnnotationType()) {", "+\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.METHOD_DECLARATION)) {", "+\t\t\t\t\t\t\tfindMethods(this.completionToken,null,scope.enclosingSourceType(),scope,new ObjectVector(),false,false,true,null,null,false,false,true);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.POTENTIAL_METHOD_DECLARATION)) {", "+\t\t\t\t\t\t\tproposeNewMethod(this.completionToken, scope.enclosingSourceType());", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea18cbfe02cad99b8b8409627a184724", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "316430f6a7a386142798774df034be0e36155d28", "commitAfterChange": "5981e91cc71ba86df42ff9d60654ccdd89adffe1", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "diff": ["-\t\t\t\treportMatching(superClass.annotations[i], enclosingElement, null, type.binding, nodeSet, matchedClassContainer, enclosesElement);\t", "+\t\t\t\tAnnotation[] annotations = superClass.annotations[i];", "+\t\t\t\tif (annotations == null) continue;", "+\t\t\t\treportMatching(annotations, enclosingElement, null, type.binding, nodeSet, matchedClassContainer, enclosesElement);\t", "-\t\t\t\tif (typeReference != null &&  typeReference.annotations != null) {", "-\t\t\t\t\tfor (int j = 0, length = typeReference.annotations.length; j < length; j++) {", "-\t\t\t\t\t\treportMatching(typeReference.annotations[j], enclosingElement, null, type.binding, nodeSet, matchedClassContainer, enclosesElement);\t", "+\t\t\t\tAnnotation[][] annotations = typeReference != null ? typeReference.annotations : null;", "+\t\t\t\tif (annotations != null) {", "+\t\t\t\t\tfor (int j = 0, length = annotations.length; j < length; j++) {", "+\t\t\t\t\t\tif (annotations[j] == null) continue;", "+\t\t\t\t\t\treportMatching(annotations[j], enclosingElement, null, type.binding, nodeSet, matchedClassContainer, enclosesElement);\t"]}], "num": 53289}