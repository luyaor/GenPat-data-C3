{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "423925c27360992dd9c495dbc703c9fa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "070e4cf6957d7a8399d889e7a0a8c7f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "commitAfterChange": "a6181d6802b5a324cb95e89162694a938fb478d8", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " \tpublic boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t        default: // SUPER  // cannot use lower bound", "+\t        default :  // SUPER - cannot use lower bound", "-\t            return otherType.isCompatibleWith(this.bound);", "+\t        \tif (otherType.isWildcard()) {", "+\t        \t\tWildcardBinding otherWildcard = (WildcardBinding) otherType;", "+\t        \t\tswitch (otherWildcard.kind) {", "+\t        \t\t\tcase Wildcard.UNBOUND :", "+\t        \t\t\tdefault : // SUPER :", "+\t        \t\t\t\treturn false;", "+\t        \t\t\tcase Wildcard.EXTENDS :", "+\t        \t\t\t\treturn this.bound.isCompatibleWith(otherWildcard.bound);", "+\t        \t\t}", "+\t        \t} else {", "+\t\t            return otherType.isCompatibleWith(this.bound);", "+\t        \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f8ddf56403c9fa4d6fc94188b0214d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "3561a65aa6894682f3ea9a6665dee82b18c3d4bf", "commitAfterChange": "0b12d287970a543efa74b3f16f5eaa0f1a0fc0f9", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic ITypeBinding getBound()", "signatureAfterChange": " \tpublic ITypeBinding getBound()", "diff": ["-\t\t// TODO (olivier) missing implementation of J2SE 1.5 language feature", "+\t\tif (this.binding.isWildcard()) {", "+\t\t\tWildcardBinding wildcardBinding = (WildcardBinding) this.binding;", "+\t\t\tif (wildcardBinding.bound != null) {", "+\t\t\t\treturn this.resolver.getTypeBinding(wildcardBinding.bound);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13b1cbf790e2ae7e2ef671908aa9784b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "332f2b4bbc61519d48f9e1634468f589fe6ec357", "commitAfterChange": "1dac44e6f5251febeac5322fb143c153ef780c6a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " public boolean isCompatibleWith(TypeBinding otherType)", "signatureAfterChange": " public boolean isCompatibleWith(TypeBinding otherType)", "diff": ["-/*\t\t    ", "+\t\t    ", "-*/", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "662d41f7602b2ba6a6363c1822163770", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "82e9912ab60272a313bf7eee46fc18e3ab693e14", "commitAfterChange": "dbf4fbd7805f68c7c18078a430bcc006f32a9b28", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " \tpublic boolean isEquivalentTo(TypeBinding otherType)", "diff": ["+        if (otherType.isWildcard()) {", "+        \tWildcardBinding otherWildcard = (WildcardBinding) otherType;", "+        \tif ((otherWildcard.kind == this.kind) ", "+        \t\t\t&& (otherWildcard.bound == this.bound))", "+        \t\treturn true;", "+        }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9700d09414d2c72af9a56d4bffb354c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "03eb13b7f6f7dd942b3b75380217789e2a90fb3a", "commitAfterChange": "1beefc961dc948ef0240d8dec91f2aac8b57a9d3", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic static TypeMirror newTypeMirror(Binding binding)", "signatureAfterChange": " \tpublic static TypeMirror newTypeMirror(Binding binding)", "diff": ["+\t */", "-\t\tcase Binding.METHOD:", "+\t\t\treturn getNoType(TypeKind.PACKAGE);", "+\t\t\t", "+\t\tcase Binding.METHOD:", "-\t\t\treturn getPrimitiveType(PrimitiveTypeImpl.getKind((BaseTypeBinding)binding));", "+\t\t\tBaseTypeBinding btb = (BaseTypeBinding)binding;", "+\t\t\tswitch (btb.id) {", "+\t\t\tcase TypeIds.T_void:", "+\t\t\t\treturn getNoType(TypeKind.VOID);", "+\t\t\tcase TypeIds.T_null:", "+\t\t\t\treturn getNullType();", "+\t\t\tdefault:", "+\t\t\t\treturn getPrimitiveType(PrimitiveTypeImpl.getKind((BaseTypeBinding)binding));", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cccb5b7d5887ec80f7c91fef05a29859", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "cfa46c438969c215e6ff9812212b2c63288e6c8a", "commitAfterChange": "6dad91e4f298fff813aeb65b0b459a8698c68fdb", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tIBinding resolveImport(ImportDeclaration importDeclaration)", "signatureAfterChange": " \tIBinding resolveImport(ImportDeclaration importDeclaration)", "diff": ["-\t\t\t\t\tIPackageBinding packageBinding = this.getPackageBinding((org.eclipse.jdt.internal.compiler.lookup.PackageBinding) binding);", "-\t\t\t\t\tif (packageBinding == null) {", "-\t\t\t\t\t\treturn null;", "+\t\t\t\t\tif (binding.bindingType() == Binding.PACKAGE) {", "+\t\t\t\t\t\tIPackageBinding packageBinding = this.getPackageBinding((org.eclipse.jdt.internal.compiler.lookup.PackageBinding) binding);", "+\t\t\t\t\t\tif (packageBinding == null) {", "+\t\t\t\t\t\t\treturn null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.bindingsToAstNodes.put(packageBinding, importDeclaration);", "+\t\t\t\t\t\treturn packageBinding;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// if it is not a package, it has to be a type", "+\t\t\t\t\t\tITypeBinding typeBinding = this.getTypeBinding((org.eclipse.jdt.internal.compiler.lookup.TypeBinding) binding);", "+\t\t\t\t\t\tif (typeBinding == null) {", "+\t\t\t\t\t\t\treturn null;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.bindingsToAstNodes.put(typeBinding, importDeclaration);", "+\t\t\t\t\t\treturn typeBinding;", "-\t\t\t\t\tthis.bindingsToAstNodes.put(packageBinding, importDeclaration);", "-\t\t\t\t\treturn packageBinding;"]}], "num": 48818}