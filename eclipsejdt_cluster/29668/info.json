{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "23a9f89a1950cb33a78a262cb5cfbdce", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b0631dd07337068b5b57652cf416c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate void checkForInheritedMemberTypes(SourceTypeBinding sourceType)", "signatureAfterChange": "  \tprivate void checkForInheritedMemberTypes(SourceTypeBinding sourceType)", "diff": ["-\t\t} while ((currentType = currentType.superclass()) != null && (currentType.tagBits & HasNoMemberTypes) == 0);", "+\t\t} while ((currentType = currentType.superclass()) != null && (currentType.tagBits & TagBits.HasNoMemberTypes) == 0);", "-\t\t\t\t\tif ((anInterface.tagBits & HasNoMemberTypes) == 0) { // skip interface if it already knows it has no member types", "+\t\t\t\t\tif ((anInterface.tagBits & TagBits.HasNoMemberTypes) == 0) { // skip interface if it already knows it has no member types", "-\t\t\t\t\t\tinterfaces[j].tagBits |= HasNoMemberTypes;", "+\t\t\t\t\t\tinterfaces[j].tagBits |= TagBits.HasNoMemberTypes;", "-\t\t\tcurrentType.tagBits |= HasNoMemberTypes;", "-\t\t} while ((currentType = currentType.superclass()) != null && (currentType.tagBits & HasNoMemberTypes) == 0);", "+\t\t\tcurrentType.tagBits |= TagBits.HasNoMemberTypes;", "+\t\t} while ((currentType = currentType.superclass()) != null && (currentType.tagBits & TagBits.HasNoMemberTypes) == 0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e869381d1f36216d2c0f8b76c99f5fdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprivate boolean connectSuperInterfaces()", "signatureAfterChange": " \tprivate boolean connectSuperInterfaces()", "diff": ["-\t\t\tif (sourceType.isAnnotationType() && compilerOptions().sourceLevel >= JDK1_5) { // do not connect if source < 1.5 as annotation already got flagged as syntax error) {", "+\t\t\tif (sourceType.isAnnotationType() && compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) { // do not connect if source < 1.5 as annotation already got flagged as syntax error) {", "-\t\t\t\tsourceType.tagBits |= HierarchyHasProblems;", "+\t\t\t\tsourceType.tagBits |= TagBits.HierarchyHasProblems;", "-\t\t\t\tsourceType.tagBits |= HierarchyHasProblems;", "+\t\t\t\tsourceType.tagBits |= TagBits.HierarchyHasProblems;", "-\t\t\t\tsourceType.tagBits |= HierarchyHasProblems;", "+\t\t\t\tsourceType.tagBits |= TagBits.HierarchyHasProblems;", "-\t\t\t\t\t\t\t\tsourceType.tagBits |= HierarchyHasProblems;", "+\t\t\t\t\t\t\t\tsourceType.tagBits |= TagBits.HierarchyHasProblems;", "-\t\t\t\t\t\t\t\tsourceType.tagBits |= HierarchyHasProblems;", "+\t\t\t\t\t\t\t\tsourceType.tagBits |= TagBits.HierarchyHasProblems;"]}], "num": 29668}