{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55a323042dca6e8d34017836983196b5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d5541d3ad864c7c68f7836f495d840c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public char[] computeUniqueKey()", "signatureAfterChange": " public char[] computeUniqueKey(boolean withAccessFlags)", "diff": ["-public char[] computeUniqueKey() {", "-\tchar[] declaringKey = this.declaringClass == null /*case of length field for an array*/ ? CharOperation.NO_CHAR : this.declaringClass.computeUniqueKey();", "+public char[] computeUniqueKey(boolean withAccessFlags) {", "+\t// declaring key", "+\tchar[] declaringKey = ", "+\t\tthis.declaringClass == null /*case of length field for an array*/ ", "+\t\t\t? CharOperation.NO_CHAR ", "+\t\t\t: this.declaringClass.computeUniqueKey(false/*without access flags*/);", "+\t", "+\t// name", "-\tchar[] uniqueKey = new char[declaringLength + 1 + nameLength];", "-\tSystem.arraycopy(declaringKey, 0, uniqueKey, 0, declaringLength);", "-\tuniqueKey[declaringLength] = '.';", "-\tSystem.arraycopy(this.name, 0, uniqueKey, declaringLength + 1, nameLength);", "-\treturn uniqueKey;", "+\t", "+\tif (withAccessFlags) {", "+\t\t// flags", "+\t\tString flags = Integer.toString(getAccessFlags());", "+\t\tint flagsLength = flags.length();", "+\t", "+\t\tchar[] uniqueKey = new char[declaringLength + 1 + nameLength + 1 + flagsLength];", "+\t\tint index = 0;", "+\t\tSystem.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);", "+\t\tindex += declaringLength;", "+\t\tuniqueKey[index++] = '.';", "+\t\tSystem.arraycopy(this.name, 0, uniqueKey, index, nameLength);", "+\t\tindex += nameLength;", "+\t\tuniqueKey[index++] = '^';", "+\t\tflags.getChars(0, flagsLength, uniqueKey, index);", "+\t\treturn uniqueKey;", "+\t} else {", "+\t\tchar[] uniqueKey = new char[declaringLength + 1 + nameLength];", "+\t\tint index = 0;", "+\t\tSystem.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);", "+\t\tindex += declaringLength;", "+\t\tuniqueKey[index++] = '.';", "+\t\tSystem.arraycopy(this.name, 0, uniqueKey, index, nameLength);", "+\t\treturn uniqueKey;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75cd69dfd93a4f45c3fb84a2fd8d5506", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "194abd534b611ec2d23ab367d4102b5723758d82", "commitAfterChange": "c7d3258ae74375a57da545fcb11a05d452eeaa7b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " public char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\tif (isLeaf) {", "-\t\t// flags", "-\t\tString flags = Integer.toString(getAccessFlags());", "-\t\tint flagsLength = flags.length();", "-\t", "-\t\tchar[] uniqueKey = new char[declaringLength + 1 + nameLength + 1 + flagsLength];", "-\t\tint index = 0;", "-\t\tSystem.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);", "-\t\tindex += declaringLength;", "-\t\tuniqueKey[index++] = '.';", "-\t\tSystem.arraycopy(this.name, 0, uniqueKey, index, nameLength);", "-\t\tindex += nameLength;", "-\t\tuniqueKey[index++] = '^';", "-\t\tflags.getChars(0, flagsLength, uniqueKey, index);", "-\t\treturn uniqueKey;", "-\t} else {", "-\t\tchar[] uniqueKey = new char[declaringLength + 1 + nameLength];", "-\t\tint index = 0;", "-\t\tSystem.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);", "-\t\tindex += declaringLength;", "-\t\tuniqueKey[index++] = '.';", "-\t\tSystem.arraycopy(this.name, 0, uniqueKey, index, nameLength);", "-\t\treturn uniqueKey;", "-\t}", "+\tchar[] uniqueKey = new char[declaringLength + 1 + nameLength];", "+\tint index = 0;", "+\tSystem.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);", "+\tindex += declaringLength;", "+\tuniqueKey[index++] = '.';", "+\tSystem.arraycopy(this.name, 0, uniqueKey, index, nameLength);", "+\treturn uniqueKey;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "884bb4b0c8b2f7e8fbbc42efdd94d1ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "194abd534b611ec2d23ab367d4102b5723758d82", "commitAfterChange": "c7d3258ae74375a57da545fcb11a05d452eeaa7b", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected char[] computeUniqueKey(MethodBinding methodBinding, boolean isLeaf)", "signatureAfterChange": " protected char[] computeUniqueKey(MethodBinding methodBinding, boolean isLeaf)", "diff": ["-\tif (isLeaf) {", "-\t\t// flags", "-\t\tString flags = Integer.toString(methodBinding.getAccessFlags());", "-\t\tint flagsLength = flags.length();", "-\t\t", "-\t\tchar[] uniqueKey = new char[declaringLength + 1 + selectorLength + signatureLength + 1 + flagsLength];", "-\t\tint index = 0;", "-\t\tSystem.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);", "-\t\tindex = declaringLength;", "-\t\tuniqueKey[index++] = '.';", "-\t\tSystem.arraycopy(this.selector, 0, uniqueKey, index, selectorLength);", "-\t\tindex += selectorLength;", "-\t\tSystem.arraycopy(sig, 0, uniqueKey, index, signatureLength);", "-\t\tindex += signatureLength;", "-\t\tuniqueKey[index++] = '^';", "-\t\tflags.getChars(0, flagsLength, uniqueKey, index);", "-\t\t// index += modifiersLength", "-\t\treturn uniqueKey;", "-\t} else {", "-\t\tchar[] uniqueKey = new char[declaringLength + 1 + selectorLength + signatureLength];", "-\t\tint index = 0;", "-\t\tSystem.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);", "-\t\tindex = declaringLength;", "-\t\tuniqueKey[index++] = '.';", "-\t\tSystem.arraycopy(this.selector, 0, uniqueKey, index, selectorLength);", "-\t\tindex += selectorLength;", "-\t\tSystem.arraycopy(sig, 0, uniqueKey, index, signatureLength);", "-\t\t//index += signatureLength;", "-\t\treturn uniqueKey;", "-\t}", "+\tchar[] uniqueKey = new char[declaringLength + 1 + selectorLength + signatureLength];", "+\tint index = 0;", "+\tSystem.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);", "+\tindex = declaringLength;", "+\tuniqueKey[index++] = '.';", "+\tSystem.arraycopy(this.selector, 0, uniqueKey, index, selectorLength);", "+\tindex += selectorLength;", "+\tSystem.arraycopy(sig, 0, uniqueKey, index, signatureLength);", "+\t//index += signatureLength;", "+\treturn uniqueKey;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcd0420cc60b26ce2f1b2e2136c0d89d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "26ae2fb0b104f35c8ff6905d5a4d6e38ab8aa8e4", "commitAfterChange": "87c97e046bfd0082db22afde07881f33a4558114", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected char[] computeUniqueKey(MethodBinding methodBinding)", "signatureAfterChange": " protected char[] computeUniqueKey(MethodBinding methodBinding, boolean withAccessFlags)", "diff": ["-protected char[] computeUniqueKey(MethodBinding methodBinding) {", "+protected char[] computeUniqueKey(MethodBinding methodBinding, boolean withAccessFlags) {", "-\tchar[] declaringKey = this.declaringClass.computeUniqueKey();", "+\tchar[] declaringKey = this.declaringClass.computeUniqueKey(false/*without access flags*/);", "-\t// compute unique key", "-\tchar[] uniqueKey = new char[declaringLength + 1 + selectorLength + signatureLength];", "-\tSystem.arraycopy(declaringKey, 0, uniqueKey, 0, declaringLength);", "-\tuniqueKey[declaringLength] = '.';", "-\tSystem.arraycopy(this.selector, 0, uniqueKey, declaringLength+1, selectorLength);", "-\tSystem.arraycopy(sig, 0, uniqueKey, declaringLength + 1 + selectorLength, signatureLength);", "-\treturn uniqueKey;", "+\tif (withAccessFlags) {", "+\t\t// flags", "+\t\tString flags = Integer.toString(methodBinding.getAccessFlags());", "+\t\tint flagsLength = flags.length();", "+\t\t", "+\t\tchar[] uniqueKey = new char[declaringLength + 1 + selectorLength + signatureLength + 1 + flagsLength];", "+\t\tint index = 0;", "+\t\tSystem.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);", "+\t\tindex = declaringLength;", "+\t\tuniqueKey[index++] = '.';", "+\t\tSystem.arraycopy(this.selector, 0, uniqueKey, index, selectorLength);", "+\t\tindex += selectorLength;", "+\t\tSystem.arraycopy(sig, 0, uniqueKey, index, signatureLength);", "+\t\tindex += signatureLength;", "+\t\tuniqueKey[index++] = '^';", "+\t\tflags.getChars(0, flagsLength, uniqueKey, index);", "+\t\t// index += modifiersLength", "+\t\treturn uniqueKey;", "+\t} else {", "+\t\tchar[] uniqueKey = new char[declaringLength + 1 + selectorLength + signatureLength];", "+\t\tint index = 0;", "+\t\tSystem.arraycopy(declaringKey, 0, uniqueKey, index, declaringLength);", "+\t\tindex = declaringLength;", "+\t\tuniqueKey[index++] = '.';", "+\t\tSystem.arraycopy(this.selector, 0, uniqueKey, index, selectorLength);", "+\t\tindex += selectorLength;", "+\t\tSystem.arraycopy(sig, 0, uniqueKey, index, signatureLength);", "+\t\t//index += signatureLength;", "+\t\treturn uniqueKey;", "+\t}"]}], "num": 14232}