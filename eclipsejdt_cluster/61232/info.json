{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4b3775ccebcc526127e0cecd88e5a6e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e5a6eedb4ed8100e8389e2d92592cb8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": " public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\t\t\tFieldBinding fieldBinding = (FieldBinding) this.codegenBinding;", "-\t\t\tif (fieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\tFieldBinding codegenField = ((FieldBinding) this.binding).original();", "+\t\t\tif (codegenField.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\tif (fieldBinding.isStatic()) {", "+\t\t\t\tif (codegenField.isStatic()) {", "-\t\t\t\tcodeStream.generateEmulatedReadAccessForField(fieldBinding);", "+\t\t\t\tcodeStream.generateEmulatedReadAccessForField(codegenField);", "-\t\t\t\t\tif ((fieldBinding.type == TypeBinding.LONG) || (fieldBinding.type == TypeBinding.DOUBLE)) {", "-\t\t\t\t\t\tcodeStream.dup2();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcodeStream.dup();", "+\t\t\t\t\tswitch (codegenField.type.id) {", "+\t\t\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\t\t\tcodeStream.dup2();", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tcodeStream.dup();", "+\t\t\t\t\t\t\tbreak;", "-\t\t\t\tcodeStream.generateEmulationForField(fieldBinding);", "-\t\t\t\tif ((fieldBinding.type == TypeBinding.LONG) || (fieldBinding.type == TypeBinding.DOUBLE)) {", "-\t\t\t\t\tcodeStream.dup_x2();", "+\t\t\t\tcodeStream.generateEmulationForField(codegenField);", "+\t\t\t\tswitch (codegenField.type.id) {", "+\t\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\t\tcodeStream.dup_x2();", "+\t\t\t\t\t\tcodeStream.pop();", "+\t\t\t\t\t\tif (codegenField.isStatic()) {", "+\t\t\t\t\t\t\tcodeStream.aconst_null();", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tgenerateReceiver(codeStream);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tcodeStream.dup_x2();", "+\t\t\t\t\t\tcodeStream.pop();", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tcodeStream.dup_x1();", "-\t\t\t\t\tif (fieldBinding.isStatic()) {", "-\t\t\t\t\t\tcodeStream.aconst_null();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tgenerateReceiver(codeStream);", "-\t\t\t\t\t}", "-\t\t\t\t\tcodeStream.dup_x2();", "-\t\t\t\t\tcodeStream.pop();", "-\t\t\t\t} else {", "-\t\t\t\t\tcodeStream.dup_x1();", "-\t\t\t\t\tcodeStream.pop();", "-\t\t\t\t\tif (fieldBinding.isStatic()) {", "+\t\t\t\t\tif (codegenField.isStatic()) {", "+\t\t\t\t\t\tbreak;", "-\t\t\t\tcodeStream.sendOperator(postIncrement.operator, fieldBinding.type.id);", "+\t\t\t\tcodeStream.sendOperator(postIncrement.operator, codegenField.type.id);", "-\t\t\t\tcodeStream.generateEmulatedWriteAccessForField(fieldBinding);", "+\t\t\t\tcodeStream.generateEmulatedWriteAccessForField(codegenField);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f689e5c3a396167f6228a7a90be7d320", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " public void generateSyntheticBodyForConstructorAccess(SyntheticMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForConstructorAccess(SyntheticMethodBinding accessBinding)", "diff": ["-\t\t\tif ((type == TypeBinding.DOUBLE) || (type == TypeBinding.LONG))", "-\t\t\t\tresolvedPosition += 2;", "-\t\t\telse", "-\t\t\t\tresolvedPosition++;", "+\t\t\tswitch(type.id) {", "+\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\tresolvedPosition += 2;", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault :", "+\t\t\t\t\tresolvedPosition++;", "+\t\t\t\t\tbreak;", "+\t\t\t}", "-\t\tload(parameters[i], resolvedPosition);", "-\t\tif ((parameters[i] == TypeBinding.DOUBLE) || (parameters[i] == TypeBinding.LONG))", "-\t\t\tresolvedPosition += 2;", "-\t\telse", "-\t\t\tresolvedPosition++;", "+\t\tTypeBinding parameter;", "+\t\tload(parameter = parameters[i], resolvedPosition);", "+\t\tswitch(parameter.id) {", "+\t\t\tcase TypeIds.T_long :", "+\t\t\tcase TypeIds.T_double :", "+\t\t\t\tresolvedPosition += 2;", "+\t\t\t\tbreak;", "+\t\t\tdefault :", "+\t\t\t\tresolvedPosition++;", "+\t\t\t\tbreak;", "+\t\t}", "-\t\t\tload((type = syntheticArguments[i].type), resolvedPosition);", "-\t\t\tif ((type == TypeBinding.DOUBLE) || (type == TypeBinding.LONG))", "-\t\t\t\tresolvedPosition += 2;", "-\t\t\telse", "-\t\t\t\tresolvedPosition++;", "+\t\t\tload(type = syntheticArguments[i].type, resolvedPosition);", "+\t\t\tswitch(type.id) {", "+\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\tresolvedPosition += 2;", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault :", "+\t\t\t\t\tresolvedPosition++;", "+\t\t\t\t\tbreak;", "+\t\t\t}\t\t\t"]}], "num": 61232}