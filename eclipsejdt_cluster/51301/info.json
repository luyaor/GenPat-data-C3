{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1058f5fed88966937171673603f22e81", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "268781ae78407cb5480680360e1c6c14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/exceptionhandling/ExceptionHandlingProcessor.java", "commitBeforeChange": "2b3d802572b94da9377ae0cb4ebdbad53e957510", "commitAfterChange": "dc691692236d3f153abb72abbc7321c29890327a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "          @SuppressWarnings(\"unused\")     public void process()", "signatureAfterChange": "          @SuppressWarnings(\"unused\")     public void process()", "diff": ["+        \tEHAEnum[] enumsValue = annotation.enumsValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a93f188de7fb61600d32522df6e4ba5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "cb36a2c1d2807d188865d619946aab1b90306a44", "commitAfterChange": "817f5b60f1b5283073ee91db13e8dcaec6a51e5d", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tMethodBinding internalResolveTentatively(TypeBinding targetType, Scope scope)", "signatureAfterChange": "  \tMethodBinding internalResolveTentatively(TypeBinding targetType, Scope scope)", "diff": ["+\t\tTypeBinding previousExpectedType = this.expectedType;", "-\t\t\tthis.expectedType = null; // don't call setExpectedType(null), would NPE", "+\t\t\tthis.expectedType = previousExpectedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833959e2ca34616c78b92c4d9f03c534", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tIType findSecondaryType(String typeName, IPackageFragment pkg, boolean partialMatch, final int acceptFlags)", "signatureAfterChange": " \tIType findSecondaryType(String typeName, IPackageFragment pkg, boolean partialMatch, final int acceptFlags)", "diff": ["+\t\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c221d0c18726311426ee6d38ff31eedd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "836fef68856b7e7f6b208deb388901eeda69de4b", "commitAfterChange": "79e5d72bba2066424baa4a0d68a49d71cc4f75a5", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["+\t\t\tSourceTypeBinding initialType = this.enclosingSourceType();", "+\t\t\t\t\t\t\t", "+//\t\t\t\t\t\t\tif ((fieldBinding == null || !fieldBinding.isValidBinding()) && enclosingType.hasMemberTypes()) { // check member enums", "+//\t\t\t\t\t\t\t\tReferenceBinding[] memberTypes = enclosingType.memberTypes();", "+//\t\t\t\t\t\t\t\tfor (int i = 0, length = memberTypes.length; i < length; i++) {", "+//\t\t\t\t\t\t\t\t\tReferenceBinding memberType = memberTypes[i];", "+//\t\t\t\t\t\t\t\t\tif (memberType != initialType && memberType.isEnum()) { // do not find one's field through its enclosing members", "+//\t\t\t\t\t\t\t\t\t\tFieldBinding enumField = ((SourceTypeBinding)memberType).scope.findField(memberType, name, invocationSite, needResolve);", "+//\t\t\t\t\t\t\t\t\t\tif (enumField != null && (enumField.modifiers & AccEnum) != 0) {", "+//\t\t\t\t\t\t\t\t\t\t\t// grant access to enum constants of enclosing members", "+//\t\t\t\t\t\t\t\t\t\t\t// TODO (kent) need to revisit to see whether should walk sibling enums and issue an ambiguous match", "+//\t\t\t\t\t\t\t\t\t\t\treturn enumField;", "+//\t\t\t\t\t\t\t\t\t\t}", "+//\t\t\t\t\t\t\t\t\t}", "+//\t\t\t\t\t\t\t\t}", "+//\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e76e420bdaf853abba4b8ff2ad8b802a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "6cb413b41d6af887ce0091239bd381e2990ee7e7", "commitAfterChange": "e6634618f00448f9b6eeb2769052dd8505ce7a6a", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic ReferenceBinding[] memberTypes()", "signatureAfterChange": " \tpublic ReferenceBinding[] memberTypes()", "diff": ["+\t\t\t\tboolean isRaw = this.isRawType();", "-\t\t\t\t\tparameterizedMemberTypes[i] = this.environment.createParameterizedType(originalMemberTypes[i], null, this);", "+\t\t\t\t\tparameterizedMemberTypes[i] = /*isRaw && originalMemberTypes[i].isGenericType()", "+\t\t\t\t\t\t? this.environment.createRawType(originalMemberTypes[i], this)", "+\t\t\t\t\t\t: */ this.environment.createParameterizedType(originalMemberTypes[i], null, this);"]}], "num": 51301}