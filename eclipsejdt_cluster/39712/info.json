{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e78e21c22e941b6a804f96035c3839f9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "028373c1b1a3401f6dfc7eb913b4482d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ElementImpl.java", "commitBeforeChange": "75f4f0b82f02318c6c4e4bfb95c3e3b5439f0888", "commitAfterChange": "7dba3d463b518db197f1be8dba3263cfb75d33a8", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType)", "signatureAfterChange": "  \tpublic <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType)", "diff": ["-\t\t", "-\t\tAnnotationBinding [] packedAnnotations = getPackedAnnotationBindings();", "-\t\t", "-\t\tA [] result1 = _env.getFactory().getAnnotationsByType(packedAnnotations, annotationType);", "-\t\tA [] result2 = _env.getFactory().getAnnotationsByType(Factory.getOnlyUnpackedAnnotationBindings(packedAnnotations), annotationType);", "-\t\t", "-\t\tif (result1.length == 0)", "-\t\t\treturn result2;", "-\t\tif (result2.length == 0)", "-\t\t\treturn result1;", "-\t\t", "-\t\t@SuppressWarnings(\"unchecked\")", "-\t\tA [] result = (A[]) Array.newInstance(annotationType, result1.length + result2.length);", "-\t\t", "-\t\tSystem.arraycopy(result1, 0, result, 0, result1.length);", "-\t\tSystem.arraycopy(result2, 0, result, result1.length, result2.length);", "-\t\t", "-\t\treturn result;", "+\t\treturn _env.getFactory().getAnnotationsByType(Factory.getUnpackedAnnotationBindings(getPackedAnnotationBindings()), annotationType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15a1c937239e7530f1ea62bcb9c93ac5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "abd333621a0cbd2492673b0e887a888245d2d663", "commitAfterChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic IPath addPackageFragmentRoot(IPath projectPath, String packageFragmentRootName)", "signatureAfterChange": "  \tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName)", "diff": ["+", "+\tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName) {", "+\t\treturn addPackageFragmentRoot(projectPath, sourceFolderName, \"\"); //$NON-NLS-1$", "+\t}", "-\tpublic IPath addPackageFragmentRoot(IPath projectPath, String packageFragmentRootName) {", "-\t\tIPath packageFragmentRootPath =", "-\t\t\tprojectPath.append(packageFragmentRootName);", "-\t\tif (!packageFragmentRootName.toLowerCase().endsWith(\".zip\") //$NON-NLS-1$", "-\t\t\t&& !packageFragmentRootName.toLowerCase().endsWith(\".jar\")) { //$NON-NLS-1$", "-\t\t\tcreateFolder(packageFragmentRootPath);", "-\t\tIPath[] oldRootsPath = getClasspath(projectPath);", "-\t\tIPath[] newRootsPath = new IPath[oldRootsPath.length + 1];", "-\t\tSystem.arraycopy(oldRootsPath, 0, newRootsPath, 0, oldRootsPath.length);", "-\t\tIPath rootPath = getPackageFragmentRootPath(projectPath, packageFragmentRootName);", "-\t\tnewRootsPath[newRootsPath.length - 1] = rootPath;", "-\t\tsetClasspath(projectPath, newRootsPath);", "-\t\treturn rootPath;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cd2ff9646212bf8bd661d1c5521277f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeMirrorImpl.java", "commitBeforeChange": "75f4f0b82f02318c6c4e4bfb95c3e3b5439f0888", "commitAfterChange": "7dba3d463b518db197f1be8dba3263cfb75d33a8", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t@SuppressWarnings(\"unchecked\") \tpublic <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType)", "signatureAfterChange": "  \t@SuppressWarnings(\"unchecked\") \tpublic <A extends Annotation> A[] getAnnotationsByType(Class<A> annotationType)", "diff": ["-\t\t", "-\t\t", "-\t\tAnnotationBinding [] packedAnnotations = getPackedAnnotationBindings();", "-\t\tA [] result1 = _env.getFactory().getAnnotationsByType(packedAnnotations, annotationType);", "-\t\tA [] result2 = _env.getFactory().getAnnotationsByType(Factory.getOnlyUnpackedAnnotationBindings(packedAnnotations), annotationType);", "-\t\t", "-\t\tif (result1.length == 0)", "-\t\t\treturn result2;", "-\t\tif (result2.length == 0)", "-\t\t\treturn result1;", "-\t\t", "-\t\tA [] result = (A[]) Array.newInstance(annotationType, result1.length + result2.length);", "-\t\t", "-\t\tSystem.arraycopy(result1, 0, result, 0, result1.length);", "-\t\tSystem.arraycopy(result2, 0, result, result1.length, result2.length);", "-\t\t", "-\t\treturn result;", "+\t\treturn _env.getFactory().getAnnotationsByType(Factory.getUnpackedAnnotationBindings(getPackedAnnotationBindings()), annotationType);"]}], "num": 39712}