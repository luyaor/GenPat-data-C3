{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff97ce843b73b355813fd7d704bbd539", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "833a94efd3dc487fb05226185ea1ecc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemHandler.java", "commitBeforeChange": "368e7b2744bb4a520a4dfc9ab8183508aa7c626d", "commitAfterChange": "93b70485a331557e06c4f378f7086f6e4f12616a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void handle( \tint problemId,  \tString[] problemArguments,  \tString[] messageArguments, \tint severity,  \tint problemStartPosition,  \tint problemEndPosition,  \tReferenceContext referenceContext,  \tCompilationResult unitResult)", "signatureAfterChange": " public void handle( \tint problemId,  \tString[] problemArguments,  \tString[] messageArguments, \tint severity,  \tint problemStartPosition,  \tint problemEndPosition,  \tReferenceContext referenceContext,  \tCompilationResult unitResult)", "diff": ["-\t\t\tthrow new AbortCompilation(problemId, problemArguments, messageArguments);", "+\t\t\tIProblem problem = this.createProblem(null, \tproblemId, \tproblemArguments, messageArguments, severity, 0, 0, 0);\t\t\t", "+\t\t\tthrow new AbortCompilation(null, problem);", "-\t\t\t\t: 0,", "-\t\t\treferenceContext,", "-\t\t\tunitResult); ", "+\t\t\t\t: 0);", "-\t\t\t\treferenceContext.abort(abortLevel);", "+\t\t\t\treferenceContext.abort(abortLevel, problem);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90c1b8d0833c4e79a1e2eb09fe82567b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "6d5d9e32b8895e146fe7b876c8e27635ad72d617", "commitAfterChange": "909d7ea106422d6ae8df5392c045bb0bb269cbe3", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic String addStaticImport(String declaringTypeName, String simpleName, boolean isField, ImportRewriteContext context)", "signatureAfterChange": " \tpublic String addStaticImport(String declaringTypeName, String simpleName, boolean isField, ImportRewriteContext context)", "diff": ["+\t\tString key = declaringTypeName + '.' + simpleName;", "-\t\t\treturn declaringTypeName + '.' + simpleName;", "+\t\t\treturn key;", "+\t\tthis.importsKindMap.put(key, new Integer(kind));", "-\t\t\treturn declaringTypeName + '.' + simpleName;", "+\t\t\treturn key;", "-\t\t\taddEntry(STATIC_PREFIX + declaringTypeName + '.' + simpleName);", "+\t\t\taddEntry(STATIC_PREFIX + key);"]}], "num": 35668}