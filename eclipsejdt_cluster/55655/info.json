{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a2a6aa60e540ea274d12d6ba9a26d161", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2de61bbb763ed38c2c2350dd78ab279c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "4a42ce44b4dbdac7dfa261ef1a39fce0de95d7be", "commitAfterChange": "51fbd8e4f6294604d20aa6227743a8c8abfdc166", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "signatureAfterChange": "\r \r protected AbstractImageBuilder(JavaBuilder javaBuilder)", "diff": ["-\tint index = sourceFolders.length;\r", "-\tthis.hasSeparateOutputFolder = index > 0; // skip it if it doesn't have any source folders\r", "-\twhile (this.hasSeparateOutputFolder && --index >= 0)\r", "-\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[index].getFullPath());\r", "+\tint index = sourceFolders.length;\r", "+\tif (index == 0) {\r", "+\t\t// handle case of the last source folder is removed... so no source folders exist but the output folder must still be scrubbed\r", "+\t\tthis.hasSeparateOutputFolder = !outputPath.equals(javaBuilder.currentProject.getFullPath());\r", "+\t} else {\r", "+\t\tthis.hasSeparateOutputFolder = true;\r", "+\t\twhile (this.hasSeparateOutputFolder && --index >= 0)\r", "+\t\t\tthis.hasSeparateOutputFolder = !outputPath.equals(sourceFolders[index].getFullPath());\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4cf8592ccd0a8043ad6cccf1f07d5604", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "b584041c55393f6044beb5ed98f7b741088ab318", "commitAfterChange": "b171a3cb32409185b8e78b9cb506987b409517f9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void fillInDefaultNonNullness(FieldDeclaration sourceField, Scope scope)", "signatureAfterChange": "  public void fillInDefaultNonNullness(FieldDeclaration sourceField, Scope scope)", "diff": ["-\tif (   this.type != null", "-\t\t&& !this.type.isBaseType()", "+\tif (this.type == null)", "+\t\treturn;", "+\tif (environment.usesNullTypeAnnotations() && !this.type.acceptsNonNullDefault())", "+\t\treturn;", "+\tif (   !this.type.isBaseType()"]}], "num": 55655}