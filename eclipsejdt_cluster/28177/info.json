{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c3d6ebff78675b28b2c0d74287e855d2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "158bc5c328b4505534c5893caca17f85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c9b530e01318c4f59e9e7828de1da4c97f8fe89e", "commitAfterChange": "69656daba7331091b482d7c6b3e675c144730396", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t\t \tpublic ASTNode convert(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": " \t\t \tpublic ASTNode convert(org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "diff": ["+\t\t\t} else {", "+\t\t\t\tswitch(this.ast.apiLevel) {", "+\t\t\t\t\tcase AST.JLS2_INTERNAL :", "+\t\t\t\t\t\tmethodDecl.setFlags(methodDecl.getFlags() | ASTNode.MALFORMED);", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase AST.JLS3 :", "+\t\t\t\t\t\tmethodDecl.setReturnType2(null);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f6bb64048bb1048e82d57da57219b13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "c0d8ddbb4b72e166c7dc81eb807bc47fd1beaa74", "commitAfterChange": "eba08540864c5a072bab6eda44e20e08ad2dd7a0", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic ASTNode convert(boolean isInterface, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "signatureAfterChange": "  \tpublic ASTNode convert(boolean isInterface, org.eclipse.jdt.internal.compiler.ast.AbstractMethodDeclaration methodDeclaration)", "diff": ["+", "+\t\tif (methodDeclaration.receiver != null) {", "+\t\t\tif(this.ast.apiLevel >= AST.JLS8) {", "+\t\t\t\tconvertAndSetReceiver(methodDeclaration, methodDecl);", "+\t\t\t} else {", "+\t\t\t\tmethodDecl.setFlags(methodDecl.getFlags() | ASTNode.MALFORMED);", "+\t\t\t}", "+\t\t}"]}], "num": 28177}