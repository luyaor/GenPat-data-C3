{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7f1cb80dd6661b435f81772da80b6b5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11148f195358e9e9a1fe65c5dccd8792", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/AbstractSearchScope.java", "commitBeforeChange": "fe41a5ed7a14de553c93fde5ff3064717032f87a", "commitAfterChange": "75a9b073354511bd41fc601022882d52caaa8ded", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r protected boolean encloses(IResource element)", "signatureAfterChange": "\r \tpublic abstract void processDelta(IJavaElementDelta delta);", "diff": ["- */\r", "-protected boolean encloses(IResource element) {\r", "-\tIPath elementPath = element.getFullPath();\r", "-\tfor (int i = 0; i < elementCount; i++) {\r", "-\t\tif (this.elements[i].getFullPath().isPrefixOf(elementPath)) {\r", "-\t\t\treturn true;\r", "-\t\t}\r", "-\t}\r", "-\treturn false;\r", "-}\r", "+\t */\r", "+\tpublic abstract void processDelta(IJavaElementDelta delta);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d30f3df3705361a7e81b7f31b7709fe6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7fe004f7b5f0bcd4b089b0ee8582afd2bc4b79cd", "commitAfterChange": "530c48877da8402a05b3f0b84990331c9acd9df4", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r \tprotected boolean includesPotentialMatch(PotentialMatch potentialMatch)", "signatureAfterChange": "\r \r \tprotected Openable getCurrentOpenable()", "diff": ["-\tprotected boolean includesPotentialMatch(PotentialMatch potentialMatch) {\r", "-\t\tfor (int i = 0; i < this.potentialMatchesLength; i++) {\r", "-\t\t\tif (potentialMatch.openable.equals(this.potentialMatches[i].openable)) {\r", "-\t\t\t\treturn true;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\treturn false;\r", "-\t}\r", "+\t\treturn this.currentMatchingOpenable.openable;\r"]}], "num": 3060}