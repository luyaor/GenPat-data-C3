{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "caaf102c6c50d5702fa92079ec6dc06b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cfe282b5ea08c82aae2604dd73dcf78", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "da8689e6058c8df72d6de5be59efe4e5eaaa5d49", "commitAfterChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public void printStats()", "signatureAfterChange": "\r public void printStats()", "diff": ["-\tjava.util.Vector v = new java.util.Vector();\r", "+\tArrayList v = new ArrayList();\r", "-\tjava.util.Hashtable h = new java.util.Hashtable();\r", "+\tjava.util.HashMap h = new java.util.HashMap();\r", "-\tkeys = h.keys();\r", "-\twhile(keys.hasMoreElements()) {\r", "-\t\tSystem.out.println(h.get(keys.nextElement()));\r", "+\tfor (Iterator iter = h.keySet().iterator(); iter.hasNext();){\r", "+\t\tSystem.out.println(h.get(iter.next()));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94831c7323f182bee400f23b25c3dbb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "da8689e6058c8df72d6de5be59efe4e5eaaa5d49", "commitAfterChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r private String[] determinePossibleSubTypes() throws JavaModelException, CoreException", "signatureAfterChange": "\r private String[] determinePossibleSubTypes() throws JavaModelException, CoreException", "diff": ["-\t\tHashtable paths = new Hashtable(10);\r", "+\t\tHashSet paths = new HashSet(10);\r", "-\t\t\tpaths.put(path, path);\r", "+\t\t\tpaths.add(path);\r", "-\tHashtable paths = collector.paths;\r", "+\tHashSet paths = collector.paths;\r", "-\tfor (Enumeration elements = paths.elements(); elements.hasMoreElements(); ) {\r", "-\t\tresult[count++] = (String) elements.nextElement();\r", "+\tfor (Iterator iter = paths.iterator(); iter.hasNext();) {\r", "+\t\tresult[count++] = (String) iter.next();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab7bc2db0201c377f59faf57ba4ffacb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "cba4a74f046a7c7d43d81e11b279554f1ab8b4ad", "commitAfterChange": "2a01994b0addf3b51b8cc85382b32cfdc277de6c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tprivate void buildResourceVector() throws JavaModelException", "signatureAfterChange": "\r \tprivate void buildResourceVector() throws JavaModelException", "diff": ["-\t\tHashtable resources = new Hashtable();\r", "-\t\tHashtable paths = new Hashtable();\r", "+\t\tHashMap resources = new HashMap();\r", "+\t\tHashMap paths = new HashMap();\r", "-\t\t\t\tthis.resourcePaths.put(resourcePath, resourcePath);\r", "+\t\t\t\tthis.resourcePaths.add(resourcePath);\r", "-\t\tfor (Enumeration e = paths.keys(); e.hasMoreElements();) {\r", "-\t\t\tthis.enclosingProjectsAndJars[i++] = (IPath) e.nextElement();\r", "+\t\tfor (Iterator iter = paths.keySet().iterator(); iter.hasNext();) {\r", "+\t\t\tthis.enclosingProjectsAndJars[i++] = (IPath) iter.next();\r"]}], "num": 52584}