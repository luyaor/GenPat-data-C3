{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "61be46a59f11494c429d8a2348930cdf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57d93cc1425344f39e3f7b89178e242b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "34f546269a807fa0bb6d9e888ddcecff76991315", "commitAfterChange": "a81acda43dd9b6911662c8a0d3f12c4b0d2da4da", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \tpublic void checkProjectBeingAdded(IResourceDelta delta)", "signatureAfterChange": "\r \tpublic void checkProjectsBeingAddedOpenedOrClosed(IResourceDelta delta)", "diff": ["-\tpublic void checkProjectBeingAdded(IResourceDelta delta) {\r", "+\tpublic void checkProjectsBeingAddedOpenedOrClosed(IResourceDelta delta) {\r", "-\t\t\t\t\tthis.checkProjectBeingAdded(children[i]);\r", "+\t\t\t\t\tthis.checkProjectsBeingAddedOpenedOrClosed(children[i]);\r", "+\t\t\t\t// NB: No need to check project's nature as if the project is not a java project:\r", "+\t\t\t\t//     - if the project is added or changed this is a noop for projectsBeingDeleted\r", "+\t\t\t\t//     - if the project is closed, it has already lost its java nature\r", "-\t\t\t\tif (deltaKind == IResourceDelta.ADDED /* case of a project removed then added */\r", "-\t\t\t\t\t|| deltaKind == IResourceDelta.CHANGED /* case of a project removed then added then changed */) {\r", "-\t\t\t\t\tthis.projectsBeingDeleted.remove(delta.getResource());\r", "+\t\t\t\tif (deltaKind == IResourceDelta.ADDED) {\r", "+\t\t\t\t\t// in case the project was removed then added\r", "+\t\t\t\t\tthis.projectsBeingDeleted.remove(resource);\r", "+\t\t\t\t\t\r", "+\t\t\t\t\t// remember dependents\r", "+\t\t\t\t\tthis.deltaProcessor.addDependentsToProjectsToUpdate(resource.getFullPath());\r", "+\t\t\t\t\t\r", "+\t\t\t\t} else if (deltaKind == IResourceDelta.CHANGED) {\r", "+\t\t\t\t\t// in case the project was removed then added then changed\r", "+\t\t\t\t\tthis.projectsBeingDeleted.remove(resource);\r", "+\t\t\t\t\t\r", "+\t\t\t\t\tif ((delta.getFlags() & IResourceDelta.OPEN) != 0) {\r", "+\t\t\t\t\t\t// project opened or closed: remember dependents\r", "+\t\t\t\t\t\tthis.deltaProcessor.addDependentsToProjectsToUpdate(resource.getFullPath());\r", "+\t\t\t\t\t}\r", "+\t\t\t\tbreak;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7995524fdbbb4f99f38b2b9a1f6b5ae0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "fd31dd820e0308372e0f0722459d45175ff874ed", "commitAfterChange": "5a12a220bc147ceb34370c89306997df47624c96", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \r protected void updateIndex(Openable element, IResourceDelta delta)", "diff": ["-\t\t\tswitch (delta.getKind()) {\r", "-\t\t\t\tcase IResourceDelta.ADDED:\r", "-\t\t\t\tcase IResourceDelta.CHANGED:\r", "-\t\t\t\t\tif (element instanceof JarPackageFragmentRoot) {\r", "-\t\t\t\t\t\tJarPackageFragmentRoot root = (JarPackageFragmentRoot)element;\r", "-\t\t\t\t\t\t// index jar file only once (if the root is in its declaring project)\r", "-\t\t\t\t\t\tif (root.getJavaProject().getProject().getFullPath().isPrefixOf(root.getPath())) {\r", "-\t\t\t\t\t\t\tindexManager.indexLibrary(root.getPath(), root.getJavaProject().getProject());\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tbreak;\r", "-\t\t\t\tcase IResourceDelta.REMOVED:\r", "-\t\t\t\t\t// keep index in case it is added back later in this session\r", "-\t\t\t\t\tbreak;\r", "+\t\t\tif (element instanceof JarPackageFragmentRoot) {\r", "+\t\t\t\tJarPackageFragmentRoot root = (JarPackageFragmentRoot)element;\r", "+\t\t\t\t// index jar file only once (if the root is in its declaring project)\r", "+\t\t\t\tIPath jarPath = root.getPath();\r", "+\t\t\t\tswitch (delta.getKind()) {\r", "+\t\t\t\t\tcase IResourceDelta.ADDED:\r", "+\t\t\t\t\t\t// index the new jar\r", "+\t\t\t\t\t\tindexManager.indexLibrary(jarPath, root.getJavaProject().getProject());\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IResourceDelta.CHANGED:\r", "+\t\t\t\t\t\t// first remove the index so that it is forced to be re-indexed\r", "+\t\t\t\t\t\tindexManager.removeIndex(jarPath);\r", "+\t\t\t\t\t\t// then index the jar\r", "+\t\t\t\t\t\tindexManager.indexLibrary(jarPath, root.getJavaProject().getProject());\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IResourceDelta.REMOVED:\r", "+\t\t\t\t\t\t// the jar was physically removed: remove the index\r", "+\t\t\t\t\t\tindexManager.removeIndex(jarPath);\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t\tbreak;\r"]}], "num": 4095}