{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f1c524803bd6cb44c2326489127bc6cb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49e614cc1711467847e16a78b042cc3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AnnotationMethodDeclaration.java", "commitBeforeChange": "56a590253c3f035c3be73a22341723982f779ff3", "commitAfterChange": "dce900a45b8c86c66d3ad818e72b3b646d54f5bd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["+\t\t\t\t\t", "-\t\t\t\t\t\tbreak checkAnnotationMethodType;", "+\t\t\t\t\t\tif (returnTypeBinding.dimensions() <= 1) // only 1-dimensional array permitted", "+\t\t\t\t\t\t\tbreak checkAnnotationMethodType;", "-\t\t\t\t\tbreak checkAnnotationMethodType;", "+\t\t\t\t\tif (returnTypeBinding.dimensions() <= 1) // only 1-dimensional array permitted", "+\t\t\t\t\t\tbreak checkAnnotationMethodType;", "-\t\t\t\t\tbreak checkAnnotationMethodType;", "+\t\t\t\t\tif (returnTypeBinding.dimensions() <= 1) // only 1-dimensional array permitted", "+\t\t\t\t\t\tbreak checkAnnotationMethodType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf1391a547775f03c1bcb343101f962", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "d374c39ddab0b1f83162946aec27b6b36fb07bfb", "commitAfterChange": "a8a3a90ec5bfee0f774504f5c766dbb8c9570420", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tMethodScope initializationScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tMethodScope initializationScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tcheckAnnotationField: {", "-\t\t\tif (!this.binding.declaringClass.isAnnotationType())", "-\t\t\t\tbreak checkAnnotationField;", "-\t\t\tif (this.initialization != null) {", "-\t\t\t\tif (this.binding.type.isArrayType() && (this.initialization instanceof ArrayInitializer))", "-\t\t\t\t\tbreak checkAnnotationField;", "-\t\t\t\tif (this.initialization.constant != NotAConstant)", "-\t\t\t\t\tbreak checkAnnotationField;", "-\t\t\t}", "-\t\t\tinitializationScope.problemReporter().annotationFieldNeedConstantInitialization(this);", "-\t\t}"]}], "num": 33968}