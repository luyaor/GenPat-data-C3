{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f370387f474c9c4bcf580a3d9bd5a652", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "271958f18c5a689797994fc884d20870", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tpublic void setOption(String optionName, String optionValue)", "signatureAfterChange": " \tpublic void setOption(String optionName, String optionValue)", "diff": ["-\t\t\tif (!JavaModelManager.OptionNames.contains(optionName)) return; // unrecognized option", "-\t\t\tPreferences preferences = getPreferences();", "-\t\t\tpreferences.setDefault(optionName, CUSTOM_DEFAULT_OPTION_VALUE); // empty string isn't the default (26251)", "-\t\t\tpreferences.setValue(optionName, optionValue);", "-\t\t\tsavePreferences(preferences);", "+\t\t// TODO (frederic) remove when bug 45110 will be fixed", "+\t\tString key = optionName;", "+\t\tif (optionName.equals(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION)) {", "+\t\t\tkey = JavaCore.COMPILER_PB_MISSING_JAVADOC;", "+\t\t}", "+\t\t// end bug 45110", "+\t\tif (!JavaModelManager.OptionNames.contains(key)) return; // unrecognized option", "+\t\tPreferences preferences = getPreferences();", "+\t\tpreferences.setDefault(key, CUSTOM_DEFAULT_OPTION_VALUE); // empty string isn't the default (26251)", "+\t\tpreferences.setValue(key, optionValue);", "+\t\tsavePreferences(preferences);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94ed13663374dff2999a4684348b38f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "b136d601b8b65cbe6a937874c4ada8fd9c6f056d", "commitAfterChange": "4c6ae9dae1fc96f9fd302751a25b14b4f972fb0f", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic void setOptions(Map newOptions)", "signatureAfterChange": " \tpublic void setOptions(Map newOptions)", "diff": ["-\t\t\t\tif (!JavaModelManager.OptionNames.contains(key)) continue; // unrecognized option", "+\t\t\t\t// TODO (frederic) remove when bug 45110 will be fixed", "+\t\t\t\tString newKey = key;", "+\t\t\t\tif (key.equals(JavaCore.OLD_COMPILER_PB_MISSING_ANNOTATION)) {", "+\t\t\t\t\tnewKey = JavaCore.COMPILER_PB_MISSING_JAVADOC;", "+\t\t\t\t}", "+\t\t\t\t// end bug 45110", "+\t\t\t\tif (!JavaModelManager.OptionNames.contains(newKey)) continue; // unrecognized option", "-\t\t\t\tpreferences.setDefault(key, CUSTOM_DEFAULT_OPTION_VALUE); // empty string isn't the default (26251)", "-\t\t\t\tpreferences.setValue(key, value);", "+\t\t\t\tpreferences.setDefault(newKey, CUSTOM_DEFAULT_OPTION_VALUE); // empty string isn't the default (26251)", "+\t\t\t\tpreferences.setValue(newKey, value);"]}], "num": 14743}