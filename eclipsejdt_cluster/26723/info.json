{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7820e82367048414f1eec0f1e988382", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f98861a6b822e2863ec57e4fa8e06871", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tvoid genericPropertyListTest(ASTNode node, List children, Property prop)", "signatureAfterChange": " \tvoid genericPropertyListTest(ASTNode node, List children, Property prop)", "diff": ["+\t\t\t}", "+\t\t}", "+\t\t", "+\t\t// check that a child of the wrong type is detected", "+\t\tASTNode b1[] = prop.counterExamples(node.getAST());", "+\t\tfor (int i = 0; i < b1.length; i++) {", "+\t\t\ttry {", "+\t\t\t\tchildren.add(b1[i]); // bogus: wrong type", "+\t\t\t\tassertTrue(false);", "+\t\t\t} catch (RuntimeException e) {", "+\t\t\t\t// pass"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6cf3e554cc8e7d464b3b492a67b281", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tvoid genericPropertyTest(ASTNode node, Property prop)", "signatureAfterChange": " \tvoid genericPropertyTest(ASTNode node, Property prop)", "diff": ["+\t\t", "+\t\t// check that a child of the wrong type is detected", "+\t\tASTNode b1[] = prop.counterExamples(node.getAST());", "+\t\tfor (int i = 0; i < b1.length; i++) {", "+\t\t\ttry {", "+\t\t\t\tprop.set(b1[i]); // bogus: wrong type", "+\t\t\t\tassertTrue(false);", "+\t\t\t} catch (RuntimeException e) {", "+\t\t\t\t// pass", "+\t\t\t}", "+\t\t}", "+"]}], "num": 26723}