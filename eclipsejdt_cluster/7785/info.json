{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30fe8ad60eef36e539a846c45febee3e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "218a0789a56180cf997dcb46e3eadc22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PossibleMatch.java", "commitBeforeChange": "7dcc81b9483bd917811b239ba748dff59d4ce7dc", "commitAfterChange": "4136248cb1581d6af7c774a979b9c48c11440c8d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public char[] getContents()", "signatureAfterChange": " public char[] getContents()", "diff": ["-\t\t\t} else {", "-\t\t\t\treturn this.source = Util.getResourceContentsAsCharArray((IFile) this.resource);", "+\t\t\treturn this.source = Util.getResourceContentsAsCharArray((IFile) this.resource);", "-\t\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "-\t\t\tif (sourceMapper != null) {", "-\t\t\t\tString fileName = getSourceFileName();", "-\t\t\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "+\t\t\tString fileName = getSourceFileName();", "+\t\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "-\t\t\t\tIType type = ((ClassFile) this.openable).getType();", "-\t\t\t\treturn this.source = sourceMapper.findSource(type, fileName);", "-\t\t\t}", "+\t\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "+\t\t\tIType type = ((ClassFile) this.openable).getType();", "+\t\t\treturn this.source = sourceMapper.findSource(type, fileName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9091fad4726e10f1979e1a8d84d7d83d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PossibleMatch.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public char[] getContents()", "signatureAfterChange": " public char[] getContents()", "diff": ["-\ttry {", "-\t\tif (this.openable instanceof CompilationUnit) {", "-\t\t\tif (((CompilationUnit) this.openable).isWorkingCopy()) {", "-\t\t\t\tIBuffer buffer = this.openable.getBuffer();", "-\t\t\t\tif (buffer == null) return null;", "-\t\t\t\treturn this.source = buffer.getCharacters();", "-\t\t\t}", "-\t\t\treturn this.source = Util.getResourceContentsAsCharArray((IFile) this.resource);", "-\t\t} else if (this.openable instanceof ClassFile) {", "-\t\t\tString fileName = getSourceFileName();", "-\t\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "+\tif (this.openable instanceof ClassFile) {", "+\t\tString fileName = getSourceFileName();", "+\t\tif (fileName == NO_SOURCE_FILE_NAME) return null;", "-\t\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "-\t\t\tIType type = ((ClassFile) this.openable).getType();", "-\t\t\treturn this.source = sourceMapper.findSource(type, fileName);", "-\t\t}", "-\t} catch (JavaModelException e) { // ignored", "+\t\tSourceMapper sourceMapper = this.openable.getSourceMapper();", "+\t\tIType type = ((ClassFile) this.openable).getType();", "+\t\treturn this.source = sourceMapper.findSource(type, fileName);", "-\treturn null;", "+\treturn this.source = this.document.getCharContents();"]}], "num": 7785}