{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "463172fe8cff1af7b3c1fddb959ca518", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c028f101e263617afe6ac6392a45cd1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "538c0b31c8df84049489b5a401103859bb5eec8f", "commitAfterChange": "16b28f2f33ec894bf25a38e03f521a91d92e684d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate TypeReference decodeType(char[] typeName, int length, int start, int end)", "signatureAfterChange": " \tprivate TypeReference decodeType(char[] typeName, int length, int start, int end)", "diff": ["+\t\t\t\t\t// convert 1.5 specific constructs only if compliance is 1.5 or above", "+\t\t\t\t\tif (!this.has1_5Compliance) ", "+\t\t\t\t\t\tbreak typeLoop;", "+\t\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc446429a3328954f5a3ea236f67e50e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "34b0c733cf1add870513cda078de5b3780de1701", "commitAfterChange": "2aca7755ada443ed3cdced7d77f812416f0a5df2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["+\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=270446, When the AST built is an abridged version", "+\t\t// we don't have all tree nodes we would otherwise expect. (see ASTParser.setFocalPosition)", "+\t\tif (this.constructorCall == null)", "+\t\t\tbreak checkUnused; "]}], "num": 48217}