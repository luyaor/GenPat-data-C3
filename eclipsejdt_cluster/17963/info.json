{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bc34ae4f181788f4fe9e9e0f792bfca", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1587080d944e4fcbf584c01514025935", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void testMethodReferencesStringPatternSingleParamArguments01() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesStringPatternSingleParamArguments01() throws CoreException", "diff": ["-\t\tIJavaSearchScope scope = getJavaSearchScope15();", "-\t\tsearch(\"generic % <Exception>\", METHOD, REFERENCES, scope, resultCollector);", "+\t\tsearch(\"<Exception>generic\", METHOD, REFERENCES);", "-\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testSingle() [generic(new Exception())] ERASURE_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testSingle() [generic(new Exception())] EQUIVALENT_RAW_MATCH\\n\" + ", "-\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testException() [generic(new Exception())] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefSingle.java void g5.m.ref.RefSingle.testException() [<Exception>generic(new Exception())] EXACT_MATCH\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eb4368a632e80dca61319fd1600c5ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericMethodTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void testMethodReferencesElementPatternMultipleParamArguments02() throws CoreException", "signatureAfterChange": " \tpublic void testMethodReferencesElementPatternMultipleParamArguments02() throws CoreException", "diff": ["-\t\tIJavaSearchScope scope = getJavaSearchScope15();", "-\t\tsearch(method, REFERENCES, scope, resultCollector);", "+\t\tsearch(method, REFERENCES);", "-\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [generic(new Object(), new RuntimeException(), new RuntimeException())] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g5/m/ref/RefMultiple.java void g5.m.ref.RefMultiple.testExtends() [<Object, RuntimeException, RuntimeException>generic(new Object(), new RuntimeException(), new RuntimeException())] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testMultiple() [generic(new Object(), new Exception(), new RuntimeException())] ERASURE_MATCH\"", "+\t\t\t\"src/g5/m/ref/RefRaw.java void g5.m.ref.RefRaw.testMultiple() [generic(new Object(), new Exception(), new RuntimeException())] EQUIVALENT_RAW_MATCH\""]}], "num": 17963}