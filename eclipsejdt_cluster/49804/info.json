{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c605056b06b0c59a28bf77a8c4e764e1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c374ec42a33d8ad08806fe9a6307376a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "commitAfterChange": "1b555425db41a9eb4fba300521a43b3ff494a42f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test011_problem_categories()", "signatureAfterChange": " public void test011_problem_categories()", "diff": ["-\t\texpectedProblemAttributes.put(\"ContradictoryNullAnnotations\", new ProblemAttributes(CategorizedProblem.CAT_INTERNAL));", "-\t\texpectedProblemAttributes.put(\"ContradictoryNullAnnotationsOnBound\", new ProblemAttributes(CategorizedProblem.CAT_INTERNAL));", "-\t\texpectedProblemAttributes.put(\"ContradictoryNullAnnotationsInferred\", new ProblemAttributes(CategorizedProblem.CAT_INTERNAL));", "+\t\texpectedProblemAttributes.put(\"ContradictoryNullAnnotations\", new ProblemAttributes(CategorizedProblem.CAT_POTENTIAL_PROGRAMMING_PROBLEM));", "+\t\texpectedProblemAttributes.put(\"ContradictoryNullAnnotationsOnBound\", new ProblemAttributes(CategorizedProblem.CAT_POTENTIAL_PROGRAMMING_PROBLEM));", "+\t\texpectedProblemAttributes.put(\"ContradictoryNullAnnotationsInferred\", new ProblemAttributes(CategorizedProblem.CAT_POTENTIAL_PROGRAMMING_PROBLEM));", "+\t\texpectedProblemAttributes.put(\"ContradictoryNullAnnotationsInferredFunctionType\", new ProblemAttributes(CategorizedProblem.CAT_POTENTIAL_PROGRAMMING_PROBLEM));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f994f601e6df9597ce986ec4d78fd751", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "f5937020c6b957eed03745f57cfee671f23dd9b8", "commitAfterChange": "ad2aca1c2960107e50013b8f7866125addb168b4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test011_problem_categories()", "signatureAfterChange": " public void test011_problem_categories()", "diff": ["+\t\texpectedProblemAttributes.put(\"ContainingAnnotationHasNonDefaultMembers\", new ProblemAttributes(CategorizedProblem.CAT_TYPE));", "+\t\texpectedProblemAttributes.put(\"ContainingAnnotationHasShorterRetention\", new ProblemAttributes(CategorizedProblem.CAT_TYPE));", "+\t\texpectedProblemAttributes.put(\"ContainingAnnotationHasWrongValueType\", new ProblemAttributes(CategorizedProblem.CAT_TYPE));", "+\t\texpectedProblemAttributes.put(\"ContainingAnnotationMustHaveValue\", new ProblemAttributes(CategorizedProblem.CAT_TYPE));", "+\t\texpectedProblemAttributes.put(\"RepeatableAnnotationHasTargets\", new ProblemAttributes(CategorizedProblem.CAT_TYPE));", "+\t\texpectedProblemAttributes.put(\"RepeatableAnnotationIsDocumented\", new ProblemAttributes(CategorizedProblem.CAT_TYPE));", "+\t\texpectedProblemAttributes.put(\"RepeatableAnnotationIsInherited\", new ProblemAttributes(CategorizedProblem.CAT_TYPE));", "+\t\texpectedProblemAttributes.put(\"RepeatableAnnotationTargetMismatch\", new ProblemAttributes(CategorizedProblem.CAT_TYPE));"]}], "num": 49804}