{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fac87af39fae4d4a22602a47149f26be", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fb638a495650a024f3a4033643def33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "70337366d47ddb1b6bf810cfbab10722a3defded", "commitAfterChange": "4264b3d6b24e1d383a61389ea63fe7d21d4ef1c4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void tearDown() throws Exception", "signatureAfterChange": " public void tearDown() throws Exception", "diff": ["-\t// skip standard model tear down", "+\t// verify whether the max failures has been reached or not", "+\tif (ASSERT_EQUALS_STRINGS && FAILURES != null) {", "+\t\tASSERT_EQUALS_STRINGS = FAILURES[COMPARISON_FAILURE].size() < MAX_FAILURES;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5789589fcbffd4b7dfc512656fe1155", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterMassiveRegressionTests.java", "commitBeforeChange": "dc9db9c22a51b01cfbe75b8acac7c7a000432f1b", "commitAfterChange": "d0c43348882f3d54a8f979ccfa7fbd36fd3e1b36", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "  String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator, boolean repeat)", "signatureAfterChange": "  String runFormatter(CodeFormatter codeFormatter, String source, int kind, int indentationLevel, int offset, int length, String lineSeparator, boolean repeat)", "diff": ["+", "+\t\tif (sourceHasCompilationErrors(source)) {", "+\t\t\tthis.failureIndex = COMPILATION_ERRORS_FAILURE;", "+\t\t\tFAILURES[COMPILATION_ERRORS_FAILURE].failures.add(this.path);", "+\t\t\treturn null;", "+\t\t}", "-\t\t\t\tthis.hasSpaceFailure = true;", "-\t\t\t\tthis.hasSpaceFailure = true;"]}], "num": 4606}