{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "956cfb6ea1810e2463b1f568ce7eb042", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "099090e2122e7dc02d71754674610e50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodDeclarationPattern.java", "commitBeforeChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "commitAfterChange": "1b4ae3c306349bc12b5bd14c0b0208197346f4fe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static char[] createDeclarationIndexKey( \t\t\tchar[] typeName, \t\t\tchar[] declaringQualification, \t\t\tchar[] methodName, \t\t\tint argCount, \t\t\tchar[] signature, \t\t\tchar[][] parameterTypes, \t\t\tchar[][] parameterNames, \t\t\tchar[] returnType, \t\t\tint modifiers, \t\t\tchar[] packageName, \t\t\tint typeModifiers, \t\t\tint extraFlags)", "signatureAfterChange": " \tpublic static char[] createDeclarationIndexKey( \t\t\tchar[] typeName, \t\t\tchar[] declaringQualification, \t\t\tchar[] methodName, \t\t\tint argCount, \t\t\tchar[] signature, \t\t\tchar[][] parameterTypes, \t\t\tchar[][] parameterNames, \t\t\tchar[] returnType, \t\t\tint modifiers, \t\t\tchar[] packageName, \t\t\tint typeModifiers, \t\t\tint extraFlags)", "diff": ["-\t\t\t\t\tchar[][] parameterTypeErasures = new char[argCount][];", "-\t\t\t\t\tfor (int i = 0; i < parameterTypes.length; i++) {", "-\t\t\t\t\t\tparameterTypeErasures[i] = getTypeErasure(parameterTypes[i]);", "-\t\t\t\t\t}", "-\t\t\t\t\tparameterTypesChars = CharOperation.concatWith(parameterTypeErasures, PARAMETER_SEPARATOR);", "+\t\t\t\t\tparameterTypesChars = CharOperation.concatWith(parameterTypes, PARAMETER_SEPARATOR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf600aa0f84234dda4b031b8561877b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "6c76d390a016d2bc042688766f03adca637f8318", "commitAfterChange": "ae0b30b76dcbe89d5bd08d53d907ae7218823168", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "signatureAfterChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "diff": ["-\t\t\t\tMethodBinding binding = innerMessage.binding(getParameter(parameterTypes, i, isVarargs));", "+\t\t\t\tTypeBinding innerTargetType = getParameter(parameterTypes, i, isVarargs);", "+\t\t\t\tMethodBinding binding = innerMessage.binding(innerTargetType);", "-\t\t\t\tif (innerMessage.updateBindings(innerBinding)) { // only if we are actually improving anything", "-\t\t\t\t\tTypeBinding[] innerArgumentTypes = null;", "-\t\t\t\t\tExpression[] innerArguments = innerMessage.arguments();", "-\t\t\t\t\tif (innerArguments != null) {", "-\t\t\t\t\t\tinnerArgumentTypes = new TypeBinding[innerArguments.length];", "-\t\t\t\t\t\tfor (int j = 0; j < innerArguments.length; j++)", "-\t\t\t\t\t\t\tinnerArgumentTypes[i] = innerArguments[i].resolvedType;", "-\t\t\t\t\t}", "-\t\t\t\t\tASTNode.resolvePolyExpressionArguments(innerMessage, innerBinding, innerArgumentTypes);", "+\t\t\t\tif (innerMessage.updateBindings(innerBinding, innerTargetType)) { // only if we are actually improving anything", "+\t\t\t\t\tASTNode.resolvePolyExpressionArguments(innerMessage, innerBinding);"]}], "num": 32804}