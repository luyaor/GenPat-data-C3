{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "57a77d23de370ec215497c921c1b2906", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a3220853b890363934e9a945c97ecbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "commitAfterChange": "638b00bc8e52106dab44ca0f7aa7dd0d9f96d9dc", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName, \t\tfinal int packageMatchRule, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tint searchFor, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName, \t\tfinal int packageMatchRule, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tint searchFor, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\tprogressMonitor == null ? null : SubMonitor.convert(progressMonitor, 1000-copiesLength));", "+\t\t\t\tprogressMonitor == null ? null : new SubProgressMonitor(progressMonitor, 1000-copiesLength));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c48e2cced11dcbdd385b0cebaca4e73c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "commitAfterChange": "638b00bc8e52106dab44ca0f7aa7dd0d9f96d9dc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tpublic void searchAllConstructorDeclarations( \t\tfinal char[] packageName, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessConstructorRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \t \tpublic void searchAllConstructorDeclarations( \t\tfinal char[] packageName, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessConstructorRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\tprogressMonitor == null ? null : SubMonitor.convert(progressMonitor, 1000-copiesLength));", "+\t\t\t\tprogressMonitor == null ? null : new SubProgressMonitor(progressMonitor, 1000-copiesLength));"]}], "num": 35977}