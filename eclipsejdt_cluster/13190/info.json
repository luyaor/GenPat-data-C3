{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5bee0948151fd541a1715eb6672131e2", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01bbcb4addb6f48d4f426c2c9d545243", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b9bb6123c3e4c0567c677af33c7c0e8037ba4975", "commitAfterChange": "4dd974a226271180ff02d909a12722017f80ff3a", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void test036e()", "signatureAfterChange": " \tpublic void test036e()", "diff": ["-\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" +", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" +", "-\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" +", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" +", "-\t\t\t\"Name clash: The method equalTo(T) of type Equivalent<T> has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(T) of type EqualityComparable<T> has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" + ", "-\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" + ", "-\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d6dc3be2619806da217649bbb7307d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "5da4268a6e911ad3865241747a8e9714544fc990", "commitAfterChange": "1e8305535ff304200778a08eb6eb4025791a09c1", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void test036e()", "signatureAfterChange": " \tpublic void test036e()", "diff": ["-\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" +", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" +", "-\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" +", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" +", "-\t\t\t\"Name clash: The method equalTo(T) of type Equivalent<T> has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(T) of type EqualityComparable<T> has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" + ", "-\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" + ", "-\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6e97703c14effc696e02455617f6549", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void test040()", "signatureAfterChange": " \tpublic void test040()", "diff": ["-\t\t\t\"Type safety: The return type List for getList() from the type B needs unchecked conversion to conform to List<String> from the type A\\n\" + ", "+\t\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "-\t\t\t\"List is a raw type. References to generic type List<E> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The return type List for getList() from the type B needs unchecked conversion to conform to List<String> from the type A\\n\" + ", "-\t\t\t\"Type safety: The return type X for x() from the type Y<S> needs unchecked conversion to conform to X<T> from the type X<T>\\n\" + ", "+\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "-\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The return type X for x() from the type Y<S> needs unchecked conversion to conform to X<T> from the type X<T>\\n\" + "]}], "num": 13190}