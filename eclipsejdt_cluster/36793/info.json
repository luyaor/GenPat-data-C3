{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d031f3cc8b701faa29d3bb86d404d581", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54111b2f26322d50409645fbf73db080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b42e8d4e3737175b925c20ff2d83cccd857d4944", "commitAfterChange": "b3031b3455034eac76b444fd20cbebeea6a2f5ff", "methodNumberBeforeChange": 169, "methodNumberAfterChange": 171, "signatureBeforeChange": "  \tprotected void setTypeForField(FieldDeclaration fieldDeclaration, Type type, int extraDimension)", "signatureAfterChange": "  \tprotected void setTypeForField(FieldDeclaration fieldDeclaration, Type type, int extraDimension)", "diff": ["-\t\t\t\t\tint start = type.getStartPosition();", "-\t\t\t\t\tArrayType subarrayType = arrayType;", "-\t\t\t\t\tint index = extraDimension;", "-\t\t\t\t\twhile (index > 0) {", "-\t\t\t\t\t\tsubarrayType = (ArrayType) subarrayType.getComponentType();", "-\t\t\t\t\t\tindex--;", "-\t\t\t\t\t}", "-\t\t\t\t\tint end = retrieveProperRightBracketPosition(remainingDimensions, start);", "-\t\t\t\t\tsubarrayType.setSourceRange(start, end - start + 1);", "-\t\t\t\t\t// cut the child loose from its parent (without creating garbage)", "-\t\t\t\t\tsubarrayType.setParent(null, null);", "+\t\t\t\t\tArrayType subarrayType = extractSubArrayType(arrayType, remainingDimensions, extraDimension);", "-\t\t\t\t\tupdateInnerPositions(subarrayType, remainingDimensions);", "+\t\t\t\tcheckAndSetMalformed(type, fieldDeclaration);", "-\t\t\tif (type.isArrayType()) {", "+\t\t\tif (type.isArrayType() && (this.ast.apiLevel() < AST.JLS8)) {", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e7e09f2300c5099ce6ae8d63f2ab7c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SortElementBuilder.java", "commitBeforeChange": "ce31321c0960eb5a31c3ae1b0d5c06abcf194347", "commitAfterChange": "0b908f8ea1b5e0d333c38d3d38980856c0cb2fec", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \t\tprotected void setParameters(MethodDeclaration methodDeclaration, String[] parameterNames, String[] parameterTypes)", "signatureAfterChange": "  \t\tprotected void setParameters(MethodDeclaration methodDeclaration, String[] parameterNames, String[] parameterTypes)", "diff": ["-\t\t\t\tString type = parameterTypes[i];", "+\t\t\t\tString paramType = parameterTypes[i];", "-\t\t\t\tif (type.indexOf('.') != -1) {", "-\t\t\t\t\tString[] typeParts = splitOn('.', type);", "+\t\t\t\tif (paramType.indexOf('.') != -1) {", "+\t\t\t\t\tString[] typeParts = splitOn('.', paramType);", "-\t\t\t\t} else if ((indexOfArrayBrace = type.indexOf('[')) != -1) {", "-\t\t\t\t\tint dimensions = occurencesOf('[', type);", "-\t\t\t\t\ttype = type.substring(0, indexOfArrayBrace);", "-\t\t\t\t\tsingleVariableDeclaration.setType(ast.newArrayType(newType(type), dimensions));", "+\t\t\t\t} else if ((indexOfArrayBrace = paramType.indexOf('[')) != -1) {", "+\t\t\t\t\tint dimensions = occurencesOf('[', paramType);", "+\t\t\t\t\tparamType = paramType.substring(0, indexOfArrayBrace);", "+\t\t\t\t\tsingleVariableDeclaration.setType(ast.newArrayType(newType(paramType), dimensions));", "-\t\t\t\t\tsingleVariableDeclaration.setType(newType(type));", "+\t\t\t\t\tsingleVariableDeclaration.setType(newType(paramType));"]}], "num": 36793}