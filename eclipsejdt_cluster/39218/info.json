{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "463676bab32f5ac6e2002944e3499adb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47f5f1a0cad65a1512d5e2a37d8b7722", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "10eb4fe1c3f61da399332d4475de97a7108327b6", "commitAfterChange": "a177bb7fe17619982bbbfa40c9b97d8a1fb8bcb9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void checkExceptionHandlers( \t\tTypeBinding[] raisedExceptions, \t\tASTNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": " \t \tpublic void checkExceptionHandlers( \t\tTypeBinding[] raisedExceptions, \t\tASTNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "diff": ["-\t\t\t\t\t\t\t\tswitch (Scope.compareTypes(raisedException, caughtException)) {", "+\t\t\t\t\t\t\t    int state = caughtException == null ", "+\t\t\t\t\t\t\t    \t? EqualOrMoreSpecific /* any exception */", "+\t\t\t\t\t\t\t        : Scope.compareTypes(raisedException, caughtException);", "+\t\t\t\t\t\t\t\tswitch (state) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa90a5621530c5633f049ae8a7448160", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "10eb4fe1c3f61da399332d4475de97a7108327b6", "commitAfterChange": "a177bb7fe17619982bbbfa40c9b97d8a1fb8bcb9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void checkExceptionHandlers( \t\tTypeBinding raisedException, \t\tASTNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": "  \tpublic void checkExceptionHandlers( \t\tTypeBinding raisedException, \t\tASTNode location, \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "diff": ["-\t\t\t\t\t\tswitch (Scope.compareTypes(raisedException, caughtException)) {", "+\t\t\t\t\t    int state = caughtException == null ", "+\t\t\t\t\t    \t? EqualOrMoreSpecific /* any exception */", "+\t\t\t\t\t        : Scope.compareTypes(raisedException, caughtException);\t\t\t\t\t\t", "+\t\t\t\t\t\tswitch (state) {"]}], "num": 39218}