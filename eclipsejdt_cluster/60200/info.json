{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc08179c1c1cab4badec11cc6a5cb3bb", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02e96f27468a695dd3a6eeeb6bb72f23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "c30613b3c1eac52834666cb07a38e3f9077e1829", "commitAfterChange": "cbaf155d59bae1aee7ec473c177014431f794c16", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local,  \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": " public void recordUsingNullReference(Scope scope, LocalVariableBinding local,  \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\tif (parent != null) {", "-\t\tparent.recordUsingNullReference(scope, local, reference, checkType, ", "+\tif (this.parent != null) {", "+\t\tthis.parent.recordUsingNullReference(scope, local, reference, checkType, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0db811ff883856c78134591c49b7d248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5763e268070d12108a9f30b967b2e77e2bd3601f", "commitAfterChange": "cd0ceda2b7c471c4f37fb9996e9bfc019e8f11f8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public char[] getInnerSourceName()", "signatureAfterChange": "\r public char[] getInnerSourceName()", "diff": ["-\tif (innerInfo != null)\r", "-\t\treturn innerInfo.getSourceName();\r", "+\tif (this.innerInfo != null)\r", "+\t\treturn this.innerInfo.getSourceName();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72087fb4f482cc28d28f3c9631d12423", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/InfixExpression.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic boolean hasExtendedOperands()", "signatureAfterChange": " \tpublic boolean hasExtendedOperands()", "diff": ["-\t\t\t(extendedOperands != null) && extendedOperands.size() > 0;", "+\t\t\t(this.extendedOperands != null) && this.extendedOperands.size() > 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9439e920bd8be87d3e0668704dd9b17f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocFieldReference.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "signatureAfterChange": " \tpublic void traverse(ASTVisitor visitor, BlockScope scope)", "diff": ["-\t\t\tif (receiver != null) {", "-\t\t\t\treceiver.traverse(visitor, scope);", "+\t\t\tif (this.receiver != null) {", "+\t\t\t\tthis.receiver.traverse(visitor, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6bf336ea70d008cd061b7c4ea898daa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/JavadocArgumentExpression.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolve(BlockScope scope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope scope)", "diff": ["-\t\tif (argument != null) {", "-\t\t\targument.resolve(scope);", "+\t\tif (this.argument != null) {", "+\t\t\tthis.argument.resolve(scope);"]}], "num": 60200}