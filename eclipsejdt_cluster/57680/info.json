{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4b634c3d66d7a4cb8c3cb1e01c154d71", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c922c577c26cf367e9a709269a62ad6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void acceptResult(CompilationResult result)", "signatureAfterChange": "  public void acceptResult(CompilationResult result)", "diff": ["-\t// only need to find resource for the sourceLocation when problems need to be reported against it", "-\tString sourceLocation = new String(result.getFileName()); // the full filesystem path \"d:/xyz/eclipse/src1/Test/p1/p2/A.java\"", "-\tif (!workQueue.isCompiled(sourceLocation)) {", "+\tSourceFile compilationUnit = (SourceFile) result.getCompilationUnit(); // go directly back to the sourceFile", "+\tif (!workQueue.isCompiled(compilationUnit)) {", "-\t\t\tworkQueue.finished(sourceLocation);", "-\t\t\tupdateProblemsFor(sourceLocation, result); // record compilation problems before potentially adding duplicate errors", "+\t\t\tworkQueue.finished(compilationUnit);", "+\t\t\tupdateProblemsFor(compilationUnit, result); // record compilation problems before potentially adding duplicate errors", "-\t\t\tICompilationUnit compilationUnit = result.getCompilationUnit();", "+\t\t\tString typeLocator = compilationUnit.typeLocator();", "-\t\t\t\t\tif (newState.isDuplicateLocation(qualifiedTypeName, sourceLocation))", "+\t\t\t\t\tif (newState.isDuplicateLocator(qualifiedTypeName, typeLocator))", "-\t\t\t\t\tif (newState.isDuplicateLocation(qualifiedTypeName, sourceLocation)) {", "+\t\t\t\t\tif (newState.isDuplicateLocator(qualifiedTypeName, typeLocator)) {", "-\t\t\t\t\t\tcreateErrorFor(resourceForLocation(sourceLocation), Util.bind(\"build.duplicateClassFile\", new String(typeName))); //$NON-NLS-1$", "+\t\t\t\t\t\tcreateErrorFor(compilationUnit.resource, Util.bind(\"build.duplicateClassFile\", new String(typeName))); //$NON-NLS-1$", "-\t\t\t\t\tnewState.recordLocationForType(qualifiedTypeName, sourceLocation);", "+\t\t\t\t\tnewState.recordLocatorForType(qualifiedTypeName, typeLocator);", "-\t\t\t\tdefinedTypeNames.add(writeClassFile(classFile, !isNestedType));", "+\t\t\t\tdefinedTypeNames.add(writeClassFile(classFile, compilationUnit.sourceLocation.binaryFolder, !isNestedType));", "-\t\t\tfinishedWith(sourceLocation, result, compilationUnit.getMainTypeName(), definedTypeNames, duplicateTypeNames);", "+\t\t\tfinishedWith(typeLocator, result, compilationUnit.getMainTypeName(), definedTypeNames, duplicateTypeNames);", "-\t\t\tcreateErrorFor(resourceForLocation(sourceLocation), Util.bind(\"build.inconsistentClassFile\")); //$NON-NLS-1$", "+\t\t\tcreateErrorFor(compilationUnit.resource, Util.bind(\"build.inconsistentClassFile\")); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeee643d6e937ed6829fd85c0cfae919", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "ab7733a54402b64bb328ef9a7aa36d933deb8ac7", "commitAfterChange": "7ed8fb3f335f5407b01a590a0c668733ebc19aa6", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate void disassemble(IClassFileReader classFileReader, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \tprivate void disassemble(IClassFileReader classFileReader, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\t\tbuffer.append(Util.bind(\"classfileformat.methoddescriptor\", //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_methoddescriptor,", "-\t\t\t\tbuffer.append(Util.bind(\"disassembler.deprecated\"));//$NON-NLS-1$", "+\t\t\t\tbuffer.append(Messages.disassembler_deprecated);", "-\t\t\t\tbuffer.append(Util.bind(", "-\t\t\t\t\t\"disassembler.signatureattributeheader\", //$NON-NLS-1$", "-\t\t\t\t\tnew String(signatureAttribute.getSignature())));", "+\t\t\t\tbuffer.append(Messages.bind(Messages.disassembler_signatureattributeheader, new String(signatureAttribute.getSignature())));", "-\t\t\t\tbuffer.append(Util.bind(\"classfileformat.stacksAndLocals\",//$NON-NLS-1$", "+\t\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_stacksAndLocals,", "-\t\t\t\t\t})); //$NON-NLS-1$", "+\t\t\t\t\t}));", "-\t\t\tbuffer.append(Util.bind(\"disassembler.space\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(Messages.disassembler_space); ", "-\t\tchar[] methodName = null;", "+\t\tchar[] methodName;", "-\t\t\tmethodName = Util.bind(\"classfileformat.clinitname\").toCharArray(); //$NON-NLS-1$", "-\t\t\tbuffer.append(methodName);", "+\t\t\tbuffer.append(Messages.bind(Messages.classfileformat_clinitname));", "-\t\t\t\t\t.append(Util.bind(\"disassembler.comma\"))//$NON-NLS-1$", "-\t\t\t\t\t.append(Util.bind(\"disassembler.space\")); //$NON-NLS-1$", "+\t\t\t\t\t.append(Messages.disassembler_comma)", "+\t\t\t\t\t.append(Messages.disassembler_space); ", "-\t\tbuffer.append(Util.bind(\"disassembler.endofmethodheader\")); //$NON-NLS-1$", "+\t\tbuffer.append(Messages.disassembler_endofmethodheader); "]}], "num": 57680}