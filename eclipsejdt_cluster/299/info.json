{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86b665a79b249531a0a7172850cf3c52", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42fa04dd8ce8a481a92d54de8b154911", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/valueconversion/ValueConversionProcessor.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate void assertValueTypeMatch(final String name, final Object value, final Class expectedType)", "signatureAfterChange": " \t \tprivate void assertValueTypeMatch( \t\t\tfinal String name,  \t\t\tfinal Object actualValue,  \t\t\tfinal Class expectedType, \t\t\tfinal Object expectedValue)", "diff": ["-\t", "-\tprivate void assertValueTypeMatch(final String name, final Object value, final Class expectedType)", "-\t{", "-\t\tTestCase.assertEquals(", "-\t\t\t\t\"value type mismatch for member \" + name,  //$NON-NLS-1$", "-\t\t\t\texpectedType, ", "-\t\t\t\tvalue.getClass());", "-\t}", "+\t", "+\tprivate void assertValueTypeMatch(", "+\t\t\tfinal String name, ", "+\t\t\tfinal Object actualValue, ", "+\t\t\tfinal Class expectedType,", "+\t\t\tfinal Object expectedValue)", "+\t{", "+\t\tif( actualValue != null && expectedType != actualValue.getClass() ){", "+\t\t\tfinal Messager msgr = _env.getMessager(); ", "+\t\t\tmsgr.printError(\"type mismatch for memeber \" + name + ", "+\t\t\t\t\t\" expected \" + expectedType.getName() + \" but got \" + actualValue.getClass().getName());", "+\t\t}", "+\t\telse if( !expectedValue.equals(actualValue) ){", "+\t\t\tfinal Messager msgr = _env.getMessager(); ", "+\t\t\tmsgr.printError(\"value mismatch for memeber \" + name + ", "+\t\t\t\t\t\" expected \" + expectedValue + \" but got \" + actualValue);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7feab131c539bb0ae0b1d5a2d58dd0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/BaseProcessor.java", "commitBeforeChange": "01d995488d5e309c6b243da146c63894a6df881d", "commitAfterChange": "13bbdd97c6c86aba0f70693f850c3de86bece79b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprotected void assertEqual(final String expected, final String actual, final String message)", "signatureAfterChange": " \t \tprotected void assertEqual(final Object expected, final Object actual, final String message)", "diff": ["+\tprotected void assertEqual(final Object expected, final Object actual, final String message) {", "+\t\tif( expected == null ){", "+\t\t\tfinal Messager msgr = _env.getMessager();", "+\t\t\tmsgr.printError(message + \" actual: \" + actual );", "+\t\t}", "+\t\telse if( actual == null ){", "+\t\t\tfinal Messager msgr = _env.getMessager();", "+\t\t\tmsgr.printError(message + \"expected \" + expected );", "+\t\t}", "+\t\telse if( !expected.equals(actual) ){", "+\t\t\tfinal Messager msgr = _env.getMessager();", "+\t\t\tmsgr.printError(message + \" expected: \" + expected + \" actual: \" + actual );", "+\t\t}", "+\t}"]}], "num": 299}