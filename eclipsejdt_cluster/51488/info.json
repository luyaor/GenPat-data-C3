{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a09461e5279390a5e139fcaafd92efae", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec88d75ffee2dfc81265e20896cb9e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "6100c16f42a61b4785fb3431eabdff7008e0822d", "commitAfterChange": "ae1f54f274fcbc3fe4d90b39f8d538bfd84fcc06", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel)", "signatureAfterChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel)", "diff": ["-\t\tboolean keepBridgeMethods = sourceLevel < ClassFileConstants.JDK1_5", "-\t\t\t&& this.environment.globalOptions.complianceLevel >= ClassFileConstants.JDK1_5;", "-\t\t\t\tif (keepBridgeMethods && (method.getModifiers() & ClassFileConstants.AccBridge) != 0)", "-\t\t\t\t\tcontinue; // want to see bridge methods as real methods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4389d5ccc84349a9ade5dad70cac401f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "commitAfterChange": "c691caa0dc4c5d86bd6e9b8bfd831e689219e521", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  protected void checkAndSetModifiers(int flag)", "signatureAfterChange": "  protected void checkAndSetModifiers(int flag)", "diff": ["-\tif ((this.modifiers & flag) != 0 // duplicate modifier", "-\t\t\t|| ((this.modifiers & ExtraCompilerModifiers.AccNotNull) != 0  // conflicting flags", "-\t\t\t\t&& (flag & ExtraCompilerModifiers.AccNullable) != 0)", "-\t\t\t|| ((flag & ExtraCompilerModifiers.AccNotNull) != 0  // conflicting flags", "-\t\t\t\t&& (this.modifiers & ExtraCompilerModifiers.AccNullable) != 0)) { ", "+\tif ((this.modifiers & flag) != 0){ // duplicate modifier", "-\t\t// TODO (maxime) check error message"]}], "num": 51488}