{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7da56eb62fe2b17c9235e3b7eb45c16c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41748b7a1e66ee9f65eaa463c057d0cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "c2534be63510215f41ecb7f37ff96548973f1992", "commitAfterChange": "77d85541d24733f3664c470fa5493217e4a31a94", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r \r public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding)", "signatureAfterChange": "\r \r public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding)", "diff": ["-\t\t\tif (file.exists()) {\r", "-\t\t\t\tif (file.isDirectory()) {\r", "+\t\t\tif (file.isDirectory()) {\r", "+\t\t\t\tif (file.exists()) {\r", "-\t\t\t\t} else if (classpathNames[i].endsWith(\".jar\") | (classpathNames[i].endsWith(\".zip\"))) { //$NON-NLS-2$ //$NON-NLS-1$\r", "-\t\t\t\t\tclasspaths[i] = new ClasspathJar(file);\r", "-\t\t\t\t\tpathNames[i] = classpathNames[i].substring(0, classpathNames[i].lastIndexOf('.'));\r", "+\t\t\t} else if (classpathNames[i].endsWith(\".jar\") | (classpathNames[i].endsWith(\".zip\"))) { //$NON-NLS-2$ //$NON-NLS-1$\r", "+\t\t\t\tclasspaths[i] = this.getClasspathJar(file); // will throw an IOException if file does not exist\r", "+\t\t\t\tpathNames[i] = classpathNames[i].substring(0, classpathNames[i].lastIndexOf('.'));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf6d56db9f1837c2ac950fdd283f6513", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "commitAfterChange": "70b45441c73f84d2181bbb9523db5d92a2f34954", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding, int[] classpathDirectoryModes)", "signatureAfterChange": " public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding, int[] classpathDirectoryModes)", "diff": ["-\t\t\t} else if (classpathNames[i].endsWith(SUFFIX_STRING_jar) | (classpathNames[i].endsWith(SUFFIX_STRING_zip))) {", "-\t\t\t\tthis.classpaths[i] = this.getClasspathJar(file); // will throw an IOException if file does not exist", "-\t\t\t\tpathNames[i] = classpathNames[i].substring(0, classpathNames[i].lastIndexOf('.'));", "+\t\t\t} else {", "+\t\t\t\tString lowercaseClasspathName = classpathNames[i].toLowerCase();", "+\t\t\t\tif (lowercaseClasspathName.endsWith(SUFFIX_STRING_jar)", "+\t\t\t\t\t  || lowercaseClasspathName.endsWith(SUFFIX_STRING_zip)) {", "+\t\t\t\t\tthis.classpaths[i] = this.getClasspathJar(file); // will throw an IOException if file does not exist", "+\t\t\t\t\tpathNames[i] = classpathNames[i].substring(0, classpathNames[i].lastIndexOf('.'));", "+\t\t\t\t}"]}], "num": 5062}