{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "96bbcbff89cab2994addbe1f1b5c269f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1660ccf48a5cae70177e3ad67762512", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "4e8e5a98cf0190fbfa5945ebb361f51b261ba210", "commitAfterChange": "d245300e4e786a6fa7e5da9bef5c249b7208c09a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void test009()", "signatureAfterChange": "  \tpublic void test009()", "diff": ["+\t\t\t\t\"\t\tSystem.out.print('<');\\n\" +", "-\t\t\t\t\"\t\tZ.count(1, null); // only choice is Z.count(int,int...)\\n\" +", "-//\t\t\t\t\"\t\tZ.count(1, 1); // chooses Z.count(long, int) over Z.count(int,int...)\\n\" +", "-\t\t\t\t\"\t\tZ.count2(1, null); // better choice is Z.count(int,int[])\\n\" +", "-\t\t\t\t\"\t\tZ.count2(1L, null); // better choice is Z.count(long,int...)\\n\" +", "+\t\t\t\t\"\t\tY.count(1);\\n\" +", "+\t\t\t\t\"\t\tY.count(1, 2);\\n\" +", "+\t\t\t\t\"\\n\" +", "+\t\t\t\t\"\t\tZ.count(1L, 1);\\n\" + // only choice is Z.count(long, int)", "+//\t\t\t\t\"\t\tZ.count(1, 1);\\n\" + // chooses Z.count(long, long) over Z.count(int,int...)", "+\t\t\t\t\"\t\tZ.count(1, null);\\n\" + // only choice is Z.count(int,int...)", "+\t\t\t\t\"\t\tZ.count2(1, null);\\n\" + // better choice is Z.count(int,int[])", "+\t\t\t\t\"\t\tZ.count2(1L, null);\\n\" + // better choice is Z.count(long,int...)", "+\t\t\t\t\"\t\tSystem.out.print('>');\\n\" +", "-\t\t\t\t\"\tpublic static void count(long l, int values) { System.out.print('3'); }\\n\" +", "+\t\t\t\t\"\tpublic static void count(long l, long values) { System.out.print('3'); }\\n\" +", "-\t\t\t\"2466\");", "+\t\t\t\"<2123466>\");", "-\t\t\t\t\"\t\tY.test((Object[]) null);\\n\" + // to avoid null warning", "+\t\t\t\t\"\t\tSystem.out.print('<');\\n\" +", "+\t\t\t\t\"\t\tY.test((Object[]) null);\\n\" + // cast to avoid null warning", "+\t\t\t\t\"\t\tSystem.out.print('>');\\n\" +", "-\t\t\t\t\"\tpublic static void test (Object o, Object o2) { System.out.print('1'); }\\n\" +", "+\t\t\t\t\"\tpublic static void test(Object o, Object o2) { System.out.print('1'); }\\n\" +", "-\t\t\t\"212\");", "+\t\t\t\"<212>\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba2825ca7939cac99e7b85cb5986954f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargTest.java", "commitBeforeChange": "3c1df96cd104b0fc430e4dc2bba86da9035261e4", "commitAfterChange": "079f1f525d3cbb0b2570dd4fe3bd959b7a33dc49", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic void test009()", "signatureAfterChange": "  \tpublic void test009()", "diff": ["+\t\t\t\t\"\t\tZ.count(1, null); // only choice is Z.count(int,int...)\\n\" +", "+//\t\t\t\t\"\t\tZ.count(1, 1); // chooses Z.count(long, int) over Z.count(int,int...)\\n\" +", "+\t\t\t\t\"\t\tZ.count2(1, null); // better choice is Z.count(int,int[])\\n\" +", "+\t\t\t\t\"\t\tZ.count2(1L, null); // better choice is Z.count(long,int...)\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Z {\\n\" +", "+\t\t\t\t\"\tpublic static void count(long l, int values) { System.out.print('3'); }\\n\" +", "+\t\t\t\t\"\tpublic static void count(int i, int ... values) { System.out.print('4'); }\\n\" +", "+\t\t\t\t\"\tpublic static void count2(int i, int values) { System.out.print('5'); }\\n\" +", "+\t\t\t\t\"\tpublic static void count2(long l, int ... values) { System.out.print('6'); }\\n\" +", "-\t\t\t\"2\");", "+\t\t\t\"2466\");"]}], "num": 67809}