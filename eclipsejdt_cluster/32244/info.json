{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0b81969af72fb02a48c7442b1e2fa12", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298199c6544b3ed6e8420da4def5dd55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " public String toStringExpression()", "signatureAfterChange": "  \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printExpression(int indent, StringBuffer output) {", "+\t", "+\t\toutput.append('{');", "+\t\tif (expressions != null) { \t", "+\t\t\tint j = 20 ; ", "+\t\t\tfor (int i = 0 ; i < expressions.length ; i++) {\t", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\texpressions[i].printExpression(0, output);", "+\t\t\t\tj -- ;", "+\t\t\t\tif (j == 0) {", "+\t\t\t\t\toutput.append('\\n');", "+\t\t\t\t\tprintIndent(indent+1, output);", "+\t\t\t\t\tj = 20;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn output.append('}');", "+\t}", "-}", "-public String toStringExpression() {", "-", "-\tString s = \"{\" ; //$NON-NLS-1$", "-\tif (expressions != null)", "-\t{ \tint j = 20 ; ", "-\t\tfor (int i = 0 ; i < expressions.length ; i++)", "-\t\t{\ts = s + expressions[i].toStringExpression() + \",\" ; //$NON-NLS-1$", "-\t\t\tj -- ;", "-\t\t\tif (j == 0)", "-\t\t\t{\ts = s + \"\\n                \"; j = 20;}}}; //$NON-NLS-1$", "-\ts = s + \"}\"; //$NON-NLS-1$", "-\treturn s;}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5749505710f54d26086ff9c7660a6c12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public String toStringExpression()", "signatureAfterChange": "  public StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["+public StringBuffer printExpression(int indent, StringBuffer output){", "+\t", "+\tif (!receiver.isImplicitThis()) receiver.printExpression(0, output).append('.');", "+\toutput.append(selector).append('(') ; //$NON-NLS-1$", "+\tif (arguments != null) {", "+\t\tfor (int i = 0; i < arguments.length ; i ++) {\t", "+\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\targuments[i].printExpression(0, output);", "+\t\t}", "+\t}", "+\treturn output.append(')');", "+}", "-", "-public String toStringExpression(){", "-\t", "-\tString s = \"\"; //$NON-NLS-1$", "-\tif (!receiver.isImplicitThis())", "-\t\ts = s + receiver.toStringExpression()+\".\"; //$NON-NLS-1$", "-\ts = s + new String(selector) + \"(\" ; //$NON-NLS-1$", "-\tif (arguments != null)", "-\t\tfor (int i = 0; i < arguments.length ; i ++)", "-\t\t{\ts = s + arguments[i].toStringExpression();", "-\t\t\tif ( i != arguments.length -1 ) s = s + \" , \" ;};; //$NON-NLS-1$", "-\ts =s + \")\" ; //$NON-NLS-1$", "-\treturn s;"]}], "num": 32244}