{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e8b9a852206053016b6d586c52183586", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e2425eeff6d4104bfb58b2d9b7d585", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, boolean needSignature, String typeSignature, int limitTo, int matchRule)", "signatureAfterChange": "  \tprivate static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, String typeSignature, IType type, int limitTo, int matchRule)", "diff": ["-\tprivate static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, boolean needSignature, String typeSignature, int limitTo, int matchRule) {", "+", "+\tprivate static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, String typeSignature, IType type, int limitTo, int matchRule) {", "-\t\t\t\tif (needSignature && typeSignature == null) return null;", "+\t\t\t\tif (type != null) {", "+\t\t\t\t\treturn new TypeReferencePattern(", "+\t\t\t\t\t\tCharOperation.concatWith(packageName, enclosingTypeNames, '.'), ", "+\t\t\t\t\t\tsimpleName,", "+\t\t\t\t\t\ttype,", "+\t\t\t\t\t\tmatchRule);", "+\t\t\t\t}", "-\t\t\t\t\tnew TypeReferencePattern(", "-\t\t\t\t\t\tCharOperation.concatWith(packageName, enclosingTypeNames, '.'), ", "-\t\t\t\t\t\tsimpleName,", "-\t\t\t\t\t\ttypeSignature,", "-\t\t\t\t\t\tmatchRule));", "+\t\t\t\t\t(type != null)", "+\t\t\t\t\t\t? new TypeReferencePattern(", "+\t\t\t\t\t\t\tCharOperation.concatWith(packageName, enclosingTypeNames, '.'), ", "+\t\t\t\t\t\t\tsimpleName,", "+\t\t\t\t\t\t\ttype,", "+\t\t\t\t\t\t\tmatchRule)", "+\t\t\t\t\t\t: new TypeReferencePattern(", "+\t\t\t\t\t\t\tCharOperation.concatWith(packageName, enclosingTypeNames, '.'), ", "+\t\t\t\t\t\t\tsimpleName,", "+\t\t\t\t\t\t\ttypeSignature,", "+\t\t\t\t\t\t\tmatchRule)", "+\t\t\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d307886ff93a107ee258b17ecd31a02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " private static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, int limitTo)", "signatureAfterChange": " private static SearchPattern createTypePattern(char[] simpleName, char[] packageName, char[][] enclosingTypeNames, int limitTo)", "diff": ["-\tSearchPattern searchPattern = null;", "-\t\t\tsearchPattern = ", "-\t\t\t\tnew TypeDeclarationPattern(", "-\t\t\t\t\tpackageName, ", "-\t\t\t\t\tenclosingTypeNames, ", "-\t\t\t\t\tsimpleName, ", "-\t\t\t\t\tTYPE_SUFFIX, ", "-\t\t\t\t\tEXACT_MATCH, ", "-\t\t\t\t\tCASE_SENSITIVE);", "-\t\t\tbreak;", "+\t\t\treturn new TypeDeclarationPattern(", "+\t\t\t\tpackageName, ", "+\t\t\t\tenclosingTypeNames, ", "+\t\t\t\tsimpleName, ", "+\t\t\t\tTYPE_SUFFIX, ", "+\t\t\t\tEXACT_MATCH, ", "+\t\t\t\tCASE_SENSITIVE);", "-\t\t\tsearchPattern = ", "-\t\t\t\tnew TypeReferencePattern(", "-\t\t\t\t\tCharOperation.concatWith(packageName, enclosingTypeNames, '.'), ", "-\t\t\t\t\tsimpleName, ", "-\t\t\t\t\tEXACT_MATCH, ", "-\t\t\t\t\tCASE_SENSITIVE);", "-\t\t\tbreak;", "+\t\t\treturn new TypeReferencePattern(", "+\t\t\t\tCharOperation.concatWith(packageName, enclosingTypeNames, '.'), ", "+\t\t\t\tsimpleName, ", "+\t\t\t\tEXACT_MATCH, ", "+\t\t\t\tCASE_SENSITIVE);", "-\t\t\tsearchPattern = ", "-\t\t\t\tnew SuperInterfaceReferencePattern(", "-\t\t\t\t\tCharOperation.concatWith(packageName, enclosingTypeNames, '.'), ", "-\t\t\t\t\tsimpleName, ", "-\t\t\t\t\tEXACT_MATCH, ", "-\t\t\t\t\tCASE_SENSITIVE);", "-\t\t\tbreak;", "+\t\t\treturn new SuperInterfaceReferencePattern(", "+\t\t\t\tCharOperation.concatWith(packageName, enclosingTypeNames, '.'), ", "+\t\t\t\tsimpleName, ", "+\t\t\t\tEXACT_MATCH, ", "+\t\t\t\tCASE_SENSITIVE);", "-\t\t\tsearchPattern = new OrPattern(", "+\t\t\treturn new OrPattern(", "-\t\t\tbreak;", "-\treturn searchPattern;", "+\treturn null;"]}], "num": 32780}