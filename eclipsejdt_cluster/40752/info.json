{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74bae54cabd88a97f6bc6c546dec7e18", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0235018bef89cf371f64e2f72965290a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5046f0da42323773845d7a3edf39df0b8c6a1944", "commitAfterChange": "80f69cca108e407e297e62382ba04bd29eb1703d", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 131, "signatureBeforeChange": "  \tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, LinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager)", "signatureAfterChange": "  \tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, \t\t\tLinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager, \t\t\tMap oldChainedEntriesMap, boolean addAsChainedEntry)", "diff": ["-\tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result, LinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager) {", "+\tprivate void addToResult(IClasspathEntry rawEntry, IClasspathEntry resolvedEntry, ResolvedClasspath result,", "+\t\t\tLinkedHashSet resolvedEntries, ExternalFoldersManager externalFoldersManager,", "+\t\t\tMap oldChainedEntriesMap, boolean addAsChainedEntry) {", "+", "+\t\t// If it's already been resolved, do not add to resolvedEntries", "+\t\t\tif (addAsChainedEntry) {", "+\t\t\t\tIClasspathEntry chainedEntry = null;", "+\t\t\t\tif (rawEntry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "+", "+\t\t\t\t\tchainedEntry = (ClasspathEntry) oldChainedEntriesMap.get(resolvedPath);", "+\t\t\t\t\tif (chainedEntry != null) {", "+\t\t\t\t\t\t// This is required to keep the attributes if any added by the user in", "+\t\t\t\t\t\t// the previous session such as source attachment path etc.", "+\t\t\t\t\t\tcopyFromOldChainedEntry((ClasspathEntry) resolvedEntry, (ClasspathEntry) chainedEntry);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1df681f73767edbd6b2f7ff87ba513", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "6001d3b093576094091cc8d401be17207c6cc911", "commitAfterChange": "3ce9a84109f75e9356d2eb9e4e5ad65f0e87fa41", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration process( \t\tCompilationUnitDeclaration unit, \t\tICompilationUnit unitElement,  \t\tchar[] contents, \t\tParser parser, \t\tWorkingCopyOwner workingCopyOwner, \t\tHashMap problems, \t\tboolean creatingAST, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration process( \t\tCompilationUnitDeclaration unit, \t\tICompilationUnit unitElement,  \t\tchar[] contents, \t\tParser parser, \t\tWorkingCopyOwner workingCopyOwner, \t\tHashMap problems, \t\tboolean creatingAST, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\t\tUtil.log(e, \"Exception occurred during problem detection: \"); //$NON-NLS-1$ ", "+\t\t\tString lineDelimiter = unitElement.findRecommendedLineSeparator();", "+\t\t\tStringBuffer message = new StringBuffer(\"Exception occurred during problem detection:\");  //$NON-NLS-1$ ", "+\t\t\tmessage.append(lineDelimiter);", "+\t\t\tmessage.append(\"----------------------------------- SOURCE BEGIN -------------------------------------\"); //$NON-NLS-1$", "+\t\t\tmessage.append(lineDelimiter);", "+\t\t\tmessage.append(contents);", "+\t\t\tmessage.append(lineDelimiter);", "+\t\t\tmessage.append(\"----------------------------------- SOURCE END -------------------------------------\"); //$NON-NLS-1$", "+\t\t\tUtil.log(e, message.toString());"]}], "num": 40752}