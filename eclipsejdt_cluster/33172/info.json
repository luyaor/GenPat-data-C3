{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "527d95a5618c66040c84d7f450033cdd", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94c88a117ce73d69d8457c9437e31f51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "commitAfterChange": "f24c43070146ea63fd82e385697f695064b998f3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test003() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test003() throws JavaModelException, CoreException, UnsupportedEncodingException", "diff": ["-\tpublic void test003() throws JavaModelException, CoreException {", "+\tpublic void test003() throws JavaModelException, CoreException, UnsupportedEncodingException {", "-\t\t// Get compilation unit and compare source (should be different as no encoding was specified on file)", "+\t\t// Get source and compare with file contents", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, \"UTF-8\"));", "-\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "+\t\tString systemSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File));", "+\t\tencodedContents = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(encodedContents);", "+\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", encodedContents, systemSource);", "+\t\t\t", "+\t\t// Now compare bytes array", "+\t\tbyte[] sourceBytes = source.getBytes(wkspEncoding);", "+\t\tbyte[] encodedBytes = Util.getResourceContentsAsByteArray(this.utf8File);", "+\t\tassertEquals(\"Wrong size of encoded string\", encodedBytes.length, sourceBytes.length);", "+\t\t// Do not compare arrays contents as system encoding may have lost meaningful bit 7 during convertion...)", "+//\t\tif (!\"ASCII\".equals(vmEncoding)) {", "+//\t\t\tfor (int i = 0, max = sourceBytes.length; i < max; i++) {", "+//\t\t\t\tassertTrue(\"Wrong size of encoded character at \" + i, sourceBytes[i] == encodedBytes[i]);", "+//\t\t\t}", "+//\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0136e848221fcd75e2fd89dda95d4b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "commitAfterChange": "f24c43070146ea63fd82e385697f695064b998f3", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test012() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test012() throws JavaModelException, CoreException, UnsupportedEncodingException", "diff": ["+\t/* Same config than test002  */", "+\tpublic void test012() throws JavaModelException, CoreException, UnsupportedEncodingException {", "+\t\t// Get source and compare with file contents", "+\t\tString systemSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File));", "+\t\tencodedContents = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(encodedContents);", "+\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", encodedContents, systemSource);", "+\t}\t", "-\t */", "-\tpublic void test012() throws JavaModelException, CoreException {", "-\t\tString encoding = \"UTF-8\";", "-\t\tIFile classFile = (IFile) this.encodingProject.findMember(\"bins/testUTF8/Test.class\"); //$NON-NLS-1$", "-\t\tassertNotNull(\"Cannot find class file!\", classFile);", "-\t\tclassFile.setCharset(encoding);", "-\t\t// Get class file and compare source (should not be the same as modify charset on file is unefficient for class files...)", "-\t\tassertNotNull(this.utf8Source);", "-\t\tString source = this.utf8Source.getSource();", "-\t\tassertNotNull(source);", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "-\t\t", "-\t\t// Reset class file encoding", "-\t\tclassFile.setCharset(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d879620c36180db153c1789de626939a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "commitAfterChange": "f24c43070146ea63fd82e385697f695064b998f3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void test013() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test013() throws JavaModelException, CoreException, UnsupportedEncodingException", "diff": ["+\t/* Same config than test003  */", "+\tpublic void test013() throws JavaModelException, CoreException, UnsupportedEncodingException {", "+\t\t// Get source and compare with file contents", "+\t\tString systemSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File));", "+\t\tencodedContents = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(encodedContents);", "+\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", encodedContents, systemSource);", "+\t\t\t", "+\t\tbyte[] sourceBytes = source.getBytes(wkspEncoding);", "+\t\t// Do not compare arrays contents as system encoding may have lost meaningful bit 7 during convertion...)", "+//\t\tif (!\"ASCII\".equals(vmEncoding)) {", "+//\t\t\tfor (int i = 0, max = sourceBytes.length; i < max; i++) {", "+//\t\t\t\tassertTrue(\"Wrong size of encoded character at \" + i, sourceBytes[i] == encodedBytes[i]);", "+//\t\t\t}", "+//\t\t}", "-\tpublic void test013() throws JavaModelException, CoreException {", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, systemEncoding));", "-\t\tassertFalse(\"System encoding: \"+systemEncoding+\" should be different than UTF-8!\", \"UTF-8\".equals(systemEncoding));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dee526cc4cbe424fdc23686da6096279", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "commitAfterChange": "f24c43070146ea63fd82e385697f695064b998f3", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test011() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test011() throws JavaModelException, CoreException, UnsupportedEncodingException", "diff": ["+\t/* Same config than test001  */", "+\tpublic void test011() throws JavaModelException, CoreException, UnsupportedEncodingException {", "+\t\t// Get source and compare with file contents", "+\t\tString systemSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File));", "+\t\tencodedContents = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(encodedContents);", "+\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", encodedContents, systemSource);", "+\t}\t", "-\t */", "-\tpublic void test011() throws JavaModelException, CoreException {", "-", "-\t\t// Set project encoding", "-\t\tthis.encodingProject.setDefaultCharset(\"UTF-8\");", "-\t\t", "-\t\t// Get class file and compare source", "-\t\tthis.utf8Source = getClassFile(\"Encoding\" , \"bins\", \"testUTF8\", \"Test.class\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-4$", "-\t\tassertNotNull(this.utf8Source);", "-\t\tString source = this.utf8Source.getSource();", "-\t\tassertNotNull(source);", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, \"ASCII\"));", "-\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));", "-\t}"]}], "num": 33172}