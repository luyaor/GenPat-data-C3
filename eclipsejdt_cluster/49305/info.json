{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3c20e602360adad9ae20e17d38232bf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "129c61c714f79de1d56a7387e1ec3f8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "7fa614421be752542e93fc8394ff005421401e06", "commitAfterChange": "8c40adfe15c680e040fa4c1f51e65e6986081149", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void buildForProject(JavaProject project, ArrayList potentialSubtypes, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, HashSet localTypes, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " private void buildForProject(JavaProject project, ArrayList potentialSubtypes, org.eclipse.jdt.core.ICompilationUnit[] workingCopies, HashSet localTypes, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t\tthis.hierarchyResolver.resolveLocalType(focusType, declaringMember);", "+\t\t\t\t\tOpenable openable;", "+\t\t\t\t\tif (declaringMember.isBinary()) {", "+\t\t\t\t\t\topenable = (Openable)declaringMember.getClassFile();", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\topenable = (Openable)declaringMember.getCompilationUnit();", "+\t\t\t\t\t}", "+\t\t\t\t\tlocalTypes = new HashSet();", "+\t\t\t\t\tlocalTypes.add(openable.getPath().toString());", "+\t\t\t\t\tthis.hierarchyResolver.resolve(new Openable[] {openable}, localTypes, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6f080414b628a9b9fea2627370610c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "dd0d8de41ff9634977089468dd69785577ba4097", "commitAfterChange": "802c7ac625f347675c393d0da79bae0fe10a00fd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void resolve(IGenericType suppliedType)", "signatureAfterChange": " public void resolve(IGenericType suppliedType)", "diff": ["-\t\t\tHashSet localTypes = new HashSet();", "-\t\t\tlocalTypes.add(cu.getPath().toString());", "-\t\t\tthis.superTypesOnly = true;", "-\t\t\tresolve(new Openable[] {(Openable)cu}, localTypes, null);", "+\t\t\tif (cu != null) {", "+\t\t\t\tHashSet localTypes = new HashSet();", "+\t\t\t\tlocalTypes.add(cu.getPath().toString());", "+\t\t\t\tthis.superTypesOnly = true;", "+\t\t\t\tresolve(new Openable[] {(Openable)cu}, localTypes, null);", "+\t\t\t}"]}], "num": 49305}