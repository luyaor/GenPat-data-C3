{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77980b89ac98d8a624a3a9feb6aa47cc", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88f57eeb44bd35871fec03b52bc5052f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ImportRewrite.java", "commitBeforeChange": "9968b422e7cd1433b2cea24ec6c706b9b3cbabb8", "commitAfterChange": "1c7322526175fbdd367e05404e51251d626478ac", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic final TextEdit rewriteImports(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\t", "-\t\t\tIJavaProject project= this.compilationUnit.getJavaProject();", "-\t\t\tString[] order= getImportOrderPreference(project);", "-\t\t\tint threshold= getImportNumberThreshold(project);", "-\t\t\t", "-\t\t\tImportRewriteAnalyzer computer= new ImportRewriteAnalyzer(this.compilationUnit, usedAstRoot, order, threshold, this.restoreExistingImports);", "+\t\t\t\t\t\t", "+\t\t\tImportRewriteAnalyzer computer= new ImportRewriteAnalyzer(this.compilationUnit, usedAstRoot, this.restoreExistingImports);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6b36e1a597ea68a6e52064c5e15b0c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "540532d90ea319b134aad3a0154f549c66728687", "commitAfterChange": "6a0eebe34bd6b3f3c957d0d1c92bc68d99fa8f40", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \t \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\ttry {", "-\t\t\tIJavaProject project= this.compilationUnit.getJavaProject();", "-\t\t\tint importOnDemandThreshold= getImportNumberThreshold(project, JavaCore.IMPORTREWRITE_ONDEMAND_THRESHOLD);", "-\t\t\tint staticImportOnDemandThreshold= getImportNumberThreshold(project, JavaCore.IMPORTREWRITE_STATIC_ONDEMAND_THRESHOLD);", "-\t\t\t", "+\t\ttry {\t\t\t", "-\t\t\t\tonDemandConflicts= evaluateStarImportConflicts(importOnDemandThreshold, monitor);", "+\t\t\t\tonDemandConflicts= evaluateStarImportConflicts(monitor);"]}], "num": 34240}