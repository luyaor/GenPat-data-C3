{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9dfd5b52f4fee898c573bb4526f8ca49", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "169dbe293ab8b22a44e67f6799126a26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "7485e27748e7996e4e2377a06924d772c56afc6d", "commitAfterChange": "6307a7ec23f5b48d6c53e6f00a5d43bfc2fde313", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tpublic Assignment convert(org.eclipse.jdt.internal.compiler.ast.Assignment expression)", "signatureAfterChange": "  \tpublic Assignment convert(org.eclipse.jdt.internal.compiler.ast.Assignment expression)", "diff": ["-\t\tassignment.setRightHandSide(convert(expression.expression));", "+\t\tExpression rightHandSide = convert(expression.expression);", "+\t\tassignment.setRightHandSide(rightHandSide);", "-\t\tassignment.setSourceRange(start, expression.sourceEnd - start + 1);", "+\t\tint end = rightHandSide.getStartPosition() + rightHandSide.getLength() - 1;", "+\t\tassignment.setSourceRange(start, end - start + 1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b10c607fcb93511166d797f8d7065d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "afddf60d6036a48edd8547da6cb01c6902009ef0", "commitAfterChange": "5d2c05512a572f58c6ae06d4c01527cf92681b49", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \t \tpublic InstanceofExpression convert(org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression expression)", "signatureAfterChange": " \t \tpublic InstanceofExpression convert(org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression expression)", "diff": ["-\t\tinstanceOfExpression.setRightOperand(convertType(expression.type));", "+\t\tfinal Type convertType = convertType(expression.type);", "+\t\tinstanceOfExpression.setRightOperand(convertType);", "-\t\tinstanceOfExpression.setSourceRange(startPosition, expression.sourceEnd - startPosition + 1);", "+\t\tint sourceEnd = convertType.getStartPosition() + convertType.getLength() - 1;", "+\t\tinstanceOfExpression.setSourceRange(startPosition, sourceEnd - startPosition + 1);"]}], "num": 61435}