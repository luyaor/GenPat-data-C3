{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88ffe788aec2219d5ba4ece116720fb8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f65a687bbb798b26d884ddb95ba5238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "7c01f96290b6bea75df3300377bffb0c63e729bf", "commitAfterChange": "8abd8bd7336da4001bd9bf5e347657920b2c4334", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, ISourceType[] topLevelTypes, boolean searchInEnvironment)", "diff": ["-\t\t\t\tTypeDeclaration typeDecl = findDeclarationOfType(typeHandle, parsedUnit);", "+\t\t\t\tTypeDeclaration typeDecl = new AstNodeFinder(parsedUnit).findType(typeHandle);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70378008877caf884821311e8e9c7309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/EvaluationTest.java", "commitBeforeChange": "faf6597aa00a794b3bf608aa263d02964fb5a0f9", "commitAfterChange": "26e210811de2fca857d5561ae26405b72dccc0f5", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " public Map getOptions()", "signatureAfterChange": " \t \tpublic Map getCompilerOptions()", "diff": ["-}", "-public Map getOptions() {", "-\t", "-\t\tMap defaultOptions = new CompilerOptions().getMap();", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_LocalVariableAttribute,", "-\t\t\tCompilerOptions.DO_NOT_GENERATE);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_LineNumberAttribute,", "-\t\t\tCompilerOptions.DO_NOT_GENERATE);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_SourceFileAttribute,", "-\t\t\tCompilerOptions.DO_NOT_GENERATE);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportUnusedLocal, ", "-\t\t\tCompilerOptions.WARNING);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportUnusedImport, ", "-\t\t\tCompilerOptions.IGNORE);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportUnusedParameter,", "-\t\t\tCompilerOptions.WARNING);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportLocalVariableHiding,", "-\t\t\tCompilerOptions.WARNING);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportFieldHiding,", "-\t\t\tCompilerOptions.WARNING);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment,", "-\t\t\tCompilerOptions.WARNING);", "-\t\treturn defaultOptions;", "-}", "+\t", "+\tpublic Map getCompilerOptions() {", "+\t\tMap defaultOptions = super.getCompilerOptions();", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.DO_NOT_GENERATE);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_LineNumberAttribute, CompilerOptions.DO_NOT_GENERATE);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_SourceFileAttribute, CompilerOptions.DO_NOT_GENERATE);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportUnusedLocal, CompilerOptions.WARNING);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportUnusedImport, CompilerOptions.IGNORE);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.WARNING);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportLocalVariableHiding, CompilerOptions.WARNING);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportFieldHiding, CompilerOptions.WARNING);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment, CompilerOptions.WARNING);", "+\t\treturn defaultOptions;", "+\t}"]}], "num": 19648}