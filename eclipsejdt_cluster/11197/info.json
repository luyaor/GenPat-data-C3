{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d0c2e74b25763ce00ad8525773c022e2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af0b7c1f0833e6095f3263a7655c439", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     \t \tpublic char[] computeUniqueKey()", "signatureAfterChange": "     \t \tpublic char[] computeUniqueKey()", "diff": ["-\t\t    sig.append('.').append(sourceName()).append(';');", "-\t\t\tint sigLength = sig.length();", "-\t\t\tchar[] uniqueKey = new char[sigLength];", "-\t\t\tsig.getChars(0, sigLength, uniqueKey, 0);\t\t\t\t\t\t    ", "-\t\t\treturn uniqueKey;", "+\t\t    sig.append('.').append(sourceName()).append('<').append('>').append(';');", "-\t\t     return this.type.signature(); // erasure", "+\t\t     sig.append(this.type.signature()); // erasure", "+\t\t     sig.insert(sig.length()-1, \"<>\"); //$NON-NLS-1$", "+\t\tint sigLength = sig.length();", "+\t\tchar[] uniqueKey = new char[sigLength];", "+\t\tsig.getChars(0, sigLength, uniqueKey, 0);\t\t\t\t\t\t    ", "+\t\treturn uniqueKey;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b06f36b80fd5b01cdba60e50769a0421", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalTypeBinding.java", "commitBeforeChange": "0841b38e29c9b9a090c0d849b31ae1e8b6484d97", "commitAfterChange": "1965f5fe535fd5838f926aded2b10032f8850771", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " public char[] computeUniqueKey(boolean isLeaf)", "diff": ["+\tStringBuffer sig = new StringBuffer();", "+\tsig.append(outerKey, 0, semicolon);", "+", "-\treturn CharOperation.concat(", "-\t\tCharOperation.concat(", "-\t\t\tCharOperation.subarray(outerKey, 0, semicolon),", "-\t\t\tString.valueOf(", "-\t\t\tthis.sourceStart).toCharArray(),", "-\t\t\t'$'),", "-\t\tCharOperation.subarray(outerKey, semicolon, outerKey.length));", "+\tsig.append('$');", "+\tsig.append(String.valueOf(this.sourceStart));", "+\t", "+\t// insert $LocalName if local", "+\tif (!isAnonymousType()) {", "+\t\tsig.append('$');", "+\t\tsig.append(this.sourceName);", "+\t}", "+\t", "+\t// insert remaining from outer key", "+\tsig.append(outerKey, semicolon, outerKey.length-semicolon);", "+\t", "+\tint sigLength = sig.length();", "+\tchar[] uniqueKey = new char[sigLength];", "+\tsig.getChars(0, sigLength, uniqueKey, 0);\t\t\t", "+\treturn uniqueKey;"]}], "num": 11197}