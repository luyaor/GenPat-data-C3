{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e524a6b14bed31337f756dcf20d3a1ed", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "032afa2a94cec349530ccf85ced5f9ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "signatureAfterChange": " protected void reportMatching(CompilationUnitDeclaration unit, boolean mustResolve) throws CoreException", "diff": ["-\t\t\t\t\t\tthis.patternLocator.matchReportReference(node, element, null/*no binding*/, level.intValue(), this);", "+\t\t\t\t\t\tthis.patternLocator.matchReportReference(node, element, null, null, null/*no binding*/, level.intValue(), this);", "-\t\t\t\treportMatching(pkg.annotations, element, null, nodeSet, true, encloses(element));", "+\t\t\t\treportMatching(pkg.annotations, element, null, null, nodeSet, true, encloses(element));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aff458469475615abbebfcce7a5b549", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 71, "signatureBeforeChange": " protected void reportMatchingSuper(TypeReference superReference, IJavaElement enclosingElement, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedClassContainer) throws CoreException", "signatureAfterChange": " protected void reportMatchingSuper(TypeReference superReference, IJavaElement enclosingElement, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedClassContainer) throws CoreException", "diff": ["-\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, elementBinding, level.intValue(), this);", "+\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, null, null, elementBinding, level.intValue(), this);", "-\t\t\tthis.patternLocator.matchReportReference(superReference, enclosingElement, elementBinding, level.intValue(), this);", "+\t\t\tthis.patternLocator.matchReportReference(superReference, enclosingElement, null, null, elementBinding, level.intValue(), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98bf389493c3803eac0db5f663452d30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-", "-\t\t\treport(nameSourceStart, nameSourceEnd, enclosingElement, accuracy);", "+\t\t\tif (encloses(enclosingElement)) {", "+\t\t\t\tSearchMatch match = JavaSearchMatch.newDeclarationMatch(enclosingElement, accuracy, nameSourceStart, nameSourceEnd+1, this);", "+\t\t\t\treport(match);", "+\t\t\t}", "-\t\t\t\tif (enclosingElement != null) { // skip if unable to find method", "+\t\t\t\tif (encloses(enclosingElement)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b349442ea480d3df5349757c4af1fa53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "fc8ba03f9916b4ab5a789fe72fe040f0a158e1e5", "commitAfterChange": "6dec51f3a3503c4d8924810ab83aa422e394cac6", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " protected void reportMatching(AbstractMethodDeclaration method, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(AbstractMethodDeclaration method, TypeDeclaration type, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["-\t\treportMatching(typeParameters, enclosingElement, parent, method.binding, nodeSet);", "+\t\tif (enclosingElement != null) {", "+\t\t\treportMatching(typeParameters, enclosingElement, parent, method.binding, nodeSet);", "+\t\t}", "-\t\treportMatching(method.annotations, enclosingElement, null, method.binding, nodeSet, true, true);", "+\t\tif (enclosingElement != null) {", "+\t\t\treportMatching(method.annotations, enclosingElement, null, method.binding, nodeSet, true, true);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc02517775e2442e84a5477c2904e08c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "98ad487e103c268099d7117573693243c8d3b8fc", "commitAfterChange": "721a9dcda02493639666143934bddb089e848d18", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 68, "signatureBeforeChange": " protected void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "signatureAfterChange": " protected void reportMatching(AbstractMethodDeclaration method, IJavaElement parent, int accuracy, boolean typeInHierarchy, MatchingNodeSet nodeSet) throws CoreException", "diff": ["+\t// report the type parameters", "+\tTypeParameter[] typeParameters = method.typeParameters();", "+\tif (typeParameters != null) {", "+\t\tif (enclosingElement == null) {", "+\t\t\tenclosingElement = createHandle(method, parent);", "+\t\t}", "+\t\treportMatching(typeParameters, enclosingElement, parent, method.binding, nodeSet);", "+\t}", "+", "-\t\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, method.binding, level.intValue(), this);", "+\t\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, method.binding, method.scope, level.intValue(), this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9ad7a5d866fcca97cda87628ac9167b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 41, "signatureBeforeChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "signatureAfterChange": " protected void reportMatching(TypeDeclaration type, IJavaElement parent, int accuracy, MatchingNodeSet nodeSet, int occurrenceCount) throws CoreException", "diff": ["-\tif (accuracy > -1)", "-\t\treport(type.sourceStart, type.sourceEnd, enclosingElement, accuracy);", "+\tif (accuracy > -1 && encloses(enclosingElement)) {", "+\t\tSearchMatch match = JavaSearchMatch.newDeclarationMatch(enclosingElement, accuracy, type.sourceStart, type.sourceEnd+1, this);", "+\t\treport(match);", "+\t}", "-\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, level.intValue(), this);", "+\t\t\t\t\tif (encloses(enclosingElement))", "+\t\t\t\t\t\tthis.patternLocator.matchReportReference(node, enclosingElement, level.intValue(), this);"]}], "num": 50692}