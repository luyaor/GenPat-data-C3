{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "31acd0a6f8a27211ab31a496997fde7a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a5538ccba28754655f09ea06c8c814d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OverflowingLRUCache.java", "commitBeforeChange": "0ff40cf9419ba675580163e104091de3b2c53d9a", "commitAfterChange": "afc22404ca214f45a7f8e88b727a46f3daf1f07d", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void printStats()", "signatureAfterChange": " public void printStats()", "diff": ["-\tLRUCacheEntry entry = fEntryQueue;", "+\tLRUCacheEntry entry = entryQueue;", "-\tentry = fEntryQueueTail;", "+\tentry = entryQueueTail;", "-\tEnumeration keys = fEntryTable.keys();", "+\tEnumeration keys = entryTable.keys();", "-\t\tpublic Class fClass;", "-\t\tpublic int fCount;", "+\t\tpublic Class clazz;", "+\t\tpublic int count;", "-\t\t\tfClass = aClass;", "-\t\t\tfCount = 1;", "+\t\t\tclazz = aClass;", "+\t\t\tcount = 1;", "-\t\t\treturn \"Class: \" + fClass + \" has \" + fCount + \" entries.\"; //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-1$", "+\t\t\treturn \"Class: \" + clazz + \" has \" + count + \" entries.\"; //$NON-NLS-2$ //$NON-NLS-3$ //$NON-NLS-1$", "-\t\tentry = (LRUCacheEntry)fEntryTable.get(keys.nextElement());", "+\t\tentry = (LRUCacheEntry)entryTable.get(keys.nextElement());", "-\t\t\tt.fCount++;", "+\t\t\tt.count++;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4e506b352bcb60a615f3c0f530f8879", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/VerboseElementCache.java", "commitBeforeChange": "7f547e4df5eb75fa9635256f722fd3750a48a3e2", "commitAfterChange": "49e0262787cdec74a49d7bb90191a6d160d6e797", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tprotected boolean makeSpace(int space)", "signatureAfterChange": "  \tprotected boolean makeSpace(int space)", "diff": ["-\t\tif (this.beingAdded != null && !isSpaceAvailable(space, fSpaceLimit)) {", "+\t\tif (this.beingAdded == null) return super.makeSpace(space);", "+\t\tString fillingRatio = toStringFillingRation(this.name);", "+\t\tboolean result = super.makeSpace(space);", "+\t\tString newFillingRatio = toStringFillingRation(this.name);", "+\t\tif (!fillingRatio.equals(newFillingRatio)) {", "-\t\t\tSystem.out.println(Thread.currentThread() + \" MAKING SPACE IN \" + toStringFillingRation(this.name)); //$NON-NLS-1$", "+\t\t\tSystem.out.println(Thread.currentThread() + \" MADE SPACE FOR \" + fillingRatio + \" (NOW \" + NumberFormat.getInstance().format(fillingRatio()) + \"% full)\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\treturn super.makeSpace(space);", "+\t\treturn result;"]}], "num": 18236}