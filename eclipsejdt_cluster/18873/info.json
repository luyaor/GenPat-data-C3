{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e5f0d8ba2f9ce015c70cbf2f3b6de10", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217823de2a48fa0525372fdc1cdd2dc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "790aac30bd6ce816d617cb5a88f2ad25d5ac804c", "commitAfterChange": "2de52c15a156e7b5856add0dc9ffb53a5657312f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void generateOptimizedGreaterThanOrEqual( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedGreaterThanOrEqual( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\tint pc = codeStream.position;", "-\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t\t// reposition the endPC", "+\t\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);\t\t\t\t\t", "-\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t\t// reposition the endPC", "+\t\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);\t\t\t\t\t", "-\t\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t\t\t// reposition the endPC", "+\t\t\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);\t\t\t\t\t", "-\t\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t\t\t// reposition the endPC", "+\t\t\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ee69804ef126e450c83186a2fe6968", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "790aac30bd6ce816d617cb5a88f2ad25d5ac804c", "commitAfterChange": "2de52c15a156e7b5856add0dc9ffb53a5657312f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void generateOptimizedGreaterThan( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedGreaterThan( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\tint pc = codeStream.position;", "-\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t\t// reposition the endPC", "+\t\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);\t\t\t\t\t", "-\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t\t// reposition the endPC", "+\t\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);\t\t\t\t\t", "-\t\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t\t\t// reposition the endPC", "+\t\t\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);\t\t\t\t\t", "-\t\t\t\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);", "+\t\t\t\t\t// reposition the endPC", "+\t\t\t\t\tcodeStream.updateLastRecordedEndPC(codeStream.position);\t\t\t\t\t"]}], "num": 18873}