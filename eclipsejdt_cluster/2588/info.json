{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "830e56281e5cfe6168fff60799a5aa4a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41bb9dea3ce70597206a09cd1c0a7d9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "9a8c0b7f51c1a0b9d37b7d38acb4d0261e31390a", "commitAfterChange": "278bd24e5aaae65022c9b0e7c10b22e5ffa034b6", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic TextEdit format( \t\t\tint kind, \t\t\tString source, \t\t\tint offset, \t\t\tint length, \t\t\tint indentationLevel, \t\t\tString lineSeparator)", "signatureAfterChange": " \tpublic TextEdit format( \t\t\tint kind, \t\t\tString source, \t\t\tint offset, \t\t\tint length, \t\t\tint indentationLevel, \t\t\tString lineSeparator)", "diff": ["-\t\tthis.codeSnippetParsingUtil = new CodeSnippetParsingUtil();", "-\t\t\tcase K_CLASS_BODY_DECLARATIONS :", "-\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\tcase K_COMPILATION_UNIT :", "-\t\t\t\treturn formatCompilationUnit(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\tcase K_EXPRESSION :", "-\t\t\t\treturn formatExpression(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\tcase K_STATEMENTS :", "-\t\t\t\treturn formatStatements(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\tcase K_UNKNOWN :", "-\t\t\t\treturn probeFormatting(source, indentationLevel, lineSeparator, offset, length);", "-\t\t\t\treturn formatComment(kind, source, indentationLevel, lineSeparator, offset, length);", "+\t\t\t\tthis.codeSnippetParsingUtil = new CodeSnippetParsingUtil();", "+\t\t\t\treturn formatComment(kind, source, indentationLevel, lineSeparator, new IRegion[] {new Region(offset, length)});", "+\t\t}", "+", "+\t\treturn format(kind, source, new IRegion[] {new Region(offset, length)}, indentationLevel, lineSeparator);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d90b09f5285cee1af1d4cfe6ce84387e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "628e9c4648e198faf112f84ab4f79974c542dba4", "commitAfterChange": "a5c3db41a58c8521d5f8f73e141ab57108cd47bc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic String format( \t\t\tint kind, \t\t\tString source, \t\t\tint indentationLevel, \t\t\tint[] positions, \t\t\tString lineSeparator, \t\t\tMap options)", "signatureAfterChange": " \tpublic String format( \t\t\tint kind, \t\t\tString source, \t\t\tint indentationLevel, \t\t\tint[] positions, \t\t\tString lineSeparator, \t\t\tMap options)", "diff": ["-\t\t\t\t", "+", "+\t\tString result = source;\t\t\t\t", "-\t\t\t\treturn formatClassBodyDeclarations(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tresult = formatClassBodyDeclarations(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tthis.positionsMapping = positions;", "+\t\t\t\tbreak;", "-\t\t\t\treturn formatCompilationUnit(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tresult = formatCompilationUnit(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tthis.positionsMapping = positions;", "+\t\t\t\tbreak;", "-\t\t\t\treturn formatExpression(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tresult = formatExpression(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tthis.positionsMapping = positions;", "+\t\t\t\tbreak;", "-\t\t\t\treturn formatStatements(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tresult = formatStatements(source, indentationLevel, positions, lineSeparator, options);", "+\t\t\t\tthis.positionsMapping = positions;", "-\t\tthis.positionsMapping = positions;", "-\t\treturn source;", "+\t\treturn result;"]}], "num": 2588}