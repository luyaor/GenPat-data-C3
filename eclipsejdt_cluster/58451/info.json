{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fabb42488654416ff45760326552ad7b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187c5b99662b9bd453e797c7b03e6127", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "2445b4918489720c19f8f06e5268b782d8fa3e09", "commitAfterChange": "a4c0884f4909a7148eef43d80a79301d90c42921", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "      public Map<AnnotationTypeElementDeclaration, AnnotationValue> getElementValues()", "signatureAfterChange": "      public Map<AnnotationTypeElementDeclaration, AnnotationValue> getElementValues()", "diff": ["+            \t final ITypeBinding retType = elementMethod.getReturnType();            ", "-                 final AnnotationValue annoValue = ", "-\t\t\t\t\t Factory.createAnnotationMemberValue(pair.getValue(), name, this, _env);", "-                 if( mirrorDecl.kind() == EclipseMirrorImpl.MirrorKind.ANNOTATION_ELEMENT  &&", "-                     annoValue != null )", "-                     result.put( (AnnotationTypeElementDeclaration)mirrorDecl, annoValue);", "+                 if( mirrorDecl != null && mirrorDecl.kind() == EclipseMirrorImpl.MirrorKind.ANNOTATION_ELEMENT  )", "+                 {", "+                \t final AnnotationTypeElementDeclaration elementDecl = ", "+                \t\t (AnnotationTypeElementDeclaration)mirrorDecl;", "+                \t final AnnotationValue annoValue = ", "+    \t\t\t\t\t Factory.createAnnotationMemberValue(pair.getValue(), name, this, _env, elementDecl.getReturnType());", "+                \t if( annoValue != null )", "+                \t\t result.put( elementDecl, annoValue);", "+                 }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8a7610d9abef9006c55bb31bcedc332", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1c425ab9b86d11b9b13286f394c81eaa5fe0845e", "commitAfterChange": "65dd0117ad4d4f6fd41c5c2b402352448d39d6c6", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \t\tprivate void logProblem(CategorizedProblem problem, int localErrorCount, \t\t\tint globalErrorCount, char[] unitSource)", "signatureAfterChange": "  \t\tprivate void logProblem(CategorizedProblem problem, int localErrorCount, \t\t\tint globalErrorCount, char[] unitSource)", "diff": ["-\t\t\t\tthis.printlnErr(((DefaultProblem) problem).errorReportSource(unitSource, this.tagBits));", "+\t\t\t\tfinal String errorReportSource = ((DefaultProblem) problem).errorReportSource(unitSource, this.tagBits);", "+\t\t\t\tif (errorReportSource.length() != 0) this.printlnErr(errorReportSource);", "-\t\t\t\t\tthis.printlnErr(((DefaultProblem) problem).errorReportSource(unitSource));", "+\t\t\t\t\tfinal String errorReportSource = ((DefaultProblem) problem).errorReportSource(unitSource);", "+\t\t\t\t\tif (errorReportSource.length() != 0) this.printlnErr(errorReportSource);"]}], "num": 58451}