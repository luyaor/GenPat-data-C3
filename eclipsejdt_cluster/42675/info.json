{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f00a7ebf45da98a0b4f5a482918cc690", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f86148773a2f6418685c9eff42a9dab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "d3b837e8cc689b58e173f139d9b4e19e674e3f05", "commitAfterChange": "87ba3addb06e0bd690b97dd2e305fffcc5db74fe", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "\r \t\r \tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength)", "signatureAfterChange": "\r \t\r \tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength)", "diff": ["-\t\t\tmessages[i] = new Message(problem.getMessage(), problem.getSourceStart());\r", "+\t\t\tint start = problem.getSourceStart();\r", "+\t\t\tint end = problem.getSourceEnd();\r", "+\t\t\tmessages[i] = new Message(problem.getMessage(), start, end - start + 1);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "793beb17ca4d539db470585653e9b76c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9c69d8563911aa9f6df8f556adf1ceee2ecffd81", "commitAfterChange": "a3376443e7433851c1c9a2be37ee8e7113265608", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": "\r \t\r \tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength)", "signatureAfterChange": "\r \t\r \tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength)", "diff": ["-\t\tASTErrorPropagator errorPropagator = new ASTErrorPropagator(resizeProblems);\r", "-\t\tunit.accept(errorPropagator);\r", "+\t\tASTSyntaxErrorPropagator syntaxErrorPropagator = new ASTSyntaxErrorPropagator(resizeProblems);\r", "+\t\tunit.accept(syntaxErrorPropagator);\r", "+\t\t// store the messages error on the compulation unit\r", "+\t\tMessage[] messages = new Message[problemLength];\r", "+\t\tfor (int i = 0; i < problemLength; i++) {\r", "+\t\t\tIProblem problem = problems[i];\r", "+\t\t\tmessages[i] = new Message(problem.getMessage(), problem.getSourceStart());\r", "+\t\t}\r", "+\t\tunit.setMessages(messages);\r"]}], "num": 42675}