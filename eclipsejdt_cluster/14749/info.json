{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d8ff2b987b1c8b955e011742dd341ac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "446d134b58cf506f7a4801e034cf3f50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "921c323256600b0f66f83c92ee002fb2a726bfc9", "commitAfterChange": "dd00cc4719a25a677f938ddbb173ab430660ca3f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate boolean detectHierarchyCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": " \tprivate boolean detectHierarchyCycle(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "diff": ["-\t\t\tif (ref != null && (ref.resolvedType == null || ((ReferenceBinding) ref.resolvedType).isHierarchyBeingActivelyConnected())) {", "+\t\t\tif (ref != null && ref.resolvedType != null && ((ReferenceBinding) ref.resolvedType).isHierarchyBeingActivelyConnected()) {", "+\t\t\tif (ref != null && ref.resolvedType == null) {", "+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=319885 Don't cry foul prematurely.", "+\t\t\t\t// Check the edges traversed to see if there really is a cycle.", "+\t\t\t\tchar [] referredName = ref.getLastToken(); ", "+\t\t\t\tfor (Iterator iter = environment().typesBeingConnected.iterator(); iter.hasNext();) {", "+\t\t\t\t\tSourceTypeBinding type = (SourceTypeBinding) iter.next();", "+\t\t\t\t\tif (CharOperation.equals(referredName, type.sourceName())) {", "+\t\t\t\t\t\tproblemReporter().hierarchyCircularity(sourceType, superType, reference);", "+\t\t\t\t\t\tsourceType.tagBits |= TagBits.HierarchyHasProblems;", "+\t\t\t\t\t\tsuperType.tagBits |= TagBits.HierarchyHasProblems;", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0b1c4872864eddc5e70e1fb7f481d67", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "8ff87d310a91c2a77c65ad68bb4b1fd94425fd85", "commitAfterChange": "dbf8a869161361178e399dd7e18a85b9a48bde74", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic boolean visit(SimpleName node)", "signatureAfterChange": " \tpublic boolean visit(NormalAnnotation node)", "diff": ["+\t */", "+\tpublic boolean visit(NormalAnnotation node) {", "+\t\tthis.buffer.append(\"@\");//$NON-NLS-1$", "+\t\tnode.getTypeName().accept(this);", "+\t\tthis.buffer.append(\"(\");//$NON-NLS-1$", "+\t\tfor (Iterator it = node.values().iterator(); it.hasNext(); ) {", "+\t\t\tMemberValuePair p = (MemberValuePair) it.next();", "+\t\t\tp.getName().accept(this);", "+\t\t\tthis.buffer.append(\"=\");//$NON-NLS-1$", "+\t\t\tp.getValue().accept(this);", "+\t\t\tif (it.hasNext()) {", "+\t\t\t\tthis.buffer.append(\",\");//$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\tthis.buffer.append(\")\");//$NON-NLS-1$", "+\t\treturn false;", "+\t}"]}], "num": 14749}