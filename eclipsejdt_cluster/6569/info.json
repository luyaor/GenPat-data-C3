{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a87e8c9901b3c78ce7e5565ab39c6855", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25987230925d99a4852dc94c41c87488", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "ac67adfb696f3d698561eed93e542c7d574b5a91", "commitAfterChange": "5984a54a8e3c97e75e1e0013a87853835a7d3f55", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\tCompilerOptions compilerOptions = currentScope.compilerOptions();", "+\t\tif (compilerOptions.suppressNullInfoFromAsserts) {", "+\t\t\t// keep just the initializations info, don't include assert's null info", "+\t\t\treturn flowInfo.mergedWith(assertInfo.nullInfoLessUnconditionalCopy());", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba984f929d5434312c1dac1a43aa243d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AssertStatement.java", "commitBeforeChange": "8f5b67bd80ff7e72bd80828779ffdbdb5bad5276", "commitAfterChange": "50d8267275b181894c19c15246b42f9711f997ad", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tif (compilerOptions.suppressNullInfoFromAsserts) {", "+\t\tif (!compilerOptions.includeNullInfoFromAsserts) {", "-\t\t\treturn flowInfo.mergedWith(assertInfo.nullInfoLessUnconditionalCopy());", "+\t\t\treturn flowInfo.addInitializationsFrom(assertInfo.nullInfoLessUnconditionalCopy());"]}], "num": 6569}