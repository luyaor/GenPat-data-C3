{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eef2eb2d4f087c613b403c36442e93f1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9807b3b4c190f47cc3c3f7e4464d315c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "fbe5fbdc69d99b1e6276991237ffa2c6aadf0b5b", "commitAfterChange": "45b58fe0f7be318bf612b58984bbd026cdf49949", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite)", "signatureAfterChange": "\r \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite)", "diff": ["+\t\t\tint foundDepth = 0;\r", "+\t\t\tReferenceBinding foundActualReceiverType = null;\r", "-\t\t\t\t\t\t\t\tif (depth > 0) {\r", "-\t\t\t\t\t\t\t\t\tinvocationSite.setDepth(depth);\r", "-\t\t\t\t\t\t\t\t\tinvocationSite.setActualReceiverType(enclosingType);\r", "-\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t\tfoundDepth = depth;\r", "+\t\t\t\t\t\t\t\tfoundActualReceiverType = enclosingType;\r", "-\t\t\tif (foundInsideProblem != null)\r", "+\t\t\tif (foundInsideProblem != null){\r", "+\t\t\t}\r", "-\t\t\t\tif (foundField.isValidBinding())\r", "+\t\t\t\tif (foundField.isValidBinding()){\r", "+\t\t\t\t\tif (foundDepth > 0){\r", "+\t\t\t\t\t\tinvocationSite.setDepth(foundDepth);\r", "+\t\t\t\t\t\tinvocationSite.setActualReceiverType(foundActualReceiverType);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd140831c01c7272f21936c0dbcc4acd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "18811c004d543a3728cc5dfc4e05503a79b434ee", "commitAfterChange": "96cbe57b16442df110d3b0ecde11c12b456820b8", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "signatureAfterChange": "\r public final boolean canBeSeenBy(TypeBinding receiverType, InvocationSite invocationSite, Scope scope)", "diff": ["-\r", "-\treturn this.canBeSeenBy(receiverType,invocationSite.isSuperAccess(),scope);\r", "-}\r", "+\t\tint depth = 0;\r", "+\t\t\t\tif (invocationSite.isSuperAccess()){\r", "+\t\t\t\t}\r", "+\t\t\t\t// receiverType can be an array binding in one case... see if you can change it\r", "+\t\t\t\tif (receiverType instanceof ArrayBinding){\r", "+\t\t\t\t\treturn false;\r", "+\t\t\t\t}\r", "+\t\t\t\tif (isStatic()){\r", "+\t\t\t\t}\r", "+\t\t\t\tif (currentType == receiverType || currentType.isSuperclassOf((ReferenceBinding) receiverType)){\r", "+\t\t\t\t\tif (depth > 0) invocationSite.setDepth(depth);\r", "+\t\t\t\t\treturn true;\r", "+\t\t\t\t}\r", "+\t\t\tdepth++;\r"]}], "num": 11838}