{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "661bd2e84b0137e68a663e2cf7c70003", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb1e2672e11dcb7f13504debe290d4a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "8f838ccefdcacadaac662cb88a80fdb1a3657843", "commitAfterChange": "658041315da1052ce94c7e1b37be530cbc4e1f1d", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " protected void checkNullConstraints(Scope scope, TypeBinding[] variables, int rank)", "signatureAfterChange": " protected void checkNullConstraints(Scope scope, TypeBinding[] variables, int rank)", "diff": ["-\t\tif (variables[rank].hasNullTypeAnnotations()) {", "-\t\t\tif (NullAnnotationMatching.validNullTagBits(this.resolvedType.tagBits) != NullAnnotationMatching.validNullTagBits(variables[rank].tagBits)) {", "-\t\t\t\tscope.problemReporter().nullityMismatchTypeArgument(variables[rank], this.resolvedType, this);", "-\t\t\t}", "+\t\tTypeBinding variable = variables[rank];", "+\t\tif (variable.hasNullTypeAnnotations()) {", "+\t\t\tif (NullAnnotationMatching.analyse(variable, this.resolvedType, null, -1, CheckMode.BOUND_CHECK).isAnyMismatch())", "+\t\t\t\tscope.problemReporter().nullityMismatchTypeArgument(variable, this.resolvedType, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1599f641505fa58553100bf108cb54d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "c67d112c20f07c2dcda11714ef23687a9781a753", "commitAfterChange": "af79dfe4ab6f88841082d7727b71d3b65b4f7778", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected int checkAssignmentAgainstNullAnnotation(BlockScope currentScope, FlowContext flowContext, \t\t\t\t\t\t\t\t\t\t\t\t   VariableBinding var, int nullStatus, Expression expression, TypeBinding providedType)", "signatureAfterChange": " protected int checkAssignmentAgainstNullAnnotation(BlockScope currentScope, FlowContext flowContext, \t\t\t\t\t\t\t\t\t\t\t\t   VariableBinding var, int nullStatus, Expression expression, TypeBinding providedType)", "diff": ["-\t\tint severity = findNullTypeAnnotationMismatch(var.type, providedType, nullStatus);", "-\t\tif (severity == 2) {", "-\t\t\tcurrentScope.problemReporter().nullityMismatchingTypeAnnotation(expression, providedType, var.type, severity);", "+\t\tNullAnnotationStatus annotationStatus = findNullTypeAnnotationMismatch(var.type, providedType, nullStatus);", "+\t\tif (annotationStatus.isDefiniteMismatch()) {", "+\t\t\tcurrentScope.problemReporter().nullityMismatchingTypeAnnotation(expression, providedType, var.type, annotationStatus);", "-\t\t} else if (severity == 1) {", "+\t\t} else if (annotationStatus.isUnchecked()) {"]}], "num": 50374}