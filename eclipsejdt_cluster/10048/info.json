{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d391e1b4c03568b935f600d564ef739", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf4db09236a117985b2dbf4e6613e714", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t MethodBinding getMethodBinding(MethodBinding[] methods, CompilationUnitResolver resolver)", "signatureAfterChange": " \t MethodBinding getMethodBinding(MethodBinding[] methods, CompilationUnitResolver resolver)", "diff": ["-\t \t} while (this.scanner.token != BindingKeyScanner.END && !this.scanner.isAtTypeParameterStart());", "+\t \t} while (this.scanner.token != BindingKeyScanner.END && !this.scanner.isAtParametersStart());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e152195da4801c2c8dfd12a9ed9b8a03", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKey.java", "commitBeforeChange": "ec6d7f365ea3ec3ffcd55d64775bd62b984807f3", "commitAfterChange": "c021c50efca4c234ec58241ed1fc82f6871e98bd", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t ParameterizedTypeBinding getParameterizedTypeBinding(ReferenceBinding genericType, ReferenceBinding enclosingType, CompilationUnitResolver resolver)", "signatureAfterChange": " \t ParameterizedTypeBinding getParameterizedTypeBinding(ReferenceBinding genericType, ReferenceBinding enclosingType, CompilationUnitResolver resolver)", "diff": ["-\t \tif (this.scanner.isAtMemberTypeStart()) {", "+\t \t// skip \";>\"", "+\t \tthis.scanner.index += 2;", "+\t \tif (this.scanner.isAtMemberTypeStart() && this.scanner.nextToken() == BindingKeyScanner.TYPE) {"]}], "num": 10048}