{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf052f154e8e47f43740cee6a92a89c7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "570426fadcd45545bc28139ee4fabbd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "fa6e92df9d3db7e8cd1dd939b87ce17fd6a25504", "commitAfterChange": "669b9af0f5a06f4381a84a633c0be85e376c6f3e", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCode( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tboolean valueRequired)", "diff": ["+", "-\t\tlhs.generateAssignment(currentScope, codeStream, this, valueRequired);", "-\t\t// variable may have been optimized out", "-\t\t// the lhs is responsible to perform the implicitConversion generation for the assignment since optimized for unused local assignment.", "+\t\tif (this.hasNoEffect) {", "+\t\t\tif (valueRequired) {", "+\t\t\t\tthis.expression.generateCode(currentScope, codeStream, true);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tlhs.generateAssignment(currentScope, codeStream, this, valueRequired);", "+\t\t\t// variable may have been optimized out", "+\t\t\t// the lhs is responsible to perform the implicitConversion generation for the assignment since optimized for unused local assignment.", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bad13cbfd4adb8a83a8a80d3f5fd24d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Buffer.java", "commitBeforeChange": "ebfc1682d29070aa2b44b01ca4f59eef8e28cc6a", "commitAfterChange": "772d559a3260b2073445779bf40fa39876a25516", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void save(IProgressMonitor progress, boolean force) throws JavaModelException", "signatureAfterChange": " public void save(IProgressMonitor progress, boolean force) throws JavaModelException", "diff": ["-\t\t\tthis.file.setContents(", "-\t\t\t\tstream, ", "-\t\t\t\tforce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY, ", "-\t\t\t\tnull);", "+\t\t\tif (this.file.exists()) {", "+\t\t\t\tthis.file.setContents(", "+\t\t\t\t\tstream, ", "+\t\t\t\t\tforce ? IResource.FORCE | IResource.KEEP_HISTORY : IResource.KEEP_HISTORY, ", "+\t\t\t\t\tnull);", "+\t\t\t} else {", "+\t\t\t\tthis.file.create(stream, force, null);", "+\t\t\t}\t"]}], "num": 21510}