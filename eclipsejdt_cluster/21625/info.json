{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "81cdd9634a3caa07e9844d893e80edd2", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fbd2cee9c69b81b620118d664f2cf4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " IMethod createBinaryMethodHandle(IType type, char[] methodSelector, char[][] argumentTypeNames, MatchLocator locator)", "signatureAfterChange": " IMethod createBinaryMethodHandle(IType type, char[] methodSelector, char[][] argumentTypeNames, MatchLocator locator)", "diff": ["-\t\t\t\t\tfor (int j = 0; j < argCount; j++) {", "-\t\t\t\t\t\tchar[] parameterTypeName = ClassFileMatchLocator.convertClassFileFormat(parameterTypes[j]);", "-\t\t\t\t\t\tif (!CharOperation.endsWith(Signature.toCharArray(Signature.getTypeErasure(parameterTypeName)), argumentTypeNames[j]))", "-\t\t\t\t\t\t\tcontinue nextMethod;", "-\t\t\t\t\t\tparameterTypes[j] = parameterTypeName;", "+\t\t\t\t\tif (argumentTypeNames != null) {", "+\t\t\t\t\t\tfor (int j = 0; j < argCount; j++) {", "+\t\t\t\t\t\t\tchar[] parameterTypeName = ClassFileMatchLocator.convertClassFileFormat(parameterTypes[j]);", "+\t\t\t\t\t\t\tif (!CharOperation.endsWith(Signature.toCharArray(Signature.getTypeErasure(parameterTypeName)), argumentTypeNames[j]))", "+\t\t\t\t\t\t\t\tcontinue nextMethod;", "+\t\t\t\t\t\t\tparameterTypes[j] = parameterTypeName;", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7ea8582e736cefd15291772611ddaf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3acd0c7c3783a0971d4796127903b77eaaaa4fe8", "commitAfterChange": "34c10732bc825eb0d60f9ca451e5bffcde825629", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " \t \tpublic static char[] createMethodSignature(char[][] parameterPackageNames, char[][] parameterTypeNames, char[] returnPackagename, char[] returnTypeName)", "signatureAfterChange": " \t \tpublic static char[] createMethodSignature(char[][] parameterPackageNames, char[][] parameterTypeNames, char[] returnPackagename, char[] returnTypeName)", "diff": ["+\t\tchar[] returnTypeSignature =", "+\t\t\treturnTypeName == null || returnTypeName.length == 0", "+\t\t\t? Signature.createCharArrayTypeSignature(VOID, true)", "+\t\t\t: Signature.createCharArrayTypeSignature(", "+\t\t\t\t\tCharOperation.concat(", "+\t\t\t\t\t\t\treturnPackagename,", "+\t\t\t\t\t\t\tCharOperation.replaceOnCopy(returnTypeName, '.', '$'), '.'), true);", "+\t\t", "+\t\treturn createMethodSignature(", "+\t\t\t\tparameterPackageNames,", "+\t\t\t\tparameterTypeNames,", "+\t\t\t\treturnTypeSignature);", "+\t}", "-\t\t", "-\t\tchar[] returnTypeSignature =", "-\t\t\treturnTypeName == null || returnTypeName.length == 0", "-\t\t\t? Signature.createCharArrayTypeSignature(VOID, true)", "-\t\t\t: Signature.createCharArrayTypeSignature(", "-\t\t\t\t\tCharOperation.concat(", "-\t\t\t\t\t\t\treturnPackagename,", "-\t\t\t\t\t\t\tCharOperation.replaceOnCopy(returnTypeName, '.', '$'), '.'), true);"]}], "num": 21625}