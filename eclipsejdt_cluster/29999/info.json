{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "675186ab5483b3095299be40cdaa4c31", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85080bdcd2f21f6fe0fa62298931ee4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "786bdcb54629de0c38fe45d8c9c539f76fe7da89", "commitAfterChange": "0f2bcb9853eb25fef3d26daa6737dcdc0dcad109", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\tif (!original.returnType.isCompatibleWith(original2.returnType) &&", "-\t\t\t\t\t\t\t\t!original.returnType.erasure().isCompatibleWith(original2.returnType.erasure())) {", "-\t\t\t\t\t\t\t// 15.12.2", "-\t\t\t\t\t\t\tcontinue nextSpecific; // choose original2 instead", "+\t\t\t\t\t\tif (original.returnType != original2.returnType) {", "+\t\t\t\t\t\t\tif (!current.returnType.isCompatibleWith(next.returnType)) ", "+\t\t\t\t\t\t\t\tcontinue nextSpecific;", "+\t\t\t\t\t\t\tif (original.returnType.erasure().findSuperTypeOriginatingFrom(original2.returnType.erasure()) == null)", "+\t\t\t\t\t\t\t\tcontinue nextSpecific;", "+\t\t\t\t\t\t\t// continue with original 15.12.2"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9c406a086015bd504799000f2572f1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "f08399b6c3b85028e58f14c2c7d9ea2ab9a83a79", "commitAfterChange": "3575e4b916e9151da43f7d5bca2f917975264d4c", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\t\t\t\tif (!current.returnType.isCompatibleWith(next.returnType)) ", "+\t\t\t\t\t\t\tif (current instanceof ParameterizedGenericMethodBinding) {", "+\t\t\t\t\t\t\t\tif (original.returnType.erasure().findSuperTypeOriginatingFrom(original2.returnType.erasure()) == null)", "+\t\t\t\t\t\t\t\t\tcontinue nextSpecific;", "+\t\t\t\t\t\t\t} else if (!current.returnType.isCompatibleWith(next.returnType)) { ", "-\t\t\t\t\t\t\tif (original.returnType.erasure().findSuperTypeOriginatingFrom(original2.returnType.erasure()) == null)", "-\t\t\t\t\t\t\t\tcontinue nextSpecific;", "-\t\t\t\t\t\t\t// continue with original 15.12.2", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t// continue with original 15.12.2.5"]}], "num": 29999}