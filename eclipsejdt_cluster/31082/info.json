{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c05755f66c5ffa900d4a4462683da09", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09fee98bc518469830fbdac31a0e5d7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 195, "methodNumberAfterChange": 311, "signatureBeforeChange": " protected void dispatchDeclarationInto(int length)", "signatureAfterChange": " protected void dispatchDeclarationInto(int length)", "diff": ["-\t/* they are length on astStack that should go into", "+\t/* they are length on this.astStack that should go into", "-\tint size1 = 0, size2 = 0, size3 = 0;", "+\tint size1 = 0, size2 = 0, size3 = 0, size4 = 0;", "+\t\t} else if (astNode instanceof EnumDeclaration) {", "+\t\t\tflag[i] = 2;", "+\t\t\tsize4++;", "+\t\t} else if (astNode instanceof TypeDeclaration) {", "+\t\t\tflag[i] = 4;", "+\t\t\tsize3++;", "-\t\t\tif (astNode instanceof TypeDeclaration) {", "-\t\t\t\tflag[i] = 4;", "-\t\t\t\tsize3++;", "-\t\t\t} else {", "-\t\t\t\t//field", "-\t\t\t\tflag[i] = 1;", "-\t\t\t\tsize1++;", "-\t\t\t}", "+\t\t\t//field", "+\t\t\tflag[i] = 1;", "+\t\t\tsize1++;", "-\tif (size1 != 0)", "+\tif (size1 != 0) {", "-\tif (size2 != 0)", "+\t}", "+\tif (size2 != 0) {", "-\tif (size3 != 0)", "+\t}", "+\tif (size3 != 0) {", "+\t}", "+\tif (size4 != 0) {", "+\t\ttypeDecl.enums = new EnumDeclaration[size4];", "+\t}", "-\tsize1 = size2 = size3 = 0;", "+\tsize1 = size2 = size3 = size4 = 0;", "+\t\t\t\t\t\tlength2); ", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 2 :", "+\t\t\t\t\tsize4 += (length2 = end - start);", "+\t\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\t\tthis.astStack, ", "+\t\t\t\t\t\tthis.astPtr + start + 1, ", "+\t\t\t\t\t\ttypeDecl.enums, ", "+\t\t\t\t\t\tsize4 - length2, ", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c76b241aaaf205a2526a1b52128faaf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "fe024fd7797ce73b0a83969f685073606863b79e", "commitAfterChange": "124641ac651bbea2bd062a9605817d39b473bf0e", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 206, "signatureBeforeChange": " protected void consumeInterfaceMethodDeclaration(boolean hasSemicolonBody)", "signatureAfterChange": " protected void consumeInterfaceMethodDeclaration(boolean hasSemicolonBody)", "diff": ["+\tint explicitDeclarations = 0;", "+\tStatement[] statements = null;", "-\t\t// retrieve end position of method declarator", "-", "+\t\tthis.intPtr--;", "+\t\t", "+\t\texplicitDeclarations = this.realBlockStack[this.realBlockPtr--];", "+\t\t", "-\t\tthis.realBlockPtr--;", "-\t\t\tthis.astPtr -= length;", "+\t\t\tif (this.options.ignoreMethodBodies) {", "+\t\t\t\tthis.astPtr -= length;", "+\t\t\t} else {", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tthis.astStack,", "+\t\t\t\t\t(this.astPtr -= length) + 1,", "+\t\t\t\t\tstatements = new Statement[length],", "+\t\t\t\t\t0,", "+\t\t\t\t\tlength);", "+\t\t\t}", "+\tmd.statements = statements;", "+\tmd.explicitDeclarations = explicitDeclarations;"]}], "num": 31082}