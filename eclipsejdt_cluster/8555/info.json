{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dc37389fddea40210dc5d416ac294155", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "126fbcd595df7804c5b483c31948748f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "6cd0099c2021e34815eaba987a586ae52dacf569", "commitAfterChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic ReferenceBinding inferFunctionalInterfaceParameterization(LambdaExpression lambda, BlockScope blockScope,  \t\t\tParameterizedTypeBinding targetTypeWithWildCards)", "signatureAfterChange": " \tpublic ReferenceBinding inferFunctionalInterfaceParameterization(LambdaExpression lambda, BlockScope blockScope,  \t\t\tParameterizedTypeBinding targetTypeWithWildCards)", "diff": ["-\t\t\t\treturn blockScope.environment().createParameterizedType(genericType, aprime, genericType.enclosingType());", "+\t\t\t\treturn blockScope.environment().createParameterizedType(genericType, aprime, targetTypeWithWildCards.enclosingType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "190ff27899c944f738ea3bf73c04b103", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "6cd0099c2021e34815eaba987a586ae52dacf569", "commitAfterChange": "d6dc74869d8c303dbb7a6d8b327d8b104cd5865b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic ReferenceBinding findGroundTargetTypeForElidedLambda(BlockScope blockScope, ParameterizedTypeBinding withWildCards)", "signatureAfterChange": "  \tpublic ReferenceBinding findGroundTargetTypeForElidedLambda(BlockScope blockScope, ParameterizedTypeBinding withWildCards)", "diff": ["-\t\treturn blockScope.environment().createParameterizedType(genericType, types, genericType.enclosingType());", "+\t\treturn blockScope.environment().createParameterizedType(genericType, types, withWildCards.enclosingType());"]}], "num": 8555}