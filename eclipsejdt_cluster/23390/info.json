{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ea79987ac9a26b0e4a544e195077edb", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "456b8a248df7bf1ed0bc3074a1c41ed1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "c86c38d672e49d50e598810327b66493258e94dd", "commitAfterChange": "060261358ee4101b16c7399fe1e71ff5bc4ac40a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " MethodBinding computeSubstitutedMethod(MethodBinding method, LookupEnvironment env)", "signatureAfterChange": " MethodBinding computeSubstitutedMethod(MethodBinding method, LookupEnvironment env)", "diff": ["-\tTypeVariableBinding[] vars = this.typeVariables;", "-\tTypeVariableBinding[] vars2 = method.typeVariables;", "-\tif (vars.length != vars2.length)", "+\tint length = this.typeVariables.length;", "+\tTypeVariableBinding[] vars = method.typeVariables;", "+\tif (length != vars.length)", "-\tfor (int v = vars.length; --v >= 0;)", "-\t\tif (!vars[v].isInterchangeableWith(env, vars2[v]))", "-\t\t\treturn null;", "-\treturn env.createParameterizedGenericMethod(method, vars);", "+\tParameterizedGenericMethodBinding substitute =", "+\t\tenv.createParameterizedGenericMethod(method, this.typeVariables);", "+\tfor (int i = 0; i < length; i++)", "+\t\tif (!this.typeVariables[i].isInterchangeableWith(vars[i], substitute))", "+\t\t\treturn null;", "+\treturn substitute;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edcdf3af8999da7fce2673eafb5284c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "b17f0033873962e79cd540a0937b76249dec8a6c", "commitAfterChange": "360e136a8e044225071869fa38d7072ea1d3cdac", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": " private void rememberWithMemberTypes(ISourceType suppliedType, ReferenceBinding typeBinding)", "signatureAfterChange": " private void rememberWithMemberTypes(TypeDeclaration typeDecl, IType typeHandle)", "diff": ["-private void rememberWithMemberTypes(ISourceType suppliedType, ReferenceBinding typeBinding) {", "-\tif (typeBinding == null) return;", "-", "-\tremember(suppliedType, typeBinding);", "-", "-\tISourceType[] memberTypes = suppliedType.getMemberTypes();", "-\tif (memberTypes == null) return;", "-\tfor (int m = memberTypes.length; --m >= 0;) {", "-\t\tISourceType memberType = memberTypes[m];", "-\t\trememberWithMemberTypes(memberType, typeBinding.getMemberType(memberType.getName()));", "-\t}", "-}", "+}", "+private void rememberWithMemberTypes(TypeDeclaration typeDecl, IType typeHandle) {", "+\tremember(typeHandle, typeDecl.binding);", "+\tTypeDeclaration[] memberTypes = typeDecl.memberTypes;", "+\tif (memberTypes != null) {", "+\t\tfor (int i = 0, length = memberTypes.length; i < length; i++) {", "+\t\t\tTypeDeclaration memberType = memberTypes[i];", "+\t\t\trememberWithMemberTypes(memberType, typeHandle.getType(new String(memberType.name)));", "+\t\t}", "+}"]}], "num": 23390}