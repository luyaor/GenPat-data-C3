{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa923e512186b8615ea99e581f930aee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a704651d04df1b17a7a81d731da3aba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "4119a65befb0f1b826133c8b40790cea36510774", "commitAfterChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testProjectFindKnownType() throws CoreException", "signatureAfterChange": " public void testProjectFindKnownType() throws CoreException", "diff": ["-\tif (WARMUP_COUNT > 0) {", "-\t\tfor (int i=0; i<WARMUP_COUNT; i++) {", "-\t\t\tIType type = BIG_PROJECT.findType(fullQualifiedName);", "-\t\t\tassertNotNull(\"We should find type '\"+fullQualifiedName+\"' in project \"+BIG_PROJECT_NAME, type);", "-\t\t}", "+\tfor (int i=0; i<WARMUP_COUNT; i++) {", "+\t\tIType type = BIG_PROJECT.findType(fullQualifiedName);", "+\t\tif (i==0) assertNotNull(\"We should find type '\"+fullQualifiedName+\"' in project \"+BIG_PROJECT_NAME, type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8f7c48a8122eb43182644827ded0882", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "4119a65befb0f1b826133c8b40790cea36510774", "commitAfterChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void testProjectFindKnownMemberType() throws CoreException", "signatureAfterChange": " public void testProjectFindKnownMemberType() throws CoreException", "diff": ["-\tif (WARMUP_COUNT > 0) {", "-\t\tfor (int i=0; i<WARMUP_COUNT; i++) {", "-\t\t\tIType type = BIG_PROJECT.findType(fullQualifiedName);", "-\t\t\tassertNotNull(\"We should find type '\"+fullQualifiedName+\"' in project \"+BIG_PROJECT_NAME, type);", "-\t\t}", "+\tfor (int i=0; i<WARMUP_COUNT; i++) {", "+\t\tIType type = BIG_PROJECT.findType(fullQualifiedName);", "+\t\tif (i==0) assertNotNull(\"We should find type '\"+fullQualifiedName+\"' in project \"+BIG_PROJECT_NAME, type);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f457ce00877b1d916cdb2769d9f77a6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceModelTests.java", "commitBeforeChange": "4119a65befb0f1b826133c8b40790cea36510774", "commitAfterChange": "199c84f2cae998bf19dec5ba0cb5f860d990b3fa", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void testProjectFindUnknownType() throws CoreException", "signatureAfterChange": " public void testProjectFindUnknownType() throws CoreException", "diff": ["-\tif (WARMUP_COUNT > 0) {", "-\t\tfor (int i=0; i<WARMUP_COUNT; i++) {", "-\t\t\tIType type = BIG_PROJECT.findType(fullQualifiedName);", "-\t\t\tassertNull(\"We should not find an unknown type in project \"+BIG_PROJECT_NAME, type);", "-\t\t}", "+\tfor (int i=0; i<WARMUP_COUNT; i++) {", "+\t\tIType type = BIG_PROJECT.findType(fullQualifiedName);", "+\t\tassertNull(\"We should not find an unknown type in project \"+BIG_PROJECT_NAME, type);"]}], "num": 42735}