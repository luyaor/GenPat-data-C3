{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7fdc4f80f91e46fd3cec940b0dcff76", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1802b7906fbc16409e31c021f852a9ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "e4a156bfaffb7f751d0a52386db5d7867e569a0b", "commitAfterChange": "52ef25f21b6ca8b40ccd0b0f3b8054f31f096d4a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public IBuffer getBuffer() throws JavaModelException", "signatureAfterChange": " public IBuffer getBuffer() throws JavaModelException", "diff": ["-\t\tif (status.getCode() == IJavaModelStatusConstants.ELEMENT_NOT_ON_CLASSPATH)", "-\t\t\treturn null; // don't throw a JavaModelException to be able to open .class file outside the classpath (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=138507)", "-\t\tthrow new JavaModelException((IJavaModelStatus) status);", "+\t\tswitch (status.getCode()) {", "+\t\tcase IJavaModelStatusConstants.ELEMENT_NOT_ON_CLASSPATH: // don't throw a JavaModelException to be able to open .class file outside the classpath (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=138507 )", "+\t\tcase IJavaModelStatusConstants.INVALID_ELEMENT_TYPES: // don't throw a JavaModelException to be able to open .class file in proj==src case without source (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=221904 )", "+\t\t\treturn null; ", "+\t\tdefault:", "+\t\t\tthrow new JavaModelException((IJavaModelStatus) status);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9788892f8416464a15b2b01b7c26f927", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "ab9a706cb19f2f2eac77ce9aa86b568f8fa1be99", "commitAfterChange": "cfdd662bec42f5d5e062111a13d87bd30fa87cbf", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean referredByContainer)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean referredByContainer)", "diff": ["-\t\t\t\t// resolve Class-Path: in manifest", "-\t\t\t\tIPath[] chainedJars = ClasspathEntry.resolvedChainedLibraries(path);", "-\t\t\t\tfor (int i = 0, length = chainedJars.length; i < length; i++) {", "-\t\t\t\t\tIPath chainedJar = chainedJars[i];", "-\t\t\t\t\tIJavaModelStatus status = validateLibraryEntry(chainedJar, project, null/*don't check source attachment*/, null/*force computing of entryPathMsg*/);", "-\t\t\t\t\tif (!status.isOK()) {", "-\t\t\t\t\t\tif (referredByContainer && status.getCode() == IJavaModelStatusConstants.INVALID_CLASSPATH)", "-\t\t\t\t\t\t\tcontinue; // ignore this entry (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=250946 )", "-\t\t\t\t\t\treturn status;", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\t// do not validate entries from Class-Path: in manifest", "+\t\t\t\t// (these entries are considered optional since the user cannot act on them)", "+\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=252392"]}], "num": 66954}