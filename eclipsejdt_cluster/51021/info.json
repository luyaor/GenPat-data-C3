{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "73fe49c1ca88aeffc3593da910365e45", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c848acc9a62f326e67f62587599cc57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CommitWorkingCopyOperation.java", "commitBeforeChange": "dec2dac6f78a5ffa915ffd3b73cb386c60b72cae", "commitAfterChange": "eead3352ceb339c6e7d1c285e537cdff0d79d4a6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tJavaElementDeltaBuilder deltaBuilder = new JavaElementDeltaBuilder(original);", "+\t\t\tJavaElementDeltaBuilder deltaBuilder;", "+\t\t\tif (Util.isExcluded(original)) {", "+\t\t\t\tdeltaBuilder = null;", "+\t\t\t} else {", "+\t\t\t\tdeltaBuilder = new JavaElementDeltaBuilder(original);", "+\t\t\t}", "-\t\t\t// build the deltas", "-\t\t\tdeltaBuilder.buildDeltas();", "-\t\t", "-\t\t\t// add the deltas to the list of deltas created during this operation", "-\t\t\tif (deltaBuilder.delta != null) {", "-\t\t\t\taddDelta(deltaBuilder.delta);", "+\t\t\tif (deltaBuilder != null) {", "+\t\t\t\t// build the deltas", "+\t\t\t\tdeltaBuilder.buildDeltas();", "+\t\t\t", "+\t\t\t\t// add the deltas to the list of deltas created during this operation", "+\t\t\t\tif (deltaBuilder.delta != null) {", "+\t\t\t\t\taddDelta(deltaBuilder.delta);", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d37bbef119eabcab5e18657447110f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "6a5c512cff72c8d122f75160d7a3ca9f79b312ee", "commitAfterChange": "2b626d6b99c12d614e4c1d8f27d369b3ddf2a137", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "signatureAfterChange": " \tpublic int discardPerWorkingCopyInfo(CompilationUnit workingCopy) throws JavaModelException", "diff": ["+\t\t\t\t// create the delta builder (this remembers the current content of the working copy)", "+\t\t\t\tJavaElementDeltaBuilder deltaBuilder = null;", "+\t\t\t\tif (workingCopy.owner == DefaultWorkingCopyOwner.PRIMARY) {", "+\t\t\t\t\tdeltaBuilder = new JavaElementDeltaBuilder(workingCopy);", "+\t\t\t\t}", "+", "+\t\t\t\t", "+\t\t\t\t// compute the delta if needed and register it if there are changes", "+\t\t\t\tif (deltaBuilder != null) {", "+\t\t\t\t\tdeltaBuilder.buildDeltas();", "+\t\t\t\t\tif ((deltaBuilder.delta != null) && (deltaBuilder.delta.getAffectedChildren().length > 0)) {", "+\t\t\t\t\t\tgetDeltaProcessor().registerJavaModelDelta(deltaBuilder.delta);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t"]}], "num": 51021}