{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe8b0ba9bd0285214651ed431b24d26e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59af5d94754a8c4336863370d84fd9c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7fe004f7b5f0bcd4b089b0ee8582afd2bc4b79cd", "commitAfterChange": "530c48877da8402a05b3f0b84990331c9acd9df4", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \r private PotentialMatch newPotentialMatch(IResource resource, Openable openable)", "signatureAfterChange": "\r \r private MatchingOpenable newMatchingOpenable(IResource resource, Openable openable)", "diff": ["-private PotentialMatch newPotentialMatch(IResource resource, Openable openable) {\r", "-\tPotentialMatch potentialMatch;\r", "+private MatchingOpenable newMatchingOpenable(IResource resource, Openable openable) {\r", "+\tMatchingOpenable matchingOpenable;\r", "-\t\tpotentialMatch = new PotentialMatch(this, resource, openable);\r", "+\t\tmatchingOpenable = new MatchingOpenable(this, resource, openable);\r", "-\t\t// problem with class path: ignore this potential match\r", "+\t\t// problem with class path: ignore this matching openable\r", "-\treturn potentialMatch;\r", "+\treturn matchingOpenable;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f38761effeffcec33ded59d9a11e183", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7fe004f7b5f0bcd4b089b0ee8582afd2bc4b79cd", "commitAfterChange": "530c48877da8402a05b3f0b84990331c9acd9df4", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r private void addPotentialMatch(IResource resource, Openable openable)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r private void addMatchingOpenable(IResource resource, Openable openable)\r \t\tthrows JavaModelException", "diff": ["-private void addPotentialMatch(IResource resource, Openable openable)\r", "+private void addMatchingOpenable(IResource resource, Openable openable)\r", "-\tPotentialMatch potentialMatch = this.newPotentialMatch(resource, openable);\r", "-\tif (potentialMatch != null) {\r", "-\t\tthis.addPotentialMatch(potentialMatch);\r", "+\tMatchingOpenable matchingOpenable = this.newMatchingOpenable(resource, openable);\r", "+\tif (matchingOpenable != null) {\r", "+\t\tthis.matchingOpenables.add(matchingOpenable);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d08c8cac4eec75698435ebc463c94b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "70416b46b1375461a92d89ffa1cb077778dc6e86", "commitAfterChange": "0c53505dd9d8f221929a96f99e04ff55bfc4fc05", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 5, "signatureBeforeChange": "  void addMatchingOpenable( \t\tIResource resource,  \t\tOpenable openable, \t\tCompilationUnitDeclaration parsedUnit, \t\tMatchSet matchSet)", "signatureAfterChange": "\t \tvoid addPotentialMatch(IResource resource, Openable openable)", "diff": ["+\t}\t", "+\tvoid addPotentialMatch(IResource resource, Openable openable) {", "+\t\tPotentialMatch potentialMatch = new PotentialMatch(this, resource, openable);", "+\t\tthis.potentialMatches.add(potentialMatch);", "+\t}", "-", "-void addMatchingOpenable(", "-\t\tIResource resource, ", "-\t\tOpenable openable,", "-\t\tCompilationUnitDeclaration parsedUnit,", "-\t\tMatchSet matchSet) {", "-\t\t", "-\tMatchingOpenable matchingOpenable = new MatchingOpenable(this, resource, openable, parsedUnit, matchSet);", "-\tif (matchingOpenable != null) {", "-\t\tthis.matchingOpenables.add(matchingOpenable);", "-\t}", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef50fb7543f50dfabf770c364dcf7ec7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7af18694cb84cbe29d3fce9081ee13e2b35d1924", "commitAfterChange": "8062780b8432b1d43d5212d514fdd79cb7aae097", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 34, "signatureBeforeChange": "  private void addMatchingOpenable(IResource resource, Openable openable) \t\tthrows JavaModelException", "signatureAfterChange": "  void addMatchingOpenable( \t\tIResource resource,  \t\tOpenable openable, \t\tCompilationUnitDeclaration parsedUnit, \t\tMatchSet matchSet)", "diff": ["-", "-private void addMatchingOpenable(IResource resource, Openable openable)", "-\t\tthrows JavaModelException {", "+void addMatchingOpenable(", "+\t\tIResource resource, ", "+\t\tOpenable openable,", "+\t\tCompilationUnitDeclaration parsedUnit,", "+\t\tMatchSet matchSet) {", "-\tMatchingOpenable matchingOpenable = this.newMatchingOpenable(resource, openable);", "+\tMatchingOpenable matchingOpenable = new MatchingOpenable(this, resource, openable, parsedUnit, matchSet);"]}], "num": 21392}