{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3853e8cbaeb3879a6c3b1e52e6a7c3ec", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bd3744a050b2a656bf75106f54ac05d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "commitAfterChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-", "-\t// start assembling info for reseting field info by UnconditionalFlowInfo.resetNullInfoForFields():", "-\tClassScope enclosingClassScope = this.scope.enclosingClassScope();", "-\tUnconditionalFlowInfo fieldResetInfo = (enclosingClassScope != null)", "-\t\t\t? (UnconditionalFlowInfo) enclosingClassScope.fieldResetFlowInfo.copy()", "-\t\t\t: FlowInfo.initial(((UnconditionalFlowInfo)staticFieldInfo).maxFieldCount);", "-\tthis.scope.fieldResetFlowInfo = fieldResetInfo;", "-", "-\t\t\t\tstaticFieldInfo = field.analyseCode(this.staticInitializerScope, staticInitializerContext, staticFieldInfo, flowInfo, fieldResetInfo);", "+\t\t\t\tstaticFieldInfo = field.analyseCode(this.staticInitializerScope, staticInitializerContext, staticFieldInfo);", "+\t\t\t\tif (field.binding != null && this.scope.compilerOptions().includeFieldsInNullAnalysis", "+\t\t\t\t\t\t&& ((field.binding.modifiers & ClassFileConstants.AccFinal) != 0)) {", "+\t\t\t\t\t// we won't reset null Info for constant fields", "+\t\t\t\t\tstaticFieldInfo.updateConstantFieldsMask(field.binding);", "+\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\t// make null info from static field visible for non-static @NonNull fields, too.", "-\t\t\t\t\tnonStaticFieldInfo.addNullInfoFrom(staticFieldInfo);", "-\t\t\t\tnonStaticFieldInfo = field.analyseCode(this.initializerScope, initializerContext, nonStaticFieldInfo, flowInfo, fieldResetInfo);", "+\t\t\t\tnonStaticFieldInfo = field.analyseCode(this.initializerScope, initializerContext, nonStaticFieldInfo);", "-\t\t\tflowInfo.addConstantFieldsMask(fieldResetInfo);\t// prevent resetting null info for constant fields inside methods", "-\t\t\tflowInfo.resetNullInfoForFields(fieldResetInfo);\t// only preserve null info for constant fields", "+\t\t\tflowInfo.addConstantFieldsMask(staticFieldUnconditionalInfo);\t// prevent resetting null info for constant fields inside methods", "+\t\t\tflowInfo.resetNullInfoForFields();\t// only preserve null info for constant fields", "-\t\t\tconstructorInfo.addConstantFieldsMask(fieldResetInfo); // prevent resetting null info for constant fields inside c'tor too", "+\t\t\tconstructorInfo.addConstantFieldsMask(staticFieldUnconditionalInfo); // prevent resetting null info for constant fields inside c'tor too"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eca93f7a8840cfb483590f923c437a7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "8c93d4e99b8a943865cb7391e781eba5bb83dfc9", "commitAfterChange": "bd0edd7688142c1743cb6b10766dfc576040f113", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " private void internalAnalyseCode(FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+", "+\t// start assembling info for reseting field info by UnconditionalFlowInfo.resetNullInfoForFields():", "+\tClassScope enclosingClassScope = this.scope.enclosingClassScope();", "+\tUnconditionalFlowInfo fieldResetInfo = (enclosingClassScope != null)", "+\t\t\t? (UnconditionalFlowInfo) enclosingClassScope.fieldResetFlowInfo.copy()", "+\t\t\t: FlowInfo.initial(((UnconditionalFlowInfo)staticFieldInfo).maxFieldCount);", "+\tthis.scope.fieldResetFlowInfo = fieldResetInfo;", "+", "-\t\t\t\tstaticFieldInfo = field.analyseCode(this.staticInitializerScope, staticInitializerContext, staticFieldInfo);", "-\t\t\t\tif (field.binding != null && this.scope.compilerOptions().includeFieldsInNullAnalysis", "-\t\t\t\t\t\t&& ((field.binding.modifiers & ClassFileConstants.AccFinal) != 0)) {", "-\t\t\t\t\t// we won't reset null Info for constant fields", "-\t\t\t\t\tstaticFieldInfo.updateConstantFieldsMask(field.binding);", "-\t\t\t\t}", "+\t\t\t\tstaticFieldInfo = field.analyseCode(this.staticInitializerScope, staticInitializerContext, staticFieldInfo, flowInfo, fieldResetInfo);", "-\t\t\t\tnonStaticFieldInfo = field.analyseCode(this.initializerScope, initializerContext, nonStaticFieldInfo);", "+\t\t\t\tnonStaticFieldInfo = field.analyseCode(this.initializerScope, initializerContext, nonStaticFieldInfo, flowInfo, fieldResetInfo);", "-\t\t\tflowInfo.addConstantFieldsMask(staticFieldUnconditionalInfo);\t// prevent resetting null info for constant fields inside methods", "-\t\t\tflowInfo.resetNullInfoForFields();\t// only preserve null info for constant fields", "+\t\t\tflowInfo.addConstantFieldsMask(fieldResetInfo);\t// prevent resetting null info for constant fields inside methods", "+\t\t\tflowInfo.resetNullInfoForFields(fieldResetInfo);\t// only preserve null info for constant fields", "-\t\t\tconstructorInfo.addConstantFieldsMask(staticFieldUnconditionalInfo); // prevent resetting null info for constant fields inside c'tor too", "+\t\t\tconstructorInfo.addConstantFieldsMask(fieldResetInfo); // prevent resetting null info for constant fields inside c'tor too"]}], "num": 3566}