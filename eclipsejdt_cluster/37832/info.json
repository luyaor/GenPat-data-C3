{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d158dcbaa31101f9b1eedb2c300a9367", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d01d1b17326f378bb484c7aa9cb0f43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d9742de7984a9e631d90e8be4cc775a31ed2c021", "commitAfterChange": "a9aaf4f1804bcfe30f1412a21b3d924fe517af6b", "methodNumberBeforeChange": 921, "methodNumberAfterChange": 921, "signatureBeforeChange": " public void test0901()", "signatureAfterChange": " public void test0901()", "diff": ["-\trunNegativeTest(", "-\t\t// test directory preparation", "-\t\tnew String[] { /* test files */", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "-\t\t\"----------\\n\",", "-\t\t// javac options", "-\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96b941876ffd6dca59c2e95c968a7ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d9742de7984a9e631d90e8be4cc775a31ed2c021", "commitAfterChange": "a9aaf4f1804bcfe30f1412a21b3d924fe517af6b", "methodNumberBeforeChange": 949, "methodNumberAfterChange": 949, "signatureBeforeChange": " public void test0926()", "signatureAfterChange": " public void test0926()", "diff": ["-\trunNegativeTest(", "-\t\t// test directory preparation", "-\t\tnew String[] { /* test files */", "-\t\t\t\"X.java\",", "-\t\t\t\"public class X {\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"\tpublic void foo() {\\n\" + ", "-\t\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<Boolean, Term>> RESULT = null;\\n\" + ", "-\t\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<? extends Term, ? extends Formula>> t = null;\\n\" + ", "-\t\t\t\"\t\tRESULT = NonTerminalSourcePart.create(Tuple.create(true, t.value().fst()));\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"}\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"class Term {\\n\" + ", "-\t\t\t\"}\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"class Formula {\\n\" + ", "-\t\t\t\"}\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"final class NonTerminalSourcePart<V> {\\n\" + ", "-\t\t\t\"\tstatic <V> NonTerminalSourcePart<V> create(final V _value) {\\n\" + ", "-\t\t\t\"\t\treturn null;\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"\tfinal V value() {\\n\" + ", "-\t\t\t\"\t\treturn null;\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"}\\n\" + ", "-\t\t\t\"\\n\" + ", "-\t\t\t\"class Tuple<A, B> {\\n\" + ", "-\t\t\t\"\tpublic static <A, B> Tuple<A, B> create(final A a, final B b) {\\n\" + ", "-\t\t\t\"\t\treturn null;\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"\tpublic A fst() {\\n\" + ", "-\t\t\t\"\t\treturn null;\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "-\t\t\t\"}\\n\"", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\"X.java\",", "+\t\t\"public class X {\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\tpublic void foo() {\\n\" + ", "+\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<Boolean, Term>> RESULT = null;\\n\" + ", "+\t\t\"\t\tNonTerminalSourcePart<? extends Tuple<? extends Term, ? extends Formula>> t = null;\\n\" + ", "+\t\t\"\t\tRESULT = NonTerminalSourcePart.create(Tuple.create(true, t.value().fst()));\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"class Term {\\n\" + ", "+\t\t\"}\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"class Formula {\\n\" + ", "+\t\t\"}\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"final class NonTerminalSourcePart<V> {\\n\" + ", "+\t\t\"\tstatic <V> NonTerminalSourcePart<V> create(final V _value) {\\n\" + ", "+\t\t\"\t\treturn null;\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"\tfinal V value() {\\n\" + ", "+\t\t\"\t\treturn null;\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"class Tuple<A, B> {\\n\" + ", "+\t\t\"\tpublic static <A, B> Tuple<A, B> create(final A a, final B b) {\\n\" + ", "+\t\t\"\t\treturn null;\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"\tpublic A fst() {\\n\" + ", "+\t\t\"\t\treturn null;\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\"", "-\t\t// compiler results", "-\t\t\"----------\\n\" + /* expected compiler log */ ", "+\t\t\"----------\\n\" + ", "-\t\t\"----------\\n\",", "-\t\t// javac options", "-\t\tJavacTestOptions.JavacHasABug.JavacBug6557661 /* javac test options */);", "+\t\t\"----------\\n\");"]}], "num": 37832}