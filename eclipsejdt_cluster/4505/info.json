{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "852a11e1bc0767cc2bbd7c9f2d62cde0", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a8264bbef112dfc76eccb8d6610e52a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "be82097c498d6f583ba790eee925eb3971286a23", "commitAfterChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": "\t \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\t\tfor (int i= 0 ; i < dimensions ; i++) {", "-\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\tif ((this.bits & IsVarArgs) != 0) {", "+\t\t\tfor (int i= 0 ; i < dimensions - 1; i++) {", "+\t\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\toutput.append(\"...\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\tfor (int i= 0 ; i < dimensions; i++) {", "+\t\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f6a1d5fe794d2dbe18ee0712bbc2b7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayTypeReference.java", "commitBeforeChange": "be82097c498d6f583ba790eee925eb3971286a23", "commitAfterChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\t\tsuper.printExpression(indent, output)  ;", "-\t\tfor (int i= 0 ; i < dimensions ; i++) {", "-\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\tsuper.printExpression(indent, output);", "+\t\tif ((this.bits & IsVarArgs) != 0) {", "+\t\t\tfor (int i= 0 ; i < dimensions - 1; i++) {", "+\t\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\toutput.append(\"...\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\tfor (int i= 0 ; i < dimensions; i++) {", "+\t\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da24c654b18e5052bce2623177e8254", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "be82097c498d6f583ba790eee925eb3971286a23", "commitAfterChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\t\tfor (int i= 0 ; i < dimensions ; i++) {", "-\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\tif ((this.bits & IsVarArgs) != 0) {", "+\t\t\tfor (int i= 0 ; i < dimensions - 1; i++) {", "+\t\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\toutput.append(\"...\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\tfor (int i= 0 ; i < dimensions; i++) {", "+\t\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "881bbfce9f48da634fb707773779929c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayQualifiedTypeReference.java", "commitBeforeChange": "be82097c498d6f583ba790eee925eb3971286a23", "commitAfterChange": "0f7389d382d65723d2623818d6e6cb4fb133556c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "signatureAfterChange": " \t \tpublic StringBuffer printExpression(int indent, StringBuffer output)", "diff": ["-\t\tfor (int i = 0 ; i < dimensions ; i++) {", "-\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\tif ((this.bits & IsVarArgs) != 0) {", "+\t\t\tfor (int i= 0 ; i < dimensions - 1; i++) {", "+\t\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\toutput.append(\"...\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\tfor (int i= 0 ; i < dimensions; i++) {", "+\t\t\t\toutput.append(\"[]\"); //$NON-NLS-1$", "+\t\t\t}"]}], "num": 4505}