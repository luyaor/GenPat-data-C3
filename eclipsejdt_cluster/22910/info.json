{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a277658a2a2245c9a0e1a8a266eff09", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b81ba2e33d4a8312df278ea6389e702", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "f3fee415a108a55fda3ea9bd72ad1f7b6dcedccd", "commitAfterChange": "1f1fb00e2dee3a879cb628996e19ab9d99493f3a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tint mode = rightInfo.reachMode();", "+\t\tint previousMode = rightInfo.reachMode();", "-\t\tFlowInfo falseInfo = rightInfo.initsWhenFalse().copy();", "-\t\tfalseInfo.setReachMode(rightInfo.reachMode()); // so merge works fine", "-\t\trightInfo.setReachMode(mode); // reset after falseInfo got extracted", "+\t\tFlowInfo falseMergedInfo = rightInfo.initsWhenFalse().copy();", "+\t\trightInfo.setReachMode(previousMode); // reset after falseMergedInfo got extracted", "-\t\t\t\t\trightInfo.initsWhenFalse().copy());", "+\t\t\t\t\tfalseMergedInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b12e959962010563eeae0c41aa8f12fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "f3fee415a108a55fda3ea9bd72ad1f7b6dcedccd", "commitAfterChange": "1f1fb00e2dee3a879cb628996e19ab9d99493f3a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tint mode = rightInfo.reachMode();", "+\t\tint previousMode = rightInfo.reachMode();", "-\t\tFlowInfo trueInfo = rightInfo.initsWhenTrue().copy();", "-\t\ttrueInfo.setReachMode(rightInfo.reachMode()); // so merge works fine", "-\t\trightInfo.setReachMode(mode); // reset after trueInfo got extracted", "+\t\tFlowInfo trueMergedInfo = rightInfo.initsWhenTrue().copy();", "+\t\trightInfo.setReachMode(previousMode); // reset after trueMergedInfo got extracted", "-\t\t\t\ttrueInfo,", "+\t\t\t\ttrueMergedInfo,"]}], "num": 22910}