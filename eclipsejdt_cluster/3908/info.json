{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffffb146bb77da16913b4554c7e63418", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28df2c47a3fa0050c6091fe4ca6f80c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "8bea847412c36874664a80a329bfe627deff5fa9", "commitAfterChange": "c4145c80a504c8681f4571ff2bd214b778e87107", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] elementsToRefresh, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] elementsToRefresh, IProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\tif (monitor != null && monitor.isCanceled()) ", "+\t\t\tthrow new OperationCanceledException(); ", "+\t\t\tif (monitor != null) monitor.beginTask(\"\", 1); //$NON-NLS-1$", "+", "-\t\t\tif (monitor != null && monitor.isCanceled()) return; "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "757c7f92c88f8de38cea339321bd4b2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "signatureAfterChange": "  public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "diff": ["-\tif (refScope != null)", "-\t\trefScope.recordTypeReference(this);", "-", "+\t// sender from refScope calls recordTypeReference(this)", "-\t\t\t if (superInterfaces.length == 1)", "+\t\t\t if (superInterfaces.length == 1) {", "+\t\t\t\tif (refScope != null)", "+\t\t\t\t\trefScope.recordTypeReference(superInterfaces[0]);", "+\t\t\t }", "+\t\t\tif (refScope != null)", "+\t\t\t\trefScope.recordTypeReference(superclass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82f87db4c2ba52ba507881eeeba6f6e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "signatureAfterChange": "  public MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "diff": ["-\tif (refScope != null)", "-\t\trefScope.recordTypeReference(this);", "-", "+\t// sender from refScope calls recordTypeReference(this)", "-\t\t\t if (superInterfaces.length == 1)", "+\t\t\t if (superInterfaces.length == 1) {", "+\t\t\t\tif (refScope != null)", "+\t\t\t\t\trefScope.recordTypeReference(superInterfaces[0]);", "+\t\t\t }", "+\t\t\tif (refScope != null)", "+\t\t\t\trefScope.recordTypeReference(superclass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d07998bb091ac3c018ff49dede6dbf4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "1995deba8c96efdefeb6a6078c7e55c511780c0c", "commitAfterChange": "c0961b9d73157eff51e68a5c49ea401574d94c27", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "signatureAfterChange": " \tpublic MethodBinding getExactMethod(char[] selector, TypeBinding[] argumentTypes, CompilationUnitScope refScope)", "diff": ["-\t\tif (refScope != null)", "-\t\t\trefScope.recordTypeReference(this);", "-", "+\t\t// sender from refScope calls recordTypeReference(this)", "-\t\t\t\t if (superInterfaces().length == 1)", "+\t\t\t\t if (superInterfaces().length == 1) {", "+\t\t\t\t\tif (refScope != null)", "+\t\t\t\t\t\trefScope.recordTypeReference(superInterfaces[0]);", "+\t\t\t\t }", "+\t\t\t\tif (refScope != null)", "+\t\t\t\t\trefScope.recordTypeReference(superclass);"]}], "num": 3908}