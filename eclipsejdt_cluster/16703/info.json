{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e38c3d52f568b4768b7f146a70263dc0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a710a2de0d56ae9d29f3a1c6eb7be992", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void acceptLocalVariable(LocalVariableBinding binding)", "signatureAfterChange": " public void acceptLocalVariable(LocalVariableBinding binding, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unit)", "diff": ["-public void acceptLocalVariable(LocalVariableBinding binding) {", "+public void acceptLocalVariable(LocalVariableBinding binding, org.eclipse.jdt.internal.compiler.env.ICompilationUnit unit) {", "-\tIJavaElement parent = findLocalElement(local.sourceStart); // findLocalElement() cannot find local variable", "+\tIJavaElement parent = null;", "+\tif (binding.declaringScope.isLambdaSubscope() && unit instanceof ICompilationUnit) {", "+\t\tHashSet existingElements = new HashSet();", "+\t\tHashMap knownScopes = new HashMap();", "+\t\tparent = this.handleFactory.createElement(binding.declaringScope, local.sourceStart, (ICompilationUnit) unit, existingElements, knownScopes);", "+\t} else {\t\t", "+\t\tparent = findLocalElement(local.sourceStart); // findLocalElement() cannot find local variable", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf46cc6af3f2589784a3b6239b0a258f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "287a8246425dec3b8e6cdd428f661326776e45cd", "commitAfterChange": "058b7e49b52c7b18f15a01083d7620b3d5aa8490", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void acceptLocalVariable(LocalVariableBinding binding, CompilationUnitDeclaration parsedUnit)", "signatureAfterChange": " public void acceptLocalVariable(LocalVariableBinding binding)", "diff": ["-public void acceptLocalVariable(LocalVariableBinding binding, CompilationUnitDeclaration parsedUnit) {", "-\tIJavaElement localVar = this.handleFactory.createElement(binding.declaration, parsedUnit, this.openable);", "+}", "+public void acceptLocalVariable(LocalVariableBinding binding) {", "+\tLocalDeclaration local = binding.declaration;", "+\tIJavaElement parent = findLocalElement(local.sourceStart); // findLocalElement() cannot find local variable", "+\tIJavaElement localVar = null;", "+\tif(parent != null) {", "+\t\tlocalVar = new LocalVariable(", "+\t\t\t\t(JavaElement)parent, ", "+\t\t\t\tnew String(local.name), ", "+\t\t\t\tlocal.declarationSourceStart,", "+\t\t\t\tlocal.declarationSourceEnd,", "+\t\t\t\tlocal.sourceStart,", "+\t\t\t\tlocal.sourceEnd,", "+\t\t\t\tUtil.typeSignature(local.type));", "+\t}"]}], "num": 16703}