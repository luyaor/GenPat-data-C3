{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87bda2c42d6cc83f51ead0dd667456a9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05d301a495fb53d39de132fc96c5110c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "271d2b3d0e092e5a47b782d47da593583b7ccd8c", "commitAfterChange": "add436906df07ec6e57178d4ad0752d0dd21a2ab", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": " public void test063()", "signatureAfterChange": " public void test063() throws Exception", "diff": ["-public void test063() {", "+public void test063() throws Exception {", "-\t\ttry {", "-\t\t\tthis.context.evaluate(", "-\t\t\t\tsnippet,", "-\t\t\t\tstackFrame.localVariableTypeNames(),", "-\t\t\t\tstackFrame.localVariableNames(),", "-\t\t\t\tstackFrame.localVariableModifiers(),", "-\t\t\t\tstackFrame.declaringTypeName(),", "-\t\t\t\tstackFrame.isStatic(),", "-\t\t\t\tstackFrame.isConstructorCall(),", "-\t\t\t\tgetEnv(),", "-\t\t\t\tcompilerOpts,", "-\t\t\t\trequestor,", "-\t\t\t\tgetProblemFactory());", "-\t\t} catch (InstallException e) {", "-\t\t\tassertTrue(\"No targetException \" + e.getMessage(), false);", "-\t\t}", "+\t\tthis.context.evaluate(", "+\t\t\tsnippet,", "+\t\t\tstackFrame.localVariableTypeNames(),", "+\t\t\tstackFrame.localVariableNames(),", "+\t\t\tstackFrame.localVariableModifiers(),", "+\t\t\tstackFrame.declaringTypeName(),", "+\t\t\tstackFrame.isStatic(),", "+\t\t\tstackFrame.isConstructorCall(),", "+\t\t\tgetEnv(),", "+\t\t\tcompilerOpts,", "+\t\t\trequestor,", "+\t\t\tgetProblemFactory());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2afb3329160dd8d99c12d11ea7013a37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/DebugEvaluationTest.java", "commitBeforeChange": "271d2b3d0e092e5a47b782d47da593583b7ccd8c", "commitAfterChange": "add436906df07ec6e57178d4ad0752d0dd21a2ab", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void test033()", "signatureAfterChange": " public void test033() throws Exception", "diff": ["-public void test033() {", "+public void test033() throws Exception {", "-\t\ttry {", "-\t\t\tfinal Map compilerOptions = getCompilerOptions();", "-\t\t\tcompilerOptions.put(CompilerOptions.OPTION_ReportUncheckedTypeOperation, CompilerOptions.IGNORE);", "+\t\tfinal Map compilerOptions = getCompilerOptions();", "+\t\tcompilerOptions.put(CompilerOptions.OPTION_ReportUncheckedTypeOperation, CompilerOptions.IGNORE);", "-\t\t\tthis.context.evaluate(", "-\t\t\t\tsnippet,", "-\t\t\t\tstackFrame.localVariableTypeNames(),", "-\t\t\t\tstackFrame.localVariableNames(),", "-\t\t\t\tstackFrame.localVariableModifiers(),", "-\t\t\t\tstackFrame.declaringTypeName(),", "-\t\t\t\tstackFrame.isStatic(),", "-\t\t\t\tstackFrame.isConstructorCall(),", "-\t\t\t\tgetEnv(),", "-\t\t\t\tcompilerOptions,", "-\t\t\t\trequestor,", "-\t\t\t\tgetProblemFactory());", "-\t\t} catch (InstallException e) {", "-\t\t\tassertTrue(\"No targetException \" + e.getMessage(), false);", "-\t\t}", "+\t\tthis.context.evaluate(", "+\t\t\tsnippet,", "+\t\t\tstackFrame.localVariableTypeNames(),", "+\t\t\tstackFrame.localVariableNames(),", "+\t\t\tstackFrame.localVariableModifiers(),", "+\t\t\tstackFrame.declaringTypeName(),", "+\t\t\tstackFrame.isStatic(),", "+\t\t\tstackFrame.isConstructorCall(),", "+\t\t\tgetEnv(),", "+\t\t\tcompilerOptions,", "+\t\t\trequestor,", "+\t\t\tgetProblemFactory());"]}], "num": 65656}