{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c637c05971f221ef8fb8d4d42fc02380", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86d8d25f7558e4ddd329f0f039f9f825", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "c021ce72e16396124fe7577c05839a4d366f8b28", "commitAfterChange": "8d0583b930e1a027c044c449f5420bcd9059f9fc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " boolean doesSubstituteMethodOverride(MethodBinding method, MethodBinding substituteMethod)", "signatureAfterChange": " boolean doesSubstituteMethodOverride(MethodBinding method, MethodBinding substituteMethod)", "diff": ["-\tfor (int i = 0; i < length; i++)", "-\t\tif (params[i] != inheritedParams[i].erasure())", "-\t\t\treturn false;", "+\tfor (int i = 0; i < length; i++) {", "+\t\tif (inheritedParams[i].kind() == Binding.TYPE_PARAMETER) {", "+\t\t\tif (params[i] != ((TypeVariableBinding) inheritedParams[i]).upperBound())", "+\t\t\t\treturn false;", "+\t\t} else if (params[i] != inheritedParams[i]) {", "+\t\t\treturn false;\t\t\t", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f30e2e3f1a390c90553e42a287e667a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "2a3a314298ecbfa699627e12aea382d2f3836e7f", "commitAfterChange": "530c55e93f31f5f02c425be3970d4f24f81f74f6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public final boolean areParameterErasuresEqual(MethodBinding method)", "signatureAfterChange": " public final boolean areParameterErasuresEqual(MethodBinding method)", "diff": ["-\tfor (int i = 0; i < length; i++) {", "-\t\tif (parameters[i].erasure() != args[i].erasure()) return false;", "-\t}", "+\tfor (int i = 0; i < length; i++)", "+\t\tif (parameters[i] != args[i] && parameters[i].erasure() != args[i].erasure())", "+\t\t\treturn false;"]}], "num": 9775}