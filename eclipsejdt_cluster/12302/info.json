{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c92f9ed074718815268cfd2b90b9d11", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19068071096873b5325310a516c38820", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathSourceJar.java", "commitBeforeChange": "1a94a1e6652f1701b8c360d56d755e5438b79c26", "commitAfterChange": "3b002cab97d2ee77b59be67feaf705de255bc1fb", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "signatureAfterChange": "  \tpublic NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["-\t\t\t\treturn new NameEnvironmentAnswer(new CompilationUnit(Util.getInputStreamAsCharArray(this.zipFile.getInputStream(sourceEntry), -1, this.encoding),", "-\t\t\t\t\t\tqualifiedBinaryFileName.substring(0, qualifiedBinaryFileName.length() - 6)  + SUFFIX_STRING_java, this.encoding),", "+\t\t\t\treturn new NameEnvironmentAnswer(", "+\t\t\t\t\t\tnew CompilationUnit(", "+\t\t\t\t\t\t\t\tUtil.getInputStreamAsCharArray(this.zipFile.getInputStream(sourceEntry),", "+\t\t\t\t\t\t\t\t\t\t-1, this.encoding),", "+\t\t\t\t\t\tqualifiedBinaryFileName.substring(0, qualifiedBinaryFileName.length() - 6)  + SUFFIX_STRING_java, ", "+\t\t\t\t\t\tthis.encoding, this.destinationPath),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7e188a789f05cb5fd87a26e0b6fc72a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathSourceJar.java", "commitBeforeChange": "6d3be383a9d85adb7b8fae15deeb4ff07304b558", "commitAfterChange": "ad990078bc71c5ba4377a1b73bf726012790eb02", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName, boolean asBinaryOnly)", "signatureAfterChange": "  \tpublic NameEnvironmentAnswer findClass(char[] typeName, String qualifiedPackageName, String qualifiedBinaryFileName, boolean asBinaryOnly)", "diff": ["+\t\t\t\tInputStream stream = null;", "+\t\t\t\tchar[] contents = null; ", "+\t\t\t\ttry {", "+\t\t\t\t\tstream = this.zipFile.getInputStream(sourceEntry);", "+\t\t\t\t\tcontents = Util.getInputStreamAsCharArray(stream, -1, this.encoding);", "+\t\t\t\t} finally {", "+\t\t\t\t\tif (stream != null)", "+\t\t\t\t\t\tstream.close();", "+\t\t\t\t}", "-\t\t\t\t\t\tnew CompilationUnit(", "-\t\t\t\t\t\t\t\tUtil.getInputStreamAsCharArray(this.zipFile.getInputStream(sourceEntry),", "-\t\t\t\t\t\t\t\t\t\t-1, this.encoding),", "-\t\t\t\t\t\tqualifiedBinaryFileName.substring(0, qualifiedBinaryFileName.length() - 6)  + SUFFIX_STRING_java,", "-\t\t\t\t\t\tthis.encoding, this.destinationPath),", "-\t\t\t\t\t\tfetchAccessRestriction(qualifiedBinaryFileName));", "+\t\t\t\t\tnew CompilationUnit(", "+\t\t\t\t\t\tcontents,", "+\t\t\t\t\t\tqualifiedBinaryFileName.substring(0, qualifiedBinaryFileName.length() - 6) + SUFFIX_STRING_java,", "+\t\t\t\t\t\tthis.encoding,", "+\t\t\t\t\t\tthis.destinationPath),", "+\t\t\t\t\tfetchAccessRestriction(qualifiedBinaryFileName));"]}], "num": 12302}