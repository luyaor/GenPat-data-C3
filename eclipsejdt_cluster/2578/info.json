{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aa5066ee28543cd3ba6b6598c143f286", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "670d4b2870025abd46e1e5ab95848b9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public void acceptImport(int declarationStart, int declarationEnd, char[] name, boolean onDemand)", "signatureAfterChange": "\r \tpublic void acceptImport(\r \t\tint declarationStart,\r \t\tint declarationEnd,\r \t\tchar[] name,\r \t\tboolean onDemand)", "diff": ["- */\r", "-public void acceptImport(int declarationStart, int declarationEnd, char[] name, boolean onDemand) {\r", "-\t//do nothing\r", "-}\r", "+\t */\r", "+\tpublic void acceptImport(\r", "+\t\tint declarationStart,\r", "+\t\tint declarationEnd,\r", "+\t\tchar[] name,\r", "+\t\tboolean onDemand) {\r", "+\t\tchar[][] imports = (char[][]) this.importsTable.get(fType);\r", "+\t\tint importsCounter;\r", "+\t\tif (imports == null) {\r", "+\t\t\timports = new char[5][];\r", "+\t\t\timportsCounter = 0;\r", "+\t\t} else {\r", "+\t\t\timportsCounter = ((Integer) this.importsCounterTable.get(fType)).intValue();\r", "+\t\t}\r", "+\t\tif (imports.length == importsCounter) {\r", "+\t\t\tSystem.arraycopy(\r", "+\t\t\t\timports,\r", "+\t\t\t\t0,\r", "+\t\t\t\t(imports = new char[importsCounter * 2][]),\r", "+\t\t\t\t0,\r", "+\t\t\t\timportsCounter);\r", "+\t\t}\r", "+\t\timports[importsCounter++] = name;\r", "+\t\tthis.importsTable.put(fType, imports);\r", "+\t\tthis.importsCounterTable.put(fType, new Integer(importsCounter));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db89c43f003648273f56712146da8d37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public void acceptImport(int declarationStart, int declarationEnd, char[] name, boolean onDemand)", "signatureAfterChange": "\r \tpublic void acceptImport(\r \t\tint declarationStart,\r \t\tint declarationEnd,\r \t\tchar[] name,\r \t\tboolean onDemand)", "diff": ["- */\r", "-public void acceptImport(int declarationStart, int declarationEnd, char[] name, boolean onDemand) {\r", "-\t//do nothing\r", "-}\r", "+\t */\r", "+\tpublic void acceptImport(\r", "+\t\tint declarationStart,\r", "+\t\tint declarationEnd,\r", "+\t\tchar[] name,\r", "+\t\tboolean onDemand) {\r", "+\t\tchar[][] imports = (char[][]) this.importsTable.get(fType);\r", "+\t\tint importsCounter;\r", "+\t\tif (imports == null) {\r", "+\t\t\timports = new char[5][];\r", "+\t\t\timportsCounter = 0;\r", "+\t\t} else {\r", "+\t\t\timportsCounter = ((Integer) this.importsCounterTable.get(fType)).intValue();\r", "+\t\t}\r", "+\t\tif (imports.length == importsCounter) {\r", "+\t\t\tSystem.arraycopy(\r", "+\t\t\t\timports,\r", "+\t\t\t\t0,\r", "+\t\t\t\t(imports = new char[importsCounter * 2][]),\r", "+\t\t\t\t0,\r", "+\t\t\t\timportsCounter);\r", "+\t\t}\r", "+\t\timports[importsCounter++] = name;\r", "+\t\tthis.importsTable.put(fType, imports);\r", "+\t\tthis.importsCounterTable.put(fType, new Integer(importsCounter));\r"]}], "num": 2578}