{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89f072eee080f0607e6dde9e8f6c44ba", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "accdeefad49bd553682b2f1d55805c3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "4addbf3fcf740f0ae7bd5f62f816a19ffc370ba8", "commitAfterChange": "0d32c20ed2cca4af752cdfe8890dae5f9b83ecc6", "methodNumberBeforeChange": 118, "methodNumberAfterChange": 118, "signatureBeforeChange": "  \tprivate void findVariableNames(char[] name, TypeReference type , char[][] discouragedNames, char[][] forbiddenNames, int kind, int modifiers)", "signatureAfterChange": "  \tprivate void findVariableNames(char[] name, TypeReference type , char[][] discouragedNames, char[][] forbiddenNames, int kind, int modifiers)", "diff": ["-", "-\t\t\ttype.resolvedType != null &&", "-\t\t\ttype.resolvedType.problemId() == ProblemReasons.NoError){", "+\t\t\ttype.resolvedType != null) {", "-\t\t\tfindVariableName(", "-\t\t\t\tname,", "-\t\t\t\ttb.leafComponentType().qualifiedPackageName(),", "-\t\t\t\ttb.leafComponentType().qualifiedSourceName(),", "-\t\t\t\ttb.leafComponentType().sourceName(),", "-\t\t\t\ttb,", "-\t\t\t\tdiscouragedNames,", "-\t\t\t\tforbiddenNames,", "-\t\t\t\ttype.dimensions(),", "-\t\t\t\tkind,", "-\t\t\t\tmodifiers);", "-\t\t}/*\telse {", "-\t\t\tchar[][] typeName = type.getTypeName();", "-\t\t\tfindVariableName(", "-\t\t\t\tname,", "-\t\t\t\tNoChar,", "-\t\t\t\tCharOperation.concatWith(typeName, '.'),", "-\t\t\t\ttypeName[typeName.length - 1],", "-\t\t\t\texcludeNames,", "-\t\t\t\ttype.dimensions());", "-\t\t}*/", "+\t\t\t", "+\t\t\tif (tb.problemId() == ProblemReasons.NoError &&", "+\t\t\t\t\ttb != Scope.getBaseType(VOID)) {", "+\t\t\t\tfindVariableName(", "+\t\t\t\t\tname,", "+\t\t\t\t\ttb.leafComponentType().qualifiedPackageName(),", "+\t\t\t\t\ttb.leafComponentType().qualifiedSourceName(),", "+\t\t\t\t\ttb.leafComponentType().sourceName(),", "+\t\t\t\t\ttb,", "+\t\t\t\t\tdiscouragedNames,", "+\t\t\t\t\tforbiddenNames,", "+\t\t\t\t\ttype.dimensions(),", "+\t\t\t\t\tkind,", "+\t\t\t\t\tmodifiers);", "+\t\t\t}", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9b2c6c9e0ae9ca8f091044e80895bb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "ccb3e5525c54dfe23c1e360c5b523dc7389a8449", "commitAfterChange": "d21bc313cdd8902b8761ed6e8db08c82a2b9b3d0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \r \tprivate void findConstructors(\r \t\tReferenceBinding currentType,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \r \tprivate void findConstructors(\r \t\tReferenceBinding currentType,\r \t\tTypeBinding[] argTypes,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tboolean forAnonymousType)", "diff": ["-\t\tInvocationSite invocationSite) {\r", "+\t\tInvocationSite invocationSite,\r", "+\t\tboolean forAnonymousType) {\r", "-\r", "-\t\t\t\trequestor.acceptMethod(\r", "-\t\t\t\t\tcurrentType.qualifiedPackageName(),\r", "-\t\t\t\t\tcurrentType.qualifiedSourceName(),\r", "-\t\t\t\t\tcurrentType.sourceName(),\r", "-\t\t\t\t\tparameterPackageNames,\r", "-\t\t\t\t\tparameterTypeNames,\r", "-\t\t\t\t\tparameterNames,\r", "-\t\t\t\t\tTypeConstants.NoChar,\r", "-\t\t\t\t\tTypeConstants.NoChar,\r", "-\t\t\t\t\tcompletion,\r", "-\t\t\t\t\tconstructor.modifiers,\r", "-\t\t\t\t\tendPosition,\r", "-\t\t\t\t\tendPosition);\r", "+\t\t\t\t\t\r", "+\t\t\t\tif(forAnonymousType){\r", "+\t\t\t\t\trequestor.acceptAnonymousType(\r", "+\t\t\t\t\t\tcurrentType.qualifiedPackageName(),\r", "+\t\t\t\t\t\tcurrentType.qualifiedSourceName(),\r", "+\t\t\t\t\t\tparameterPackageNames,\r", "+\t\t\t\t\t\tparameterTypeNames,\r", "+\t\t\t\t\t\tparameterNames,\r", "+\t\t\t\t\t\tcompletion,\r", "+\t\t\t\t\t\tconstructor.modifiers,\r", "+\t\t\t\t\t\tendPosition,\r", "+\t\t\t\t\t\tendPosition);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\trequestor.acceptMethod(\r", "+\t\t\t\t\t\tcurrentType.qualifiedPackageName(),\r", "+\t\t\t\t\t\tcurrentType.qualifiedSourceName(),\r", "+\t\t\t\t\t\tcurrentType.sourceName(),\r", "+\t\t\t\t\t\tparameterPackageNames,\r", "+\t\t\t\t\t\tparameterTypeNames,\r", "+\t\t\t\t\t\tparameterNames,\r", "+\t\t\t\t\t\tTypeConstants.NoChar,\r", "+\t\t\t\t\t\tTypeConstants.NoChar,\r", "+\t\t\t\t\t\tcompletion,\r", "+\t\t\t\t\t\tconstructor.modifiers,\r", "+\t\t\t\t\t\tendPosition,\r", "+\t\t\t\t\t\tendPosition);\r", "+\t\t\t\t}\r"]}], "num": 4908}