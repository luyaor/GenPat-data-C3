{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "198bddb3a983948925e2234959e476e3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a63b75cd5229904550da8f74ace9405c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "1209010fd2d01b73be2d5ddcc68dee954a4dfb12", "commitAfterChange": "e2d64401ee163038583789c4f8e64653502b280a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": "\r public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\tif (binding.canBeSeenBy(receiverType, this, currentScope)) {\r", "-\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = binding.isStatic()));\r", "+\tif (this.codegenBinding.canBeSeenBy(receiverType, this, currentScope)) {\r", "+\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));\r", "-\t\t\tcodeStream.getstatic(binding);\r", "+\t\t\tcodeStream.getstatic(this.codegenBinding);\r", "-\t\t\tcodeStream.getfield(binding);\r", "+\t\t\tcodeStream.getfield(this.codegenBinding);\r", "-\t\tfieldStore(codeStream, binding, null, valueRequired);\r", "+\t\tfieldStore(codeStream, this.codegenBinding, null, valueRequired);\r", "-\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = binding.isStatic()));\r", "+\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));\r", "-\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulationForField(binding);\r", "+\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulationForField(this.codegenBinding);\r", "-\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedReadAccessForField(binding);\r", "+\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedReadAccessForField(this.codegenBinding);\r", "-\t\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = binding.isStatic()));\r", "+\t\t\treceiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));\r", "-\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedReadAccessForField(binding);\r", "+\t\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedReadAccessForField(this.codegenBinding);\r", "-\t\t\tif ((binding.type == LongBinding) || (binding.type == DoubleBinding)) {\r", "+\t\t\tif ((this.codegenBinding.type == LongBinding) || (this.codegenBinding.type == DoubleBinding)) {\r", "-\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedWriteAccessForField(binding);\r", "+\t\t((CodeSnippetCodeStream) codeStream).generateEmulatedWriteAccessForField(this.codegenBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef6244e028ca0ff0f6745440b3b2d95a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetFieldReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": "  public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-", "-\tif (this.codegenBinding.canBeSeenBy(this.receiverType, this, currentScope)) {", "-\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "+\tFieldBinding codegenBinding = this.binding.original();", "+\tif (codegenBinding.canBeSeenBy(this.actualReceiverType, this, currentScope)) {", "+\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = codegenBinding.isStatic()));", "+\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, codegenBinding, this.actualReceiverType, this.receiver.isImplicitThis());", "-\t\t\tcodeStream.getstatic(this.codegenBinding);", "+\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getstatic, codegenBinding, constantPoolDeclaringClass);", "-\t\t\tcodeStream.getfield(this.codegenBinding);", "+\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getfield, codegenBinding, constantPoolDeclaringClass);", "-\t\tfieldStore(codeStream, this.codegenBinding, null, valueRequired);", "+\t\tfieldStore(currentScope, codeStream, codegenBinding, null, this.actualReceiverType, this.receiver.isImplicitThis(), valueRequired);", "-\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = this.codegenBinding.isStatic()));", "+\t\tthis.receiver.generateCode(currentScope, codeStream, !(isStatic = codegenBinding.isStatic()));", "-\t\t\tcodeStream.generateEmulationForField(this.codegenBinding);", "+\t\t\tcodeStream.generateEmulationForField(codegenBinding);", "-\t\t\tcodeStream.generateEmulatedReadAccessForField(this.codegenBinding);", "+\t\t\tcodeStream.generateEmulatedReadAccessForField(codegenBinding);", "-\t\t\tcodeStream.generateEmulatedReadAccessForField(this.codegenBinding);", "+\t\t\tcodeStream.generateEmulatedReadAccessForField(codegenBinding);", "-\t\t\tif ((this.codegenBinding.type == TypeBinding.LONG) || (this.codegenBinding.type == TypeBinding.DOUBLE)) {", "+\t\t\tif ((codegenBinding.type == TypeBinding.LONG) || (codegenBinding.type == TypeBinding.DOUBLE)) {", "-\t\tcodeStream.generateEmulatedWriteAccessForField(this.codegenBinding);", "+\t\tcodeStream.generateEmulatedWriteAccessForField(codegenBinding);"]}], "num": 26986}