{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f34073488ee53c322fc7b8f710f64f2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8fb61606629e2d9a492a5da571d55d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void testAttachSourceWithRootPath() throws JavaModelException", "signatureAfterChange": " public void testRootPath() throws JavaModelException", "diff": ["- */", "-public void testAttachSourceWithRootPath() throws JavaModelException {", "-\tIJavaProject project = getJavaProject(\"AttachSourceTests\");", "-\tIFile jar = (IFile) project.getProject().findMember(\"attach2.jar\");", "-\tIFile srcZip=(IFile) project.getProject().findMember(\"attach2src.zip\");", "-\tJarPackageFragmentRoot root = (JarPackageFragmentRoot) project.getPackageFragmentRoot(jar);", "-\troot.attachSource(srcZip.getFullPath(), new Path(\"src/nested\"), null);", "-", "-\tIClassFile cf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "-\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "-\troot.close();", "-\tcf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "-\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "-", "-\tIPath rootSAPath= root.getSourceAttachmentRootPath();", "-\tassertEquals(\"Unexpected source attachment root path for \" + root.getPath(), \"src/nested\", rootSAPath.toString());", "-", "-\tIPath saPath= root.getSourceAttachmentPath();", "-\tassertEquals(\"Unexpected source attachment path for \" + root.getPath(), \"/AttachSourceTests/attach2src.zip\", saPath.toString());", "-\t", "-\troot.close();", "-}", "+ */", "+public void testRootPath() throws JavaModelException {", "+\tIJavaProject project = getJavaProject(\"AttachSourceTests\");", "+\tIFile jar = (IFile) project.getProject().findMember(\"attach2.jar\");", "+\tIFile srcZip=(IFile) project.getProject().findMember(\"attach2src.zip\");", "+\tJarPackageFragmentRoot root = (JarPackageFragmentRoot) project.getPackageFragmentRoot(jar);", "+\troot.attachSource(srcZip.getFullPath(), new Path(\"src/nested\"), null);", "+\tIClassFile cf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "+\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "+\troot.close();", "+\tcf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "+\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "+", "+\tIPath rootSAPath= root.getSourceAttachmentRootPath();", "+\tassertEquals(\"Unexpected source attachment root path for \" + root.getPath(), \"src/nested\", rootSAPath.toString());", "+", "+\tIPath saPath= root.getSourceAttachmentPath();", "+\tassertEquals(\"Unexpected source attachment path for \" + root.getPath(), \"/AttachSourceTests/attach2src.zip\", saPath.toString());", "+\t", "+\troot.close();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de2ebb9587484c9bc3ec05e4382a8f0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "1af26d01cfd72849d8c290dd25ccb7fc62852780", "commitAfterChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testAttachSourceWithRootPath() throws JavaModelException", "signatureAfterChange": " public void testAttachSourceWithRootPath() throws JavaModelException", "diff": ["-\ttry {", "-\t\tIJavaProject project = getJavaProject(\"AttachSourceTests\");", "-\t\tIFile jar = (IFile) project.getProject().findMember(\"attach2.jar\");", "-\t\tIFile srcZip=(IFile) project.getProject().findMember(\"attach2src.zip\");", "-\t\tJarPackageFragmentRoot jarRoot = (JarPackageFragmentRoot) project.getPackageFragmentRoot(jar);", "-\t\tjarRoot.attachSource(srcZip.getFullPath(), new Path(\"src/nested\"), null);", "+\tIJavaProject project = getJavaProject(\"AttachSourceTests\");", "+\tIFile jar = (IFile) project.getProject().findMember(\"attach2.jar\");", "+\tIFile srcZip=(IFile) project.getProject().findMember(\"attach2src.zip\");", "+\tJarPackageFragmentRoot root = (JarPackageFragmentRoot) project.getPackageFragmentRoot(jar);", "+\troot.attachSource(srcZip.getFullPath(), new Path(\"src/nested\"), null);", "-\t\tIClassFile cf = jarRoot.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "-\t\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "-\t\tjarRoot.close();", "-\t\tcf = jarRoot.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "-\t\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "+\tIClassFile cf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "+\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "+\troot.close();", "+\tcf = root.getPackageFragment(\"x.y\").getClassFile(\"B.class\");", "+\tassertTrue(\"source code does not exist for the entire attached compilation unit\", cf.getSource() != null);", "-\t\tIPath rootSAPath= jarRoot.getSourceAttachmentRootPath();", "-\t\tassertEquals(\"Unexpected source attachment root path for \" + jarRoot.getPath(), \"src/nested\", rootSAPath.toString());", "+\tIPath rootSAPath= root.getSourceAttachmentRootPath();", "+\tassertEquals(\"Unexpected source attachment root path for \" + root.getPath(), \"src/nested\", rootSAPath.toString());", "-\t\tIPath saPath= jarRoot.getSourceAttachmentPath();", "-\t\tassertEquals(\"Unexpected source attachment path for \" + jarRoot.getPath(), \"/AttachSourceTests/attach2src.zip\", saPath.toString());", "-\t\t", "-\t\tjarRoot.close();", "-\t} catch (JavaModelException jme) {", "-\t\tfail(\"Attach source operation creation failed\");", "-\t}", "+\tIPath saPath= root.getSourceAttachmentPath();", "+\tassertEquals(\"Unexpected source attachment path for \" + root.getPath(), \"/AttachSourceTests/attach2src.zip\", saPath.toString());", "+\t", "+\troot.close();"]}], "num": 24022}