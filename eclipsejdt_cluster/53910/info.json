{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbc76ecf12ad17dbabf8aaf6a1566550", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484838d51611aeabaa777ba4e1d6cf28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedSingleTypeReference.java", "commitBeforeChange": "2aca7755ada443ed3cdced7d77f812416f0a5df2", "commitAfterChange": "ec4f5191bf93babf60e3a4a12896e663ade5817f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding enclosingType, boolean checkBounds)", "diff": ["-\t\tif (checkBounds) { // otherwise will do it in Scope.connectTypeVariables() or generic method resolution", "+\t\tif (checkBounds) // otherwise will do it in Scope.connectTypeVariables() or generic method resolution", "-\t\t}", "+\t\telse", "+\t\t\tscope.deferBoundCheck(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a961a2161bdd013cbb2a68d85e98ae6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ParameterizedQualifiedTypeReference.java", "commitBeforeChange": "2aca7755ada443ed3cdced7d77f812416f0a5df2", "commitAfterChange": "ec4f5191bf93babf60e3a4a12896e663ade5817f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "signatureAfterChange": " \tprivate TypeBinding internalResolveType(Scope scope, boolean checkBounds)", "diff": ["+\t\t\t\telse", "+\t\t\t\t\tscope.deferBoundCheck(this);"]}], "num": 53910}