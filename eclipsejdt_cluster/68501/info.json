{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9d9e0b1875d2f2a43bae438b234760c3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "053bd59d7a38392915bf243fa8b36098", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "f372eb4169324cad87b7cff6d25b5939cf1574c9", "commitAfterChange": "aac9fc656ae32e1d44c924b003ab11a649890335", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tprivate void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r \tprivate void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\t// target cannot be 1.4 if compliance is 1.3\r", "+\t\tif (options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_4)\r", "+\t\t\t\t&& !options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)){ \r", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget14\", (String)options.get(CompilerOptions.OPTION_Compliance))); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8afad19d7448e282f17b81ab07e750b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "bf1ba1c1732b0be00fbd03cfd8ae394b6a169e63", "commitAfterChange": "debb51f61b0b4a5b1a6926f67a451ba72125546c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void evaluateCodeSnippet( \tString codeSnippet,  \tString[] localVariableTypeNames,  \tString[] localVariableNames,  \tint[] localVariableModifiers,  \tIType declaringType,  \tboolean isStatic,  \tboolean isConstructorCall,  \tICodeSnippetRequestor requestor,  \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "signatureAfterChange": " public void evaluateCodeSnippet( \tString codeSnippet,  \tString[] localVariableTypeNames,  \tString[] localVariableNames,  \tint[] localVariableModifiers,  \tIType declaringType,  \tboolean isStatic,  \tboolean isConstructorCall,  \tICodeSnippetRequestor requestor,  \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "diff": ["+\tMap options = this.project.getOptions(true);", "+\t\t\t\t// turn off import complaints for implicitly added ones", "+\t\t\t\toptions.put(CompilerOptions.OPTION_ReportUnusedImport, CompilerOptions.IGNORE);", "+\t\t\t\toptions.put(CompilerOptions.OPTION_ReportInvalidImport, CompilerOptions.IGNORE);", "+\t\t\t\t\t// turn off import complaints for implicitly added ones", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_ReportUnusedImport, CompilerOptions.IGNORE);", "+\t\t\t\t\toptions.put(CompilerOptions.OPTION_ReportInvalidImport, CompilerOptions.IGNORE);", "-\t\t\tthis.project.getOptions(true), ", "+\t\t\toptions, "]}], "num": 68501}