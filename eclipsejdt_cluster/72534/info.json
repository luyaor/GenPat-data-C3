{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bbdb0db4b3d0e4e5d07166738498fda5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92ae0c1860264b340a25410025361f93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalCompletionProposal.java", "commitBeforeChange": "53c01b1adab482ab7f920989323f3cac2f399cfd", "commitAfterChange": "1518d3ade03d9d9dfb08bcae5ab3261eea2b095b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprotected char[][] findConstructorParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] paramTypeNames)", "signatureAfterChange": " \t \tprotected char[][] findConstructorParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] paramTypeNames)", "diff": ["-\t\t\tString[] args = new String[length];", "-\t\t\tfor(int i = 0;\ti< length ; i++){", "-\t\t\t\targs[i] = new String(paramTypeNames[i]);", "-\t\t\t}", "-\t\t\tIMethod method = type.getMethod(new String(selector),args);", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=316937", "+\t\t\t// BinaryType#getMethod() creates a new instance of BinaryMethod, which is a dummy.", "+\t\t\t// Instead we have to use IType#findMethods() to get a handle to the method of our interest.", "+\t\t\tIMethod method = findMethod(type, selector, paramTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c54b06ffc017f1581230a1aa2d9dab1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalCompletionProposal.java", "commitBeforeChange": "53c01b1adab482ab7f920989323f3cac2f399cfd", "commitAfterChange": "1518d3ade03d9d9dfb08bcae5ab3261eea2b095b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprotected char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] paramTypeNames)", "signatureAfterChange": " \t \tprotected char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] paramTypeNames)", "diff": ["-\t\t\tString[] args = new String[length];", "-\t\t\tfor(int i = 0;\ti< length ; i++){", "-\t\t\t\targs[i] = new String(paramTypeNames[i]);", "-\t\t\t}", "-\t\t\tIMethod method = type.getMethod(new String(selector),args);", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=316937", "+\t\t\t// BinaryType#getMethod() creates a new instance of BinaryMethod, which is a dummy.", "+\t\t\t// Instead we have to use IType#findMethods() to get a handle to the method of our interest.", "+\t\t\tIMethod method = findMethod(type, selector, paramTypeNames);"]}], "num": 72534}