{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5d021174e5dd0fa8d3317a923b4fa22a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f87980e6a3c7c9eb165e95dc02f56bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic SyntheticMethodBinding(FieldBinding targetField, ReferenceBinding declaringClass, TypeBinding enumBinding, char[] selector)", "signatureAfterChange": "  \tpublic SyntheticMethodBinding(FieldBinding targetField, ReferenceBinding declaringClass, TypeBinding enumBinding, char[] selector)", "diff": ["-\t\t\t\tMethodBinding[] methods = declaringSourceType.methods;", "-\t\t\t\tfor (int i = 0, length = methods.length; i < length; i++) {", "-\t\t\t\t\tif (CharOperation.equals(this.selector, methods[i].selector) && this.areParametersEqual(methods[i])) {", "-\t\t\t\t\t\tneedRename = true;", "-\t\t\t\t\t\tbreak check;", "+\t\t\t\tlong range;", "+\t\t\t\tMethodBinding[] methods = declaringSourceType.methods();", "+\t\t\t\tif ((range = ReferenceBinding.binarySearch(this.selector, methods)) >= 0) {", "+\t\t\t\t\tint paramCount = this.parameters.length;", "+\t\t\t\t\tnextMethod: for (int imethod = (int)range, end = (int)(range >> 32); imethod <= end; imethod++) {", "+\t\t\t\t\t\tMethodBinding method = methods[imethod];\t\t\t", "+\t\t\t\t\t\tif (method.parameters.length == paramCount) {", "+\t\t\t\t\t\t\tTypeBinding[] toMatch = method.parameters;", "+\t\t\t\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\t\t\t\t\tif (toMatch[i] != this.parameters[i]) {", "+\t\t\t\t\t\t\t\t\tcontinue nextMethod;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tneedRename = true;", "+\t\t\t\t\t\t\tbreak check;", "+\t\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\t}\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bda0505001d65e0229b3a088d851f486", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticMethodBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic SyntheticMethodBinding(FieldBinding targetField, boolean isReadAccess, ReferenceBinding declaringClass)", "signatureAfterChange": " \t \tpublic SyntheticMethodBinding(FieldBinding targetField, boolean isReadAccess, ReferenceBinding declaringClass)", "diff": ["-\t\t\t\tMethodBinding[] methods = declaringSourceType.methods;", "-\t\t\t\tfor (int i = 0, length = methods.length; i < length; i++) {", "-\t\t\t\t\tif (CharOperation.equals(this.selector, methods[i].selector) && this.areParametersEqual(methods[i])) {", "-\t\t\t\t\t\tneedRename = true;", "-\t\t\t\t\t\tbreak check;", "+\t\t\t\tlong range;", "+\t\t\t\tMethodBinding[] methods = declaringSourceType.methods();", "+\t\t\t\tif ((range = ReferenceBinding.binarySearch(this.selector, methods)) >= 0) {", "+\t\t\t\t\tint paramCount = this.parameters.length;", "+\t\t\t\t\tnextMethod: for (int imethod = (int)range, end = (int)(range >> 32); imethod <= end; imethod++) {", "+\t\t\t\t\t\tMethodBinding method = methods[imethod];\t\t\t", "+\t\t\t\t\t\tif (method.parameters.length == paramCount) {", "+\t\t\t\t\t\t\tTypeBinding[] toMatch = method.parameters;", "+\t\t\t\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\t\t\t\t\tif (toMatch[i] != this.parameters[i]) {", "+\t\t\t\t\t\t\t\t\tcontinue nextMethod;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tneedRename = true;", "+\t\t\t\t\t\t\tbreak check;", "+\t\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\t}\t\t\t\t"]}], "num": 67524}