{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4941f6c064c959062f50768ceb7d52db", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0394de1e6039d6c28adbd478e8b759af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayAccess.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Expression getArray()", "signatureAfterChange": "  \tpublic Expression getArray()", "diff": ["-\t\tif (arrayExpression == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetArray(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.arrayExpression == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.arrayExpression = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.arrayExpression, ARRAY_PROPERTY);", "-\t\treturn arrayExpression;", "+\t\treturn this.arrayExpression;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3209cd29bdd9c60a52319e812240e329", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ArrayAccess.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic Expression getIndex()", "signatureAfterChange": "  \tpublic Expression getIndex()", "diff": ["-\t\tif (indexExpression == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetIndex(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.indexExpression == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.indexExpression = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.indexExpression, INDEX_PROPERTY);", "-\t\treturn indexExpression;", "+\t\treturn this.indexExpression;"]}], "num": 12244}