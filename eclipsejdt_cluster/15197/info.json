{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "386ec16dad36b49a841af476a4abd900", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d0e70a49446487196a086cc077aefaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic final ReferenceBinding findLocalType(char[] name)", "signatureAfterChange": " public final ReferenceBinding findLocalType(char[] name)", "diff": ["+ */", "+public final ReferenceBinding findLocalType(char[] name) {", "+\tlong compliance = compilerOptions().complianceLevel;", "+\tfor (int i = 0, length = this.subscopeCount; i < length; i++) {", "+\t\tif (this.subscopes[i] instanceof ClassScope) {", "+\t\t\tLocalTypeBinding sourceType = (LocalTypeBinding)((ClassScope) this.subscopes[i]).referenceContext.binding;", "+\t\t\t// from 1.4 on, local types should not be accessed across switch case blocks (52221)\t\t\t\t", "+\t\t\tif (compliance >= ClassFileConstants.JDK1_4 && sourceType.enclosingCase != null) {", "+\t\t\t\tif (!this.isInsideCase(sourceType.enclosingCase)) {", "+\t\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t\tif (CharOperation.equals(sourceType.sourceName(), name))", "+\t\t\t\treturn sourceType;", "+\t\t}", "+\t}", "+\treturn null;", "+}", "-\t */", "-\tpublic final ReferenceBinding findLocalType(char[] name) {", "-", "-\t\tlong compliance = compilerOptions().complianceLevel;", "-\t\tfor (int i = 0, length = subscopeCount; i < length; i++) {", "-\t\t\tif (subscopes[i] instanceof ClassScope) {", "-\t\t\t\tLocalTypeBinding sourceType = (LocalTypeBinding)((ClassScope) subscopes[i]).referenceContext.binding;", "-\t\t\t\t// from 1.4 on, local types should not be accessed across switch case blocks (52221)\t\t\t\t", "-\t\t\t\tif (compliance >= ClassFileConstants.JDK1_4 && sourceType.enclosingCase != null) {", "-\t\t\t\t\tif (!this.isInsideCase(sourceType.enclosingCase)) {", "-\t\t\t\t\t\tcontinue;", "-\t\t\t\tif (CharOperation.equals(sourceType.sourceName(), name))", "-\t\t\t\t\treturn sourceType;", "-\t\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4904f98d89cb0b0457f421fc32bb0ac0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/ProjectResourceCopier.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r \tpublic void copyAllResourcesOnClasspath()", "signatureAfterChange": "\r public void copyAllResourcesOnClasspath()", "diff": ["+}\r", "+public void copyAllResourcesOnClasspath(){\r", "-\tpublic void copyAllResourcesOnClasspath() {\r", "-\r", "-\t\tboolean hasNotified = false;\r", "-\t\ttry {\r", "-\t\t\tfor (int i = 0, length = this.sourceFolders.length; i < length; i++) {\r", "-\t\t\t\tif (sourceFolders[i] != null) {\r", "-\t\t\t\t\tif (this.outputLocation.equals(this.sourceFolders[i].getFullPath()))\r", "-\t\t\t\t\t\tcontinue; // do nothing if output is same as source folder\r", "-\t\t\t\t\tif (!hasNotified) {\r", "-\t\t\t\t\t\thasNotified = true;\r", "-\t\t\t\t\t\tif (notifier != null)\r", "-\t\t\t\t\t\t\tnotifier.subTask(\"Copying all resources on the classpath\");\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tthis.sourceFolders[i].accept(this);\r", "+\tboolean hasNotified = false;\r", "+\ttry {\r", "+\t\tfor (int i = 0, length = this.sourceFolders.length; i < length; i++) {\r", "+\t\t\tif (sourceFolders[i] != null){\r", "+\t\t\t\tif (this.outputLocation.equals(this.sourceFolders[i].getFullPath())) continue; // do nothing if output is same as source folder\r", "+\t\t\t\tif (!hasNotified){\r", "+\t\t\t\t\thasNotified = true;\r", "+\t\t\t\t\tif (notifier != null) notifier.subTask(\"Copying all resources on the classpath\");\r", "-\t\t\t\tif (notifier != null)\r", "-\t\t\t\t\tnotifier.updateProgressDelta(totalAvailableProgress / length);\r", "+\t\t\t\tthis.sourceFolders[i].accept(this);\r", "-\t\t} catch (CoreException e) {\r", "-\t\t\tthrow this.devContext.internalException(e);\r", "+\t\t\tif (notifier != null) notifier.updateProgressDelta(totalAvailableProgress / length);\t\r", "+\t} catch(CoreException e){\r", "+\t\t//throw this.devContext.internalException(e);\r", "+}\r"]}], "num": 15197}