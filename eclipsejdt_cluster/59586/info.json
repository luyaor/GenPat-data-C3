{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcb7799cec31f9f10d533ddbd4b2f22d", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad983e30a9f50cd21913fc5fbd014cc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "359491f54e3ca885feab917a3aebfe3326bcb185", "commitAfterChange": "f756d2d03155bc3d579dba2d865f9a5c53026d3d", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \r \tprivate IBinding internalResolveNameForSimpleName(Name name)", "signatureAfterChange": "\r \r \tprivate IBinding internalResolveNameForSimpleName(Name name)", "diff": ["+\t\t} else if (node instanceof org.eclipse.jdt.internal.compiler.ast.FieldDeclaration) {\r", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.FieldDeclaration fieldDeclaration = (org.eclipse.jdt.internal.compiler.ast.FieldDeclaration) node;\r", "+\t\t\tIVariableBinding variableBinding = this.getVariableBinding(fieldDeclaration.binding);\r", "+\t\t\treturn variableBinding;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6102da971c6e218407e322a0a353c13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/ElementChangedListener.java", "commitBeforeChange": "0b27b465378d2c4de912ede755b716ec1bc3271b", "commitAfterChange": "e8b8473542c4e4cb01bff6dc692097c4a3eca5c6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate void processElementDelta( IJavaElementDelta delta )", "signatureAfterChange": " \t \tprivate void processElementDelta( IJavaElementDelta delta )", "diff": ["+\t\t\t//", "+\t\t\t// handle case where a working copy is discarded (e.g., an editor is closed).  If an editor ", "+\t\t\t// is noopen, then the compilation unit's isWorkingCopy() will return false.", "+\t\t\t//", "+\t\t\t", "-\t\t\t\t", "-\t\t\t// handle case where a parent editor is closed.  If an editor is open, then ", "-\t\t\t// the compilation unit's isWorkingCopy() will return false.", "-\t\t\tif ( ! cu.isWorkingCopy() )", "+", "+\t\t\t//", "+\t\t\t// cu.isWorkingCopy() doesn't work here.  For back-compat reasons, that always returns ", "+\t\t\t// true for non-primary working copies, so we use the following test to see if a working copy", "+\t\t\t// has been discarded.", "+\t\t\t//", "+\t\t\t// TODO:  remove reference to jdt-internal class", "+\t\t\t//", "+\t\t\torg.eclipse.jdt.internal.core.CompilationUnit cu2 = (org.eclipse.jdt.internal.core.CompilationUnit)cu;\t\t\t", "+\t\t\tboolean workingCopyDiscarded = cu2.isPrimary() ? !cu.isWorkingCopy() : cu2.getPerWorkingCopyInfo() == null;", "+", "+\t\t\tif ( workingCopyDiscarded )"]}], "num": 59586}