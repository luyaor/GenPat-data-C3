{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8fe1b8024a8a11d9050c146c2d119e2a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26f1a12f6573a4e5e44201d971ea6dfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "94dcb6652f514256018e8c1f7dcc1acc7030201c", "commitAfterChange": "c1caadb3e97f0c5d02c6ad3748ed5e3373af3f00", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static String bind(String id)", "signatureAfterChange": " \tpublic static String bind(String id)", "diff": ["-\t\tif (id == null)", "-\t\t\treturn \"No message available\"; //$NON-NLS-1$", "-\t\tString message = null;", "-\t\ttry {", "-\t\t\tmessage = bundle.getString(id);", "-\t\t} catch (MissingResourceException e) {", "-\t\t\t// If we got an exception looking for the message, fail gracefully by just returning", "-\t\t\t// the id we were looking for.  In most cases this is semi-informative so is not too bad.", "-\t\t\treturn \"Missing message: \" + id + \" in: \" + bundleName; //$NON-NLS-2$ //$NON-NLS-1$", "-\t\t}", "-\t\t// for compatibility with MessageFormat which eliminates double quotes in original message", "-\t\tchar[] messageWithNoDoubleQuotes =", "-\t\t\tCharOperation.replace(message.toCharArray(), DOUBLE_QUOTES, SINGLE_QUOTE);", "-\t\treturn new String(messageWithNoDoubleQuotes);", "+\t\treturn bind(id, (String[])null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59d93b5fc496a9e750ad044211ee1da8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a5577117cb4a612450eddce3c0b20eb90f21cb89", "commitAfterChange": "8c631374d51cd9cce66092e187c2523badcba90a", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic static String bind(String id, String[] arguments)", "signatureAfterChange": " public static String bind(String id, String[] arguments)", "diff": ["-\t */", "-\tpublic static String bind(String id, String[] arguments) {", "-\t\tif (id == null)", "-\t\t\treturn \"No message available\"; //$NON-NLS-1$", "-\t\tString message = null;", "-\t\ttry {", "-\t\t\tmessage = bundle.getString(id);", "-\t\t} catch (MissingResourceException e) {", "-\t\t\t// If we got an exception looking for the message, fail gracefully by just returning", "-\t\t\t// the id we were looking for.  In most cases this is semi-informative so is not too bad.", "-\t\t\treturn \"Missing message: \" + id + \" in: \" + bundleName; //$NON-NLS-2$ //$NON-NLS-1$", "-\t\t}", "-\t\treturn MessageFormat.format(message, arguments);", "-\t}", "+ */", "+public static String bind(String id, String[] arguments) {", "+\tif (id == null)", "+\t\treturn \"No message available\"; //$NON-NLS-1$", "+\tString message = null;", "+\ttry {", "+\t\tmessage = Main.bundle.getString(id);", "+\t} catch (MissingResourceException e) {", "+\t\t// If we got an exception looking for the message, fail gracefully by just returning", "+\t\t// the id we were looking for.  In most cases this is semi-informative so is not too bad.", "+\t\treturn \"Missing message: \" + id + \" in: \" + Main.bundleName; //$NON-NLS-2$ //$NON-NLS-1$", "+\t}", "+\treturn MessageFormat.format(message, arguments);", "+}"]}], "num": 65349}