{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d46b74636876ce5cc4ec2317dc719632", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d615ad81c882f8288736fe329f151c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c9e02661baa80cf1f75154d10de9df61ce3f636d", "commitAfterChange": "d92419d7d90bedd902391c7e83696cf6304867ae", "methodNumberBeforeChange": 402, "methodNumberAfterChange": 402, "signatureBeforeChange": " public void unresolvableReference(NameReference nameRef, Binding binding)", "signatureAfterChange": " public void unresolvableReference(NameReference nameRef, Binding binding)", "diff": ["+\tint problemId = (nameRef.bits & Binding.VARIABLE) != 0 && (nameRef.bits & Binding.TYPE) == 0", "+\t\t? IProblem.UnresolvedVariable", "+\t\t: IProblem.UndefinedName;", "-\t\tIProblem.UndefinedName,", "+\t\tproblemId,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1baf18f889e8cad6438065e0ba8f1cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "5022709d9b0934611de6ddf11e79067d32b49675", "commitAfterChange": "994f6c0e00bbca016e96f8cedb045f0d49961de5", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": "  \tprotected SingleVariableDeclaration convertToSingleVariableDeclaration(LocalDeclaration localDeclaration)", "signatureAfterChange": "  \tprotected SingleVariableDeclaration convertToSingleVariableDeclaration(LocalDeclaration localDeclaration)", "diff": ["-\t\tint rightEnd = Math.max(typeEnd, localDeclaration.declarationSourceEnd);", "+\t\t// https://bugs.eclipse.org/393719 - [compiler] inconsistent warnings on iteration variables", "+\t\t// compiler considers collectionExpression as within the declarationSourceEnd, DOM AST must use the shorter range to avoid overlap", "+\t\tint sourceEnd = ((localDeclaration.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsForeachElementVariable) != 0)  ", "+\t\t\t\t? localDeclaration.sourceEnd : localDeclaration.declarationSourceEnd;", "+\t\tint rightEnd = Math.max(typeEnd, sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7af9e1faad4f69b08bbb57d1c4249d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "aae374b319008b3e7997fb943d9dfc19fcb7029e", "commitAfterChange": "42b502cfe7b86a61a34884629d46e24cfbdfaa43", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "  \tprotected SingleVariableDeclaration convertToSingleVariableDeclaration(LocalDeclaration localDeclaration)", "signatureAfterChange": "  \tprotected SingleVariableDeclaration convertToSingleVariableDeclaration(LocalDeclaration localDeclaration)", "diff": ["-\t\tint rightEnd = Math.max(typeEnd, localDeclaration.declarationSourceEnd);", "+\t\t// https://bugs.eclipse.org/393719 - [compiler] inconsistent warnings on iteration variables", "+\t\t// compiler considers collectionExpression as within the declarationSourceEnd, DOM AST must use the shorter range to avoid overlap", "+\t\tint sourceEnd = ((localDeclaration.bits & org.eclipse.jdt.internal.compiler.ast.ASTNode.IsForeachElementVariable) != 0)  ", "+\t\t\t\t? localDeclaration.sourceEnd : localDeclaration.declarationSourceEnd;", "+\t\tint rightEnd = Math.max(typeEnd, sourceEnd);"]}], "num": 34685}