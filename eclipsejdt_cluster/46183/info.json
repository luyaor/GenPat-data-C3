{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76c7a213a83c5610bafab6137045b3e5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e13be7fba6e010ba0b125596f5d3dfe0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "82df20b890997b460029c62b45168bb5a5634394", "commitAfterChange": "420d9d48be0a94236d75f55da361f3eeb5245f54", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\t\t\tIClasspathEntry[] classpath = ((JavaProject) projects[i]).getResolvedClasspath();", "+\t\t\t\t\tIClasspathEntry[] classpath;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tclasspath = ((JavaProject) projects[i]).getResolvedClasspath();", "+\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t// project no longer exist: ignore", "+\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "feec56b87252f0d1d2beb3c1b123a63c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "b4f87915b858b8e38e418046984ece5dc8db6148", "commitAfterChange": "4b0e968ea18c9b6d539f97894bc6451b0df31a4f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprivate void addDependentProjects(IPath projectPath, HashSet result)", "signatureAfterChange": " \tprivate void addDependentProjects(IPath projectPath, HashSet result)", "diff": ["+\t\tIJavaProject[] projects = null;", "-\t\t\tIJavaProject[] projects = this.manager.getJavaModel().getJavaProjects();", "-\t\t\tfor (int i = 0, length = projects.length; i < length; i++) {", "-\t\t\t\tIJavaProject project = projects[i];", "-\t\t\t\tIClasspathEntry[] classpath = ((JavaProject)project).getExpandedClasspath(true);", "-\t\t\t\tfor (int j = 0, length2 = classpath.length; j < length2; j++) {", "-\t\t\t\t\tIClasspathEntry entry = classpath[j];", "-\t\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_PROJECT", "-\t\t\t\t\t\t\t\t&& entry.getPath().equals(projectPath)) {", "-\t\t\t\t\t\t\tresult.add(project);", "-\t\t\t\t\t\t}", "+\t\t\tprojects = this.manager.getJavaModel().getJavaProjects();", "+\t\t} catch (JavaModelException e) {", "+\t\t\t// java model doesn't exist", "+\t\t\treturn;", "+\t\t}", "+\t\tfor (int i = 0, length = projects.length; i < length; i++) {", "+\t\t\tIJavaProject project = projects[i];", "+\t\t\tIClasspathEntry[] classpath = null;", "+\t\t\ttry {", "+\t\t\t\tclasspath = ((JavaProject)project).getExpandedClasspath(true);", "+\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t// project doesn't exist: continue with next project", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t\tfor (int j = 0, length2 = classpath.length; j < length2; j++) {", "+\t\t\t\tIClasspathEntry entry = classpath[j];", "+\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_PROJECT", "+\t\t\t\t\t\t\t&& entry.getPath().equals(projectPath)) {", "+\t\t\t\t\t\tresult.add(project);", "-\t\t} catch (JavaModelException e) {", "-\t\t}", "+\t\t\t}"]}], "num": 46183}