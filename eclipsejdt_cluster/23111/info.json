{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33ce5f36a664ff06624a1c4053f5330f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fdebc062fb4d299800f87d941cdeb3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "1fb237703358af23ae88f6decce50b33ae0a3bf2", "commitAfterChange": "1f2b71005b6f3f6c7afc37a6ab8b070d125aa11d", "methodNumberBeforeChange": 682, "methodNumberAfterChange": 682, "signatureBeforeChange": " public void testBug355605() throws CoreException", "signatureAfterChange": " public void testBug355605() throws CoreException", "diff": ["-\tIJavaProject project = createJavaProject(\"P\");", "+\tcreateJavaProject(\"P\");", "-\t\tIJavaSearchScope scope = SearchEngine.createJavaSearchScope(new IJavaElement[]{project}, IJavaSearchScope.SOURCES);", "-\t\tsearch(\"setInfo\", METHOD, IMPLEMENTORS, EXACT_RULE, scope, this.resultCollector);", "-\t\tIMethod method = (IMethod) ((SearchMatch)((TestCollector)this.resultCollector).matches.get(0)).getElement();", "-\t\tthis.resultCollector = new TestCollector();", "+\t\tICompilationUnit unit = getCompilationUnit(\"/P/X.java\");", "+\t\tIMethod method = selectMethod(unit, \"myMethod\", 1);", "-\t\tsearch(method, IMPLEMENTORS, ERASURE_RULE, hierarchyScope, this.resultCollector);", "-\t\tassertSearchResults(\"Unexpected search results!\", \"X.java void X$R.t:<anonymous>#1.s:<anonymous>#1.myMethod() [myMethod]\", this.resultCollector);", "+\t\tsearch(method, IMPLEMENTORS, EXACT_RULE, hierarchyScope, this.resultCollector);", "+\t\tassertSearchResults(\"Unexpected search results!\", \"X.java void X$R.t:<anonymous>#1.s:<anonymous>#1.myMethod() [myMethod] EXACT_MATCH\", this.resultCollector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ece160dd70a88f6e1123a2999e6a26e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "commitAfterChange": "7b084156620c5c922d11b27bd8e1266a04bb9736", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " ImportBinding[] getDefaultImports()", "signatureAfterChange": " ImportBinding[] getDefaultImports()", "diff": ["-\tImportBinding javaLangImport = new ImportBinding(TypeConstants.JAVA_LANG, true, importBinding, null);", "-\tImportBinding[] nullAnnotationImports = this.environment.makeNullAnnotationTypeImports(); // trigger regardless of option below", "-\tif (this.environment.globalOptions.defaultImportNullAnnotationTypes) {", "-\t\tImportBinding[] allDefaultImports = new ImportBinding[nullAnnotationImports.length+1];// java.lang.* + null-annotations", "-\t\tallDefaultImports[0] = javaLangImport;", "-\t\tSystem.arraycopy(nullAnnotationImports, 0,", "-\t\t\t\t\t\t allDefaultImports, 1,", "-\t\t\t\t\t\t nullAnnotationImports.length);", "-\t\tthis.environment.defaultImports = allDefaultImports;", "-\t} else {", "-\t\tthis.environment.defaultImports = new ImportBinding[] {javaLangImport};", "-\t}", "-\treturn this.environment.defaultImports;", "+\treturn this.environment.defaultImports = new ImportBinding[] {new ImportBinding(TypeConstants.JAVA_LANG, true, importBinding, null)};"]}], "num": 23111}