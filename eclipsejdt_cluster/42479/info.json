{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c7c906865ff39b5a4023bb1d6eeaa782", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27936ecae5a646fc6361a0dbeb325d3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "12f65faa0a3b984e9751d243a3eab6e6ab078ed7", "commitAfterChange": "36d2cf066100445cbe45dd4cf851204404f7d76f", "methodNumberBeforeChange": 71, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["-\t\tfinal boolean hasPackage = compilationUnitDeclaration.currentPackage != null;", "+\t\tImportReference currentPackage = compilationUnitDeclaration.currentPackage;", "+\t\tfinal boolean hasPackage = currentPackage != null;", "-\t\t\tif (hasComments()) {", "-\t\t\t\tthis.scribe.printComment();", "-\t\t\t}", "+\t\t\tprintComment(true);", "-\t\t\tthis.scribe.printModifiers(compilationUnitDeclaration.currentPackage.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_MEMBER);", "+\t\t\tthis.scribe.printModifiers(currentPackage.annotations, this, ICodeFormatterConstants.ANNOTATION_ON_MEMBER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f09ea6145047d69c5adc5141b45a486b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["+", "+\t\t// Set header end position", "+\t\tfinal TypeDeclaration[] types = compilationUnitDeclaration.types;", "+\t\tint headerEndPosition = types == null ? compilationUnitDeclaration.sourceEnd : types[0].declarationSourceStart;", "+\t\tthis.scribe.setHeaderComment(headerEndPosition);", "+", "-\t\t\tprintComment(true);", "+\t\t\tprintComment();", "-\t\t\tthis.scribe.printQualifiedReference(compilationUnitDeclaration.currentPackage.sourceEnd);", "+\t\t\tthis.scribe.printQualifiedReference(compilationUnitDeclaration.currentPackage.sourceEnd, false/*do not expect parenthesis*/);", "-\t\tfinal TypeDeclaration[] types = compilationUnitDeclaration.types;"]}], "num": 42479}