{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6adecca7dc573d35f00e84fad82ea94", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "77f69091f095e408408a5910a55d12e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void consumeEnterAnonymousClassBody()", "signatureAfterChange": " protected void consumeEnterAnonymousClassBody()", "diff": ["-\tQualifiedAllocationExpression alloc;", "-\t\tanonymousType.name = TypeDeclaration.ANONYMOUS_EMPTY_NAME;", "-\t\tanonymousType.bits |= ASTNode.AnonymousAndLocalMask;", "-\t\talloc = anonymousType.allocation = new SelectionOnQualifiedAllocationExpression(anonymousType); ", "+\tanonymousType.name = TypeDeclaration.ANONYMOUS_EMPTY_NAME;", "+\tanonymousType.bits |= ASTNode.AnonymousAndLocalMask;", "+\tQualifiedAllocationExpression alloc = new SelectionOnQualifiedAllocationExpression(anonymousType); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c33099a272c626dc6cb936e0053a419d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void consumeEnterAnonymousClassBodySimpleName()", "signatureAfterChange": " protected void consumeEnterAnonymousClassBodySimpleName()", "diff": ["-\tQualifiedAllocationExpression alloc;", "-\t\tanonymousType.name = TypeDeclaration.ANONYMOUS_EMPTY_NAME;", "-\t\tanonymousType.bits |= ASTNode.AnonymousAndLocalMask;", "-\t\talloc = anonymousType.allocation = new SelectionOnQualifiedAllocationExpression(anonymousType); ", "+\tanonymousType.name = TypeDeclaration.ANONYMOUS_EMPTY_NAME;", "+\tanonymousType.bits |= ASTNode.AnonymousAndLocalMask;", "+\tQualifiedAllocationExpression alloc = new SelectionOnQualifiedAllocationExpression(anonymousType); "]}], "num": 25964}