{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8844ad0b039a97683021c1b21b6b2e11", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "555e64757597a506b08ac67155088084", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "3ef93f23afcd2f32a7f2e702fed5d9d29c70e752", "commitAfterChange": "a54ce0f1a5965500a06d345ce2b572137c5b2f38", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tITypeBinding resolveExpressionType(Expression expression)", "signatureAfterChange": "\r \tITypeBinding resolveExpressionType(Expression expression)", "diff": ["+\t\t} else if (expression instanceof InstanceofExpression) {\r", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.InstanceOfExpression instanceOfExpression = (org.eclipse.jdt.internal.compiler.ast.InstanceOfExpression) this.newAstToOldAst.get(expression);\r", "+\t\t\treturn this.getTypeBinding(instanceOfExpression.typeBinding);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9733570db5179dcf853625fc0cdcfbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "718efb00ce060fbf6d67daabb2cd0f9845ae9570", "commitAfterChange": "d5bb78582d4992003bc3f1aa67226d9e44bea956", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "signatureAfterChange": " \t \tprivate BlockScope lookupScope(ASTNode node)", "diff": ["-\t\t\t&& !(currentNode instanceof FieldDeclaration)) {", "+\t\t\t&& !(currentNode instanceof FieldDeclaration)", "+\t\t\t&& !(currentNode instanceof AbstractTypeDeclaration)) {", "-\t\t\tif (currentNode instanceof TypeDeclaration", "-\t\t\t\t\t|| currentNode instanceof EnumDeclaration", "-\t\t\t\t\t|| currentNode instanceof AnnotationTypeDeclaration) {", "+\t\t\tif (currentNode instanceof AbstractTypeDeclaration) {", "+\t\t} else if (currentNode instanceof AbstractTypeDeclaration) {", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "+\t\t\treturn typeDecl.initializerScope;"]}], "num": 16034}