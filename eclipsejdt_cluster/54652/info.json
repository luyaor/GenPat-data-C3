{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f585e46708a0518c63e805781c401b09", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae7d20cdbc146bde50aa5462addf1cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 118, "signatureBeforeChange": " \tpublic void _test0117_while()", "signatureAfterChange": " public void test0416_while()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0117_while() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t boolean dummy;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t while (dummy) {\\n\" +", "-\t\t\t\t\"\t\t   o.toString();\\n\" +  // complain: NPE on first iteration", "-\t\t\t\t\"\t\t   o = new Object();\\n\" +", "-\t\t\t\t\"\t\t }\\n\" +", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\"\to.toString();\\n\" + ", "-\t\t\t\"\t^\\n\" + ", "-\t\t\t\"The variable o can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"  ", "-\t\t);", "-\t}", "+// null analysis -- while", "+public void test0416_while() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  boolean dummy;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    while (dummy) {\\n\" + ", "+\t\t\t\"      o = new Object();\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "664f72a549228e4167171b04196e352d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic void test0061_method_call_guard()", "signatureAfterChange": " public void test0061_method_call_guard()", "diff": ["-\t// null analysis -- method call", "-\tpublic void test0061_method_call_guard() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo(Object o) {\\n\" + ", "-\t\t\t\t\"    if (o == null) {};\\n\" + // quiet: we don't know anything", "-\t\t\t\t\"    o.toString();\\n\" +      // guards o from being null", "-\t\t\t\t\"    if (o == null) {};\\n\" + // complain", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"\tif (o == null) {};\\n\" + ", "-\t\t\t\"\t    ^\\n\" + ", "-\t\t\t\"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}\t", "+// null analysis -- method call", "+public void test0061_method_call_guard() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo(Object o) {\\n\" + ", "+\t\t\t\"    o.toString();\\n\" +      // guards o from being null", "+\t\t\t\"    if (o == null) {};\\n\" + // complain", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tif (o == null) {};\\n\" + ", "+\t\t\"\t    ^\\n\" + ", "+\t\t\"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+} "]}], "num": 54652}