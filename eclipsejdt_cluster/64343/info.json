{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b32b4a6551c3d4d1569b1b9ce3dda69", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3629d51efef4c3f1e8dcd1213e09d362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "1dc6df2cba1e3f21897002448cbe5ca7ad21d269", "commitAfterChange": "973af06dbc6df022ac42e8e0a0c238581d8558f6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "signatureAfterChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "diff": ["-\t\t\t\treturn;", "-\t\t\t}", "-\t\t\tboolean isSpecialArgument = false;", "-\t\t\tif (existingVariable instanceof FieldBinding) {", "-\t\t\t\tif (scope.isInsideConstructor()) {", "-\t\t\t\t\tisSpecialArgument = true; // constructor argument", "-\t\t\t\t} else {", "-\t\t\t\t\tAbstractMethodDeclaration methodDecl = scope.referenceMethod();", "-\t\t\t\t\tif (methodDecl != null && CharOperation.prefixEquals(SET, methodDecl.selector)) {", "-\t\t\t\t\t\tisSpecialArgument = true; // setter argument", "+\t\t\t} else {", "+\t\t\t\tboolean isSpecialArgument = false;", "+\t\t\t\tif (existingVariable instanceof FieldBinding) {", "+\t\t\t\t\tif (scope.isInsideConstructor()) {", "+\t\t\t\t\t\tisSpecialArgument = true; // constructor argument", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tAbstractMethodDeclaration methodDecl = scope.referenceMethod();", "+\t\t\t\t\t\tif (methodDecl != null && CharOperation.prefixEquals(SET, methodDecl.selector)) {", "+\t\t\t\t\t\t\tisSpecialArgument = true; // setter argument", "+\t\t\t\t\t\t}", "+\t\t\t\tscope.problemReporter().localVariableHiding(this, existingVariable, isSpecialArgument);", "-\t\t\tscope.problemReporter().localVariableHiding(this, existingVariable, isSpecialArgument);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a477c908b3e541872681827d2aeb71c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Argument.java", "commitBeforeChange": "c6b0ba0798e3e5869080431aec1d46cb3df138ed", "commitAfterChange": "0d803de6a1e9319f8fcdd3fdf5273a7bd463073e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "signatureAfterChange": "  \tpublic void bind(MethodScope scope, TypeBinding typeBinding, boolean used)", "diff": ["-\t\t\t} else {", "-\t\t\t\tboolean isSpecialArgument = false;", "-\t\t\t\tif (existingVariable instanceof FieldBinding) {", "-\t\t\t\t\tif (scope.isInsideConstructor()) {", "-\t\t\t\t\t\tisSpecialArgument = true; // constructor argument", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tAbstractMethodDeclaration methodDecl = scope.referenceMethod();", "-\t\t\t\t\t\tif (methodDecl != null && CharOperation.prefixEquals(SET, methodDecl.selector)) {", "-\t\t\t\t\t\t\tisSpecialArgument = true; // setter argument", "-\t\t\t\t\t\t}", "+\t\t\t}", "+\t\t\tboolean isSpecialArgument = false;", "+\t\t\tif (existingVariable instanceof FieldBinding) {", "+\t\t\t\tif (scope.isInsideConstructor()) {", "+\t\t\t\t\tisSpecialArgument = true; // constructor argument", "+\t\t\t\t} else {", "+\t\t\t\t\tAbstractMethodDeclaration methodDecl = scope.referenceMethod();", "+\t\t\t\t\tif (methodDecl != null && CharOperation.prefixEquals(SET, methodDecl.selector)) {", "+\t\t\t\t\t\tisSpecialArgument = true; // setter argument", "-\t\t\t\tscope.problemReporter().localVariableHiding(this, existingVariable, isSpecialArgument);", "+\t\t\tscope.problemReporter().localVariableHiding(this, existingVariable, isSpecialArgument);"]}], "num": 64343}