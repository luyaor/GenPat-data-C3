{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee6a78047d35ef93a0b77ceb592b56b9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e5d86042f42c1098b7ba1d030af45eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "210b89134044d06a70fa2c472f5e9a859c41ba00", "commitAfterChange": "b268992d45d00cd5439bb032a6e5a5226c715e7e", "methodNumberBeforeChange": 331, "methodNumberAfterChange": 331, "signatureBeforeChange": " public void test181()", "signatureAfterChange": " public void test181()", "diff": ["-\t\t\"The type A2 must be an abstract class to define abstract methods: m(), n(), o(), p()\\n\" + ", "+\t\t\"The type A2 must be an abstract class to define abstract methods\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in I.java (at line 14)\\n\" + ", "+\t\t\"\tpublic abstract Object m();\\n\" + ", "+\t\t\"\t                       ^^^\\n\" + ", "+\t\t\"The abstract method m in type A2 can only be defined by an abstract class\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in I.java (at line 15)\\n\" + ", "+\t\t\"\tpublic abstract String n();\\n\" + ", "+\t\t\"\t                       ^^^\\n\" + ", "+\t\t\"The abstract method n in type A2 can only be defined by an abstract class\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in I.java (at line 16)\\n\" + ", "+\t\t\"\tabstract Object o();\\n\" + ", "+\t\t\"\t                ^^^\\n\" + ", "+\t\t\"The abstract method o in type A2 can only be defined by an abstract class\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in I.java (at line 17)\\n\" + ", "+\t\t\"\tabstract String p();\\n\" + ", "+\t\t\"\t                ^^^\\n\" + ", "+\t\t\"The abstract method p in type A2 can only be defined by an abstract class\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "124e036d95a8a3ddf540bcbc48025c99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a6c0426e8a97e5c69fdac3bea072af18fea82d0e", "commitAfterChange": "700519d9d691300ee33405d776a07eb44c2c4fa0", "methodNumberBeforeChange": 315, "methodNumberAfterChange": 315, "signatureBeforeChange": " \tpublic void test0306()", "signatureAfterChange": " \tpublic void test0306()", "diff": ["+\t\t\tthis.complianceLevel <= ClassFileConstants.JDK1_6 ?", "+\t\t\t:", "+\t\t\t\t", "+\t\t\t// 1.7+ output, see https://bugs.eclipse.org/bugs/show_bug.cgi?id=334622", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic int foo(T t) { return t.i + t.i() + T.M.j; }\\n\" + ", "+\t\t\t\"\t                               ^\\n\" + ", "+\t\t\t\"The field X<T>.i is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic int foo(T t) { return t.i + t.i() + T.M.j; }\\n\" + ", "+\t\t\t\"\t                                     ^\\n\" + ", "+\t\t\t\"The method i() from the type X<T> is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\tpublic int foo(T t) { return t.i + t.i() + T.M.j; }\\n\" + ", "+\t\t\t\"\t                                           ^^^\\n\" + ", "+\t\t\t\"The type T.M is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tclass Y extends Zork {\\n\" + ", "+\t\t\t\"\t                ^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f6d14dd7cced6bac24ba55b8f748b0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "a6c0426e8a97e5c69fdac3bea072af18fea82d0e", "commitAfterChange": "700519d9d691300ee33405d776a07eb44c2c4fa0", "methodNumberBeforeChange": 1492, "methodNumberAfterChange": 1492, "signatureBeforeChange": " public void test1458()", "signatureAfterChange": " public void test1458()", "diff": ["-\tthis.runConformTest(", "+\tthis.runNegativeTest(", "+\t\t\t\t\t\"             Zork z;\\n\" +", "-\t\t\t\t\t\"\t}\\n\"", "-\t\t\t});", "+\t\t\t\t\t\"\t}\\n\",", "+\t\t\t},", "+\t\t\tthis.complianceLevel <= ClassFileConstants.JDK1_6 ?", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in CompilerBug.java (at line 22)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\" :", "+\t\t\t\t", "+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=334622", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in CompilerBug.java (at line 17)\\n\" + ", "+\t\t\t\"\tgetClass().newInstance().privateMethod();\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The method privateMethod() from the type CompilerBug is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in CompilerBug.java (at line 19)\\n\" + ", "+\t\t\t\"\tgetClass().newInstance().privateInt = 10;\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^\\n\" + ", "+\t\t\t\"The field CompilerBug.privateInt is not visible\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in CompilerBug.java (at line 22)\\n\" + ", "+\t\t\t\"\tZork z;\\n\" + ", "+\t\t\t\"\t^^^^\\n\" + ", "+\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t\t);"]}], "num": 65295}