{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f37757aa46d62a6e73cc9b63e30c2636", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64765aa20ed2068a262c812a4ece1f94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConstantTest.java", "commitBeforeChange": "26e0b0c271d5031424823a1070ef180ba24218bf", "commitAfterChange": "c84496f37e5dff715764911530c1fceaa60b14ee", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void test015()", "signatureAfterChange": " public void test015()", "diff": ["-\t\tCompilerOptions.versionToJdkLevel(getCompilerOptions().get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_4", "-\t\t\t?\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 2, Locals: 4\\n\" + ", "-\t\t\t\t\t\"  void foo1(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  dup\\n\" + ", "-\t\t\t\t\t\"    2  istore_2 [bb]\\n\" + ", "-\t\t\t\t\t\"    3  ifeq 8\\n\" + ", "-\t\t\t\t\t\"    6  iconst_0\\n\" + ", "-\t\t\t\t\t\"    7  istore_3\\n\" + ", "-\t\t\t\t\t\"    8  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 9]\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, line: 10]\\n\" + ", "-\t\t\t\t\t\"        [pc: 8, line: 12]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 9] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 9] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 3, pc: 9] local: bb index: 2 type: boolean\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo2(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  ifeq 4\\n\" + ", "-\t\t\t\t\t\"    4  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 14]\\n\" + ", "-\t\t\t\t\t\"        [pc: 4, line: 17]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo3(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  ifne 0\\n\" + ", "-\t\t\t\t\t\"    4  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 19]\\n\" + ", "-\t\t\t\t\t\"        [pc: 4, line: 22]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 3\\n\" + ", "-\t\t\t\t\t\"  void foo4(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  istore_2 [b]\\n\" + ", "-\t\t\t\t\t\"    2  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 24]\\n\" + ", "-\t\t\t\t\t\"        [pc: 2, line: 25]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 3] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 3] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 2, pc: 3] local: b index: 2 type: boolean\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo5();\\n\" + ", "-\t\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    1  pop\\n\" + ", "-\t\t\t\t\t\"    2  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 27]\\n\" + ", "-\t\t\t\t\t\"        [pc: 2, line: 30]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 3] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo6();\\n\" + ", "-\t\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    1  pop\\n\" + ", "-\t\t\t\t\t\"    2  iconst_0\\n\" + ", "-\t\t\t\t\t\"    3  ifeq 6\\n\" + ", "-\t\t\t\t\t\"    6  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 32]\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, line: 35]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo7();\\n\" + ", "-\t\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    1  pop\\n\" + ", "-\t\t\t\t\t\"    2  iconst_0\\n\" + ", "-\t\t\t\t\t\"    3  ifne 0\\n\" + ", "-\t\t\t\t\t\"    6  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 37]\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, line: 40]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo8();\\n\" + ", "-\t\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    1  pop\\n\" + ", "-\t\t\t\t\t\"    2  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    3  pop\\n\" + ", "-\t\t\t\t\t\"    4  iconst_0\\n\" + ", "-\t\t\t\t\t\"    5  istore_1 [b]\\n\" + ", "-\t\t\t\t\t\"    6  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 42]\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, line: 43]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, pc: 7] local: b index: 1 type: boolean\\n\" + ", "-\t\t\t\t\t\"}\"\t\t\t\t\t", "-\t\t\t: \t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 2, Locals: 4\\n\" + ", "-\t\t\t\t\t\"  void foo1(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  dup\\n\" + ", "-\t\t\t\t\t\"    2  istore_2 [bb]\\n\" + ", "-\t\t\t\t\t\"    3  ifeq 8\\n\" + ", "-\t\t\t\t\t\"    6  iconst_0\\n\" + ", "-\t\t\t\t\t\"    7  istore_3\\n\" + ", "-\t\t\t\t\t\"    8  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 9]\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, line: 10]\\n\" + ", "-\t\t\t\t\t\"        [pc: 8, line: 12]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 9] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 9] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 3, pc: 9] local: bb index: 2 type: boolean\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo2(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  ifeq 4\\n\" + ", "-\t\t\t\t\t\"    4  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 14]\\n\" + ", "-\t\t\t\t\t\"        [pc: 4, line: 17]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo3(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  ifne 0\\n\" + ", "-\t\t\t\t\t\"    4  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 19]\\n\" + ", "-\t\t\t\t\t\"        [pc: 4, line: 22]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 3\\n\" + ", "-\t\t\t\t\t\"  void foo4(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  istore_2 [b]\\n\" + ", "-\t\t\t\t\t\"    2  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 24]\\n\" + ", "-\t\t\t\t\t\"        [pc: 2, line: 25]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 3] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 3] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 2, pc: 3] local: b index: 2 type: boolean\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo5();\\n\" + ", "-\t\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    1  getfield X.fx : X [28]\\n\" + ", "-\t\t\t\t\t\"    4  pop\\n\" + ", "-\t\t\t\t\t\"    5  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 27]\\n\" + ", "-\t\t\t\t\t\"        [pc: 5, line: 30]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 6] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo6();\\n\" + ", "-\t\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"     1  getfield X.fx : X [28]\\n\" + ", "-\t\t\t\t\t\"     4  pop\\n\" + ", "-\t\t\t\t\t\"     5  iconst_0\\n\" + ", "-\t\t\t\t\t\"     6  ifeq 9\\n\" + ", "-\t\t\t\t\t\"     9  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 32]\\n\" + ", "-\t\t\t\t\t\"        [pc: 9, line: 35]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 10] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo7();\\n\" + ", "-\t\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"     1  getfield X.fx : X [28]\\n\" + ", "-\t\t\t\t\t\"     4  pop\\n\" + ", "-\t\t\t\t\t\"     5  iconst_0\\n\" + ", "-\t\t\t\t\t\"     6  ifne 0\\n\" + ", "-\t\t\t\t\t\"     9  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 37]\\n\" + ", "-\t\t\t\t\t\"        [pc: 9, line: 40]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 10] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo8();\\n\" + ", "-\t\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"     1  getfield X.fx : X [28]\\n\" + ", "-\t\t\t\t\t\"     4  pop\\n\" + ", "-\t\t\t\t\t\"     5  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"     6  getfield X.fx : X [28]\\n\" + ", "-\t\t\t\t\t\"     9  pop\\n\" + ", "-\t\t\t\t\t\"    10  iconst_0\\n\" + ", "-\t\t\t\t\t\"    11  istore_1 [b]\\n\" + ", "-\t\t\t\t\t\"    12  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 42]\\n\" + ", "-\t\t\t\t\t\"        [pc: 12, line: 43]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 13] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 12, pc: 13] local: b index: 1 type: boolean\\n\" + ", "-\t\t\t\t\t\"}\";", "+\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "+\t\t\"  // Stack: 2, Locals: 4\\n\" + ", "+\t\t\"  void foo1(X x);\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  dup\\n\" + ", "+\t\t\"    2  istore_2 [bb]\\n\" + ", "+\t\t\"    3  ifeq 8\\n\" + ", "+\t\t\"    6  iconst_0\\n\" + ", "+\t\t\"    7  istore_3\\n\" + ", "+\t\t\"    8  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 9]\\n\" + ", "+\t\t\"        [pc: 6, line: 10]\\n\" + ", "+\t\t\"        [pc: 8, line: 12]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 9] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 0, pc: 9] local: x index: 1 type: X\\n\" + ", "+\t\t\"        [pc: 3, pc: 9] local: bb index: 2 type: boolean\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\"  void foo2(X x);\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  ifeq 4\\n\" + ", "+\t\t\"    4  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 14]\\n\" + ", "+\t\t\"        [pc: 4, line: 17]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\"  void foo3(X x);\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  ifne 0\\n\" + ", "+\t\t\"    4  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 19]\\n\" + ", "+\t\t\"        [pc: 4, line: 22]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 3\\n\" + ", "+\t\t\"  void foo4(X x);\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  istore_2 [b]\\n\" + ", "+\t\t\"    2  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 24]\\n\" + ", "+\t\t\"        [pc: 2, line: 25]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 3] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 0, pc: 3] local: x index: 1 type: X\\n\" + ", "+\t\t\"        [pc: 2, pc: 3] local: b index: 2 type: boolean\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\"  // Stack: 0, Locals: 1\\n\" + ", "+\t\t\"  void foo5();\\n\" + ", "+\t\t\"    0  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 30]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\"  void foo6();\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  ifeq 4\\n\" + ", "+\t\t\"    4  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 32]\\n\" + ", "+\t\t\"        [pc: 4, line: 35]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\"  void foo7();\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  ifne 0\\n\" + ", "+\t\t\"    4  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 37]\\n\" + ", "+\t\t\"        [pc: 4, line: 40]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\"  void foo8();\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  istore_1 [b]\\n\" + ", "+\t\t\"    2  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 42]\\n\" + ", "+\t\t\"        [pc: 2, line: 43]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 3] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 2, pc: 3] local: b index: 1 type: boolean\\n\";\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "790d6a1c6b80db21e7c053c905deb507", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConstantTest.java", "commitBeforeChange": "26e0b0c271d5031424823a1070ef180ba24218bf", "commitAfterChange": "c84496f37e5dff715764911530c1fceaa60b14ee", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test014()", "signatureAfterChange": " public void test014()", "diff": ["-\t\tCompilerOptions.versionToJdkLevel(getCompilerOptions().get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_4", "-\t\t\t?\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 2, Locals: 4\\n\" + ", "-\t\t\t\t\t\"  void foo1(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  dup\\n\" + ", "-\t\t\t\t\t\"    2  istore_2 [bb]\\n\" + ", "-\t\t\t\t\t\"    3  ifeq 8\\n\" + ", "-\t\t\t\t\t\"    6  iconst_0\\n\" + ", "-\t\t\t\t\t\"    7  istore_3\\n\" + ", "-\t\t\t\t\t\"    8  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 9]\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, line: 10]\\n\" + ", "-\t\t\t\t\t\"        [pc: 8, line: 12]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 9] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 9] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 3, pc: 9] local: bb index: 2 type: boolean\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo2(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  ifeq 4\\n\" + ", "-\t\t\t\t\t\"    4  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 14]\\n\" + ", "-\t\t\t\t\t\"        [pc: 4, line: 17]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo3(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  ifne 0\\n\" + ", "-\t\t\t\t\t\"    4  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 19]\\n\" + ", "-\t\t\t\t\t\"        [pc: 4, line: 22]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 3\\n\" + ", "-\t\t\t\t\t\"  void foo4(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  istore_2 [b]\\n\" + ", "-\t\t\t\t\t\"    2  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 24]\\n\" + ", "-\t\t\t\t\t\"        [pc: 2, line: 25]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 3] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 3] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 2, pc: 3] local: b index: 2 type: boolean\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo5();\\n\" + ", "-\t\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    1  pop\\n\" + ", "-\t\t\t\t\t\"    2  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 27]\\n\" + ", "-\t\t\t\t\t\"        [pc: 2, line: 30]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 3] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo6();\\n\" + ", "-\t\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    1  pop\\n\" + ", "-\t\t\t\t\t\"    2  iconst_0\\n\" + ", "-\t\t\t\t\t\"    3  ifeq 6\\n\" + ", "-\t\t\t\t\t\"    6  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 32]\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, line: 35]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo7();\\n\" + ", "-\t\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    1  pop\\n\" + ", "-\t\t\t\t\t\"    2  iconst_0\\n\" + ", "-\t\t\t\t\t\"    3  ifne 0\\n\" + ", "-\t\t\t\t\t\"    6  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 37]\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, line: 40]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo8();\\n\" + ", "-\t\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    1  pop\\n\" + ", "-\t\t\t\t\t\"    2  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    3  pop\\n\" + ", "-\t\t\t\t\t\"    4  iconst_0\\n\" + ", "-\t\t\t\t\t\"    5  istore_1 [b]\\n\" + ", "-\t\t\t\t\t\"    6  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 42]\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, line: 43]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 7] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, pc: 7] local: b index: 1 type: boolean\\n\" + ", "-\t\t\t\t\t\"}\"\t\t\t\t\t", "-\t\t\t: \t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 2, Locals: 4\\n\" + ", "-\t\t\t\t\t\"  void foo1(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  dup\\n\" + ", "-\t\t\t\t\t\"    2  istore_2 [bb]\\n\" + ", "-\t\t\t\t\t\"    3  ifeq 8\\n\" + ", "-\t\t\t\t\t\"    6  iconst_0\\n\" + ", "-\t\t\t\t\t\"    7  istore_3\\n\" + ", "-\t\t\t\t\t\"    8  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 9]\\n\" + ", "-\t\t\t\t\t\"        [pc: 6, line: 10]\\n\" + ", "-\t\t\t\t\t\"        [pc: 8, line: 12]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 9] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 9] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 3, pc: 9] local: bb index: 2 type: boolean\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo2(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  ifeq 4\\n\" + ", "-\t\t\t\t\t\"    4  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 14]\\n\" + ", "-\t\t\t\t\t\"        [pc: 4, line: 17]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo3(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  ifne 0\\n\" + ", "-\t\t\t\t\t\"    4  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 19]\\n\" + ", "-\t\t\t\t\t\"        [pc: 4, line: 22]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 3\\n\" + ", "-\t\t\t\t\t\"  void foo4(X x);\\n\" + ", "-\t\t\t\t\t\"    0  iconst_0\\n\" + ", "-\t\t\t\t\t\"    1  istore_2 [b]\\n\" + ", "-\t\t\t\t\t\"    2  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 24]\\n\" + ", "-\t\t\t\t\t\"        [pc: 2, line: 25]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 3] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 3] local: x index: 1 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 2, pc: 3] local: b index: 2 type: boolean\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo5();\\n\" + ", "-\t\t\t\t\t\"    0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"    1  getfield X.fx : X [28]\\n\" + ", "-\t\t\t\t\t\"    4  pop\\n\" + ", "-\t\t\t\t\t\"    5  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 27]\\n\" + ", "-\t\t\t\t\t\"        [pc: 5, line: 30]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 6] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo6();\\n\" + ", "-\t\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"     1  getfield X.fx : X [28]\\n\" + ", "-\t\t\t\t\t\"     4  pop\\n\" + ", "-\t\t\t\t\t\"     5  iconst_0\\n\" + ", "-\t\t\t\t\t\"     6  ifeq 9\\n\" + ", "-\t\t\t\t\t\"     9  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 32]\\n\" + ", "-\t\t\t\t\t\"        [pc: 9, line: 35]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 10] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "-\t\t\t\t\t\"  void foo7();\\n\" + ", "-\t\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"     1  getfield X.fx : X [28]\\n\" + ", "-\t\t\t\t\t\"     4  pop\\n\" + ", "-\t\t\t\t\t\"     5  iconst_0\\n\" + ", "-\t\t\t\t\t\"     6  ifne 0\\n\" + ", "-\t\t\t\t\t\"     9  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 37]\\n\" + ", "-\t\t\t\t\t\"        [pc: 9, line: 40]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 10] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"  \\n\" + ", "-\t\t\t\t\t\"  // Method descriptor #12 ()V\\n\" + ", "-\t\t\t\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "-\t\t\t\t\t\"  void foo8();\\n\" + ", "-\t\t\t\t\t\"     0  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"     1  getfield X.fx : X [28]\\n\" + ", "-\t\t\t\t\t\"     4  pop\\n\" + ", "-\t\t\t\t\t\"     5  aload_0 [this]\\n\" + ", "-\t\t\t\t\t\"     6  getfield X.fx : X [28]\\n\" + ", "-\t\t\t\t\t\"     9  pop\\n\" + ", "-\t\t\t\t\t\"    10  iconst_0\\n\" + ", "-\t\t\t\t\t\"    11  istore_1 [b]\\n\" + ", "-\t\t\t\t\t\"    12  return\\n\" + ", "-\t\t\t\t\t\"      Line numbers:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, line: 42]\\n\" + ", "-\t\t\t\t\t\"        [pc: 12, line: 43]\\n\" + ", "-\t\t\t\t\t\"      Local variable table:\\n\" + ", "-\t\t\t\t\t\"        [pc: 0, pc: 13] local: this index: 0 type: X\\n\" + ", "-\t\t\t\t\t\"        [pc: 12, pc: 13] local: b index: 1 type: boolean\\n\" + ", "-\t\t\t\t\t\"}\";", "+\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "+\t\t\"  // Stack: 2, Locals: 4\\n\" + ", "+\t\t\"  void foo1(X x);\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  dup\\n\" + ", "+\t\t\"    2  istore_2 [bb]\\n\" + ", "+\t\t\"    3  ifeq 8\\n\" + ", "+\t\t\"    6  iconst_0\\n\" + ", "+\t\t\"    7  istore_3\\n\" + ", "+\t\t\"    8  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 9]\\n\" + ", "+\t\t\"        [pc: 6, line: 10]\\n\" + ", "+\t\t\"        [pc: 8, line: 12]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 9] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 0, pc: 9] local: x index: 1 type: X\\n\" + ", "+\t\t\"        [pc: 3, pc: 9] local: bb index: 2 type: boolean\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\"  void foo2(X x);\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  ifeq 4\\n\" + ", "+\t\t\"    4  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 14]\\n\" + ", "+\t\t\"        [pc: 4, line: 17]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\"  void foo3(X x);\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  ifne 0\\n\" + ", "+\t\t\"    4  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 19]\\n\" + ", "+\t\t\"        [pc: 4, line: 22]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: x index: 1 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #20 (LX;)V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 3\\n\" + ", "+\t\t\"  void foo4(X x);\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  istore_2 [b]\\n\" + ", "+\t\t\"    2  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 24]\\n\" + ", "+\t\t\"        [pc: 2, line: 25]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 3] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 0, pc: 3] local: x index: 1 type: X\\n\" + ", "+\t\t\"        [pc: 2, pc: 3] local: b index: 2 type: boolean\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\"  // Stack: 0, Locals: 1\\n\" + ", "+\t\t\"  void foo5();\\n\" + ", "+\t\t\"    0  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 30]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 1] local: this index: 0 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\"  void foo6();\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  ifeq 4\\n\" + ", "+\t\t\"    4  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 32]\\n\" + ", "+\t\t\"        [pc: 4, line: 35]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 1\\n\" + ", "+\t\t\"  void foo7();\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  ifne 0\\n\" + ", "+\t\t\"    4  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 37]\\n\" + ", "+\t\t\"        [pc: 4, line: 40]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 5] local: this index: 0 type: X\\n\" + ", "+\t\t\"  \\n\" + ", "+\t\t\"  // Method descriptor #12 ()V\\n\" + ", "+\t\t\"  // Stack: 1, Locals: 2\\n\" + ", "+\t\t\"  void foo8();\\n\" + ", "+\t\t\"    0  iconst_0\\n\" + ", "+\t\t\"    1  istore_1 [b]\\n\" + ", "+\t\t\"    2  return\\n\" + ", "+\t\t\"      Line numbers:\\n\" + ", "+\t\t\"        [pc: 0, line: 42]\\n\" + ", "+\t\t\"        [pc: 2, line: 43]\\n\" + ", "+\t\t\"      Local variable table:\\n\" + ", "+\t\t\"        [pc: 0, pc: 3] local: this index: 0 type: X\\n\" + ", "+\t\t\"        [pc: 2, pc: 3] local: b index: 1 type: boolean\\n\";"]}], "num": 68134}