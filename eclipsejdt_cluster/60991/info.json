{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "712cc81661a4ebbd7815c7e59b630ee8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80d3e06684d839d62f5d9cf2cac699c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "9c382b975bd859fabf0a4e2e50d8235074d1b233", "commitAfterChange": "4e96c3149b06a18db826fbf0e9331240092b91b0", "methodNumberBeforeChange": 429, "methodNumberAfterChange": 429, "signatureBeforeChange": "  public void recoveryExitFromVariable()", "signatureAfterChange": "  public void recoveryExitFromVariable()", "diff": ["-", "-\t\t\tint end = ((RecoveredField)this.currentElement).fieldDeclaration.sourceEnd;", "-\t\t\tthis.currentElement.updateSourceEndIfNecessary(end);", "-\t\t\tthis.currentElement = this.currentElement.parent;", "+\t\t\t// Do not move focus to parent if we are still inside an array initializer", "+\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=292087 ", "+\t\t\tif (this.currentElement.bracketBalance <= 0) {", "+\t\t\t\tint end = ((RecoveredField)this.currentElement).fieldDeclaration.sourceEnd;", "+\t\t\t\tthis.currentElement.updateSourceEndIfNecessary(end);", "+\t\t\t\tthis.currentElement = this.currentElement.parent;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d692230cca64fac83fe1d5dedd84918a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "027433d18c80815de3076b7fd489422a48401f1a", "commitAfterChange": "e060e0428f7f92647e77ad8da2c7818eb4c4e3a7", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  protected boolean triggerRecoveryUponLambdaClosure(Statement statement, boolean shouldCommit)", "signatureAfterChange": "  protected boolean triggerRecoveryUponLambdaClosure(Statement statement, boolean shouldCommit)", "diff": ["-\t\t\t\t(this.currentElement.parent instanceof RecoveredBlock) ? this.currentElement.parent : null);", "+\t\t\t\t(this.currentElement.parent instanceof RecoveredBlock) ? this.currentElement.parent : ", "+\t\t\t\t\tthis.currentElement instanceof RecoveredMethod ? ((RecoveredMethod) this.currentElement).methodBody : null);", "-\t\t\t\t\t\trecoveredBlock.statements[--recoveredBlock.statementCount] = null;", "-\t\t\t\t\t\tthis.currentElement = recoveredBlock;", "+\t\t\t\t\t\trecoveredBlock.statements[recoveredBlock.statementCount - 1] = new RecoveredStatement(statement, recoveredBlock, 0);", "+\t\t\t\t\t\tstatement = null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f871464392c5c776e6c2bf4db058816f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "cd8a825e0763d05692512bf2d61b656a1da5c5d8", "commitAfterChange": "54beaf9a0ac7e8e91c308765e4aff36ce5749605", "methodNumberBeforeChange": 301, "methodNumberAfterChange": 301, "signatureBeforeChange": " protected void consumeTypeHeaderNameWithTypeParameters()", "signatureAfterChange": " protected void consumeTypeHeaderNameWithTypeParameters()", "diff": ["-\tif (this.currentElement != null) { // is recovering", "-\t\tRecoveredType recoveredType = (RecoveredType) this.currentElement;", "-\t\trecoveredType.pendingTypeParameters = null;", "-", "-\t\tthis.lastCheckPoint = typeDecl.bodyStart;", "+\tif (this.currentElement != null) {", "+\t\t// is recovering", "+\t\tif (this.currentElement instanceof RecoveredType) {", "+\t\t\tRecoveredType recoveredType = (RecoveredType) this.currentElement;", "+\t\t\trecoveredType.pendingTypeParameters = null;", "+\t\t\tthis.lastCheckPoint = typeDecl.bodyStart;", "+\t\t} else {", "+\t\t\tthis.lastCheckPoint = typeDecl.bodyStart;", "+\t\t\tthis.currentElement = this.currentElement.add(typeDecl, 0);", "+\t\t\tthis.lastIgnoredToken = -1;", "+\t\t}"]}], "num": 60991}