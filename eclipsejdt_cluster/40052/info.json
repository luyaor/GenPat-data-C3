{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5431f3a57bc1b89df3061ddb540c814e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "752b45e3087f7158bff6e98c2a14ba66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "commitAfterChange": "4c8a3ba34c720dda98e8d56ba71f0361efbe740b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t@Override \tpublic DeclaredType getDeclaredType(DeclaredType containing, TypeElement typeElem, \t\t\tTypeMirror... typeArgs)", "signatureAfterChange": " \t@Override \tpublic DeclaredType getDeclaredType(DeclaredType containing, TypeElement typeElem, \t\t\tTypeMirror... typeArgs)", "diff": ["-\t\t// TODO Auto-generated method stub", "-\t\treturn null;", "+\t\tint typeArgsLength = typeArgs.length;", "+\t\tTypeElementImpl typeElementImpl = (TypeElementImpl) typeElem;", "+\t\tReferenceBinding referenceBinding = (ReferenceBinding) typeElementImpl._binding;", "+\t\tTypeVariableBinding[] typeVariables = referenceBinding.typeVariables();", "+\t\tint typeVariablesLength = typeVariables.length;", "+\t\tDeclaredTypeImpl declaredTypeImpl = (DeclaredTypeImpl) containing;", "+\t\tReferenceBinding enclosingType = (ReferenceBinding) declaredTypeImpl._binding;", "+\t\tif (typeArgsLength == 0) {", "+\t\t\tif (referenceBinding.isGenericType()) {", "+\t\t\t\t// must return a raw type", "+\t\t\t\treturn Factory.newDeclaredType(this._env.getLookupEnvironment().createRawType(referenceBinding, enclosingType));", "+\t\t\t}", "+\t\t\t// TODO (see how to create a member type binding", "+\t\t\treturn null;", "+\t\t} else if (typeArgsLength != typeVariablesLength) {", "+\t\t\tthrow new IllegalArgumentException(\"Number of typeArguments doesn't match the number of formal parameters of typeElem\"); //$NON-NLS-1$", "+\t\t}", "+\t\tTypeBinding[] typeArguments = new TypeBinding[typeArgsLength];", "+\t\tfor (int i = 0; i < typeArgsLength; i++) {", "+\t\t\tTypeMirrorImpl typeMirrorImpl = (TypeMirrorImpl) typeArgs[i];", "+\t\t\tBinding binding = typeMirrorImpl._binding;", "+\t\t\tif (!(binding instanceof ReferenceBinding)) {", "+\t\t\t\tthrow new IllegalArgumentException(\"Invalid type for a type arguments : \" + typeMirrorImpl); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\ttypeArguments[i] = (ReferenceBinding) binding;", "+\t\t}", "+\t\treturn Factory.newDeclaredType(", "+\t\t\t\tthis._env.getLookupEnvironment().createParameterizedType(referenceBinding, typeArguments, enclosingType));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9611a34da8d7f79fca51b991ffe2494", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "c62a418f35a40981606d85e97ecee9f9596fa8d0", "commitAfterChange": "4c8a3ba34c720dda98e8d56ba71f0361efbe740b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t@Override \tpublic DeclaredType getDeclaredType(TypeElement typeElem, TypeMirror... typeArgs)", "signatureAfterChange": " \t@Override \tpublic DeclaredType getDeclaredType(TypeElement typeElem, TypeMirror... typeArgs)", "diff": ["-\t\t//TODO: create parameterized and raw types, i.e., handle typeArgs", "-\t\treturn (DeclaredType)typeElem.asType();", "+\t\tint typeArgsLength = typeArgs.length;", "+\t\tTypeElementImpl typeElementImpl = (TypeElementImpl) typeElem;", "+\t\tReferenceBinding referenceBinding = (ReferenceBinding) typeElementImpl._binding;", "+\t\tTypeVariableBinding[] typeVariables = referenceBinding.typeVariables();", "+\t\tint typeVariablesLength = typeVariables.length;", "+\t\tif (typeArgsLength == 0) {", "+\t\t\tif (referenceBinding.isGenericType()) {", "+\t\t\t\t// must return a raw type", "+\t\t\t\treturn Factory.newDeclaredType(this._env.getLookupEnvironment().createRawType(referenceBinding, null));", "+\t\t\t}", "+\t\t\treturn (DeclaredType)typeElem.asType();", "+\t\t} else if (typeArgsLength != typeVariablesLength) {", "+\t\t\tthrow new IllegalArgumentException(\"Number of typeArguments doesn't match the number of formal parameters of typeElem\"); //$NON-NLS-1$", "+\t\t}", "+\t\tTypeBinding[] typeArguments = new TypeBinding[typeArgsLength];", "+\t\tfor (int i = 0; i < typeArgsLength; i++) {", "+\t\t\tTypeMirrorImpl typeMirrorImpl = (TypeMirrorImpl) typeArgs[i];", "+\t\t\tBinding binding = typeMirrorImpl._binding;", "+\t\t\tif (!(binding instanceof ReferenceBinding)) {", "+\t\t\t\tthrow new IllegalArgumentException(\"Invalid type for a type arguments : \" + typeMirrorImpl); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\ttypeArguments[i] = (ReferenceBinding) binding;", "+\t\t}", "+\t\treturn Factory.newDeclaredType(", "+\t\t\t\tthis._env.getLookupEnvironment().createParameterizedType(referenceBinding, typeArguments, null));"]}], "num": 40052}