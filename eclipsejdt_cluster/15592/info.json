{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "025dc35eb720522658ccda1167240fba", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c403b77c447a1eb1f9c0628dad00144", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "26e96a017b590b444a246c8fba814dc78fd85b77", "commitAfterChange": "80351fb8a54757084b1b27c49cb8b0584bf78834", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.LambdaExpression lambda)", "signatureAfterChange": "  \tpublic Expression convert(org.eclipse.jdt.internal.compiler.ast.LambdaExpression lambda)", "diff": ["-\t\t\tif (this.referenceContext != null) {", "-\t\t\t\tthis.referenceContext.setFlags(this.referenceContext.getFlags() | ASTNode.MALFORMED);", "-\t\t\t}", "-\t\t\tNullLiteral nullLiteral = new NullLiteral(this.ast);", "-\t\t\tnullLiteral.setFlags(nullLiteral.getFlags() | ASTNode.MALFORMED);", "-\t\t\tnullLiteral.setSourceRange(lambda.sourceStart, lambda.sourceEnd - lambda.sourceStart + 1);", "-\t\t\treturn nullLiteral;\t\t", "+\t\t\treturn createFakeNullLiteral(lambda);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc1cb4160f289ac5e2745dcbaadda9e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapPreparator.java", "commitBeforeChange": "ea5c9cc312f4b4f8b75e3a6a2f95be1c2b2c1422", "commitAfterChange": "1d27cfb65a8550e3dd44f890da53c4bdcdcccdbf", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(VariableDeclarationFragment node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(ThisExpression node)", "diff": ["+", "+\t@Override", "+\tpublic boolean visit(ThisExpression node) {", "+\t\thandleFieldAccess(node);", "+\t\treturn true;", "+\t}", "-\t\tif (node.getInitializer() != null) {", "-\t\t\tthis.wrapIndexes.add(this.tm.firstIndexIn(node.getInitializer(), -1));", "-\t\t\tthis.wrapParentIndex = this.tm.firstIndexBefore(node.getInitializer(), TokenNameEQUAL);", "-\t\t\tthis.wrapGroupEnd = this.tm.lastIndexIn(node.getInitializer(), -1);", "-\t\t\thandleWrap(this.options.alignment_for_assignment);", "-\t\t}"]}], "num": 15592}