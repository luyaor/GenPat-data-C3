{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "380db3598b320be7116dea7b9268edac", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e228e5a6b88e079773e0cc2d5d2c5b12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "8f261bb6c49278e86707910a4be5450c713c940a", "commitAfterChange": "b5977e771dcaa856815c805c4cdc6cf2a2c18650", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \tpublic int reportError(ProblemReporter problemReporter, ASTNode location, int nullStatus)", "signatureAfterChange": " \t \tpublic int reportError(ProblemReporter problemReporter, ASTNode location, int nullStatus)", "diff": ["+\t\tif ((this.globalClosingState & OWNED_BY_OUTSIDE) != 0) {", "+\t\t\treturn 0; // TODO: should we still propagate some flags??", "+\t\t}", "-\t\t} else if (nullStatus == FlowInfo.POTENTIALLY_NULL) {", "+\t\t} else if ((nullStatus & (FlowInfo.POTENTIALLY_NULL|FlowInfo.POTENTIALLY_NON_NULL)) != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e6a5a64fd08952aa3f0ad4ca7ce7af38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FakedTrackingVariable.java", "commitBeforeChange": "40ad9904e939ba54abece52421044021edd6e1c0", "commitAfterChange": "8d45cb26fc5ad244f93e8632d761d46ad4a120cf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 24, "signatureBeforeChange": "  \tpublic void reportExplicitClosing(ProblemReporter problemReporter)", "signatureAfterChange": "  \tpublic void reportExplicitClosing(ProblemReporter problemReporter)", "diff": ["-\t\tif ((this.globalClosingState & REPORTED) == 0) {", "-\t\t\tthis.globalClosingState |= REPORTED;", "+\t\tif ((this.globalClosingState & (OWNED_BY_OUTSIDE|REPORTED_EXPLICIT_CLOSE)) == 0) { // can't use t-w-r for OWNED_BY_OUTSIDE", "+\t\t\tthis.globalClosingState |= REPORTED_EXPLICIT_CLOSE;"]}], "num": 53593}