{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b09ddb998ad915ec2d758de2764d241", "detectedBy": ["DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b31a24f6f5a77db7f154461098d41a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "commitAfterChange": "f24c43070146ea63fd82e385697f695064b998f3", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test007() throws JavaModelException, CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic void test014() throws JavaModelException, CoreException", "diff": ["-\t */", "-\tpublic void test007() throws JavaModelException, CoreException, UnsupportedEncodingException {", "-\t\t// Get class file and compare source (should be the same as we ge charset on file in SourceMapper.findSource(String)...)", "-\t\tassertNotNull(this.utf8Source);", "-\t\tassertNotNull(source);", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "-\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", encodedContents, source);", "-\t}", "+\t/* Same config than test004  */", "+\tpublic void test014() throws JavaModelException, CoreException {", "+\t\tString encoding = \"UTF-8\".equals(vmEncoding) ? \"Cp1252\" : \"UTF-8\";", "+\t\tthis.utf8File.setCharset(encoding);", "+\t\t// Get source and compare with file contents", "+\t\tString source = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(this.utf8Source.getSource());", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, vmEncoding));", "+\t\tencodedContents = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(encodedContents);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddc26adaabb5a8b2cfe3e1413fd30c5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "7dfdcc33c89bb2a137f9c84963dd6ab9ff74a661", "commitAfterChange": "f24c43070146ea63fd82e385697f695064b998f3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void test006() throws JavaModelException, CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic void test006() throws JavaModelException, CoreException", "diff": ["-\tpublic void test006() throws JavaModelException, CoreException, UnsupportedEncodingException {", "+\tpublic void test006() throws JavaModelException, CoreException {", "-\t\t// Get compilation unit and compare source", "+\t\t// Set encoding different than workspace default one", "+\t\tString encoding = wkspEncoding.equals(vmEncoding) ? (\"UTF-8\".equals(wkspEncoding) ? \"Cp1252\" : \"UTF-8\") : vmEncoding;", "+", "+\t\t// Get source and compare with file contents", "-\t\tString source = this.utf8Source.getSource();", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File));", "-\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", encodedContents, source);", "-\t\t\t", "-\t\t// Now compare bytes array", "-\t\tbyte[] sourceBytes = source.getBytes(systemEncoding);", "-\t\tbyte[] encodedBytes = Util.getResourceContentsAsByteArray(this.utf8File);", "-\t\tassertEquals(\"Wrong size of encoded string\", encodedBytes.length, sourceBytes.length);", "-\t\t// Do not compare arrays contents if system encoding is ASCII (meaningful bytes are destroyed during convertion...)", "-\t\tif (!\"ASCII\".equals(systemEncoding)) {", "-\t\t\tfor (int i = 0, max = sourceBytes.length; i < max; i++) {", "-\t\t\t\tassertTrue(\"Wrong size of encoded character at \" + i, sourceBytes[i] == encodedBytes[i]);", "-\t\t\t}", "-\t\t}", "+\t\tString source = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(this.utf8Source.getSource());", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, encoding));", "+\t\tencodedContents = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(encodedContents);", "+\t\tassertFalse(\"Sources should not be the same as they were decoded with different encoding!\", encodedContents.equals(source));"]}], "num": 20841}