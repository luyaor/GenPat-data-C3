{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89be4ee967c50b93872799acc69663ec", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d3d94ce184ad17243c7647a768aad8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "6afa93473446fb2c6b874f92c72045670997535f", "commitAfterChange": "e9d42bfbf494b3bd89965c526aaae07d7189c12c", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 186, "signatureBeforeChange": " public void testBug388281_06()", "signatureAfterChange": " public void testBug388281_06()", "diff": ["+\t\t(this.complianceLevel < ClassFileConstants.JDK1_8 ?", "-\t\t\"----------\\n\",", "+\t\t\"----------\\n\"", "+\t\t: // at 1.8 we show null type annotations:", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in ctest\\\\C.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class C extends c.C2 implements i2.I2A {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The method m2(@NonNull Object) from C2 cannot implement the corresponding method from I2A due to incompatible nullness constraints\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in ctest\\\\C.java (at line 2)\\n\" + ", "+\t\t\"\tpublic class C extends c.C2 implements i2.I2A {\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The method m1(@NonNull Object) from C2 cannot implement the corresponding method from I2A due to incompatible nullness constraints\\n\" + ", "+\t\t\"----------\\n\"),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b219f3fe89a8a7ecda6d8eca92f0f69a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0276eed6cea993041a2491b2454e2b5cdc10853a", "commitAfterChange": "98d48348a9326f13ae94038169b2804277852fd1", "methodNumberBeforeChange": 1176, "methodNumberAfterChange": 1176, "signatureBeforeChange": " public void test1146()", "signatureAfterChange": " public void test1146()", "diff": ["-// FIXME: javac rejects (correctly? how?) (intermittent FAIL ?), see http://mail.openjdk.java.net/pipermail/lambda-spec-experts/2013-December/000443.html", "-\t\t\t\"Type mismatch: cannot convert from List<Comparator<?>> to int\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from List<Comparator<? super T>> to int\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\"\treturn compound(asList(a, b, rest));\\n\" + ", "-\t\t\t\"\t       ^^^^^^^^\\n\" + ", "-\t\t\t\"The method compound(Iterable<? extends Comparator<? super U>>) in the type X is not applicable for the arguments (List<Comparator<?>>)\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. WARNING in X.java (at line 14)\\n\" + ", "+\t\t\t\"4. WARNING in X.java (at line 14)\\n\" + "]}], "num": 47893}