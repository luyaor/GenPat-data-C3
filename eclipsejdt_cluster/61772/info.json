{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d5ffcc9ef080955e88166a603773bb9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6be494272e76d5939224fdbdebcc0aee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatchSet.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic void add(PotentialMatch potentialMatch)", "signatureAfterChange": "  public void add(PotentialMatch potentialMatch)", "diff": ["-\t", "-\tpublic void add(PotentialMatch potentialMatch) {", "-\t\tIPackageFragmentRoot root = potentialMatch.openable.getPackageFragmentRoot();", "-\t\tchar[] path = root.getPath().toString().toCharArray();", "-\t\tObjectVector potentialMatches = (ObjectVector)this.rootsToPotentialMatches.get(path);", "-\t\tif (potentialMatches == null) {", "-\t\t\tpotentialMatches = new ObjectVector();", "-\t\t\tthis.rootsToPotentialMatches.put(path, potentialMatches);", "-\t\t\tpotentialMatches.add(potentialMatch);", "-\t\t\tthis.elementCount++;", "-\t\t} else if (!potentialMatches.contains(potentialMatch)) {", "-\t\t\tpotentialMatches.add(potentialMatch);", "-\t\t\tthis.elementCount++;", "-\t\t}", "-\t}", "+", "+public void add(PotentialMatch potentialMatch) {", "+\tIPath path = potentialMatch.openable.getPackageFragmentRoot().getPath();", "+\tObjectVector potentialMatches = (ObjectVector) this.rootsToPotentialMatches.get(path);", "+\tif (potentialMatches != null) {", "+\t\tif (potentialMatches.contains(potentialMatch)) return;", "+\t} else {", "+\t\tthis.rootsToPotentialMatches.put(path, potentialMatches = new ObjectVector());", "+\t}", "+", "+\tpotentialMatches.add(potentialMatch);", "+\tthis.elementCount++;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f49b0a200043ae9d3803d2d46c79f2d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "350354f214ca227e1737fa04a92c132cd3211f35", "commitAfterChange": "e85ca2cada691cc814bdc6ae7f59c48ddbdb7a54", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 33, "signatureBeforeChange": "\r \r \tprivate void addPotentialMatch(IResource resource, Openable openable)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r private void addPotentialMatch(PotentialMatch potentialMatch)", "diff": ["-\tprivate void addPotentialMatch(IResource resource, Openable openable)\r", "-\t\tthrows JavaModelException {\r", "-\t\ttry {\r", "-\t\t\tif (this.potentialMatchesLength == this.potentialMatches.length) {\r", "-\t\t\t\tSystem.arraycopy(\r", "-\t\t\t\t\tthis.potentialMatches,\r", "-\t\t\t\t\t0,\r", "-\t\t\t\t\tthis.potentialMatches = new PotentialMatch[this.potentialMatchesLength * 2],\r", "-\t\t\t\t\t0,\r", "-\t\t\t\t\tthis.potentialMatchesLength);\r", "-\t\t\t}\r", "-\t\t\tPotentialMatch potentialMatch = new PotentialMatch(this, resource, openable);\r", "-\t\t\tif (!this.includesPotentialMatch(potentialMatch)) {\r", "-\t\t\t\tthis.potentialMatches[this.potentialMatchesLength++] = potentialMatch;\r", "-\t\t\t}\r", "-\t\t} catch (AbortCompilation e) {\r", "-\t\t\t// problem with class path: it could not find base classes\r", "-\t\t\tthrow new JavaModelException(\r", "-\t\t\t\te,\r", "-\t\t\t\tIJavaModelStatusConstants.BUILDER_INITIALIZATION_ERROR);\r", "-\t\t}\r", "+}\r", "+private void addPotentialMatch(PotentialMatch potentialMatch) {\r", "+\tif (this.potentialMatchesLength == this.potentialMatches.length) {\r", "+\t\tSystem.arraycopy(\r", "+\t\t\tthis.potentialMatches,\r", "+\t\t\t0,\r", "+\t\t\tthis.potentialMatches = new PotentialMatch[this.potentialMatchesLength * 2],\r", "+\t\t\t0,\r", "+\t\t\tthis.potentialMatchesLength);\r", "+\t}\r", "+\tif (!this.includesPotentialMatch(potentialMatch)) {\r", "+\t\tthis.potentialMatches[this.potentialMatchesLength++] = potentialMatch;\r", "+\t}\r", "+}\r"]}], "num": 61772}