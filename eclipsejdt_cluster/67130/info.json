{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "167a8ecabab39311e10289419f5e0fc5", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4da96aadf5e80cc93d60fdfa98d03dde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/elements/ElementProc.java", "commitBeforeChange": "7e41439f7b91a880bb131d143b9faf947232eb35", "commitAfterChange": "1fe69d52230e67687b32b072c6843ac0b930c0b8", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprivate boolean examineDAnnotations()", "signatureAfterChange": " \tprivate boolean examineDAnnotations()", "diff": ["-\t\t\t\t\t\"targets.model.pa.AnnoZ\".equals(((TypeElement)annotDElem).getQualifiedName().toString())) {", "+\t\t\t\t\t!\"targets.model.pa.AnnoZ\".equals(((TypeElement)annotDElem).getQualifiedName().toString())) {", "-\t\t\t\t\t\"targets.model.pa.AnnoZ\".equals(((TypeElement)annotDElem).getQualifiedName().toString())) {", "+\t\t\t\t\t!\"targets.model.pa.AnnoZ\".equals(((TypeElement)annotDElem).getQualifiedName().toString())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb73ae39b05de203bd7bdc7c04ce73d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/WildcardBinding.java", "commitBeforeChange": "8d1d658761d5e634e1f9986cdb54c46ecd8cbc2e", "commitAfterChange": "f4d9deb41a71301595419326392826169e31b674", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean boundCheck(TypeBinding argumentType)", "signatureAfterChange": " \tpublic boolean boundCheck(TypeBinding argumentType)", "diff": ["-\t            if (argumentType.isCompatibleWith(this.bound)) return true;", "+\t            if (!argumentType.isCompatibleWith(this.bound)) return false;", "-            \t\tif (argumentType.isCompatibleWith(this.otherBounds[i])) return true;", "+            \t\tif (!argumentType.isCompatibleWith(this.otherBounds[i])) return false;", "-            \treturn false;", "+            \treturn true;"]}], "num": 67130}