{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "802c91c6a5c56d63640560c88f3ba4d2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c4da61b021e1549701a8f7b38d63609", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " public TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " public TypeBinding resolveType(BlockScope blockScope)", "diff": ["+}", "-\tif (this.resolvedType != null) { // is a shared type reference which was already resolved", "-\t\tif (!this.resolvedType.isValidBinding())", "+\tTypeBinding type;", "+\tif ((type = this.resolvedType) != null) { // is a shared type reference which was already resolved", "+\t\tif (!type.isValidBinding())", "-\t\tthis.resolvedType = getTypeBinding(blockScope);", "-\t\tif (!this.resolvedType.isValidBinding()) {", "+\t\ttype = this.resolvedType = getTypeBinding(blockScope);", "+\t\tif (type == null)", "+\t\t\treturn null; // detected cycle while resolving hierarchy", "+\t\tif (!type.isValidBinding()) {", "-\t\tif (isTypeUseDeprecated(this.resolvedType, blockScope)) {", "+\t\tif (isTypeUseDeprecated(type, blockScope)) {", "+\t\t// check raw type", "+\t\tif (type.isArrayType()) {", "+\t\t    TypeBinding leafComponentType = type.leafComponentType();", "+\t\t    if (leafComponentType.isGenericType()) { // raw type", "+\t\t        return this.resolvedType = blockScope.createArrayType(blockScope.environment().createRawType((ReferenceBinding)leafComponentType, null), type.dimensions());", "+\t\t    }", "+\t\t} else if (type.isGenericType()) {", "+\t        return this.resolvedType = blockScope.environment().createRawType((ReferenceBinding)type, null); // raw type", "+\t\t}\t\t", "+\t}", "+\treturn this.resolvedType;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44b13b57432537cb97c90077f9f47bdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleTypeReference.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeEnclosing(BlockScope scope, ReferenceBinding enclosingType)", "diff": ["-\t\tReferenceBinding memberTb = scope.getMemberType(token, enclosingType);", "-\t\tif (!memberTb.isValidBinding()) {", "-\t\t\tscope.problemReporter().invalidEnclosingType(this, memberTb, enclosingType);", "+\t\tReferenceBinding memberType = scope.getMemberType(token, enclosingType);", "+\t\tif (!memberType.isValidBinding()) {", "+\t\t\tscope.problemReporter().invalidEnclosingType(this, memberType, enclosingType);", "-\t\tif (isTypeUseDeprecated(memberTb, scope))", "-\t\t\tscope.problemReporter().deprecatedType(memberTb, this);", "-\t\treturn this.resolvedType = memberTb;", "+\t\tif (isTypeUseDeprecated(memberType, scope)) {", "+\t\t\tscope.problemReporter().deprecatedType(memberType, this);", "+\t\t}", "+\t\t// check raw type", "+\t\tif (memberType.isArrayType()) {", "+\t\t    TypeBinding leafComponentType = memberType.leafComponentType();", "+\t\t    if (leafComponentType.isGenericType()) { // raw type", "+\t\t        return this.resolvedType = scope.createArrayType(scope.environment().createRawType((ReferenceBinding)leafComponentType, null), memberType.dimensions());", "+\t\t    }", "+\t\t} else if (memberType.isGenericType()) {", "+\t        return this.resolvedType = scope.environment().createRawType(memberType, null); // raw type", "+\t\t}\t\t\t", "+\t\treturn this.resolvedType = memberType;"]}], "num": 42237}