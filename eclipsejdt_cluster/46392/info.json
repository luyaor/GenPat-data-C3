{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "357fad604db9cb62ea338ef1b9a4d484", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37a21a9580bdd588319ba5bbcc51a7c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c59be425cf25326239f4ea61082e801292bcf9ab", "commitAfterChange": "d6fb9802bac486c7e71b20d321f123bc000bd933", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r public static int getParameterCount(String methodSignature) throws IllegalArgumentException", "signatureAfterChange": "\r public static int getParameterCount(char[] methodSignature) throws IllegalArgumentException", "diff": ["-public static int getParameterCount(String methodSignature) throws IllegalArgumentException {\r", "+public static int getParameterCount(char[] methodSignature) throws IllegalArgumentException {\r", "-\t\tint i = methodSignature.indexOf(C_PARAM_START) + 1;\r", "+\t\tint i = CharOperation.indexOf(C_PARAM_START, methodSignature) + 1;\r", "-\t\t\tchar c = methodSignature.charAt(i++);\r", "+\t\t\tchar c = methodSignature[i++];\r", "-\t\t\t\t\ti = methodSignature.indexOf(C_SEMICOLON, i) + 1;\r", "+\t\t\t\t\ti = CharOperation.indexOf(C_SEMICOLON, methodSignature, i) + 1;\r", "-\t} catch (StringIndexOutOfBoundsException e) {\r", "+\t} catch (ArrayIndexOutOfBoundsException e) {\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "754fbe33c5aea69829af6984a59accce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "c59be425cf25326239f4ea61082e801292bcf9ab", "commitAfterChange": "d6fb9802bac486c7e71b20d321f123bc000bd933", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public static int getArrayCount(String typeSignature) throws IllegalArgumentException", "signatureAfterChange": "\r public static int getArrayCount(char[] typeSignature) throws IllegalArgumentException", "diff": ["+ */\r", "+public static int getArrayCount(char[] typeSignature) throws IllegalArgumentException {\t\r", "+\t\tint count = 0;\r", "+\t\twhile (typeSignature[count] == C_ARRAY) {\r", "+\t\t\t++count;\r", "+\t\treturn count;\r", "+\t} catch (ArrayIndexOutOfBoundsException e) { // signature is syntactically incorrect if last character is C_ARRAY\r", "-\ttry {\r", "-\t\tint count = 0;\r", "-\t\twhile (typeSignature.charAt(count) == C_ARRAY) {\r", "-\t\t\t++count;\r", "-\t\t}\r", "-\t\treturn count;\r", "-\t} catch (StringIndexOutOfBoundsException e) {\r", "-\t\tthrow new IllegalArgumentException();\r", "-\t}\r"]}], "num": 46392}