{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "21a3729560c985e6350162fc9ef9c76b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "867e4f90db3e4709d34969aec24f1ecf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/LabeledStatement.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof LabeledStatement)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tLabeledStatement o = (LabeledStatement) other;\r", "-\t\treturn \r", "-\t\t\t(ASTNode.equalNodes(getLabel(), o.getLabel())\r", "-\t\t\t&& ASTNode.equalNodes(getBody(), o.getBody()));\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af9fd5b5a709b6cc91b86291e608d535", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CatchClause.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof CatchClause)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tCatchClause o = (CatchClause) other;\r", "-\t\treturn \r", "-\t\t\t(ASTNode.equalNodes(getException(), o.getException())\r", "-\t\t\t&&ASTNode.equalNodes(getBody(), o.getBody()));\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}], "num": 10783}