{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fdfe48204c74e9fa3dd7e9cf05ca81ce", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "047e453f15abda1d339df508d566aa98", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 612, "methodNumberAfterChange": 612, "signatureBeforeChange": " \tpublic void test608()", "signatureAfterChange": " \tpublic void test608()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in Ball.java (at line 10)\\n\" + ", "-\t\t\t\"\tCollections.sort(foo);\\n\" + ", "-\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: Unchecked invocation sort(List<Ball>) of the generic method sort(List<T>) of type Collections\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in Ball.java (at line 12)\\n\" + ", "-\t\t\t\"\tZork z;\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"Zork cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\");", "+            \"----------\\n\" + ", "+    \t\t\"1. WARNING in Ball.java (at line 2)\\n\" + ", "+    \t\t\"\tclass Ball implements Comparable {\\n\" + ", "+    \t\t\"\t                      ^^^^^^^^^^\\n\" + ", "+    \t\t\"Type safety: Comparable is a raw type. References to generic type Comparable<T> should be parameterized\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"2. WARNING in Ball.java (at line 10)\\n\" + ", "+    \t\t\"\tCollections.sort(foo);\\n\" + ", "+    \t\t\"\t^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+    \t\t\"Type safety: Unchecked invocation sort(List<Ball>) of the generic method sort(List<T>) of type Collections\\n\" + ", "+    \t\t\"----------\\n\" + ", "+    \t\t\"3. ERROR in Ball.java (at line 12)\\n\" + ", "+    \t\t\"\tZork z;\\n\" + ", "+    \t\t\"\t^^^^\\n\" + ", "+    \t\t\"Zork cannot be resolved to a type\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b328b471ff7227e5c7a396c0fa0f905", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 763, "methodNumberAfterChange": 763, "signatureBeforeChange": " public void test757()", "signatureAfterChange": " public void test757()", "diff": ["-\t\t\"1. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tEntryMap.Entry internalGet(Object key) {\\n\" + ", "+\t\t\"\t^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Type safety: X.EntryMap.Entry is a raw type. References to generic type X<K,V>.EntryMap<K,V>.Entry should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 12)\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 14)\\n\" + "]}], "num": 3081}