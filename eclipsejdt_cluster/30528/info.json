{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f7f78be87669c293f6ef165afb6e1001", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cb550b64b271696fd24aea7d31560de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "5292c15945b50fef548808f853ce39423b5670f2", "commitAfterChange": "e32dbbc9904e1f7eb4c6e79a7595e742217638b3", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 72, "signatureBeforeChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block)", "signatureAfterChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block) {", "+\tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine) {", "-\t\tboolean textOnNewLine = (text == block.nodes[0] && !block.isInlined() && block.isParamTag() && (this.formatter.preferences.comment_insert_new_line_for_parameter || !block.hasTextOnTagLine())) || text.linesBefore > 0 || this.column > (this.formatter.preferences.comment_line_length+1);", "-\t\t\t\t\tbuffer = new StringBuffer();", "+\t\t\t\t\tbuffer.setLength(0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2a927df1d34700771aa1a2c5fadeaa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapPreparator.java", "commitBeforeChange": "ea5c9cc312f4b4f8b75e3a6a2f95be1c2b2c1422", "commitAfterChange": "1d27cfb65a8550e3dd44f890da53c4bdcdcccdbf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(TypeDeclaration node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(TypeDeclaration node)", "diff": ["-\t\t\tthis.wrapGroupEnd = this.tm.lastIndexIn(superInterfaceTypes.get(superInterfaceTypes.size() - 1), -1);", "-\t\t\tfor (Type type : superInterfaceTypes)", "-\t\t\t\tthis.wrapIndexes.add(this.tm.firstIndexIn(type, -1));", "+\t\t\tprepareElementsList(superInterfaceTypes, TokenNameCOMMA, -1);"]}], "num": 30528}