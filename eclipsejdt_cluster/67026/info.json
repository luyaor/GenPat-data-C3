{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da3f75aae603ec4eefdc9d9cd0dca644", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1476864810093554048208b0b57019bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5046f0da42323773845d7a3edf39df0b8c6a1944", "commitAfterChange": "80f69cca108e407e297e62382ba04bd29eb1703d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprotected String encodeClasspath(IClasspathEntry[] classpath, IPath outputLocation, boolean indent, Map unknownElements) throws JavaModelException", "signatureAfterChange": " \tprotected String encodeClasspath(IClasspathEntry[] classpath, IClasspathEntry[] referencedEntries, IPath outputLocation, boolean indent, Map unknownElements) throws JavaModelException", "diff": ["-\tprotected String encodeClasspath(IClasspathEntry[] classpath, IPath outputLocation, boolean indent, Map unknownElements) throws JavaModelException {", "+\tprotected String encodeClasspath(IClasspathEntry[] classpath, IClasspathEntry[] referencedEntries, IPath outputLocation, boolean indent, Map unknownElements) throws JavaModelException {", "-\t\t\t\t((ClasspathEntry)classpath[i]).elementEncode(xmlWriter, this.project.getFullPath(), indent, true, unknownElements);", "+\t\t\t\t((ClasspathEntry)classpath[i]).elementEncode(xmlWriter, this.project.getFullPath(), indent, true, unknownElements, false);", "+\t\t\tif (referencedEntries != null) {", "+\t\t\t\tfor (int i = 0; i < referencedEntries.length; ++i) {", "+\t\t\t\t\t((ClasspathEntry) referencedEntries[i]).elementEncode(xmlWriter, this.project.getFullPath(), indent, true, unknownElements, true);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63db503de617233a36957fe83970159a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "db8326c8bf5f71d5857a001444f9a6b78ff12f0a", "commitAfterChange": "35479e92cf76ddb81a077e36ac9bcdd2a30c6978", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "signatureAfterChange": " \tpublic void initializeBounds(Scope scope, ParameterizedTypeBinding capturedParameterizedType)", "diff": ["-\t\t\t\t\t\tsubstitutedVariableInterfaces[0] =  (ReferenceBinding) capturedWildcardBound;", "-\t\t\t\t\t\tthis.setSuperInterfaces(Scope.greaterLowerBound(substitutedVariableInterfaces));", "+\t\t\t\t\t\t// to properly support glb, perform capture *after* glb, so restart from the original bound:", "+\t\t\t\t\t\tsubstitutedVariableInterfaces[0] =  (ReferenceBinding) originalWildcardBound;", "+\t\t\t\t\t\tReferenceBinding[] glb = Scope.greaterLowerBound(substitutedVariableInterfaces);", "+\t\t\t\t\t\tif (glb != null) {", "+\t\t\t\t\t\t\tfor (int i = 0; i < glb.length; i++)", "+\t\t\t\t\t\t\t\tglb[i] = (ReferenceBinding) glb[i].capture(scope, this.position);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.setSuperInterfaces(glb);"]}], "num": 67026}