{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e71ba432956b69c09b7729697edbb529", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ab2860c3e539a58d2c6dab9fd329f53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 81, "methodNumberAfterChange": 81, "signatureBeforeChange": " \tpublic void test074()", "signatureAfterChange": " \tpublic void test074()", "diff": ["-\t\t\t\"1. ERROR in I.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tinterface J extends I { @Override void clone(); }\\r\\n\" + ", "-\t\t\t\"\t                                       ^^^^^^^\\n\" + ", "-\t\t\t\"The method clone() of type J must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in I.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tinterface J extends I { @Override void clone(); }\\r\\n\" + ", "+\t\t\t\"1. WARNING in I.java (at line 2)\\n\" + ", "+\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in I.java (at line 2)\\n\" + ", "+\t\t\t\"\tinterface J extends I { @Override void clone(); }\\n\" + ", "+\t\t\t\"\t                                       ^^^^^^^\\n\" + ", "+\t\t\t\"The method clone() of type J must override a superclass method\\n\" + ", "-\t\t\t\"1. ERROR in I.java (at line 1)\\n\" + ", "-\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "-\t\t\t\"\t                             ^^^^^^^\\n\" + ", "-\t\t\t\"The method clone() of type I must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in I.java (at line 1)\\n\" + ", "+\t\t\t\"1. WARNING in I.java (at line 1)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in I.java (at line 1)\\n\" + ", "+\t\t\t\"\tinterface I { @Override void clone(); }\\n\" + ", "+\t\t\t\"\t                             ^^^^^^^\\n\" + ", "+\t\t\t\"The method clone() of type I must override a superclass method\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "592ea4d12ab6f6cc1e3d2cb4c5addc19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "85fe43540d2fa2b41e90fbadb73dc3c8d856ecfb", "commitAfterChange": "e60ca02f81acc7600a43413bd7fb7c0779ae6a52", "methodNumberBeforeChange": 231, "methodNumberAfterChange": 231, "signatureBeforeChange": " \tpublic void test227()", "signatureAfterChange": " \tpublic void test227()", "diff": ["-\t\t\t\"6. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"\tvoid m5() { List c = null; List l = (Collection<X>)c; } // type mismatch\\n\" + ", "-\t\t\t\"\t                                ^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Collection<X> to List\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"7. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"6. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\t\"8. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"\tvoid m6() { List c = null; List l = (Collection<?>)c; } // type mismatch\\n\" + ", "-\t\t\t\"\t                                ^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Collection<capture-of ?> to List\\n\" + ", "+\t\t\t\"7. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\tvoid m5() { List c = null; List l = (Collection<X>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t                                    ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Collection<X> to List\\n\" + ", "-\t\t\t\"9. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"8. WARNING in X.java (at line 11)\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"9. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tvoid m6() { List c = null; List l = (Collection<?>)c; } // type mismatch\\n\" + ", "+\t\t\t\"\t                                    ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Collection<capture-of ?> to List\\n\" + "]}], "num": 57297}