{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ddc6929a1de5e3c0b4a9ba9e0f5a7db", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "375cd5d106795928eddb4468b6c17567", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "394f9dd17363cb38ab41ca621f834f2ad413fdce", "commitAfterChange": "2b23d6b4deb8c097d394f2fa06fcc5a5e664d549", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 87, "signatureBeforeChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory, \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tJavacTestOptions javacTestOptions)", "signatureAfterChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory, \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tJavacTestOptions javacTestOptions)", "diff": ["+\t\t\t\tString execErrorString = this.verifier.getExecutionError();", "+\t\t\t\tif (execErrorString != null && execErrorString.length() > 0) {", "+\t\t\t\t\tSystem.out.println(\"[ERR]:\"+execErrorString); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\tString execOutputString = this.verifier.getExecutionOutput();", "+\t\t\t\tif (execOutputString != null && execOutputString.length() > 0) {", "+\t\t\t\t\tSystem.out.println(\"[OUT]:\"+execOutputString); //$NON-NLS-1$", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "859bbfecac52967e9dd8bd6a9126f9ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "1518d3ade03d9d9dfb08bcae5ab3261eea2b095b", "commitAfterChange": "4f8ce9c44083e58564232003d59f7f12a74c51b9", "methodNumberBeforeChange": 230, "methodNumberAfterChange": 230, "signatureBeforeChange": "  \tpublic void setOptions(Hashtable newOptions)", "signatureAfterChange": "  \tpublic void setOptions(Hashtable newOptions)", "diff": ["+\t\t", "+\t\tif (DEBUG_302850) {", "+\t\t\tSystem.out.println(\"Entering in JavaModelManager.setOptions():\"); //$NON-NLS-1$", "+\t\t\tSystem.out.println(new CompilerOptions(newOptions).toString());", "+\t\t\tSystem.out.println(\"\t- Call stack:\"); //$NON-NLS-1$", "+\t\t\tStackTraceElement[] elements = new Exception().getStackTrace();", "+\t\t\tfor (int i=0,n=elements.length; i<n; i++) {", "+\t\t\t\tSystem.out.println(\"\t\t+ \"+elements[i]); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}"]}], "num": 38040}