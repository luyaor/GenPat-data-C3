{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a26a4d5d36a0f5da2afce3ef13a9c35b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adc7739cd3e2a12763bf8479f8099e43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedAllocationExpression.java", "commitBeforeChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "commitAfterChange": "18c98a5a751096350077436fcf968eb63364ccb9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tif (anonymousType.binding.superInterfaces == Binding.NO_SUPERINTERFACES) {", "+\t\t\tLocalTypeBinding localType = (LocalTypeBinding) anonymousType.binding;", "+\t\t\tif (localType.superInterfaces == Binding.NO_SUPERINTERFACES) {", "-\t\t\t\tthrow new SelectionNodeFound(constructor.constructorCall.binding);", "-\t\t\t} else {", "-\t\t\t\t// open on the only superinterface", "-\t\t\t\tthrow new SelectionNodeFound(anonymousType.binding.superInterfaces[0]);", "+\t\t\t\tif (constructor != null) {", "+\t\t\t\t\tthrow new SelectionNodeFound(constructor.constructorCall.binding);", "+\t\t\t\t}", "+\t\t\t\tthrow new SelectionNodeFound(binding);", "+\t\t\t// open on the only super interface", "+\t\t\tthrow new SelectionNodeFound(localType.superInterfaces[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0a9f6b9779a5ddd782cc18846d088ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnQualifiedAllocationExpression.java", "commitBeforeChange": "dc65df766d611a37f7ac764bcbe2a25e27a5e3bd", "commitAfterChange": "bef60d1fb53f507f903d66ac6e04e719aa5b50f4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (anonymousType.binding.superInterfaces == Binding.NO_SUPERINTERFACES) {", "-\t\t\t// find the constructor binding inside the super constructor call", "-\t\t\tConstructorDeclaration constructor = (ConstructorDeclaration) anonymousType.declarationOf(binding.original());", "-\t\t\tthrow new SelectionNodeFound(constructor.constructorCall.binding);", "+\t\tif (anonymousType.binding != null) {", "+\t\t\tif (anonymousType.binding.superInterfaces == Binding.NO_SUPERINTERFACES) {", "+\t\t\t\t// find the constructor binding inside the super constructor call", "+\t\t\t\tConstructorDeclaration constructor = (ConstructorDeclaration) anonymousType.declarationOf(binding.original());", "+\t\t\t\tthrow new SelectionNodeFound(constructor.constructorCall.binding);", "+\t\t\t} else {", "+\t\t\t\t// open on the only superinterface", "+\t\t\t\tthrow new SelectionNodeFound(anonymousType.binding.superInterfaces[0]);", "+\t\t\t}", "-\t\t\t// open on the only superinterface", "-\t\t\tthrow new SelectionNodeFound(anonymousType.binding.superInterfaces[0]);", "+\t\t\tif (this.resolvedType.isInterface()) {", "+\t\t\t\tthrow new SelectionNodeFound(resolvedType);", "+\t\t\t}", "+\t\t\tthrow new SelectionNodeFound(binding);"]}], "num": 17491}