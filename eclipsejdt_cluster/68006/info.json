{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d72dae8421077c5984f0175eb8ff9e9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fd3b414cb20b693c402e669f33cfaed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "  public void markAsDefinitelyNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyNull(VariableBinding local)", "diff": ["-public void markAsDefinitelyNull(LocalVariableBinding local) {", "+public void markAsDefinitelyNull(VariableBinding local) {", "-    \tif ((position = local.id + this.maxFieldCount) < BitCacheSize) { // use bits", "+    \tif (local instanceof FieldBinding) {", "+\t\t\tif ((local.modifiers & AccConstant) == AccConstant) {", "+\t\t\t\tposition = local.getAnalysisId(this.maxFieldCount);", "+\t\t\t} else {", "+\t    \t\t// non-final fields may be modified in separate threads and we cannot be sure about their", "+\t    \t\t// definite nullness. Hence, marking as potential null.", "+\t    \t\tthis.markNullStatus(local, FlowInfo.POTENTIALLY_NULL);", "+\t    \t\treturn;", "+\t\t\t}", "+    \t} else {", "+    \t\tposition = local.id + this.maxFieldCount;", "+    \t}", "+    \tif (position < BitCacheSize) { // use bits"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2796bbf73656cd9d2a65ec14e9e2df23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "  public void markAsDefinitelyNonNull(LocalVariableBinding local)", "signatureAfterChange": "  public void markAsDefinitelyNonNull(VariableBinding local)", "diff": ["-", "-public void markAsDefinitelyNonNull(LocalVariableBinding local) {", "+public void markAsDefinitelyNonNull(VariableBinding local) {", "-    \tif ((position = local.id + this.maxFieldCount) < BitCacheSize) { // use bits", "+    \tif (local instanceof FieldBinding) {", "+\t\t\tif ((local.modifiers & AccConstant) == AccConstant) {", "+\t\t\t\tposition = local.getAnalysisId(this.maxFieldCount);", "+\t\t\t} else {", "+\t    \t\t// non-final fields may be modified in separate threads and we cannot be sure about their", "+\t    \t\t// definite nullness. Hence, marking as definitely unknown to avoid deferring null check for these fields.", "+\t    \t\tthis.markAsDefinitelyUnknown(local);", "+\t    \t\treturn;", "+\t\t\t}", "+    \t} else {", "+    \t\tposition = local.id + this.maxFieldCount;", "+    \t}", "+    \tif (position < BitCacheSize) { // use bits"]}], "num": 68006}