{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a65beae0b4566010777fefe634531afa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "956139e866d7dd1b866ecad97ab42fed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tprivate boolean isResFilteredFromOutput(OutputsInfo info, IResource res, int elementType)", "signatureAfterChange": " \tprivate boolean isResFilteredFromOutput(RootInfo rootInfo, OutputsInfo info, IResource res, int elementType)", "diff": ["-\tprivate boolean isResFilteredFromOutput(OutputsInfo info, IResource res, int elementType) {", "+\tprivate boolean isResFilteredFromOutput(RootInfo rootInfo, OutputsInfo info, IResource res, int elementType) {", "+\t\t\tJavaProject javaProject = null;", "+\t\t\tString sourceLevel = null;", "+\t\t\tString complianceLevel = null;", "-\t\t\t\t\t\tif (elementType == IJavaElement.JAVA_PROJECT ", "-\t\t\t\t\t\t\t\t&& res instanceof IFile ", "-\t\t\t\t\t\t\t\t&& Util.isValidClassFileName(res.getName())) {", "-\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\tif (elementType == IJavaElement.JAVA_PROJECT && res instanceof IFile) {", "+\t\t\t\t\t\t\tif (sourceLevel == null) {", "+\t\t\t\t\t\t\t\t// Get java project to use its source and compliance levels", "+\t\t\t\t\t\t\t\tjavaProject = rootInfo == null ?", "+\t\t\t\t\t\t\t\t\t(JavaProject)this.createElement(res.getProject(), IJavaElement.JAVA_PROJECT, null) :", "+\t\t\t\t\t\t\t\t\trootInfo.project;", "+\t\t\t\t\t\t\t\tif (javaProject == null) {", "+\t\t\t\t\t\t\t\t\t// Cannot get any project => use workspace options", "+\t\t\t\t\t\t\t\t\tsourceLevel = this.manager.getOption(JavaCore.COMPILER_SOURCE);", "+\t\t\t\t\t\t\t\t\tcomplianceLevel = this.manager.getOption(JavaCore.COMPILER_COMPLIANCE);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tsourceLevel = javaProject.getOption(JavaCore.COMPILER_SOURCE, true);", "+\t\t\t\t\t\t\t\t\tcomplianceLevel = javaProject.getOption(JavaCore.COMPILER_COMPLIANCE, true);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (Util.isValidClassFileName(res.getName(), sourceLevel, complianceLevel)) {", "+\t\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaf83425f420aade871411c81bf5c5be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "8376377bee92e0d16cfa404c8d1e948dcf5be147", "commitAfterChange": "0a6cb9139841c5f6143bc94201bfcbd6024601de", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprivate boolean isResFilteredFromOutput(OutputInfo info, IResource res, int elementType)", "signatureAfterChange": " \tprivate boolean isResFilteredFromOutput(OutputsInfo info, IResource res, int elementType)", "diff": ["-\tprivate boolean isResFilteredFromOutput(OutputInfo info, IResource res, int elementType) {", "-\t\tboolean outputIsFiltered = false;", "-\t\tif (info != null && info.path.isPrefixOf(res.getFullPath())) {", "-\t\t\tif (info.traverseMode != IGNORE) {", "-\t\t\t\t// case of bin=src", "-\t\t\t\tif (info.traverseMode == SOURCE && elementType == IJavaElement.CLASS_FILE) {", "-\t\t\t\t\toutputIsFiltered = true;", "-\t\t\t\t} else {", "-\t\t\t\t\t// case of .class file under project and no source folder", "-\t\t\t\t\t// proj=bin", "-\t\t\t\t\tif (elementType == IJavaElement.JAVA_PROJECT ", "-\t\t\t\t\t\t\t&& res instanceof IFile ", "-\t\t\t\t\t\t\t&& Util.isValidClassFileName(res.getName())) {", "-\t\t\t\t\t\toutputIsFiltered = true;", "+\tprivate boolean isResFilteredFromOutput(OutputsInfo info, IResource res, int elementType) {", "+\t\tif (info != null) {", "+\t\t\tIPath resPath = res.getFullPath();", "+\t\t\tfor (int i = 0;  i < info.outputCount; i++) {", "+\t\t\t\tif (info.paths[i].isPrefixOf(resPath)) {", "+\t\t\t\t\tif (info.traverseModes[i] != IGNORE) {", "+\t\t\t\t\t\t// case of bin=src", "+\t\t\t\t\t\tif (info.traverseModes[i] == SOURCE && elementType == IJavaElement.CLASS_FILE) {", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t// case of .class file under project and no source folder", "+\t\t\t\t\t\t\t// proj=bin", "+\t\t\t\t\t\t\tif (elementType == IJavaElement.JAVA_PROJECT ", "+\t\t\t\t\t\t\t\t\t&& res instanceof IFile ", "+\t\t\t\t\t\t\t\t\t&& Util.isValidClassFileName(res.getName())) {", "+\t\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\treturn true;", "-\t\t\t} else {", "-\t\t\t\toutputIsFiltered = true;", "-\t\treturn outputIsFiltered;", "+\t\treturn false;"]}], "num": 13492}