{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ea82e07894716daf6b609f1afd02b43", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b35d94c52cfad7aa8a98b818ec77ff6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "df04cb9bfcfec194a3c1180d0af18a4bd840680a", "commitAfterChange": "e5cb0c7d733b4b140216dc60d7657a3d63f3d951", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \t \tpublic LabeledStatement convert(org.eclipse.jdt.internal.compiler.ast.LabeledStatement statement)", "signatureAfterChange": " \t \tpublic LabeledStatement convert(org.eclipse.jdt.internal.compiler.ast.LabeledStatement statement)", "diff": ["-\t\tlabeledStatement.setBody(convert(statement.statement));", "+\t\torg.eclipse.jdt.internal.compiler.ast.Statement body = statement.statement;", "+\t\tif (body == org.eclipse.jdt.internal.compiler.ast.Block.None) {", "+\t\t\tEmptyStatement emptyStatement = this.ast.newEmptyStatement();", "+\t\t\tint start = retrieveStartingSemiColonPosition(statement.sourceStart, statement.sourceEnd);", "+\t\t\tint end = retrieveEndingSemiColonPosition(start, statement.sourceEnd);", "+\t\t\temptyStatement.setSourceRange(start, end - start + 1);", "+\t\t\tlabeledStatement.setBody(emptyStatement);", "+\t\t} else {", "+\t\t\tlabeledStatement.setBody(convert(body));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdb021c0c1832435f51ba285d96a0c62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9bef3f15c43b07a14e76957980f62386b2bcee10", "commitAfterChange": "73f504e7d77d95d8fc2d6621b5727e1e3ab07530", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": "  \tpublic Statement convert(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "signatureAfterChange": "  \tpublic Statement convert(org.eclipse.jdt.internal.compiler.ast.Statement statement)", "diff": ["-\t\t\tfinal Expression expr = convert((org.eclipse.jdt.internal.compiler.ast.Expression) statement);", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.Expression statement2 = (org.eclipse.jdt.internal.compiler.ast.Expression) statement;", "+\t\t\tfinal Expression expr = convert(statement2);", "-\t\t\tstmt.setSourceRange(expr.getStartPosition(), expr.getLength());", "-\t\t\tretrieveSemiColonPosition(stmt);", "+\t\t\tint sourceStart = expr.getStartPosition();", "+\t\t\tint sourceEnd = statement2.statementEnd;", "+\t\t\tstmt.setSourceRange(sourceStart, sourceEnd - sourceStart + 1);"]}], "num": 11554}