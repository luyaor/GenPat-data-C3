{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "88cf2e32c7e01e17853d6fc86c4cd5e4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c33426c0eeee332fb7a035c726b42b95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceTests.java", "commitBeforeChange": "beddf7ea3209e604e7dd085747cac8c41b2dfbd0", "commitAfterChange": "cafda46507ac63768e17397affc84b63092c7e46", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected static Test buildSuite(Class testClass)", "signatureAfterChange": " \tstatic Test buildSuite(Class testClass)", "diff": ["-\t */", "-\tprotected static Test buildSuite(Class testClass) {", "-", "-\t\t// Create tests", "-\t\tTestSuite suite = new TestSuite(testClass.getName());", "-\t\tList tests = buildTestsList(testClass);", "-\t\tint size = tests.size();", "-\t\tTESTS_NAME_LIST = new ArrayList(size);", "-\t\tfor (int i=0; i<size; i++) {", "-\t\t\tFullSourceWorkspaceTests test = (FullSourceWorkspaceTests)tests.get(i);", "-\t\t\tsuite.addTest(test);", "-\t\t\tTESTS_NAME_LIST.add(test.getName());", "-\t\t}", "-\t\tALL_TESTS_COUNT += suite.testCount();", "-", "-\t\t// Init log dir", "-\t\tinitLogDir();", "-\t\t", "-\t\t// Return created tests", "-\t\treturn suite;", "-\t}", "+\t */", "+\tstatic Test buildSuite(Class testClass) {", "+", "+\t\t// Create tests", "+\t\tString className = testClass.getName();", "+\t\tTestSuite suite = new TestSuite(className);", "+\t\tList tests = buildTestsList(testClass);", "+\t\tint size = tests.size();", "+\t\tTESTS_NAME_LIST = new ArrayList(size);", "+\t\tfor (int i=0; i<size; i++) {", "+\t\t\tFullSourceWorkspaceTests test = (FullSourceWorkspaceTests)tests.get(i);", "+\t\t\tsuite.addTest(test);", "+\t\t\tTESTS_NAME_LIST.add(test.getName());", "+\t\t}", "+\t\tALL_TESTS_COUNT += suite.testCount();", "+\t\t", "+\t\t// Init log dir if necessary", "+\t\tif (LOG_DIR == null) {", "+\t\t\tif (RUN_ID == null) {", "+\t\t\t\tRUN_ID = suiteTypeShortName(testClass);", "+\t\t\t}", "+\t\t\tinitLogDir();", "+\t\t}", "+\t\t", "+\t\t// Return created tests", "+\t\treturn suite;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5856fad4cc1aa2df69fa616f4ea8f26", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "2452619bb5034f0a0ba9b6e9747cd6db77b2eb53", "commitAfterChange": "8d4f2ebabb0e50507cab6ea5f17acab787cfb10b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static Test suiteForComplianceLevel(String complianceLevel, Class setupClass, ArrayList testClasses)", "signatureAfterChange": " \tprivate static Test buildComplianceSetupTestSuite(List testClasses, Class setupClass, String complianceLevel)", "diff": ["-\tpublic static Test suiteForComplianceLevel(String complianceLevel, Class setupClass, ArrayList testClasses) {", "-\t\tTestSuite suite;", "-\t\tif (testClasses.size() == 1) {", "-\t\t\tsuite = new TestSuite((Class)testClasses.get(0), complianceLevel);", "-\t\t} else {", "-\t\t\tsuite = new TestSuite(complianceLevel);", "-\t\t\tfor (int i = 0, length = testClasses.size(); i < length; i++) {", "-\t\t\t\tClass testClass = (Class)testClasses.get(i);", "-\t\t\t\tTestSuite innerSuite = new TestSuite(testClass);", "-\t\t\t\tsuite.addTest(innerSuite);", "-\t\t\t}", "-\t\t}", "+\t */", "+\tprivate static Test buildComplianceSetupTestSuite(List testClasses, Class setupClass, String complianceLevel) {", "+\t\tTestSuite complianceSuite = new TestSuite(complianceLevel);", "+\t\tfor (int i=0, m=testClasses.size(); i<m ; i++) {", "+\t\t\tClass testClass = (Class)testClasses.get(i);", "+\t\t\tTestSuite suite = new TestSuite(testClass.getName());", "+\t\t\tList tests = buildTestsList(testClass);", "+\t\t\tfor (int index=0, size=tests.size(); index<size; index++) {", "+\t\t\t\tsuite.addTest((Test)tests.get(index));", "+\t\t\t}", "+\t\t\tcomplianceSuite.addTest(suite);", "+\t\t}", "+\t", "-\t\t\tTest setUp = (Test)constructor.newInstance(new Object[]{suite, complianceLevel});", "+\t\t\tTest setUp = (Test)constructor.newInstance(new Object[]{complianceSuite, complianceLevel});", "-", "+\t"]}], "num": 55336}