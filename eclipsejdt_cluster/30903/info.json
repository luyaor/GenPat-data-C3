{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d83035da037b952f0b2d70b1d45dcba0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a2f080cba12ef0d4da4a2f328f478c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "653b549b2ec915800fe34bbb2ab9809b71ca66a5", "commitAfterChange": "2caa59d033a9b6c8ec71aab586472ad7fe749893", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public void checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tif (this.resolvedType != null) {", "+\t\tif ((this.resolvedType.tagBits & TagBits.AnnotationNonNull) != 0) {", "+\t\t\treturn; // no danger", "+\t\t} else if ((this.resolvedType.tagBits & TagBits.AnnotationNullable) != 0) {", "+\t\t\tscope.problemReporter().dereferencingNullableExpression(this, scope.environment());", "+\t\t\treturn; // danger is definite.", "+\t\t\t// stopping analysis at this point requires that the above error is not suppressable", "+\t\t\t// unless suppressing all null warnings (otherwise we'd miss a stronger warning below).", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38be39bfe3e70561c41b13c7311ecf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " public boolean checkNPE(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tboolean isNullable = false;", "+\t\t// 1. priority: @NonNull", "-\t\t\tscope.problemReporter().dereferencingNullableExpression(this, scope.environment());", "-\t\t\treturn true; // danger is definite.", "-\t\t\t// stopping analysis at this point requires that the above error is not suppressable", "-\t\t\t// unless suppressing all null warnings (otherwise we'd miss a stronger warning below).", "+\t\t\tisNullable = true;", "+\t\t// 2. priority: local with flow analysis (via the FlowContext)", "+\t} else if (isNullable) {", "+\t\t// 3. priority: @Nullable without a local", "+\t\tscope.problemReporter().dereferencingNullableExpression(this);", "+\t\treturn true;"]}], "num": 30903}