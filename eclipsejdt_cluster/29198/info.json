{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0dee3176bceb9a86b54f3356ba1e424", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "585a4d7c7dc40066a97a0940ae43ea6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AmbiguousMethodTest.java", "commitBeforeChange": "e7041eebe1b9ef3b1ae9f5f9c79b24274ea327d1", "commitAfterChange": "8585977b682b225927c2b7dfa188383f714b1d41", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic void test022()", "signatureAfterChange": " \tpublic void test022()", "diff": ["-\t\t\"Method make(Class<W>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\"Erasure of method make(Class<W>) is the same as another method in type Y<V>\\n\" +", "-\t\t\"Method make(Class<U>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\"Erasure of method make(Class<U>) is the same as another method in type Y<V>\\n\" +", "-\t\t\t\"Method make(Class<W>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\t\"Erasure of method make(Class<W>) is the same as another method in type Y<V>\\n\" +", "-\t\t\t\"Method make(Class<U>) has the same erasure make(Class<T>) as another method in type Y<V>\\n\" + ", "+\t\t\t\"Erasure of method make(Class<U>) is the same as another method in type Y<V>\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d50cf319ec579fc6755567d94261e27b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargTest.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void test008()", "signatureAfterChange": "  \tpublic void test008()", "diff": ["-\t\t\t\"Inexact argument for the vararg constructor Y(boolean, Object[])\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs constructor Y(boolean, Object...). Argument should be casted to Object[] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"Inexact argument for the vararg constructor Y(char, int[][])\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs constructor Y(char, int[]...). Argument should be casted to int[][] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"Inexact argument for the vararg constructor Y(boolean, Object[])\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs constructor Y(boolean, Object...). Argument should be casted to Object[] to disambiguate, since it is passed as is\\n\" + ", "-\t\t\t\"Inexact argument for the vararg constructor Y(char, int[][])\\n\" + ", "+\t\t\t\"Ambiguous argument for the varargs constructor Y(char, int[]...). Argument should be casted to int[][] to disambiguate, since it is passed as is\\n\" + "]}], "num": 29198}