{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad415ff8bf72b6424e271ce1d7f214c9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24fffb5c8717364b88d7cc53561eee20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/ProcessorEnvImpl.java", "commitBeforeChange": "b0e9bea8e580536e7492868aec6988424ff22cb7", "commitAfterChange": "2bb908fe4c4bec3f1e5a84b7bbc8c64b4eaa7704", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": "     private void updateProblemLength()", "signatureAfterChange": "     private void updateProblemLength()", "diff": ["-    {", "+    {\t", "-    \t", "+    \t\tint[] classNameRange = null;", "-    \t\t\tif( problem.getSourceEnd() == -1 ){", "+    \t\t\tif( problem.getSourceStart() < 0 ){", "+    \t\t\t\tif( classNameRange == null )", "+    \t\t\t\t\tclassNameRange = getClassNameRange(file);", "+    \t\t\t\tproblem.setSourceStart(classNameRange[0]);", "+    \t\t\t\tproblem.setSourceEnd(classNameRange[1]);", "+    \t\t\t\tproblem.setSourceLineNumber(classNameRange[2]);", "+    \t\t\t}", "+    \t\t\tif( problem.getSourceEnd() < 0 ){", "-\t    \t\t\t\tif( problem.getSourceEnd() == -1 )", "+\t    \t\t\t\tif( problem.getSourceEnd() < 0 )", "-\t    \t\t\t\tif( problem.getSourceEnd() == -1 ){", "+\t    \t\t\t\tif( problem.getSourceEnd() < 0 ){", "-\t    \t    \t\t\tproblem.setSourceEnd(endingOffset);\t    \t    \t\t\t", "+\t    \t    \t\t\tproblem.setSourceEnd(endingOffset-1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c14ff6529060f74935254649caefd91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "8daf3b59179b016476aee8819452164a78d963ab", "commitAfterChange": "ec455405a83bfb36b65a1594dcc37928d4b0bc3b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected void storeProblemsFor(SourceFile sourceFile, IProblem[] problems) throws CoreException", "signatureAfterChange": " protected void storeProblemsFor(SourceFile sourceFile, IProblem[] problems) throws CoreException", "diff": ["-\t\t\t\t\tproblem.getMessage(),", "-\t\t\t\t\tproblem.isError() ? S_ERROR : S_WARNING, ", "-\t\t\t\t\tnew Integer(id),", "-\t\t\t\t\tnew Integer(problem.getSourceStart()),", "-\t\t\t\t\tnew Integer(problem.getSourceEnd() + 1),", "-\t\t\t\t\tnew Integer(problem.getSourceLineNumber()),", "-\t\t\t\t\tUtil.getProblemArgumentsForMarker(problem.getArguments())", "+\t\t\t\t\tproblem.getMessage(), // message", "+\t\t\t\t\tproblem.isError() ? S_ERROR : S_WARNING, // severity", "+\t\t\t\t\tnew Integer(id), // ID", "+\t\t\t\t\tnew Integer(problem.getSourceStart()), // start", "+\t\t\t\t\tnew Integer(problem.getSourceEnd() + 1), // end", "+\t\t\t\t\tnew Integer(problem.getSourceLineNumber()), // line", "+\t\t\t\t\tUtil.getProblemArgumentsForMarker(problem.getArguments()), // arguments", "+\t\t\t\t\tnew Integer(ProblemReporter.getProblemCategory(id)), // category ID"]}], "num": 36167}