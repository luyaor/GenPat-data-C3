{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a820fd66b3d1fb5ba85c9ba4a5b6c545", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "250f3ccd3553aca48c695d83b4d6b464", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/FieldBinding.java", "commitBeforeChange": "14609503efe4c7d28a69750ca6853c468e091676", "commitAfterChange": "60778824f4bf80e0d58926de2175a29d947efbe8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void fillInDefaultNonNullness(FieldDeclaration sourceField, Scope scope)", "signatureAfterChange": "  public void fillInDefaultNonNullness(FieldDeclaration sourceField, Scope scope)", "diff": ["+\tif (this.type == null || this.type.isBaseType())", "+\t\treturn;", "-\tif (this.type == null)", "-\t\treturn;", "-\tif (environment.usesNullTypeAnnotations() && !this.type.acceptsNonNullDefault())", "-\t\treturn;", "-\tif (   !this.type.isBaseType()", "-\t\t&& (this.tagBits & TagBits.AnnotationNullMASK) == 0 \t\t// declaration annotation?", "-\t\t&& (this.type.tagBits & TagBits.AnnotationNullMASK) == 0)\t// type annotation? (java.lang.@Nullable String)", "-\t{", "-\t\tif (environment.usesNullTypeAnnotations())", "+\tif (environment.usesNullTypeAnnotations()) {", "+\t\tif (!this.type.acceptsNonNullDefault())", "+\t\t\treturn;", "+\t\tif ( (this.type.tagBits & TagBits.AnnotationNullMASK) == 0) {", "-\t\telse", "+\t\t} else if ((this.type.tagBits & TagBits.AnnotationNonNull) != 0) {", "+\t\t\tscope.problemReporter().nullAnnotationIsRedundant(sourceField);", "+\t\t}", "+\t} else {", "+\t\tif ( (this.tagBits & TagBits.AnnotationNullMASK) == 0 ) {", "-\t} else if ((this.tagBits & TagBits.AnnotationNonNull) != 0) {", "-\t\tscope.problemReporter().nullAnnotationIsRedundant(sourceField);", "+\t\t} else if ((this.tagBits & TagBits.AnnotationNonNull) != 0) {", "+\t\t\tscope.problemReporter().nullAnnotationIsRedundant(sourceField);", "+\t\t}\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b41d464d6912075c1fad4a2e2f4b1bf8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 174, "signatureBeforeChange": "\t public void invalidConstructor(Statement statement, MethodBinding targetConstructor)", "signatureAfterChange": " public void invalidConstructor(Statement statement, MethodBinding targetConstructor)", "diff": ["-}\t", "+}", "+\t\t\tProblemMethodBinding problemConstructor = (ProblemMethodBinding) targetConstructor;", "+\t\t\tif (problemConstructor.closestMatch != null) {", "+\t\t    \tif ((problemConstructor.closestMatch.tagBits & TagBits.HasMissingType) != 0) {", "+\t\t\t\t\tthis.missingTypeInConstructor(statement, problemConstructor.closestMatch);", "+\t\t\t\t\treturn;", "+\t\t    \t}", "+\t\t    }\t\t\t\t", "+\t\t\t", "-\t\t\tProblemMethodBinding problemConstructor = (ProblemMethodBinding) targetConstructor;", "+\t\t\tproblemConstructor = (ProblemMethodBinding) targetConstructor;"]}], "num": 14800}