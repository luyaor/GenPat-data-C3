{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e32463d49fcad4e8f8ccbc5242940b0", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e203146a1dd32847f73b2798b8546d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "0ee327f784f1f4e34e68a84648fe26304fce751c", "commitAfterChange": "5b5d83d3544b223e577e7fddd59f42874f12eb50", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \t \tpublic void saveExternalLibTimeStamps() throws CoreException", "signatureAfterChange": " \t \tpublic void saveExternalLibTimeStamps() throws CoreException", "diff": ["-\t\t\tIterator keys = this.externalTimeStamps.keySet().iterator();", "-\t\t\twhile (keys.hasNext()) {", "-\t\t\t\tIPath key = (IPath) keys.next();", "+\t\t\tIterator entries = this.externalTimeStamps.entrySet().iterator();", "+\t\t\twhile (entries.hasNext()) {", "+\t\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\t\t\tIPath key = (IPath) entry.getKey();", "-\t\t\t\tLong timestamp = (Long) this.externalTimeStamps.get(key);", "+\t\t\t\tLong timestamp = (Long) entry.getValue();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f64f880e32dd0c83ccbe7fe8e4138b8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "0ee327f784f1f4e34e68a84648fe26304fce751c", "commitAfterChange": "5b5d83d3544b223e577e7fddd59f42874f12eb50", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public synchronized void removeIndexPath(IPath path)", "signatureAfterChange": " public synchronized void removeIndexPath(IPath path)", "diff": ["-\tSet keySet = this.indexes.keySet();", "-\tIterator keys = keySet.iterator();", "+\tSet entrySet = this.indexes.entrySet();", "+\tIterator entries = entrySet.iterator();", "-\tint max = keySet.size();", "+\tint max = entrySet.size();", "-\twhile (keys.hasNext()) {", "-\t\tString indexLocation = (String) keys.next();", "+\twhile (entries.hasNext()) {", "+\t\tMap.Entry entry = (Map.Entry) entries.next();", "+\t\tString indexLocation = (String) entry.getKey();", "-\t\t\tIndex index = (Index) this.indexes.get(indexLocation);", "+\t\t\tIndex index = (Index) entry.getValue();"]}], "num": 4957}