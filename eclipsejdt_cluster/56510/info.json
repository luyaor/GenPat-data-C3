{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b512362f4104ec4882ec2f4b028b7d9b", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ec88d75ffee2dfc81265e20896cb9e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "6100c16f42a61b4785fb3431eabdff7008e0822d", "commitAfterChange": "ae1f54f274fcbc3fe4d90b39f8d538bfd84fcc06", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel)", "signatureAfterChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel)", "diff": ["-\t\tboolean keepBridgeMethods = sourceLevel < ClassFileConstants.JDK1_5", "-\t\t\t&& this.environment.globalOptions.complianceLevel >= ClassFileConstants.JDK1_5;", "-\t\t\t\tif (keepBridgeMethods && (method.getModifiers() & ClassFileConstants.AccBridge) != 0)", "-\t\t\t\t\tcontinue; // want to see bridge methods as real methods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4389d5ccc84349a9ade5dad70cac401f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "commitAfterChange": "c691caa0dc4c5d86bd6e9b8bfd831e689219e521", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  protected void checkAndSetModifiers(int flag)", "signatureAfterChange": "  protected void checkAndSetModifiers(int flag)", "diff": ["-\tif ((this.modifiers & flag) != 0 // duplicate modifier", "-\t\t\t|| ((this.modifiers & ExtraCompilerModifiers.AccNotNull) != 0  // conflicting flags", "-\t\t\t\t&& (flag & ExtraCompilerModifiers.AccNullable) != 0)", "-\t\t\t|| ((flag & ExtraCompilerModifiers.AccNotNull) != 0  // conflicting flags", "-\t\t\t\t&& (this.modifiers & ExtraCompilerModifiers.AccNullable) != 0)) { ", "+\tif ((this.modifiers & flag) != 0){ // duplicate modifier", "-\t\t// TODO (maxime) check error message"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e78c5a24e00de7f2398bfedff76ee4d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "5dba2fb9ff4a65e2ec3c984b606cb269bb911a06", "commitAfterChange": "de6638c19ddd648da6cdf9ca6437e426c1cc8e15", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\t\t\tFieldBinding field = (FieldBinding) this.binding;", "-\t\t\t\t\t\tif (!field.isStatic() && scope.compilerOptions().getSeverity(CompilerOptions.UnqualifiedFieldAccess) != ProblemSeverities.Ignore) {", "-\t\t\t\t\t\t\tscope.problemReporter().unqualifiedFieldAccess(this, field);", "-\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f86fd02dbd32fab8e4b03d710498f4e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "5cdd74ffbe2d421e3dae9c00346cd61d59a4698a", "commitAfterChange": "94cf6b4f7af3fd80bbff88619e21ee7974889ee5", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " void faultInTypesForFieldsAndMethods()", "signatureAfterChange": " void faultInTypesForFieldsAndMethods()", "diff": ["-\t} else if ((this.modifiers & ClassFileConstants.AccDeprecated) != 0 && scope != null && scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5) {", "-\t\tscope.problemReporter().missingDeprecatedAnnotationForType(scope.referenceContext);"]}], "num": 56510}