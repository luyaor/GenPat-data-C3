{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d6f1838185562a48b8f6abd05547358", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fcd83c33863ee7ff12645aed35b72ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "dfd8d4647bad1465cda928961972e854fc071249", "commitAfterChange": "31c3266cfb06f3143b63cd3aca05524ef5cd1755", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r public synchronized IIndex recreateIndex(IPath path)", "signatureAfterChange": "\r public synchronized IIndex recreateIndex(IPath path)", "diff": ["-\t\t\tindex = IndexFactory.newIndex(indexPath, \"Index for \" + path.toOSString()); //$NON-NLS-1$\r", "+\t\t\tindex = new Index(indexPath, \"Index for \" + path.toOSString(), true /*reuse index file*/); //$NON-NLS-1$\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "484e0f27e73867773fe0751e9f016e13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ModifyingResourceTests.java", "commitBeforeChange": "5d2dde227fb55c68c1b5ecbe9e37790d7981d642", "commitAfterChange": "6516571b08ef2b8a3ca79436b6faa225bea91656", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void deleteFolder(String folderPath) throws CoreException", "signatureAfterChange": " protected void deleteFolder(String folderPath) throws CoreException", "diff": ["-\tdeleteResource(this.getFolder(folderPath));", "+\tdeleteFolder(new Path(folderPath));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a3220853b890363934e9a945c97ecbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "commitAfterChange": "638b00bc8e52106dab44ca0f7aa7dd0d9f96d9dc", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName, \t\tfinal int packageMatchRule, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tint searchFor, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName, \t\tfinal int packageMatchRule, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tint searchFor, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\tprogressMonitor == null ? null : SubMonitor.convert(progressMonitor, 1000-copiesLength));", "+\t\t\t\tprogressMonitor == null ? null : new SubProgressMonitor(progressMonitor, 1000-copiesLength));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79408e3a30f2220efd61dbdef7cf1bf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "fb92cfb822669ddb00db1cf41e3bdb1057d4d00d", "commitAfterChange": "00c13f2feec2211d8da2f8282a37167ca349b1b8", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public static SearchPattern createAndPattern(SearchPattern leftPattern, SearchPattern rightPattern)", "signatureAfterChange": " public static SearchPattern createAndPattern(SearchPattern leftPattern, SearchPattern rightPattern)", "diff": ["-\treturn MatchLocator.createAndPattern(leftPattern, rightPattern);", "+\treturn new AndPattern(leftPattern, rightPattern);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "959d9ac5be2645e15ed947ebd6789510", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/AbstractCompilationEnv.java", "commitBeforeChange": "bb6a78d249db719996651e9dce01af3d16d29c93", "commitAfterChange": "9f1b051d39ad6345db281e22e2a614a2f78dd564", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic Set<AnnotationProcessorListener> getProcessorListeners()", "signatureAfterChange": "  \tpublic Set<AnnotationProcessorListener> getProcessorListeners()", "diff": ["-\t\treturn Collections.unmodifiableSet(_listeners);", "+\t\t// Return a copy, to avoid ConcurrentModificationException if a listener", "+\t\t// removes itself in response to the callback.", "+\t\treturn new HashSet<AnnotationProcessorListener>(_listeners);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96fe4c2dc2e3c124011fdd363f3080cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "commitAfterChange": "638b00bc8e52106dab44ca0f7aa7dd0d9f96d9dc", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \tpublic void searchAllSecondaryTypeNames( \t\t\tIPackageFragmentRoot[] sourceFolders, \t\t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\t\tboolean waitForIndexes, \t\t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllSecondaryTypeNames( \t\t\tIPackageFragmentRoot[] sourceFolders, \t\t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\t\tboolean waitForIndexes, \t\t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\tprogressMonitor == null ? null : SubMonitor.convert(progressMonitor, 100));", "+\t\t\t\tprogressMonitor == null ? null : new SubProgressMonitor(progressMonitor, 100));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a40ae8e55ac96c6612f7438e372ece79", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeNamesCollector.java", "commitBeforeChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "commitAfterChange": "638b00bc8e52106dab44ca0f7aa7dd0d9f96d9dc", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected String[] getPathsOfDeclaringType()", "signatureAfterChange": " protected String[] getPathsOfDeclaringType()", "diff": ["-\t\tthis.progressMonitor == null ? null : SubMonitor.convert(this.progressMonitor, 100));", "+\t\tthis.progressMonitor == null ? null : new SubProgressMonitor(this.progressMonitor, 100));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c48e2cced11dcbdd385b0cebaca4e73c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "commitAfterChange": "638b00bc8e52106dab44ca0f7aa7dd0d9f96d9dc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tpublic void searchAllConstructorDeclarations( \t\tfinal char[] packageName, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessConstructorRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \t \tpublic void searchAllConstructorDeclarations( \t\tfinal char[] packageName, \t\tfinal char[] typeName, \t\tfinal int typeMatchRule, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessConstructorRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\tprogressMonitor == null ? null : SubMonitor.convert(progressMonitor, 1000-copiesLength));", "+\t\t\t\tprogressMonitor == null ? null : new SubProgressMonitor(progressMonitor, 1000-copiesLength));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c916cedf01a9d79019d7f152ea7c5f82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "833acf9fd171cc3b88beb3f35c58318abd7b1b7c", "commitAfterChange": "e83ae1e37e0f93b696a44a9888bf8d5e9425c659", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env)", "signatureAfterChange": " static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env)", "diff": ["-\treturn AnnotationBinding.createUnresolvedAnnotation(annotationType, pairs, env);", "+\treturn new UnresolvedAnnotationBinding(annotationType, pairs, env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7d8e370c242defb699b2fbbedfc78f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "c746ac6ae60dd73c0e681419d361cf16b338a627", "commitAfterChange": "638b00bc8e52106dab44ca0f7aa7dd0d9f96d9dc", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[][] qualifications, \t\tfinal char[][] typeNames, \t\tfinal int matchRule, \t\tint searchFor, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[][] qualifications, \t\tfinal char[][] typeNames, \t\tfinal int matchRule, \t\tint searchFor, \t\tIJavaSearchScope scope, \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\tprogressMonitor == null ? null : SubMonitor.convert(progressMonitor, 100));", "+\t\t\t\tprogressMonitor == null ? null : new SubProgressMonitor(progressMonitor, 100));"]}], "num": 758}