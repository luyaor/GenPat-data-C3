{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "649c57df1db6bf801c1553d27cb71ca9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b122ef5d3a216e35b2c74e7e8d5f283", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 29, "signatureBeforeChange": " public void markAsComparedEqualToNonNull(VariableBinding local)", "signatureAfterChange": " public void markAsComparedEqualToNonNull(LocalVariableBinding local)", "diff": ["-public void markAsComparedEqualToNonNull(VariableBinding local) {", "+public void markAsComparedEqualToNonNull(LocalVariableBinding local) {", "-\t\tif (local instanceof FieldBinding) {", "-\t\t\tif ((local.modifiers & AccConstant) == AccConstant) {", "-\t\t\t\tposition = local.getAnalysisId(this.maxFieldCount);", "-\t\t\t} else {", "-\t\t\t\t// non-final fields may be modified in separate threads and we cannot be sure about their", "-\t\t\t\t// definite nullness. Hence, marking as definitely unknown to avoid deferring null check for these fields", "-\t\t\t\tthis.markAsDefinitelyUnknown(local);", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t} else {", "-\t\t\tposition = local.id + this.maxFieldCount;", "-\t\t}", "-\t\tif (position < BitCacheSize) {", "+\t\tif ((position = local.id + this.maxFieldCount) < BitCacheSize) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa01b01b344f7b6d234887262c2b54d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void markAsComparedEqualToNonNull(LocalVariableBinding local)", "signatureAfterChange": " public void markAsComparedEqualToNonNull(VariableBinding local)", "diff": ["-public void markAsComparedEqualToNonNull(LocalVariableBinding local) {", "+public void markAsComparedEqualToNonNull(VariableBinding local) {", "+\t\tif (local instanceof FieldBinding) {", "+\t\t\tif ((local.modifiers & AccConstant) == AccConstant) {", "+\t\t\t\tposition = local.getAnalysisId(this.maxFieldCount);", "+\t\t\t} else {", "+\t\t\t\t// non-final fields may be modified in separate threads and we cannot be sure about their", "+\t\t\t\t// definite nullness. Hence, marking as definitely unknown to avoid deferring null check for these fields", "+\t\t\t\tthis.markAsDefinitelyUnknown(local);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t} else {", "+\t\t\tposition = local.id + this.maxFieldCount;", "+\t\t}", "-\t\tif ((position = local.id + this.maxFieldCount) < BitCacheSize) {", "+\t\tif (position < BitCacheSize) {"]}], "num": 52204}