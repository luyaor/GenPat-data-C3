{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bd5980f6d7f4930ae8565f7ed4cdd18a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15c9ac6af41d44d2ec5bd30b908bb7f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTypeDeclTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "   \t \tpublic void testTypeDeclRemoves() throws Exception", "signatureAfterChange": "   \t \tpublic void testTypeDeclRemoves() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsRemoved(superClass, null);", "+\t\t\trewrite.remove(superClass, null);", "-\t\t\trewrite.markAsRemoved((ASTNode) superInterfaces.get(0), null);", "+\t\t\trewrite.remove((ASTNode) superInterfaces.get(0), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) members.get(1), null);", "+\t\t\trewrite.remove((ASTNode) members.get(1), null);", "-\t\t\trewrite.markAsRemoved(meth, null);", "+\t\t\trewrite.remove(meth, null);", "-\t\t\trewrite.markAsRemoved((ASTNode) superInterfaces.get(0), null);", "+\t\t\trewrite.remove((ASTNode) superInterfaces.get(0), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) members.get(0), null);\t\t\t", "+\t\t\trewrite.remove((ASTNode) members.get(0), null);\t\t\t", "-\t\t\trewrite.markAsRemoved(type, null);\t\t", "+\t\t\trewrite.remove(type, null);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcc76cd96018f7b80eef986326aa9c01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " \t \tpublic void testSwitchStatement() throws Exception", "signatureAfterChange": " \t \tpublic void testSwitchStatement() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(expression, newExpression, null);", "+\t\t\trewrite.replace(expression, newExpression, null);", "-\t\t\tListRewriter listRewrite= rewrite.getListRewrite(switchStatement, SwitchStatement.STATEMENTS_PROPERTY);", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(switchStatement, SwitchStatement.STATEMENTS_PROPERTY);", "-\t\t\trewrite.markAsRemoved((ASTNode) statements.get(0), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) statements.get(1), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) statements.get(2), null);", "+\t\t\trewrite.remove((ASTNode) statements.get(0), null);", "+\t\t\trewrite.remove((ASTNode) statements.get(1), null);", "+\t\t\trewrite.remove((ASTNode) statements.get(2), null);", "-\t\t\trewrite.markAsReplaced(caseStatement.getExpression(), newCaseExpression, null);", "+\t\t\trewrite.replace(caseStatement.getExpression(), newCaseExpression, null);", "-\t\t\tListRewriter listRewrite= rewrite.getListRewrite(switchStatement, SwitchStatement.STATEMENTS_PROPERTY);", "+\t\t\tListRewrite listRewrite= rewrite.getListRewrite(switchStatement, SwitchStatement.STATEMENTS_PROPERTY);"]}], "num": 31626}