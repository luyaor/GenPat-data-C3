{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "56e6547dcfe573cd8b9e40f30b2c4df5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "109eaebf2f9e412a95c5ec31dfee84a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7aad3361583d2df12bebea3ea848be558fb7c078", "commitAfterChange": "166269334f64a2ac274f813709d4f4f756aeadc7", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tprivate int rewriteBodyNode(ASTNode parent, StructuralPropertyDescriptor property, int offset, int endPos, int indent, BlockContext context)", "signatureAfterChange": " \tprivate int rewriteBodyNode(ASTNode parent, StructuralPropertyDescriptor property, int offset, int endPos, int indent, BlockContext context)", "diff": ["+\t\t\t\t\tboolean insertNewLine = false;", "+\t\t\t\t\t\tint previousEnd = node.getStartPosition() + node.getLength();", "+\t\t\t\t\t\tif (endPos != previousEnd) {", "+\t\t\t\t\t\t\t// check if the end is a comment", "+\t\t\t\t\t\t\tint token = TokenScanner.END_OF_FILE;", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\ttoken = getScanner().readNext(previousEnd, false);", "+\t\t\t\t\t\t\t} catch(CoreException e) {", "+\t\t\t\t\t\t\t\t// ignore", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (token == TerminalTokens.TokenNameCOMMENT_LINE) {", "+\t\t\t\t\t\t\t\tinsertNewLine = true;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "-\t\t\t\t\tdoTextInsert(offset, prefix, editGroup);", "+\t\t\t\t\tString insertedPrefix = prefix;", "+\t\t\t\t\tif (insertNewLine) {", "+\t\t\t\t\t\tinsertedPrefix = getLineDelimiter() + this.formatter.createIndentString(indent) + insertedPrefix.trim() + ' ';", "+\t\t\t\t\t}", "+\t\t\t\t\tdoTextInsert(offset, insertedPrefix, editGroup);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17427837967ee9cd1ade4cc69bce4e7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "9ca09d5ed1be915e478e63cfb298cfaff9af7f75", "commitAfterChange": "264dd88468cd014ae7150e1040d5982ca933b94b", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate int printJavadocHtmlTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\t\t\t\t\t\tboolean needLeadingSpace = false;", "-\t\t\t\t\t\t\t\t\t\tneedLeadingSpace = false; // there may be no star after", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tneedLeadingSpace = true;", "-\t\t\t\t\t\t\t\t\t\t// skip javadoc comment star", "-\t\t\t\t\t\t\t\t\t\ttoken = this.scanner.getNextToken();", "-\t\t\t\t\t\t\t\t\t\tneedLeadingSpace = true;", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tif (token == TerminalTokens.TokenNameWHITESPACE) {", "-\t\t\t\t\t\t\t\t\t\tneedLeadingSpace = false;", "-\t\t\t\t\t\t\t\t\t\tnextStart++;", "-\t\t\t\t\t\tthis.needSpace = needLeadingSpace;", "+\t\t\t\t\t\tthis.needSpace = false;", "-\t\t\t\t\t\tif (this.needSpace) {", "-\t\t\t\t\t\t\taddInsertEdit(nextStart, \" \"); //$NON-NLS-1$", "-\t\t\t\t\t\t\tthis.needSpace = false;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tprintCodeSnippet(nextStart, codeEnd);", "+\t\t\t\t\t\tprintCodeSnippet(nextStart, codeEnd, linesGap);"]}], "num": 71737}