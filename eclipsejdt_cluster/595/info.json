{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "debf1a70ec87e02e60af952302e1ad59", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3cd6188911eb6fdae4ccbc306577ac2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "474e0db6559546cf5ac1476d3c4eb203e5f714e7", "commitAfterChange": "4f59c050dbd230110b8572ac654e1bee874e2b7b", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "signatureAfterChange": "  private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["-\t\t// when doing the lookup (https://bugs.eclipse.org/372418)", "-\t\tString enclosingTypeName = qualifiedTypeName;", "-\t\tint index = enclosingTypeName.indexOf('$');", "-\t\tif (index > 0)", "-\t\t\tenclosingTypeName = enclosingTypeName.substring(0, index);\t\t", "-\t\tSourceFile unit = (SourceFile) this.additionalUnits.get(enclosingTypeName); // doesn't have file extension", "+\t\t// when doing the lookup (https://bugs.eclipse.org/372418). ", "+\t\t// Also take care of $ in the name of the class (https://bugs.eclipse.org/Bug 377401)", "+\t\tint index = qualifiedTypeName.indexOf('$');", "+\t\tif (index > 0) {", "+\t\t\tString enclosingTypeName = qualifiedTypeName.substring(0, index);", "+\t\t\tSourceFile unit = (SourceFile) this.additionalUnits.get(enclosingTypeName); // doesn't have file extension", "+\t\t\tif (unit != null)", "+\t\t\t\treturn new NameEnvironmentAnswer(unit, null /*no access restriction*/);", "+\t\t}", "+\t\tSourceFile unit = (SourceFile) this.additionalUnits.get(qualifiedTypeName); // doesn't have file extension"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5f7c276ae1711ee096642cfc9eb99ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchNameEnvironment.java", "commitBeforeChange": "d95449cf37bb2e33a7804a35ceffb191c7190444", "commitAfterChange": "131cd393eb4d930b10c57f065ce4f8717582ea2a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "signatureAfterChange": "  private NameEnvironmentAnswer findClass(String qualifiedTypeName, char[] typeName)", "diff": ["-\t\t\tanswer = location.findClass(", "-\t\t\t\tsourceFileName,", "-\t\t\t\tqPackageName,", "-\t\t\t\tqSourceFileName);", "+\t\t\tICompilationUnit workingCopy = (ICompilationUnit) this.workingCopies.get(qualifiedTypeName);", "+\t\t\tif (workingCopy != null) {", "+\t\t\t\tanswer = new NameEnvironmentAnswer(workingCopy);", "+\t\t\t} else {", "+\t\t\t\tanswer = location.findClass(", "+\t\t\t\t\tsourceFileName,", "+\t\t\t\t\tqPackageName,", "+\t\t\t\t\tqSourceFileName);", "+\t\t\t}"]}], "num": 595}