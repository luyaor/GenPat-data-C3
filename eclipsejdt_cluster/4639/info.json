{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1f628a3ccda26c0e4ac8bc4b521d9686", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0467f89908ed7455c473be29171863d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "c67ad5667d81e7ca8719e3b0faf6c7f2b84f03ce", "commitAfterChange": "55a2e1357c3327be6468ccea0fa1bd5884ed35ad", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding capture(Scope scope, int position)", "signatureAfterChange": " \tpublic TypeBinding capture(Scope scope, int position)", "diff": ["-\t\tTypeBinding[] originalArguments = arguments, capturedArguments = originalArguments;", "+\t\tTypeBinding[] originalArguments = arguments;", "-\t\tcapturedArguments = new TypeBinding[length];", "+\t\tTypeBinding[] capturedArguments = new TypeBinding[length];", "+\t\t", "-\t\tif (capturedArguments != originalArguments) {", "-\t\t\tParameterizedTypeBinding capturedParameterizedType = this.environment.createParameterizedType(this.type, capturedArguments, enclosingType());", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tTypeBinding argument = capturedArguments[i];", "-\t\t\t\tif (argument.isCapture()) {", "-\t\t\t\t\t((CaptureBinding)argument).initializeBounds(capturedParameterizedType);", "-\t\t\t\t}", "+\t\tParameterizedTypeBinding capturedParameterizedType = this.environment.createParameterizedType(this.type, capturedArguments, enclosingType());", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tTypeBinding argument = capturedArguments[i];", "+\t\t\tif (argument.isCapture()) {", "+\t\t\t\t((CaptureBinding)argument).initializeBounds(capturedParameterizedType);", "-\t\t\treturn capturedParameterizedType;", "-\t\treturn this;", "+\t\treturn capturedParameterizedType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858ea87f4cef43adb34840000bec2813", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/InstanceOfExpression.java", "commitBeforeChange": "00b719c0d7c4b5271c818d210d84b349bc0324e3", "commitAfterChange": "f90ca993824b1d0e38aec24edba147ca4e8ec0d1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tif (!areTypesCastCompatible(scope, checkType, expressionType)) {", "-\t\t\tscope.problemReporter().notCompatibleTypesError(this, expressionType, checkType);", "-\t\t\treturn null;", "+\t\tboolean necessary = checkCastTypesCompatibility(scope, checkType, expressionType);", "+\t\tif (!necessary) {", "+\t\t\tscope.problemReporter().unnecessaryInstanceof(this, checkType);", "-\t\tthis.resolvedType = BooleanBinding;", "-\t\treturn BooleanBinding;", "+\t\treturn this.resolvedType = BooleanBinding;"]}], "num": 4639}