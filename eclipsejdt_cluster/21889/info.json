{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8574498ff8ab5bb284639f553472236", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1883a427938a49fe513e6aff689b40c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractNullAnnotationTest.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void setUp() throws Exception", "signatureAfterChange": " \tprotected void setUp() throws Exception", "diff": ["-\t\t\tString version = this.complianceLevel >= ClassFileConstants.JDK1_8 ? \"2.0.0\" : \"1.1.0\";", "+\t\t\tString version = this.complianceLevel >= ClassFileConstants.JDK1_8 ? \"[2.0.0,3.0.0)\" : \"[1.1.0,2.0.0)\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18ea4e343899ba90d70d0fc371703fa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "8b532c89fe75cdcd516dedb1f57b44f4fab79fb0", "commitAfterChange": "14eef462fbaf0bab3c247296c2a42a1fdc4f58a6", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " public void generateSyntheticEnclosingInstanceValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, AstNode invocationSite)", "signatureAfterChange": " public void generateSyntheticEnclosingInstanceValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, AstNode invocationSite)", "diff": ["-\t\tboolean needEnclosingInstanceNullCheck = currentScope.environment().options.complianceLevel >= CompilerOptions.JDK1_4;", "+\t\tboolean needEnclosingInstanceNullCheck = currentScope.environment().options.complianceLevel >= ClassFileConstants.JDK1_4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ea28411d557c024dfddcdf8d5ecbe04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "bc8a42889f857ed7728b976d31e674de6afdad4d", "commitAfterChange": "e50f3d9d374cf35289e57b1f80fafcaa8e59eb2e", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " public void generateSyntheticEnclosingInstanceValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, AstNode invocationSite)", "signatureAfterChange": " public void generateSyntheticEnclosingInstanceValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, AstNode invocationSite)", "diff": ["-\t\t\t\t", "+", "+\t\tboolean needEnclosingInstanceNullCheck = currentScope.environment().options.complianceLevel >= CompilerOptions.JDK1_4;", "+\t\t\t\t\t\t", "+\t\t\t\tif (needEnclosingInstanceNullCheck){", "+\t\t\t\t\tdup();", "+\t\t\t\t\tinvokeObjectGetClass(); // will perform null check", "+\t\t\t\t\tpop();", "+\t\t\t\t}", "+\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7201b7b8ac6c8ee07df62b30acb44370", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "08c130b51e222d1dc818f74430195d7cc0d9ba9c", "commitAfterChange": "f44833f9e9c6c61508713666b8c272384401715c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate SourceTypeConverter(int flags, ProblemReporter problemReporter)", "signatureAfterChange": " \t \tprivate SourceTypeConverter(int flags, ProblemReporter problemReporter)", "diff": ["+\t\tsuper(problemReporter);", "-\t\tthis.problemReporter = problemReporter;", "-\t\tthis.has1_5Compliance = problemReporter.options.complianceLevel >= ClassFileConstants.JDK1_5;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "879a639aa7b2b986398c99b27f3c032d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "signatureAfterChange": " \t \tpublic FlowInfo analyseAssignment( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tAssignment assignment, \t\tboolean isCompound)", "diff": ["-\t\t\tboolean complyTo14 = currentScope.environment().options.complianceLevel >= ClassFileConstants.JDK1_4;", "+\t\t\tboolean complyTo14 = currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87f4f3f71bff4b4bcb0ebc5d0e6d32e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic FieldBinding generateReadSequence(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic FieldBinding generateReadSequence(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\tboolean complyTo14 = currentScope.environment().options.complianceLevel >= ClassFileConstants.JDK1_4;", "+\t\tboolean complyTo14 = currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fd63baaa06123db11bb05555f59ef51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tboolean valueRequired)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo, \t\tboolean valueRequired)", "diff": ["-\t\t\tboolean complyTo14 = currentScope.environment().options.complianceLevel >= ClassFileConstants.JDK1_4;", "+\t\t\tboolean complyTo14 = currentScope.compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91419681f294bbeaca141db37f90f6cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "40ec9af01314d5e3524995c03a17726a02c7901e", "commitAfterChange": "7c506de6f0d19a04dfded8c3a83a516e90afc5b6", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethod( \t\tReferenceBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\tboolean isCompliant14 = compilationUnitScope().environment.options.complianceLevel >= CompilerOptions.JDK1_4;", "+\t\tboolean isCompliant14 = compilationUnitScope().environment.options.complianceLevel >= ClassFileConstants.JDK1_4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afca95e2df72487d3754590e852db28c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "5c930a2be2f56a634252cd32fd5425aacd603534", "commitAfterChange": "eb4f7811e5216181c33caa5f1f098b6e53cc8ce4", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tMethodBinding matchingMethod, \t\tObjectVector found)", "signatureAfterChange": " \tpublic MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tMethodBinding matchingMethod, \t\tObjectVector found)", "diff": ["-\t\tboolean isCompliant14 = unitScope.environment.options.complianceLevel >= ClassFileConstants.JDK1_4;", "+\t\tboolean isCompliant14 = compilerOptions().complianceLevel >= ClassFileConstants.JDK1_4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9bb3d1797261a64576d707c93787521", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/TypeConverter.java", "commitBeforeChange": "e5f01975d99954b1483781c8c9c08a016b294102", "commitAfterChange": "6c19a02159d7dcaca8c603f73a96718172825002", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tprotected TypeConverter(ProblemReporter problemReporter, char memberTypeSeparator)", "signatureAfterChange": "  \tprotected TypeConverter(ProblemReporter problemReporter, char memberTypeSeparator)", "diff": ["-\t\tthis.has1_5Compliance = problemReporter.options.complianceLevel >= ClassFileConstants.JDK1_5;", "+\t\tthis.has1_5Compliance = problemReporter.options.originalComplianceLevel >= ClassFileConstants.JDK1_5;"]}], "num": 21889}