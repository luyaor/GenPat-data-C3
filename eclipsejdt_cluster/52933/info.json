{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f26b2a87b9ca53dd60fa8aced9709678", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0eb6015b5c7d45fe5497c012f025ab2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiteralsTest.java", "commitBeforeChange": "fb504d47330627768068ab4717462737a8421e8f", "commitAfterChange": "6967f38c65481900fac7a3dec71c1f70e7d56a5a", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void test001()", "signatureAfterChange": "  public void test001()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15a1c25596b8a71fe28350f48490b223", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "a6ddac0c1bfb9f2e5b5ab7b0ee0ddfa3a5ea1967", "commitAfterChange": "44551786632702a9dab25973852c4b7635c7db54", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void test015()", "signatureAfterChange": " public void test015()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "162e15d01aea4a7a9128daa35b1f4d5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ParserTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void test013()", "signatureAfterChange": " public void test013()", "diff": ["-\tthis.runNegativeTest(", "+\trunNegativeTest(", "+\t\ttrue,", "+\t\tnull, nls,", "-\t\tnull, // custom classpath", "-\t\ttrue, // flush previous output dir content", "-\t\tnls // custom options", "-\t);", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187c768178e5d4a1ce39d205fa56ccc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  public void test010()", "signatureAfterChange": " public void test010()", "diff": ["-", "-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ed604659e3a3b2794f6f2e33b7d2bd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 268, "methodNumberAfterChange": 268, "signatureBeforeChange": " public void test119()", "signatureAfterChange": " public void test119()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\toptions", "-\t);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "239317c7c7a73efbffa5c44dfb986b65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "a6ddac0c1bfb9f2e5b5ab7b0ee0ddfa3a5ea1967", "commitAfterChange": "44551786632702a9dab25973852c4b7635c7db54", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test014()", "signatureAfterChange": " public void test014()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33464e0be8d4f7b092b287d3e28d83fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiteralsTest.java", "commitBeforeChange": "fb504d47330627768068ab4717462737a8421e8f", "commitAfterChange": "6967f38c65481900fac7a3dec71c1f70e7d56a5a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test014()", "signatureAfterChange": " public void test014()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t}, ", "-\t\t\"----------\\n\" + ", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);\t", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3666a958ba29405d3c35b687c987e3df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void test007()", "signatureAfterChange": "  public void test007()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d632e9d51fa7b8311d1381dc65f4f16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ParserTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void test024()", "signatureAfterChange": " public void test024()", "diff": ["-\tthis.runNegativeTest(", "+\trunNegativeTest(", "+\t\ttrue,", "+\t\tnull, options,", "-\t\tnull, // custom classpath", "-\t\ttrue, // flush previous output dir content", "-\t\toptions // custom options", "-\t);", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45a35cfd68d4bdc26355ece720117950", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LocalVariableTest.java", "commitBeforeChange": "d953baf3acbd5ce84a217dc8977a5eaf2fc08a1a", "commitAfterChange": "b70f9856c426cbcb60b4f88ba94c957a5967538a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void test018()", "signatureAfterChange": " public void test018()", "diff": ["-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X extends Parent implements Doable {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid foo(int value) { // X#foo(...)\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tvoid bar(int value) { // X#bar(...)\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tvoid top(int value) { /* X#top(...)*/}\\n\" + ", "-\t\t\t\t\"\tvoid parent(int value) { /* X#parent(...) */}\\n\" + ", "-\t\t\t\t\"\tpublic void doit(int value) { /* X#doit(...) */}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"abstract class Top {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tabstract void top(int value); // Top#top(...)\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"abstract class Parent extends Top {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid parent(int value) { /* Parent#parent(...) */}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"interface Doable {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid doit (int value); // Doable#doit(...)\\n\" + ", "-\t\t\t\t\"}\", // =================", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X extends Parent implements Doable {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 24)\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tvoid top(int value) { /* X#top(...)*/}\\n\" + ", "+\t\t\t\"\tvoid parent(int value) { /* X#parent(...) */}\\n\" + ", "+\t\t\t\"\tpublic void doit(int value) { /* X#doit(...) */}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class Top {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tabstract void top(int value); // Top#top(...)\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class Parent extends Top {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "-\t\t\t\"\t                ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull /* classLib */,", "-\t\t\ttrue /* shouldFlushOutputDirectory */,", "-\t\t\toptions);", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface Doable {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tvoid doit (int value); // Doable#doit(...)\\n\" + ", "+\t\t\t\"}\", // =================", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "+\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tvoid foo(int value) { // X#foo(...)\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tvoid bar(int value) { // X#bar(...)\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 24)\\n\" + ", "+\t\t\"\tvoid parent(int value) { /* Parent#parent(...) */}\\n\" + ", "+\t\t\"\t                ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c1ac5d81af7edadb8f5f177b3078197", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void test008()", "signatureAfterChange": " public void test008()", "diff": ["-", "-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5469041d09957c172f29b3957bb46909", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void test009()", "signatureAfterChange": " public void test009()", "diff": ["-", "-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54e6cea4b05ebdd696c1cae136e79080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "a6ddac0c1bfb9f2e5b5ab7b0ee0ddfa3a5ea1967", "commitAfterChange": "44551786632702a9dab25973852c4b7635c7db54", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void test019()", "signatureAfterChange": " public void test019()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "569c3b3e2ab8f0c031b4f87c3545f235", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void test014()", "signatureAfterChange": " public void test014()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "58f7d361c3aac66ae773888e438cf161", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiteralsTest.java", "commitBeforeChange": "fb504d47330627768068ab4717462737a8421e8f", "commitAfterChange": "6967f38c65481900fac7a3dec71c1f70e7d56a5a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void test013()", "signatureAfterChange": " public void test013()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t}, ", "-\t\t\"----------\\n\" + ", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);\t", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dfc753203a873e321290155e7c3b3e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " public void test025()", "signatureAfterChange": " public void test025()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e3e41c5b4a811df0a28db2f1db25369", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiteralsTest.java", "commitBeforeChange": "fb504d47330627768068ab4717462737a8421e8f", "commitAfterChange": "6967f38c65481900fac7a3dec71c1f70e7d56a5a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void test007()", "signatureAfterChange": " public void test007()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t}, ", "-\t\t\"----------\\n\" + ", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);\t", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6172185c8e75d1e651e6fc40b1d4d0f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiteralsTest.java", "commitBeforeChange": "fb504d47330627768068ab4717462737a8421e8f", "commitAfterChange": "6967f38c65481900fac7a3dec71c1f70e7d56a5a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test005()", "signatureAfterChange": " public void test005()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t}, ", "-\t\t\"----------\\n\" + ", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);\t", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "647c63a6cc5160f2d9ac3e3b0430e675", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 266, "methodNumberAfterChange": 266, "signatureBeforeChange": " public void test117()", "signatureAfterChange": " public void test117()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\toptions", "-\t);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64bb918b81cb06b369eaf3554d009336", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ParserTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void test023()", "signatureAfterChange": " public void test023()", "diff": ["-\tthis.runNegativeTest(", "+\trunNegativeTest(", "+\t\ttrue,", "+\t\tnull, options,", "-\t\tnull, // custom classpath", "-\t\ttrue, // flush previous output dir content", "-\t\toptions // custom options", "-\t);", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d2ecc53725be9ca3dcb49f19ab7c795", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ParserTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-\tthis.runNegativeTest(", "+\trunNegativeTest(", "+\t\ttrue,", "+\t\tnull, nls,", "-\t\tnull, // custom classpath", "-\t\ttrue, // flush previous output dir content", "-\t\tnls // custom options", "-\t);", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "724265a8dbdec2e75e249958cf1f5dcf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78841f433dce0be6c360baab33a6be97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AssignmentTest.java", "commitBeforeChange": "9d3443d9ed27d5bf1a9ba003a556b60eecb97c38", "commitAfterChange": "a27e4c70cc40aae7e65e137dfc9ff822d31011f8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void test040()", "signatureAfterChange": " public void test040()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "801a440d58907341b19c9ffe723d801a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiteralsTest.java", "commitBeforeChange": "fb504d47330627768068ab4717462737a8421e8f", "commitAfterChange": "6967f38c65481900fac7a3dec71c1f70e7d56a5a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void test002()", "signatureAfterChange": "  public void test002()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t}, ", "-\t\t\"----------\\n\" + ", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80daa26c138464f5ff4cdc97fad07122", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AssignmentTest.java", "commitBeforeChange": "9d3443d9ed27d5bf1a9ba003a556b60eecb97c38", "commitAfterChange": "a27e4c70cc40aae7e65e137dfc9ff822d31011f8", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test041()", "signatureAfterChange": " public void test041()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81cc53e4682980fa9f8df795ad393ed8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "a6ddac0c1bfb9f2e5b5ab7b0ee0ddfa3a5ea1967", "commitAfterChange": "44551786632702a9dab25973852c4b7635c7db54", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void test008()", "signatureAfterChange": " public void test008()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85fe93b925114d1f75898a19fb57edea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LocalVariableTest.java", "commitBeforeChange": "d953baf3acbd5ce84a217dc8977a5eaf2fc08a1a", "commitAfterChange": "b70f9856c426cbcb60b4f88ba94c957a5967538a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void test017()", "signatureAfterChange": " public void test017()", "diff": ["-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X extends Parent implements Doable {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid foo(int value) { // X#foo(...)\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tvoid bar(int value) { // X#bar(...)\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tvoid top(int value) { /* X#top(...)*/}\\n\" + ", "-\t\t\t\t\"\tvoid parent(int value) { /* X#parent(...) */}\\n\" + ", "-\t\t\t\t\"\tpublic void doit(int value) { /* X#doit(...) */}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"abstract class Top {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tabstract void top(int value); // Top#top(...)\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"abstract class Parent extends Top {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid parent(int value) { /* Parent#parent(...) */}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"interface Doable {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid doit (int value); // Doable#doit(...)\\n\" + ", "-\t\t\t\t\"}\", // =================", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X extends Parent implements Doable {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 24)\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tvoid top(int value) { /* X#top(...)*/}\\n\" + ", "+\t\t\t\"\tvoid parent(int value) { /* X#parent(...) */}\\n\" + ", "+\t\t\t\"\tpublic void doit(int value) { /* X#doit(...) */}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class Top {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tabstract void top(int value); // Top#top(...)\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class Parent extends Top {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "-\t\t\t\"\t                ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull /* classLib */,", "-\t\t\ttrue /* shouldFlushOutputDirectory */,", "-\t\t\toptions);", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface Doable {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tvoid doit (int value); // Doable#doit(...)\\n\" + ", "+\t\t\t\"}\", // =================", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "+\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tvoid foo(int value) { // X#foo(...)\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tvoid bar(int value) { // X#bar(...)\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 24)\\n\" + ", "+\t\t\"\tvoid parent(int value) { /* Parent#parent(...) */}\\n\" + ", "+\t\t\"\t                ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8619ca64dcf36cc152a3885af4be22bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ParserTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void test025()", "signatureAfterChange": " public void test025()", "diff": ["-\tthis.runNegativeTest(", "+\trunNegativeTest(", "+\t\ttrue,", "+\t\tnull, options,", "-\t\tnull, // custom classpath", "-\t\ttrue, // flush previous output dir content", "-\t\toptions // custom options", "-\t);", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "880ba25b1f59adf10fef262aac09589f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiteralsTest.java", "commitBeforeChange": "fb504d47330627768068ab4717462737a8421e8f", "commitAfterChange": "6967f38c65481900fac7a3dec71c1f70e7d56a5a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void test008()", "signatureAfterChange": " public void test008()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t}, ", "-\t\t\"----------\\n\" + ", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);\t", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c09265f891854deeefc9f562cf5c13c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LocalVariableTest.java", "commitBeforeChange": "d953baf3acbd5ce84a217dc8977a5eaf2fc08a1a", "commitAfterChange": "b70f9856c426cbcb60b4f88ba94c957a5967538a", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void test019()", "signatureAfterChange": " public void test019()", "diff": ["-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X extends Parent implements Doable {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid foo(int value) { // X#foo(...)\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tvoid bar(int value) { // X#bar(...)\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tvoid top(int value) { /* X#top(...)*/}\\n\" + ", "-\t\t\t\t\"\tvoid parent(int value) { /* X#parent(...) */}\\n\" + ", "-\t\t\t\t\"\tpublic void doit(int value) { /* X#doit(...) */}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"abstract class Top {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tabstract void top(int value); // Top#top(...)\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"abstract class Parent extends Top {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid parent(int value) { /* Parent#parent(...) */}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"interface Doable {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid doit (int value); // Doable#doit(...)\\n\" + ", "-\t\t\t\t\"}\", // =================", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X extends Parent implements Doable {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\t\"\t                ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 12)\\n\" + ", "-\t\t\t\"\t                     ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 24)\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class Top {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tabstract void top(int value); // Top#top(...)\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class Parent extends Top {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "-\t\t\t\"\t                ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull /* classLib */,", "-\t\t\ttrue /* shouldFlushOutputDirectory */,", "-\t\t\toptions);", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface Doable {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tvoid doit (int value); // Doable#doit(...)\\n\" + ", "+\t\t\t\"}\", // =================", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "+\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tvoid foo(int value) { // X#foo(...)\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tvoid bar(int value) { // X#bar(...)\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\"\tvoid top(int value) { /* X#top(...)*/}\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tvoid parent(int value) { /* X#parent(...) */}\\n\" + ", "+\t\t\"\t                ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\"\tpublic void doit(int value) { /* X#doit(...) */}\\n\" + ", "+\t\t\"\t                     ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 24)\\n\" + ", "+\t\t\"\tvoid parent(int value) { /* Parent#parent(...) */}\\n\" + ", "+\t\t\"\t                ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "975604dbd0a352fd4ad120e60abe05f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void test016()", "signatureAfterChange": " public void test016()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "984fe95411a3fdd27c2a2b4ed0e6c145", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void test022()", "signatureAfterChange": " public void test022()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98f6670a5f7df968fc735dca1eb8fd54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DeprecatedTest.java", "commitBeforeChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "commitAfterChange": "9b921f99315dbbd37e5ce242cb0efa8c0bd12214", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\t\"}\\n\",", "-\t\t}, ", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\"\tint i1 = Y.m;\\n\" + ", "-\t\t\"\t           ^\\n\" + ", "-\t\t\"The field Y.m is deprecated\\n\" + ", "-\t\t\"----------\\n\",", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t\t\"}\\n\",\t},", "+\t\t\t// compiler options", "+\t\t\tnull /* no class libraries */,", "+\t\t\tcustomOptions /* custom options */,", "+\t\t\t// compiler results", "+\t\t\t\"----------\\n\" + /* expected compiler log */", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tint i1 = Y.m;\\n\" + ", "+\t\t\t\"\t           ^\\n\" + ", "+\t\t\t\"The field Y.m is deprecated\\n\" + ", "+\t\t\t\"----------\\n\",", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a1e6981f50caea3bbe0f28440097626", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void test002()", "signatureAfterChange": "  public void test002()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a44ba89416035c5993ad465ebfae9af5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void test013()", "signatureAfterChange": " public void test013()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a81380688ce7edf5ab658d370d3af18a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DeprecatedTest.java", "commitBeforeChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "commitAfterChange": "9b921f99315dbbd37e5ce242cb0efa8c0bd12214", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void test013()", "signatureAfterChange": " public void test013()", "diff": ["-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "+\t\trunNegativeTest(", "+\t\t\t// test directory preparation", "+\t\t\ttrue /* flush output directory */, ", "+\t\t\tnew String[] { /* test files */", "-\t\t\t}, ", "-\t\t\t\"----------\\n\" + ", "+\t\t\t},", "+\t\t\t// compiler options", "+\t\t\tnull /* no class libraries */,", "+\t\t\tcustomOptions /* custom options */,", "+\t\t\t// compiler results", "+\t\t\t\"----------\\n\" + /* expected compiler log */", "-\t\t\tnull,", "-\t\t\ttrue,", "-\t\t\tcustomOptions);", "+\t\t\t// javac options", "+\t\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9f2838ba4de33137dd1def74c3c6c61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void test005()", "signatureAfterChange": " public void test005()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab25a488cb57d155f564b04e3658dfa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test004()", "signatureAfterChange": " public void test004()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af54467286eed7358e2c1f3edbe2271a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 150, "signatureBeforeChange": " public void test145()", "signatureAfterChange": " public void test145()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\t\"EnumA.java\",", "-\t\t\t\t\"public enum EnumA {\\r\\n\" + ", "-\t\t\t\t\"  B1,\\r\\n\" + ", "-\t\t\t\t\"  B2;\\r\\n\" + ", "-\t\t\t\t\"  public void foo(){}\\r\\n\" + ", "-\t\t\t\t\"}\",", "-\t\t\t\t\"ClassC.java\",", "-\t\t\t\t\"public class ClassC {\\r\\n\" + ", "-\t\t\t\t\"  void bar() {\\r\\n\" + ", "-\t\t\t\t\"    EnumA.B1.B1.foo();\\r\\n\" + ", "-\t\t\t\t\"    EnumA.B1.B2.foo();\\r\\n\" + ", "-\t\t\t\t\"  }\\r\\n\" + ", "-\t\t\t\t\"}\"", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"EnumA.java\",", "+\t\t\t\"public enum EnumA {\\r\\n\" + ", "+\t\t\t\"  B1,\\r\\n\" + ", "+\t\t\t\"  B2;\\r\\n\" + ", "+\t\t\t\"  public void foo(){}\\r\\n\" + ", "+\t\t\t\"}\",", "+\t\t\t\"ClassC.java\",", "+\t\t\t\"public class ClassC {\\r\\n\" + ", "+\t\t\t\"  void bar() {\\r\\n\" + ", "+\t\t\t\"    EnumA.B1.B1.foo();\\r\\n\" + ", "+\t\t\t\"    EnumA.B1.B2.foo();\\r\\n\" + ", "+\t\t\t\"  }\\r\\n\" + ", "+\t\t\t\"}\"", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\toptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1b456bd5fa3d692932fa64e0c7dafa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void test023()", "signatureAfterChange": " public void test023()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5be0dae29517fe10aaf576aa5953b01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "a6ddac0c1bfb9f2e5b5ab7b0ee0ddfa3a5ea1967", "commitAfterChange": "44551786632702a9dab25973852c4b7635c7db54", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test016()", "signatureAfterChange": " public void test016()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6314d723b7cf86519c4c4832c58c6c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ParserTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void test022()", "signatureAfterChange": " public void test022()", "diff": ["-\tthis.runNegativeTest(", "+\trunNegativeTest(", "+\t\ttrue,", "+\t\tnull, options,", "-\t\tnull, // custom classpath", "-\t\ttrue, // flush previous output dir content", "-\t\toptions // custom options", "-\t);", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b85871a7fa5fb4fef9f35baafea58540", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "a6ddac0c1bfb9f2e5b5ab7b0ee0ddfa3a5ea1967", "commitAfterChange": "44551786632702a9dab25973852c4b7635c7db54", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void test006()", "signatureAfterChange": " public void test006()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb552ec858a5c27abe7104e41cfa69b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LocalVariableTest.java", "commitBeforeChange": "d953baf3acbd5ce84a217dc8977a5eaf2fc08a1a", "commitAfterChange": "b70f9856c426cbcb60b4f88ba94c957a5967538a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test016()", "signatureAfterChange": " public void test016()", "diff": ["-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X extends Parent implements Doable {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid foo(int value) { // X#foo(...)\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tvoid bar(int value) { // X#bar(...)\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\tvoid top(int value) { /* X#top(...)*/}\\n\" + ", "-\t\t\t\t\"\tvoid parent(int value) { /* X#parent(...) */}\\n\" + ", "-\t\t\t\t\"\tpublic void doit(int value) { /* X#doit(...) */}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"abstract class Top {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tabstract void top(int value); // Top#top(...)\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"abstract class Parent extends Top {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid parent(int value) { /* Parent#parent(...) */}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"interface Doable {\\n\" + ", "-\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\"\t * @param value\\n\" + ", "-\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\"\tvoid doit (int value); // Doable#doit(...)\\n\" + ", "-\t\t\t\t\"}\", // =================", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X extends Parent implements Doable {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tvoid foo(int value) { // X#foo(...)\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull /* classLib */,", "-\t\t\ttrue /* shouldFlushOutputDirectory */,", "-\t\t\toptions);", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\tvoid top(int value) { /* X#top(...)*/}\\n\" + ", "+\t\t\t\"\tvoid parent(int value) { /* X#parent(...) */}\\n\" + ", "+\t\t\t\"\tpublic void doit(int value) { /* X#doit(...) */}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class Top {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tabstract void top(int value); // Top#top(...)\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class Parent extends Top {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tvoid parent(int value) { /* Parent#parent(...) */}\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface Doable {\\n\" + ", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * @param value\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tvoid doit (int value); // Doable#doit(...)\\n\" + ", "+\t\t\t\"}\", // =================", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\tvoid bar(int value) { // X#bar(...)\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bcfc5265657e83d8d9a2f5bbee60c69a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "f30a18a2decb6f1fda736d299a391b81b93c8d2a", "commitAfterChange": "6318d5042e88d12986a8da2fab134e2d56373cd0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  public void test023()", "signatureAfterChange": "  public void test023()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdf11ae5f9bb63bb2110135d2a2e8798", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "f30a18a2decb6f1fda736d299a391b81b93c8d2a", "commitAfterChange": "6318d5042e88d12986a8da2fab134e2d56373cd0", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " public void test031()", "signatureAfterChange": " public void test031()", "diff": ["-\t", "-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.JavacHasABug.JavacBugFixed_6_10 /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf914daa006f0f9ef8421e6ce3158bd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AssignmentTest.java", "commitBeforeChange": "9d3443d9ed27d5bf1a9ba003a556b60eecb97c38", "commitAfterChange": "a27e4c70cc40aae7e65e137dfc9ff822d31011f8", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void test042()", "signatureAfterChange": " public void test042()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6f5ef66f5b839a356faf5216491d324", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test015()", "signatureAfterChange": " public void test015()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce5dc6fbb64be1348d54e30755a480e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/SuperTypeTest.java", "commitBeforeChange": "a24bdada3de440570b8b103bca0325b799f298f1", "commitAfterChange": "c3aaae578856ed6e7cc510e2c7cbcf7653841dc0", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull /* no extra class libraries */, ", "-\t\ttrue /* flush output directory */, ", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf519a99f1b565bbe70780d2ce3e5f20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void test003()", "signatureAfterChange": " public void test003()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4578e5691099cfde1fd57c4328c1f55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/SuperTypeTest.java", "commitBeforeChange": "a24bdada3de440570b8b103bca0325b799f298f1", "commitAfterChange": "c3aaae578856ed6e7cc510e2c7cbcf7653841dc0", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void test009()", "signatureAfterChange": " public void test009()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull /* no extra class libraries */, ", "-\t\ttrue /* flush output directory */, ", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d6e6e67ad6fa5df807cfacd2c6c8f796", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "a6ddac0c1bfb9f2e5b5ab7b0ee0ddfa3a5ea1967", "commitAfterChange": "44551786632702a9dab25973852c4b7635c7db54", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public void test010()", "signatureAfterChange": " public void test010()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2ec196f8c3afb01590397ab648c2a20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/ParserTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void test026()", "signatureAfterChange": " public void test026()", "diff": ["-\tthis.runNegativeTest(", "+\trunNegativeTest(", "+\t\ttrue,", "+\t\tnull, options,", "-\t\tnull, // custom classpath", "-\t\ttrue, // flush previous output dir content", "-\t\toptions // custom options", "-\t);", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ebb5369d5dbdee8598f04acac2d1f6da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/FlowAnalysisTest.java", "commitBeforeChange": "a6ddac0c1bfb9f2e5b5ab7b0ee0ddfa3a5ea1967", "commitAfterChange": "44551786632702a9dab25973852c4b7635c7db54", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " public void test022()", "signatureAfterChange": " public void test022()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull, true, options);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0abd1f4c6de6fa55c47d2c0cb5b9ed5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 267, "methodNumberAfterChange": 267, "signatureBeforeChange": " public void test118()", "signatureAfterChange": " public void test118()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\toptions", "-\t);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0bc152a30f61b6e9e625c569c81ec55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public void test011()", "signatureAfterChange": " public void test011()", "diff": ["-", "-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f170bb2bd1a94f0c570920fb7090fd54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiteralsTest.java", "commitBeforeChange": "fb504d47330627768068ab4717462737a8421e8f", "commitAfterChange": "6967f38c65481900fac7a3dec71c1f70e7d56a5a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public void test016()", "signatureAfterChange": " public void test016()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t}, ", "-\t\t\"----------\\n\" + ", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);\t", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f455d97e9d1f617cf936550d5eebf373", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LocalVariableTest.java", "commitBeforeChange": "d953baf3acbd5ce84a217dc8977a5eaf2fc08a1a", "commitAfterChange": "b70f9856c426cbcb60b4f88ba94c957a5967538a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void test020()", "signatureAfterChange": " public void test020()", "diff": ["-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X extends Parent implements Doable {\\n\" + ", "-\t\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\t\"\tvoid foo(int value) { // X#foo(...)\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tvoid bar(int value) { // X#bar(...)\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\t\"\tvoid top(int value) { /* X#top(...)*/}\\n\" + ", "-\t\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\t\"\tvoid parent(int value) { /* X#parent(...) */}\\n\" + ", "-\t\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\t\"\tpublic void doit(int value) { /* X#doit(...) */}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"abstract class Top {\\n\" + ", "-\t\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\t\"\tabstract void top(int value); // Top#top(...)\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"abstract class Parent extends Top {\\n\" + ", "-\t\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\t\"\tvoid parent(int value) { /* Parent#parent(...) */}\\n\" + ", "-\t\t\t\t\"}\\n\" + ", "-\t\t\t\t\"interface Doable {\\n\" + ", "-\t\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\t\"\tvoid doit (int value); // Doable#doit(...)\\n\" + ", "-\t\t\t\t\"}\", // =================", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X extends Parent implements Doable {\\n\" + ", "+\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\"\t             ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\"\t                ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\"\t                     ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class Top {\\n\" + ", "+\t\t\t\"\t/** @param value */\\n\" + ", "+\t\t\t\"\tabstract void top(int value); // Top#top(...)\\n\" + ", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"abstract class Parent extends Top {\\n\" + ", "+\t\t\t\"\t/** @param value */\\n\" + ", "-\t\t\t\"\t                ^^^^^\\n\" + ", "-\t\t\t\"The parameter value is never read\\n\" + ", "-\t\t\t\"----------\\n\",", "-\t\t\tnull /* classLib */,", "-\t\t\ttrue /* shouldFlushOutputDirectory */,", "-\t\t\toptions);", "+\t\t\t\"}\\n\" + ", "+\t\t\t\"interface Doable {\\n\" + ", "+\t\t\t\"\t/** @param value */\\n\" + ", "+\t\t\t\"\tvoid doit (int value); // Doable#doit(...)\\n\" + ", "+\t\t\t\"}\", // =================", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "+\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tvoid foo(int value) { // X#foo(...)\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\"\tvoid bar(int value) { // X#bar(...)\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"\tvoid top(int value) { /* X#top(...)*/}\\n\" + ", "+\t\t\"\t             ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\"\tvoid parent(int value) { /* X#parent(...) */}\\n\" + ", "+\t\t\"\t                ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 13)\\n\" + ", "+\t\t\"\tpublic void doit(int value) { /* X#doit(...) */}\\n\" + ", "+\t\t\"\t                     ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\"\tvoid parent(int value) { /* Parent#parent(...) */}\\n\" + ", "+\t\t\"\t                ^^^^^\\n\" + ", "+\t\t\"The parameter value is never read\\n\" + ", "+\t\t\"----------\\n\",", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f566ec083882ab666a5b752be0afc561", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": " public void test033()", "signatureAfterChange": " public void test033()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9696fe66befdec41775fbae81a05ca0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "819597df2d965b7d9422dbdbcc028d7ec3cb70fb", "commitAfterChange": "d45d8e68060242a43fd7428f6ca594109b9d562e", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void test024()", "signatureAfterChange": " public void test024()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa0898bd7cad72e898ca9c831bfd90a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "bf1b15113f19bebe8799f253fba2c98750e6b32c", "commitAfterChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "methodNumberBeforeChange": 263, "methodNumberAfterChange": 263, "signatureBeforeChange": " public void test114()", "signatureAfterChange": " public void test114()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\toptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\toptions", "-\t);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd7f7f9f95298a32b0a297f349d76ea1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExternalizeStringLiteralsTest.java", "commitBeforeChange": "fb504d47330627768068ab4717462737a8421e8f", "commitAfterChange": "6967f38c65481900fac7a3dec71c1f70e7d56a5a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void test015()", "signatureAfterChange": " public void test015()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t}, ", "-\t\t\"----------\\n\" + ", "+\t\t},", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" +  /* expected compiler log */", "-\t\tnull,", "-\t\ttrue,", "-\t\tcustomOptions);\t", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fdeafcd22e2180ca893f9416fedeef08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/SuperTypeTest.java", "commitBeforeChange": "a24bdada3de440570b8b103bca0325b799f298f1", "commitAfterChange": "c3aaae578856ed6e7cc510e2c7cbcf7653841dc0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void test010()", "signatureAfterChange": " public void test010()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\trunNegativeTest(", "+\t\t// test directory preparation", "+\t\ttrue /* flush output directory */, ", "+\t\tnew String[] { /* test files */", "-\t\t\"----------\\n\" + ", "+\t\t// compiler options", "+\t\tnull /* no class libraries */,", "+\t\tcustomOptions /* custom options */,", "+\t\t// compiler results", "+\t\t\"----------\\n\" + /* expected compiler log */", "-\t\tnull /* no extra class libraries */, ", "-\t\ttrue /* flush output directory */, ", "-\t\tcustomOptions);", "+\t\t// javac options", "+\t\tJavacTestOptions.Excuse.EclipseWarningConfiguredAsError /* javac test options */);\t"]}], "num": 52933}