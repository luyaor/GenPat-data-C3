{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a9a74850b282f18d97feef616d72ba39", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65402660a0dcbb015e879a0a2c238bb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "000351037175db78f3f7a7716a67e8a0125ff547", "commitAfterChange": "d11c2870eee1a229500a359b5cabd8c3c957ef55", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void _test064()", "signatureAfterChange": " public void test064()", "diff": ["-public void _test064() {", "+public void test064() {", "-\t\t:\t", "+\t\t:\tnew CompilerOptions(this.getCompilerOptions()).complianceLevel <= ClassFileConstants.JDK1_5 ?", "+\t\t\t\"  // Method descriptor #15 ()Ljava/lang/Object;\\n\" + ", "+\t\t\t\"  // Stack: 3, Locals: 4\\n\" + ", "+\t\t\t\"  java.lang.Object bar();\\n\" + ", "+\t\t\t\"     0  new X$MyClass [16]\\n\" + ", "+\t\t\t\"     3  dup\\n\" + ", "+\t\t\t\"     4  aload_0 [this]\\n\" + ", "+\t\t\t\"     5  invokespecial X$MyClass(X) [18]\\n\" + ", "+\t\t\t\"     8  astore_1 [myClass]\\n\" + ", "+\t\t\t\"     9  aconst_null\\n\" + ", "+\t\t\t\"    10  areturn\\n\" + ", "+\t\t\t\"    11  astore_2 [ex]\\n\" + ", "+\t\t\t\"    12  aload_1 [myClass]\\n\" + ", "+\t\t\t\"    13  aload_0 [this]\\n\" + ", "+\t\t\t\"    14  ifnonnull 22\\n\" + ", "+\t\t\t\"    17  ldc <String \\\"\\\"> [21]\\n\" + ", "+\t\t\t\"    19  goto 24\\n\" + ", "+\t\t\t\"    22  ldc <String \\\"\\\"> [21]\\n\" + ", "+\t\t\t\"    24  invokevirtual X$MyClass.foo(java.lang.String) : void [23]\\n\" + ", "+\t\t\t\"    27  goto 9\\n\" + ", "+\t\t\t\"    30  astore_3\\n\" + ", "+\t\t\t\"    31  aload_3\\n\" + ", "+\t\t\t\"    32  athrow\\n\" + ", "+\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 9] -> 30 when : any\\n\" + ", "+\t\t\t\"        [pc: 11, pc: 30] -> 30 when : any\\n\"", "+\t\t:"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f19463d21c3324bca6b091a15f319769", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "000351037175db78f3f7a7716a67e8a0125ff547", "commitAfterChange": "d11c2870eee1a229500a359b5cabd8c3c957ef55", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " public void _test063()", "signatureAfterChange": " public void test063()", "diff": ["-public void _test063() {", "+public void test063() {", "-\t\t:\t", "+\t\t:\tnew CompilerOptions(this.getCompilerOptions()).complianceLevel <= ClassFileConstants.JDK1_5 ?", "+\t\t\t\"  // Method descriptor #6 ()V\\n\" + ", "+\t\t\t\"  // Stack: 3, Locals: 4\\n\" + ", "+\t\t\t\"  void bar();\\n\" + ", "+\t\t\t\"     0  new X$MyClass [15]\\n\" + ", "+\t\t\t\"     3  dup\\n\" + ", "+\t\t\t\"     4  aload_0 [this]\\n\" + ", "+\t\t\t\"     5  invokespecial X$MyClass(X) [17]\\n\" + ", "+\t\t\t\"     8  astore_1 [myClass]\\n\" + ", "+\t\t\t\"     9  return\\n\" + ", "+\t\t\t\"    10  astore_2 [ex]\\n\" + ", "+\t\t\t\"    11  aload_1 [myClass]\\n\" + ", "+\t\t\t\"    12  aload_0 [this]\\n\" + ", "+\t\t\t\"    13  ifnonnull 21\\n\" + ", "+\t\t\t\"    16  ldc <String \\\"\\\"> [20]\\n\" + ", "+\t\t\t\"    18  goto 23\\n\" + ", "+\t\t\t\"    21  ldc <String \\\"\\\"> [20]\\n\" + ", "+\t\t\t\"    23  invokevirtual X$MyClass.foo(java.lang.String) : void [22]\\n\" + ", "+\t\t\t\"    26  goto 9\\n\" + ", "+\t\t\t\"    29  astore_3\\n\" + ", "+\t\t\t\"    30  aload_3\\n\" + ", "+\t\t\t\"    31  athrow\\n\" + ", "+\t\t\t\"      Exception Table:\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 9] -> 29 when : any\\n\" + ", "+\t\t\t\"        [pc: 10, pc: 29] -> 29 when : any\\n\"", "+\t\t:", "-\t", "+"]}], "num": 37025}