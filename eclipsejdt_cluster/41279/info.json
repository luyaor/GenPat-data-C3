{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6665e491eaa46d16127b51a4c047bd87", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d87f6981c0908168382a9d469b8bfb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\treturn this.leftPattern.matches(node, resolve) || this.rightPattern.matches(node, resolve);\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tswitch (this.leftPattern.matchLevel(node, resolve)) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\treturn this.rightPattern.matchLevel(node, resolve);\r", "+\t\tcase POSSIBLE_MATCH:\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\tcase INACCURATE_MATCH:\r", "+\t\t\tint rightLevel = this.rightPattern.matchLevel(node, resolve);\r", "+\t\t\tif (rightLevel != IMPOSSIBLE_MATCH) {\r", "+\t\t\t\treturn rightLevel;\r", "+\t\t\t} else {\r", "+\t\t\t\treturn INACCURATE_MATCH;\r", "+\t\t\t}\r", "+\t\tcase ACCURATE_MATCH:\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\tdefault:\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28eb9604b02e1cd1c710c70ae9233b60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\treturn this.leftPattern.matches(node, resolve) || this.rightPattern.matches(node, resolve);\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tswitch (this.leftPattern.matchLevel(node, resolve)) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\treturn this.rightPattern.matchLevel(node, resolve);\r", "+\t\tcase POSSIBLE_MATCH:\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\tcase INACCURATE_MATCH:\r", "+\t\t\tint rightLevel = this.rightPattern.matchLevel(node, resolve);\r", "+\t\t\tif (rightLevel != IMPOSSIBLE_MATCH) {\r", "+\t\t\t\treturn rightLevel;\r", "+\t\t\t} else {\r", "+\t\t\t\treturn INACCURATE_MATCH;\r", "+\t\t\t}\r", "+\t\tcase ACCURATE_MATCH:\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\tdefault:\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t}\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c28ad64b9c3b82ec7418657fcad82319", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\treturn this.leftPattern.matches(node, resolve) || this.rightPattern.matches(node, resolve);\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tswitch (this.leftPattern.matchLevel(node, resolve)) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\treturn this.rightPattern.matchLevel(node, resolve);\r", "+\t\tcase POSSIBLE_MATCH:\r", "+\t\t\treturn POSSIBLE_MATCH;\r", "+\t\tcase INACCURATE_MATCH:\r", "+\t\t\tint rightLevel = this.rightPattern.matchLevel(node, resolve);\r", "+\t\t\tif (rightLevel != IMPOSSIBLE_MATCH) {\r", "+\t\t\t\treturn rightLevel;\r", "+\t\t\t} else {\r", "+\t\t\t\treturn INACCURATE_MATCH;\r", "+\t\t\t}\r", "+\t\tcase ACCURATE_MATCH:\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\tdefault:\r", "+\t\t\treturn IMPOSSIBLE_MATCH;\r", "+\t}\r", "+}\r"]}], "num": 41279}