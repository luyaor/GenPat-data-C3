{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7dc9d8dbab37807392395e857e757914", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "160237a9c0256074b623de8369f93ffb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "a34418d91ee2e59f0538793b35de996642c16051", "commitAfterChange": "7f980ceab757037c68fa499102c3002c2efaa926", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\tif (!argumentsTypeElided && blockScope.compilerOptions().isAnnotationBasedNullAnalysisEnabled) {", "-\t\t\tAbstractMethodDeclaration.createArgumentBindings(this.arguments, this.binding, this.scope);", "-\t\t\tvalidateNullAnnotations();", "-\t\t\t// no application of null-ness default, hence also no warning regarding redundant null annotation", "-\t\t\tmergeParameterNullAnnotations(blockScope);", "+\t\tif (haveDescriptor && blockScope.compilerOptions().isAnnotationBasedNullAnalysisEnabled) {", "+\t\t\tif (!argumentsTypeElided) {", "+\t\t\t\tAbstractMethodDeclaration.createArgumentBindings(this.arguments, this.binding, this.scope);", "+\t\t\t\tvalidateNullAnnotations();", "+\t\t\t\t// no application of null-ness default, hence also no warning regarding redundant null annotation", "+\t\t\t\tmergeParameterNullAnnotations(blockScope);", "+\t\t\t}", "+\t\t\tthis.binding.tagBits |= (this.descriptor.tagBits & TagBits.AnnotationNullMASK);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b48aee596a9f6022d0b254f3ac7b5fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "9c1e2e3de87cdd04985b57918d50a3f3fc191472", "commitAfterChange": "de85d73a10e0280a45c9d9fcbbd2b35068e06127", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["+\t\t} // TODO (stephan): else? (can that happen?)", "+", "+\t\tif (!argumentsTypeElided && blockScope.compilerOptions().isAnnotationBasedNullAnalysisEnabled) {", "+\t\t\tAbstractMethodDeclaration.createArgumentBindings(this.arguments, this.binding, this.scope);", "+\t\t\tvalidateNullAnnotations();", "+\t\t\t// no application of null-ness default, hence also no warning regarding redundant null annotation", "+\t\t\tmergeParameterNullAnnotations(blockScope);"]}], "num": 11708}