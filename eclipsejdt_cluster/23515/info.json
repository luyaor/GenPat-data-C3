{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "553b14acbd8332b477403810ff833e58", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dbf47a6ba126ca8ddceddf6b07d0e25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "28a00232d8eee3e9551ade93fa3a117182269b7b", "commitAfterChange": "ce79e8c6958ddf4fa7bea6bddee10f4e332053ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "signatureAfterChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "diff": ["-\t\tif (JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_4)) {", "+\t\tif (JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_0)", "+\t\t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_1)", "+\t\t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_2)", "+\t\t\t|| JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_3)) {", "+\t\t\tcmd.createArgument().setValue(\"-1.3\"); //$NON-NLS-1$", "+\t\t} else if (JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_4)) {", "+\t\t} else if (JavaEnvUtils.getJavaVersion().equals(JavaEnvUtils.JAVA_1_5)) {", "+\t\t\tcmd.createArgument().setValue(\"-1.5\"); //$NON-NLS-1$", "-\t\t\tcmd.createArgument().setValue(\"-1.3\"); //$NON-NLS-1$", "+            this.attributes.log(AntAdapterMessages.getString(\"ant.jdtadapter.info.unknownVrsion\"), Project.MSG_WARN); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5157c8745ea2e904f87a5827a2d60ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " protected int resolveLevelForType (char[] simpleNamePattern, \t\t\t\t\t\t\t\t\tchar[] qualificationPattern, \t\t\t\t\t\t\t\t\tchar[][][] patternTypeArguments, \t\t\t\t\t\t\t\t\tint depth, \t\t\t\t\t\t\t\t\tTypeBinding type)", "signatureAfterChange": " protected int resolveLevelForType (char[] simpleNamePattern, \t\t\t\t\t\t\t\t\tchar[] qualificationPattern, \t\t\t\t\t\t\t\t\tchar[][][] patternTypeArguments, \t\t\t\t\t\t\t\t\tint depth, \t\t\t\t\t\t\t\t\tTypeBinding type)", "diff": ["-\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\tcontinue nextTypeArgument;", "-\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t\t\tcontinue nextTypeArgument;", "+\t\t\t\t\t\t} else if (boundBinding.isLocalType() || boundBinding.isMemberType()) {", "+\t\t\t\t\t\t\t// for local or member type, verify also source name (bug 81084)", "+\t\t\t\t\t\t\tif (CharOperation.match(patternTypeArgument, boundBinding.sourceName(), this.isCaseSensitive))", "+\t\t\t\t\t\t\t\tcontinue nextTypeArgument;", "-\t\t\t\t\tcontinue;", "+\t\t\t\t\tcontinue nextTypeArgument;", "+\t\t\t\t} else if (argTypeBinding.isLocalType() || argTypeBinding.isMemberType()) {", "+\t\t\t\t\t// for local or member type, verify also source name (bug 81084)", "+\t\t\t\t\tif (CharOperation.match(patternTypeArgument, argTypeBinding.sourceName(), this.isCaseSensitive))", "+\t\t\t\t\t\tcontinue nextTypeArgument;", "+\t\t\t\t\t\t} else if (refBinding.isLocalType() || refBinding.isMemberType()) {", "+\t\t\t\t\t\t\t// for local or member type, verify also source name (bug 81084)", "+\t\t\t\t\t\t\tif (CharOperation.match(patternTypeArgument, refBinding.sourceName(), this.isCaseSensitive))", "+\t\t\t\t\t\t\t\tcontinue nextTypeArgument;"]}], "num": 23515}