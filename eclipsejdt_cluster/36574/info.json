{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "412ff56b1789f678ee3817f87c72af0d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d110c5d1d37e33b9a5462f3a755797", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "78c270cb0e8bf81b3b471a8bdedbb8d9bf04e016", "commitAfterChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static File createAndAddAnnotationJar( IJavaProject project ) \t\tthrows IOException, JavaModelException", "signatureAfterChange": " \tpublic static File createAndAddAnnotationJar( IJavaProject project ) \t\tthrows IOException, JavaModelException", "diff": ["-\t\t//", "-\t\t//   add annotations jar as part of the project", "-\t\t//", "-\t\tFileFilter filter = new PackageFileFilter(", "-\t\t\t\tANNOTATIONS_PKG, getPluginClassesDir());", "-\t\tMap<File, FileFilter> files = Collections.singletonMap(", "-\t\t\t\tnew File(getPluginClassesDir()), filter);", "-\t\tzip( classesJarPath, files );", "+\t\t", "+\t\tFile binDir = getFileInPlugin( AptTestsPlugin.getDefault(), new Path(\"/bin\"));", "+\t\tif(null != binDir) {", "+\t\t", "+\t\t\t// create annotations jar at classesJarpath", "+\t\t\tFileFilter filter = new PackageFileFilter(", "+\t\t\t\t\tANNOTATIONS_PKG, getPluginClassesDir());", "+\t\t\tMap<File, FileFilter> files = Collections.singletonMap(", "+\t\t\t\t\tnew File(getPluginClassesDir()), filter);", "+\t\t\tzip( classesJarPath, files );", "+\t\t", "+\t\t} else {", "+\t\t", "+\t\t\tFile aptJarFile = getFileInPlugin( AptTestsPlugin.getDefault(), new Path(\"/apt.jar\")); ", "+\t\t\tif(null != aptJarFile) {", "+\t\t\t\t", "+\t\t\t\t// move extapt.jar to classesJarPath file", "+\t\t\t\tmoveFile(aptJarFile, classesJarPath);", "+\t\t\t", "+\t\t\t} else {", "+\t\t\t\t", "+\t\t\t\tthrow new FileNotFoundException(\"Could not find apt.jar file in org.eclipse.jdt.apt.tests plugin\");", "+\t\t\t}", "+\t\t\t", "+\t\t}", "+\t\t", "-\t\t\tnull /*srcAttachmentPathRoot*/, true );", "-\t\treturn new File(classesJarPath);", "+\t\t\t\tnull /*srcAttachmentPathRoot*/, true );", "+\t\t", "+\t\treturn jarFile;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa636c758502619820fe11bb9a959ceb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/TestUtil.java", "commitBeforeChange": "78c270cb0e8bf81b3b471a8bdedbb8d9bf04e016", "commitAfterChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static File createAndAddExternalAnnotationJar(  \t\t\tIJavaProject project  ) \t\tthrows IOException, JavaModelException", "signatureAfterChange": " \tpublic static File createAndAddExternalAnnotationJar(  \t\t\tIJavaProject project  ) \t\tthrows IOException, JavaModelException", "diff": ["+\t\t// create temporary file", "-\t\tFileFilter classFilter = new PackageFileFilter(", "-\t\t\t\tEXTANNOTATIONS_PKG, getPluginExtClassesDir());", "-\t\tFileFilter manifestFilter = new PackageFileFilter(", "-\t\t\t\t\"META-INF\", getPluginExtSrcDir()); //$NON-NLS-1$", "-\t\tMap<File, FileFilter> files = new HashMap<File, FileFilter>(2);", "-\t\tfiles.put(new File( getPluginExtClassesDir() ), classFilter);", "-\t\tfiles.put(new File( getPluginExtSrcDir() ), manifestFilter);", "-\t\tzip( classesJarPath, files );", "+\t\t", "+\t\tFile extBinDir = getFileInPlugin( AptTestsPlugin.getDefault(), new Path(\"/binext\")); ", "+\t\tif(null != extBinDir) {", "+\t\t\t", "+\t\t\t//create zip file in temp file location", "+\t\t\tFileFilter classFilter = new PackageFileFilter(", "+\t\t\t\t\tEXTANNOTATIONS_PKG, getPluginExtClassesDir());", "+\t\t\tFileFilter manifestFilter = new PackageFileFilter(", "+\t\t\t\t\t\"META-INF\", getPluginExtSrcDir()); //$NON-NLS-1$", "+\t\t\tMap<File, FileFilter> files = new HashMap<File, FileFilter>(2);", "+\t\t\tfiles.put(new File( getPluginExtClassesDir() ), classFilter);", "+\t\t\tfiles.put(new File( getPluginExtSrcDir() ), manifestFilter);", "+\t\t\tzip( classesJarPath, files );", "+\t\t\t", "+\t\t} else {", "+\t\t", "+\t\t\tFile extJarFile = getFileInPlugin( AptTestsPlugin.getDefault(), new Path(\"/aptext.jar\")); ", "+\t\t\tif(null != extJarFile) {", "+\t\t\t\t", "+\t\t\t\t// move extapt.jar to classesJarPath file", "+\t\t\t\tmoveFile(extJarFile, classesJarPath);", "+\t\t\t", "+\t\t\t} else {", "+\t\t\t\t", "+\t\t\t\tthrow new FileNotFoundException(\"Could not find aptext.jar file in org.eclipse.jdt.apt.tests plugin\");", "+\t\t\t}", "+\t\t\t", "+\t\t}", "+\t\t", "-\t\t\tnull /*srcAttachmentPathRoot*/, true );", "-\t\treturn new File(classesJarPath);", "+\t\t\t\tnull /*srcAttachmentPathRoot*/, true );", "+\t\t", "+\t\treturn jarFile;", "+\t\t"]}], "num": 36574}