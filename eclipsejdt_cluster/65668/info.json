{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d5481d7a23f023b64e07494ecc2db16", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3cf9bede63b51625a9c853a8852a9be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ExceptionLabel.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void placeEnd()", "signatureAfterChange": "  public void placeEnd()", "diff": ["+", "+public void placeEnd() {", "+\tint endPosition = codeStream.position;", "+\tif (this.ranges[this.count-1] == endPosition) { // start == end ?", "+\t\t// discard empty exception handler", "+\t\tthis.count--;", "+\t} else {", "+\t\tthis.ranges[this.count++] = codeStream.position;", "+}", "-", "-\tpublic void placeEnd() {", "-", "-\t\tthis.end = codeStream.position;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5ccbee68b4e4bd83a6d3fe1b4cdbc15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/ExceptionLabel.java", "commitBeforeChange": "34746595229d52daf40c32629450d7fae4966422", "commitAfterChange": "88853c38c7298f1ea978b5ada5033a497eb024c5", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tpublic void placeStart()", "signatureAfterChange": "  public void placeStart()", "diff": ["+public void placeStart() {", "+\tint startPosition = codeStream.position;", "+\tif (this.count > 0 && this.ranges[this.count-1] == startPosition) { // start == previous end ?", "+\t\t// reopen current handler", "+\t\tthis.count--;", "+\t\treturn;", "+\t// only need to grow on even additions (i.e. placeStart only)", "+\tint length;", "+\tif (this.count == (length = this.ranges.length)) {", "+\t\tSystem.arraycopy(this.ranges, 0, this.ranges = new int[length*2], 0, length);", "+\tthis.ranges[this.count++] = codeStream.position;", "+}", "-\t", "-\tpublic void placeStart() {", "-", "-\t\tthis.start = codeStream.position;", "-\t}"]}], "num": 65668}