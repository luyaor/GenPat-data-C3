{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "70a87fb1f30fc4d2b1d98b3e09e6ae36", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09fa45106886e9aecf1100f615936404", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "4b71ef3be11b1e52d22d795d03898285bb112516", "commitAfterChange": "9966baba46edc3df548fabd09b133cadc0093ca6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \t \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["+\t\tif (this.ignoreFurtherInvestigation) {", "+\t\t\treturn;", "+\t\t}", "-\t\tif (!this.ignoreFurtherInvestigation) this.body.generateCode(this.scope, codeStream); // TODO put into new method", "+\t\tthis.body.generateCode(this.scope, codeStream);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e092d236f40d0cab5523fe6199de372d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "55c747d0a8aaf13e7d70753235bf6ee4885d2fa8", "commitAfterChange": "f72032f192993f6a000c445c6ab6a878ffda160a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "signatureAfterChange": "\r \tprivate void findFields(\r \t\tchar[] fieldName,\r \t\tFieldBinding[] fields,\r \t\tScope scope,\r \t\tObjectVector fieldsFound,\r \t\tObjectVector localsFound,\r \t\tboolean onlyStaticFields,\r \t\tReferenceBinding receiverType,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "diff": ["+\r", "+\r", "+\r", "+\r", "-\t\t\t\t\t\tchar[] name = enclosing.compoundName[enclosing.compoundName.length-1];\r", "-\t\t\t\t\t\tcompletion = CharOperation.concat(name ,completion,'.');\r", "-\t\t\t\t\t} else {;\r", "-\t\t\t\t\t\tif(enclosing == invocationScope.enclosingSourceType()){\r", "-\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS,completion,'.');\r", "+\t\t\t\t\t\tchar[] name = enclosing.compoundName[enclosing.compoundName.length - 1];\r", "+\t\t\t\t\t\tcompletion = CharOperation.concat(name, completion, '.');\r", "+\t\t\t\t\t} else if (enclosing == invocationScope.enclosingSourceType()) {\r", "+\t\t\t\t\t\tcompletion = CharOperation.concat(THIS, completion, '.');\r", "+\t\t\t\t\t} else {\r", "+\t\t\t\t\t\tchar[] name = enclosing.compoundName[enclosing.compoundName.length - 1];\r", "+\t\t\t\t\t\tif (!enclosing.isNestedType()) {\r", "+\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS, completion, '.');\r", "+\t\t\t\t\t\t\tcompletion = CharOperation.concat(name, completion, '.');\r", "+\t\t\t\t\t\t} else if (enclosing.isAnonymousType()) {\r", "+\t\t\t\t\t\t\tcontinue next;\r", "-\t\t\t\t\t\t\tchar[] name = enclosing.compoundName[enclosing.compoundName.length-1];\r", "-\t\t\t\t\t\t\tif(!enclosing.isNestedType()){\r", "-\t\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS,completion,'.');\r", "-\t\t\t\t\t\t\t\tcompletion = CharOperation.concat(name,completion,'.');\r", "-\t\t\t\t\t\t\t} else if (!enclosing.isAnonymousType()){\r", "-\t\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS,completion,'.');\r", "-\t\t\t\t\t\t\t\tint index = CharOperation.lastIndexOf('$',name);\r", "-\t\t\t\t\t\t\t\tchar[] shortName = CharOperation.subarray(name,index+1,name.length);\r", "-\t\t\t\t\t\t\t\tcompletion = CharOperation.concat(shortName,completion,'.');\r", "-\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\tcompletion = CharOperation.concat(THIS, completion, '.');\r", "+\t\t\t\t\t\t\tint index = CharOperation.lastIndexOf('$', name);\r", "+\t\t\t\t\t\t\tchar[] shortName = CharOperation.subarray(name, index + 1, name.length);\r", "+\t\t\t\t\t\t\tcompletion = CharOperation.concat(shortName, completion, '.');\r", "+\r"]}], "num": 67478}