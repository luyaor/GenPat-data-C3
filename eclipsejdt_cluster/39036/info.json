{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d322b4ebbb96a7d8ecd1caf0d9c28465", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d15ef239dad876563ddf3135b8cc4a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic TypeBound[] flatten()", "signatureAfterChange": " \tpublic TypeBound[] flatten()", "diff": ["-\t\tIterator outerIt = this.boundsPerVariable.values().iterator();", "+\t\tIterator<ThreeSets> outerIt = this.boundsPerVariable.values().iterator();", "-\t\t\tsize += ((ThreeSets)outerIt.next()).size();", "+\t\t\tsize += outerIt.next().size();", "-\t\t\tidx = ((ThreeSets)outerIt.next()).flattenInto(collected, idx);", "+\t\t\tidx = outerIt.next().flattenInto(collected, idx);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f893b97a1802e9dc0b83dc5dcf67477d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tpublic boolean condition18_5_2_bullet_3_3_2(InferenceVariable alpha, TypeBinding targetType, InferenceContext18 ctx18)", "signatureAfterChange": "  \tpublic boolean condition18_5_2_bullet_3_3_2(InferenceVariable alpha, TypeBinding targetType, InferenceContext18 ctx18)", "diff": ["-\t\tThreeSets ts = (ThreeSets) this.boundsPerVariable.get(alpha);", "-\t\tIterator boundIterator;", "+\t\tThreeSets ts = this.boundsPerVariable.get(alpha);", "+\t\tIterator<TypeBound> boundIterator;", "-\t\t\t\tTypeBound b = (TypeBound) boundIterator.next();", "+\t\t\t\tTypeBound b = boundIterator.next();", "-\t\t\t\tTypeBound b = (TypeBound) boundIterator.next();", "+\t\t\t\tTypeBound b = boundIterator.next();"]}], "num": 39036}