{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf79fedb03224fc824cb76ffd06e39fe", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ba632bdd7dd95fc889b008a0b26a52f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaProjectTests.java", "commitBeforeChange": "8376377bee92e0d16cfa404c8d1e948dcf5be147", "commitAfterChange": "0a6cb9139841c5f6143bc94201bfcbd6024601de", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void testGetNonJavaResources() throws CoreException", "signatureAfterChange": " public void testGetNonJavaResources1() throws CoreException", "diff": ["-public void testGetNonJavaResources() throws CoreException {", "+public void testGetNonJavaResources1() throws CoreException {", "-\t\tproject.getProject().build(IncrementalProjectBuilder.FULL_BUILD, null);", "+\t\tassertResources(", "+\t\t\t\"Unexpected non-java resources for project\",", "+\t\t\t\"/P/.classpath\\n\" +", "+\t\t\t\"/P/.project\",", "+\t\t\t(IResource[])project.getNonJavaResources());", "+\t} finally {", "+\t\tthis.deleteProject(\"P\");", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd8f082753e5ba6ec359bb61deada611", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExistenceTests.java", "commitBeforeChange": "8ce8831af304ccf9323d0e03328e25efb4af1a79", "commitAfterChange": "7d5d82386f68c0fa6701931b2514e0faa31f94b7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testClassFileInSource() throws CoreException", "signatureAfterChange": " public void testClassFileInSource1() throws CoreException", "diff": ["-public void testClassFileInSource() throws CoreException {", "+ */", "+public void testClassFileInSource1() throws CoreException {", "-\t\t// for now, we don't check the kind (source or library), ", "-\t\t// so class file can exist in source folder", "-\t\tassertTrue(\"Class file should exist\", classFile.exists()); ", "+\t\tassertTrue(\"Class file should not exist\", !classFile.exists()); ", "+\t} finally {", "+\t\tthis.deleteProject(\"P\");", "+\t}", "+}"]}], "num": 42381}