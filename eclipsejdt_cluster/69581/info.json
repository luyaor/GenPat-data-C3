{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e21cff2806c9002edeeadcd8691f5249", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d629a2e59061764187c1cede3dcedab1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "2a40159dff47fb0e9026a9eb6e050f6d14cc5873", "commitAfterChange": "16d59225e6af39e0fab503daf43d023ad86472cf", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void evaluateCodeSnippet(\r \tString codeSnippet, \r \tString[] localVariableTypeNames, \r \tString[] localVariableNames, \r \tint[] localVariableModifiers, \r \tIType declaringType, \r \tboolean isStatic, \r \tboolean isConstructorCall, \r \tICodeSnippetRequestor requestor, \r \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "signatureAfterChange": "\r public void evaluateCodeSnippet(\r \tString codeSnippet, \r \tString[] localVariableTypeNames, \r \tString[] localVariableNames, \r \tint[] localVariableModifiers, \r \tIType declaringType, \r \tboolean isStatic, \r \tboolean isConstructorCall, \r \tICodeSnippetRequestor requestor, \r \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "diff": ["+\tINameEnvironment environment = null;\r", "-\t\t\tgetBuildNameEnvironment(), \r", "+\t\t\tenvironment = getBuildNameEnvironment(), \r", "+\t} finally {\r", "+\t\tif (environment != null) environment.cleanup();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8c882c8b7623ac33d59f7c44c224055", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "2a40159dff47fb0e9026a9eb6e050f6d14cc5873", "commitAfterChange": "16d59225e6af39e0fab503daf43d023ad86472cf", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r public void evaluateVariable(IGlobalVariable variable, ICodeSnippetRequestor requestor, IProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": "\r public void evaluateVariable(IGlobalVariable variable, ICodeSnippetRequestor requestor, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["+\r", "+\tINameEnvironment environment = null;\r", "-\t\t\tgetBuildNameEnvironment(), \r", "+\t\t\tenvironment = getBuildNameEnvironment(), \r", "+\t} finally {\r", "+\t\tif (environment != null) environment.cleanup();\r"]}], "num": 69581}