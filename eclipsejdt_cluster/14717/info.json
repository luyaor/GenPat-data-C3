{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62d1045274adc9f3be900fb3859ddf23", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af4b0a6b5e36cdcd6bc8ca7a4cb1080", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "commitAfterChange": "7b084156620c5c922d11b27bd8e1266a04bb9736", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, InitializationFlowContext initializationContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, InitializationFlowContext initializationContext, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t// leverage null-info from parameter annotations:", "-\t\t\t\t\tlong argumentTagBits = this.arguments[i].binding.tagBits;", "-\t\t\t\t\tif ((argumentTagBits & TagBits.AnnotationNullable) != 0)", "-\t\t\t\t\t\tflowInfo.markPotentiallyNullBit(this.arguments[i].binding);", "-\t\t\t\t\telse if ((argumentTagBits & TagBits.AnnotationNonNull) != 0)", "-\t\t\t\t\t\tflowInfo.markAsDefinitelyNonNull(this.arguments[i].binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89e53e6f7bcc7271b52611ce2d6b8327", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/AnnotationBinding.java", "commitBeforeChange": "ec0896f6be6c41a0353321bffc1f242fe4e5e1b4", "commitAfterChange": "b0bd844e638d627fddf9ed3dbc5637db4513a8de", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public static AnnotationBinding[] addStandardAnnotations(AnnotationBinding[] recordedAnnotations, long annotationTagBits, LookupEnvironment env)", "signatureAfterChange": " public static AnnotationBinding[] addStandardAnnotations(AnnotationBinding[] recordedAnnotations, long annotationTagBits, LookupEnvironment env)", "diff": ["-\tif ((annotationTagBits & TagBits.AnnotationPostConstruct) != 0)", "-\t\tcount++;", "-\tif ((annotationTagBits & TagBits.AnnotationPreDestroy) != 0)", "-\t\tcount++;", "-\t// count must be different from 0", "+\tif (count == 0) {", "+\t\t// this is possible if bits were set for null annotations", "+\t\treturn recordedAnnotations;", "+\t}", "-\tif ((annotationTagBits & TagBits.AnnotationPostConstruct) != 0)", "-\t\tresult[index++] = buildMarkerAnnotation(TypeConstants.JAVAX_ANNOTATION_POSTCONSTRUCT, env);", "-\tif ((annotationTagBits & TagBits.AnnotationPreDestroy) != 0)", "-\t\tresult[index++] = buildMarkerAnnotation(TypeConstants.JAVAX_ANNOTATION_PREDESTROY, env);"]}], "num": 14717}