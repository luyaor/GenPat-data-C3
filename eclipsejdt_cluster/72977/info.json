{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89a94e91253cb60f755d0225ec112d26", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3dfe38c0957a0ce566ac80dd3286f0ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "6cdef9e50c0c19ef931636bb6582e431ba4ed6f0", "commitAfterChange": "a08dcb71c251f4a65da174f08c5aedb4a1c21fbd", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-    if (this == otherType) return true;", "+", "+\tif (this == otherType) return true;", "-    if (otherType.isWildcard()) // wildcard", "-\t\treturn ((WildcardBinding) otherType).boundCheck(this);", "-    if (this.typeVariables == NoTypeVariables) return false;", "-    if (otherType.isParameterizedType()) {", "-        if ((otherType.tagBits & HasWildcard) == 0 && (!this.isMemberType() || !otherType.isMemberType())) ", "-        \treturn false; // should have been identical", "-        ParameterizedTypeBinding otherParamType = (ParameterizedTypeBinding) otherType;", "-        if (this != otherParamType.type) ", "-            return false;", "-        ReferenceBinding enclosing = enclosingType();", "-        if (enclosing != null && !enclosing.isEquivalentTo(otherParamType.enclosingType()))", "-            return false;", "-        int length = this.typeVariables == null ? 0 : this.typeVariables.length;", "-        TypeBinding[] otherArguments = otherParamType.arguments;", "-        int otherLength = otherArguments == null ? 0 : otherArguments.length;", "-        if (otherLength != length) ", "-            return false;", "-        // argument must be identical, only equivalence is allowed if wildcard other type", "-        for (int i = 0; i < length; i++) {", "-        \tTypeBinding argument = this.typeVariables[i];", "-        \tTypeBinding otherArgument = otherArguments[i];", "-\t\t\tif (!(argument == otherArgument", "-\t\t\t\t\t|| (otherArgument.isWildcard()) && argument.isEquivalentTo(otherArgument))) {", "-\t\t\t\treturn false;", "-\t\t\t}", "-        }", "-        return true;", "-    } else if (otherType.isRawType())", "-        return otherType.erasure() == this;", "+    switch(otherType.bindingType()) {", "+", "+    \tcase Binding.WILDCARD_TYPE :", "+\t\t\treturn ((WildcardBinding) otherType).boundCheck(this);", "+    \t", "+    \tcase Binding.PARAMETERIZED_TYPE :", "+\t        if ((otherType.tagBits & HasWildcard) == 0 && (!this.isMemberType() || !otherType.isMemberType())) ", "+\t        \treturn false; // should have been identical", "+\t        ParameterizedTypeBinding otherParamType = (ParameterizedTypeBinding) otherType;", "+\t        if (this != otherParamType.type) ", "+\t            return false;", "+\t        ReferenceBinding enclosing = enclosingType();", "+\t        if (enclosing != null && !enclosing.isEquivalentTo(otherParamType.enclosingType()))", "+\t            return false;", "+\t        int length = this.typeVariables == null ? 0 : this.typeVariables.length;", "+\t        TypeBinding[] otherArguments = otherParamType.arguments;", "+\t        int otherLength = otherArguments == null ? 0 : otherArguments.length;", "+\t        if (otherLength != length) ", "+\t            return false;", "+\t        // argument must be identical, only equivalence is allowed if wildcard other type", "+\t        for (int i = 0; i < length; i++) {", "+\t        \tTypeBinding argument = this.typeVariables[i];", "+\t        \tTypeBinding otherArgument = otherArguments[i];", "+\t\t\t\tif (!(argument == otherArgument", "+\t\t\t\t\t\t|| (otherArgument.isWildcard()) && argument.isEquivalentTo(otherArgument))) {", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t        }", "+\t        return true;", "+    \t", "+    \tcase Binding.RAW_TYPE :", "+\t        return otherType.erasure() == this;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f99d971f68d54f9b386ed9d90239562a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": " public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": " public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-    if (otherType == null) return false;", "-    switch(otherType.kind()) {", "+\tif (otherType == null) return false;", "+\tswitch(otherType.kind()) {", "-    \tcase Binding.WILDCARD_TYPE :", "+\t\tcase Binding.WILDCARD_TYPE :", "-    \t", "-    \tcase Binding.PARAMETERIZED_TYPE :", "-\t        if ((otherType.tagBits & HasDirectWildcard) == 0 && (!this.isMemberType() || !otherType.isMemberType())) ", "-\t        \treturn false; // should have been identical", "-\t        ParameterizedTypeBinding otherParamType = (ParameterizedTypeBinding) otherType;", "-\t        if (this != otherParamType.type) ", "-\t            return false;", "-            if (!isStatic()) { // static member types do not compare their enclosing", "-\t\t        ReferenceBinding enclosing = enclosingType();", "-\t\t        if (enclosing != null && !enclosing.isEquivalentTo(otherParamType.enclosingType()))", "-\t\t            return false;", "-            }", "-\t        int length = this.typeVariables == null ? 0 : this.typeVariables.length;", "-\t        TypeBinding[] otherArguments = otherParamType.arguments;", "-\t        int otherLength = otherArguments == null ? 0 : otherArguments.length;", "-\t        if (otherLength != length) ", "-\t            return false;", "-\t        for (int i = 0; i < length; i++) {", "-\t        \tif (!this.typeVariables[i].isTypeArgumentContainedBy(otherArguments[i]))", "+", "+\t\tcase Binding.PARAMETERIZED_TYPE :", "+\t\t\tif ((otherType.tagBits & HasDirectWildcard) == 0 && (!this.isMemberType() || !otherType.isMemberType())) ", "+\t\t\t\treturn false; // should have been identical", "+\t\t\tParameterizedTypeBinding otherParamType = (ParameterizedTypeBinding) otherType;", "+\t\t\tif (this != otherParamType.type) ", "+\t\t\t\treturn false;", "+\t\t\tif (!isStatic()) { // static member types do not compare their enclosing", "+\t\t\t\tReferenceBinding enclosing = enclosingType();", "+\t\t\t\tif (enclosing != null && !enclosing.isEquivalentTo(otherParamType.enclosingType()))", "-\t        }", "-\t        return true;", "-    \t", "-    \tcase Binding.RAW_TYPE :", "+\t\t\t}", "+\t\t\tint length = this.typeVariables == null ? 0 : this.typeVariables.length;", "+\t\t\tTypeBinding[] otherArguments = otherParamType.arguments;", "+\t\t\tint otherLength = otherArguments == null ? 0 : otherArguments.length;", "+\t\t\tif (otherLength != length) ", "+\t\t\t\treturn false;", "+\t\t\tfor (int i = 0; i < length; i++)", "+\t\t\t\tif (!this.typeVariables[i].isTypeArgumentContainedBy(otherArguments[i]))", "+\t\t\t\t\treturn false;", "+\t\t\treturn true;", "+", "+\t\tcase Binding.RAW_TYPE :", "-    }", "+\t}"]}], "num": 72977}