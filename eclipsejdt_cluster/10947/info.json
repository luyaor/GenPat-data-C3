{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5e9d5a9c1356cff4d89f924ba73cde19", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "accfba6ce7951f35404eea96559ce4af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "c6a2ea21c48b4e37b2593b0a226cc8af0315c240", "commitAfterChange": "d1cb0e63c04509a47aa96d9330b8d0d858dad246", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t|| flowInfo.isPotentiallyUnknown(local)) {", "+\t\t\t\t\t|| flowInfo.isPotentiallyUnknown(local)", "+\t\t\t\t\t|| flowInfo.isProtectedNonNull(local)) {", "+\t\t\t\t// if variable is not null, we are not interested in recording null reference for deferred checks.", "+\t\t\t\t// This is because CAN_ONLY_NULL means we're only interested in cases when variable can be null."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e85ffdc4e00bcea2f54a53d381173461", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "93991dcca6f649b3226644169cf868ab7dae96df", "commitAfterChange": "d822f3498ffb9e5cdd62d79ada53897bda8bb948", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void recordUsingNullReference(Scope scope, LocalVariableBinding local,  \t\t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordUsingNullReference(Scope scope, LocalVariableBinding local,  \t\t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\tif (flowInfo.isProtectedNonNull(local)) {", "+\t\t\t\t\tif (flowInfo.cannotBeNull(local)) {", "-\t\t\t\t\tif (flowInfo.isProtectedNull(local)) {", "+\t\t\t\t\tif (flowInfo.canOnlyBeNull(local)) {", "-\t\t\t\t\tif (flowInfo.isProtectedNonNull(local)) {", "+\t\t\t\t\tif (flowInfo.cannotBeNull(local)) {", "-\t\t\t\t\tif (flowInfo.isProtectedNull(local)) {", "+\t\t\t\t\tif (flowInfo.canOnlyBeNull(local)) {"]}], "num": 10947}