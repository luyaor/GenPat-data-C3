{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c866f69490e30b5646cee53d90791297", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39e3f70facc3414a8fe4b94baa72f260", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\treturn this.leftPattern.matches(node, resolve) || this.rightPattern.matches(node, resolve);\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tswitch (this.leftPattern.matchLevel(node, resolve)) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn this.rightPattern.matchLevel(node, resolve);\r", "-\t\tcase POSSIBLE_MATCH:\r", "-\t\t\treturn POSSIBLE_MATCH;\r", "-\t\tcase INACCURATE_MATCH:\r", "-\t\t\tint rightLevel = this.rightPattern.matchLevel(node, resolve);\r", "-\t\t\tif (rightLevel != IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn rightLevel;\r", "-\t\t\t} else {\r", "-\t\t\t\treturn INACCURATE_MATCH;\r", "-\t\t\t}\r", "-\t\tcase ACCURATE_MATCH:\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\tdefault:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t}\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb1b6335cb14fc37cc29c0957371522", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(AstNode node, boolean resolve)", "signatureAfterChange": "\r protected boolean matches(AstNode node, boolean resolve)", "diff": ["+ */\r", "+protected boolean matches(AstNode node, boolean resolve) {\r", "+\treturn this.leftPattern.matches(node, resolve) || this.rightPattern.matches(node, resolve);\r", "+}\r", "- */\r", "-public int matchLevel(AstNode node, boolean resolve) {\r", "-\tswitch (this.leftPattern.matchLevel(node, resolve)) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\treturn this.rightPattern.matchLevel(node, resolve);\r", "-\t\tcase POSSIBLE_MATCH:\r", "-\t\t\treturn POSSIBLE_MATCH;\r", "-\t\tcase INACCURATE_MATCH:\r", "-\t\t\tint rightLevel = this.rightPattern.matchLevel(node, resolve);\r", "-\t\t\tif (rightLevel != IMPOSSIBLE_MATCH) {\r", "-\t\t\t\treturn rightLevel;\r", "-\t\t\t} else {\r", "-\t\t\t\treturn INACCURATE_MATCH;\r", "-\t\t\t}\r", "-\t\tcase ACCURATE_MATCH:\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\tdefault:\r", "-\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t}\r", "-}\r"]}], "num": 1496}