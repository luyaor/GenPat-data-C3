{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6599b94ec00e79224b162dff2340d0e4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "023ee822851421bc70fd6bbc9ba3a238", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "55a7556711dc91579fb591d318cd652e79ebf6a7", "commitAfterChange": "65b4e15798189e35310112aac16988bcdf7eef0b", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprotected void assertClasspathEquals(IClasspathEntry[] classpath, String expected)", "signatureAfterChange": " \tprotected void assertClasspathEquals(IClasspathEntry[] classpath, String expected)", "diff": ["-\t\tStringBuffer buffer = new StringBuffer();", "-\t\tint length = classpath == null ? 0 : classpath.length;", "-\t\tfor (int i=0; i<length; i++) {", "-\t\t\tbuffer.append(classpath[i]);", "-\t\t\tif (i < length-1)", "-\t\t\t\tbuffer.append('\\n');", "+\t\tString actual;", "+\t\tif (classpath == null) {", "+\t\t\tactual = \"<null>\";", "+\t\t} else {", "+\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\tint length = classpath.length;", "+\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\tbuffer.append(classpath[i]);", "+\t\t\t\tif (i < length-1)", "+\t\t\t\t\tbuffer.append('\\n');", "+\t\t\t}", "+\t\t\tactual = buffer.toString();", "-\t\tString actual = buffer.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "656471422090151b27e12504f4016652", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "1fa0b970f57a68665cdfde955081db2621c42276", "commitAfterChange": "be945f896dfe94a8d4114819ea1c2afbe987ee6b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\t\t\t\tthis.key = this.getElementType().getKey() + this.getDimensions();", "+\t\t\t\t\t\tStringBuffer buffer = new StringBuffer(this.getElementType().getKey());", "+\t\t\t\t\t\tint dimensions = this.getDimensions();", "+\t\t\t\t\t\tfor (int j = 0; j < dimensions; j++) {", "+\t\t\t\t\t\t\tbuffer.append('[').append(']');", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.key = String.valueOf(buffer);", "-\t\t\t\t\t\tthis.key = Integer.toString(this.getDimensions());", "+\t\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "+\t\t\t\t\t\tint dimensions = this.getDimensions();", "+\t\t\t\t\t\tfor (int j = 0; j < dimensions; j++) {", "+\t\t\t\t\t\t\tbuffer.append('[').append(']');", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.key = String.valueOf(buffer);"]}], "num": 17855}