{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef7a4b3518a297a5f887ace73816378e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1103182e2577c630539130084b6923ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "fa4cf904b1d5690e02fc0246dbc8bc14a58e5d04", "commitAfterChange": "4ddddb5424dafb4b8650d4349863e03fece6ac06", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 66, "signatureBeforeChange": "  \tprivate char[][] getParameterNames(char[] methodDescriptor, ICodeAttribute codeAttribute, int accessFlags)", "signatureAfterChange": "  \tprivate char[][] getParameterNames(char[] methodDescriptor, ICodeAttribute codeAttribute, IMethodParametersAttribute parametersAttribute, int accessFlags)", "diff": ["-\tprivate char[][] getParameterNames(char[] methodDescriptor, ICodeAttribute codeAttribute, int accessFlags) {", "+\tprivate char[][] getParameterNames(char[] methodDescriptor, ICodeAttribute codeAttribute, IMethodParametersAttribute parametersAttribute, int accessFlags) {", "-\t\tif (codeAttribute != null) {", "-\t\t\tILocalVariableAttribute localVariableAttribute = codeAttribute.getLocalVariableAttribute();", "-\t\t\tif (localVariableAttribute != null) {", "-\t\t\t\tILocalVariableTableEntry[] entries = localVariableAttribute.getLocalVariableTable();", "-\t\t\t\tfinal int startingIndex = (accessFlags & IModifierConstants.ACC_STATIC) != 0 ? 0 : 1;", "-\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "-\t\t\t\t\tILocalVariableTableEntry searchedEntry = getEntryFor(getLocalIndex(startingIndex, i, methodDescriptor), entries);", "-\t\t\t\t\tif (searchedEntry != null) {", "-\t\t\t\t\t\tparameterNames[i] = searchedEntry.getName();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tparameterNames[i] = CharOperation.concat(Messages.disassembler_parametername.toCharArray(), Integer.toString(i).toCharArray());", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\tif (parametersAttribute != null) {", "+\t\t\tint parameterCount = parametersAttribute.getMethodParameterLength();", "+\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\tif (i < parameterCount && parametersAttribute.getParameterName(i) != null) {", "+\t\t\t\t\tparameterNames[i] = parametersAttribute.getParameterName(i);", "+\t\t\t\t} else {", "+\t\t} else if (codeAttribute != null) {", "+\t\t\t\tILocalVariableAttribute localVariableAttribute = codeAttribute.getLocalVariableAttribute();", "+\t\t\t\tif (localVariableAttribute != null) {", "+\t\t\t\t\tILocalVariableTableEntry[] entries = localVariableAttribute.getLocalVariableTable();", "+\t\t\t\t\tfinal int startingIndex = (accessFlags & IModifierConstants.ACC_STATIC) != 0 ? 0 : 1;", "+\t\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\t\t\tILocalVariableTableEntry searchedEntry = getEntryFor(getLocalIndex(startingIndex, i, methodDescriptor), entries);", "+\t\t\t\t\t\tif (searchedEntry != null) {", "+\t\t\t\t\t\t\tparameterNames[i] = searchedEntry.getName();", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tparameterNames[i] = CharOperation.concat(Messages.disassembler_parametername.toCharArray(), Integer.toString(i).toCharArray());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\t\t\tparameterNames[i] = CharOperation.concat(Messages.disassembler_parametername.toCharArray(), Integer.toString(i).toCharArray());", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3143fe1a06c357abf86211a97ed5bbf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "31cfa6b6488d9d9fc18c173f048355508ddab466", "commitAfterChange": "abd333621a0cbd2492673b0e887a888245d2d663", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate char[][] getParameterNames(char[] methodDescriptor)", "signatureAfterChange": "  \tprivate char[][] getParameterNames(char[] methodDescriptor, ICodeAttribute codeAttribute, int accessFlags)", "diff": ["-\tprivate char[][] getParameterNames(char[] methodDescriptor) {", "+\tprivate char[][] getParameterNames(char[] methodDescriptor, ICodeAttribute codeAttribute, int accessFlags) {", "-\t\tfor (int i = 0; i < paramCount; i++) {", "-\t\t\tparameterNames[i] = Util.bind(\"disassembler.parametername\").toCharArray(); //$NON-NLS-1$", "+\t\t// check if the code attribute has debug info for this method", "+\t\tif (codeAttribute != null) {", "+\t\t\tILocalVariableAttribute localVariableAttribute = codeAttribute.getLocalVariableAttribute();", "+\t\t\tif (localVariableAttribute != null) {", "+\t\t\t\tILocalVariableTableEntry[] entries = localVariableAttribute.getLocalVariableTable();", "+\t\t\t\tint startingIndex = (accessFlags & IModifierConstants.ACC_STATIC) != 0 ? 0 : 1;", "+\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\t\tILocalVariableTableEntry searchedEntry = getEntryFor(startingIndex + i, entries);", "+\t\t\t\t\tif (searchedEntry != null) {", "+\t\t\t\t\t\tparameterNames[i] = searchedEntry.getName();", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tparameterNames[i] = Util.bind(\"disassembler.parametername\").toCharArray(); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\t\tparameterNames[i] = Util.bind(\"disassembler.parametername\").toCharArray(); //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} else {", "+\t\t\tfor (int i = 0; i < paramCount; i++) {", "+\t\t\t\tparameterNames[i] = Util.bind(\"disassembler.parametername\").toCharArray(); //$NON-NLS-1$", "+\t\t\t}"]}], "num": 47608}