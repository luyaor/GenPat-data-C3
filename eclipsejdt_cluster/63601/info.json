{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87fe4b0ec977c65b9938f1cac8f828ec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e420c9b088b3fcc4e9d89251bd96c13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "d6d09dea522392b75a09fab15337bbc09b94d77c", "commitAfterChange": "92a1bed0a525f065b3afa8ca4370b68c7dfc54cc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeDeclaration convert( \t\tISourceType sourceType, \t\tboolean needFieldsAndMethods, \t\tboolean needMemberTypes, \t\tCompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert( \t\tISourceType sourceType, \t\tboolean needFieldsAndMethods, \t\tboolean needMemberTypes, \t\tCompilationResult compilationResult)", "diff": ["-\t\t\tint neededCount = 1;", "-\t\t\tfor (int i = 0; i < sourceMethodCount; i++) {", "-\t\t\t\tif (sourceMethods[i].isConstructor()) {", "-\t\t\t\t\tneededCount = 0;", "-\t\t\t\t\t// Does not need the extra constructor since one constructor already exists.", "-\t\t\t\t\tbreak;", "+\t\t\tint neededCount = 0;", "+\t\t\tif (!type.isInterface()) {", "+\t\t\t\tneededCount = 1;", "+\t\t\t\tfor (int i = 0; i < sourceMethodCount; i++) {", "+\t\t\t\t\tif (sourceMethods[i].isConstructor()) {", "+\t\t\t\t\t\tneededCount = 0;", "+\t\t\t\t\t\t// Does not need the extra constructor since one constructor already exists.", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4635302af8d66208e80776690563975c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\tif (expressionType.isBaseType()) {", "+\t\t\t\t\tif (!expressionType.isValidBinding()) {", "+\t\t\t\t\t\texpressionType = null; // fault-tolerance: ignore type mismatch from constants from hereon", "+\t\t\t\t\t\tbreak checkType;", "+\t\t\t\t\t} else if (expressionType.isBaseType()) {"]}], "num": 63601}