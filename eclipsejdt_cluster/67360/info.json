{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "53532c8975634e0af94cb754fd7c4312", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a3fe8392d4c19e3ddbcbdf21ed0d87fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "9eb5a1d9ec383001f1c7cbca4aa65b03f0785dec", "commitAfterChange": "53522b164ba1a9815ac670d1ff2acf01e7e9ad27", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic IPackageFragmentRoot findPackageFragmentRoot(IPath path)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic IPackageFragmentRoot findPackageFragmentRoot(IPath path)\r \t\tthrows JavaModelException", "diff": ["-\t\treturn getNameLookup().findPackageFragmentRoot(this.canonicalizedPath(path));\r", "+\t\tIPackageFragmentRoot[] allRoots = this.getAllPackageFragmentRoots();\r", "+\t\tpath = this.canonicalizedPath(path);\r", "+\t\tif (!path.isAbsolute()) {\r", "+\t\t\tthrow new IllegalArgumentException(Util.bind(\"path.mustBeAbsolute\")); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\tfor (int i= 0; i < allRoots.length; i++) {\r", "+\t\t\tIPackageFragmentRoot classpathRoot= allRoots[i];\r", "+\t\t\tif (classpathRoot.getPath().equals(path)) {\r", "+\t\t\t\treturn classpathRoot;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\treturn null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efa785f619f88411ce8d9f9bc3617f74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LocalVariableBinding.java", "commitBeforeChange": "ecc877f4a64f24702c10a0e0ed414c6dcc29fb27", "commitAfterChange": "7943e50059a500406b320bebd48d63683b77a8e7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " \tpublic char[] computeUniqueKey(boolean isLeaf)", "diff": ["+\t\tint occurenceCount = 0;", "+\t\t\t", "+\t\t\t// find number of occurences of a variable with the same name in the scope", "+\t\t\tLocalVariableBinding[] locals = scope.locals;", "+\t\t\tfor (int i = 0; i < scope.localIndex; i++) { // use linear search assuming the number of locals per scope is low", "+\t\t\t\tLocalVariableBinding local = locals[i];", "+\t\t\t\tif (CharOperation.equals(this.name, local.name)) {", "+\t\t\t\t\tif (this == local)", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\toccurenceCount++;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t// add occurence count to avoid same key for duplicate variables", "+\t\t// (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=149590)", "+\t\tif (occurenceCount > 0) {", "+\t\t\tbuffer.append('#');", "+\t\t\tbuffer.append(occurenceCount);", "+\t\t}", "+\t\t"]}], "num": 67360}