{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c94d21811e080d5d4b20a17a2aea96cf", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a6b3c444790338a71c095253eb1ef1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java", "commitBeforeChange": "5ea0ae6c0d5a6162940bd458d3ead5d427058c35", "commitAfterChange": "2ad69f466c4df4c3e626fb0d9831c536de8ea5c0", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tpublic void testBuildStarting() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testBuildStarting() throws JavaModelException", "diff": ["-\t\tenv.addClass(root, \"\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tIPath test = env.addClass(root, \"\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t);", "+\t\t);", "-\t\t\tboolean createFile = true;", "+\t\t\tint buildPass = 0;", "-\t\t\t\tif (!this.createFile) return;", "-\t\t\t\tthis.createFile = false;", "-\t\t\t\ttry {", "-\t\t\t\t\tgenedType.create(new ByteArrayInputStream(\"public class GeneratedType {}\".getBytes()), true, null); //$NON-NLS-1$", "-\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\te.printStackTrace();", "+\t\t\t\tif (this.buildPass == 0 || this.buildPass == 3) {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tgenedType.create(new ByteArrayInputStream(\"public class GeneratedType {}\".getBytes()), true, null); //$NON-NLS-1$", "+\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\t}", "+\t\t\t\t\tresult.recordAddedGeneratedFiles(new IFile[] {genedType});", "+\t\t\t\t} else if (this.buildPass == 1) {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tgenedType.delete(true, null);", "+\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\te.printStackTrace();", "+\t\t\t\t\t}", "+\t\t\t\t\tresult.recordDeletedGeneratedFiles(new IFile[] {genedType});", "-\t\t\t\tresult.recordAddedGeneratedFiles(new IFile[] {genedType});", "+\t\t\t\tthis.buildPass++;", "-\t\tfullBuild(projectPath);", "+\t\tincrementalBuild(projectPath);", "+\t\texpectingNoProblems();", "+", "+\t\t// GeneratedType will be deleted", "+\t\tenv.addClass(root, \"\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"public class Test extends GeneratedType {}\\n\" //$NON-NLS-1$", "+\t\t);", "+\t\tincrementalBuild(projectPath);", "+\t\texpectingOnlySpecificProblemFor(test, new Problem(\"\", \"GeneratedType cannot be resolved to a type\", test, 26, 39, CategorizedProblem.CAT_TYPE, IMarker.SEVERITY_ERROR));", "+", "+\t\t// GeneratedType will be recreated", "+\t\tenv.addClass(root, \"\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"public class Test extends GeneratedType {}\\n\" //$NON-NLS-1$", "+\t\t);", "+\t\tincrementalBuild(projectPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f421112a045e4fa34be445d272a1e15e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuildpathTests.java", "commitBeforeChange": "53dea3bbb0a8d720e7abd4d3f9b54cc5dbdaecb6", "commitAfterChange": "d16e32b1bfbbab8deee5f229ab908fe246be9b08", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void testCorruptBuilder() throws JavaModelException", "signatureAfterChange": "  \tpublic void testCorruptBuilder() throws JavaModelException", "diff": ["-\t\tIPath test = env.addClass(project1Path, \"p\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tenv.addClass(project1Path, \"p\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tenv.removeBinaryClass(test.removeLastSegments(1), \"Test\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tIPath outputFolderPackage = env.getOutputLocation(project1Path).append(\"p\"); //$NON-NLS-1$", "+\t\tenv.removeBinaryClass(outputFolderPackage, \"Test\"); //$NON-NLS-1$", "-\t\tenv.addClass(project1Path, \"\", \"SubTest\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tIPath subTest = env.addClass(project1Path, \"\", \"SubTest\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingOnlySpecificProblemFor(subTest, new Problem(\"\", \"p.Test cannot be resolved to a type\", subTest, 29, 35, 40)); //$NON-NLS-1$ //$NON-NLS-2$)", "+", "+\t\tenv.addClass(project1Path, \"p\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"package p;\" + //$NON-NLS-1$", "+\t\t\t\"public class Test {}\" //$NON-NLS-1$", "+\t\t);", "+", "+\t\tfullBuild();", "+", "+\t\tHashtable options = JavaCore.getOptions();", "+\t\toptions.put(JavaCore.CORE_JAVA_BUILD_MAKE_OUTPUT_FOLDER_CONSISTENT, JavaCore.ENABLED);", "+\t\tJavaCore.setOptions(options);", "+", "+\t\tenv.removeBinaryClass(outputFolderPackage, \"Test\"); //$NON-NLS-1$", "+", "+\t\tincrementalBuild();", "+\t\texpectingNoProblems();", "+", "+\t\toptions.put(JavaCore.CORE_JAVA_BUILD_MAKE_OUTPUT_FOLDER_CONSISTENT, JavaCore.IGNORE);", "+\t\tJavaCore.setOptions(options);"]}], "num": 59982}