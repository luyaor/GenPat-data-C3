{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68834e59c13a4aa5d67cc9f514e3932c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "912115b76e08e60f5edc3de39b0751cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tprivate Set<IContainer> getNewPackageFolders(String pkgName, IFolder parent )", "signatureAfterChange": " \tprivate Set<IFolder> computeNewPackageFolders(String pkgName, IFolder parent)", "diff": ["+\t */", "+\tprivate Set<IFolder> computeNewPackageFolders(String pkgName, IFolder parent)", "+\t{", "+\t\tSet<IFolder> newFolders = new HashSet<IFolder>();", "+\t\tString[] folders = _PACKAGE_DELIMITER.split(pkgName);", "+\t\tfor (String folderName : folders) {", "+\t\t\tfinal IFolder folder = parent.getFolder(folderName);", "+\t\t\tif (!folder.exists()) {", "+\t\t\t\tnewFolders.add(folder);", "+\t\t\t}", "+\t\t\tparent = folder;", "+\t\t}", "+\t\treturn newFolders;", "+\t}", "-\t", "-\tprivate Set<IContainer> getNewPackageFolders(String pkgName, IFolder parent )", "-\t{", "-\t\tStringBuilder buffer = new StringBuilder();", "-\t\tSet<IContainer> newFolders = new HashSet<IContainer>();", "-\t    for( int i=0, len=pkgName.length(); i<len; i++ ){", "-\t    \tfinal char c = pkgName.charAt(i);", "-\t    \tif( c != '.')", "-\t    \t\tbuffer.append(c);", "-\t    \t// create a folder when we see a dot or when we are at the end.", "-\t    \tif( c == '.' || i == len - 1){", "-\t    \t\tif( buffer.length() > 0 ){", "-\t    \t\t\tfinal IFolder folder = parent.getFolder(buffer.toString());", "-\t    \t\t\tif( !folder.exists()){", "-\t    \t\t\t\tnewFolders.add(folder);", "-\t    \t\t\t}", "-\t    \t\t\tparent = folder;", "-\t    \t\t\t// reset the buffer", "-\t    \t\t\tbuffer.setLength(0);", "-\t    \t\t}", "-\t    \t}", "-\t    }", "-\t    return newFolders;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1afdcaa9a0b2b35920678124a9aca21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "10da3a4eb64e0a8615b8c4fd2a1cd1c9da864dbb", "commitAfterChange": "9b9b413c1fc3e1733988a3ceecffb87b92306bbd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void createFoldersForFile( IFile f ) \t    throws CoreException", "signatureAfterChange": " \tprivate void createFoldersForPackage(String pkgName, IFolder parent) \t\tthrows CoreException", "diff": ["-\tprivate void createFoldersForFile( IFile f )", "-\t    throws CoreException", "+\tprivate void createFoldersForPackage(String pkgName, IFolder parent)", "+\t\tthrows CoreException", "-\t\tString[] parts = f.getProjectRelativePath().segments();", "-\t\tIContainer c = f.getProject();", "-", "-\t\tIFolder folder = c.getFolder( new Path( parts[0] ) );", "-\t\tif ( !folder.exists() )", "-\t\t\tfolder.create( true, false, null );", "-\t\t", "-\t\tfor ( int i = 1; i < parts.length - 1; i++ )", "-\t\t{", "-\t\t\tfolder = folder.getFolder( parts[i] );", "-\t\t\tif ( !folder.exists() )", "-\t\t\t\tfolder.create( true, false, null );", "-\t\t}", "+\t    StringBuilder buffer = new StringBuilder();", "+\t    for( int i=0, len=pkgName.length(); i<len; i++ ){", "+\t    \tfinal char c = pkgName.charAt(i);", "+\t    \tif( c != '.')", "+\t    \t\tbuffer.append(c);", "+\t    \t// create a folder when we see a dot or when we are at the end.", "+\t    \tif( c == '.' || i == len - 1){", "+\t    \t\tif( buffer.length() > 0 ){", "+\t    \t\t\tfinal IFolder folder = parent.getFolder(buffer.toString());", "+\t    \t\t\tif( !folder.exists()){", "+\t    \t\t\t\tfolder.create(true, true, null);", "+\t    \t\t\t\tfolder.setDerived(true);", "+\t    \t\t\t}", "+\t    \t\t\tparent = folder;", "+\t    \t\t\t// reset the buffer", "+\t    \t\t\tbuffer.setLength(0);", "+\t    \t\t}", "+\t    \t}", "+\t    }"]}], "num": 47390}