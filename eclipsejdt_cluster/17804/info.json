{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4518a5cd58011f412deeaec7eaa419fd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9847b6340d76f91432f77b3a76b0066", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "69cf42e8bc4eba88935c2a54eaa23de2e6259a9b", "commitAfterChange": "46618cf13188500eaee539b8e46fcf26be42ca02", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass, String complianceLevel)", "signatureAfterChange": "  \tpublic static Test buildTestSuite(Class evaluationTestClass, long complianceLevel)", "diff": ["-\tpublic static Test buildTestSuite(Class evaluationTestClass, String complianceLevel) {", "-\t\tTestSuite suite = new TestSuite(complianceLevel);", "+\tpublic static Test buildTestSuite(Class evaluationTestClass, long complianceLevel) {", "+\t\tTestSuite suite = new TestSuite(CompilerOptions.versionFromJdkLevel(complianceLevel));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fff3b79bbcc0f2ae61065bedc1246090", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "69cf42e8bc4eba88935c2a54eaa23de2e6259a9b", "commitAfterChange": "46618cf13188500eaee539b8e46fcf26be42ca02", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static Test buildUniqueComplianceTestSuite(Class evaluationTestClass, String uniqueCompliance)", "signatureAfterChange": " \tpublic static Test buildUniqueComplianceTestSuite(Class evaluationTestClass, long uniqueCompliance)", "diff": ["-\tpublic static Test buildUniqueComplianceTestSuite(Class evaluationTestClass, String uniqueCompliance) {", "-\t\tString highestLevel = highestComplianceLevels();", "-\t\tif (highestLevel.compareTo(uniqueCompliance) < 0) {", "+\tpublic static Test buildUniqueComplianceTestSuite(Class evaluationTestClass, long uniqueCompliance) {", "+\t\tlong highestLevel = highestComplianceLevels();", "+\t\tif (highestLevel < uniqueCompliance) {", "-\t\tTestSuite complianceSuite = new TestSuite(uniqueCompliance);", "+\t\tTestSuite complianceSuite = new TestSuite(CompilerOptions.versionFromJdkLevel(uniqueCompliance));"]}], "num": 17804}