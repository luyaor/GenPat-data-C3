{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7bd46b22280f92508176acb78ead3e2e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25f9fd766047e857c68a6962fc697246", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "83dc88df7a1508be17b764df4120ac8a34178f58", "commitAfterChange": "f428b70bc80bfdae47260a00a8636113b21b698c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, HashSet visitedTypes)", "signatureAfterChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, HashSet visitedTypes)", "diff": ["-\t\t\t\tif (!typeBinding2.isWildcard()) {", "+\t\t\t\tif (typeBinding2.kind() != Binding.WILDCARD_TYPE) {", "+\t\t\tcase Binding.INTERSECTION_TYPE:", "+\t\t\t\tif (typeBinding2.kind() != Binding.INTERSECTION_TYPE) {", "+\t\t\t\t\treturn false;", "+\t\t\t\t}", "+\t\t\t\tWildcardBinding intersectionBinding = (WildcardBinding) typeBinding;", "+\t\t\t\tWildcardBinding intersectionBinding2 = (WildcardBinding) typeBinding2;", "+\t\t\t\treturn isEqual(intersectionBinding.bound, intersectionBinding2.bound, visitedTypes)", "+\t\t\t\t\t&& isEqual(intersectionBinding.otherBounds, intersectionBinding2.otherBounds, visitedTypes);", "+\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e51ba67ee9a4c72c1b87ce7ebba12a9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "8d86c45b7dbc1d8316194b358e7234e4491fa695", "commitAfterChange": "0305482ace5c5443f44c914a225574b12096815b", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "signatureAfterChange": " \tpublic TypeBinding substitute(TypeBinding originalType)", "diff": ["+\t\t\tcase Binding.WILDCARD_TYPE:", "+\t\t        WildcardBinding wildcard = (WildcardBinding) originalType;", "+\t\t        if (wildcard.kind != Wildcard.UNBOUND) {", "+\t\t\t        TypeBinding originalBound = wildcard.bound;", "+\t\t\t        TypeBinding substitutedBound = substitute(originalBound);", "+\t\t\t        if (substitutedBound != originalBound) {", "+\t\t        \t\treturn this.environment.createWildcard(wildcard.genericType, wildcard.rank, substitutedBound, wildcard.kind);", "+\t\t\t        }", "+\t\t        }", "+\t\t        break;", "+\t\t        "]}], "num": 59623}