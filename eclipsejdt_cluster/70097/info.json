{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d39f3b3a6fd9886215e0d17c7b7fa58", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0692db93786146f69d1297c34dbf76f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "bbb0dcb779d919061a7831a79389e1c049a224cf", "commitAfterChange": "1757e38a5d83efbdcae1f40063864d000049242c", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate FieldDeclaration convert(SourceField fieldHandle, TypeDeclaration type, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate FieldDeclaration convert(SourceField fieldHandle, TypeDeclaration type, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\t\tif (childrenLength > 0) {", "+\t\t\tif (childrenLength == 1) {", "+\t\t\t\tfield.initialization = convert(children[0], isEnumConstant ? field : null, compilationResult);", "+\t\t\t} else if (childrenLength > 1) {", "-\t\t\t\t\tIJavaElement localType = children[i];", "-\t\t\t\t\tTypeDeclaration anonymousLocalTypeDeclaration = convert((SourceType) localType, compilationResult);", "-\t\t\t\t\tQualifiedAllocationExpression expression = new QualifiedAllocationExpression(anonymousLocalTypeDeclaration);", "-\t\t\t\t\texpression.type = anonymousLocalTypeDeclaration.superclass;", "-\t\t\t\t\tanonymousLocalTypeDeclaration.superclass = null;", "-\t\t\t\t\tanonymousLocalTypeDeclaration.superInterfaces = null;", "-\t\t\t\t\tanonymousLocalTypeDeclaration.allocation = expression;", "-\t\t\t\t\tanonymousLocalTypeDeclaration.modifiers &= ~ClassFileConstants.AccEnum; // remove tag in case this is the init of an enum constant", "-\t\t\t\t\texpressions[i] = expression;", "+\t\t\t\t\texpressions[i] = convert(children[i], isEnumConstant ? field : null, compilationResult);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa2212878579b486fe04228fc6e8474a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "bbb0dcb779d919061a7831a79389e1c049a224cf", "commitAfterChange": "1757e38a5d83efbdcae1f40063864d000049242c", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate AbstractMethodDeclaration convert(SourceMethod methodHandle, SourceMethodElementInfo methodInfo, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": "  \tprivate QualifiedAllocationExpression convert(IJavaElement localType, FieldDeclaration enumConstant, CompilationResult compilationResult) throws JavaModelException", "diff": ["+\tprivate QualifiedAllocationExpression convert(IJavaElement localType, FieldDeclaration enumConstant, CompilationResult compilationResult) throws JavaModelException {", "+\t\tTypeDeclaration anonymousLocalTypeDeclaration = convert((SourceType) localType, compilationResult);", "+\t\tQualifiedAllocationExpression expression = new QualifiedAllocationExpression(anonymousLocalTypeDeclaration);", "+\t\texpression.type = anonymousLocalTypeDeclaration.superclass;", "+\t\tanonymousLocalTypeDeclaration.superclass = null;", "+\t\tanonymousLocalTypeDeclaration.superInterfaces = null;", "+\t\tanonymousLocalTypeDeclaration.allocation = expression;", "+\t\tif (enumConstant != null) {", "+\t\t\tanonymousLocalTypeDeclaration.modifiers &= ~ClassFileConstants.AccEnum;", "+\t\t\texpression.enumConstant = enumConstant;", "+\t\t\texpression.type = null;", "+\t\t}", "+\t\treturn expression;", "+\t}"]}], "num": 70097}