{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d76b2a5909167ab80b91656b077a9678", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69e2f5c83864484bb8dbc21728fbf18a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/HandleFactory.java", "commitBeforeChange": "9f8c0aff4541413a1d59ce816c9847753c28077a", "commitAfterChange": "9252f03474977360ba3ba4ad93fe71b877d8ccd9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString)", "signatureAfterChange": " \tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString, IJavaSearchScope scope)", "diff": ["-\tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString) {", "+\tprivate IPackageFragmentRoot getJarPkgFragmentRoot(String jarPathString, IJavaSearchScope scope) {", "-\t\t// walk all projects and find the first one that has the given jar path in its classpath", "+\t\t// walk projects in the scope and find the first one that has the given jar path in its classpath", "+\t\tif (scope != null) {", "+\t\t\tIPath[] enclosingProjectsAndJars = scope.enclosingProjectsAndJars();", "+\t\t\tint length = enclosingProjectsAndJars.length;", "+\t\t\tprojects = new IJavaProject[length];", "+\t\t\tint index = 0;", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tIPath path = enclosingProjectsAndJars[i];", "+\t\t\t\tif (!Util.isArchiveFileName(path.lastSegment())) {", "+\t\t\t\t\tprojects[index++] = this.javaModel.getJavaProject(path.segment(0));", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (index < length) {", "+\t\t\t\tSystem.arraycopy(projects, 0, projects = new IJavaProject[index], 0, index);", "+\t\t\t}", "+\t\t\tIPackageFragmentRoot root = getJarPkgFragmentRoot(jarPathString, jarPath, target, projects);", "+\t\t\tif (root != null) {", "+\t\t\t\treturn root;", "+\t\t\t}", "+\t\t} ", "+\t\t", "+\t\t// not found in the scope, walk all projects", "+\t\treturn getJarPkgFragmentRoot(jarPathString, jarPath, target, projects);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab4b7d3dd9e7a443c862c43e34d4ee44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/HandleFactory.java", "commitBeforeChange": "25371811dc53dc8420266190ce7e5ea74510807e", "commitAfterChange": "0f7f9d63e5fbc5d41771bd4e2e39b628130add76", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate PackageFragmentRoot getJarPkgFragmentRoot(String jarPathString, IJavaSearchScope scope)", "signatureAfterChange": " \tprivate PackageFragmentRoot getJarPkgFragmentRoot(String resourcePathString, int jarSeparatorIndex, String jarPathString, IJavaSearchScope scope)", "diff": ["-\tprivate PackageFragmentRoot getJarPkgFragmentRoot(String jarPathString, IJavaSearchScope scope) {", "+\tprivate PackageFragmentRoot getJarPkgFragmentRoot(String resourcePathString, int jarSeparatorIndex, String jarPathString, IJavaSearchScope scope) {", "-\t\t\tIPath[] enclosingProjectsAndJars = scope.enclosingProjectsAndJars();", "-\t\t\tint length = enclosingProjectsAndJars.length;", "-\t\t\tprojects = new IJavaProject[length];", "-\t\t\tint index = 0;", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tIPath path = enclosingProjectsAndJars[i];", "-\t\t\t\tif (path.segmentCount() == 1) {", "-\t\t\t\t\tprojects[index++] = this.javaModel.getJavaProject(path.segment(0));", "+\t\t\tif (scope instanceof AbstractJavaSearchScope) {", "+\t\t\t\tPackageFragmentRoot root = (PackageFragmentRoot) ((AbstractJavaSearchScope) scope).packageFragmentRoot(resourcePathString, jarSeparatorIndex, jarPathString);", "+\t\t\t\tif (root != null)", "+\t\t\t\t\treturn root;", "+\t\t\t} else {", "+\t\t\t\tIPath[] enclosingProjectsAndJars = scope.enclosingProjectsAndJars();", "+\t\t\t\tint length = enclosingProjectsAndJars.length;", "+\t\t\t\tprojects = new IJavaProject[length];", "+\t\t\t\tint index = 0;", "+\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\tIPath path = enclosingProjectsAndJars[i];", "+\t\t\t\t\tif (path.segmentCount() == 1) {", "+\t\t\t\t\t\tprojects[index++] = this.javaModel.getJavaProject(path.segment(0));", "+\t\t\t\t\t}", "-\t\t\t}", "-\t\t\tif (index < length) {", "-\t\t\t\tSystem.arraycopy(projects, 0, projects = new IJavaProject[index], 0, index);", "-\t\t\t}", "-\t\t\tPackageFragmentRoot root = getJarPkgFragmentRoot(jarPath, target, projects);", "-\t\t\tif (root != null) {", "-\t\t\t\treturn root;", "+\t\t\t\tif (index < length) {", "+\t\t\t\t\tSystem.arraycopy(projects, 0, projects = new IJavaProject[index], 0, index);", "+\t\t\t\t}", "+\t\t\t\tPackageFragmentRoot root = getJarPkgFragmentRoot(jarPath, target, projects);", "+\t\t\t\tif (root != null) {", "+\t\t\t\t\treturn root;", "+\t\t\t\t}"]}], "num": 72657}