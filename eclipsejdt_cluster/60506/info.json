{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6e846d2a9e3183d4638092159238564d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a560ed9bd72696b9309c5f4eaa9c74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "4d19416746402b8fbbfd02c13772658da70a345a", "commitAfterChange": "81400db64234d6cf1ce3b6a87a8f065ac6bd072f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r private static SearchPattern createConstructorPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": "\r private static SearchPattern createConstructorPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\t\t\tsearchPattern = new ConstructorDeclarationPattern(typeNameChars, matchMode, isCaseSensitive, declaringQualificationChars, parameterTypeQualifications, parameterTypeSimpleNames);\r", "+\t\t\tsearchPattern = \r", "+\t\t\t\tnew ConstructorDeclarationPattern(\r", "+\t\t\t\t\ttypeNameChars, \r", "+\t\t\t\t\tmatchMode, \r", "+\t\t\t\t\tisCaseSensitive, \r", "+\t\t\t\t\tdeclaringQualificationChars, \r", "+\t\t\t\t\tparameterTypeQualifications, \r", "+\t\t\t\t\tparameterTypeSimpleNames);\r", "-\t\t\tsearchPattern = new ConstructorReferencePattern(typeNameChars, matchMode, isCaseSensitive, declaringQualificationChars, parameterTypeQualifications, parameterTypeSimpleNames);\r", "+\t\t\tsearchPattern = \r", "+\t\t\t\tnew ConstructorReferencePattern(\r", "+\t\t\t\t\ttypeNameChars, \r", "+\t\t\t\t\tmatchMode, \r", "+\t\t\t\t\tisCaseSensitive, \r", "+\t\t\t\t\tdeclaringQualificationChars, \r", "+\t\t\t\t\tparameterTypeQualifications, \r", "+\t\t\t\t\tparameterTypeSimpleNames,\r", "+\t\t\t\t\tnull);\r", "-\t\t\t\tnew ConstructorDeclarationPattern(typeNameChars, matchMode, isCaseSensitive, declaringQualificationChars, parameterTypeQualifications, parameterTypeSimpleNames),\r", "-\t\t\t\tnew ConstructorReferencePattern(typeNameChars, matchMode, isCaseSensitive, declaringQualificationChars, parameterTypeQualifications, parameterTypeSimpleNames));\r", "+\t\t\t\tnew ConstructorDeclarationPattern(\r", "+\t\t\t\t\ttypeNameChars, \r", "+\t\t\t\t\tmatchMode, \r", "+\t\t\t\t\tisCaseSensitive, \r", "+\t\t\t\t\tdeclaringQualificationChars, \r", "+\t\t\t\t\tparameterTypeQualifications, \r", "+\t\t\t\t\tparameterTypeSimpleNames),\r", "+\t\t\t\tnew ConstructorReferencePattern(\r", "+\t\t\t\t\ttypeNameChars, \r", "+\t\t\t\t\tmatchMode, \r", "+\t\t\t\t\tisCaseSensitive, \r", "+\t\t\t\t\tdeclaringQualificationChars, \r", "+\t\t\t\t\tparameterTypeQualifications, \r", "+\t\t\t\t\tparameterTypeSimpleNames,\r", "+\t\t\t\t\tnull));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcefdbeb85fe418d1c8d3aa53875dac8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "4d19416746402b8fbbfd02c13772658da70a345a", "commitAfterChange": "81400db64234d6cf1ce3b6a87a8f065ac6bd072f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r private static SearchPattern createMethodPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "signatureAfterChange": "\r private static SearchPattern createMethodPattern(String patternString, int limitTo, int matchMode, boolean isCaseSensitive)", "diff": ["-\t\t\tsearchPattern = new MethodDeclarationPattern(selectorChars, matchMode, isCaseSensitive, declaringTypeQualification, declaringTypeSimpleName, returnTypeQualification, returnTypeSimpleName, parameterTypeQualifications, parameterTypeSimpleNames);\r", "+\t\t\tsearchPattern = \r", "+\t\t\t\tnew MethodDeclarationPattern(\r", "+\t\t\t\t\tselectorChars, \r", "+\t\t\t\t\tmatchMode, \r", "+\t\t\t\t\tisCaseSensitive, \r", "+\t\t\t\t\tdeclaringTypeQualification, \r", "+\t\t\t\t\tdeclaringTypeSimpleName, \r", "+\t\t\t\t\treturnTypeQualification, \r", "+\t\t\t\t\treturnTypeSimpleName, \r", "+\t\t\t\t\tparameterTypeQualifications, \r", "+\t\t\t\t\tparameterTypeSimpleNames);\r", "-\t\t\tsearchPattern = new MethodReferencePattern(selectorChars, matchMode, isCaseSensitive, declaringTypeQualification, declaringTypeSimpleName, returnTypeQualification, returnTypeSimpleName, parameterTypeQualifications, parameterTypeSimpleNames);\r", "+\t\t\tsearchPattern = \r", "+\t\t\t\tnew MethodReferencePattern(\r", "+\t\t\t\t\tselectorChars, \r", "+\t\t\t\t\tmatchMode, \r", "+\t\t\t\t\tisCaseSensitive, \r", "+\t\t\t\t\tdeclaringTypeQualification, \r", "+\t\t\t\t\tdeclaringTypeSimpleName, \r", "+\t\t\t\t\treturnTypeQualification, \r", "+\t\t\t\t\treturnTypeSimpleName, \r", "+\t\t\t\t\tparameterTypeQualifications, \r", "+\t\t\t\t\tparameterTypeSimpleNames,\r", "+\t\t\t\t\tnull);\r", "-\t\t\t\tnew MethodDeclarationPattern(selectorChars, matchMode, isCaseSensitive, declaringTypeQualification, declaringTypeSimpleName, returnTypeQualification, returnTypeSimpleName, parameterTypeQualifications, parameterTypeSimpleNames),\r", "-\t\t\t\tnew MethodReferencePattern(selectorChars, matchMode, isCaseSensitive, declaringTypeQualification, declaringTypeSimpleName, returnTypeQualification, returnTypeSimpleName, parameterTypeQualifications, parameterTypeSimpleNames));\r", "+\t\t\t\tnew MethodDeclarationPattern(\r", "+\t\t\t\t\tselectorChars, \r", "+\t\t\t\t\tmatchMode, \r", "+\t\t\t\t\tisCaseSensitive, \r", "+\t\t\t\t\tdeclaringTypeQualification, \r", "+\t\t\t\t\tdeclaringTypeSimpleName, \r", "+\t\t\t\t\treturnTypeQualification, \r", "+\t\t\t\t\treturnTypeSimpleName, \r", "+\t\t\t\t\tparameterTypeQualifications, \r", "+\t\t\t\t\tparameterTypeSimpleNames),\r", "+\t\t\t\tnew MethodReferencePattern(\r", "+\t\t\t\t\tselectorChars, \r", "+\t\t\t\t\tmatchMode, \r", "+\t\t\t\t\tisCaseSensitive, \r", "+\t\t\t\t\tdeclaringTypeQualification, \r", "+\t\t\t\t\tdeclaringTypeSimpleName, \r", "+\t\t\t\t\treturnTypeQualification, \r", "+\t\t\t\t\treturnTypeSimpleName, \r", "+\t\t\t\t\tparameterTypeQualifications, \r", "+\t\t\t\t\tparameterTypeSimpleNames,\r", "+\t\t\t\t\tnull));\r"]}], "num": 60506}