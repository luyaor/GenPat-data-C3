{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af08e3bfd27a3836f2ad76d4d9feac39", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "466ca44a04a544c802809a7b61c1d6d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "149a16962b36e6d4b4296a40fc42d0af98ac09df", "commitAfterChange": "b42f9769f5c975cb7f06e2a89e4981d23834d622", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  protected void copyExtraResourcesBack(ClasspathMultiDirectory sourceLocation, final boolean deletedAll) throws CoreException", "signatureAfterChange": "  protected void copyExtraResourcesBack(ClasspathMultiDirectory sourceLocation, final boolean deletedAll) throws CoreException", "diff": ["-//\t\tnew IResourceProxyVisitor() {", "-//\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "-//\t\t\t\tIResource resource = null;", "-//\t\t\t\tswitch(proxy.getType()) {", "-//\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName()) || Util.isClassFileName(proxy.getName())) return false;", "-//", "-//\t\t\t\t\t\tresource = proxy.requestResource();", "-//\t\t\t\t\t\tif (javaBuilder.filterExtraResource(resource)) return false;", "-//\t\t\t\t\t\tif (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))", "-//\t\t\t\t\t\t\treturn false;", "-//", "-//\t\t\t\t\t\tIPath partialPath = resource.getFullPath().removeFirstSegments(segmentCount);", "-//\t\t\t\t\t\tIResource copiedResource = outputFolder.getFile(partialPath);", "-//\t\t\t\t\t\tif (copiedResource.exists()) {", "-//\t\t\t\t\t\t\tif (deletedAll) {", "-//\t\t\t\t\t\t\t\tcreateErrorFor(resource, Util.bind(\"build.duplicateResource\")); //$NON-NLS-1$", "-//\t\t\t\t\t\t\t\treturn false;", "-//\t\t\t\t\t\t\t}", "-//\t\t\t\t\t\t\tcopiedResource.delete(IResource.FORCE, null); // last one wins", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\tresource.copy(copiedResource.getFullPath(), IResource.FORCE, null);", "-//\t\t\t\t\t\tcopiedResource.setDerived(true);", "-//\t\t\t\t\t\treturn false;", "-//\t\t\t\t\tcase IResource.FOLDER :", "-//\t\t\t\t\t\tresource = proxy.requestResource();", "-//\t\t\t\t\t\tif (resource.equals(outputFolder)) return false;", "-//\t\t\t\t\t\tif (javaBuilder.filterExtraResource(resource)) return false;", "-//\t\t\t\t\t\tif (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))", "-//\t\t\t\t\t\t\treturn false;", "-//", "-//\t\t\t\t\t\tcreateFolder(resource.getFullPath().removeFirstSegments(segmentCount), outputFolder);", "-//\t\t\t\t}", "-//\t\t\t\treturn true;", "-//\t\t\t}", "-//\t\t}", "-\t\tnew IResourceVisitor() {", "-\t\t\tpublic boolean visit(IResource resource) throws CoreException {", "-\t\t\t\tswitch(resource.getType()) {", "+\t\tnew IResourceProxyVisitor() {", "+\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "+\t\t\t\tIResource resource = null;", "+\t\t\t\tswitch(proxy.getType()) {", "-\t\t\t\t\t\tif (Util.isJavaFileName(resource.getName()) || Util.isClassFileName(resource.getName())) return false;", "+\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName()) || Util.isClassFileName(proxy.getName())) return false;", "+", "+\t\t\t\t\t\tresource = proxy.requestResource();", "+\t\t\t\t\t\tresource = proxy.requestResource();", "-\t\t}", "+\t\t},", "+\t\tIResource.NONE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "473c8ae4bd6083bea471a59fce88e9bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "149a16962b36e6d4b4296a40fc42d0af98ac09df", "commitAfterChange": "b42f9769f5c975cb7f06e2a89e4981d23834d622", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  protected void addAllSourceFiles(final ArrayList sourceFiles) throws CoreException", "signatureAfterChange": "  protected void addAllSourceFiles(final ArrayList sourceFiles) throws CoreException", "diff": ["-// KJ : Release next week", "-//\t\t\tnew IResourceProxyVisitor() {", "-//\t\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "-//\t\t\t\t\tIResource resource = null;", "-//\t\t\t\t\tif (exclusionPatterns != null) {", "-//\t\t\t\t\t\tresource = proxy.requestResource();", "-//\t\t\t\t\t\tif (Util.isExcluded(resource, exclusionPatterns)) return false;", "-//\t\t\t\t\t}", "-//\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-//\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) {", "-//\t\t\t\t\t\t\tif (resource == null)", "-//\t\t\t\t\t\t\t\tresource = proxy.requestResource();", "-//\t\t\t\t\t\t\tsourceFiles.add(new SourceFile((IFile) resource, sourceLocation, encoding));", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t\treturn false;", "-//\t\t\t\t\t}", "-//\t\t\t\t\treturn true;", "-//\t\t\t\t}", "-//\t\t\t}", "-\t\t\tnew IResourceVisitor() {", "-\t\t\t\tpublic boolean visit(IResource resource) throws CoreException {", "-\t\t\t\t\tif (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))", "-\t\t\t\t\t\treturn false;", "-\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\tif (Util.isJavaFileName(resource.getName()))", "+\t\t\tnew IResourceProxyVisitor() {", "+\t\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "+\t\t\t\t\tIResource resource = null;", "+\t\t\t\t\tif (exclusionPatterns != null) {", "+\t\t\t\t\t\tresource = proxy.requestResource();", "+\t\t\t\t\t\tif (Util.isExcluded(resource, exclusionPatterns)) return false;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "+\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) {", "+\t\t\t\t\t\t\tif (resource == null)", "+\t\t\t\t\t\t\t\tresource = proxy.requestResource();", "+\t\t\t\t\t\t}", "-\t\t\t}", "+\t\t\t},", "+\t\t\tIResource.NONE"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a98607aff4a512d849fd5954c4d3da05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/BatchImageBuilder.java", "commitBeforeChange": "149a16962b36e6d4b4296a40fc42d0af98ac09df", "commitAfterChange": "b42f9769f5c975cb7f06e2a89e4981d23834d622", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  protected void cleanOutputFolders() throws CoreException", "signatureAfterChange": "  protected void cleanOutputFolders() throws CoreException", "diff": ["-//\t\t\t\t\tnew IResourceProxyVisitor() {", "-//\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "-//\t\t\t\t\t\t\tIResource resource = null;", "-//\t\t\t\t\t\t\tif (exclusionPatterns != null) {", "-//\t\t\t\t\t\t\t\tresource = proxy.requestResource();", "-//\t\t\t\t\t\t\t\tif (Util.isExcluded(resource, exclusionPatterns)) return false;", "-//\t\t\t\t\t\t\t}", "-//\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-//\t\t\t\t\t\t\t\tif (Util.isClassFileName(proxy.getName())) {", "-//\t\t\t\t\t\t\t\t\tif (resource == null)", "-//\t\t\t\t\t\t\t\t\t\tresource = proxy.requestResource();", "-//\t\t\t\t\t\t\t\t\tresource.delete(IResource.FORCE, null);", "-//\t\t\t\t\t\t\t\t}", "-//\t\t\t\t\t\t\t\treturn false;", "-//\t\t\t\t\t\t\t}", "-//\t\t\t\t\t\t\treturn true;", "-//\t\t\t\t\t\t}", "-//\t\t\t\t\t}", "-\t\t\t\t\tnew IResourceVisitor() {", "-\t\t\t\t\t\tpublic boolean visit(IResource resource) throws CoreException {", "-\t\t\t\t\t\t\tif (exclusionPatterns != null && Util.isExcluded(resource, exclusionPatterns))", "-\t\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\t\t\tif (Util.isClassFileName(resource.getName()))", "+\t\t\t\t\tnew IResourceProxyVisitor() {", "+\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "+\t\t\t\t\t\t\tIResource resource = null;", "+\t\t\t\t\t\t\tif (exclusionPatterns != null) {", "+\t\t\t\t\t\t\t\tresource = proxy.requestResource();", "+\t\t\t\t\t\t\t\tif (Util.isExcluded(resource, exclusionPatterns)) return false;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t\tif (Util.isClassFileName(proxy.getName())) {", "+\t\t\t\t\t\t\t\t\tif (resource == null)", "+\t\t\t\t\t\t\t\t\t\tresource = proxy.requestResource();", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t}", "+\t\t\t\t\t},", "+\t\t\t\t\tIResource.NONE"]}], "num": 2211}