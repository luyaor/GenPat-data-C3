{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dbb5ccd88ce10bc9f62483301bbfd265", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2567f3efb470e3bda250ed5c8f562715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 12, "signatureBeforeChange": " \t \tprivate APTResult runAPT( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \t \tprivate APTResult runAPT( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "diff": ["-\t\t\tfinal List<AnnotationProcessorFactory> factories,", "+\t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories,", "-\t\tfinal List<char[]> sourceForFiles = new ArrayList<char[]>();", "-\t\tfinal APTResult result = runAPT(factories, processorEnv, filesWithMissingType, sourceForFiles);", "+\t\tfinal List<ICompilationUnit> unitsForFiles = new ArrayList<ICompilationUnit>();", "+\t\tfinal APTResult result = runAPT(factories, processorEnv, filesWithMissingType, unitsForFiles, 0);", "+\t\t\tint round = 1;", "-\t\t\t\tassert numFiles == sourceForFiles.size() :", "+\t\t\t\tassert numFiles == unitsForFiles.size() :", "-\t\t\t\tfinal char[][] sources = new char[numFiles][];", "+\t\t\t\tfinal ICompilationUnit[] units = new ICompilationUnit[numFiles];", "-\t\t\t\t\tsources[i] = sourceForFiles.get(i);", "+\t\t\t\t\tunits[i] = unitsForFiles.get(i);", "-\t\t\t\t\t\tfiles, sources, processorEnv.getJavaProject() );", "+\t\t\t\t\t\tfiles, units, processorEnv.getJavaProject() );", "-\t\t\t\tsourceForFiles.clear();", "-\t\t\t\tAPTResult newResult = runAPT(factories, newEnv, filesWithMissingType, sourceForFiles);", "+\t\t\t\tunitsForFiles.clear();", "+\t\t\t\tAPTResult newResult = runAPT(factories, newEnv, filesWithMissingType, unitsForFiles, round++);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31499bb5a0a2d0bd2ca6fafca3b21cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "c87413f1c3fa777cce7cb1df06542ffdf2ba70ba", "commitAfterChange": "dbb59802bd05ea277b4706afb85d6b75d5bdff2a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate APTResult runAPT( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<char[]> sourceForFiles)", "signatureAfterChange": " \t \tprivate APTResult runAPT( \t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<ICompilationUnit> unitsForFiles, \t\t\tfinal int round)", "diff": ["-\t\t\tfinal List<AnnotationProcessorFactory> factories,", "+\t\t\tfinal Map<AnnotationProcessorFactory, FactoryPath.Attributes> factories,", "-\t\t\tfinal List<char[]> sourceForFiles) ", "+\t\t\tfinal List<ICompilationUnit> unitsForFiles,", "+\t\t\tfinal int round) ", "-\t\t\t\trunAPTInMixedMode(factories, processorEnv, filesWithMissingType, sourceForFiles);", "+\t\t\t\trunAPTInMixedMode(factories, processorEnv, filesWithMissingType, unitsForFiles, round);", "-\t\t\t\trunAPTInFileBasedMode(factories, processorEnv, filesWithMissingType, sourceForFiles);", "+\t\t\t\trunAPTInFileBasedMode(factories, processorEnv, filesWithMissingType, unitsForFiles);"]}], "num": 7718}