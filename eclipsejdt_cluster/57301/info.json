{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "159db06e79eadd444fc64662c519f866", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63692359b52dde61a2b0068743ccd1ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "72316be54b9086b28cc8ddca3e0761905b39515b", "commitAfterChange": "995fcf13bc3ad1e9b32a28fa575739b0c1b6aa41", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "\r \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes)", "signatureAfterChange": "\r \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes)", "diff": ["-\t\t// get the workspace delta, and start processing there.\r", "-\t\tIResourceDelta[] deltas = changes.getAffectedChildren();\r", "-\t\tIJavaElementDelta[] translatedDeltas = new JavaElementDelta[deltas.length];\r", "-\t\tfor (int i = 0; i < deltas.length; i++) {\r", "-\t\t\tIResourceDelta delta = deltas[i];\r", "-\t\t\tJavaModel model =\r", "-\t\t\t\tJavaModelManager.getJavaModel(delta.getResource().getWorkspace());\r", "-\t\t\tif (model != null) {\r", "-\t\t\t\tfCurrentDelta = new JavaElementDelta(model);\r", "-\t\t\t\ttraverseDelta(delta, UNKNOWN_CLASSPATH); // traverse delta\r", "-\t\t\t\ttranslatedDeltas[i] = fCurrentDelta;\r", "+\t\ttry {\r", "+\t\t\t// get the workspace delta, and start processing there.\r", "+\t\t\tIResourceDelta[] deltas = changes.getAffectedChildren();\r", "+\t\t\tIJavaElementDelta[] translatedDeltas = new JavaElementDelta[deltas.length];\r", "+\t\t\tfor (int i = 0; i < deltas.length; i++) {\r", "+\t\t\t\tIResourceDelta delta = deltas[i];\r", "+\t\t\t\tJavaModel model =\r", "+\t\t\t\t\tJavaModelManager.getJavaModel(delta.getResource().getWorkspace());\r", "+\t\t\t\tif (model != null) {\r", "+\t\t\t\t\tfCurrentDelta = new JavaElementDelta(model);\r", "+\t\t\t\t\ttraverseDelta(delta, UNKNOWN_CLASSPATH); // traverse delta\r", "+\t\t\t\t\ttranslatedDeltas[i] = fCurrentDelta;\r", "+\t\t\t\t}\r", "+\t\t\t\r", "+\t\t\t// update package fragment roots of projects that were affected\r", "+\t\t\tEnumeration elements = this.projectsToUpdate.elements();\r", "+\t\t\twhile (elements.hasMoreElements()) {\r", "+\t\t\t\tJavaProject project = (JavaProject)elements.nextElement();\r", "+\t\t\t\tproject.updatePackageFragmentRoots();\r", "+\t\t\t}\r", "+\t\r", "+\t\t\treturn filterRealDeltas(translatedDeltas);\r", "+\t\t} finally {\r", "+\t\t\tthis.projectsToUpdate = new ObjectSet();\r", "-\r", "-\t\treturn filterRealDeltas(translatedDeltas);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b135e14c4b327ee2d450c5351c2ab454", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "d2eb21aa89935901dbdadab7e4f2ef196739750b", "commitAfterChange": "32876c0bd309ef116b634cd21181153eca601c1f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public IJavaElementDelta[] processResourceDelta(IResourceDelta changes)", "signatureAfterChange": "\r \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes)", "diff": ["+\t */\r", "+\tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes) {\r", "+\r", "+\t\t// clear state\r", "+\t\tclearState();\r", "+\r", "+\t\t// get the workspace delta, and start processing there.\r", "+\t\tIResourceDelta[] deltas = changes.getAffectedChildren();\r", "+\t\tIJavaElementDelta[] translatedDeltas = new JavaElementDelta[deltas.length];\r", "+\t\tfor (int i = 0; i < deltas.length; i++) {\r", "+\t\t\tIResourceDelta delta = deltas[i];\r", "+\t\t\tJavaModel model =\r", "+\t\t\t\tJavaModelManager.getJavaModel(delta.getResource().getWorkspace());\r", "+\t\t\tif (model != null) {\r", "+\t\t\t\tfCurrentDelta = new JavaElementDelta(model);\r", "+\t\t\t\ttraverseDelta(delta, model); // traverse delta\r", "+\t\t\t\ttranslatedDeltas[i] = fCurrentDelta;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t// update classpaths\r", "+\t\tupdateClasspaths(false);\r", "+\r", "+\t\t// clear state\r", "+\t\tclearState();\r", "+\r", "+\t\treturn filterRealDeltas(translatedDeltas);\r", "+\t}\r", "- */\r", "-public IJavaElementDelta[] processResourceDelta(IResourceDelta changes) {\r", "-\t\r", "-\t// clear state\r", "-\tclearState();\r", "-\t\r", "-\t// get the workspace delta, and start processing there.\r", "-\tIResourceDelta[] deltas = changes.getAffectedChildren();\r", "-\tIJavaElementDelta[] translatedDeltas = new JavaElementDelta[deltas.length];\r", "-\tfor (int i = 0; i < deltas.length; i++) {\r", "-\t\tIResourceDelta delta = deltas[i];\r", "-\t\tJavaModel model = JavaModelManager.getJavaModel(delta.getResource().getWorkspace());\r", "-\t\tif (model != null) {\r", "-\t\t\tfCurrentDelta = new JavaElementDelta(model);\r", "-\t\t\ttraverseDelta(delta, model); // traverse delta\r", "-\t\t\ttranslatedDeltas[i] = fCurrentDelta;\r", "-\t\t}\r", "-\t}\r", "-\t// process removed roots\r", "-\tprocessRemovedRoots();\r", "-\t// update classpaths\r", "-\tupdateClasspaths(false); \r", "-\t\r", "-\t// clear state\r", "-\tclearState();\r", "-\t\r", "-\treturn filterRealDeltas(translatedDeltas);\r", "-}\r"]}], "num": 57301}