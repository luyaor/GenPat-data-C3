{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09d6fe07e899efa07766b42786f9498f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "295afa37296e2387ffe8102ff3528fe2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 287, "signatureBeforeChange": " private String parametersAsString(TypeBinding[] params, boolean makeShort)", "signatureAfterChange": " private String typesAsString(boolean isVarargs, TypeBinding[] types, boolean makeShort)", "diff": ["-private String parametersAsString(TypeBinding[] params, boolean makeShort) {", "-\tStringBuffer buffer = new StringBuffer(10);", "-\tfor (int i = 0, length = params.length; i < length; i++) {", "-\t\tif (i != 0)", "-\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "-\t\tbuffer.append(new String(makeShort ? params[i].shortReadableName() : params[i].readableName()));", "-\t}", "-\treturn buffer.toString();", "-}", "+private String typesAsString(boolean isVarargs, TypeBinding[] types, boolean makeShort) {", "+\tStringBuffer buffer = new StringBuffer(10);", "+\tfor (int i = 0, length = types.length; i < length; i++) {", "+\t\tif (i != 0)", "+\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "+\t\tTypeBinding type = types[i];", "+\t\tboolean isVarargType = isVarargs && i == length-1;", "+\t\tif (isVarargType) type = ((ArrayBinding)type).elementsType();", "+\t\tbuffer.append(new String(makeShort ? type.shortReadableName() : type.readableName()));", "+\t\tif (isVarargType) buffer.append(\"...\"); //$NON-NLS-1$", "+\t}", "+\treturn buffer.toString();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4bb3f987c07fbb1056222aa2908973c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/ExternalAnnotationUtil.java", "commitBeforeChange": "34f724a9738d7636a75842e2910c694725115548", "commitAfterChange": "9b49fc6edec0d13e82a14df97219e6ae294f74cc", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tprivate static String updateMethodReturnType(String newReturnType, String oldSignature, MergeStrategy mergeStrategy)", "signatureAfterChange": " \tpublic static String[] annotateType(String originalSignature, String annotatedType, MergeStrategy mergeStrategy)", "diff": ["-", "-\tprivate static String updateMethodReturnType(String newReturnType, String oldSignature, MergeStrategy mergeStrategy) {", "-\t\tStringBuffer buf = new StringBuffer();", "-\t\tassert oldSignature.charAt(0) == '(' : \"signature must start with '('\"; //$NON-NLS-1$", "-\t\tint close = oldSignature.indexOf(')');", "-\t\tbuf.append(oldSignature, 0, close+1);", "-\t\tupdateType(buf, oldSignature.substring(close+1).toCharArray(), newReturnType.toCharArray(), mergeStrategy);", "-\t\treturn buf.toString();", "-\t}", "+\t */", "+\tpublic static String[] annotateType(String originalSignature, String annotatedType, MergeStrategy mergeStrategy)", "+\t{", "+\t\tString[] result = new String[4]; // prefix, orig, replacement, postfix", "+\t\tStringBuffer buf;", "+\t\tresult[0] = \"\"; //$NON-NLS-1$", "+\t\tbuf = new StringBuffer();", "+\t\tresult[1] = originalSignature;", "+\t\tupdateType(buf, originalSignature.toCharArray(), annotatedType.toCharArray(), mergeStrategy);", "+\t\tresult[2] = buf.toString();", "+\t\tresult[3] = \"\"; //$NON-NLS-1$", "+\t\treturn result;", "+\t}"]}], "num": 49814}