{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6099f6720c48b781e50b3b4343297842", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1595810a2c09a67c6bd63e32ae397e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/PrefixExpression.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic String toStringExpressionNoParenthesis()", "signatureAfterChange": "  \tpublic StringBuffer printExpressionNoParenthesis(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printExpressionNoParenthesis(int indent, StringBuffer output) {", "+", "+\t\toutput.append(operatorToString()).append(' ');", "+\t\treturn lhs.printExpression(0, output); ", "+\t} ", "-", "-\tpublic String toStringExpressionNoParenthesis() {", "-", "-\t\treturn operatorToString() + \" \" + lhs.toStringExpression(); //$NON-NLS-1$", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db6137e74227e99b01903bea5707a602", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/UnaryExpression.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic String toStringExpressionNoParenthesis()", "signatureAfterChange": "  \tpublic StringBuffer printExpressionNoParenthesis(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printExpressionNoParenthesis(int indent, StringBuffer output) {", "+\t\t", "+\t\toutput.append(operatorToString()).append(' ');", "+\t\treturn this.expression.printExpression(0, output);", "+\t} ", "-\tpublic String toStringExpressionNoParenthesis() {", "-\t\t", "-\t\treturn operatorToString() + \" \" + this.expression.toStringExpression(); //$NON-NLS-1$", "-\t} "]}], "num": 46600}