{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d77866701593f1bd5f468b2f682f3bee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a1c005dfc18d8f17b024299ac6b0ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "5db1115bce054858f0e417b54c74179d7e6009d1", "commitAfterChange": "7a8c3dc423c0b39a0d91a8547c98a520bb9dee61", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate CompilationUnitDeclaration convert(ISourceType[] sourceTypes, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \tprivate CompilationUnitDeclaration convert(ISourceType[] sourceTypes, CompilationResult compilationResult) throws JavaModelException", "diff": ["-\t\tthis.unit.types = new TypeDeclaration[typeCount];", "+\t\tfinal TypeDeclaration[] types = new TypeDeclaration[typeCount];", "+\t\t/*", "+\t\t * We used a temporary types collection to prevent this.unit.types from being null during a call to", "+\t\t * convert(...) when the source is syntactically incorrect and the parser is flushing the unit's types.", "+\t\t * See https://bugs.eclipse.org/bugs/show_bug.cgi?id=97466", "+\t\t */", "-\t\t\tthis.unit.types[i] =", "-\t\t\t\tconvert((SourceType) typeInfo.getHandle(), compilationResult);", "+\t\t\ttypes[i] = convert((SourceType) typeInfo.getHandle(), compilationResult);", "+\t\tthis.unit.types = types;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a4d2f28135e93d5509f51f0893b01a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "5dcefdb7b6dc4ca118d352248744f6f6f0cfd53e", "commitAfterChange": "6568a2476b22c2b9915b48b3eb9ea4ea62f741d4", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void connectMemberTypes()", "signatureAfterChange": "  \tprivate void connectMemberTypes()", "diff": ["-\t\tif (sourceType.memberTypes != NoMemberTypes)", "-\t\t\tfor (int i = 0, size = sourceType.memberTypes.length; i < size; i++)", "-\t\t\t\t ((SourceTypeBinding) sourceType.memberTypes[i]).scope.connectTypeHierarchy();", "+\t\tReferenceBinding[] memberTypes = sourceType.memberTypes;", "+\t\tif (memberTypes != null && memberTypes != NoMemberTypes) {", "+\t\t\tfor (int i = 0, size = memberTypes.length; i < size; i++)", "+\t\t\t\t ((SourceTypeBinding) memberTypes[i]).scope.connectTypeHierarchy();", "+\t\t}"]}], "num": 3707}