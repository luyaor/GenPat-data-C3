{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d75232e28c3d63f1ed7b4e82ce51ebc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "57a83384c7e6bea1fb4841de790148e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["-\t\toptionsMap.put(OPTION_LocalVariableAttribute, (produceDebugAttributes & Vars) != 0 ? GENERATE : DO_NOT_GENERATE); ", "-\t\toptionsMap.put(OPTION_LineNumberAttribute, (produceDebugAttributes & Lines) != 0 ? GENERATE : DO_NOT_GENERATE);", "-\t\toptionsMap.put(OPTION_SourceFileAttribute, (produceDebugAttributes & Source) != 0 ? GENERATE : DO_NOT_GENERATE);", "-\t\toptionsMap.put(OPTION_PreserveUnusedLocal, preserveAllLocalVariables ? PRESERVE : OPTIMIZE_OUT);", "+\t\toptionsMap.put(OPTION_LocalVariableAttribute, (this.produceDebugAttributes & Vars) != 0 ? GENERATE : DO_NOT_GENERATE); ", "+\t\toptionsMap.put(OPTION_LineNumberAttribute, (this.produceDebugAttributes & Lines) != 0 ? GENERATE : DO_NOT_GENERATE);", "+\t\toptionsMap.put(OPTION_SourceFileAttribute, (this.produceDebugAttributes & Source) != 0 ? GENERATE : DO_NOT_GENERATE);", "+\t\toptionsMap.put(OPTION_PreserveUnusedLocal, this.preserveAllLocalVariables ? PRESERVE : OPTIMIZE_OUT);", "-\t\toptionsMap.put(OPTION_ReportDeprecationInDeprecatedCode, reportDeprecationInsideDeprecatedCode ? ENABLED : DISABLED); ", "+\t\toptionsMap.put(OPTION_ReportDeprecationInDeprecatedCode, this.reportDeprecationInsideDeprecatedCode ? ENABLED : DISABLED); ", "-\t\toptionsMap.put(OPTION_ReportMissingJavadoc, reportMissingJavadoc ? ENABLED : DISABLED); ", "+\t\toptionsMap.put(OPTION_ReportInvalidJavadocTagsVisibility, getVisibilityString(this.reportInvalidJavadocTagsVisibility));", "+\t\toptionsMap.put(OPTION_ReportInvalidJavadocTags, this.reportInvalidJavadocTags? ENABLED : DISABLED);", "+\t\toptionsMap.put(OPTION_ReportMissingJavadocTags, getSeverityString(MissingJavadocTags));", "+\t\toptionsMap.put(OPTION_ReportMissingJavadocTagsVisibility, getVisibilityString(this.reportMissingJavadocTagsVisibility));", "+\t\toptionsMap.put(OPTION_ReportMissingJavadocTagsOverriding, this.reportMissingJavadocTagsOverriding ? ENABLED : DISABLED);", "+\t\toptionsMap.put(OPTION_ReportMissingJavadocComments, getSeverityString(MissingJavadocComments));", "+\t\toptionsMap.put(OPTION_ReportMissingJavadocCommentsVisibility, getVisibilityString(this.reportMissingJavadocCommentsVisibility));", "+\t\toptionsMap.put(OPTION_ReportMissingJavadocCommentsOverriding, this.reportMissingJavadocCommentsOverriding ? ENABLED : DISABLED);", "-\t\toptionsMap.put(OPTION_Compliance, versionFromJdkLevel(complianceLevel)); ", "-\t\toptionsMap.put(OPTION_Source, versionFromJdkLevel(sourceLevel)); ", "-\t\toptionsMap.put(OPTION_TargetPlatform, versionFromJdkLevel(targetJDK)); ", "-\t\tif (defaultEncoding != null) {", "-\t\t\toptionsMap.put(OPTION_Encoding, defaultEncoding); ", "+\t\toptionsMap.put(OPTION_Compliance, versionFromJdkLevel(this.complianceLevel)); ", "+\t\toptionsMap.put(OPTION_Source, versionFromJdkLevel(this.sourceLevel)); ", "+\t\toptionsMap.put(OPTION_TargetPlatform, versionFromJdkLevel(this.targetJDK)); ", "+\t\tif (this.defaultEncoding != null) {", "+\t\t\toptionsMap.put(OPTION_Encoding, this.defaultEncoding); ", "-\t\toptionsMap.put(OPTION_ReportUnusedParameterWhenImplementingAbstract, reportUnusedParameterWhenImplementingAbstract ? ENABLED : DISABLED); ", "-\t\toptionsMap.put(OPTION_ReportUnusedParameterWhenOverridingConcrete, reportUnusedParameterWhenOverridingConcrete ? ENABLED : DISABLED); ", "-\t\toptionsMap.put(OPTION_ReportSpecialParameterHidingField, reportSpecialParameterHidingField ? ENABLED : DISABLED); ", "-\t\toptionsMap.put(OPTION_MaxProblemPerUnit, String.valueOf(maxProblemsPerUnit));", "+\t\toptionsMap.put(OPTION_ReportUnusedParameterWhenImplementingAbstract, this.reportUnusedParameterWhenImplementingAbstract ? ENABLED : DISABLED); ", "+\t\toptionsMap.put(OPTION_ReportUnusedParameterWhenOverridingConcrete, this.reportUnusedParameterWhenOverridingConcrete ? ENABLED : DISABLED); ", "+\t\toptionsMap.put(OPTION_ReportSpecialParameterHidingField, this.reportSpecialParameterHidingField ? ENABLED : DISABLED); ", "+\t\toptionsMap.put(OPTION_MaxProblemPerUnit, String.valueOf(this.maxProblemsPerUnit));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f88374da851250d00772adfb1bbbb7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "cdead094a9813fdba5ccda0ce2f9f48a99552dbc", "commitAfterChange": "3be4aa0b7d051355f329ce1003f3f4c0f7acfab2", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic String toString()", "signatureAfterChange": "  \tpublic String toString()", "diff": ["-\t\tbuf.append(\"\\n\\t- local variables debug attributes: \").append((produceDebugAttributes & Vars) != 0 ? \"ON\" : \" OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- line number debug attributes: \").append((produceDebugAttributes & Lines) != 0 ? \"ON\" : \" OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- source debug attributes: \").append((produceDebugAttributes & Source) != 0 ? \"ON\" : \" OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- preserve all local variables: \").append(preserveAllLocalVariables ? \"ON\" : \" OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- local variables debug attributes: \").append((this.produceDebugAttributes & Vars) != 0 ? \"ON\" : \" OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- line number debug attributes: \").append((this.produceDebugAttributes & Lines) != 0 ? \"ON\" : \" OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- source debug attributes: \").append((this.produceDebugAttributes & Source) != 0 ? \"ON\" : \" OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- preserve all local variables: \").append(this.preserveAllLocalVariables ? \"ON\" : \" OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- report missing javadoc: \").append(reportMissingJavadoc ? \"ENABLED\" : \"DISABLED\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- report invalid javadoc tags: \").append(this.reportInvalidJavadocTags ? ENABLED : DISABLED); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- visibility level to report invalid javadoc tags: \").append(getVisibilityString(this.reportInvalidJavadocTagsVisibility)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- missing javadoc tags: \").append(getSeverityString(MissingJavadocTags)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- visibility level to report missing javadoc tags: \").append(getVisibilityString(this.reportMissingJavadocTagsVisibility)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- report missing javadoc tags in overriding methods: \").append(this.reportMissingJavadocTagsOverriding ? ENABLED : DISABLED); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- missing javadoc comments: \").append(getSeverityString(MissingJavadocComments)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- visibility level to report missing javadoc comments: \").append(getVisibilityString(this.reportMissingJavadocCommentsVisibility)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- report missing javadoc comments in overriding methods: \").append(this.reportMissingJavadocCommentsOverriding ? ENABLED : DISABLED); //$NON-NLS-1$", "-\t\tbuf.append(\"\\n\\t- JDK compliance level: \"+ versionFromJdkLevel(complianceLevel)); //$NON-NLS-1$", "-\t\tbuf.append(\"\\n\\t- JDK source level: \"+ versionFromJdkLevel(sourceLevel)); //$NON-NLS-1$", "-\t\tbuf.append(\"\\n\\t- JDK target level: \"+ versionFromJdkLevel(targetJDK)); //$NON-NLS-1$", "-\t\tbuf.append(\"\\n\\t- private constructor access: \").append(isPrivateConstructorAccessChangingVisibility ? \"extra argument\" : \"make default access\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- verbose : \").append(verbose ? \"ON\" : \"OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- produce reference info : \").append(produceReferenceInfo ? \"ON\" : \"OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- parse literal expressions as constants : \").append(parseLiteralExpressionsAsConstants ? \"ON\" : \"OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- encoding : \").append(defaultEncoding == null ? \"<default>\" : defaultEncoding); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tbuf.append(\"\\n\\t- JDK compliance level: \"+ versionFromJdkLevel(this.complianceLevel)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- JDK source level: \"+ versionFromJdkLevel(this.sourceLevel)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- JDK target level: \"+ versionFromJdkLevel(this.targetJDK)); //$NON-NLS-1$", "+\t\tbuf.append(\"\\n\\t- private constructor access: \").append(this.isPrivateConstructorAccessChangingVisibility ? \"extra argument\" : \"make default access\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- verbose : \").append(this.verbose ? \"ON\" : \"OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- produce reference info : \").append(this.produceReferenceInfo ? \"ON\" : \"OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- parse literal expressions as constants : \").append(this.parseLiteralExpressionsAsConstants ? \"ON\" : \"OFF\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- encoding : \").append(this.defaultEncoding == null ? \"<default>\" : this.defaultEncoding); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tbuf.append(\"\\n\\t- report deprecation inside deprecated code : \").append(reportDeprecationInsideDeprecatedCode ? \"ENABLED\" : \"DISABLED\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- report unused parameter when implementing abstract method : \").append(reportUnusedParameterWhenImplementingAbstract ? \"ENABLED\" : \"DISABLED\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- report unused parameter when overriding concrete method : \").append(reportUnusedParameterWhenOverridingConcrete ? \"ENABLED\" : \"DISABLED\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "-\t\tbuf.append(\"\\n\\t- report constructor/setter parameter hiding existing field : \").append(reportSpecialParameterHidingField ? \"ENABLED\" : \"DISABLED\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- report deprecation inside deprecated code : \").append(this.reportDeprecationInsideDeprecatedCode ? \"ENABLED\" : \"DISABLED\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- report unused parameter when implementing abstract method : \").append(this.reportUnusedParameterWhenImplementingAbstract ? \"ENABLED\" : \"DISABLED\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- report unused parameter when overriding concrete method : \").append(this.reportUnusedParameterWhenOverridingConcrete ? \"ENABLED\" : \"DISABLED\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$", "+\t\tbuf.append(\"\\n\\t- report constructor/setter parameter hiding existing field : \").append(this.reportSpecialParameterHidingField ? \"ENABLED\" : \"DISABLED\"); //$NON-NLS-1$ //$NON-NLS-2$ //$NON-NLS-3$"]}], "num": 26406}