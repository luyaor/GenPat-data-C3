{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5b384b96511e9c844fc4f1c955bcfc69", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "985685b6b735b9c8a8c339368e0fa1fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic ICompilationUnit getWorkingCopy(String fileName, String source, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " \tprotected void search(String patternString, int searchFor, int limitTo, int matchRule) throws CoreException", "diff": ["-\t */", "-\tpublic ICompilationUnit getWorkingCopy(String fileName, String source, WorkingCopyOwner owner) throws JavaModelException {", "-\t\tIPath folder = new Path(fileName).removeLastSegments(1);", "-\t\ttry {", "-\t\t\tcreateFolder(folder);", "-\t\t} catch (CoreException e) {", "-\t\t\te.printStackTrace();", "-\t\t}", "-\t\tICompilationUnit workingCopy = super.getWorkingCopy(fileName, source, owner, true/*compute problems*/);", "-\t\tworkingCopy.commitWorkingCopy(true, null);\t// need to commit to index file", "-\t\treturn workingCopy;", "-\t}", "+\tprotected void search(String patternString, int searchFor, int limitTo, int matchRule) throws CoreException {", "+\t\tsearch(patternString, searchFor, limitTo, matchRule, getJavaSearchScopeBugs(), resultCollector);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f83a081990aa383a0e74dbd709d355a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic ICompilationUnit getWorkingCopy(String fileName, String source) throws JavaModelException", "signatureAfterChange": " \tprotected void search(String patternString, int searchFor, int limitTo) throws CoreException", "diff": ["-\t */", "-\tpublic ICompilationUnit getWorkingCopy(String fileName, String source) throws JavaModelException {", "-\t\tIPath folder = new Path(fileName).removeLastSegments(1);", "-\t\ttry {", "-\t\t\tcreateFolder(folder);", "-\t\t} catch (CoreException e) {", "-\t\t\te.printStackTrace();", "-\t\t}", "-\t\tICompilationUnit workingCopy = super.getWorkingCopy(fileName, source, true/*compute problems*/);", "-\t\tworkingCopy.commitWorkingCopy(true, null);\t// need to commit to index file", "-\t\treturn workingCopy;", "+\tprotected void search(String patternString, int searchFor, int limitTo) throws CoreException {", "+\t\tsearch(patternString, searchFor, limitTo, EXACT_RULE, getJavaSearchScopeBugs(), resultCollector);"]}], "num": 11347}