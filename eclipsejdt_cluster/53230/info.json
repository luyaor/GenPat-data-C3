{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "031836b604c73eae099112bcc0d7449c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ede07cfd52a87044e79cf5878d05b0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRootInfo.java", "commitBeforeChange": "97e0ecb6bbfacf59ba62aac6110decdd43ddcca2", "commitAfterChange": "7e47f9acc3454f5babc44432d7650b471f5736c6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r private Object[] computeFolderNonJavaResources(IJavaProject project, IContainer folder) throws JavaModelException", "signatureAfterChange": "\r private Object[] computeFolderNonJavaResources(IJavaProject project, IContainer folder) throws JavaModelException", "diff": ["+\t\t\t\t\t// check case of a .zip or .jar file on classpath\r", "+\t\t\t} else if (member.getType() == IResource.FOLDER) {\r", "+\t\t\t\tif (!Util.isValidFolderNameForPackage(member.getName())) {\r", "+\t\t\t\t\tif (nonJavaResources.length == nonJavaResourcesCounter) {\r", "+\t\t\t\t\t\t// resize\r", "+\t\t\t\t\t\tSystem.arraycopy(nonJavaResources, 0, (nonJavaResources = new IResource[nonJavaResourcesCounter * 2]), 0, nonJavaResourcesCounter);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tnonJavaResources[nonJavaResourcesCounter++] = member;\r", "+\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a1c26b9d82066a5ed899d2156042738", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentInfo.java", "commitBeforeChange": "97e0ecb6bbfacf59ba62aac6110decdd43ddcca2", "commitAfterChange": "7e47f9acc3454f5babc44432d7650b471f5736c6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r private Object[] computeNonJavaResources(IResource resource)", "signatureAfterChange": "\r private Object[] computeNonJavaResources(IResource resource)", "diff": ["-\t\t\tif (child.getType() != IResource.FOLDER) {\r", "+\t\t\tif (child.getType() == IResource.FILE) {\r", "+\t\t\t} else if (child.getType() == IResource.FOLDER) {\r", "+\t\t\t\tif (!Util.isValidFolderNameForPackage(child.getName())) {\r", "+\t\t\t\t\tif (nonJavaResources.length == nonJavaResourcesCounter) {\r", "+\t\t\t\t\t\t// resize\r", "+\t\t\t\t\t\tSystem.arraycopy(nonJavaResources, 0, (nonJavaResources = new IResource[nonJavaResourcesCounter * 2]), 0, nonJavaResourcesCounter);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tnonJavaResources[nonJavaResourcesCounter++] = child;\r", "+\t\t\t\t}\r"]}], "num": 53230}