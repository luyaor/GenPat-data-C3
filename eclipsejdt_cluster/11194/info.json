{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e40fd79430735f9ca745b69c4ca8035a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f635f53750627cfaa93d9ff36843c1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic IJavaElement createImportHandle(ImportReference importRef)", "signatureAfterChange": " public IJavaElement createImportHandle(ImportReference importRef)", "diff": ["-\t */", "-\tpublic IJavaElement createImportHandle(ImportReference importRef) {", "-\t\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');", "-\t\tif (importRef.onDemand) {", "-\t\t\timportName = CharOperation.concat(importName, \".*\" .toCharArray()); //$NON-NLS-1$", "-\t\t}", "-\t\tOpenable currentOpenable = this.getCurrentOpenable();", "-\t\tif (currentOpenable instanceof CompilationUnit) {", "-\t\t\treturn ((CompilationUnit)currentOpenable).getImport(", "-\t\t\t\tnew String(importName));", "-\t\t} else {", "-\t\t\ttry {", "-\t\t\t\treturn ((org.eclipse.jdt.internal.core.ClassFile)currentOpenable).getType();", "-\t\t\t\treturn null;", "+ */", "+public IJavaElement createImportHandle(ImportReference importRef) {", "+\tchar[] importName = CharOperation.concatWith(importRef.getImportName(), '.');", "+\tif (importRef.onDemand)", "+\t\timportName = CharOperation.concat(importName, \".*\" .toCharArray()); //$NON-NLS-1$", "+\tOpenable currentOpenable = this.currentPotentialMatch.openable;", "+\tif (currentOpenable instanceof CompilationUnit)", "+\t\treturn ((CompilationUnit) currentOpenable).getImport(new String(importName));", "+", "+\ttry {", "+\t\treturn ((ClassFile) currentOpenable).getType();", "+\t} catch (JavaModelException e) {", "+\t\treturn null;", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e68ab1a5dceb035b6111eec383eee31f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic IType createTypeHandle(char[] simpleTypeName)", "signatureAfterChange": " public IType createTypeHandle(char[] simpleTypeName)", "diff": ["-\t */", "-\tpublic IType createTypeHandle(char[] simpleTypeName) {", "-\t\tOpenable currentOpenable = this.getCurrentOpenable();", "-\t\tif (currentOpenable instanceof CompilationUnit) {", "-\t\t\t// creates compilation unit", "-\t\t\tCompilationUnit unit = (CompilationUnit)currentOpenable;", "-\t", "-\t\t\t// create type", "-\t\t\treturn unit.getType(new String(simpleTypeName));", "-\t\t} else {", "-\t\t\tIType type; ", "-\t\t\ttry {", "-\t\t\t\ttype = ((org.eclipse.jdt.internal.core.ClassFile)currentOpenable).getType();", "-\t\t\t} catch (JavaModelException e) {", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t\t// ensure this is a top level type (see bug 20011  Searching for Inner Classes gives bad search results)", "-\t\t\treturn PotentialMatch.getTopLevelType(type);", "-\t\t}", "+ */", "+public IType createTypeHandle(char[] simpleTypeName) {", "+\tOpenable currentOpenable = this.currentPotentialMatch.openable;", "+\tif (currentOpenable instanceof CompilationUnit)", "+\t\treturn ((CompilationUnit) currentOpenable).getType(new String(simpleTypeName));", "+", "+\ttry {", "+\t\t// ensure this is a top level type (see bug 20011  Searching for Inner Classes gives bad search results)", "+\t\treturn getTopLevelType(((ClassFile) currentOpenable).getType());", "+\t} catch (JavaModelException e) {", "+\t\treturn null;", "+\t}", "+}"]}], "num": 11194}