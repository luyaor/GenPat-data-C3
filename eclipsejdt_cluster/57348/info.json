{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cb3b56f2f094aa82d07ffb85c3d5cad1", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f265fa2e8472157c55e8ecd10a774d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic static CompilationUnitDeclaration parse(org.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, NodeSearcher nodeSearcher, Map settings, boolean statementsRecovery)", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration parse( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap settings, \t\t\tint flags)", "diff": ["-\t", "-\tpublic static CompilationUnitDeclaration parse(org.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, NodeSearcher nodeSearcher, Map settings, boolean statementsRecovery) {", "+", "+\tpublic static CompilationUnitDeclaration parse(", "+\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,", "+\t\t\tNodeSearcher nodeSearcher,", "+\t\t\tMap settings,", "+\t\t\tint flags) {", "+\t\tboolean statementsRecovery = (flags & ICompilationUnit.ENABLE_STATEMENTS_RECOVERY) != 0;", "-\t\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(), ", "-\t\t\t\t\tcompilerOptions, ", "+\t\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),", "+\t\t\t\t\tcompilerOptions,", "-\t\t", "+", "-\t\t\treturn null; ", "+\t\t\treturn null;", "-\t\t", "+", "-\t\t", "+", "-\t\t\t", "+", "-\t \t\t", "+", "-\t \t\t", "+", "-\t\t\t\t} else {  \t\t\t\t\t", "+\t\t\t\t} else {", "-\t\t\t\t} \t\t\t\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59e5224e8e297b0e18cd7e22d03af9ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "commitAfterChange": "4e57894c46e6fdc6da393db7e5519e070814fd68", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration resolve( \t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\tIJavaProject javaProject, \t\tNodeSearcher nodeSearcher, \t\tMap options, \t\tWorkingCopyOwner owner, \t\tboolean statementsRecovery, \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, \t\t\tIJavaProject javaProject, \t\t\tNodeSearcher nodeSearcher, \t\t\tMap options, \t\t\tWorkingCopyOwner owner, \t\t\tint flags, \t\t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,", "-\t\tIJavaProject javaProject,", "-\t\tNodeSearcher nodeSearcher,", "-\t\tMap options,", "-\t\tWorkingCopyOwner owner,", "-\t\tboolean statementsRecovery,", "-\t\tIProgressMonitor monitor) throws JavaModelException {", "-\t", "+\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,", "+\t\t\tIJavaProject javaProject,", "+\t\t\tNodeSearcher nodeSearcher,", "+\t\t\tMap options,", "+\t\t\tWorkingCopyOwner owner,", "+\t\t\tint flags,", "+\t\t\tIProgressMonitor monitor) throws JavaModelException {", "+", "-\t\t\t\t\tgetCompilerOptions(options, statementsRecovery),", "+\t\t\t\t\tgetCompilerOptions(options, (flags & ICompilationUnit.ENABLE_STATEMENTS_RECOVERY) != 0),", "-\t\t\tunit = ", "+\t\t\tunit =", "-\t\t\t\tCompilationUnitDeclaration unitDeclaration = parse(sourceUnit, nodeSearcher, options, statementsRecovery);", "+\t\t\t\tCompilationUnitDeclaration unitDeclaration = parse(sourceUnit, nodeSearcher, options, flags);", "-\t\t\t}\t", "+\t\t\t}", "-//\t\t\t\t\tif (parsedUnit.scope != null) ", "+//\t\t\t\t\tif (parsedUnit.scope != null)"]}], "num": 57348}