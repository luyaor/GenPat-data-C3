{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "843e0a231e309434edd34f8719223cbd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53c910fe3126f14a307e3970898c8ad9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "87f39738b739a5eb0c391c4085ba8bcbd11bb72d", "commitAfterChange": "fc3bffb00c8b73bdc345493a58c6cce75160c951", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "diff": ["-\t\t// allow new List<?>[5]", "-\t\tif ((this.bits & IsAnnotationDefaultValue) == 0) { // annotation default value need only to be commensurate JLS9.7", "-\t\t\tTypeBinding leafComponentType = expectedType.leafComponentType();", "-\t\t\tif (leafComponentType.isBoundParameterizedType() || leafComponentType.isTypeVariable()) {", "-\t\t\t    scope.problemReporter().illegalGenericArray(leafComponentType, this);", "-\t\t\t}", "-\t\t}", "+\t\t\t// allow new List<?>[5]", "+\t\t\tif ((this.bits & IsAnnotationDefaultValue) == 0) { // annotation default value need only to be commensurate JLS9.7", "+\t\t\t\t// allow new List<?>[5] - only check for generic array when no initializer, since also checked inside initializer resolution", "+\t\t\t\tTypeBinding leafComponentType = expectedType.leafComponentType();", "+\t\t\t\tif (!leafComponentType.isReifiable()) {", "+\t\t\t\t    scope.problemReporter().illegalGenericArray(leafComponentType, this);", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfe6592fbaa98203a8bed0272d0a58c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "20d87d7260da51837a3bc4f2cefbc874868e947f", "commitAfterChange": "b780374be3c7661000af7572b9b8f18e78e84d97", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedTb)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedTb)", "diff": ["-\t\tTypeBinding leafComponentType = expectedTb.leafComponentType();", "-\t\tif (leafComponentType.isBoundParameterizedType() || leafComponentType.isGenericType() || leafComponentType.isTypeVariable()) {", "-\t\t    scope.problemReporter().illegalGenericArray(leafComponentType, this);", "+\t\tif ((this.bits & IsAnnotationDefaultValue) == 0) { // annotation default value need only to be commensurate JLS9.7", "+\t\t\tTypeBinding leafComponentType = expectedTb.leafComponentType();", "+\t\t\tif (leafComponentType.isBoundParameterizedType() || leafComponentType.isGenericType() || leafComponentType.isTypeVariable()) {", "+\t\t\t    scope.problemReporter().illegalGenericArray(leafComponentType, this);", "+\t\t\t}"]}], "num": 10581}