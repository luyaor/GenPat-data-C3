{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b997ae8d80c3ceba1daa23fb17318d2d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "057a932b7324e1977079f89ffd01d3b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/Factory.java", "commitBeforeChange": "bd36faa2b158581ca5bdb6f9839633c88b1043bf", "commitAfterChange": "ed3e5f1ef27e69d23edb238a5f0023fbf52ea775", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private static Object convertDOMValueToMirrorValue(Object domValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t   String name,\t \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseMirrorImpl parent, \t\t\t\t\t\t\t\t\t\t\t\t\t   DeclarationImpl decl,  \t\t\t\t\t\t\t\t\t\t\t\t\t   ProcessorEnvImpl env)", "signatureAfterChange": "     private static Object convertDOMValueToMirrorValue(Object domValue,  \t\t\t\t\t\t\t\t\t\t\t\t\t   String name,\t \t\t\t\t\t\t\t\t\t\t\t\t\t   EclipseMirrorImpl parent, \t\t\t\t\t\t\t\t\t\t\t\t\t   DeclarationImpl decl,  \t\t\t\t\t\t\t\t\t\t\t\t\t   ProcessorEnvImpl env)", "diff": ["-                    return null;\t\t\t\t", "-\t\t\t\tfinal AnnotationValue annoValue = createAnnotationValue(elements[i], name, i, parent, env);", "+                    return null;", "+", "+\t\t\t\tObject o = convertDOMValueToMirrorValue( elements[i], name, parent, decl, env );", "+\t\t\t\tassert( !( o instanceof IResolvedAnnotation ) ) : \"Unexpected return value from convertDomValueToMirrorValue! o.getClass().getName() = \" + o.getClass().getName();", "+\t\t\t\t", "+\t\t\t\tfinal AnnotationValue annoValue = createAnnotationValue(o, name, i, parent, env);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dce3439ba07c4cb06a39613c674ababa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "b04af732a3a47936a23fd763b0f1a266fe2c010f", "commitAfterChange": "675036893efc507eeb48fc7f8ec7970945121ebd", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate Set<AnnotationProcessorFactory> build(final ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \tprivate Set<AnnotationProcessorFactory> build(final BuildEnv processorEnv)", "diff": ["-\tprivate Set<AnnotationProcessorFactory> build(final ProcessorEnvImpl processorEnv)", "+\tprivate Set<AnnotationProcessorFactory> build(final BuildEnv processorEnv)", "-\t\t} catch (Throwable t) {", "+\t\t}", "+\t\tcatch (Error t) {", "+\t\t\t// Don't catch junit exceptions. This prevents one from unit", "+\t\t\t// testing a processor", "+\t\t\tif (t.getClass().getName().startsWith(\"junit.framework\")) //$NON-NLS-1$", "+\t\t\t\tthrow t;", "+\t\t\tAptPlugin.log(t, \"Unexpected failure running APT on the file(s): \" + getFileNamesForPrinting(processorEnv)); //$NON-NLS-1$", "+\t\t} ", "+\t\tcatch (Throwable t) {"]}], "num": 57847}