{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "74d6669e62b5a2c9a02578e20fbb1915", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376b4b3c636ac071ff1f83fd1eb33b72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/MethodInfoWithParameterAnnotations.java", "commitBeforeChange": "cf8dccca7e26bf94e36e8f031d2a4ef316542d45", "commitAfterChange": "ce73e795e17fb13da77192ae5025c50ccc7665fe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  MethodInfoWithParameterAnnotations(MethodInfo methodInfo, AnnotationInfo[] annotations, AnnotationInfo[][] parameterAnnotations)", "signatureAfterChange": "  MethodInfoWithParameterAnnotations(MethodInfo methodInfo, AnnotationInfo[] annotations, AnnotationInfo[][] parameterAnnotations)", "diff": ["-\tthis.parameterAnnotations = parameterAnnotations;", "+\tif (methodInfo.isConstructor()) {", "+\t\tint parametersCount = Util.getParameterCount(methodInfo.getMethodDescriptor());", "+\t\tif (parameterAnnotations.length < parametersCount) {", "+\t\t\tAnnotationInfo[][] temp = new AnnotationInfo[parametersCount][];", "+\t\t\tSystem.arraycopy(parameterAnnotations, 0, temp, 1, parameterAnnotations.length);", "+\t\t\tthis.parameterAnnotations = temp;", "+\t\t} else {", "+\t\t\tthis.parameterAnnotations = parameterAnnotations;", "+\t\t}", "+\t} else {", "+\t\tthis.parameterAnnotations = parameterAnnotations;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7b28284fdfdc9ea6f1213279cc96cbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "fc25b1b826e7fad7f1da04ab9d452bc350b24919", "commitAfterChange": "19b4c669e6d8313d03dbcc8b595622002fe408a5", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " ImportBinding[] getDefaultImports()", "signatureAfterChange": " ImportBinding[] getDefaultImports()", "diff": ["-\treturn this.environment.defaultImports = new ImportBinding[] {new ImportBinding(TypeConstants.JAVA_LANG, true, importBinding, null)};", "+\tImportBinding javaLangImport = new ImportBinding(TypeConstants.JAVA_LANG, true, importBinding, null);", "+\tImportBinding[] nullAnnotationImports = this.environment.makeNullAnnotationTypeImports(); // trigger regardless of option below", "+\tif (this.environment.globalOptions.defaultImportNullAnnotationTypes) {", "+\t\tImportBinding[] allDefaultImports = new ImportBinding[nullAnnotationImports.length+1];// java.lang.* + null-annotations", "+\t\tallDefaultImports[0] = javaLangImport;", "+\t\tSystem.arraycopy(nullAnnotationImports, 0,", "+\t\t\t\t\t\t allDefaultImports, 1,", "+\t\t\t\t\t\t nullAnnotationImports.length);", "+\t\tthis.environment.defaultImports = allDefaultImports;", "+\t} else {", "+\t\tthis.environment.defaultImports = new ImportBinding[] {javaLangImport};", "+\t}", "+\treturn this.environment.defaultImports;"]}], "num": 67258}