{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f7359a264b4cd58c655140bb8e4af4c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f5125ecf621209c2f870470d4608292", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "67643a7c27a6d261feaad810d2590f1f6d33b749", "commitAfterChange": "da7a5227e034c2b6c8a4762e61c3ccf43066f02e", "methodNumberBeforeChange": 440, "methodNumberAfterChange": 445, "signatureBeforeChange": " public void testBug253896d()", "signatureAfterChange": " public void testBug253896d()", "diff": ["-\t\t\t\"Null pointer access: The variable f1 can only be null at this location\\n\" + ", "+\t\t\t\"Null pointer access: This expression of type Integer is null but requires auto-unboxing\\n\" +", "-\t\t\t\"Null pointer access: The variable f2 can only be null at this location\\n\" + ", "+\t\t\t\"Null pointer access: This expression of type Integer is null but requires auto-unboxing\\n\" +", "-\t\t\t\"Null pointer access: The variable outer can only be null at this location\\n\" + ", "+\t\t\t\"Null pointer access: This expression of type Integer is null but requires auto-unboxing\\n\" +", "-\t\t\t\"Potential null pointer access: The variable param may be null at this location\\n\" + ", "+\t\t\t\"Potential null pointer access: This expression of type Integer may be null but requires auto-unboxing\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92f5d5507b57688024cac45a35f6535f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "16d2bb22ab0669ee00790465fa843455279af5ae", "commitAfterChange": "cb2ffae6de1377c8c53c98f0144305fd03d135f4", "methodNumberBeforeChange": 300, "methodNumberAfterChange": 300, "signatureBeforeChange": " \tpublic void test296()", "signatureAfterChange": " \tpublic void test296()", "diff": ["-\t\t\t\"Type safety: B is a raw type. References to generic type B<X> should be parameterized\\n\" + ", "+\t\t\t\"B is a raw type. References to generic type B<X> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: B is a raw type. References to generic type B<X> should be parameterized\\n\" + ", "+\t\t\t\"B is a raw type. References to generic type B<X> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: B is a raw type. References to generic type B<X> should be parameterized\\n\" + ", "+\t\t\t\"B is a raw type. References to generic type B<X> should be parameterized\\n\" + ", "-\t\t\t\"Type safety: D is a raw type. References to generic type D<Y> should be parameterized\\n\" + ", "+\t\t\t\"D is a raw type. References to generic type D<Y> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9642e39a372d4d5b2396a327b30c9e0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void test042()", "signatureAfterChange": " \tpublic void test042()", "diff": ["-\t\t\t\"     1  istore_1\\n\" + ", "-\t\t\t\"     2  iload_1\\n\" + ", "+\t\t\t\"     1  istore_1 [b]\\n\" + ", "+\t\t\t\"     2  iload_1 [b]\\n\" + ", "-\t\t\t\"     6  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"     9  invokevirtual #26 <Method java/io/PrintStream.println()V>\\n\" + ", "+\t\t\t\"     6  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     9  invokevirtual java/io/PrintStream.println()V [26]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a20290ff8b086ebae772eeb4a591a401", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "2c7f17232300c7fbbf0be41f27d83e269dc11422", "commitAfterChange": "4ee7521407adee0dd67769699b7546434316be93", "methodNumberBeforeChange": 558, "methodNumberAfterChange": 558, "signatureBeforeChange": " public void testCompletionMemberType() throws JavaModelException", "signatureAfterChange": " public void testCompletionMemberType() throws JavaModelException", "diff": ["-            \"\tpublic class Y {\\n\"+", "+            \"\tpublic class MemberType {\\n\"+", "-            \"\t\t\tY var = new Y\\n\"+", "+            \"\t\t\tMemberType var = new MemberType\\n\"+", "-    String completeBehind = \"new Y\";", "+    String completeBehind = \"new MemberType\";", "-\t\t\"CompletionMemberType.Y[TYPE_REF]{Y, , LCompletionMemberType$Y;, null, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_EXACT_NAME+ R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\",", "+\t\t\"CompletionMemberType.MemberType[TYPE_REF]{MemberType, , LCompletionMemberType$MemberType;, null, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_EXACT_NAME+ R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8991189f71b966474c0dcf36b54f1f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_4.java", "commitBeforeChange": "dbe199a0a35ed3939846015f97b0348b23531353", "commitAfterChange": "f86c66887c5e1ed3962b4b871db70881ac5621a6", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic void testBug83127h()", "signatureAfterChange": " \tpublic void testBug83127h()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d31b88a317e8af07db2cdd25b8c360d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void test002()", "signatureAfterChange": " \tpublic void test002()", "diff": ["-\t\t\t\"     0  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"     3  invokevirtual #26 <Method java/io/PrintStream.println()V>\\n\" + ", "-\t\t\t\"     6  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"     9  invokevirtual #26 <Method java/io/PrintStream.println()V>\\n\" + ", "+\t\t\t\"     0  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     3  invokevirtual java/io/PrintStream.println()V [26]\\n\" + ", "+\t\t\t\"     6  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     9  invokevirtual java/io/PrintStream.println()V [26]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7a4896213750fca9a47e30fa4e4a43b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchFineGrainTests.java", "commitBeforeChange": "e4723643d8162fae0d7ec03bc461cac8d970e8fd", "commitAfterChange": "0f3bb2f63b9bc5a0a723cb21573a9214f49a822c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testMethodRef_AllFlags() throws CoreException", "signatureAfterChange": " public void testMethodRef_AllFlags() throws CoreException", "diff": ["-\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tsuper.\ufffd|method()|\ufffd;@121] EXACT_MATCH\\n\" +", "-\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tparam.\ufffd|method()|\ufffd;@139] EXACT_MATCH\\n\" +", "-\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tthis.\ufffd|method()|\ufffd;@156] EXACT_MATCH\\n\" +", "-\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\t\ufffd|method()|\ufffd;@168] EXACT_MATCH\"", "+\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tsuper.!|method()|!;@121] EXACT_MATCH\\n\" +", "+\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tparam.!|method()|!;@139] EXACT_MATCH\\n\" +", "+\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\tthis.!|method()|!;@156] EXACT_MATCH\\n\" +", "+\t\t\"src/meth/ref/TestMethods.java void meth.ref.TestMethods.foo(Methods) [\t\t!|method()|!;@168] EXACT_MATCH\""]}], "num": 21763}