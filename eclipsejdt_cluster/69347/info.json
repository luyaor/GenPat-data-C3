{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a3129c403ff21a5d70f23df0ed8626bf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cca1c06cf9dfe9f93a98b1fc5a2f1ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SingleVariableDeclaration.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void setType(Type type)", "signatureAfterChange": "  \tpublic void setType(Type type)", "diff": ["+\t */ ", "+\tpublic void setType(Type type) {", "+\t\tif (type == null) {", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\tpreReplaceChild(this.type, type, TYPE_PROPERTY);", "+\t\tthis.type = type;", "+\t\tpostReplaceChild(this.type, type, TYPE_PROPERTY);", "-\t */ ", "-\tpublic void setType(Type type) {", "-\t\tif (type == null) {", "-\t\t\tthrow new IllegalArgumentException();", "-\t\t}", "-\t\treplaceChild(this.type, type, false);", "-\t\tthis.type = type;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec4295bf4cbd784b396f83a0aafa9836", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/EnhancedForStatement.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void setName(SimpleName variableName)", "signatureAfterChange": "  \tpublic void setParameter(SingleVariableDeclaration parameter)", "diff": ["+\tpublic void setParameter(SingleVariableDeclaration parameter) {", "+\t\tif (parameter == null) {", "+\t\tpreReplaceChild(this.parameter, parameter, PARAMETER_PROPERTY);", "+\t\tthis.parameter = parameter;", "+\t\tpostReplaceChild(this.parameter, parameter, PARAMETER_PROPERTY);", "-\t */ ", "-\tpublic void setName(SimpleName variableName) {", "-\t\tif (variableName == null) {", "-\t\t\tthrow new IllegalArgumentException();", "-\t\t}", "-\t\treplaceChild(this.variableName, variableName, false);", "-\t\tthis.variableName = variableName;", "-\t}"]}], "num": 69347}