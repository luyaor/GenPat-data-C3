{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b197aea7402eef0a9578068250b9c119", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab4774edf56abcb7a8077d5fe35d6497", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String compliance, Map options) throws CoreException, IOException", "diff": ["+\t}", "+\tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String compliance, Map options) throws CoreException, IOException {", "+\t\taddLibrary(javaProject, jarName, sourceZipName, pathAndContents, null/*no non-Java resources*/, null, null, compliance, options);", "-\t\taddLibrary(javaProject, jarName, sourceZipName, pathAndContents, null/*no non-Java resources*/, null, null, compliance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bacc9f0f07804783a037c66785e4e473", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic DiagnoseParser(Parser parser, int firstToken, int start, int end)", "signatureAfterChange": "  \tpublic DiagnoseParser(Parser parser, int firstToken, int start, int end, CompilerOptions options)", "diff": ["-\tpublic DiagnoseParser(Parser parser, int firstToken, int start, int end) {", "-\t\tthis(parser, firstToken, start, end, new int[0], new int[0], new int[0]);", "+\tpublic DiagnoseParser(Parser parser, int firstToken, int start, int end, CompilerOptions options) {", "+\t\tthis(parser, firstToken, start, end, new int[0], new int[0], new int[0], options);"]}], "num": 5023}