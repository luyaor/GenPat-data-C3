{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d5df95c7cd3b34a192f16802ecc81e19", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06ba66b8faf6022067a1be019edc8f18", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "6cb413dbd992ad73f847d7b4e14e78f1406fa2fc", "commitAfterChange": "8659b871eae5c2008485cfb120ce2c8f8ecbfe04", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void parentFileDeleted( IFile parent, IProgressMonitor monitor )  \t\tthrows CoreException", "signatureAfterChange": " \tpublic void fileDeleted(IFile f)", "diff": ["+\t */", "+\tpublic void fileDeleted(IFile f)", "+\t{", "+\t\tSet<ICompilationUnit> toDiscard = new HashSet<ICompilationUnit>();", "+\t\tSet<IFile> toDelete = new HashSet<IFile>();", "+", "+\t\tremoveFileFromMaps(f, toDiscard, toDelete);", "+", "+\t\tfor (IFile fileToDelete : toDelete) {", "+\t\t\tdeletePhysicalFile(fileToDelete);", "+\t\t}", "+\t\tfor (ICompilationUnit wcToDiscard : toDiscard) {", "+\t\t\t_CUHELPER.discardWorkingCopy(wcToDiscard);", "+\t\t}", "+", "+\t}", "-\t */", "-\tpublic void parentFileDeleted( IFile parent, IProgressMonitor monitor ) ", "-\t\tthrows CoreException", "-\t{", "-\t\tSet<IFile> generatedFiles;", "-\t\t", "-\t\tsynchronized( this )", "-\t\t{", "-\t\t\tgeneratedFiles = _parentFile2GeneratedFiles.get( parent );", "-\t\t\t// make a copy to avoid race conditions", "-\t\t\tgeneratedFiles = new HashSet<IFile>( generatedFiles );", "-\t\t}", "-\t\t\t", "-\t\tfor ( IFile generatedFile : generatedFiles )", "-\t\t\tdeleteGeneratedFile( generatedFile, parent, monitor );", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a01907a017a4727e72a678a61d7bfc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "57e6ab81c3cf39fecb76455d174c657f7c273f84", "commitAfterChange": "8c4c03ed87f5ba92a46a042a6bd51df21862c6ec", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic synchronized void parentFileDeleted( IFile parent, IProgressMonitor monitor )  \t\tthrows CoreException", "signatureAfterChange": " \tpublic void parentFileDeleted( IFile parent, IProgressMonitor monitor )  \t\tthrows CoreException", "diff": ["-\tpublic synchronized void parentFileDeleted( IFile parent, IProgressMonitor monitor ) ", "+\tpublic void parentFileDeleted( IFile parent, IProgressMonitor monitor ) ", "-\t\tSet<IFile> derivedFiles = _parentFile2GeneratedFiles.get( parent );", "+\t\tSet<IFile> generatedFiles;", "-\t\tIterator<IFile> it = derivedFiles.iterator(); ", "-\t\twhile ( it.hasNext() )", "+\t\tsynchronized( this )", "-\t\t\tIFile generatedFile = it.next();", "-\t\t\tdeleteGeneratedFile( generatedFile, parent, monitor );", "+\t\t\tgeneratedFiles = _parentFile2GeneratedFiles.get( parent );", "+\t\t\t// make a copy to avoid race conditions", "+\t\t\tgeneratedFiles = new HashSet<IFile>( generatedFiles );", "+\t\t\t", "+\t\tfor ( IFile generatedFile : generatedFiles )", "+\t\t\tdeleteGeneratedFile( generatedFile, parent, monitor );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40e32ba961a586b6e670f588d697b7d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "bfcd45867d04fefcde8c411b2c4f613fed962f2b", "commitAfterChange": "8360857ac96415dcd60ac94fbc284e7801424ade", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate Set<IFile> cleanupNoLongerGeneratedFiles( \t\t\tIFile parentFile, \t\t\tSet<IFile> lastGeneratedFiles,  \t\t\tSet<IFile> newGeneratedFiles, \t\t\tGeneratedFileManager gfm,\t\t \t\t\tProcessorEnvImpl processorEnv, \t\t\tSet<IFile> deletedFiles)", "signatureAfterChange": " \tprivate void cleanupNoLongerGeneratedFiles( \t\t\tICompilationParticipantResult parent, \t\t\tSet<IFile> lastGeneratedFiles,  \t\t\tSet<IFile> newGeneratedFiles, \t\t\tGeneratedFileManager gfm,\t\t \t\t\tProcessorEnvImpl processorEnv, \t\t\tCollection<IFile> deleted)", "diff": ["-\t// Note: only work under build mode. ", "-\tprivate Set<IFile> cleanupNoLongerGeneratedFiles(", "-\t\t\tIFile parentFile,", "+\t//       Do not call unless caller is sure this is during build phase.", "+\tprivate void cleanupNoLongerGeneratedFiles(", "+\t\t\tICompilationParticipantResult parent,", "-\t\t\tSet<IFile> deletedFiles)", "-\t{", "-\t\tif( deletedFiles == null )", "-\t\t\tdeletedFiles = new HashSet<IFile>();", "-\t\t", "+\t\t\tCollection<IFile> deleted)", "+\t{\t", "+\t\tfinal int numLastGeneratedFiles = lastGeneratedFiles.size();", "-\t\tIFile[] files = lastGeneratedFiles.toArray( new IFile[ lastGeneratedFiles.size() ] );", "+\t\tIFile[] files = lastGeneratedFiles.toArray( new IFile[ numLastGeneratedFiles ] );", "+\t\t", "+\t\t\t\tfinal IFile parentFile = parent.getFile();", "-\t\t\t\t\t\tdeletedFiles.add( f );", "+\t\t\t\t\t\tdeleted.add( f );", "-\t\treturn deletedFiles;"]}], "num": 981}