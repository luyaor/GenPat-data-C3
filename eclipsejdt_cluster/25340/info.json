{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18cd54147576c360a73d20e43abd617c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e3ce73917e469d69eaf7564d4ad15d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "cf8dccca7e26bf94e36e8f031d2a4ef316542d45", "commitAfterChange": "ce73e795e17fb13da77192ae5025c50ccc7665fe", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 46, "signatureBeforeChange": "  \tprivate void disassembleAsModifier(IParameterAnnotation parameterAnnotation, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": "  \tprivate void disassembleAsModifier(IParameterAnnotation parameterAnnotation, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["+\t\tif (parameterAnnotation == null) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f9a590051ccd9b4cdc6642b65f8f58e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "31c45831879fb9d166146101d8c06704e7b03918", "commitAfterChange": "4cbee9c4edfca3748d4063d8a7e10ad2054f1b8a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\t\tif (positions == null) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "981551ae65556ec8b455b30cf0a163cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "5fc0a896150e2bf83e1744c7e2639f528f668272", "commitAfterChange": "d5037ff9ecee16ca60b86ad580ca6b3f8e03ee6a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["+\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=107124", "+\t\t\t// contents can potentially be null if a IOException occurs while retrieving the contents", "+\t\t\tif (contents == null) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a87e50b52b2cf374692281b63bc1bb6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "c8d7e735b1fdf27bd805f7e5ae0a6eacad7e4530", "commitAfterChange": "8fed2cc02e45d0c02f4805c1a6592bef37ca778a", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " protected void setGenericCast(int index, TypeBinding someGenericCast)", "signatureAfterChange": " protected void setGenericCast(int index, TypeBinding someGenericCast)", "diff": ["+\tif (someGenericCast == null) return;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a88aedc195a9283480d3e1ec86339650", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "25d711b6378677530fb32ec4af48437daa9af8c9", "commitAfterChange": "311302a34bca17cc44584d40a0411fdbd4638263", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, ReferenceBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "signatureAfterChange": " \tpublic static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, ReferenceBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "diff": ["+\t\t\t\tif (castedExpressionType == null) return; // cannot do better"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f67b4ff4c7571cfc0150ea41ff474a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "316430f6a7a386142798774df034be0e36155d28", "commitAfterChange": "5981e91cc71ba86df42ff9d60654ccdd89adffe1", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " protected void reportMatching(Annotation[] annotations, IJavaElement enclosingElement, IJavaElement[] otherElements, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedContainer, boolean enclosesElement) throws CoreException", "signatureAfterChange": " protected void reportMatching(Annotation[] annotations, IJavaElement enclosingElement, IJavaElement[] otherElements, Binding elementBinding, MatchingNodeSet nodeSet, boolean matchedContainer, boolean enclosesElement) throws CoreException", "diff": ["+\tif (annotations == null)", "+\t\treturn;"]}], "num": 25340}