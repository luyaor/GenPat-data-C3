{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc105eb357b27df7c892f55a14656446", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0f034e61f6f0992cd2fe78ae0193dca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "6a44e0777af1a4632e0d20c0e9b92d35d2ad59f3", "commitAfterChange": "2ca339c139c0fe73a5bd2705f66592731098d347", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\t  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "\t  \tpublic void resolve(BlockScope upperScope)", "diff": ["-\t\t\t\t\t\tscope.problemReporter().wrongSequenceOfExceptionTypesError(this, i, j);", "-\t\t\t\t\t\t// cannot return - since may still proceed if unreachable code is ignored (21203)", "+\t\t\t\t\t\tscope.problemReporter().wrongSequenceOfExceptionTypesError(this, caughtExceptionTypes[i], i, argumentTypes[j]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7effafb0aee4f0bba84b5694e554b58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/InitializationFlowContext.java", "commitBeforeChange": "8a55616a15f0e12ee24162781746f45ed8c24b78", "commitAfterChange": "d7c285a09f8cde2ba05e7f838f10ce545b90c736", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r \tpublic void checkInitializerExceptions(\r \t\tBlockScope currentScope,\r \t\tFlowContext initializerContext,\r \t\tFlowInfo flowInfo)", "signatureAfterChange": "\r \r \tpublic void checkInitializerExceptions(\r \t\tBlockScope currentScope,\r \t\tFlowContext initializerContext,\r \t\tFlowInfo flowInfo)", "diff": ["-\t\t\t\tflowInfo,\r", "+\t\t\t\texceptionThrowerFlowInfos[i],\r"]}], "num": 8730}