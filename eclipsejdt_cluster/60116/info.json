{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3241b3e2ef658924f0cf27210377ec1e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b386700ecb86d501538ecf44a140e53c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 464, "methodNumberAfterChange": 464, "signatureBeforeChange": " \tpublic void test0459()", "signatureAfterChange": " \tpublic void test0459()", "diff": ["-\t\t\t\"Type safety: Unchecked invocation getById(Class<capture-of ? extends Test>, Integer) of the generic method getById(Class<T>, Integer) of type Test.Manager<C>\\n\" + ", "+\t\t\t\"Type safety: Unchecked invocation getById(Class<capture#1-of ? extends Test>, Integer) of the generic method getById(Class<T>, Integer) of type Test.Manager<C>\\n\" + ", "-\t\t\t\"Type safety: The expression of type capture-of ? extends Test needs unchecked conversion to conform to ITest<C>\\n\" + ", "-\t\t\t\"----------\\n\"\t);", "+\t\t\t\"Type safety: The expression of type capture#1-of ? extends Test needs unchecked conversion to conform to ITest<C>\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeece848cb17f8d955eafc20d393dc02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "070c89861c117098b82b25282c7c2d65a320aff5", "commitAfterChange": "b990e8e256f352022e2abad7a2d2f30c0852cd13", "methodNumberBeforeChange": 884, "methodNumberAfterChange": 884, "signatureBeforeChange": " public void test0877()", "signatureAfterChange": " public void test0877()", "diff": ["-\t\t\"Type safety: The expression of type capture-of ? extends T needs unchecked conversion to conform to Class<Object>\\n\" + ", "+\t\t\"Type safety: The expression of type capture#1-of ? extends T needs unchecked conversion to conform to Class<Object>\\n\" + ", "-\t\t\"Type safety: The expression of type capture-of ? extends Class needs unchecked conversion to conform to Class<Object>\\n\" + ", "+\t\t\"Type safety: The expression of type capture#2-of ? extends Class needs unchecked conversion to conform to Class<Object>\\n\" + "]}], "num": 60116}