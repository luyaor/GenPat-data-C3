{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4aef3ce69b5bd5df60aad66243053bf", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "742a030c176ca6cc2fda0936a1f2953d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "830277de86eee08c18b5e0da495c01b96cccdad2", "commitAfterChange": "a874c20c38675a0faf72bfd6c0cb69354f6ff3fb", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);\t\t\t\t", "+\t\t\t\tcodeStream.addDefinitelyAssignedVariables(currentScope, mergedInitStateIndex);", "-\t\t\t\tcodeStream.store(this.collectionVariable, true); ", "+\t\t\t\tcodeStream.store(this.collectionVariable, true);", "+\t\t\t\tcodeStream.addVariable(this.collectionVariable);", "+\t\t\t\t\tcodeStream.addVariable(this.maxVariable);", "+\t\t\t\t\tcodeStream.addVariable(this.indexVariable);", "+\t\t\t\tcodeStream.addVariable(this.indexVariable);", "+\t\tswitch(this.kind) {", "+\t\t\tcase ARRAY :", "+\t\t\t\tcodeStream.removeVariable(this.indexVariable);", "+\t\t\t\tcodeStream.removeVariable(this.maxVariable);", "+\t\t\t\tcodeStream.removeVariable(this.collectionVariable);", "+\t\t\t\tbreak;", "+\t\t\tcase RAW_ITERABLE :", "+\t\t\tcase GENERIC_ITERABLE :", "+\t\t\t\t// generate the condition", "+\t\t\t\tcodeStream.removeVariable(this.indexVariable);", "+\t\t\t\tbreak;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca74ebb210cba28875e8898ecfd7790", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/CompletionProposal.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic char[][] findParameterNames(IProgressMonitor monitor)", "signatureAfterChange": " \tpublic char[][] findParameterNames(IProgressMonitor monitor)", "diff": ["-\t\t\t// TODO (david) - Missing implementation", "+\t\t\t", "+\t\t\tswitch(this.completionKind) {", "+\t\t\t\tcase ANONYMOUS_CLASS_DECLARATION:", "+\t\t\t\tcase METHOD_REF:", "+\t\t\t\t\tthis.parameterNames =  this.findMethodParameterNames(", "+\t\t\t\t\t\t\tthis.declarationPackageName,", "+\t\t\t\t\t\t\tthis.declarationTypeName,", "+\t\t\t\t\t\t\tthis.name,", "+\t\t\t\t\t\t\tthis.parameterPackageNames,", "+\t\t\t\t\t\t\tthis.parameterTypeNames);", "+\t\t\t\t\t//this.parameterNames = this.findMethodParameterNames(", "+\t\t\t\t\t//\t\tthis.declarationSignature,", "+\t\t\t\t\t//\t\tthis.name,", "+\t\t\t\t\t//\t\tSignature.getParameterTypes(this.getSignature()));", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase METHOD_DECLARATION:", "+\t\t\t\t\tthis.parameterNames =  this.findMethodParameterNames(", "+\t\t\t\t\t\t\tthis.declarationPackageName,", "+\t\t\t\t\t\t\tthis.declarationTypeName,", "+\t\t\t\t\t\t\tthis.name,", "+\t\t\t\t\t\t\tthis.parameterPackageNames,", "+\t\t\t\t\t\t\tthis.parameterTypeNames);", "+\t\t\t\t\t//char[][] parameterTypes = Signature.getParameterTypes(this.getSignature();", "+\t\t\t\t\t///this.parameterNames = this.findMethodParameterNames(", "+\t\t\t\t\t//\t\tthis.declarationSignature,", "+\t\t\t\t\t//\t\tthis.name,", "+\t\t\t\t\t//\t\tparameterTypes);", "+\t\t\t\t\tif(this.parameterNames != null) {", "+\t\t\t\t\t\tthis.updateCompletion = true;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t}\t\t\t"]}], "num": 7757}