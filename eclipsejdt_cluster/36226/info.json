{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "004830274d3d1d92ca8240f54c011c5d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4612c5dcaeb8ef9819d7df19aaec796f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "f2d453b40b80a7b4342f872cb4a2ceb30cb26035", "commitAfterChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "methodNumberBeforeChange": 91, "methodNumberAfterChange": 94, "signatureBeforeChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "signatureAfterChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "diff": ["+\t\t\t\t\t\t\t\tfor (int j = typesFound.size; --j >= 0;) {", "+\t\t\t\t\t\t\t\t\tReferenceBinding otherType = (ReferenceBinding) typesFound.elementAt(j);", "+", "+\t\t\t\t\t\t\t\t\tif (localType == otherType)", "+\t\t\t\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c26883e7a33ee38d86a3b84c53c61fc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c374466b639cefc117e60812e1d9f16701d104ca", "commitAfterChange": "788c169eda00b669155eb0f9164eec17e1ef661d", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tprivate void findTypesAndPackages(char[] token, Scope scope, ObjectVector typesFound)", "signatureAfterChange": " \tprivate void findTypesAndPackages(char[] token, Scope scope, ObjectVector typesFound)", "diff": ["-\t\t\tfor (int i = 0, length = types.length; i < length; i++) {", "+\t\t\tnext : for (int i = 0, length = types.length; i < length; i++) {", "-\t\t\t\tif(isForbidden(sourceType)) continue;", "+\t\t\t\tif(isForbidden(sourceType)) continue next;", "-\t\t\t\tif (sourceType.sourceName == CompletionParser.FAKE_TYPE_NAME) continue;", "-\t\t\t\tif (sourceType.sourceName == TypeConstants.PACKAGE_INFO_NAME) continue;", "+\t\t\t\tif (sourceType.sourceName == CompletionParser.FAKE_TYPE_NAME) continue next;", "+\t\t\t\tif (sourceType.sourceName == TypeConstants.PACKAGE_INFO_NAME) continue next;", "-\t\t\t\tif (typeLength > sourceType.sourceName.length) continue;", "+\t\t\t\tif (typeLength > sourceType.sourceName.length) continue next;", "+\t\t\t\tfor (int j = typesFound.size; --j >= 0;) {", "+\t\t\t\t\tReferenceBinding otherType = (ReferenceBinding) typesFound.elementAt(j);", "+\t", "+\t\t\t\t\tif (sourceType == otherType) continue next;", "+\t\t\t\t}", "+\t\t\t\t", "-\t\t\t\t\tif(!sourceType.isClass()) continue;", "+\t\t\t\t\tif(!sourceType.isClass()) continue next;", "-\t\t\t\t\tif(!sourceType.isInterface() && !sourceType.isAnnotationType()) continue;", "+\t\t\t\t\tif(!sourceType.isInterface() && !sourceType.isAnnotationType()) continue next;", "-\t\t\t\t\tif(!sourceType.isAnnotationType()) continue;", "+\t\t\t\t\tif(!sourceType.isAnnotationType()) continue next;"]}], "num": 36226}