{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e3eb1071b31301d532e7eb5712bd8c1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f3d94e66acf067618edc45830d159e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "fcc72e46b744ea79a152e24a7ffac0f0901b7400", "commitAfterChange": "06a3d951c7ec6b39762293a6177f305ce0f3f22c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic IVariableBinding[] getDeclaredFields()", "signatureAfterChange": " \tpublic IVariableBinding[] getDeclaredFields()", "diff": ["+\t\tif (this.fields != null) {", "+\t\t\treturn this.fields;", "+\t\t}", "-\t\t\t\tFieldBinding[] fields = referenceBinding.fields();", "-\t\t\t\tint length = fields.length;", "-\t\t\t\tIVariableBinding[] newFields = new IVariableBinding[length];", "-\t\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\t\tnewFields[i] = this.resolver.getVariableBinding(fields[i]);", "+\t\t\t\tFieldBinding[] fieldBindings = referenceBinding.fields();", "+\t\t\t\tint length = fieldBindings.length;", "+\t\t\t\tif (length != 0) {", "+\t\t\t\t\tIVariableBinding[] newFields = new IVariableBinding[length];", "+\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\tIVariableBinding variableBinding = this.resolver.getVariableBinding(fieldBindings[i]);", "+\t\t\t\t\t\tif (variableBinding == null) {", "+\t\t\t\t\t\t\treturn this.fields = NO_VARIABLE_BINDINGS;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tnewFields[i] = variableBinding;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn this.fields = newFields;", "-\t\t\t\treturn newFields;", "-\t\treturn NO_VARIABLE_BINDINGS;", "+\t\treturn this.fields = NO_VARIABLE_BINDINGS;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fe62be3ab659fa113925e4b75db4ede", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "fcc72e46b744ea79a152e24a7ffac0f0901b7400", "commitAfterChange": "06a3d951c7ec6b39762293a6177f305ce0f3f22c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic IMethodBinding[] getDeclaredMethods()", "signatureAfterChange": " \tpublic IMethodBinding[] getDeclaredMethods()", "diff": ["+\t\tif (this.methods != null) {", "+\t\t\treturn this.methods;", "+\t\t}", "-\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding[] methods = referenceBinding.methods();", "-\t\t\t\tint length = methods.length;", "-\t\t\t\tint removeSyntheticsCounter = 0;", "-\t\t\t\tIMethodBinding[] newMethods = new IMethodBinding[length];", "-\t\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding = methods[i];", "-\t\t\t\t\tif (!shouldBeRemoved(methodBinding)) { ", "-\t\t\t\t\t\tnewMethods[removeSyntheticsCounter++] = this.resolver.getMethodBinding(methodBinding);", "+\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding[] internalMethods = referenceBinding.methods();", "+\t\t\t\tint length = internalMethods.length;", "+\t\t\t\tif (length != 0) {", "+\t\t\t\t\tint removeSyntheticsCounter = 0;", "+\t\t\t\t\tIMethodBinding[] newMethods = new IMethodBinding[length];", "+\t\t\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding = internalMethods[i];", "+\t\t\t\t\t\tif (!shouldBeRemoved(methodBinding)) { ", "+\t\t\t\t\t\t\tIMethodBinding methodBinding2 = this.resolver.getMethodBinding(methodBinding);", "+\t\t\t\t\t\t\tif (methodBinding2 != null) {", "+\t\t\t\t\t\t\t\tnewMethods[removeSyntheticsCounter++] = methodBinding2;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\tif (removeSyntheticsCounter != length) {", "+\t\t\t\t\t\tSystem.arraycopy(newMethods, 0, (newMethods = new IMethodBinding[removeSyntheticsCounter]), 0, removeSyntheticsCounter);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn this.methods = newMethods;", "-\t\t\t\tif (removeSyntheticsCounter != length) {", "-\t\t\t\t\tSystem.arraycopy(newMethods, 0, (newMethods = new IMethodBinding[removeSyntheticsCounter]), 0, removeSyntheticsCounter);", "-\t\t\t\t}", "-\t\t\t\treturn newMethods;", "-\t\treturn NO_METHOD_BINDINGS;", "+\t\treturn this.methods = NO_METHOD_BINDINGS;"]}], "num": 50827}