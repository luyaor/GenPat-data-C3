{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6c918e790fd294ae23804495c821b5dd", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1514556c46049c7a8671c74effb5af44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 53, "signatureBeforeChange": " public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope)", "signatureAfterChange": "  public boolean isFunctionalType()", "diff": ["- */", "-public TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope) {", "-\treturn this.resolvedType; // subclasses may choose to do real stuff here", "-}", "+", "+public boolean isFunctionalType() {", "+\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76c4bd93c732caf025051da7aef9b063", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope)", "signatureAfterChange": "  \t@Override \tpublic boolean isFunctionalType()", "diff": ["+\t@Override", "+\tpublic boolean isFunctionalType() {", "+\t\treturn true;", "+\t}", "-", "-\tpublic TypeBinding checkAgainstFinalTargetType(TypeBinding targetType, Scope scope) {", "-\t\ttargetType = targetType.uncapture(this.enclosingScope);", "-\t\treturn resolveTypeExpecting(this.enclosingScope, targetType);"]}], "num": 55333}