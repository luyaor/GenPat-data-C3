{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b3f525bc117541a256d881d35e80577", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40768983860ae24b35d6fd58756fbc64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "commitAfterChange": "c3fe3a5d67fbf0c540d6fc63f233f6806516af9c", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic void test021()", "signatureAfterChange": "  \tpublic void test021()", "diff": ["-\t\t\t\t\"\tvoid foo(java.util.Map<String, Class<?>> m) { } \\n\" + ", "+\t\t\t\t\"\t@Override void foo(java.util.Map<String, Class<?>> m) { } \\n\" + ", "-\t\t\t\"\tvoid foo(java.util.Map<String, Class<?>> m) { } \\r\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"\t@Override void foo(java.util.Map<String, Class<?>> m) { } \\r\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"\tvoid foo(java.util.Map<String, Class<?>> m) { } \\n\" + ", "+\t\t\t\t\"\t@Override void foo(java.util.Map<String, Class<?>> m) { } \\n\" + ", "-\t\t\t\"\tvoid foo(java.util.Map<String, Class<?>> m) { } \\r\\n\" + ", "-\t\t\t\"\t     ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"\t@Override void foo(java.util.Map<String, Class<?>> m) { } \\r\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae183805051406a9c87413a6e131b41f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "875cc8d42787c90738d8dc077a25eb401e9e38f9", "commitAfterChange": "adfd584faf146517cb3e86f9f2b585f2851a3630", "methodNumberBeforeChange": 384, "methodNumberAfterChange": 384, "signatureBeforeChange": " \tpublic void _test382()", "signatureAfterChange": " \tpublic void test382()", "diff": ["-\tpublic void _test382() {", "+\tpublic void test382() {", "-\t\t\t\"Class must implement the inherited abstract method I.foo(Class<? extends String>)\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tclass Y { void foo(Class<String> s) {} }\\n\" + ", "-\t\t\t\"\t               ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic class X extends Y implements I {}\\n\" + ", "+\t\t\t\"\t             ^\\n\" + ", "+\t\t\t\"Class must implement the inherited abstract method I.foo(Class<? extends String>)\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tclass Y { void foo(Class<? extends String> s) {} }\\n\" + ", "-\t\t\t\"\t               ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic abstract class X extends Y implements I {}\\n\" + ", "+\t\t\t\"\t                      ^\\n\" + "]}], "num": 3981}