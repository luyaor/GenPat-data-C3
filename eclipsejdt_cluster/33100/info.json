{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "005a9c2f1d98e034fb880dfff20c2163", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e782ca997008b9c5b5eb6489152a057", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JSR308SpecSnippetTests.java", "commitBeforeChange": "7089fcfd703b096f125599a900905c00e15535fa", "commitAfterChange": "ef77db37669242a4bac152127ea8ae67d10be39c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test011() throws Exception", "signatureAfterChange": " \t \tpublic void test011() throws Exception", "diff": ["-\tpublic void test011() throws Exception { // WILL FAIL WHEN https://bugs.eclipse.org/bugs/show_bug.cgi?id=415397 IS FIXED.", "+\t", "+\tpublic void test011() throws Exception {", "-\t\t\t\t\"import java.util.List;\\n\" +", "+\t\t\t\t\"import java.util.*;\\n\" +", "+\t\t\t\t\"import java.io.*;\\n\" +", "-\t\t\t\t\"@interface Immutable {}\\n\" +", "+\t\t\t\t\"@interface Immutable { int value() default 0; }\\n\" +", "-\t\t\t\t\"\tList<@Immutable ? extends Comparable<X>> x;\\n\" +", "+\t\t\t\t\"\tList<@Immutable ? extends Comparable<X>> a;\\n\" +", "+\t\t\t\t\"\tList<? extends @Immutable Comparable<X>> b;\\n\" +", "+\t\t\t\t\"\tList<@Immutable(1) ? extends @Immutable(2) Comparable<X>> c;\\n\" +", "+\t\t\t\t\"\tMap<@Immutable(1) ? extends Comparable<X>,@Immutable(2) ? extends @Immutable(3) Serializable> d;\\n\" +", "+\t\t// javac b100", "+\t\t// Field a:", "+\t\t//   RuntimeInvisibleTypeAnnotations:", "+\t\t//    0: #9(): FIELD, location=[TYPE_ARGUMENT(0)]", "+\t\t// Field b:", "+\t\t//   RuntimeInvisibleTypeAnnotations:", "+\t\t//    0: #9(): FIELD, location=[TYPE_ARGUMENT(0), WILDCARD]", "+\t\t// Field c:", "+\t\t//   RuntimeInvisibleTypeAnnotations:", "+\t\t//    0: #9(#12=I#13): FIELD, location=[TYPE_ARGUMENT(0)]", "+\t\t//    1: #9(#12=I#14): FIELD, location=[TYPE_ARGUMENT(0), WILDCARD]", "+\t\t// Field d:", "+\t\t//   RuntimeInvisibleTypeAnnotations:", "+\t\t//    0: #9(#12=I#13): FIELD, location=[TYPE_ARGUMENT(0)]", "+\t\t//    1: #9(#12=I#14): FIELD, location=[TYPE_ARGUMENT(1)]", "+\t\t//    2: #9(#12=I#18): FIELD, location=[TYPE_ARGUMENT(1), WILDCARD]", "+\t\t\t\t\"// Compiled from X.java (version 1.8 : 52.0, super bit)\\n\" + ", "-\t\t\t\t\"    constant #5 utf8: \\\"x\\\"\\n\" + ", "+\t\t\t\t\"    constant #5 utf8: \\\"a\\\"\\n\" + ", "-\t\t\t\t\"    constant #9 utf8: \\\"<init>\\\"\\n\" + ", "-\t\t\t\t\"    constant #10 utf8: \\\"()V\\\"\\n\" + ", "-\t\t\t\t\"    constant #11 utf8: \\\"Code\\\"\\n\" + ", "-\t\t\t\t\"    constant #12 method_ref: #3.#13 java/lang/Object.<init> ()V\\n\" + ", "-\t\t\t\t\"    constant #13 name_and_type: #9.#10 <init> ()V\\n\" + ", "-\t\t\t\t\"    constant #14 utf8: \\\"LineNumberTable\\\"\\n\" + ", "-\t\t\t\t\"    constant #15 utf8: \\\"LocalVariableTable\\\"\\n\" + ", "-\t\t\t\t\"    constant #16 utf8: \\\"this\\\"\\n\" + ", "-\t\t\t\t\"    constant #17 utf8: \\\"LX;\\\"\\n\" + ", "-\t\t\t\t\"    constant #18 utf8: \\\"SourceFile\\\"\\n\" + ", "-\t\t\t\t\"    constant #19 utf8: \\\"X.java\\\"\\n\" + ", "+\t\t\t\t\"    constant #9 utf8: \\\"RuntimeInvisibleTypeAnnotations\\\"\\n\" + ", "+\t\t\t\t\"    constant #10 utf8: \\\"LImmutable;\\\"\\n\" + ", "+\t\t\t\t\"    constant #11 utf8: \\\"b\\\"\\n\" + ", "+\t\t\t\t\"    constant #12 utf8: \\\"c\\\"\\n\" + ", "+\t\t\t\t\"    constant #13 utf8: \\\"value\\\"\\n\" + ", "+\t\t\t\t\"    constant #14 integer: 1\\n\" + ", "+\t\t\t\t\"    constant #15 integer: 2\\n\" + ", "+\t\t\t\t\"    constant #16 utf8: \\\"d\\\"\\n\" + ", "+\t\t\t\t\"    constant #17 utf8: \\\"Ljava/util/Map;\\\"\\n\" + ", "+\t\t\t\t\"    constant #18 utf8: \\\"Ljava/util/Map<+Ljava/lang/Comparable<LX;>;+Ljava/io/Serializable;>;\\\"\\n\" + ", "+\t\t\t\t\"    constant #19 integer: 3\\n\" + ", "+\t\t\t\t\"    constant #20 utf8: \\\"<init>\\\"\\n\" + ", "+\t\t\t\t\"    constant #21 utf8: \\\"()V\\\"\\n\" + ", "+\t\t\t\t\"    constant #22 utf8: \\\"Code\\\"\\n\" + ", "+\t\t\t\t\"    constant #23 method_ref: #3.#24 java/lang/Object.<init> ()V\\n\" + ", "+\t\t\t\t\"    constant #24 name_and_type: #20.#21 <init> ()V\\n\" + ", "+\t\t\t\t\"    constant #25 utf8: \\\"LineNumberTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #26 utf8: \\\"LocalVariableTable\\\"\\n\" + ", "+\t\t\t\t\"    constant #27 utf8: \\\"this\\\"\\n\" + ", "+\t\t\t\t\"    constant #28 utf8: \\\"LX;\\\"\\n\" + ", "+\t\t\t\t\"    constant #29 utf8: \\\"SourceFile\\\"\\n\" + ", "+\t\t\t\t\"    constant #30 utf8: \\\"X.java\\\"\\n\" + ", "-\t\t\t\t\"  java.util.List x;\\n\" + ", "+\t\t\t\t\"  java.util.List a;\\n\" + ", "+\t\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\t\"      #10 @Immutable(\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [TYPE_ARGUMENT(0)]\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "-\t\t\t\t\"  // Method descriptor #10 ()V\\n\" + ", "+\t\t\t\t\"  // Field descriptor #6 Ljava/util/List;\\n\" + ", "+\t\t\t\t\"  // Signature: Ljava/util/List<+Ljava/lang/Comparable<LX;>;>;\\n\" + ", "+\t\t\t\t\"  java.util.List b;\\n\" + ", "+\t\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\t\"      #10 @Immutable(\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [TYPE_ARGUMENT(0), WILDCARD]\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Field descriptor #6 Ljava/util/List;\\n\" + ", "+\t\t\t\t\"  // Signature: Ljava/util/List<+Ljava/lang/Comparable<LX;>;>;\\n\" + ", "+\t\t\t\t\"  java.util.List c;\\n\" + ", "+\t\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\t\"      #10 @Immutable(\\n\" + ", "+\t\t\t\t\"        #13 value=(int) 1 (constant type)\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [TYPE_ARGUMENT(0)]\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "+\t\t\t\t\"      #10 @Immutable(\\n\" + ", "+\t\t\t\t\"        #13 value=(int) 2 (constant type)\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [TYPE_ARGUMENT(0), WILDCARD]\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Field descriptor #17 Ljava/util/Map;\\n\" + ", "+\t\t\t\t\"  // Signature: Ljava/util/Map<+Ljava/lang/Comparable<LX;>;+Ljava/io/Serializable;>;\\n\" + ", "+\t\t\t\t\"  java.util.Map d;\\n\" + ", "+\t\t\t\t\"    RuntimeInvisibleTypeAnnotations: \\n\" + ", "+\t\t\t\t\"      #10 @Immutable(\\n\" + ", "+\t\t\t\t\"        #13 value=(int) 1 (constant type)\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [TYPE_ARGUMENT(0)]\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "+\t\t\t\t\"      #10 @Immutable(\\n\" + ", "+\t\t\t\t\"        #13 value=(int) 2 (constant type)\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [TYPE_ARGUMENT(1)]\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "+\t\t\t\t\"      #10 @Immutable(\\n\" + ", "+\t\t\t\t\"        #13 value=(int) 3 (constant type)\\n\" + ", "+\t\t\t\t\"        target type = 0x13 FIELD\\n\" + ", "+\t\t\t\t\"        location = [TYPE_ARGUMENT(1), WILDCARD]\\n\" + ", "+\t\t\t\t\"      )\\n\" + ", "+\t\t\t\t\"  \\n\" + ", "+\t\t\t\t\"  // Method descriptor #21 ()V\\n\" + ", "-\t\t\t\t\"    1  invokespecial java.lang.Object() [12]\\n\" + ", "+\t\t\t\t\"    1  invokespecial java.lang.Object() [23]\\n\" + ", "-\t\t\t\t\"        [pc: 0, line: 6]\\n\" + ", "+\t\t\t\t\"        [pc: 0, line: 7]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfae72d8a16a1c02defd0c5463a3d4fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "1fe69d52230e67687b32b072c6843ac0b930c0b8", "commitAfterChange": "6b2eaccbd1d9579997548e9877abcafa55f36650", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "   public void testCompletionCastIsParent1() throws JavaModelException", "signatureAfterChange": "   public void testCompletionCastIsParent1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionCastIsParent1.java\");", "+\tthis.workingCopies = new ICompilationUnit[1];", "+\tthis.workingCopies[0] = getWorkingCopy(", "+\t\t\"/Completion/src/CompletionCastIsParent1.java.java\",", "+\t\t\"public class CompletionCastIsParent1 {\\n\"+", "+\t\t\"\tObject zzOb;\\n\"+", "+\t\t\"\tXX00 zz00;\\n\"+", "+\t\t\"\tXX01 zz01;\\n\"+", "+\t\t\"\tXX02 zz02;\\n\"+", "+\t\t\"\tXX10 zz10;\\n\"+", "+\t\t\"\tXX11 zz11;\\n\"+", "+\t\t\"\tXX12 zz12;\\n\"+", "+\t\t\"\tXX20 zz20;\\n\"+", "+\t\t\"\tXX21 zz21;\\n\"+", "+\t\t\"\tXX22 zz22;\\n\"+", "+\t\t\"\t\\n\"+", "+\t\t\"\tObject zzObM(){}\\n\"+", "+\t\t\"\tXX00 zz00M(){}\\n\"+", "+\t\t\"\tXX01 zz01M(){}\\n\"+", "+\t\t\"\tXX02 zz02M(){}\\n\"+", "+\t\t\"\tXX10 zz10M(){}\\n\"+", "+\t\t\"\tXX11 zz11M(){}\\n\"+", "+\t\t\"\tXX12 zz12M(){}\\n\"+", "+\t\t\"\tXX20 zz20M(){}\\n\"+", "+\t\t\"\tXX21 zz21M(){}\\n\"+", "+\t\t\"\tXX22 zz22M(){}\\n\"+", "+\t\t\"\t\\n\"+", "+\t\t\"\tXX11 foo() {\\n\"+", "+\t\t\"\t\treturn (XX11)zz\\n\"+", "+\t\t\"\t}\\n\"+", "+\t\t\"}\\n\");", "-\tString str = cu.getSource();", "+\tCompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+\tString str = this.workingCopies[0].getSource();", "-\tcu.codeComplete(cursorLocation, requestor);", "+\tthis.workingCopies[0].codeComplete(cursorLocation, requestor, this.wcOwner);", "-\tassertEquals(", "-\t\t\"element:zz00    completion:zz00    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz00M    completion:zz00M()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz01    completion:zz01    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz01M    completion:zz01M()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz02    completion:zz02    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz02M    completion:zz02M()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz10    completion:zz10    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz10M    completion:zz10M()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz11    completion:zz11    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz11M    completion:zz11M()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz12    completion:zz12    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz12M    completion:zz12M()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz20    completion:zz20    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz20M    completion:zz20M()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz21    completion:zz21    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz21M    completion:zz21M()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz22    completion:zz22    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zz22M    completion:zz22M()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzOb    completion:zzOb    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzObM    completion:zzObM()    relevance:\"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+\tassertResults(", "+\t\t\t\"zz00[FIELD_REF]{zz00, LCompletionCastIsParent1;, LXX00;, zz00, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz00M[METHOD_REF]{zz00M(), LCompletionCastIsParent1;, ()LXX00;, zz00M, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz02[FIELD_REF]{zz02, LCompletionCastIsParent1;, LXX02;, zz02, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz02M[METHOD_REF]{zz02M(), LCompletionCastIsParent1;, ()LXX02;, zz02M, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz10[FIELD_REF]{zz10, LCompletionCastIsParent1;, LXX10;, zz10, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz10M[METHOD_REF]{zz10M(), LCompletionCastIsParent1;, ()LXX10;, zz10M, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz12[FIELD_REF]{zz12, LCompletionCastIsParent1;, LXX12;, zz12, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz12M[METHOD_REF]{zz12M(), LCompletionCastIsParent1;, ()LXX12;, zz12M, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz20[FIELD_REF]{zz20, LCompletionCastIsParent1;, LXX20;, zz20, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz20M[METHOD_REF]{zz20M(), LCompletionCastIsParent1;, ()LXX20;, zz20M, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz22[FIELD_REF]{zz22, LCompletionCastIsParent1;, LXX22;, zz22, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz22M[METHOD_REF]{zz22M(), LCompletionCastIsParent1;, ()LXX22;, zz22M, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz01[FIELD_REF]{zz01, LCompletionCastIsParent1;, LXX01;, zz01, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz01M[METHOD_REF]{zz01M(), LCompletionCastIsParent1;, ()LXX01;, zz01M, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz21[FIELD_REF]{zz21, LCompletionCastIsParent1;, LXX21;, zz21, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz21M[METHOD_REF]{zz21M(), LCompletionCastIsParent1;, ()LXX21;, zz21M, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zzOb[FIELD_REF]{zzOb, LCompletionCastIsParent1;, Ljava.lang.Object;, zzOb, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zzObM[METHOD_REF]{zzObM(), LCompletionCastIsParent1;, ()Ljava.lang.Object;, zzObM, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz11[FIELD_REF]{zz11, LCompletionCastIsParent1;, LXX11;, zz11, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\"+", "+\t\t\t\"zz11M[METHOD_REF]{zz11M(), LCompletionCastIsParent1;, ()LXX11;, zz11M, null, \"+(R_DEFAULT + R_RESOLVED + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\",", "+\t\t\trequestor.getResults());"]}], "num": 33100}