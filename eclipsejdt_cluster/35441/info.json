{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ccd7264f371214ad466d88ddf11d39b3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1f19b70fd943db247cf5ecb8c3feb35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/valueconversion/ValueConversionProcessor.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\t\t \t \t@SuppressWarnings(\"unused\" \tprivate void assertArrayValueTypeMatch(final String name, final Object value, final Class expectedElementType)", "signatureAfterChange": " \t \tprivate void assertArrayValueTypeMatch( \t\t\tfinal String name,  \t\t\tfinal List<AnnotationValue> actualValues,  \t\t\tfinal Class expectedElementType, \t\t\tfinal Object[] expectedValues)", "diff": ["-\t", "-\t@SuppressWarnings(\"unused\") //$NON-NLS-1$", "-\tprivate void assertArrayValueTypeMatch(final String name, final Object value, final Class expectedElementType)", "-\t\tTestCase.assertEquals(", "-\t\t\t\t\"annotation value type mismatch\",  //$NON-NLS-1$", "-\t\t\t\tList.class.getName(), ", "-\t\t\t\tvalue.getClass().getName());", "-\t\t@SuppressWarnings(\"unchecked\") //$NON-NLS-1$", "-\t\tfinal List<AnnotationValue> values = (List<AnnotationValue>)value;", "-\t\tfor( AnnotationValue av : values )", "-\t\t\tassertValueTypeMatch(name, av.getValue(), expectedElementType );", "+\t", "+\tprivate void assertArrayValueTypeMatch(", "+\t\t\tfinal String name, ", "+\t\t\tfinal List<AnnotationValue> actualValues, ", "+\t\t\tfinal Class expectedElementType,", "+\t\t\tfinal Object[] expectedValues)", "+\t{\t", "+\t\tint i=0;", "+\t\tfor( AnnotationValue av : actualValues ){", "+\t\t\tassertValueTypeMatch(name, av.getValue(), expectedElementType, expectedValues[i] );", "+\t\t\ti++;", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e104afb7b31d9335ca2cb9ff74dfdd36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/apitest/APIAnnotationProcessorFactory.java", "commitBeforeChange": "30c49b5bc6e547c53d00a168ee911b66fd1b8333", "commitAfterChange": "5b13e00811f6ebc9106e29508e7dea2c0317b22d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t \t\tpublic void process()", "signatureAfterChange": " \t\t \t\tpublic void process()", "diff": ["-\t\t\tfinal Messager msgr = _env.getMessager();", "+\t\t\t_msgr = _env.getMessager();", "+\t\t\t_types = _env.getTypeUtils();", "+\t\t\tcheckCommon();", "+\t\t\tcheckSubtypeOf();", "+\t\t\tcheckAssignableTo();", "+\t\t}", "-\t\t\t\t\t\t\t\tmsgr.printError(typeVar + \" is assignable to \" + collectionType );", "-\t\t\t\t\t\t\t\tmsgr.printError(typeVar + \" is not assignable to \" + collectionType );", "-\t\t\t\t\t\tmsgr.printError(\"Type parameter '\" + typeParam + \"' belongs to \" + owner.getClass().getName() + \" \" + owner.getSimpleName() );", "-\t\t\t\t\t\tmsgr.printError(\"Type parameter '\" + typeParam + \"' belongs to \" + owner.getClass().getName() + \" \" + owner.getSimpleName() );"]}], "num": 35441}