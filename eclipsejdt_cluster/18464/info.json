{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "86b7a4ddb018779c13c36b305401056d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84c978f7adbe1ed60b4e4d98ccc0a529", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/TypeConverter.java", "commitBeforeChange": "d2c440c4d75459a29772e576816c3ab1f42954d0", "commitAfterChange": "937789ed834184c7a38322f47917f9a78ddaed41", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,MemberTypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "signatureAfterChange": " \t \tprivate static TypeDeclaration convert(IType type, IType alreadyComputedMember,MemberTypeDeclaration alreadyComputedMemberDeclaration, CompilationResult compilationResult) throws JavaModelException", "diff": ["+\t\tboolean isInterface = type.isInterface();", "-\t\tif (neededCount != 0) { // add default constructor in first position", "+\t\tif (neededCount != 0 && !isInterface) { // add default constructor in first position", "-\t\tboolean isInterface = type.isInterface();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca17ea85dced088dfdb8e0be80482572", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "1f46f03f7f5f04f6bc966056a230ee9598644f53", "commitAfterChange": "2e03e339691d753c1881e1aa64060e3db202f70f", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tRootInfo rootInfo, \t\tOutputsInfo outputsInfo)", "signatureAfterChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tRootInfo rootInfo, \t\tOutputsInfo outputsInfo)", "diff": ["+\t\t\t\tboolean isNestedRoot = rootInfo != null && childRootInfo != null;", "-\t\t\t\t\t\t&& childRootInfo == null) { // do not treat as non-java rsc in rootInfo if nested root (childRootInfo)", "+\t\t\t\t\t\t&& !isNestedRoot) { // do not treat as non-java rsc if nested root"]}], "num": 18464}