{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89b5b30f90607d43662679b99f37f90f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bbbad52ec7ed00575c693cbe7db23b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/JavaSourceFilePrintWriter.java", "commitBeforeChange": "f18746495477338a9b83fca4f673d973bc3b28e9", "commitAfterChange": "b7c75d5af8ed9aa46f28be9d8bc08449dc25dc4e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t     public void close()", "signatureAfterChange": " \t     public void close()", "diff": ["-        try", "+    \tString contents = _sw.toString();", "+        super.close();", "+        GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager(_env.getProject());", "+        Phase phase = _env.getPhase();", "+\t", "+        if ( phase == Phase.RECONCILE )", "-            String contents = _sw.toString();", "-            super.close();", "-            GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager(_env.getProject());", "-            Phase phase = _env.getPhase();", "-\t\t", "-            if ( phase == Phase.RECONCILE )", "-            {", "-            \tICompilationUnit parentCompilationUnit = _env.getCompilationUnit();", "-                FileGenerationResult result  = gfm.generateFileDuringReconcile( ", "-                    parentCompilationUnit, _typeName, contents, parentCompilationUnit.getOwner(), null, null );", "-\t\t\t\tif ( result != null )", "-\t\t\t\t\t_env.addGeneratedFile(result.getFile(), result.isModified());", "-            }", "-            else if ( phase == Phase.BUILD)\t", "-            {", "-\t\t\t\tFileGenerationResult result = gfm.generateFileDuringBuild( _env.getFile(),  _typeName, contents, null /* progress monitor */, _charsetName );", "+        \tICompilationUnit parentCompilationUnit = _env.getCompilationUnit();", "+            FileGenerationResult result  = gfm.generateFileDuringReconcile( ", "+                parentCompilationUnit, _typeName, contents, parentCompilationUnit.getOwner(), null, null );", "+\t\t\tif ( result != null )", "+\t\t\t\t_env.addGeneratedFile(result.getFile(), result.isModified());", "+        }", "+        else if ( phase == Phase.BUILD)\t", "+        {", "+        \ttry {", "+\t\t\t\tFileGenerationResult result = gfm.generateFileDuringBuild( _env.getFile(),  _typeName, contents, null /* progress monitor */ );", "-            }", "-            else", "-            {", "-                assert false : \"Unexpected phase value: \" + phase ; //$NON-NLS-1$", "-            }", "+        \t}", "+        \tcatch (CoreException ce) {", "+        \t\tAptPlugin.log(ce, \"Failure generating file\"); //$NON-NLS-1$", "+        \t}", "-        catch ( JavaModelException jme )", "+        else", "-            // TODO:  handle this exception in a nicer way.", "-            AptPlugin.log(jme, \"Unexpected failure closing the JavaSourceFilePrintWriter\"); //$NON-NLS-1$", "-            throw new RuntimeException( jme );", "-        }", "-        catch ( CoreException ce )", "-        {", "-            // TODO:  handle this exception", "-            AptPlugin.log(ce, \"Unexpected failure closing the JavaSourceFilePrintWriter\"); //$NON-NLS-1$", "-            throw new RuntimeException( ce );", "-        }", "-        catch( UnsupportedEncodingException use )", "-        {", "-        \tAptPlugin.log(use, \"Could not encode\"); //$NON-NLS-1$", "-        \t// TODO: handle this exception", "-        \tthrow new RuntimeException( use );", "+            assert false : \"Unexpected phase value: \" + phase ; //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be3d48c3cd9b4113cea88d19bd216fce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/JavaSourceFilePrintWriter.java", "commitBeforeChange": "0106f28c24dc45effaea6c15d2fd93b3b22539d8", "commitAfterChange": "b7cb1f5ede11fb6e27dd568ceeb96e4eba267c2f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t     public void close()", "signatureAfterChange": " \t     public void close()", "diff": ["-    \tString contents = _sw.toString();", "-        super.close();", "-        GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager(_env.getProject());", "-        Phase phase = _env.getPhase();", "-\t", "-        if ( phase == Phase.RECONCILE )", "-        {", "-        \tICompilationUnit parentCompilationUnit = _env.getCompilationUnit();", "-            FileGenerationResult result  = gfm.generateFileDuringReconcile( ", "-                parentCompilationUnit, _typeName, contents, parentCompilationUnit.getOwner(), null, null );", "-\t\t\tif ( result != null )", "-\t\t\t\t_env.addGeneratedFile(result.getFile(), result.isModified());", "-        }", "-        else if ( phase == Phase.BUILD)\t", "-        {", "-        \ttry {", "-\t\t\t\tFileGenerationResult result = gfm.generateFileDuringBuild( ", "+    \t", "+    \ttry {", "+\t    \tString contents = _sw.toString();", "+\t        super.close();", "+\t        GeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager(_env.getProject());", "+\t        Phase phase = _env.getPhase();", "+\t\t", "+\t        FileGenerationResult result = null;", "+\t        if ( phase == Phase.RECONCILE )", "+\t        {", "+\t        \tICompilationUnit parentCompilationUnit = _env.getCompilationUnit();", "+\t            result  = gfm.generateFileDuringReconcile( ", "+\t                parentCompilationUnit, _typeName, contents, parentCompilationUnit.getOwner(), null, null );", "+\t        }", "+\t        else if ( phase == Phase.BUILD)\t", "+\t        {", "+\t\t\t\tresult = gfm.generateFileDuringBuild( ", "-\t\t\t\tif( result != null ){\t\t", "-\t\t\t\t\t_env.addGeneratedFile( result.getFile(), result.isModified());", "-\t\t\t\t}", "-        \t}", "-        \tcatch (CoreException ce) {", "-        \t\tAptPlugin.log(ce, \"Failure generating file\"); //$NON-NLS-1$", "-        \t}", "-        }", "-        else", "-        {", "-            assert false : \"Unexpected phase value: \" + phase ; //$NON-NLS-1$", "-        }", "+\t        }", "+\t        else", "+\t        {", "+\t            throw new IllegalStateException( \"Unexpected phase value: \" + phase ); //$NON-NLS-1$", "+\t        }", "+\t        if (result != null) {", "+\t        \t_env.addGeneratedFile(result.getFile(), result.isModified());", "+\t        \tif (result.hasSourcepathChanged()) {", "+\t        \t\t_env.setSourcePathChanged(true);", "+\t        \t}", "+\t        }", "+    \t}", "+    \tcatch (CoreException ce) {", "+    \t\tAptPlugin.log(ce, \"Unable to generate type when JavaSourceFilePrintWriter was closed\"); //$NON-NLS-1$", "+    \t}"]}], "num": 44467}