{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b0cbbc96b12f55572355c7ad438111a0", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d34f3e761dd56866431862cbb62356b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "be945f896dfe94a8d4114819ea1c2afbe987ee6b", "commitAfterChange": "f7a4fed5e12ddd792bfd11e8778f8c9b3112f624", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic boolean visit(EnumDeclaration enumDeclaration, \t\t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit(EnumDeclaration enumDeclaration, \t\t\tCompilationUnitScope scope)", "diff": ["-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tif (this.isSemiColon()) {", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t}", "-\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "-\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tif (this.isSemiColon()) {", "+\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76031155f08f2d3f7ccaa22e6755d9cc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "bd1a352505d54cd25f76f62c7552eb0840e6ce13", "commitAfterChange": "450c7e1c6101fe19b4cd64b6f6e7c00a20e4541c", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tCompilationUnitDeclaration compilationUnitDeclaration, \t\tCompilationUnitScope scope)", "diff": ["+\t\tif (isSemiColon()) {", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tthis.scribe.printNewLine();", "+\t\t}", "+\t\t\t\tif (isSemiColon()) {", "+\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\t\t\tthis.scribe.printTrailingComment();", "+\t\t\t\t\tthis.scribe.printNewLine();", "+\t\t\t\t}", "+\t\tif (isSemiColon()) {", "+\t\t\tthis.scribe.printNewLine();", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);", "+\t\t\tthis.scribe.printTrailingComment();", "+\t\t\tthis.scribe.printNewLine();", "+\t\t}"]}], "num": 19873}