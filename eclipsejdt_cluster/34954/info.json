{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0223cf1112fe89d1a5fa79d15ae5d04a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3d9c4c9f66c47b3295008731bbaa61d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  protected void finishedWith(String sourceLocation, CompilationResult result, char[] mainTypeName, ArrayList definedTypeNames, ArrayList duplicateTypeNames) throws CoreException", "signatureAfterChange": "  protected void finishedWith(String sourceLocator, CompilationResult result, char[] mainTypeName, ArrayList definedTypeNames, ArrayList duplicateTypeNames) throws CoreException", "diff": ["-", "-protected void finishedWith(String sourceLocation, CompilationResult result, char[] mainTypeName, ArrayList definedTypeNames, ArrayList duplicateTypeNames) throws CoreException {", "+protected void finishedWith(String sourceLocator, CompilationResult result, char[] mainTypeName, ArrayList definedTypeNames, ArrayList duplicateTypeNames) throws CoreException {", "-\t\tnewState.record(sourceLocation, result.qualifiedReferences, result.simpleNameReferences, mainTypeName, definedTypeNames);", "+\t\tnewState.record(sourceLocator, result.qualifiedReferences, result.simpleNameReferences, mainTypeName, definedTypeNames);", "-\tnext : for (int i = 0, dLength = duplicateTypeNames.size(); i < dLength; i++) {", "+\tnext : for (int i = 0, l = duplicateTypeNames.size(); i < l; i++) {", "-\tnewState.record(sourceLocation, qualifiedRefs, simpleRefs, mainTypeName, definedTypeNames);", "+\tnewState.record(sourceLocator, qualifiedRefs, simpleRefs, mainTypeName, definedTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e0287affc8ea6017dfa0a19dc840751f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/AbstractImageBuilder.java", "commitBeforeChange": "4e88e1625bb1c2659a2ee4ba931e466f5126f9f4", "commitAfterChange": "075da32620f3ceb13a370a8be8550de2baf091f1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r protected void finishedWith(String location, CompilationResult result, char[][] additionalTypeNames) throws CoreException", "signatureAfterChange": "\r \r protected void finishedWith(String sourceLocation, CompilationResult result, char[] mainTypeName, ArrayList definedTypeNames, ArrayList duplicateTypeNames) throws CoreException", "diff": ["-protected void finishedWith(String location, CompilationResult result, char[][] additionalTypeNames) throws CoreException {\r", "-\tnewState.record(location, result.qualifiedReferences, result.simpleNameReferences, additionalTypeNames);\r", "+\r", "+protected void finishedWith(String sourceLocation, CompilationResult result, char[] mainTypeName, ArrayList definedTypeNames, ArrayList duplicateTypeNames) throws CoreException {\r", "+\tif (duplicateTypeNames == null) {\r", "+\t\tnewState.record(sourceLocation, result.qualifiedReferences, result.simpleNameReferences, mainTypeName, definedTypeNames);\r", "+\t\treturn;\r", "+\t}\r", "+\r", "+\tchar[][][] qualifiedRefs = result.qualifiedReferences;\r", "+\tchar[][] simpleRefs = result.simpleNameReferences;\r", "+\t// for each duplicate type p1.p2.A, add the type name A (package was already added)\r", "+\tnext : for (int i = 0, dLength = duplicateTypeNames.size(); i < dLength; i++) {\r", "+\t\tchar[][] compoundName = (char[][]) duplicateTypeNames.get(i);\r", "+\t\tchar[] typeName = compoundName[compoundName.length - 1];\r", "+\t\tint sLength = simpleRefs.length;\r", "+\t\tfor (int j = 0; j < sLength; j++)\r", "+\t\t\tif (CharOperation.equals(simpleRefs[j], typeName))\r", "+\t\t\t\tcontinue next;\r", "+\t\tSystem.arraycopy(simpleRefs, 0, simpleRefs = new char[sLength + 1][], 0, sLength);\r", "+\t\tsimpleRefs[sLength] = typeName;\r", "+\t}\r", "+\tnewState.record(sourceLocation, qualifiedRefs, simpleRefs, mainTypeName, definedTypeNames);\r", "+}\r"]}], "num": 34954}