{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3915b7925da5fc3cce4d6fa4a34598d3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1db3f20228dd6a4af5aa862e2b43adbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "1bd28947ec61a68bcbaa48e5f62a38f1082dad74", "commitAfterChange": "158f15ed7305b84f608a44b2b3e60c3a50fa4c1b", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void boundCheck(Scope scope, TypeReference[] argumentReferences)", "signatureAfterChange": " \tpublic void boundCheck(Scope scope, TypeReference[] argumentReferences)", "diff": ["-\t\t\t\t    if (typeVariables[i].boundCheck(this, this.arguments[i], scope)  != TypeConstants.OK) {", "-\t\t\t\t    \thasErrors = true;", "-\t\t\t\t    \tif ((this.arguments[i].tagBits & TagBits.HasMissingType) == 0) {", "-\t\t\t\t    \t\t// do not report secondary error, if type reference already got complained against", "-\t\t\t\t\t\t\tscope.problemReporter().typeMismatchError(this.arguments[i], typeVariables[i], this.type, argumentReferences[i]);", "-\t\t\t\t    \t}", "-\t\t\t\t    }", "+\t\t\t\t    BoundCheckStatus checkStatus = typeVariables[i].boundCheck(this, this.arguments[i], scope, argumentReferences[i]);", "+\t\t\t\t    hasErrors |= checkStatus != BoundCheckStatus.OK;", "+\t\t\t    \tif (!checkStatus.isOKbyJLS() && (this.arguments[i].tagBits & TagBits.HasMissingType) == 0) {", "+\t\t\t    \t\t// do not report secondary error, if type reference already got complained against", "+\t\t\t\t\t\tscope.problemReporter().typeMismatchError(this.arguments[i], typeVariables[i], this.type, argumentReferences[i]);", "+\t\t\t    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c86239598b14294c6658ff52c7fbb88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a0126f95d5e4ccadd41d23f3e8d9ea380761fb27", "commitAfterChange": "d31e523b825ee45fafd5873978f009415c767fd1", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " void verify(SourceTypeBinding someType)", "signatureAfterChange": " void verify()", "diff": ["-void verify(SourceTypeBinding someType) {", "-\tif (someType.isAnnotationType())", "-\t\tsomeType.detectAnnotationCycle();", "+void verify() {", "+\tif (this.type.isAnnotationType())", "+\t\tthis.type.detectAnnotationCycle();", "-\tsuper.verify(someType);", "+\tsuper.verify();", "-\tfor (int i = someType.typeVariables.length; --i >= 0;) {", "-\t\tTypeVariableBinding var = someType.typeVariables[i];", "+\tfor (int i = this.type.typeVariables.length; --i >= 0;) {", "+\t\tTypeVariableBinding var = this.type.typeVariables[i];", "-\t\tcheckTypeVariableMethods(someType.scope.referenceContext.typeParameters[i]);", "+\t\tcheckTypeVariableMethods(this.type.scope.referenceContext.typeParameters[i]);"]}], "num": 613}