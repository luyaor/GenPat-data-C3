{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be955a22a4bf26d05b7eee40ebfc91f6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "793c45f18eaca3019be16abb169e6c7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \r     public SourcePosition getPosition()", "signatureAfterChange": "      public SourcePosition getPosition()", "diff": ["-\r", "-    public SourcePosition getPosition()\r", "-    {\r", "-        final CompilationUnit unit = _annotated.getCompilationUnit();\r", "-        return new SourcePositionImpl(_annoAstNode.getStartPosition(),\r", "-                                      _annoAstNode.getLength(),\r", "-                                      unit.lineNumber(_annoAstNode.getStartPosition()),\r", "-                                      _annotated);\r", "-    }\r", "+", "+    public SourcePosition getPosition()", "+    {", "+\t\tif( isFromSource() ){", "+\t\t\tfinal CompilationUnit unit = _annotated.getCompilationUnit();", "+\t\t\tfinal org.eclipse.jdt.core.dom.Annotation annotation = getAstNode();", "+\t\t\tif( annotation == null ) return null;", "+\t\t\torg.eclipse.jdt.core.dom.ASTNode astNode = annotation.getTypeName();", "+\t\t\tif( astNode == null )", "+\t\t\t\tastNode = annotation;", "+\t\t\t", "+\t\t\treturn new SourcePositionImpl(astNode.getStartPosition(),", "+\t\t\t\t\t\t\t\t\t\t  astNode.getLength(),", "+\t\t\t\t\t\t                  unit.lineNumber(astNode.getStartPosition()),", "+\t\t\t\t\t\t                  _annotated);", "+\t\t}", "+\t\treturn null;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "797b86a26840ae0e204297e42cdca749", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationValueImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \t\r     public SourcePosition getPosition()", "signatureAfterChange": " \t     public SourcePosition getPosition()", "diff": ["-\t\r", "-    public SourcePosition getPosition()\r", "-    {\t\t\r", "-        final CompilationUnit unit = _annotated.getCompilationUnit();\r", "-        return new SourcePositionImpl(_expr.getStartPosition(),\r", "-\t\t\t\t\t\t\t\t\t  _expr.getLength(),\r", "-                                      unit.lineNumber(_expr.getStartPosition()),\r", "-                                      _annotated); \r", "-    }\r", "+\t", "+    public SourcePosition getPosition()", "+    {\t\t", "+\t\tfinal MirrorKind kind = _parent.kind();", "+\t\tASTNode astNode = null;", "+\t\tswitch(kind)", "+\t\t{", "+\t\tcase ANNOTATION_MIRROR:", "+\t\t\tfinal AnnotationMirrorImpl anno = (AnnotationMirrorImpl)_parent;", "+\t\t\tastNode = anno.getASTNodeForElement(_name);", "+\t\t\tbreak;", "+\t\tcase ANNOTATION_ELEMENT:", "+\t\t\tfinal AnnotationElementDeclarationImpl element = (AnnotationElementDeclarationImpl)_parent;", "+\t\t\tastNode = element.getAstNodeForDefault();\t\t\t", "+\t\tdefault:", "+\t\t\tthrow new IllegalStateException(); // should never reach this point.", "+\t\t}", "+\t\t// did not come from source.", "+\t\tif( astNode == null )", "+\t\t\treturn null;", "+\t\tif( _index >= 0 && astNode.getNodeType() == ASTNode.ARRAY_INITIALIZER ){", "+\t\t\tfinal ArrayInitializer arrayInit = (ArrayInitializer)astNode;", "+\t\t\tfinal List exprs = arrayInit.expressions();", "+\t\t\tif (exprs != null && _index < exprs.size() )", "+\t\t\t\tastNode = (ASTNode)exprs.get(_index);\t\t\t", "+\t\t}\t\t", "+\t\tif( astNode == null ) return null;", "+\t\t", "+        final CompilationUnit unit = getCompilationUnit();", "+\t\tif( unit == null ) return null;\t\t", "+        return new SourcePositionImpl(astNode.getStartPosition(),", "+\t\t\t\t\t\t\t\t\t  astNode.getLength(),", "+                                      unit.lineNumber(astNode.getStartPosition()),", "+                                      this);", "+    }"]}], "num": 30424}