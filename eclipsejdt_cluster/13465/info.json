{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "02b37608ddddd06186cae28fc3795afb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0773406b1e8dea310fbfcc5672f54947", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "15d3e8c6150f3af77b3e0d0c7bd80bfd130fd914", "commitAfterChange": "c13b5c8fdc5b98528c9ff5d2f4f3b65852c12b48", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static String displayString(String inputString, int indent)", "signatureAfterChange": " public static String displayString(String inputString, int indent)", "diff": ["-\tboolean wasACr = false;", "-\tboolean newLine = false;", "-\t\t\twasACr = true;", "-\t\t\tnewLine = true;", "-\t\t} else if (token.equals(\"\\n\")) {", "-\t\t\tif (!wasACr) { // \\r\\n --> \\n", "-\t\t\t\tnewLine = true;", "-\t\t\t}", "-\t\t}\t", "-\t\tif (newLine) {", "-\t\t\tnewLine = false;", "+\t\t\tbuffer.append(\"\\\\r\");", "-\t\t\t\tbuffer.append(\"\\\\n\\\" + \\n\");", "+\t\t\t\ttoken = tokenizer.nextToken();", "+\t\t\t\tif (token.equals(\"\\n\")) {", "+\t\t\t\t\tbuffer.append(\"\\\\n\");", "+\t\t\t\t\tif (tokenizer.hasMoreTokens()) {", "+\t\t\t\t\t\tbuffer.append(\"\\\" + \\n\");", "+\t\t\t\t\t\tfor (int i = 0; i < indent; i++) buffer.append(\"\\t\");", "+\t\t\t\t\t\tbuffer.append(\"\\\"\");", "+\t\t\t\t\t}", "+\t\t\t\t\tcontinue;", "+\t\t\t\t} else {", "+\t\t\t\t\tbuffer.append(\"\\\" + \\n\");", "+\t\t\t\t\tfor (int i = 0; i < indent; i++) buffer.append(\"\\t\");", "+\t\t\t\t\tbuffer.append(\"\\\"\");", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tcontinue;", "+\t\t\t}", "+\t\t} else if (token.equals(\"\\n\")) {", "+\t\t\tbuffer.append(\"\\\\n\");", "+\t\t\tif (tokenizer.hasMoreTokens()) {", "+\t\t\t\tbuffer.append(\"\\\" + \\n\");", "-\t\t}", "-\t\twasACr = false;", "+\t\t}\t", "+", "-\tchar lastChar = length == 0 ? 0 : inputString.charAt(length-1);", "-\tif ((lastChar == '\\n') || (lastChar == '\\r')) buffer.append(\"\\\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d7f1f55ea14a6c199d17ce6eca115ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "12f65faa0a3b984e9751d243a3eab6e6ab078ed7", "commitAfterChange": "36d2cf066100445cbe45dd4cf851204404f7d76f", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 53, "signatureBeforeChange": "  \tprivate void printIndentationIfNecessary(StringBuffer buffer)", "signatureAfterChange": "  \tprivate void printIndentationIfNecessary(StringBuffer buffer)", "diff": ["-\t\t\t\t\t\t\tbuffer.append('\\t');", "+\t\t\t\t\t\t\tif (buffer != null) buffer.append('\\t');", "-\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\tif (buffer != null) buffer.append(' ');", "-\t\t\t\t\t\tbuffer.append('\\t');", "+\t\t\t\t\t\tif (buffer != null) buffer.append('\\t');", "-\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\tif (buffer != null) buffer.append(' ');", "-\t\t\t\t\t\t\t\tbuffer.append('\\t');", "+\t\t\t\t\t\t\t\tif (buffer != null) buffer.append('\\t');", "-\t\t\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\t\t\tif (buffer != null) buffer.append(' ');", "-\t\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\t\tif (buffer != null) buffer.append(' ');", "-\t\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\t\tif (buffer != null) buffer.append(' ');", "-\t\t\t\t\t\t\tbuffer.append('\\t');", "+\t\t\t\t\t\t\tif (buffer != null) buffer.append('\\t');", "-\t\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\t\tif (buffer != null) buffer.append(' ');", "-\t\t\t\t\t\t\tbuffer.append(' ');", "+\t\t\t\t\t\t\tif (buffer != null) buffer.append(' ');"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2fbd917626d1e27100bb66bacd1ad3ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "b56d246271c095551a3a882f52570003cc372a30", "commitAfterChange": "3000413ce5f7d2704ad6fa8d0b9095de57112c06", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic String getKey()", "signatureAfterChange": " \tpublic String getKey()", "diff": ["-\t\t\t\t\tbuffer.append(this.binding.constantPoolName());", "+\t\t\t\t\tchar[] constantPoolName = this.binding.constantPoolName();", "+\t\t\t\t\tif (constantPoolName != null) {", "+\t\t\t\t\t\tbuffer.append(constantPoolName);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tchar[] qualifiedSourceName = this.binding.qualifiedSourceName();", "+\t\t\t\t\t\tif (qualifiedSourceName != null) {", "+\t\t\t\t\t\t\tCharOperation.replace(qualifiedSourceName, '.', '$');", "+\t\t\t\t\t\t\tbuffer", "+\t\t\t\t\t\t\t\t.append(getPackage().getName())", "+\t\t\t\t\t\t\t\t.append(qualifiedSourceName);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tbuffer", "+\t\t\t\t\t\t\t\t.append(getPackage().getName())", "+\t\t\t\t\t\t\t\t.append('/')", "+\t\t\t\t\t\t\t\t.append(getName());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34d538f14d41f7f58afe7009cd91df5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingComparator.java", "commitBeforeChange": "ba605892b7742c536981dc069eae6c407586c7a0", "commitAfterChange": "f7122c369ecacb5e601292d919e91404a0d4278d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, HashSet visitedTypes)", "signatureAfterChange": " \tstatic boolean isEqual(org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding, org.eclipse.jdt.internal.compiler.lookup.TypeBinding typeBinding2, HashSet visitedTypes)", "diff": ["+\t\t\t\tchar[] constantPoolName = referenceBinding.constantPoolName();", "+\t\t\t\tchar[] constantPoolName2 = referenceBinding2.constantPoolName();", "+\t\t\t\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=116833", "+\t\t\t\tif (constantPoolName == null) {", "+\t\t\t\t\tif (constantPoolName2 != null) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (!CharOperation.equals(referenceBinding.computeUniqueKey(), referenceBinding2.computeUniqueKey())) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tif (constantPoolName2 == null) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t\tif (!CharOperation.equals(constantPoolName, constantPoolName2)) {", "+\t\t\t\t\t\treturn false;", "+\t\t\t\t\t}", "+\t\t\t\t}", "-\t\t\t\t\t&& CharOperation.equals(referenceBinding.constantPoolName(), referenceBinding2.constantPoolName())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95f74742aafc91a3197b5db766d55564", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "8cc8a8f72053465233a18dc1839a985babfbf0b3", "commitAfterChange": "0984c17adda999ca910967b884619589c0996c78", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic String getQualifiedName()", "signatureAfterChange": " \tpublic String getQualifiedName()", "diff": ["-\t\t\tStringBuffer stringBuffer = new StringBuffer();", "-\t\t\tstringBuffer", "-\t\t\t\t.append(this.binding.qualifiedPackageName())", "-\t\t\t\t.append('.')", "-\t\t\t\t.append(this.binding.qualifiedSourceName());", "-\t\t\treturn stringBuffer.toString();", "+\t\t\tPackageBinding packageBinding = this.binding.getPackage();", "+\t\t\t", "+\t\t\tif (packageBinding == null || packageBinding.compoundName == CharOperation.NO_CHAR_CHAR) {", "+\t\t\t\treturn new String(this.binding.qualifiedSourceName());", "+\t\t\t} else {", "+\t\t\t\tStringBuffer stringBuffer = new StringBuffer();", "+\t\t\t\tstringBuffer", "+\t\t\t\t\t.append(this.binding.qualifiedPackageName())", "+\t\t\t\t\t.append('.')", "+\t\t\t\t\t.append(this.binding.qualifiedSourceName());", "+\t\t\t\treturn stringBuffer.toString();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1928cb8628cae8389607e952d739039", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "4d0bf071df00d4688845a9086931e919c0d6ab82", "commitAfterChange": "0328928ec6e943d2d976356cfda47a4325798cf6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public static String displayString(String inputString, int indent)", "signatureAfterChange": " public static String displayString(String inputString, int indent)", "diff": ["-\tjava.util.StringTokenizer tokenizer = new java.util.StringTokenizer(inputString, \"\\n\\r\");", "+\tjava.util.StringTokenizer tokenizer = new java.util.StringTokenizer(inputString, \"\\n\\r\", true);", "+\tboolean wasACr = false;", "+\tboolean newLine = false;", "-\t\tif (count++ != 0) {", "+", "+\t\tString token = tokenizer.nextToken();", "+\t\tif (token.equals(\"\\r\")) {", "+\t\t\twasACr = true;", "+\t\t\tnewLine = true;", "+\t\t} else if (token.equals(\"\\n\")) {", "+\t\t\tif (!wasACr) { // \\r\\n --> \\n", "+\t\t\t\tnewLine = true;", "+\t\t\t}", "+\t\t}\t", "+\t\tif (newLine) {", "+\t\t\tnewLine = false;", "+\t\t\tcontinue;", "-\t\tString token = tokenizer.nextToken();", "+\t\twasACr = false;", "+\t\t\t\tcase '\\r' :", "+\t\t\t\t\ttokenBuffer.append(\"\\\\r\");", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase '\\n' :", "+\t\t\t\t\ttokenBuffer.append(\"\\\\n\");", "+\t\t\t\t\tbreak;", "-\t\t\t\tcase '\\n' :", "-\t\t\t\t\ttokenBuffer.append(\"\\\\n\");", "-\t\t\t\t\tbreak;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase '\\r' :", "-\t\t\t\t\ttokenBuffer.append(\"\\\\r\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b9002d77906397c3824258c4f0e639", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavadocCompletionModelTest.java", "commitBeforeChange": "8c9e171f64b2b088eda3049713163ec0a16b0a05", "commitAfterChange": "cdc11c6e72240b1766f8f5810b1fb669da307c66", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected String displayString(String toPrint, int indent)", "signatureAfterChange": " \tprotected String displayString(String toPrint, int indent)", "diff": ["-\t\t\t\t\tswitch (relevance) {", "-\t\t\t\t\t\tcase JAVADOC_RELEVANCE:", "-\t\t\t\t\t\t\tbuffer.append(\"JAVADOC_RELEVANCE+\\\"\");", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase JAVADOC_RELEVANCE+R_INLINE_TAG:", "-\t\t\t\t\t\t\tbuffer.append(\"(JAVADOC_RELEVANCE+R_INLINE_TAG)+\\\"\");", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tif (relevance >= 55) {", "-\t\t\t\t\t\t\t\tbuffer.append(\"(\"+(relevance-R_INLINE_TAG)+\"+R_INLINE_TAG)+\\\"\");", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tbuffer.append('\"');", "-\t\t\t\t\t\t\t\tbuffer.append(relevance);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\tint length = RELEVANCES.length;", "+\t\t\t\t\tboolean found = false;", "+\t\t\t\t\tfor (int r=0; !found && r<length; r++) {", "+\t\t\t\t\t\tif (RELEVANCES[r] == relevance) {", "+\t\t\t\t\t\t\tbuffer.append(RELEVANCES_NAMES[r]);", "+\t\t\t\t\t\t\tbuffer.append(\"+\\\"\");", "+\t\t\t\t\t\t\tfound = true;", "+\t\t\t\t\t\t}", "-//\t\t\t\t\tbuffer.append('}');", "+\t\t\t\t\tif (!found) {", "+\t\t\t\t\t\tbuffer.append('\"');", "+\t\t\t\t\t\tbuffer.append(relevance);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f520599b8b47458c44f932a5b9fba982", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/TypeBinding.java", "commitBeforeChange": "a1fa0960e8bf8c2d86b0b4556cf5470457cb514c", "commitAfterChange": "0ea38f06cd1227fc139bddac2eec897cb8fbed35", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void appendKey(StringBuffer buffer, boolean rawTypeOnly)", "signatureAfterChange": " \tpublic void appendKey(StringBuffer buffer, boolean rawTypeOnly)", "diff": ["-\t\t\t\tchar[] qualifiedSourceName = this.binding.qualifiedSourceName();", "-\t\t\t\tif (qualifiedSourceName != null) {", "-\t\t\t\t\tCharOperation.replace(qualifiedSourceName, '.', '$');", "-\t\t\t\t\tbuffer", "-\t\t\t\t\t\t.append(getPackage().getName())", "-\t\t\t\t\t\t.append('/')", "-\t\t\t\t\t\t.append(qualifiedSourceName);", "-\t\t\t\t} else {", "-\t\t\t\t\tbuffer", "-\t\t\t\t\t\t.append(getPackage().getName())", "-\t\t\t\t\t\t.append('/')", "-\t\t\t\t\t\t.append(getName());", "+\t\t\t\tif (!isNested()) {", "+\t\t\t\t\t// top level type", "+\t\t\t\t\tbuffer.append(getPackage().getName());", "+\t\t\t\t\tbuffer.append('/');", "-\t\t\t\tif (!rawTypeOnly) {", "+\t\t\t\tTypeBinding declaringClass = (TypeBinding) getDeclaringClass();", "+\t\t\t\tif (declaringClass != null) {", "+\t\t\t\t\tdeclaringClass.appendKey(buffer, rawTypeOnly);", "+\t\t\t\t\tbuffer.append('$');", "+\t\t\t\t}", "+\t\t\t\tbuffer.append(this.binding.sourceName());", "+\t\t\t\tif (!rawTypeOnly && !this.binding.isRawType()) {"]}], "num": 13465}