{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e05383e182c9df843ee0ca2ffb921351", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "117692dc3300884e43bcc58c71f3786e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "0e8ca24e8451f1d91ed53a269d184ea21d12301f", "commitAfterChange": "369ffd3db09511488e039ba2575df2eeea055320", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tprivate static IJavaElement determineIfOnClasspath(\r \t\tIResource resource,\r \t\tIJavaProject project)", "signatureAfterChange": "\r \tprivate static IJavaElement determineIfOnClasspath(\r \t\tIResource resource,\r \t\tIJavaProject project)", "diff": ["-\t\t\t\t\tStringBuffer pkgName = new StringBuffer(IPackageFragment.DEFAULT_PACKAGE_NAME);\r", "-\t\t\t\t\tfor (int j = 0, max = pkgPath.segmentCount(); j < max; j++) {\r", "-\t\t\t\t\t\tString segment = pkgPath.segment(j);\r", "-\t\t\t\t\t\tif (segment.indexOf('.') >= 0) {\r", "-\t\t\t\t\t\t\treturn null;\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t\tpkgName.append(segment);\r", "-\t\t\t\t\t\tif (j < pkgPath.segmentCount() - 1) {\r", "-\t\t\t\t\t\t\tpkgName.append(\".\" ); //$NON-NLS-1$\r", "-\t\t\t\t\t\t}\r", "-\t\t\t\t\t}\r", "-\t\t\t\t\tif (!JavaConventions.validatePackageName(pkgName.toString()).isOK()) {\r", "+\t\t\t\t\tString pkgName = Util.packageName(pkgPath);\r", "+\t\t\t\t\tif (pkgName == null\r", "+\t\t\t\t\t\t|| !JavaConventions.validatePackageName(pkgName.toString()).isOK()) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "394c07475cc6604b36a30b273fdc3740", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "c068497bdb6cb42c26358cbd7f1548d3c744570a", "commitAfterChange": "2de930f59d9b83efe9ad335cd375bf8acd9f09ab", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic static Test suite()", "signatureAfterChange": " \t \tpublic static Test suite()", "diff": ["-\t\tjunit.framework.TestSuite suite = new Suite(FormatterRegressionTests.class.getName());", "-", "-\t\t\tClass c = FormatterRegressionTests.class;", "-\t\t\tMethod[] methods = c.getMethods();", "-\t\t\tfor (int i = 0, max = methods.length; i < max; i++) {", "-\t\t\t\tif (methods[i].getName().startsWith(\"test\")) { //$NON-NLS-1$", "-\t\t\t\t\tsuite.addTest(", "-\t\t\t\t\t\tnew FormatterRegressionTests(methods[i].getName()));", "-\t\t\t\t}", "-\t\t\t}", "+\t\t\treturn new Suite(FormatterRegressionTests.class);", "-\t\t\tsuite.addTest(new FormatterRegressionTests(\"test354\"));  //$NON-NLS-1$", "+\t\t\tjunit.framework.TestSuite suite = new Suite(FormatterRegressionTests.class.getName());", "+\t\t\tsuite.addTest(new FormatterRegressionTests(\"test356\"));  //$NON-NLS-1$", "+\t\t\treturn suite;", "-\t\treturn suite;"]}], "num": 1385}