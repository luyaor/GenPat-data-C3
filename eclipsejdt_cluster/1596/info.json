{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ffe0ae217ebaae958510f5099566d2b1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "479ba0572c67e42665c1f4cfa8595f4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java", "commitBeforeChange": "4c05b51e282281d245149ac856aed4eb689aee0d", "commitAfterChange": "fcd8f6eb5a6e4ad47715a6f446da38772d56031c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void testTypeVariable() throws JavaModelException", "signatureAfterChange": "  \tpublic void testTypeVariable() throws JavaModelException", "diff": ["-\t\tenv.addClass(root, \"p1\", \"A\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tIPath aPath = env.addClass(root, \"p1\", \"A\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlyProblemsFor(new IPath[] {bPath});", "+\t\texpectingOnlyProblemsFor(new IPath[] {aPath, bPath});", "+\t\texpectingSpecificProblemFor(aPath, new Problem(\"A\", \"Comparable is a raw type. References to generic type Comparable<T> should be parameterized\", aPath, 37, 47, CategorizedProblem.CAT_UNCHECKED_RAW)); //$NON-NLS-1$ //$NON-NLS-2$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d05a2d87ab16b6246da930339d8b7620", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/DependencyTests.java", "commitBeforeChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "commitAfterChange": "b9f6281b56af6781d8bb8cc727077eb3dccaebba", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void testTypeDeleting() throws JavaModelException", "signatureAfterChange": " \tpublic void testTypeDeleting() throws JavaModelException", "diff": ["-\t\texpectingSpecificProblemFor(bPath, new Problem(\"B\", \"p1.A cannot be resolved to a type\", bPath)); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingSpecificProblemFor(cPath, new Problem(\"C\", \"The hierarchy of the type C is inconsistent\", cPath)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(bPath, new Problem(\"B\", \"p1.A cannot be resolved to a type\", bPath, 35, 39, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\texpectingSpecificProblemFor(cPath, new Problem(\"C\", \"The hierarchy of the type C is inconsistent\", cPath, 25, 26, CategorizedProblem.CAT_TYPE)); //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 1596}