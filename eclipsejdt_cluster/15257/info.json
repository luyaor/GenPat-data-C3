{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "95b71d87391b61c3e4eb2bc3ac19bb62", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d834a8235b1b16d74a33997809d8f2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "0d0ece63676205621683728295e330e5d3ff8080", "commitAfterChange": "4548a7d90e8e4c11b66df276814b1cfc602d40e1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["-\t\t\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(resolvedResource.getFileExtension())) {", "+\t\t\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(resolvedResource.getName())) {", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalLibraryArchive\", entryPathMsg, projectName)); //$NON-NLS-1$", "-\t\t\t\t\t\tif (checkSourceAttachment ", "-\t\t\t\t\t\t\t&& sourceAttachment != null ", "-\t\t\t\t\t\t\t&& !sourceAttachment.isEmpty()", "-\t\t\t\t\t\t\t&& JavaModel.getTarget(workspaceRoot, sourceAttachment, true) == null){", "-\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundSourceAttachment\", new String [] {sourceAttachment.toString(), path.makeRelative().toString(), projectName})); //$NON-NLS-1$", "-\t\t\t\t\t\t}", "+\t\t\t\t\t    File file = (File) target;", "+\t\t\t\t\t    if (!file.isFile()) {", "+\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalExternalFolder\", path.toOSString(), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t    } else if (!org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(file.getName())) {", "+\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalLibraryArchive\", path.toOSString(), projectName)); //$NON-NLS-1$", "+\t\t\t\t\t    } else if (checkSourceAttachment ", "+\t\t\t\t\t\t\t\t&& sourceAttachment != null ", "+\t\t\t\t\t\t\t\t&& !sourceAttachment.isEmpty()", "+\t\t\t\t\t\t\t\t&& JavaModel.getTarget(workspaceRoot, sourceAttachment, true) == null){", "+\t\t\t\t\t\t\t\treturn  new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundSourceAttachment\", new String [] {sourceAttachment.toString(), path.makeRelative().toString(), projectName})); //$NON-NLS-1$", "+\t\t\t\t\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9452aa1d1a6ebd56d704d272226e81ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "2a762b85f858691a63d4547af177cc649d7b1329", "commitAfterChange": "7675c409a4b3b1e15b1cc476a0a66b988b5fb4a0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject javaProject, IClasspathEntry entry, boolean checkSourceAttachment)", "signatureAfterChange": "\r \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject javaProject, IClasspathEntry entry, boolean checkSourceAttachment)", "diff": ["+\t\t\t// container entry check\r", "+\t\t\tcase IClasspathEntry.CPE_CONTAINER :\r", "+\t\t\t\tif (path != null && path.segmentCount() >= 1){\r", "+\t\t\t\t\tIClasspathEntry[] containerEntries = javaProject.getResolvedClasspathContainer(path);\r", "+\t\t\t\t\tif (containerEntries == null){\r", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.unboundContainerPath\", path.toString())); //$NON-NLS-1$\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tfor (int i = 0, length = containerEntries.length; i < length; i++){\r", "+\t\t\t\t\t\tIJavaModelStatus containerEntryStatus = validateClasspathEntry(javaProject, containerEntries[i], checkSourceAttachment);\r", "+\t\t\t\t\t\tif (!containerEntryStatus.isOK()){\r", "+\t\t\t\t\t\t\treturn containerEntryStatus;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.illegalContainerPath\", path.toString()));\t\t\t\t\t //$NON-NLS-1$\r", "+\t\t\t\t}\r", "+\t\t\t\r"]}], "num": 15257}