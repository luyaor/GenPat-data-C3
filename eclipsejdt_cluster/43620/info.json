{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62cbeefcb44c77993c7b07c989772e7f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d2c701149ed1c976116559d7270ff1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "e254cb1235fced696c16505589db91831c0df710", "commitAfterChange": "fdf4380d8dd2e7b1f08462c3e15a52a8d6142eb4", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "     @Override     public DeclaredType getDeclaredType(TypeElement typeElem, TypeMirror... typeArgs)", "signatureAfterChange": "     @Override     public DeclaredType getDeclaredType(TypeElement typeElem, TypeMirror... typeArgs)", "diff": ["-        ReferenceBinding referenceBinding = (ReferenceBinding) typeElementImpl._binding;", "-        TypeVariableBinding[] typeVariables = referenceBinding.typeVariables();", "+        ReferenceBinding elementBinding = (ReferenceBinding) typeElementImpl._binding;", "+        TypeVariableBinding[] typeVariables = elementBinding.typeVariables();", "-            if (referenceBinding.isGenericType()) {", "-                // must return a raw type", "-                return (DeclaredType) _env.getFactory().newTypeMirror(this._env.getLookupEnvironment().createRawType(referenceBinding, null));", "+            if (elementBinding.isGenericType()) {", "+                // per javadoc, ", "+                return (DeclaredType) _env.getFactory().newTypeMirror(this._env.getLookupEnvironment().createRawType(elementBinding, null));", "-                this._env.getLookupEnvironment().createParameterizedType(referenceBinding, typeArguments, null));", "+                this._env.getLookupEnvironment().createParameterizedType(elementBinding, typeArguments, null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b9903e32905675e3267e9288fbc2298", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "e254cb1235fced696c16505589db91831c0df710", "commitAfterChange": "fdf4380d8dd2e7b1f08462c3e15a52a8d6142eb4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @Override     public DeclaredType getDeclaredType(DeclaredType containing, TypeElement typeElem,             TypeMirror... typeArgs)", "signatureAfterChange": "     @Override     public DeclaredType getDeclaredType(DeclaredType containing, TypeElement typeElem,             TypeMirror... typeArgs)", "diff": ["-        ReferenceBinding referenceBinding = (ReferenceBinding) typeElementImpl._binding;", "-        TypeVariableBinding[] typeVariables = referenceBinding.typeVariables();", "+        ReferenceBinding elementBinding = (ReferenceBinding) typeElementImpl._binding;", "+        TypeVariableBinding[] typeVariables = elementBinding.typeVariables();", "-            if (referenceBinding.isGenericType()) {", "-                // must return a raw type", "-                return (DeclaredType) _env.getFactory().newTypeMirror(this._env.getLookupEnvironment().createRawType(referenceBinding, enclosingType));", "+            if (elementBinding.isGenericType()) {", "+                // e.g., Outer.Inner<T> but T is not specified", "+                // Per javadoc on interface, must return the raw type Outer.Inner", "+                return (DeclaredType) _env.getFactory().newTypeMirror(", "+                        _env.getLookupEnvironment().createRawType(elementBinding, enclosingType));", "+            } else {", "+                // e.g., Outer<Long>.Inner", "+                ParameterizedTypeBinding ptb = _env.getLookupEnvironment().createParameterizedType(elementBinding, null, enclosingType);", "+                return (DeclaredType) _env.getFactory().newTypeMirror(ptb);", "-            // TODO (see how to create a member type binding", "-            throw new UnsupportedOperationException(\"NYI: TypesImpl.getDeclaredType(...) for member types\"); //$NON-NLS-1$", "-                this._env.getLookupEnvironment().createParameterizedType(referenceBinding, typeArguments, enclosingType));", "+                this._env.getLookupEnvironment().createParameterizedType(elementBinding, typeArguments, enclosingType));"]}], "num": 43620}