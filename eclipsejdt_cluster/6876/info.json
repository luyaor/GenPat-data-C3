{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0426383f8f4fcb452fa0b18181310ec0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b033d515e1724c70021b6977b95a9b2b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " public void generateSyntheticBodyForMethodAccess(SyntheticAccessMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForMethodAccess(SyntheticAccessMethodBinding accessBinding)", "diff": ["+\tTypeBinding[] arguments = accessBinding.accessType == SyntheticAccessMethodBinding.BridgeMethodAccess ", "+\t\t\t\t\t\t\t\t\t\t\t\t\t? accessBinding.parameters", "+\t\t\t\t\t\t\t\t\t\t\t\t\t: null;", "-\t\tload(parameters[i], resolvedPosition);", "-\t\tif ((parameters[i] == DoubleBinding) || (parameters[i] == LongBinding))", "+\t    TypeBinding parameter = parameters[i];", "+\t    if (arguments != null) { // for bridge methods", "+\t\t    TypeBinding argument = arguments[i];", "+\t\t\tload(argument, resolvedPosition);", "+\t\t\tif (argument != parameter) ", "+\t\t\t    checkcast(parameter);", "+\t    } else {", "+\t\t\tload(parameter, resolvedPosition);", "+\t\t}", "+\t\tif ((parameter == DoubleBinding) || (parameter == LongBinding))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b216f5d23662e59eaa19d0e192a7f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "commitAfterChange": "240e0c6a2e7086d1fe50f8b36056d83e0056d1f3", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " public void generateSyntheticBodyForConstructorAccess(SyntheticAccessMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForConstructorAccess(SyntheticAccessMethodBinding accessBinding)", "diff": ["-\t\tsyntheticArguments = nestedType.syntheticOuterLocalVariables();", "+\t}", "+\tfor (int i = 0; i < length; i++) {", "+\t\tload(parameters[i], resolvedPosition);", "+\t\tif ((parameters[i] == DoubleBinding) || (parameters[i] == LongBinding))", "+\t\t\tresolvedPosition += 2;", "+\t\telse", "+\t\t\tresolvedPosition++;", "+\t}", "+\t", "+\tif (constructorBinding.declaringClass.isNestedType()) {", "+\t\tNestedTypeBinding nestedType = (NestedTypeBinding) constructorBinding.declaringClass;", "+\t\tSyntheticArgumentBinding[] syntheticArguments = nestedType.syntheticOuterLocalVariables();", "-\t}", "-\tfor (int i = 0; i < length; i++) {", "-\t\tload(parameters[i], resolvedPosition);", "-\t\tif ((parameters[i] == DoubleBinding) || (parameters[i] == LongBinding))", "-\t\t\tresolvedPosition += 2;", "-\t\telse", "-\t\t\tresolvedPosition++;"]}], "num": 6876}