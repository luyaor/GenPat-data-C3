{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4c1ffd393533aa1d49591242c463acc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bddfa859c79d7e3407937c275a15481", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "0a1a58cff49ba28ab8a24ea8cceb397cd28f5bb9", "commitAfterChange": "c6d42959c3928ea39552c68b8365ccff903e4852", "methodNumberBeforeChange": 206, "methodNumberAfterChange": 206, "signatureBeforeChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "signatureAfterChange": " \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean insideTypeAnnotation, \t\tboolean insideAnnotationAttribute)", "diff": ["+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tint ptr = this.uninterestingBindingsPtr;", "+\t\t\t\t\t\t\t// Cases where the binding is uninteresting eg. for completion occurring inside a local var", "+\t\t\t\t\t\t\t// declaration, the local var binding is uninteresting and shouldn't be proposed.", "+\t\t\t\t\t\t\twhile (ptr >= 0) {", "+\t\t\t\t\t\t\t\tif (this.uninterestingBindings[ptr] == local) {", "+\t\t\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tptr--;", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd47b636e5391d73ddf9d28084e10fd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "0a1a58cff49ba28ab8a24ea8cceb397cd28f5bb9", "commitAfterChange": "c6d42959c3928ea39552c68b8365ccff903e4852", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": " \tprivate void findFields( \t\tchar[] fieldName, \t\tFieldBinding[] fields, \t\tScope scope, \t\tObjectVector fieldsFound, \t\tObjectVector localsFound, \t\tboolean onlyStaticFields, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["+\t\t\t", "+\t\t\tint ptr = this.uninterestingBindingsPtr;", "+\t\t\t// Cases where the binding is uninteresting eg. for completion occurring inside a field declaration,", "+\t\t\t// the field binding is uninteresting and shouldn't be proposed.", "+\t\t\twhile (ptr >= 0) {", "+\t\t\t\tif (this.uninterestingBindings[ptr] == field) {", "+\t\t\t\t\tcontinue next;", "+\t\t\t\t}", "+\t\t\t\tptr--;", "+\t\t\t}"]}], "num": 16262}