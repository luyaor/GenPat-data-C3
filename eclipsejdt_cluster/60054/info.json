{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a047adb27e81f865ddad8584376d11e7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e57b5d61ebdf9b20c8dd335431e47f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileManager.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void collectAllMatchingFiles(File file, String normalizedPackageName, Set<Kind> kinds, boolean recurse, ArrayList<JavaFileObject> collector)", "signatureAfterChange": " \t \tprivate void collectAllMatchingFiles(File file, String normalizedPackageName, Set<Kind> kinds, boolean recurse, ArrayList<JavaFileObject> collector)", "diff": ["+\t\t\tif (archive == Archive.UNKNOWN_ARCHIVE) return;", "-\t\t\t\t\t\tArrayList<String> types = archive.getTypes(packageName);", "+\t\t\t\t\t\tList<String> types = archive.getTypes(packageName);", "-\t\t\t\tArrayList<String> types = archive.getTypes(key);", "+\t\t\t\tList<String> types = archive.getTypes(key);", "-\t\t\t\t\t\tfinal Kind kind = getKind(typeName);", "+\t\t\t\t\t\tfinal Kind kind = getKind(getExtension(typeName));", "-\t\t\t\t\t\t\tcollector.add(archive.getArchiveFileObject(normalizedPackageName + typeName, this.charset));", "+\t\t\t\t\t\t\tcollector.add(archive.getArchiveFileObject(key + typeName, this.charset));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e9d36f425b333a849d3149be91840e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/EclipseFileManager.java", "commitBeforeChange": "f6d7e4c8ebdaaf8a904962804a027a09edc0c0d3", "commitAfterChange": "30e98d6cc084dfe1b207ffb7493b2de7b6cec8c4", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void collectAllMatchingFiles(File file, String normalizedPackageName, Set<Kind> kinds, boolean recurse, ArrayList<JavaFileObject> collector)", "signatureAfterChange": " \t \tprivate void collectAllMatchingFiles(File file, String normalizedPackageName, Set<Kind> kinds, boolean recurse, ArrayList<JavaFileObject> collector)", "diff": ["+\t\t\tif (archive == Archive.UNKNOWN_ARCHIVE) return;", "-\t\t\t\t\t\tArrayList<String> types = archive.getTypes(packageName);", "+\t\t\t\t\t\tList<String> types = archive.getTypes(packageName);", "-\t\t\t\tArrayList<String> types = archive.getTypes(key);", "+\t\t\t\tList<String> types = archive.getTypes(key);", "-\t\t\t\t\t\tfinal Kind kind = getKind(typeName);", "+\t\t\t\t\t\tfinal Kind kind = getKind(getExtension(typeName));", "-\t\t\t\t\t\t\tcollector.add(archive.getArchiveFileObject(normalizedPackageName + typeName, this.charset));", "+\t\t\t\t\t\t\tcollector.add(archive.getArchiveFileObject(key + typeName, this.charset));"]}], "num": 60054}