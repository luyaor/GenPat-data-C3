{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bcb4e4befe14e10530483c7857e111f9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10bfc98a435f0f56bdd2c255c2c6d29e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "5cda6ee5d9726ecd4c3800dc98f96b9913f2498c", "commitAfterChange": "709c0464f2b2104283b8df19cdcd96bebc63e551", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r private void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": "\r private void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\tfor (int i = length; --i >= 0;)\t\t// Remember that only one of the methods can be non-abstract\r", "-\t\tif (!methods[i].isAbstract()) {\r", "-\t\t\tconcreteMethod = methods[i];\r", "-\t\t\tbreak;\r", "-\t\t}\r", "+\tif (!type.isInterface()){ // ignore concrete methods for interfaces\r", "+\t\tfor (int i = length; --i >= 0;)\t\t// Remember that only one of the methods can be non-abstract\r", "+\t\t\tif (!methods[i].isAbstract()) {\r", "+\t\t\t\tconcreteMethod = methods[i];\r", "+\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "304fd6c6e7607dae876693e72f0193c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "1d9c797e2d535a723d97129a4995a501f060e8fc", "commitAfterChange": "45457c087850a9bcb1e2d528c971be662d0a4e96", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length, MethodBinding[] allInheritedMethods)", "diff": ["-\tfor (int i = length; --i >= 0;)", "-\t\tif (!currentMethod.isStatic() && !methods[i].isStatic())", "-\t\t\tcheckNullSpecInheritance(currentMethod, methods[i]);", "+\tif (this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\tfor (int i = length; --i >= 0;)", "+\t\t\tif (!currentMethod.isStatic() && !methods[i].isStatic())", "+\t\t\t\tcheckNullSpecInheritance(currentMethod, methods[i]);", "+\t}"]}], "num": 10368}