{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a56bdc2d96eb42903d5c1d82c9c0fa14", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b5393c81919c06f641d2a6669c73454", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "bc334d447f9fedc80a94198538b7c7d486280e6a", "commitAfterChange": "fb9438df420a9ff76955a367112f1094d4a61ae7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \tprotected void elementRemoved(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void elementRemoved(Openable element, IResourceDelta delta)", "diff": ["-\t\tfCurrentDelta.removed(element);\r", "+\t\tint elementType = element.getElementType();\r", "+\t\tif ((delta.getFlags() & IResourceDelta.MOVED_TO) != 0) {\r", "+\t\t\tIPath movedToPath = delta.getMovedToPath();\r", "+\t\t\tIResource res = delta.getResource();\r", "+\t\t\tIResource movedToRes;\r", "+\t\t\tif (res instanceof IFile) {\r", "+\t\t\t\tmovedToRes = res.getWorkspace().getRoot().getFile(movedToPath);\r", "+\t\t\t} else {\r", "+\t\t\t\tmovedToRes = res.getWorkspace().getRoot().getFolder(movedToPath);\r", "+\t\t\t}\r", "+\t\t\t// create the moved To element\r", "+\t\t\t// pass null for the project in case the element is moving to another project\r", "+\t\t\tOpenable movedToElement = this.createElement(movedToRes, elementType, null);\r", "+\t\t\tif (movedToElement == null) {\r", "+\t\t\t\t// moved outside classpath\r", "+\t\t\t\tfCurrentDelta.removed(element);\r", "+\t\t\t} else {\r", "+\t\t\t\tfCurrentDelta.movedFrom(element, movedToElement);\r", "+\t\t\t}\r", "+\t\t} else {\r", "+\t\t\tfCurrentDelta.removed(element);\r", "+\t\t}\r", "-\t\tswitch (element.getElementType()) {\r", "+\t\tswitch (elementType) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82787e23842313e52681aed22510408a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "bc334d447f9fedc80a94198538b7c7d486280e6a", "commitAfterChange": "fb9438df420a9ff76955a367112f1094d4a61ae7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \tprotected void elementAdded(Openable element, IResourceDelta delta)", "signatureAfterChange": "\r \tprotected void elementAdded(Openable element, IResourceDelta delta)", "diff": ["-\t\t\tfCurrentDelta.added(element);\r", "+\t\t\tif ((delta.getFlags() & IResourceDelta.MOVED_FROM) != 0) {\r", "+\t\t\t\tIPath movedFromPath = delta.getMovedFromPath();\r", "+\t\t\t\tIResource res = delta.getResource();\r", "+\t\t\t\tIResource movedFromRes;\r", "+\t\t\t\tif (res instanceof IFile) {\r", "+\t\t\t\t\tmovedFromRes = res.getWorkspace().getRoot().getFile(movedFromPath);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tmovedFromRes = res.getWorkspace().getRoot().getFolder(movedFromPath);\r", "+\t\t\t\t}\r", "+\t\t\t\t// create the moved from element\r", "+\t\t\t\t// pass null for the project in case the element is coming from another project\r", "+\t\t\t\tOpenable movedFromElement = this.createElement(movedFromRes, elementType, null);\r", "+\t\t\t\tif (movedFromElement == null) {\r", "+\t\t\t\t\t// moved from outside classpath\r", "+\t\t\t\t\tfCurrentDelta.added(element);\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tfCurrentDelta.movedTo(element, movedFromElement);\r", "+\t\t\t\t}\r", "+\t\t\t} else {\r", "+\t\t\t\tfCurrentDelta.added(element);\r", "+\t\t\t}\r"]}], "num": 12417}