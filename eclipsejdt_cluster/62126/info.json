{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "05835b5213fe8f61dd4c8778d9fea8de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4d222d26a6b2bf8f6eddbce0e0bab34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "23ab511ee7d420cbed39a636881d71e5078414f0", "commitAfterChange": "30e561e018599c00e9be20fc1a036a6166bf2a12", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void generateOptimizedLogicalAnd( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedLogicalAnd( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["+\t\t\t\t\tLabel internalTrueLabel = new Label(codeStream);", "+\t\t\t\t\tinternalTrueLabel.place();", "+\t\t\t\t\tLabel internalTrueLabel = new Label(codeStream);", "-\t\t\t\t\t\ttrueLabel,", "+\t\t\t\t\t\tinternalTrueLabel,", "+\t\t\t\t\tinternalTrueLabel.place();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f1afcf855ba6495a2a7d193d8ad83f09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DualParseSyntaxErrorTest.java", "commitBeforeChange": "738e086e894bacdbfae0e65ffe73d6cdfbe7d90c", "commitAfterChange": "9af380edbebe260c532550e38eabb05a50b6fe99", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "signatureAfterChange": " public void checkParse( \tchar[] source,  \tString expectedSyntaxErrorDiagnosis, \tString testName)", "diff": ["-\t\t\tcomputedUnit.types[i].binding = new SourceTypeBinding(){};", "+\t\t\t\t\tStringWriter stringWriter = new StringWriter();", "+\t\t\t\t\te.printStackTrace(new PrintWriter(stringWriter));", "+\t\t\t\t\tbuffer.append(stringWriter.getBuffer());"]}], "num": 62126}