{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec296c7641cc8b267e0e8a6c863d585c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6fdf9575979f42c39fd827e6e44a2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MemberDeclarationVisitor.java", "commitBeforeChange": "cefc7f3f8677282aa49e610700500999ffcaffcb", "commitAfterChange": "89e8879d5dd978e5f2535f9d8b7bac080dd4f73b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public boolean visit(LocalDeclaration declaration, BlockScope scope)", "signatureAfterChange": " public boolean visit(LambdaExpression lambdaExpression, BlockScope scope)", "diff": ["+public boolean visit(LambdaExpression lambdaExpression, BlockScope scope) {", "+\tInteger level = (Integer) this.nodeSet.matchingNodes.removeKey(lambdaExpression);", "+\ttry {", "+\t\tthis.locator.reportMatching(lambdaExpression, this.enclosingElement, level != null ? level.intValue() : -1, this.nodeSet);", "+\t} catch (CoreException e) {", "+\t\tthrow new WrappedCoreException(e);", "+\t}", "+\treturn true;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4414c7b8b2d74373dd505f142a23c966", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/NameEnvironment.java", "commitBeforeChange": "6c9d3461652e1b0a1c076bd07fea25ea7241dc4b", "commitAfterChange": "fc3823ac5e20f18e24acb3b991589cbc8e132c53", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public NameEnvironment(IJavaProject project, boolean isUsingSourceFolder)", "signatureAfterChange": "\r \r public NameEnvironment(IJavaProject javaProject)", "diff": ["-public NameEnvironment(IJavaProject project, boolean isUsingSourceFolder) {\r", "+public NameEnvironment(IJavaProject javaProject) {\r", "-\t\tthis.classpathLocations = computeLocations(project, isUsingSourceFolder, null, null);\r", "-\t} catch(JavaModelException e){\r", "+\t\tIWorkspaceRoot workspaceRoot = javaProject.getProject().getWorkspace().getRoot();\r", "+\t\tIResource outputFolder = workspaceRoot.findMember(javaProject.getOutputLocation());\r", "+\t\tString outputFolderLocation = null;\r", "+\t\tif (outputFolder != null && outputFolder.exists())\r", "+\t\t\toutputFolderLocation = outputFolder.getLocation().toString();\r", "+\t\tthis.classpathLocations = computeLocations(workspaceRoot, javaProject, outputFolderLocation, null, null);\r", "+\t} catch(JavaModelException e) {\r"]}], "num": 8913}