{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a69fc9cbbbaab79ab7c0017976c674f3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b1e9dfbe1f638b167d1e08e3bf8704c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "7eb4fa5c3b681a58f496caa332d673ad4793228a", "commitAfterChange": "4a7de5e00f52111fb95f335ff67c00d5cc7f7cef", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r \r \tprivate Scope retrieveCompilationUnitScope(ASTNode node)", "signatureAfterChange": "\r \tDefaultBindingResolver(CompilationUnitScope scope)", "diff": ["+\t */\r", "+\tDefaultBindingResolver(CompilationUnitScope scope) {\r", "+\t\tthis();\r", "+\t\tthis.scope = scope;\r", "+\t}\r", "-\r", "-\tprivate Scope retrieveCompilationUnitScope(ASTNode node) {\r", "-\t\tASTNode currentNode = node;\r", "-\t\twhile(!(currentNode instanceof CompilationUnit)) {\r", "-\t\t\tcurrentNode = currentNode.getParent();\r", "-\t\t}\r", "-\t\tCompilationUnitDeclaration compilationUnitDeclaration = (CompilationUnitDeclaration) this.newAstToOldAst.get(currentNode);\r", "-\t\treturn compilationUnitDeclaration.scope;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5b27dd71b9bc7a1238f67e9805b0d57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "5166ddb130bcb062c1e82da491c829c5d95a6211", "commitAfterChange": "2894ba75386697d7bf484434d073fb6ffaf6cec9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprotected void beginToCompile(org.eclipse.jdt.internal.compiler.env.ICompilationUnit[] sourceUnits, String[] bindingKeys)", "signatureAfterChange": " \tprotected void beginToCompile(org.eclipse.jdt.internal.compiler.env.ICompilationUnit[] sourceUnits, String[] bindingKeys)", "diff": ["-\t\t\tCompilationUnitDeclaration parsedUnit = resolver.getCompilationUnitDeclaration();", "+\t\t\t// If it doesn't have a type name, then it is either an array type, package or base type, which will definitely not have a compilation unit. ", "+\t\t\t// Skipping it will speed up performance because the call will open jars. (theodora)", "+\t\t\tCompilationUnitDeclaration parsedUnit = resolver.hasTypeName() ? resolver.getCompilationUnitDeclaration() : null;"]}], "num": 21299}