{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7953bd48f1673f5fceac850281215595", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5caca864bf6cef3e71c8fdc7d2436552", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "21a92705021889a65433ba6133c5366adde75501", "commitAfterChange": "caca5bd5e672e7bb994591ef9a7c0d942b3bf6fb", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \tprotected boolean traverseDelta(IResourceDelta delta, int elementType, IJavaProject currentProject)", "signatureAfterChange": "\r \tprotected boolean traverseDelta(IResourceDelta delta, int elementType, IJavaProject currentProject)", "diff": ["-\t\tif (currentProject != null) {\r", "-\t\t\tif (this.currentElement == null || !this.currentElement.getJavaProject().equals(currentProject)) {\r", "-\t\t\t\t// force the currentProject to be used\r", "-\t\t\t\tthis.currentElement = (Openable)currentProject;\r", "-\t\t\t}\r", "+\t\tif (res instanceof IProject) {\r", "+\t\t\t\tif (this.isOpen(res) && !((IProject)res).hasNature(JavaCore.NATURE_ID)) return false; // non java project\r", "-\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\t// non java resource\r", "+\t\t\t} catch (CoreException e) {\r", "+\t\t\t\t// invalid project\r", "+\t\t\tif (delta.getKind() != IResourceDelta.CHANGED \r", "+\t\t\t\t\t|| (delta.getFlags() & IResourceDelta.OPEN) != 0) {\r", "+\t\t\t\treturn false; // don't go deeper for added, removed, opened or closed projects\r", "+\t\t\t}\r", "-\t\t\tif (res instanceof IProject) {\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tif (this.isOpen(res) && !((IProject)res).hasNature(JavaCore.NATURE_ID)) return false; // non java project\r", "-\t\t\t\t\tprocessChildren = this.updateCurrentDeltaAndIndex(delta, elementType, currentProject);\r", "-\t\t\t\t} catch (CoreException e) {\r", "-\t\t\t\t\t// invalid project\r", "-\t\t\t\t\treturn false;\r", "+\t\t\tif (currentProject != null) {\r", "+\t\t\t\tif (this.currentElement == null || !this.currentElement.getJavaProject().equals(currentProject)) {\r", "+\t\t\t\t\t// force the currentProject to be used\r", "+\t\t\t\t\tthis.currentElement = (Openable)currentProject;\r", "-\t\t\t\tif (delta.getKind() != IResourceDelta.CHANGED \r", "-\t\t\t\t\t\t|| (delta.getFlags() & IResourceDelta.OPEN) != 0) {\r", "-\t\t\t\t\treturn false; // don't go deeper for added, removed, opened or closed projects\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\tprocessChildren = this.updateCurrentDeltaAndIndex(delta, elementType, currentProject);\r", "+\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\t// non java resource\r", "+\t\t\t\t\treturn false;\r", "-\t\t\t\tif (!this.traverseDelta(child, childType, (currentProject == null && isPkgFragmentRoot) ? projectOfRoot : currentProject)) {\r", "+\t\t\t\tif (childType == -1\r", "+\t\t\t\t\t|| !this.traverseDelta(child, childType, (currentProject == null && isPkgFragmentRoot) ? projectOfRoot : currentProject)) {\r", "-\t\t\t\t\t\t\t\tif (elementType == IJavaElement.JAVA_PROJECT) {\r", "+\t\t\t\t\t\t\t\tif (elementType == IJavaElement.JAVA_PROJECT\r", "+\t\t\t\t\t\t\t\t\t|| (elementType == IJavaElement.PACKAGE_FRAGMENT_ROOT && res instanceof IProject)) { \r", "+\t\t\t\t\t\t\t\t\t// NB: attach non-java resource to project (not to its package fragment root)\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62101f24cada71189ceba4f078eaabbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "b026aefdcbffec474ae6cafef5ea7136332c257c", "commitAfterChange": "66b4e0bcd2caf6d10171af7fc0d24f109b7f6263", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void faultInImports()", "signatureAfterChange": " void faultInImports()", "diff": ["-\t\tif (importReference.onDemand && CharOperation.equals(JAVA_LANG, importReference.tokens)) {", "+\t\tif (importReference.onDemand && CharOperation.equals(JAVA_LANG, importReference.tokens) && !importReference.isStatic()) {", "+\t\t\tif (importReference.isStatic() && importBinding instanceof PackageBinding) {", "+\t\t\t\tproblemReporter().cannotImportPackage(importReference);", "+\t\t\t\tcontinue nextImport;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd22244cca62194574862c9f305668a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "b026aefdcbffec474ae6cafef5ea7136332c257c", "commitAfterChange": "66b4e0bcd2caf6d10171af7fc0d24f109b7f6263", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " void checkAndSetImports()", "signatureAfterChange": " void checkAndSetImports()", "diff": ["-\t\tif (importReference.onDemand && CharOperation.equals(JAVA_LANG, importReference.tokens)) {", "+\t\tif (importReference.onDemand && CharOperation.equals(JAVA_LANG, importReference.tokens) && !importReference.isStatic()) {", "-\t\t\tif (!importBinding.isValidBinding())", "+\t\t\tif (!importBinding.isValidBinding() || (importReference.isStatic() && importBinding instanceof PackageBinding))"]}], "num": 70523}