{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e226de6260a5870cdfe7faeeee0d6c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c8d319549e9b69780067eed996bb74d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "commitAfterChange": "4cc2f8f4e127cb2b5311bd70a3aa9e42278cea32", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\tSearchMatch match = locator.newPackageReferenceMatch(element, accuracy, ((int) (positions[0] >>> 32)), ((int) positions[last - 1])+1, importRef);", "+\t\t\tint start = (int) (positions[0] >>> 32);", "+\t\t\tint end = (int) positions[last - 1];", "+\t\t\tSearchMatch match = locator.newPackageReferenceMatch(element, accuracy, start, end-start+1, importRef);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4868129188047816b42006989f5b6233", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "917603919e9d38772fd63709feb3bbda7696f523", "commitAfterChange": "fca5fd453024a315e76f840acd34b846e15423bf", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "signatureAfterChange": " protected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "diff": ["-\tFormatJavadocReference reference = receiver == null", "-\t\t? new FormatJavadocReference(this.memberStart, this.scanner.getCurrentTokenEndPosition())", "-\t\t: new FormatJavadocReference(((FormatJavadocReference) receiver).sourceStart, this.scanner.getCurrentTokenEndPosition());", "+\tint start = receiver == null ? this.memberStart : ((FormatJavadocReference) receiver).sourceStart;", "+\tint lineStart = this.scanner.getLineNumber(start);", "+\tFormatJavadocReference reference = new FormatJavadocReference(start, this.scanner.getCurrentTokenEndPosition(), lineStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d457ef83521f4073cf7ff6dbbde079e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 536, "methodNumberAfterChange": 543, "signatureBeforeChange": " public void dereferencingNullableExpression(Expression expression, LookupEnvironment env)", "signatureAfterChange": " public void dereferencingNullableExpression(Expression expression)", "diff": ["-public void dereferencingNullableExpression(Expression expression, LookupEnvironment env) {", "+public void dereferencingNullableExpression(Expression expression) {", "-\tchar[][] nullableName = env.getNullableAnnotationName();", "+\tchar[][] nullableName = this.options.nullableAnnotationName;", "-\tthis.handle(IProblem.DereferencingNullableExpression, arguments, arguments, expression.sourceStart, expression.sourceEnd);", "+\tint start = nodeSourceStart(expression);", "+\tint end = nodeSourceEnd(expression);", "+\tthis.handle(IProblem.DereferencingNullableExpression, arguments, arguments, start, end);"]}], "num": 61130}