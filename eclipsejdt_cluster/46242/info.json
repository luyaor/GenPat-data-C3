{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "43bfd8e936e0168287def4dba912b9a7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5146f5ad68c5662549d4e3876cba477d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "7792c069da7693e79a187c977ea9f7a78a8fff7b", "commitAfterChange": "415b98b155644be36e3e8596750b7ffdbf4a3542", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private IType[] findSuperInterfaces(IGenericType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private IType[] findSuperInterfaces(IGenericType type, ReferenceBinding typeBinding)", "diff": ["-\t\tif (sourceType.getName().length == 0) { // if anonymous type", "+\t\tif (sourceType.isAnonymous()) { // if anonymous type", "-\t\tif (hierarchyType.name.length == 0) { // if anonymous type", "+\t\tif (hierarchyType.isAnonymous()) { // if anonymous type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79df2b4eef432c0f0fe18e71509a8ca7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "72895982cdfd43c6e856c9e0af3d1d64cc3e0181", "commitAfterChange": "ad349ef0d651cc5782e20e3c181fbfffccf75c28", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void acceptMethod(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isConstructor)", "signatureAfterChange": " public void acceptMethod(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, boolean isConstructor)", "diff": ["-\t\t\tif(declaringDeclaringType != null && isConstructor) {", "+\t\t\t", "+\t\t\tboolean isStatic = false;", "+\t\t\ttry {", "+\t\t\t\tisStatic = Flags.isStatic(type.getFlags());", "+\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t// isStatic == false", "+\t\t\t}", "+\t\t\t", "+\t\t\tif(declaringDeclaringType != null && isConstructor\t&& !isStatic) {"]}], "num": 46242}