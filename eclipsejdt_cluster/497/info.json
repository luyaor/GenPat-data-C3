{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d85a32027d91974bee9f8313b8a49e9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8248cdcbebfee44f29fed2edee4d22c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/annotations/readannotation/ReadAnnotationProcessor.java", "commitBeforeChange": "c7530b44102791083c7f5487f5dd4ce7cebdfce6", "commitAfterChange": "f3583cbdecac6b2a3a121f21a86edfd4a2e9d534", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void process()", "signatureAfterChange": "  \tpublic void process()", "diff": ["-\t\t\t\t\t\texpected = new String[] { \"@RTVisibleAnno(name = Foundation, boolValue = false, byteValue = 16, charValue = c, doubleValue = 99.0, floatValue = 9.0, intValue = 999, longValue = 3333, shortValue = 3, colors = {question.Color RED, question.Color BLUE}, anno = @SimpleAnnotation(value = core), simpleAnnos = {@SimpleAnnotation(value = org), @SimpleAnnotation(value = eclipse), @SimpleAnnotation(value = jdt)}, clazzes = {Object.class, String.class}, clazz = Object.class)\",", "+\t\t\t\t\t\texpected = new String[] { \"@RTVisibleAnno(name = Foundation, boolValue = false, byteValue = 16, charValue = c, doubleValue = 99.0, floatValue = 9.0, intValue = 999, longValue = 3333, shortValue = 3, colors = {RED, BLUE}, anno = @SimpleAnnotation(value = core), simpleAnnos = {@SimpleAnnotation(value = org), @SimpleAnnotation(value = eclipse), @SimpleAnnotation(value = jdt)}, clazzes = {java.lang.Object, java.lang.String}, clazz = java.lang.Object)\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9fd6dde709041192b584ddce13f0073", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationValueImpl.java", "commitBeforeChange": "80e40b4c60040fa0aa8e1c95f16e2597f3f0acf0", "commitAfterChange": "f9277e3d6f326ff6a770d54a63a8fe0127208bbc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic AnnotationValueImpl(BaseProcessingEnvImpl env, Object value, TypeBinding type)", "signatureAfterChange": " \tpublic AnnotationValueImpl(BaseProcessingEnvImpl env, Object value, TypeBinding type)", "diff": ["-\t\tif (value instanceof Object[]) {", "-\t\t\tObject[] values = (Object[])value;", "-\t\t\tList<AnnotationValue> convertedValues = new ArrayList<AnnotationValue>(values.length);", "-\t\t\tfor (Object oneValue : values) {", "-\t\t\t\tTypeBinding valueType = null;", "-\t\t\t\tif (type instanceof ArrayBinding) {", "-\t\t\t\t\tvalueType = ((ArrayBinding)type).elementsType();", "+\t\tif (type.isArrayType()) {", "+\t\t\tList<AnnotationValue> convertedValues = null;", "+\t\t\tTypeBinding valueType = ((ArrayBinding)type).elementsType();", "+\t\t\tif (value instanceof Object[]) {", "+\t\t\t\tObject[] values = (Object[])value;", "+\t\t\t\tconvertedValues = new ArrayList<AnnotationValue>(values.length);", "+\t\t\t\tfor (Object oneValue : values) {", "+\t\t\t\t\tconvertedValues.add(new AnnotationValueImpl(_env, oneValue, valueType));", "-\t\t\t\tconvertedValues.add(new AnnotationValueImpl(_env, oneValue, valueType));", "+\t\t\t} else {", "+\t\t\t\tconvertedValues = new ArrayList<AnnotationValue>(1);", "+\t\t\t\tconvertedValues.add(new AnnotationValueImpl(_env, value, valueType));", "-\t\t}", "-\t\telse {", "+\t\t} else {"]}], "num": 497}