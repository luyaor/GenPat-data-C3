{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "beac47179848bbb895e2917f1197080b", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1eaf71a39c5bf77ea0ffe45deabb30ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "05ca87fa79cdcdbf8adddd11b0044e5bbc381076", "commitAfterChange": "1a08d829c1b17811d102043c26cfbba0a6765570", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "     \t\tpublic Boolean call()", "signatureAfterChange": "     \t\tpublic Boolean call()", "diff": ["+\t\t\tprivate boolean hasRun = false;", "-    \t\t\treturn EclipseCompiler.this.call() ? Boolean.TRUE : Boolean.FALSE;", "+    \t\t\tif (this.hasRun) {", "+    \t\t\t\tthrow new IllegalStateException(\"This task has already been run\"); //$NON-NLS-1$", "+    \t\t\t}", "+    \t\t\tBoolean value = EclipseCompiler.this.call() ? Boolean.TRUE : Boolean.FALSE;", "+    \t\t\tthis.hasRun = true;", "+\t\t\t\treturn value;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad8f3f3b30d41ed7ede2c1e641e25ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "05ca87fa79cdcdbf8adddd11b0044e5bbc381076", "commitAfterChange": "1a08d829c1b17811d102043c26cfbba0a6765570", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean call()", "signatureAfterChange": "  \tpublic boolean call()", "diff": ["+\t\t\ttry {", "+\t\t\t\tif (this.fileManager != null) {", "+\t\t\t\t\tthis.fileManager.flush();", "+\t\t\t\t}", "+\t\t\t} catch (IOException e) {", "+\t\t\t\t// ignore", "+\t\t\t}"]}], "num": 59130}