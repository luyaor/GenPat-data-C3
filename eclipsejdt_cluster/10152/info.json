{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ad0ac561448805eb8a78c4f0f777243", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dedd65f8553404738742cab2c638649", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "bd8934678d77eb2fa075ba4636b324b35eb1f6d6", "commitAfterChange": "216718adf21d4743793a153a5cf7d075857e4c9a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["+\t\t\tcase K_BETWEEN_LEFT_AND_RIGHT_BRACKET :", "+\t\t\t\tArrayReference arrayReference;", "+\t\t\t\tif(expressionPtr > 0 && expressionStack[expressionPtr] == expression) {", "+\t\t\t\t\tarrayReference =", "+\t\t\t\t\t\tnew ArrayReference(", "+\t\t\t\t\t\t\texpressionStack[expressionPtr-1],", "+\t\t\t\t\t\t\texpression);", "+\t\t\t\t} else {", "+\t\t\t\t\tarrayReference =", "+\t\t\t\t\t\tnew ArrayReference(", "+\t\t\t\t\t\t\tgetUnspecifiedReferenceOptimized(),", "+\t\t\t\t\t\t\texpression);", "+\t\t\t\t}", "+\t\t\t\tassistNodeParent = arrayReference;", "+\t\t\t\tbreak;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21552d1d7708d8dfa9c6d4f7675f8ef2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "8565022490f4eb0a47445253d428acd415a93871", "commitAfterChange": "13d2f617e2307a81f1ff967feb328a472a058ad0", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " private void buildMoreCompletionContext(Expression expression)", "signatureAfterChange": " private void buildMoreCompletionContext(Expression expression)", "diff": ["+\t\t\t\t\tthis.assistNodeParent = parentNode;", "+\t\t\t\t}", "+\t\t\t\tbreak nextElement;", "+\t\t\tcase K_CAST_STATEMENT :", "+\t\t\t\tExpression castType;", "+\t\t\t\tif(this.expressionPtr > 0", "+\t\t\t\t\t&& ((castType = this.expressionStack[this.expressionPtr-1]) instanceof TypeReference", "+\t\t\t\t\t\t|| castType instanceof NameReference)) {", "+\t\t\t\t\tCastExpression cast = new CastExpression(expression, getTypeReference(castType));", "+\t\t\t\t\tcast.sourceStart = castType.sourceStart;", "+\t\t\t\t\tcast.sourceEnd= expression.sourceEnd;", "+\t\t\t\t\tparentNode = cast;"]}], "num": 10152}