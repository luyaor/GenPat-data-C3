{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "110797b551f8069ab375d759e13a9736", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3b64adcfad6019129e8be9da97b9f59b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "309be04a155363e9f398875d6734d13ff5334b6c", "commitAfterChange": "6b58c2063066f4462a27490669b336c2263fae86", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedNameReference qNameRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tchar[][] tokens = null;", "-\tchar[][] nameTokens = qNameRef.tokens;", "-\tint lastIndex = nameTokens.length-1;", "+\tint lastIndex = qNameRef.tokens.length - 1;", "-\t\t\tint otherBindingsCount = qNameRef.otherBindings == null ? 0 : qNameRef.otherBindings.length;\t\t\t", "-\t\t\tlastIndex -= otherBindingsCount + 1;", "+\t\t\tlastIndex -= qNameRef.otherBindings == null ? 1 : qNameRef.otherBindings.length + 1;", "-\t\t\tif (binding instanceof ProblemBinding) {", "-\t\t\t\tProblemBinding pbBinding = (ProblemBinding) binding;", "-\t\t\t\ttypeBinding = pbBinding.searchType; // second chance with recorded type so far", "-\t\t\t\tchar[] partialQualifiedName = pbBinding.name;", "-\t\t\t\tlastIndex = CharOperation.occurencesOf('.', partialQualifiedName) - 1; // index of last bound token is one before the pb token", "-\t\t\t} else {", "-\t\t\t\ttypeBinding = (TypeBinding)binding;", "-\t\t\t}", "+\t\t\tif (binding instanceof TypeBinding)", "+\t\t\t\ttypeBinding = (TypeBinding) binding;", "-\t\tcase BindingIds.TYPE | BindingIds.VARIABLE :\t\t\t\t\t\t", "-\t\t\tif (binding instanceof ProblemBinding) {", "-\t\t\t\tProblemBinding pbBinding = (ProblemBinding) binding;", "-\t\t\t\ttypeBinding = pbBinding.searchType; // second chance with recorded type so far", "-\t\t\t\tchar[] partialQualifiedName = pbBinding.name;", "-\t\t\t\tlastIndex = CharOperation.occurencesOf('.', partialQualifiedName) - 1; // index of last bound token is one before the pb token", "+\t\tcase BindingIds.TYPE | BindingIds.VARIABLE :", "+\t\t\tif (binding instanceof ProblemReferenceBinding) {", "+\t\t\t\ttypeBinding = (TypeBinding) binding;", "+\t\t\t} else if (binding instanceof ProblemFieldBinding) {", "+\t\t\t\ttypeBinding = qNameRef.actualReceiverType;", "+\t\t\t\tlastIndex -= qNameRef.otherBindings == null ? 1 : qNameRef.otherBindings.length + 1;", "+\t\t\t} else if (binding instanceof ProblemBinding) {", "+\t\t\t\ttypeBinding = ((ProblemBinding) binding).searchType;", "-\t\t\tbreak;", "+\t\t\tbreak;\t\t\t\t\t", "+\t}", "+\tif (typeBinding instanceof ProblemReferenceBinding) {", "+\t\tProblemReferenceBinding pbBinding = (ProblemReferenceBinding) typeBinding;", "+\t\ttypeBinding = pbBinding.original;", "+\t\tlastIndex = pbBinding.compoundName.length - 1;", "-\twhile (typeBinding != null && lastIndex >= 0) {", "-\t\tif (matchesName(this.pattern.simpleName, nameTokens[lastIndex--])) {", "-\t\t\tint level = resolveLevelForType(this.pattern.simpleName, this.pattern.qualification, typeBinding);", "-\t\t\tif (level != IMPOSSIBLE_MATCH) {", "-\t\t\t\ttokens = new char[lastIndex+2][];", "-\t\t\t\tSystem.arraycopy(nameTokens, 0, tokens, 0, lastIndex+2);", "-\t\t\t\tbreak;", "+\tif (typeBinding instanceof ReferenceBinding) {", "+\t\tReferenceBinding refBinding = (ReferenceBinding) typeBinding; ", "+\t\twhile (refBinding != null && lastIndex >= 0) {", "+\t\t\tif (resolveLevelForType(this.pattern.simpleName, this.pattern.qualification, refBinding) == ACCURATE_MATCH) {", "+\t\t\t\tlong[] positions = qNameRef.sourcePositions;", "+\t\t\t\tlocator.report(positions[this.pattern.qualification == null ? lastIndex : 0], positions[lastIndex], element, accuracy);", "+\t\t\t\treturn;", "-\t\t}", "-\t\ttypeBinding = typeBinding instanceof ReferenceBinding", "-\t\t\t? ((ReferenceBinding)typeBinding).enclosingType()", "-\t\t\t: null;", "-\t} ", "-\tif (tokens == null) {", "-\t\ttokens = binding == null || binding instanceof ProblemBinding", "-\t\t\t? new char[][] {this.pattern.simpleName}", "-\t\t\t: qNameRef.tokens;", "-\t\tif (!this.isCaseSensitive) {", "-\t\t\tint length = tokens.length;", "-\t\t\tchar[][] lowerCaseTokens = new char[length][];", "-\t\t\tfor (int i = 0; i < length; i++) {", "-\t\t\t\tchar[] token = tokens[i];", "-\t\t\t\tlowerCaseTokens[i] = CharOperation.toLowerCase(token);", "-\t\t\t}", "-\t\t\ttokens = lowerCaseTokens;", "+\t\t\tlastIndex--;", "+\t\t\trefBinding = refBinding.enclosingType();", "-\tlocator.reportAccurateReference(qNameRef.sourceStart, qNameRef.sourceEnd, tokens, element, accuracy);", "+\tlocator.reportAccurateReference(qNameRef.sourceStart, qNameRef.sourceEnd, this.pattern.simpleName, element, accuracy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7eb52b298a31e852dd202b415abc6147", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "309be04a155363e9f398875d6734d13ff5334b6c", "commitAfterChange": "6b58c2063066f4462a27490669b336c2263fae86", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(AstNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\tchar[][] tokens = null;", "+\tlong[] positions = null;", "+\tint last = -1;", "-\t\tif (importRef.onDemand) {", "-\t\t\ttokens = importRef.tokens;", "-\t\t} else {", "-\t\t\tint length = importRef.tokens.length - 1;", "-\t\t\ttokens = new char[length][];", "-\t\t\tSystem.arraycopy(importRef.tokens, 0, tokens, 0, length);", "-\t\t}", "-\t} else if (reference instanceof QualifiedNameReference) {", "-\t\tQualifiedNameReference qNameRef = (QualifiedNameReference) reference;", "-\t\tBinding binding = qNameRef.binding;", "+\t\tpositions = importRef.sourcePositions;", "+\t\tlast = importRef.onDemand ? positions.length : positions.length - 1;", "+\t} else {", "-\t\tswitch (qNameRef.bits & AstNode.RestrictiveFlagMASK) {", "-\t\t\tcase BindingIds.FIELD : // reading a field", "-\t\t\t\ttypeBinding = qNameRef.actualReceiverType;", "-\t\t\t\tbreak;", "-\t\t\tcase BindingIds.TYPE : //=============only type ==============", "-\t\t\t\tif (binding instanceof ProblemBinding) {", "-\t\t\t\t\tProblemBinding pbBinding = (ProblemBinding) binding;", "-\t\t\t\t\ttypeBinding = pbBinding.searchType; // second chance with recorded type so far", "-\t\t\t\t} else {", "-\t\t\t\t\ttypeBinding = (TypeBinding) binding;", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase BindingIds.VARIABLE : //============unbound cases===========", "-\t\t\tcase BindingIds.TYPE | BindingIds.VARIABLE :\t\t\t\t\t\t", "-\t\t\t\tif (binding instanceof ProblemBinding) {", "-\t\t\t\t\tProblemBinding pbBinding = (ProblemBinding) binding;", "-\t\t\t\t\ttypeBinding = pbBinding.searchType; // second chance with recorded type so far", "-\t\t\t\t}", "-\t\t\t\tbreak;", "+\t\tif (reference instanceof QualifiedNameReference) {", "+\t\t\tQualifiedNameReference qNameRef = (QualifiedNameReference) reference;", "+\t\t\tpositions = qNameRef.sourcePositions;", "+\t\t\tswitch (qNameRef.bits & AstNode.RestrictiveFlagMASK) {", "+\t\t\t\tcase BindingIds.FIELD : // reading a field", "+\t\t\t\t\ttypeBinding = qNameRef.actualReceiverType;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase BindingIds.TYPE : //=============only type ==============", "+\t\t\t\t\tif (qNameRef.binding instanceof TypeBinding)", "+\t\t\t\t\t\ttypeBinding = (TypeBinding) qNameRef.binding;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase BindingIds.VARIABLE : //============unbound cases===========", "+\t\t\t\tcase BindingIds.TYPE | BindingIds.VARIABLE :", "+\t\t\t\t\tBinding binding = qNameRef.binding; ", "+\t\t\t\t\tif (binding instanceof TypeBinding) {", "+\t\t\t\t\t\ttypeBinding = (TypeBinding) binding;", "+\t\t\t\t\t} else if (binding instanceof ProblemFieldBinding) {", "+\t\t\t\t\t\ttypeBinding = qNameRef.actualReceiverType;", "+\t\t\t\t\t\tlast = qNameRef.tokens.length - (qNameRef.otherBindings == null ? 2 : qNameRef.otherBindings.length + 2);", "+\t\t\t\t\t} else if (binding instanceof ProblemBinding) {", "+\t\t\t\t\t\tProblemBinding pbBinding = (ProblemBinding) binding;", "+\t\t\t\t\t\ttypeBinding = pbBinding.searchType;", "+\t\t\t\t\t\tlast = CharOperation.occurencesOf('.', pbBinding.name);", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;\t\t\t\t\t", "+\t\t\t}", "+\t\t} else if (reference instanceof QualifiedTypeReference) {", "+\t\t\tQualifiedTypeReference qTypeRef = (QualifiedTypeReference) reference;", "+\t\t\tpositions = qTypeRef.sourcePositions;", "+\t\t\ttypeBinding = qTypeRef.resolvedType;", "-\t\tif (typeBinding instanceof ReferenceBinding) {", "-\t\t\tPackageBinding pkgBinding = ((ReferenceBinding) typeBinding).fPackage;", "-\t\t\tif (pkgBinding != null)", "-\t\t\t\ttokens = pkgBinding.compoundName;", "-\t\t} ", "-\t\tif (tokens == null)", "-\t\t\ttokens = qNameRef.tokens;", "-\t} else if (reference instanceof QualifiedTypeReference) {", "-\t\tQualifiedTypeReference qTypeRef = (QualifiedTypeReference) reference;", "-\t\tTypeBinding typeBinding = qTypeRef.resolvedType;", "-\t\t\ttypeBinding = ((ArrayBinding)typeBinding).leafComponentType;", "+\t\t\ttypeBinding = ((ArrayBinding) typeBinding).leafComponentType;", "+\t\tif (typeBinding instanceof ProblemReferenceBinding)", "+\t\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).original;", "-\t\t\t\ttokens = pkgBinding.compoundName;", "-\t\t} ", "-\t\tif (tokens == null)", "-\t\t\ttokens = qTypeRef.tokens;", "+\t\t\t\tlast = pkgBinding.compoundName.length;", "+\t\t}", "-\tif (tokens == null)", "-\t\ttokens = CharOperation.NO_CHAR_CHAR;", "-\tlocator.reportAccurateReference(reference.sourceStart, reference.sourceEnd, tokens, element, accuracy);", "+\tif (last == -1) {", "+\t\tlast = this.pattern.segments.length;", "+\t\tif (last > positions.length) last = positions.length;", "+\t}", "+\tlocator.report(positions[0], positions[last - 1], element, accuracy);"]}], "num": 36057}