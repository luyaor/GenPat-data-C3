{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f3be484c97cdacee3236ac1f3eab37ed", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17493fcd1294c47df8fa7403215f5051", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f595c3df6cbb40a33fa3de2980da6860a9a3730f", "commitAfterChange": "665fa70c145e3460af8c3efab89c50489feb17d0", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic static String getOption(String optionName)", "signatureAfterChange": " \tpublic static String getOption(String optionName)", "diff": ["-\t\t", "-\t\tif (CORE_ENCODING.equals(optionName)){", "-\t\t\treturn getEncoding();", "-\t\t}", "-\t\t// backward compatibility", "-\t\tif (COMPILER_PB_INVALID_IMPORT.equals(optionName)", "-\t\t\t\t|| COMPILER_PB_UNREACHABLE_CODE.equals(optionName)) {", "-\t\t\treturn ERROR;", "-\t\t}", "-\t\tString propertyName = optionName;", "-\t\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "-\t\tif (manager.optionNames.contains(propertyName)){", "-\t\t\tIPreferencesService service = Platform.getPreferencesService();", "-\t\t\tString value =  service.get(optionName, null, manager.preferencesLookup);", "-\t\t\treturn value==null ? null : value.trim();", "-\t\t}", "-\t\treturn null;", "+\t\treturn JavaModelManager.getJavaModelManager().getOption(optionName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "183f30fac79077a3b7d40121e460e74e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "7915a529d4dab8b70a0cdb9189fc342b9112ed8e", "commitAfterChange": "f28c28de6ed3d2e9e475bca36caf25c219a92533", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tReferenceBinding enclosingType = scope.enclosingReceiverType();", "-\t\tMethodBinding otherMethod = scope.getMethod(enclosingType.superclass(), this.selector, argumentTypes, this);", "-\t\tif (scope.checkAppropriate(this.binding, otherMethod, this)) {", "-\t\t\tReferenceBinding[] superInterfaces = enclosingType.superInterfaces();", "-\t\t\tif (superInterfaces != null) {", "-\t\t\t\tfor (int i = 0; i < superInterfaces.length; i++) {", "-\t\t\t\t\totherMethod = scope.getMethod(superInterfaces[i], this.selector, argumentTypes, this);", "-\t\t\t\t\tif (!scope.checkAppropriate(this.binding, otherMethod, this))", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t\tscope.checkAppropriateMethodAgainstSupers(this.selector, this.binding, argumentTypes, this);"]}], "num": 65252}