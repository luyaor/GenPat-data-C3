{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e7749f3eea31b8251b2b597e23060db", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "858a27ceb2b70ba1f71bf816564ce1fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Initializer.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printStatement(int indent, StringBuffer output) {", "+", "+\t\tif (modifiers != 0) {", "+\t\t\tprintIndent(indent, output);", "+\t\t\tprintModifiers(modifiers, output).append(\"{\\n\"); //$NON-NLS-1$", "+\t\t\tblock.printBody(indent, output);", "+\t\t\tprintIndent(indent, output).append('}'); ", "+\t\t\treturn output;", "+\t\t} else {", "+\t\t\treturn block.printStatement(indent, output);", "+\t\t}", "+\t}", "-", "-\tpublic String toString(int tab) {", "-", "-\t\tif (modifiers != 0) {", "-\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\tbuffer.append(tabString(tab));", "-\t\t\tbuffer.append(modifiersString(modifiers));", "-\t\t\tbuffer.append(\"{\\n\"); //$NON-NLS-1$", "-\t\t\tbuffer.append(block.toStringStatements(tab));", "-\t\t\tbuffer.append(tabString(tab));", "-\t\t\tbuffer.append(\"}\"); //$NON-NLS-1$", "-\t\t\treturn buffer.toString();", "-\t\t} else {", "-\t\t\treturn block.toString(tab);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9348ab729fb4962d0e746e11faf85e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptPlugin.java", "commitBeforeChange": "67568cf7908374a12b930ce4d634e4a484a346ae", "commitAfterChange": "7c614d1e063fcf9f7927d45e5d481818530396ac", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate void initDebugTracing()", "signatureAfterChange": " \t \tpublic void optionsChanged(DebugOptions options)", "diff": ["-\tprivate void initDebugTracing() {\t\t", "-\t\tString option = Platform.getDebugOption(APT_DEBUG_OPTION);", "-\t\tif(option != null) DEBUG = option.equalsIgnoreCase(\"true\") ; //$NON-NLS-1$\t\t", "-\t\toption = Platform.getDebugOption(APT_DEBUG_GFM_OPTION);", "-\t\tif(option != null) DEBUG_GFM = option.equalsIgnoreCase(\"true\") ; //$NON-NLS-1$\t\t", "-\t\toption = Platform.getDebugOption(APT_DEBUG_GFM_MAPS_OPTION);", "-\t\tif(option != null) DEBUG_GFM_MAPS = option.equalsIgnoreCase(\"true\") ; //$NON-NLS-1$\t\t", "+\tpublic void optionsChanged(DebugOptions options) {", "+\t\tDEBUG = options.getBooleanOption(APT_DEBUG_OPTION, false);", "+\t\tDEBUG_GFM = options.getBooleanOption(APT_DEBUG_GFM_OPTION, false);", "+\t\tDEBUG_GFM_MAPS = options.getBooleanOption(APT_DEBUG_GFM_MAPS_OPTION, false);", "+\t\tDEBUG_COMPILATION_ENV = options.getBooleanOption(APT_COMPILATION_ENV_OPTION, false);"]}], "num": 26905}