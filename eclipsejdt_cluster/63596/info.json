{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "92ac5781dd5a1e262825e53fea647b7a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "852cb4f55cd1727b5c110f295f40ef7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 29, "signatureBeforeChange": "\t \tpublic AccessRestriction getImportRestriction()", "signatureAfterChange": " \t \tprivate String getMessageTemplate()", "diff": ["+\t", "+\tprivate String getMessageTemplate() {", "+\t\tif (this.entryKind == CPE_PROJECT || this.entryKind == CPE_SOURCE) { // can be remote source entry when reconciling", "+\t\t\treturn org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.project\", \"{0}\", getPath().segment(0)); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t} else {", "+\t\t\tIPath libPath = getPath();", "+\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), libPath, false);", "+\t\t\tString pathString;", "+\t\t\tif (target instanceof java.io.File)", "+\t\t\t\tpathString = libPath.toOSString();", "+\t\t\telse", "+\t\t\t\tpathString = libPath.makeRelative().toString();", "+\t\t\treturn org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.library\", \"{0}\", pathString); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t}", "-\t */\t", "-\tpublic AccessRestriction getImportRestriction() {", "-\t\t", "-\t\tif (this.importRestriction == UNINIT_RESTRICTION) {", "-\t\t\tchar[][] accessibleFilesPatterns = getAccessRestrictionPatterns(this.accessibleFiles);", "-\t\t\tchar[][] nonAccessibleFilesPatterns = getAccessRestrictionPatterns(this.nonAccessibleFiles);", "-\t\t\tif (accessibleFilesPatterns == null && nonAccessibleFilesPatterns == null) {", "-\t\t\t\tthis.importRestriction = null;", "-\t\t\t} else {", "-\t\t\t\tString messageTemplate;", "-\t\t\t\tif (this.entryKind == CPE_PROJECT || this.entryKind == CPE_SOURCE) { // can be remote source entry when reconciling", "-\t\t\t\t\tmessageTemplate = org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.project\", \"{0}\", getPath().segment(0)); //$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t\t} else {", "-\t\t\t\t\tIPath libPath = getPath();", "-\t\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), libPath, false);", "-\t\t\t\t\tString pathString;", "-\t\t\t\t\tif (target instanceof java.io.File)", "-\t\t\t\t\t\tpathString = libPath.toOSString();", "-\t\t\t\t\telse", "-\t\t\t\t\t\tpathString = libPath.makeRelative().toString();", "-\t\t\t\t\tmessageTemplate = org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.library\", \"{0}\", pathString); //$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t\t}\t", "-\t\t\t\tthis.importRestriction = ", "-\t\t\t\t\tnew AccessRestriction(", "-\t\t\t\t\t\tmessageTemplate,", "-\t\t\t\t\t\taccessibleFilesPatterns, ", "-\t\t\t\t\t\tnonAccessibleFilesPatterns,", "-\t\t\t\t\t\tnull /* no further restriction */);", "-\t\t\t}", "-\t\t}", "-\t\treturn this.importRestriction;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0acaf8214e90db4eb995f54920fe7ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 21, "signatureBeforeChange": "\t \tpublic AccessRestriction getImportRestriction()", "signatureAfterChange": "\t \tpublic AccessRestriction getImportRestriction()", "diff": ["-\t\t\tchar[][] importIncludes = getAccessRestrictionPatterns(this.inclusionPatterns);", "-\t\t\tchar[][] importExcludes = getAccessRestrictionPatterns(this.exclusionPatterns);", "-\t\t\tif (importIncludes == null && importExcludes == null) {", "+\t\t\tchar[][] accessibleFilesPatterns = getAccessRestrictionPatterns(this.accessibleFiles);", "+\t\t\tchar[][] nonAccessibleFilesPatterns = getAccessRestrictionPatterns(this.nonAccessibleFiles);", "+\t\t\tif (accessibleFilesPatterns == null && nonAccessibleFilesPatterns == null) {", "-\t\t\t\tthis.importRestriction = new AccessRestriction(", "-\t\t\t\t\t\t\t\t\t(this.entryKind == CPE_PROJECT || this.entryKind == CPE_SOURCE) // can be remote source entry when reconciling", "-\t\t\t\t\t\t\t\t\t\t? org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.project\", \"{0}\", getPath().segment(0)) //$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t\t\t\t\t\t\t\t: org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.library\", \"{0}\", getPath().makeRelative().toOSString()), //$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t\t\t\t\t\t\timportIncludes, ", "-\t\t\t\t\t\t\t\t\timportExcludes,", "-\t\t\t\t\t\t\t\t\tnull /* no further restriction */);", "+\t\t\t\tString messageTemplate;", "+\t\t\t\tif (this.entryKind == CPE_PROJECT || this.entryKind == CPE_SOURCE) { // can be remote source entry when reconciling", "+\t\t\t\t\tmessageTemplate = org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.project\", \"{0}\", getPath().segment(0)); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t} else {", "+\t\t\t\t\tIPath libPath = getPath();", "+\t\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), libPath, false);", "+\t\t\t\t\tString pathString;", "+\t\t\t\t\tif (target instanceof java.io.File)", "+\t\t\t\t\t\tpathString = libPath.toOSString();", "+\t\t\t\t\telse", "+\t\t\t\t\t\tpathString = libPath.makeRelative().toString();", "+\t\t\t\t\tmessageTemplate = org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.library\", \"{0}\", pathString); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t}\t", "+\t\t\t\tthis.importRestriction = ", "+\t\t\t\t\tnew AccessRestriction(", "+\t\t\t\t\t\tmessageTemplate,", "+\t\t\t\t\t\taccessibleFilesPatterns, ", "+\t\t\t\t\t\tnonAccessibleFilesPatterns,", "+\t\t\t\t\t\tnull /* no further restriction */);"]}], "num": 63596}