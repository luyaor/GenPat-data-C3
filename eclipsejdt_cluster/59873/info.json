{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9e96f7aff33ea3e94f28575f088346d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "957596e48b96eb57d671382dc46a4557", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "44bb613cc5c3c46c068bd744b8bd3672d2dacb7a", "commitAfterChange": "3e29de302b9f16584da144bfb4192f62d3964b7a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r private void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": "\r private void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["-\t} else if ((concreteMethod.declaringClass == this.type.scope.getJavaLangObject()) && this.type.isInterface() ){\r", "-\t\t// no reason to compare Object's method against inherited interface methods\r", "-\t\treturn;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d15a356727787d18b237ffe0dfc1a583", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "e2422311047b85902980920dda1eeedf124d520c", "commitAfterChange": "c107fdebcaaafcbea0a28f68e9b229afba9f7c4f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding inheritedMethod, MethodBinding otherInheritedMethod)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding inheritedMethod, MethodBinding otherInheritedMethod)", "diff": ["-\t} else if (inheritedMethod.declaringClass.findSuperTypeOriginatingFrom(otherInheritedMethod.declaringClass) != null) {", "-\t\t// skip it if inheritedMethod is defined by a subtype of otherInheritedMethod declaringClass", "-\t\treturn;"]}], "num": 59873}