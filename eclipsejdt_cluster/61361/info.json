{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7014f6399ae069a9eaa6a602152f4891", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fe1084897ee2d99ae8b0e87a8994647", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "628cadf5744ab383e80afb2f9e63de19db722144", "commitAfterChange": "06412e4ebddd7aaa1f5bc2a2fbe06678982f22b4", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding otherVariable)", "signatureAfterChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "diff": ["-public void fieldHiding(FieldDeclaration fieldDecl, Binding otherVariable) {", "+public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable) {", "-\tif (otherVariable instanceof LocalVariableBinding) {", "+\tif (hiddenVariable instanceof LocalVariableBinding) {", "-\t} else if (otherVariable instanceof FieldBinding) {", "-\t\tFieldBinding otherField = (FieldBinding) otherVariable;", "+\t} else if (hiddenVariable instanceof FieldBinding) {", "+\t\tFieldBinding hiddenField = (FieldBinding) hiddenVariable;", "-\t\t\tnew String[] {new String(field.declaringClass.readableName()), new String(field.name) , new String(otherField.declaringClass.readableName())  },", "-\t\t\tnew String[] {new String(field.declaringClass.shortReadableName()), new String(field.name) , new String(otherField.declaringClass.shortReadableName()) },", "+\t\t\tnew String[] {new String(field.declaringClass.readableName()), new String(field.name) , new String(hiddenField.declaringClass.readableName())  },", "+\t\t\tnew String[] {new String(field.declaringClass.shortReadableName()), new String(field.name) , new String(hiddenField.declaringClass.shortReadableName()) },"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4b5b57dfbf75d4d15a64f39a5e478b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 353, "methodNumberAfterChange": 353, "signatureBeforeChange": " public void unsafeRawFieldAssignment(FieldBinding rawField, TypeBinding expressionType, ASTNode location)", "signatureAfterChange": " public void unsafeRawFieldAssignment(FieldBinding field, TypeBinding expressionType, ASTNode location)", "diff": ["-public void unsafeRawFieldAssignment(FieldBinding rawField, TypeBinding expressionType, ASTNode location) {", "+public void unsafeRawFieldAssignment(FieldBinding field, TypeBinding expressionType, ASTNode location) {", "-\t\t        new String(expressionType.readableName()), new String(rawField.name), new String(rawField.declaringClass.readableName()), new String(rawField.declaringClass.erasure().readableName()) },", "+\t\t        new String(expressionType.readableName()), new String(field.name), new String(field.declaringClass.readableName()), new String(field.declaringClass.erasure().readableName()) },", "-\t\t        new String(expressionType.shortReadableName()), new String(rawField.name), new String(rawField.declaringClass.shortReadableName()), new String(rawField.declaringClass.erasure().shortReadableName()) },", "-\t\tfieldSourceStart(location),", "-\t\tlocation.sourceEnd);    ", "+\t\t        new String(expressionType.shortReadableName()), new String(field.name), new String(field.declaringClass.shortReadableName()), new String(field.declaringClass.erasure().shortReadableName()) },", "+\t\tfieldSourceStart(field,location),", "+\t\tfieldSourceEnd(field, location)); "]}], "num": 61361}