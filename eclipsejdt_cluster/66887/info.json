{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba6b99fa69183fe71538e840fb2d4127", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10355b2b73ab40bce9e919c68b970605", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "bc58ceae1b3691095e4db8bfcb9f2192eeaf077d", "commitAfterChange": "df9c3a401cd78995716c690f400af3a4d95f0187", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tpublic TypeBinding getInstantiation(InferenceVariable inferenceVariable, LookupEnvironment environment)", "signatureAfterChange": "  \tpublic TypeBinding getInstantiation(InferenceVariable inferenceVariable, LookupEnvironment environment)", "diff": ["-\t\t\t// TODO consider null annotations if enabled", "+\t\t\tif (environment != null && environment.globalOptions.isAnnotationBasedNullAnalysisEnabled ", "+\t\t\t\t\t&& instantiation != null && (instantiation.tagBits & TagBits.AnnotationNullMASK) == 0)", "+\t\t\t\treturn three.combineAndUseNullHints(instantiation, inferenceVariable.nullHints, environment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e1f0e08e0eb8db6455365b6c395cbe1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceSubstitution.java", "commitBeforeChange": "ff2fe8665a4cc197831509bf8ec85eecac35f7cf", "commitAfterChange": "b035f7a4c467249c63cc869fd5f75e4bad8cf303", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "signatureAfterChange": " \tpublic TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "diff": ["-\t\t\t\tvariable.nullHints |= originalType.tagBits & TagBits.AnnotationNullMASK;", "+\t\t\t\tif (this.environment.globalOptions.isAnnotationBasedNullAnalysisEnabled && originalType.hasNullTypeAnnotations())", "+\t\t\t\t\treturn this.environment.createAnnotatedType(variable.withoutToplevelNullAnnotation(), originalType.getTypeAnnotations());"]}], "num": 66887}