{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "301b7fa5a5efa1bcbbdfe514f241ce14", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1611c126654a6d4b0b4ccca52afa141b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/ant/org/eclipse/jdt/core/ant/Jdtcom.java", "commitBeforeChange": "e0b8aee1afb079d50df6c15f0614bc13b3513ab2", "commitAfterChange": "1252ec76ddf159ce9f8102ab9609c61aaf077dfe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r \tpublic void execute() throws BuildException", "signatureAfterChange": "\r \r \tpublic void execute() throws BuildException", "diff": ["-\t\t\tthrow new BuildException(\"no\");\r", "+\t\t\tthrow new BuildException(Util.bind(\"jdtcom.source\"/*nonNLS*/));\r", "-\t\t\tthrow new BuildException(\"no\");\r", "+\t\t\tthrow new BuildException(Util.bind(\"jdtcom.destination\"/*nonNLS*/));\r", "-\t\t\t\t\tthrow new BuildException(\"no\");\r", "+\t\t\t\t\tthrow new BuildException(Util.bind(\"jdtcom.classpath\"/*nonNLS*/,pathElement.getAbsolutePath()));\r", "-\t\t\t\tthrow new BuildException(\"no\");\r", "+\t\t\t\tthrow new BuildException(Util.bind(\"jdtcom.sourcepath\"/*nonNLS*/,file.getAbsolutePath()));\r", "-\t\t\t\tthrow new BuildException(\"no\");\r", "+\t\t\t\tthrow new BuildException(Util.bind(\"jdtcom.sourcedir\"/*nonNLS*/,file.getAbsolutePath()));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5935352944110cdd67c59eb628c66f55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "f74715a51fe7f041c72bc80d27202c276ba5b2e3", "commitAfterChange": "f253b0c587ecac9d5c91cf7491378fa42651550b", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "\r public static String buildAllDirectoriesInto(String outputPath, String relativeFileName) throws IOException", "signatureAfterChange": "\r public static String buildAllDirectoriesInto(String outputPath, String relativeFileName) throws IOException", "diff": ["-\t\t\tSystem.out.println(\" The outDir is a file = \" + f.getAbsolutePath());\r", "-\t\t\tthrow new IOException(\"The outDir is a file not a directory.\");\r", "+\t\t\tSystem.out.println(Util.bind(\"output.isFile\"/*nonNLS*/,f.getAbsolutePath()));\r", "+\t\t\tthrow new IOException(Util.bind(\"output.isFileNotDirectory\"/*nonNLS*/));\r", "-\t\t\tSystem.out.println(\" The output dir name is = \" + f.getAbsolutePath());\r", "-\t\t\tthrow new IOException(\"The outDir is not a valid directory name. All the directories cannot be created.\");\r", "+\t\t\tSystem.out.println(Util.bind(\"output.dirName\"/*nonNLS*/,f.getAbsolutePath()));\r", "+\t\t\tthrow new IOException(Util.bind(\"output.notValidAll\"/*nonNLS*/));\r", "-\t\t\t\tSystem.out.println(\" file name = \" + f.getName());\r", "-\t\t\t\tthrow new IOException(\"The outDir is not a valid directory name. The directory cannot be created.\");\r", "+\t\t\t\tSystem.out.println(Util.bind(\"output.fileName\"/*nonNLS*/,f.getName()));\r", "+\t\t\t\tthrow new IOException(Util.bind(\"output.notValid\"/*nonNLS*/));\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3d3502c1204355d4753095ce495bca2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "03f3c13746669bd1d430c192f0dc18ee2005b656", "commitAfterChange": "d277694a03f34e7dd377268173ddbeb60edf1548", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r private void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r private void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\tout.println(\"Eclipse Java Compiler \"+ this.versionID + \", Copyright IBM Corp 2000\\n\");\r", "+\t\tout.println(Main.bind(\"configure.version\"/*nonNLS*/,this.versionID));\r", "+\t\tout.println();\r", "-\t\t\tout.println(\"no classpath defined (LF_CLASSPATH), using default directory instead\");\r", "+\t\t\tout.println(Main.bind(\"configure.noClasspath\"/*nonNLS*/));\r", "-\t\t\tthrow new InvalidInputException(\"incorrect classpath: \" + classpaths[i]);\r", "+\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incorrectClasspath\"/*nonNLS*/,classpaths[i]));\r", "-\t\tthrow new InvalidInputException(\"no source file specified\");\r", "+\t\tthrow new InvalidInputException(Main.bind(\"configure.noSource\"/*nonNLS*/));\r", "-\t\t\tthrow new InvalidInputException(\"cannot open .log file\");\r", "+\t\t\tthrow new InvalidInputException(Main.bind(\"configure.cannotOpenLog\"/*nonNLS*/));\r"]}], "num": 5726}