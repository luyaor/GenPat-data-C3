{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a7eb02112b85712ded48d37860db4140", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03600929deff1c697c8a0b2c65b5cb34", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "3a37234f0ba71a5d7b61bee8d86fa4d5af05a74d", "commitAfterChange": "dbc12f2e96aff2fb177fbb27756c940d44c7531c", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "\r public IJavaElement getWorkingCopy() throws JavaModelException", "signatureAfterChange": "\r public IJavaElement getWorkingCopy() throws JavaModelException", "diff": ["-\treturn this.getWorkingCopy(null, null);\r", "+\treturn this.getWorkingCopy(null, null, null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03bc555a5d029f77b22e43e259331207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "6dad91e4f298fff813aeb65b0b459a8698c68fdb", "commitAfterChange": "74ba53ab0437265c5342ec723f72d2aea81fd661", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic CompletionEngine( \t\tISearchableNameEnvironment nameEnvironment, \t\tICompletionRequestor requestor, \t\tMap settings)", "signatureAfterChange": " \tpublic CompletionEngine( \t\tISearchableNameEnvironment nameEnvironment, \t\tICompletionRequestor requestor, \t\tMap settings)", "diff": ["-\t\t\tnew Scanner(false, false, false, this.compilerOptions.sourceLevel >= CompilerOptions.JDK1_4);", "+\t\t\tnew Scanner(false /*comment*/, false /*whitespace*/, false /*nls*/, this.compilerOptions.sourceLevel >= CompilerOptions.JDK1_4 /*assert*/, null /*todo*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04fb0ffa735ee3a1fd961c7743cf156f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/Engine.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\t\t\t\ttrue,", "-\t\t\t\ttrue,", "+\t\t\t\ttrue, // need field and methods", "+\t\t\t\ttrue, // need member types", "+\t\t\t\tfalse, // no need for field initialization"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d1bac0c3a15550bfbe66e8fffdaa1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "commitAfterChange": "c0452100f2ed18d65cf0dd0efb6f9fc0ffa98156", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tMap customOptions)", "signatureAfterChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tMap customOptions)", "diff": ["-\t\t", "-\t\trunNegativeTest(testFiles, expectedProblemLog, classLib, shouldFlushOutputDirectory, customOptions, false, false, false);", "+\t\trunNegativeTest(", "+\t\t\ttestFiles, ", "+\t\t\texpectedProblemLog, ", "+\t\t\tclassLib, ", "+\t\t\tshouldFlushOutputDirectory, ", "+\t\t\tcustomOptions, ", "+\t\t\tfalse /* do not generate output */,", "+\t\t\tfalse /* do not show category */, ", "+\t\t\tfalse /* do not show warning token */, ", "+\t\t\tfalse  /* do not skip javac for this peculiar test */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07da1e19eb3b14da7623b8284544ce68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AnnotationDietRecoveryTest.java", "commitBeforeChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "commitAfterChange": "f21888ae6d4ceca17a4c2f2fe7153b358e68695f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedFullUnitToString, \tString expectedCompletionDietUnitToString,  \tString testName)", "signatureAfterChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedFullUnitToString, \tString expectedCompletionDietUnitToString,  \tString testName)", "diff": ["-\t\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())));", "+\t\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())),", "+\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08a0249144f9fb69bb318e13929740e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tprivate void updateClasspathMarkers(IResourceDelta delta, HashSet affectedProjects, Map preferredClasspaths, Map preferredOutputs)", "signatureAfterChange": " \tprivate void updateClasspathMarkers(IResourceDelta delta, HashSet affectedProjects, Map preferredClasspaths, Map preferredOutputs)", "diff": ["-\t\t\t\t\t\t\t\tjavaProject.getResolvedClasspath(true/*ignore unresolved entry*/, true/*generate marker on error*/);", "+\t\t\t\t\t\t\t\tjavaProject.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, \ttrue/*generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "090be2b23a94f16e1d1f0915a76447c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "69d976ecb2b4a910a78fb1eaf551e2775a0ff256", "commitAfterChange": "6e7138933a7b0a4bb6f562a7b0b5324e7f7fa604", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprivate GeneratedFileManager(final IProject project)", "signatureAfterChange": " \tprivate GeneratedFileManager(final IProject project)", "diff": ["-\t\t\t\tuptodate = isProjectClassPathUpToDate(_javaProject, folder.getFullPath(), null);", "+\t\t\t\tuptodate = isProjectClassPathUpToDate(_javaProject, null, folder.getFullPath(), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09ba701cb47ae8d082998b5bb2748ef5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b862c893c26e8ad45efc26cefb89d9ed8b8bc795", "commitAfterChange": "a41dabb1394f93c450316730395779f5d0c3b158", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 74, "signatureBeforeChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "signatureAfterChange": " \t \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "diff": ["-\t\t\t\t\tfindMemberTypes(typeName, enclosingSourceType, scope, currentType, false, false, false, proposeAllMemberTypes, nextTypeToIgnore, typesFound);", "+\t\t\t\t\tfindMemberTypes(typeName, enclosingSourceType, scope, currentType, false, false, false, false, proposeAllMemberTypes, nextTypeToIgnore, typesFound);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b8d626b20c41ea7963b0de6f45300ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tprivate static void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprivate static void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\t\t\t\t\t\t\t\t\tfalse, // dummy flag since reusing output location"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "131361737fb48209cdbb2b2afebd86db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\tthis.project.getPerProjectInfo().setClasspath(this.newRawClasspath, this.newOutputLocation, JavaModelStatus.VERIFIED_OK/*format is ok*/, null, null, null);", "+\t\t\tthis.project.getPerProjectInfo().setClasspath(this.newRawClasspath, this.newOutputLocation, JavaModelStatus.VERIFIED_OK/*format is ok*/, null, null, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "136b76651bd8b4cd0554252aaec32756", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \t\tpublic synchronized IClasspathEntry[] readAndCacheClasspath(JavaProject javaProject)", "signatureAfterChange": " \t\tpublic synchronized IClasspathEntry[] readAndCacheClasspath(JavaProject javaProject)", "diff": ["-\t\t\tsetClasspath(classpath, output, status, null, null, null);", "+\t\t\tsetClasspath(classpath, output, status, null, null, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15b0bb5998c0f7084e2dbd45bd9b4e35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "ccc3f585223a02209d9fb1de4b1dae325e3fd665", "commitAfterChange": "9a356484adb65f7cc29bbc7281d74cb6498e9713", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \r public NameEnvironment(IJavaProject javaProject)", "signatureAfterChange": "\r \r public NameEnvironment(IJavaProject javaProject)", "diff": ["-\t\tthis.classpathLocations = computeLocations(workspaceRoot, javaProject, outputFolderLocation, null, null);\r", "+\t\tthis.classpathLocations = computeLocations(workspaceRoot, javaProject, outputFolderLocation, null, null, true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18b09ae07dff0e0b9a766bcbe8a51945", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "60a879cb0c22ecc55e5e7e324d0812874d0e1429", "commitAfterChange": "3bae8053f75f55a3f3123765c3d4e0b44d894e21", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, String projectOutput) throws CoreException", "signatureAfterChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, String projectOutput) throws CoreException", "diff": ["-\t\t\tnull/*no source outputs*/", "+\t\t\tnull/*no source outputs*/,", "+\t\t\tnull/*no exclusion pattern*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f8d75e80c257ac0dd3ece2cdf0a2ff7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "084f4c75ee441cff88e4ef94e656b9ebf2194eb9", "commitAfterChange": "29d4533fe514133f4e391cf6f9a6753a587512b0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean assertMode, boolean recordLineSeparator)", "signatureAfterChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean assertMode, boolean recordLineSeparator)", "diff": ["-\t\tPublicScanner scanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/, assertMode ? ClassFileConstants.JDK1_4 : ClassFileConstants.JDK1_3/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/);", "+\t\tPublicScanner scanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/, assertMode ? ClassFileConstants.JDK1_4 : ClassFileConstants.JDK1_3/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fd964e1b9a1828e39d2637982cd1d6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "3aeda49982d529a7b3b4520a8ddfc77c62e6f6ba", "commitAfterChange": "756bb6bed26516f6a7f37d505e2052383d6cc457", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \t   \tpublic void resolve()", "signatureAfterChange": " \t   \tpublic void resolve()", "diff": ["-\t\t\tresolveAnnotations(this.annotations,  this.staticInitializerScope);", "+\t\t\tresolveAnnotations(this.staticInitializerScope, this.annotations, sourceType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235ea760d5a5ee8cc5ec20c6aa71c932", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void parseTypeMemberDeclarations( \tISourceType sourceType,  \tICompilationUnit sourceUnit,  \tint start,  \tint end,  \tboolean needReferenceInfo)", "signatureAfterChange": " public void parseTypeMemberDeclarations( \tISourceType sourceType,  \tICompilationUnit sourceUnit,  \tint start,  \tint end,  \tboolean needReferenceInfo)", "diff": ["-\t\t\t\tfalse,", "-\t\t\t\tfalse, ", "+\t\t\t\tfalse, // no need for field and methods", "+\t\t\t\tfalse, // no need for member types", "+\t\t\t\tfalse, // no need for field initialization"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25a37d6a2cbed035ea72709a95f01131", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ForeachStatementTest.java", "commitBeforeChange": "42ae643103bd935ac20f28c1d2bc4ad8f788a9fe", "commitAfterChange": "bd8b13f1c301621f6ba89f5b94dac0a88b80c5cc", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void test007()", "signatureAfterChange": " public void test007()", "diff": ["-\t\tcustomOptions);", "+\t\tcustomOptions,", "+\t\tnull/*no custom requestor*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26fc270aa4a4dfb1665f6da42baeef01", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "eead3352ceb339c6e7d1c285e537cdff0d79d4a6", "commitAfterChange": "939b7ac964d1a6475bfe424174f01e41241efab3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t \t \tpublic ASTConverter(boolean resolveBindings)", "signatureAfterChange": "\t \t \tpublic ASTConverter(boolean resolveBindings)", "diff": ["-\t\tscanner = new Scanner(true /*comment*/, false /*whitespace*/, false /*nls*/, false /*assert*/, null /*taskTags*/, null/*taskPriorities*/);", "+\t\tscanner = new Scanner(true /*comment*/, false /*whitespace*/, false /*nls*/, false /*assert*/, false /*strict comment*/, null /*taskTags*/, null/*taskPriorities*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29ab678267738775b0c6311a21abf6a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "commitAfterChange": "c0452100f2ed18d65cf0dd0efb6f9fc0ffa98156", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments)", "signatureAfterChange": " \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments)", "diff": ["-\t\t", "-\t\t\tnull /*no custom options*/,", "-\t\t\tnull /*no custom requestor*/);", "+\t\t\tnull /* no custom options*/,", "+\t\t\tnull /* no custom requestor*/,", "+\t\t  \tfalse /* do not skip javac for this peculiar test */); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2faa6ddb279e96e900e7a3dd3f3ba476", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "140d5208fae36b92de255acde8dd7fe538818d2b", "commitAfterChange": "14842eb62da3e660c575d5193079230a000aa781", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] entries,\r \t\tIPath outputLocation,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] entries,\r \t\tIPath outputLocation,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "diff": ["-\t\tsetRawClasspath(entries, outputLocation, monitor, true, true, getExpandedClasspath(true));\r", "+\t\tsetRawClasspath(entries, outputLocation, monitor, true, true, getExpandedClasspath(true), true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32a657b143f44226503f5a3b5a172fa6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tprotected void addLibrary(String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected void addLibrary(String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "diff": ["-\t\taddLibrary(this.currentProject, jarName, sourceZipName, pathAndContents, null/*no non-Java resources*/, null, null, compliance);", "+\t\taddLibrary(this.currentProject, jarName, sourceZipName, pathAndContents, null/*no non-Java resources*/, null, null, compliance, null);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "35c10878ff90e00a5098354feda24e37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitVisitor.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\t\t\t\ttrue,", "-\t\t\t\ttrue,", "+\t\t\t\ttrue, // need field and methods", "+\t\t\t\ttrue, // need member types", "+\t\t\t\tfalse, // no need for field initialization"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "372ed51652f51bae94839c56bdbdc555", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/InclusionPatternsTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void setUp() throws Exception", "signatureAfterChange": " protected void setUp() throws Exception", "diff": ["-\tthis.project = createJavaProject( \"P\", new String[] {\"src\"}, new String[] {}, new String[] {}, new boolean[] {}, \"bin\", new String[] {\"bin\"}, new String[][] {new String[] {}}, new String[][] {new String[] {\"**\"}});", "+\tthis.project = createJavaProject( \"P\", new String[] {\"src\"}, new String[] {}, new String[] {}, new boolean[] {}, \"bin\", new String[] {\"bin\"}, new String[][] {new String[] {}}, new String[][] {new String[] {\"**\"}}, \"1.4\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "39e46dffc7d283fd3cedc88aee30051d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, boolean[] exportedProject, String projectOutput) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, boolean[] exportedProject, String projectOutput) throws CoreException", "diff": ["-\t\t\t\tnull/*no exclusion pattern*/", "+\t\t\t\tnull/*no exclusion pattern*/,", "+\t\t\t\t\"1.4\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d7cc3a16cc113a63096527b09bfec49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7336215b569e42bf0d7946c272b0da8ff71d12fb", "commitAfterChange": "e29082e6108e43f171cfe9fae0a56914a1f2ec3e", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \t \tprivate void completionOnSingleNameReference(ASTNode astNode, ASTNode astNodeParent, Scope scope, \t\t\tboolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate void completionOnSingleNameReference(ASTNode astNode, ASTNode astNodeParent, Scope scope, \t\t\tboolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords, false, false);", "+\t\t\t\t\tfindKeywords(this.completionToken, singleNameReference.possibleKeywords, false, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e0f48d3b85a8c85c631b13ec6e84e09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFile.java", "commitBeforeChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "commitAfterChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void codeComplete(int offset, CompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " public void codeComplete(int offset, CompletionRequestor requestor, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\tcodeComplete(cu, cu, offset, requestor, owner);", "+\t\tcodeComplete(cu, cu, offset, requestor, owner, null/*extended context isn't computed*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3eff016696a0095e0d23013235b31d09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a111700f27f629c06c29b26fb692229488b72d4a", "commitAfterChange": "c5f61e95813074aefaec195bd95f86eeca45b4ca", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, String projectOutput) throws CoreException", "signatureAfterChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, String projectOutput) throws CoreException", "diff": ["+\t\t\tnull/*no exported project*/, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4090c1413292bd549766545dfc6f78cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/Util.java", "commitBeforeChange": "bdd2ddc06125eff9d34246fb7941b569e87e3115", "commitAfterChange": "600ba421e993a3511db7b319a6d0197d8fd20d42", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tpublic static void collectRunningVMBootclasspath(List bootclasspaths)", "signatureAfterChange": "  \tpublic static void collectRunningVMBootclasspath(List bootclasspaths)", "diff": ["-\t\t\tFileSystem.Classpath currentClasspath = FileSystem.getClasspath(filePath, null, null);", "+\t\t\tFileSystem.Classpath currentClasspath = FileSystem.getClasspath(filePath, null, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "454e26cdbc79eca4d189770204aaa14f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a111700f27f629c06c29b26fb692229488b72d4a", "commitAfterChange": "c5f61e95813074aefaec195bd95f86eeca45b4ca", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String output, String[] sourceOutputs) throws CoreException", "signatureAfterChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String output, String[] sourceOutputs) throws CoreException", "diff": ["+\t\t\tnull/*no project*/, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45f440f52fbb65885c89058916905918", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "14369aade824a8ea9cd172f06aeb63b163bb9bf0", "commitAfterChange": "76049c710d8a15447cdfbafce1296b7824e89c76", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic Answer findType(String typeName, String packageName, boolean partialMatch, int acceptFlags, boolean checkRestrictions)", "signatureAfterChange": " \tpublic Answer findType(String typeName, String packageName, boolean partialMatch, int acceptFlags, boolean checkRestrictions)", "diff": ["+\t\t\tnull,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4608783f7b0cb77ef42b68a88c794523", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/AbstractCompletionTest.java", "commitBeforeChange": "e744df81d5a75862a1248ebae17e3b809dcaf082", "commitAfterChange": "ce780b6a043756608c1c372ebd7be3aca7ee52d2", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void checkMethodParse( \t\tchar[] source,  \t\tint cursorLocation,  \t\tString expectedCompletion,  \t\tString expectedUnitToString,  \t\tString expectedCompletionIdentifier,  \t\tString expectedReplacedSource,  \t\tString testName)", "signatureAfterChange": " public void checkMethodParse( \t\tchar[] source,  \t\tint cursorLocation,  \t\tString expectedCompletion,  \t\tString expectedUnitToString,  \t\tString expectedCompletionIdentifier,  \t\tString expectedReplacedSource,  \t\tString testName)", "diff": ["-\t\texpectedCompletion, ", "+\t\texpectedCompletion,", "+\t\tnull,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "46981ae71fdcbc64f1488267c051db3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionScanner.java", "commitBeforeChange": "eead3352ceb339c6e7d1c285e537cdff0d79d4a6", "commitAfterChange": "939b7ac964d1a6475bfe424174f01e41241efab3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public CompletionScanner(boolean assertMode)", "signatureAfterChange": " public CompletionScanner(boolean assertMode)", "diff": ["-\tsuper(false /*comment*/, false /*whitespace*/, false /*nls*/, assertMode /*assert*/, null /*taskTags*/, null/*taskPriorities*/);", "+\tsuper(", "+\t\tfalse /*comment*/, ", "+\t\tfalse /*whitespace*/, ", "+\t\tfalse /*nls*/, ", "+\t\tassertMode /*assert*/, ", "+\t\tfalse /*strict comment*/, // should never need to be on", "+\t\tnull /*taskTags*/, ", "+\t\tnull/*taskPriorities*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4839b18c09e925dbb2a86a1059fa747e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsMassiveTests.java", "commitBeforeChange": "635645f64cc3986d85427716b6b1431b69a73db1", "commitAfterChange": "52bf936fc576c8beae0884d140c2c4a36e852ace", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  void compareFormattedSource() throws IOException, Exception", "signatureAfterChange": "  void compareFormattedSource() throws IOException, Exception", "diff": ["-\t\tString actualResult = runFormatter(codeFormatter(), source, CodeFormatter.K_COMPILATION_UNIT | CodeFormatter.F_INCLUDE_COMMENTS, 0, 0, source.length(), null);", "+\t\tString actualResult = runFormatter(codeFormatter(), source, CodeFormatter.K_COMPILATION_UNIT | CodeFormatter.F_INCLUDE_COMMENTS, 0, 0, source.length(), null, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d6a23b278f1e5450cb734036c8622b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "084f4c75ee441cff88e4ef94e656b9ebf2194eb9", "commitAfterChange": "29d4533fe514133f4e391cf6f9a6753a587512b0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean recordLineSeparator, String sourceLevel)", "signatureAfterChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean recordLineSeparator, String sourceLevel)", "diff": ["-\t\tscanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/,level /*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/);", "+\t\tscanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/,level /*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f1f0f10082e6514f61fd16fa607bbdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalJavaProject.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ExternalJavaProject(IClasspathEntry[] rawClasspath)", "signatureAfterChange": "  \tpublic ExternalJavaProject(IClasspathEntry[] rawClasspath)", "diff": ["-\t\t\tgetPerProjectInfo().setClasspath(rawClasspath, defaultOutputLocation(), JavaModelStatus.VERIFIED_OK/*no .classpath format problem*/, null/*no resolved claspath*/, null/*no reverse map*/, null/*no resolved status*/);", "+\t\t\tgetPerProjectInfo().setClasspath(rawClasspath, defaultOutputLocation(), JavaModelStatus.VERIFIED_OK/*no .classpath format problem*/, null/*no resolved claspath*/, null/*no reverse map*/, null/*no resolve entry map*/, null/*no resolved status*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f5a6b71d6bacba99fb48dcc9bb1f74c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "140d5208fae36b92de255acde8dd7fe538818d2b", "commitAfterChange": "14842eb62da3e660c575d5193079230a000aa781", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] entries,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void setRawClasspath(\r \t\tIClasspathEntry[] entries,\r \t\tIProgressMonitor monitor)\r \t\tthrows JavaModelException", "diff": ["-\t\tsetRawClasspath(entries, SetClasspathOperation.ReuseOutputLocation, monitor, true, true, getExpandedClasspath(true));\r", "+\t\tsetRawClasspath(entries, SetClasspathOperation.ReuseOutputLocation, monitor, true, true, getExpandedClasspath(true), true);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f97edbc3cc7db99a09a4cf62f6029ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "diff": ["-\t\taddLibrary(javaProject, jarName, sourceZipName, pathAndContents, null, null, compliance);", "+\t\taddLibrary(javaProject, jarName, sourceZipName, pathAndContents, null/*no non-Java resources*/, null, null, compliance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5126a30d09a7442d36fd3e5cab274fc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "8f261bb6c49278e86707910a4be5450c713c940a", "commitAfterChange": "b5977e771dcaa856815c805c4cdc6cf2a2c18650", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-\t\tthis.scope.checkUnclosedCloseables(flowInfo, null/*don't report against a specific location*/, null);", "+\t\tthis.scope.checkUnclosedCloseables(flowInfo, null, null/*don't report against a specific location*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "537168152ee31e149c9fd6cefa05ab29", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "38f6b373c5a9013946ee85fd40478f7474f23c8b", "commitAfterChange": "735ec08d01cb739d2750c79098bb1ec5f311fb83", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": "  \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "signatureAfterChange": "  \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "diff": ["-\t\t\t\t\t\ttrue);", "+\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56fb90423e06b395c6a5848e0fd7c875", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a111700f27f629c06c29b26fb692229488b72d4a", "commitAfterChange": "c5f61e95813074aefaec195bd95f86eeca45b4ca", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String output) throws CoreException", "signatureAfterChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String output) throws CoreException", "diff": ["+\t\t\tnull/*no project*/, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "571c5af1b0141878fc8970bbcfc32734", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsTests.java", "commitBeforeChange": "635645f64cc3986d85427716b6b1431b69a73db1", "commitAfterChange": "52bf936fc576c8beae0884d140c2c4a36e852ace", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": "  void compareFormattedSource(ICompilationUnit compilationUnit) throws JavaModelException", "signatureAfterChange": "  void compareFormattedSource(ICompilationUnit compilationUnit) throws JavaModelException", "diff": ["-\tString actualResult = runFormatter(codeFormatter, source, CodeFormatter.K_COMPILATION_UNIT | CodeFormatter.F_INCLUDE_COMMENTS, 0, 0, source.length(), null);", "+\tString actualResult = runFormatter(codeFormatter, source, CodeFormatter.K_COMPILATION_UNIT | CodeFormatter.F_INCLUDE_COMMENTS, 0, 0, source.length(), null, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5970604184c6de67734dabc350dfafc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public Scanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities, \tboolean isTaskCaseSensitive)", "signatureAfterChange": "  public Scanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities, \tboolean isTaskCaseSensitive)", "diff": ["-\t\tisTaskCaseSensitive);", "+\t\tisTaskCaseSensitive,", "+\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d510095f35fe3b9456d2191c36ad4d4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "0de5167791884524f72d9d44c10f0e243af65d00", "commitAfterChange": "07ab76f69fbeeb2f2fd54cdf3d01ee69344b9ae0", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic static void parse(ICompilationUnit[] compilationUnits, ASTRequestor astRequestor, int apiLevel, Map options, int flags, IProgressMonitor monitor)", "signatureAfterChange": "  \tpublic static void parse(ICompilationUnit[] compilationUnits, ASTRequestor astRequestor, int apiLevel, Map options, int flags, IProgressMonitor monitor)", "diff": ["-\t\t\t\tCompilationUnit node = convert(compilationUnitDeclaration, parser.scanner.getSource(), apiLevel, options, false/*don't resolve binding*/, null/*no owner needed*/, null/*no binding table needed*/, flags /* flags */, monitor);", "+\t\t\t\tCompilationUnit node = convert(compilationUnitDeclaration, parser.scanner.getSource(), apiLevel, options, false/*don't resolve binding*/, null/*no owner needed*/, null/*no binding table needed*/, flags /* flags */, monitor, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5dee70cdc2cfc0d82e73adf285144ab9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7336215b569e42bf0d7946c272b0da8ff71d12fb", "commitAfterChange": "e29082e6108e43f171cfe9fae0a56914a1f2ec3e", "methodNumberBeforeChange": 165, "methodNumberAfterChange": 165, "signatureBeforeChange": " \tprivate void findKeywordsForMember(char[] token, int modifiers)", "signatureAfterChange": " \tprivate void findKeywordsForMember(char[] token, int modifiers)", "diff": ["-\t\tfindKeywords(token, keywords, false, false);", "+\t\tfindKeywords(token, keywords, false, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f8343d9089310c3dcd8b0055cfccef8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "0aee0da8dedb4337034c2218c8361a59d0d8fa97", "commitAfterChange": "9687350fee055f775aa6db78ace631e357b68877", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "signatureAfterChange": "\r \tprotected void updateAffectedProjects(IPath prerequisiteProjectPath)", "diff": ["-\t\t\t\t\t\t\t\tfalse); // no further cycle check\r", "+\t\t\t\t\t\t\t\tfalse, // no further cycle check\r", "+\t\t\t\t\t\t\t\tfalse); // updating only - no validation\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6187f8c4a665ca54bd73a5591ef894ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic static IClasspathEntry newContainerEntry( \t\t\tIPath containerPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newContainerEntry( \t\t\tIPath containerPath, \t\t\tIAccessRule[] accessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "diff": ["+\t\t\tnull, // external annotation path"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bb6e74be7bdd86789c74206db7907b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "9156e33be70429042b1d72217c4197f996fdfb3a", "commitAfterChange": "0bbc1f10f38c090526549c38a7d30ff164b71a76", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic AST(Map options)", "signatureAfterChange": " \tpublic AST(Map options)", "diff": ["-\t\t\tthis.scanner = new Scanner(false, false, false, true, null);", "+\t\t\tthis.scanner = new Scanner(false, false, false, true, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fc8c766121f55e8054d2a8b2ac9b390", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "55c747d0a8aaf13e7d70753235bf6ee4885d2fa8", "commitAfterChange": "f72032f192993f6a000c445c6ab6a878ffda160a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r \tprivate void findFieldsAndMethods(\r \t\tchar[] token,\r \t\tTypeBinding receiverType,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "signatureAfterChange": "\r \tprivate void findFieldsAndMethods(\r \t\tchar[] token,\r \t\tTypeBinding receiverType,\r \t\tScope scope,\r \t\tInvocationSite invocationSite,\r \t\tScope invocationScope)", "diff": ["-\r", "+\r", "+\t\t\tfalse,\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71dac921c1142205df7967c788746a13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveElementsTests.java", "commitBeforeChange": "fda975d98b069f678ae89a663957463bb7bd4088", "commitAfterChange": "2e99c72cc03690dcb30e61cdafeb829a4f1ada2f", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": " public void testMoveMethodsWithCancel() throws CoreException", "signatureAfterChange": " public void testMoveMethodsWithCancel() throws CoreException", "diff": ["-\t\tmovePositive(typeSource.getMethods(), new IJavaElement[] {typeDest}, null, null, false, monitor);", "+\t\tmovePositive(typeSource.getMethods(), new IJavaElement[] {typeDest}, null, null, false, true, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7239f577d18209ba77924b6faaba7875", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "c458ad2d505b6f4a7e2ec3bba3954504b01472bd", "commitAfterChange": "f802d6fc991463cb62d45c1ee5e011116f9ae063", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, boolean[] exportedProject, String projectOutput) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, boolean[] exportedProject, String projectOutput) throws CoreException", "diff": ["+\t\t\t\tnull/*no inclusion pattern*/,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74dc933545296a867665931a43e565ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "14369aade824a8ea9cd172f06aeb63b163bb9bf0", "commitAfterChange": "76049c710d8a15447cdfbafce1296b7824e89c76", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic IType findType(String packageName, String typeQualifiedName, WorkingCopyOwner owner) throws JavaModelException", "signatureAfterChange": " \tpublic IType findType(String packageName, String typeQualifiedName, WorkingCopyOwner owner) throws JavaModelException", "diff": ["-\t\t\tlookup,", "-\t\t\tfalse, // do not consider secondary types", "+\t\t\tnull,", "+\t\t\tlookup, // do not consider secondary types", "+\t\t\tfalse,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75fe2c36b95c91741778d470d821f85e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "3f513a524299babe8e8187ba844f5588920937db", "commitAfterChange": "c17d493078a2c5dda9d1eb1299696eeeaa1846c4", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public static void searchAllPossibleSubTypes( \tIType type, \tIJavaSearchScope scope, \tfinal Map binariesFromIndexMatches, \tfinal IPathRequestor pathRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)", "signatureAfterChange": "  public static void searchAllPossibleSubTypes( \tIType type, \tIJavaSearchScope scope, \tfinal Map binariesFromIndexMatches, \tfinal IPathRequestor pathRequestor, \tint waitingPolicy, \tIProgressMonitor progressMonitor)", "diff": ["-\tSuperTypeReferencePattern pattern = new SuperTypeReferencePattern(null, null, SearchPattern.R_EXACT_MATCH | SearchPattern.R_CASE_SENSITIVE);", "+\tSuperTypeReferencePattern pattern =", "+\t\tnew SuperTypeReferencePattern(null, null, false, SearchPattern.R_EXACT_MATCH | SearchPattern.R_CASE_SENSITIVE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76e976f7b79d40fd651546ea8d01e6ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a7e924b1651a1b9026ccc6590ce8e03365836a1b", "commitAfterChange": "d3da1d109c57a90a2bd8342736abf401463d58e5", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\t\t\t\t\tnull, null); ", "+\t\t\t\t\t\t\t\t\tnull, false, null); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78b5050cb84ce24c9ba694fd69304ad1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "7336215b569e42bf0d7946c272b0da8ff71d12fb", "commitAfterChange": "e29082e6108e43f171cfe9fae0a56914a1f2ec3e", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": " \t \tprivate void completionOnMemberAccess(ASTNode astNode, ASTNode enclosingNode, Binding qualifiedBinding, \t\t\tScope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate void completionOnMemberAccess(ASTNode astNode, ASTNode enclosingNode, Binding qualifiedBinding, \t\t\tScope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.NEW}, false, false);", "+\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.NEW}, false, false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7da635662773a8d86dd445219b909c4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tprotected void addLibrary(String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected void addLibrary(String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "diff": ["+\t}", "-\t\taddLibrary(this.currentProject, jarName, sourceZipName, pathAndContents, null, null, compliance);", "+\t\taddLibrary(this.currentProject, jarName, sourceZipName, pathAndContents, null/*no non-Java resources*/, null, null, compliance);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "845f86ac6e06605d99eea8065aed0963", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionNodeFound.java", "commitBeforeChange": "1b98b39107e931dc0893df1da7a410cad5cc4745", "commitAfterChange": "9635fd418f2d5b55fe3d3dc4ccb7797a5daf3a53", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public CompletionNodeFound()", "signatureAfterChange": " \t public CompletionNodeFound()", "diff": ["-\tthis(null, null, null); // we found a problem in the completion node", "+\tthis(null, null, null, false); // we found a problem in the completion node"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8768bc7444839b5e701ff2317c141804", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "6dad91e4f298fff813aeb65b0b459a8698c68fdb", "commitAfterChange": "74ba53ab0437265c5342ec723f72d2aea81fd661", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic AST(Map options)", "signatureAfterChange": " \tpublic AST(Map options)", "diff": ["-\t\t\tthis.scanner = new Scanner(false, false, false, true);", "+\t\t\tthis.scanner = new Scanner(false, false, false, true, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "893ddc231dcd2ec292f5bf608cbba820", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "42ae643103bd935ac20f28c1d2bc4ad8f788a9fe", "commitAfterChange": "bd8b13f1c301621f6ba89f5b94dac0a88b80c5cc", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": " \tpublic void test108()", "signatureAfterChange": " \tpublic void test108()", "diff": ["-\t\tcustomOptions);\t\t", "+\t\tcustomOptions,", "+\t\tnull/*no custom requestor*/);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bd1782a46d86dff4d4e887f31d280ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "5266b947a41bc87e33ca243d2f06d621c5b35d8c", "commitAfterChange": "5b0c62f0c85cc7c393266b52408d3bd3c14d0ef5", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \t\t \t\tpublic synchronized void resetResolvedClasspath()", "signatureAfterChange": " \t\t \t\tpublic synchronized void resetResolvedClasspath()", "diff": ["-\t\t\tsetClasspath(this.rawClasspath, this.outputLocation, this.rawClasspathStatus, null, null, null);", "+\t\t\tsetClasspath(this.rawClasspath, this.outputLocation, this.rawClasspathStatus, null, null, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "978217ffc54d25dd011da0078e37e216", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "42ae643103bd935ac20f28c1d2bc4ad8f788a9fe", "commitAfterChange": "bd8b13f1c301621f6ba89f5b94dac0a88b80c5cc", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": "\t\t\t \t \tpublic void test088()", "signatureAfterChange": "\t\t\t \t \tpublic void test088()", "diff": ["-\t\tcustomOptions);\t\t", "+\t\tcustomOptions,", "+\t\tnull/*no custom requestor*/);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "979adfdede893cad4cbd85cf98bb5764", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\t\t\t\ttrue,", "-\t\t\t\ttrue,", "+\t\t\t\ttrue, // need field and methods", "+\t\t\t\ttrue, // need member types", "+\t\t\t\ttrue, // need field initialization"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98cbcba81e619997aac4e9d77c92358f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/GenericDietRecoveryTest.java", "commitBeforeChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "commitAfterChange": "f21888ae6d4ceca17a4c2f2fe7153b358e68695f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString, \tString expectedFullUnitToString,  \tString expectedCompletionDietUnitToString, String testName)", "signatureAfterChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString, \tString expectedFullUnitToString,  \tString expectedCompletionDietUnitToString, String testName)", "diff": ["-\t\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())));", "+\t\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())),", "+\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9da393dcff62e6adbd6a35298b08a3f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "8f261bb6c49278e86707910a4be5450c713c940a", "commitAfterChange": "b5977e771dcaa856815c805c4cdc6cf2a2c18650", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tthis.scope.checkUnclosedCloseables(flowInfo, null/*don't report against a specific location*/, null);", "+\t\t\tthis.scope.checkUnclosedCloseables(flowInfo, null, null/*don't report against a specific location*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a19757c247e77b21ab5a3163cfbca08c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "42ae643103bd935ac20f28c1d2bc4ad8f788a9fe", "commitAfterChange": "bd8b13f1c301621f6ba89f5b94dac0a88b80c5cc", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 102, "signatureBeforeChange": "\t\t\t\t  \tpublic void test090()", "signatureAfterChange": "\t\t\t\t  \tpublic void test090()", "diff": ["-\t\tcustomOptions);\t\t", "+\t\tcustomOptions,", "+\t\tnull/*no custom requestor*/);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2748c06be43956c7df18b2ab21ff3ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "ff42431800359aed42a231c5c784b3764b5a7341", "commitAfterChange": "9814bb06776e7a6f85cab0ee3f3e1e621c043d2c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public PublicScanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities, \tboolean isTaskCaseSensitive)", "signatureAfterChange": "  public PublicScanner( \tboolean tokenizeComments,  \tboolean tokenizeWhiteSpace,  \tboolean checkNonExternalizedStringLiterals,  \tlong sourceLevel, \tchar[][] taskTags, \tchar[][] taskPriorities, \tboolean isTaskCaseSensitive)", "diff": ["-\t\tisTaskCaseSensitive);", "+\t\tisTaskCaseSensitive,", "+\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a84d87bc5ec3f16b7a128e48d1731f3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "795236662f4c72deb433448a946f4a36cebbebd0", "commitAfterChange": "b74a7b82d9221b86893a88ea5453e92534ffe51b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public void testAccessRestriction2() throws CoreException, IOException", "signatureAfterChange": " public void testAccessRestriction2() throws CoreException, IOException", "diff": ["+\t\t\tnull/*no non-Java resources*/,", "-\t\t\tnull,", "+\t\t\tnull, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a891cec16c3a19510afacfdc4305fca7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionScanner.java", "commitBeforeChange": "eead3352ceb339c6e7d1c285e537cdff0d79d4a6", "commitAfterChange": "939b7ac964d1a6475bfe424174f01e41241efab3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "   public SelectionScanner(boolean assertMode)", "signatureAfterChange": "   public SelectionScanner(boolean assertMode)", "diff": ["-\tsuper(false /*comment*/, false /*whitespace*/, false /*nls*/, assertMode /*assert*/, null /*taskTags*/, null/*taskPriorities*/);", "+\tsuper(false /*comment*/, false /*whitespace*/, false /*nls*/, assertMode /*assert*/, false /*strict comment*/, null /*taskTags*/, null/*taskPriorities*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa0fb602395679a7ecd2591d863a1a7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "54e21838d5d72a577ad5b83bd2ddcc9c60b93259", "commitAfterChange": "72465f40b09586b7077dc16c43e2ab23727eff60", "methodNumberBeforeChange": 94, "methodNumberAfterChange": 94, "signatureBeforeChange": " \tpublic void setRawClasspath( \t\tIClasspathEntry[] entries, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void setRawClasspath( \t\tIClasspathEntry[] entries, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\t\ttrue); // needValidation", "+\t\t\ttrue, // needValidation", "+\t\t\ttrue); // need to save"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab13ea4a95170eb013245195cfc7f3f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "c0a0c19db3e1c410023eabce30626d520ce59204", "commitAfterChange": "b522a66d284b0239a056370560676a12fc9ec458", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 29, "signatureBeforeChange": "\r \tpublic static IClasspathEntry newSourceEntry(IPath path)", "signatureAfterChange": "\r \tpublic static IClasspathEntry newSourceEntry(IPath path)", "diff": ["-\t\t\tnull);\r", "+\t\t\tnull,\r", "+\t\t\tfalse);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab37ea665b0d1221be6987e8dfdf1c6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "42ae643103bd935ac20f28c1d2bc4ad8f788a9fe", "commitAfterChange": "bd8b13f1c301621f6ba89f5b94dac0a88b80c5cc", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": "\t\t \t \tpublic void test087()", "signatureAfterChange": "\t\t \t \tpublic void test087()", "diff": ["-\t\tcustomOptions);\t\t", "+\t\tcustomOptions,", "+\t\tnull/*no custom requestor*/);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca1e6b349f2de9c83510b095714e738", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "54e21838d5d72a577ad5b83bd2ddcc9c60b93259", "commitAfterChange": "72465f40b09586b7077dc16c43e2ab23727eff60", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 92, "signatureBeforeChange": " \tpublic void setRawClasspath( \t\tIClasspathEntry[] entries, \t\tIPath outputLocation, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic void setRawClasspath( \t\tIClasspathEntry[] entries, \t\tIPath outputLocation, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\t\ttrue); // needValidation", "+\t\t\ttrue, // needValidation", "+\t\t\ttrue); // need to save"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af859a1abd18ce0dc75982349e6d3a56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] nonJavaResources, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String[] nonJavaResources, String compliance) throws CoreException, IOException", "diff": ["-\t\taddLibrary(javaProject, jarName, sourceZipName, pathAndContents, nonJavaResources, null, null, compliance);", "+\t\taddLibrary(javaProject, jarName, sourceZipName, pathAndContents, nonJavaResources, null, null, compliance, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af87b22635deedc5b27eb7281378b714", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "5daa85176eeb6c050d87a4b7fb3642fbff63325e", "commitAfterChange": "d4d7f9bf434c822e7818dfb358fa83468e120df6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprotected CompilationUnitProblemFinder( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean creatingAST)", "signatureAfterChange": " \tprotected CompilationUnitProblemFinder( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean creatingAST)", "diff": ["-\t\t\tcreatingAST/*store annotations in the bindings if creating ast*/", "+\t\t\tcreatingAST/*store annotations in the bindings if creating ast*/,", "+\t\t\tcreatingAST/*perform statements recovery during parse if creating ast*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2b68c6ed279c6d7532ee59232f8ee52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 313, "methodNumberAfterChange": 313, "signatureBeforeChange": " public void staticFieldAccessToNonStaticVariable(ASTNode location, FieldBinding field)", "signatureAfterChange": " public void staticFieldAccessToNonStaticVariable(ASTNode location, FieldBinding field)", "diff": ["-\t\tfieldSourceStart(location),", "+\t\tfieldSourceStart(field,location),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4ce82fc654daf9979e5a7638708f85a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "5ef1cc56a5d4ebd967cc5c7e76265ab37a605575", "commitAfterChange": "f5476e05b46ec9b70e1bb26b071f29e4868379b5", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic static IClasspathEntry newSourceEntry(IPath path, IPath[] inclusionPatterns, IPath[] exclusionPatterns, IPath specificOutputLocation, IClasspathAttribute[] extraAttributes)", "signatureAfterChange": " \tpublic static IClasspathEntry newSourceEntry(IPath path, IPath[] inclusionPatterns, IPath[] exclusionPatterns, IPath specificOutputLocation, IClasspathAttribute[] extraAttributes)", "diff": ["-\t\t\tClasspathEntry.EXCLUDE_NONE,", "-\t\t\textraAttributes); // non accessible files", "+\t\t\tClasspathEntry.EXCLUDE_NONE, // non accessible files", "+\t\t\tfalse, // no access restrictions to combine", "+\t\t\textraAttributes); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b5e639f662217460ad670e6809862a3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "60a879cb0c22ecc55e5e7e324d0812874d0e1429", "commitAfterChange": "3bae8053f75f55a3f3123765c3d4e0b44d894e21", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String output, String[] sourceOutputs) throws CoreException", "signatureAfterChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String output, String[] sourceOutputs) throws CoreException", "diff": ["-\t\t\tsourceOutputs);", "+\t\t\tsourceOutputs,", "+\t\t\tnull/*no exclusion pattern*/", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b744c5ae749da600d4312a898b650370", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "commitAfterChange": "0eced122edcf3b4bb706c54234938f891591dcdc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void testBatchCompilerNoWarning() throws IOException, CoreException", "signatureAfterChange": " \tpublic void testBatchCompilerNoWarning() throws IOException, CoreException", "diff": ["-\t\tcompile(JavaCore.PLUGIN_ID, \"-nowarn\", true/*log errors*/, null);", "+\t\tcompile(JavaCore.PLUGIN_ID, \"-nowarn\", null, true/*log errors*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7d6665bdaebe9a1e15ff29dd83f29bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "580481ae11bd0f856242b0cf44caa66107bf550d", "commitAfterChange": "d08e87c35b21123010227cf2729df51d820e4d50", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic static IClasspathEntry newProjectEntry( \t\t\tIPath path, \t\t\tIAccessRule[] accessRules, \t\t\tboolean combineAccessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newProjectEntry( \t\t\tIPath path, \t\t\tIAccessRule[] accessRules, \t\t\tboolean combineAccessRules, \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "diff": ["+\t\t\tnull, // external annotation path"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9ddc3341c10fd0796b39b27e85b8931", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "54e21838d5d72a577ad5b83bd2ddcc9c60b93259", "commitAfterChange": "72465f40b09586b7077dc16c43e2ab23727eff60", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate void reconcileClasspathFileUpdate(IResourceDelta delta, IFile file, JavaProject project)", "signatureAfterChange": " \tprivate void reconcileClasspathFileUpdate(IResourceDelta delta, IFile file, JavaProject project)", "diff": ["-\t\t\t\t\t\ttrue); // needValidation", "+\t\t\t\t\t\ttrue, // needValidation", "+\t\t\t\t\t\tfalse); // no need to save"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba9b615b50f8b5de94aad05d4c1bd977", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "signatureAfterChange": " \tprotected void addLibrary(IJavaProject javaProject, String jarName, String sourceZipName, String[] pathAndContents, String compliance) throws CoreException, IOException", "diff": ["-\t\taddLibrary(javaProject, jarName, sourceZipName, pathAndContents, null/*no non-Java resources*/, null, null, compliance);", "+\t\taddLibrary(javaProject, jarName, sourceZipName, pathAndContents, null/*no non-Java resources*/, null, null, compliance, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf7f041e09880c772236a3ffa8f4a8a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 72, "signatureBeforeChange": " public void duplicateInitializationOfBlankFinalField(FieldBinding field, Reference reference)", "signatureAfterChange": " public void duplicateInitializationOfBlankFinalField(FieldBinding field, Reference reference)", "diff": ["-\t\tfieldSourceStart(reference),", "+\t\tfieldSourceStart(field, reference),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c87350f8687b732e29710d944cdc838c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CopyMoveElementsTests.java", "commitBeforeChange": "fda975d98b069f678ae89a663957463bb7bd4088", "commitAfterChange": "2e99c72cc03690dcb30e61cdafeb829a4f1ada2f", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": " public void testMoveMethodsWithCancelInDifferentProject() throws CoreException", "signatureAfterChange": " public void testMoveMethodsWithCancelInDifferentProject() throws CoreException", "diff": ["-\t\t\tmovePositive(typeSource.getMethods(), new IJavaElement[] {typeDest}, null, null, false, monitor);", "+\t\t\tmovePositive(typeSource.getMethods(), new IJavaElement[] {typeDest}, null, null, false, true, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c94a773fef0d21106ae218f567896a3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "9156e33be70429042b1d72217c4197f996fdfb3a", "commitAfterChange": "0bbc1f10f38c090526549c38a7d30ff164b71a76", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\t \t \tpublic ASTConverter(boolean resolveBindings)", "signatureAfterChange": "\t \t \tpublic ASTConverter(boolean resolveBindings)", "diff": ["-\t\tscanner = new Scanner(true /*comment*/, false /*whitespace*/, false /*nls*/, false /*assert*/, null /*task*/);", "+\t\tscanner = new Scanner(true /*comment*/, false /*whitespace*/, false /*nls*/, false /*assert*/, null /*taskTags*/, null/*taskPriorities*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9cd2cce0e3a420165fa2bed64c8c0b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "9156e33be70429042b1d72217c4197f996fdfb3a", "commitAfterChange": "0bbc1f10f38c090526549c38a7d30ff164b71a76", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic CompletionEngine( \t\tISearchableNameEnvironment nameEnvironment, \t\tICompletionRequestor requestor, \t\tMap settings)", "signatureAfterChange": " \tpublic CompletionEngine( \t\tISearchableNameEnvironment nameEnvironment, \t\tICompletionRequestor requestor, \t\tMap settings)", "diff": ["-\t\t\tnew Scanner(false /*comment*/, false /*whitespace*/, false /*nls*/, this.compilerOptions.sourceLevel >= CompilerOptions.JDK1_4 /*assert*/, null /*task*/);", "+\t\t\tnew Scanner(false /*comment*/, false /*whitespace*/, false /*nls*/, this.compilerOptions.sourceLevel >= CompilerOptions.JDK1_4 /*assert*/, null /*taskTags*/, null/*taskPriorities*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca0b848a230e5c43b6a74547e0ff747b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\t\t\t\t\ttrue,", "-\t\t\t\t\ttrue,", "+\t\t\t\t\ttrue, // need field and methods", "+\t\t\t\t\ttrue, // need member types", "+\t\t\t\t\tfalse, // no need for field initialization"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ced35ec9c8931e1ec372f16ba31b4e38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "commitAfterChange": "de8aa9940086fe152901aa168536f30670945804", "methodNumberBeforeChange": 123, "methodNumberAfterChange": 125, "signatureBeforeChange": " public void generateSyntheticBodyForEnumValueOf(SyntheticMethodBinding methodBinding)", "signatureAfterChange": " public void generateSyntheticBodyForEnumValueOf(SyntheticMethodBinding methodBinding)", "diff": ["-\tgenerateClassLiteralAccessForType(declaringClass, null);", "+\tgenerateClassLiteralAccessForType(null, declaringClass, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d62af1073ba1ba0c1a016b0848829683", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "e4335f612db86aa6e739c4af37c0425a42aadb90", "commitAfterChange": "39f1f31087ae36f09c69d342ba90d4c2023a9fbb", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory, \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tJavacTestOptions javacTestOptions)", "signatureAfterChange": " \tprivate void runTest( \t\t\tboolean shouldFlushOutputDirectory, \t\t\tString[] testFiles, \t\t\tString[] classLibraries, \t\t\tMap customOptions, \t\t\tboolean performStatementsRecovery, \t\t\tICompilerRequestor customRequestor, \t\t\tboolean expectingCompilerErrors, \t\t\tString expectedCompilerLog, \t\t\tboolean forceExecution, \t\t\tString[] vmArguments, \t\t\tString expectedOutputString, \t\t\tString expectedErrorString, \t\t\tJavacTestOptions javacTestOptions)", "diff": ["+\t\t\tnull, // alternate compile errors", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b12225c660b448dc04d96f368d2c5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/DietRecoveryTest.java", "commitBeforeChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "commitAfterChange": "f21888ae6d4ceca17a4c2f2fe7153b358e68695f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString, \tString expectedFullUnitToString,  \tString expectedCompletionDietUnitToString, String testName)", "signatureAfterChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedDietPlusBodyPlusStatementsRecoveryUnitToString, \tString expectedFullUnitToString,  \tString expectedCompletionDietUnitToString, String testName)", "diff": ["-\t\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())));", "+\t\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())),", "+\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ded34c33b47d2be5b27f3180702b6911", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "8c8cd78ee7d91af397b355193b993289ef7f4454", "commitAfterChange": "dab69163a24dbd341ec146b21a1806a7799bbbc6", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void testAccessRestriction2() throws CoreException, IOException", "signatureAfterChange": " public void testAccessRestriction2() throws CoreException, IOException", "diff": ["-\t\t\t\"1.4\"", "+\t\t\t\"1.4\",", "+\t\t\tnull"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e057f4cb2433a4a6fe952bab039ed461", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b862c893c26e8ad45efc26cefb89d9ed8b8bc795", "commitAfterChange": "a41dabb1394f93c450316730395779f5d0c3b158", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "signatureAfterChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "diff": ["-\t\t\t\t\t\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords(), false);", "+\t\t\t\t\t\t\t\tfindKeywords(keyword.getToken(), keyword.getPossibleKeywords(), false, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e29dcc245e6be43a490c82a5bc2f4337", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/NonNullDefaultAwareTypeAnnotationWalker.java", "commitBeforeChange": "f69ff4a662bad4fd89b88d240101a9ac63e64955", "commitAfterChange": "7c493ed6b34d98f52ff4fc8520fcd8662e5ffd91", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic NonNullDefaultAwareTypeAnnotationWalker(int defaultNullness, LookupEnvironment environment)", "signatureAfterChange": " \tpublic NonNullDefaultAwareTypeAnnotationWalker(int defaultNullness, LookupEnvironment environment)", "diff": ["-\t\tthis(defaultNullness, getNonNullAnnotation(environment), false, false);", "+\t\tthis(defaultNullness, getNonNullAnnotation(environment), false, false, environment);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e35b8c31a9eddc8026d606ae1cdc7ab5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/EnumDietRecoveryTest.java", "commitBeforeChange": "271be052e104f1beefee4cd78039eca6ee6adb4f", "commitAfterChange": "f21888ae6d4ceca17a4c2f2fe7153b358e68695f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedFullUnitToString, \tString expectedCompletionDietUnitToString,  \tString testName)", "signatureAfterChange": "  public void checkParse( \tchar[] source,  \tString expectedDietUnitToString, \tString expectedDietPlusBodyUnitToString,\t \tString expectedFullUnitToString, \tString expectedCompletionDietUnitToString,  \tString testName)", "diff": ["-\t\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())));", "+\t\t\t\t\tnew DefaultProblemFactory(Locale.getDefault())),", "+\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5d4faf8df851b1369a1ef5877d8413", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] elementsToRefresh, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] elementsToRefresh, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t\t\ttrue, // ignoreUnresolvedEntry", "-\t\t\t\t\t\ttrue); // generateMarkerOnError", "+\t\t\t\t\t\ttrue/*ignoreUnresolvedEntry*/, ", "+\t\t\t\t\t\ttrue/*generateMarkerOnError*/, ", "+\t\t\t\t\t\tfalse/*don't returnResolutionInProgress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f2f5eacbe46b3e38ed2df3fb9536dacb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "signatureAfterChange": " \tpublic void accept(ISourceType[] sourceTypes, PackageBinding packageBinding)", "diff": ["-\t\t\t\ttrue,", "-\t\t\t\ttrue,", "+\t\t\t\ttrue, // need field and methods", "+\t\t\t\ttrue, // need member types", "+\t\t\t\tfalse, // no need for field initialization"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3eb26e51bdb5f195471b9e5418becf5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a111700f27f629c06c29b26fb692229488b72d4a", "commitAfterChange": "c5f61e95813074aefaec195bd95f86eeca45b4ca", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String output) throws CoreException", "signatureAfterChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String output) throws CoreException", "diff": ["+\t\t\tnull/*no project*/, "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9415f52b53c568070abd87d2f7b8cdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "5ef1cc56a5d4ebd967cc5c7e76265ab37a605575", "commitAfterChange": "f5476e05b46ec9b70e1bb26b071f29e4868379b5", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "\t \tpublic static IClasspathEntry newContainerEntry( \t\t\tIPath containerPath,  \t\t\tIPath[] accessibleFiles,  \t\t\tIPath[] nonAccessibleFiles,  \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "signatureAfterChange": "\t \tpublic static IClasspathEntry newContainerEntry( \t\t\tIPath containerPath,  \t\t\tIPath[] accessibleFiles,  \t\t\tIPath[] nonAccessibleFiles,  \t\t\tIClasspathAttribute[] extraAttributes, \t\t\tboolean isExported)", "diff": ["+\t\t\ttrue, // combine access restrictions"]}], "num": 9220}