{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e5838b60824339ebc33a4d9253e16fa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f403699eac39957601c2ad7fd9fbd69", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d2d42dc68198e20f3f5cc7326a07cced2c751eb5", "commitAfterChange": "add5c6babb13b20df1267306ec710a4efca88a4d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r \r protected void consumeAssignment()", "signatureAfterChange": "\r \r protected void consumeAssignment()", "diff": ["+\tExpression expr = expressionStack[expressionPtr + 1];\r", "+\tif (expr instanceof QualifiedAllocationExpression) {\r", "+\t\tif (((QualifiedAllocationExpression) expr).anonymousType != null) {\r", "+\t\t\texpressionStack[expressionPtr] =\r", "+\t\t\t\t(op != EQUAL ) ?\r", "+\t\t\t\t\tnew CompoundAssignment(\r", "+\t\t\t\t\t\texpressionStack[expressionPtr] ,\r", "+\t\t\t\t\t\texpressionStack[expressionPtr+1], \r", "+\t\t\t\t\t\top,\r", "+\t\t\t\t\t\tendStatementPosition)\t:\r", "+\t\t\t\t\tnew Assignment(\r", "+\t\t\t\t\t\texpressionStack[expressionPtr] ,\r", "+\t\t\t\t\t\texpressionStack[expressionPtr+1],\r", "+\t\t\t\t\t\tendStatementPosition);\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t}\r", "-\t\t\t\top)\t:\r", "+\t\t\t\top,\r", "+\t\t\t\tendPosition)\t:\r", "-\t\t\t\texpressionStack[expressionPtr+1]);\r", "+\t\t\t\texpressionStack[expressionPtr+1],\r", "+\t\t\t\tendPosition);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c930eaa126d683bb4629fdbb82b890cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "64f2a5b8a78095fa170a97cceb8e661d31b0ae71", "commitAfterChange": "0ec72d2d01e922936e8894589d46ed7fef008881", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "\r \r protected void consumeAssignment()", "signatureAfterChange": "\r \r protected void consumeAssignment()", "diff": ["-\tExpression expr = expressionStack[expressionPtr + 1];\r", "-\tif (expr instanceof QualifiedAllocationExpression) {\r", "-\t\tif (((QualifiedAllocationExpression) expr).anonymousType != null) {\r", "-\t\t\texpressionStack[expressionPtr] =\r", "-\t\t\t\t(op != EQUAL ) ?\r", "-\t\t\t\t\tnew CompoundAssignment(\r", "-\t\t\t\t\t\texpressionStack[expressionPtr] ,\r", "-\t\t\t\t\t\texpressionStack[expressionPtr+1], \r", "-\t\t\t\t\t\top,\r", "-\t\t\t\t\t\tscanner.startPosition - 1)\t:\r", "-\t\t\t\t\tnew Assignment(\r", "-\t\t\t\t\t\texpressionStack[expressionPtr] ,\r", "-\t\t\t\t\t\texpressionStack[expressionPtr+1],\r", "-\t\t\t\t\t\tscanner.startPosition - 1);\r", "-\t\t\treturn;\r", "-\t\t}\r", "-\t}\r"]}], "num": 3373}