{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c2d0725d5e8ae1594cd09d1d15720a7d", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63fab165f9770932e27f9bbe35a67513", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 25, "signatureBeforeChange": " \t \tprivate boolean deleteGeneratedFile(IFile fileToDelete, IFile parent, IProgressMonitor progressMonitor, boolean deleteFromParent2DerivedFiles )  \t\tthrows CoreException", "signatureAfterChange": " \t \tprivate void removeFromFileMaps( IFile generatedFile, IFile parentFile )  \t    throws CoreException", "diff": ["-\t", "-\tprivate boolean deleteGeneratedFile(IFile fileToDelete, IFile parent, IProgressMonitor progressMonitor, boolean deleteFromParent2DerivedFiles ) ", "-\t\tthrows CoreException", "-\t{", "-\t\tString typeName = getTypeNameForDerivedFile( fileToDelete );", "-\t\tif ( _typeName2WorkingCopy.containsKey( typeName ) )", "-\t\t\tdiscardGeneratedWorkingCopy( typeName, parent );", "-\t\t// update _parents2DerivedFiles map", "-\t\tif ( deleteFromParent2DerivedFiles )", "-\t\t{", "-\t\t\tSet<IFile> derivedFiles = _parent2DerivedFiles.get( parent );", "-", "-\t\t\t// assertions", "-\t\t\tif ( derivedFiles == null ) throw new RuntimeException( \"derivedFiles is null and it shouldn't be\");", "-\t\t\tif ( ! derivedFiles.contains( fileToDelete )) throw new RuntimeException( \"derivedFiles does not contain fileToDelete\");", "-\t\t\tderivedFiles.remove( fileToDelete );", "-\t\t}", "-\t\t", "-\t\t// update _derivedFile2Parents map and delete file if it has no other parents", "-\t\tSet<IFile> parents = _derivedFile2Parents.get( fileToDelete );", "-\t\t", "-\t\t// assertions", "-\t\tif( parents == null ) throw new RuntimeException( \" parents is null and it shouldn't be\" );", "-\t\tif( ! parents.contains( parent )) throw new RuntimeException( \"parents set does not contain parent\" );", "-\t\t", "-\t\tparents.remove( parent );", "-\t\tif ( parents.size() == 0 )", "-\t\t{", "-\t\t\tfileToDelete.delete( true, true, progressMonitor );", "+\t", "+\tprivate void removeFromFileMaps( IFile generatedFile, IFile parentFile ) ", "+\t    throws CoreException ", "+\t{", "+\t\tif (_generatedFile2WorkingCopy.containsKey(generatedFile))", "+\t\t\tdiscardGeneratedWorkingCopy(generatedFile, parentFile);", "+", "+\t\tSet<IFile> derivedFiles = _parentFile2GeneratedFiles.get(parentFile);", "+", "+\t\t// assertions", "+\t\tif (derivedFiles == null)", "+\t\t\tthrow new RuntimeException(", "+\t\t\t\t\t\"derivedFiles is null and it shouldn't be\");", "+\t\tif (!derivedFiles.contains(generatedFile))", "+\t\t\tthrow new RuntimeException(", "+\t\t\t\t\t\"derivedFiles does not contain fileToDelete\");", "+", "+\t\tderivedFiles.remove(generatedFile);", "+\t\t", "+\t\t// update _derivedFile2Parents map", "+\t\tSet<IFile> parents = _generatedFile2ParentFiles.get(generatedFile);", "+", "+\t\t// assertions", "+\t\tif (parents == null)", "+\t\t\tthrow new RuntimeException(\" parents is null and it shouldn't be\");", "+\t\tif (!parents.contains(parentFile))", "+\t\t\tthrow new RuntimeException(\"parents set does not contain parent\");", "+", "+\t\tparents.remove(parentFile);", "+", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "806332d26ba29a97ffc70000f62e979d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "bc5d9b450540dde0f4417c6b10a04ec18aa90f94", "commitAfterChange": "67c55712e5adee92eb685a3f98810e93028c1621", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic synchronized void generatedFileDeleted( IFile deletedFile,  IProgressMonitor progressMonitor )", "signatureAfterChange": " \t  \tpublic synchronized void generatedFileDeleted( IFile generatedFile,  IProgressMonitor progressMonitor ) \t\tthrows JavaModelException, CoreException", "diff": ["-\tpublic synchronized void generatedFileDeleted( IFile deletedFile,  IProgressMonitor progressMonitor )", "+\tpublic synchronized void generatedFileDeleted( IFile generatedFile,  IProgressMonitor progressMonitor )", "+\t\tthrows JavaModelException, CoreException", "-\t\tSet<IFile> parents = _derivedFile2Parents.get( deletedFile );", "+\t\tSet<IFile> parents = _generatedFile2ParentFiles.get( generatedFile );", "-\t\t", "-\t\tString typeName = getTypeNameForDerivedFile( deletedFile );", "-\t\t", "+\t\t\t\t", "-\t\t\tIFile parent = it.next();", "-\t\t\tSet<IFile> s = _parent2DerivedFiles.get( parent );", "-\t\t\ts.remove( deletedFile );", "-\t\t\t", "-\t\t\tSet<String> types = _parent2TypeNames.get( parent );", "-\t\t\ttypes.remove( typeName );", "+\t\t\tIFile parentFile = it.next();", "+\t\t\tremoveFromWorkingCopyMaps( generatedFile, parentFile );", "+\t\t\tremoveFromFileMaps( generatedFile, parentFile );", "-\t\t", "-\t\t_derivedFile2Parents.remove( deletedFile );", "-\t\t", "-\t\t_typeName2Parents.remove( typeName );", "-\t\t", "-\t\t_typeName2WorkingCopy.remove( typeName );"]}], "num": 46495}