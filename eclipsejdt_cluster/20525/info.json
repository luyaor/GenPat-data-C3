{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b11018f7f4054f7fef6cc162cc50c76c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc43fd5f06963abfaef53e2ddcde52d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 153, "methodNumberAfterChange": 153, "signatureBeforeChange": " \tpublic void test048c()", "signatureAfterChange": " \tpublic void test048c()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X4.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tpublic String foo(I<String> z) { return null; }\\n\" + ", "+\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo(I<String>) of type X4 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X4.java (at line 2)\\n\" + ", "+\t\t\t\t\t\"\tpublic String foo(I<String> z) { return null; }\\n\" + ", "+\t\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Name clash: The method foo(I<String>) of type X4 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X4.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic String foo(I<String> z) { return null; }\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method foo(I<String>) of type X4 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e85b75d94859e77ae74170d20c09051f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 156, "methodNumberAfterChange": 156, "signatureBeforeChange": " \tpublic void test048f()", "signatureAfterChange": " \tpublic void test048f()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X7.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tpublic String foo(I<String> z) { return null; }\\n\" + ", "+\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo(I<String>) of type X7 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X7.java (at line 2)\\n\" + ", "+\t\t\t\t\t\"\tpublic String foo(I<String> z) { return null; }\\n\" + ", "+\t\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Name clash: The method foo(I<String>) of type X7 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X7.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic String foo(I<String> z) { return null; }\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method foo(I<String>) of type X7 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}], "num": 20525}