{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b7fcd3fbedead8dfa4e8ccce71ca1ee", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "495c1f923b14f7d493620ca5b4e2268b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "eef75e8cff97a0c4a6156f3b48d037bb0a5a8b17", "commitAfterChange": "7cfd16cce02bf6c15cc69b5ed56b855234dd7ed5", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean recordLineSeparator, String sourceLevel)", "signatureAfterChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean recordLineSeparator, String sourceLevel)", "diff": ["-\t\tPublicScanner scanner = null;", "-\t\tlong level = CompilerOptions.versionToJdkLevel(sourceLevel);", "-\t\tif (level == 0) level = ClassFileConstants.JDK1_3; // fault-tolerance", "-\t\tscanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/,level /*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "+\t\t// use default workspace compliance", "+\t\tlong complianceLevelValue = CompilerOptions.versionToJdkLevel(JavaCore.getOption(JavaCore.COMPILER_COMPLIANCE));", "+\t\tif (complianceLevelValue == 0) complianceLevelValue = ClassFileConstants.JDK1_4; // fault-tolerance", "+\t\tlong sourceLevelValue = CompilerOptions.versionToJdkLevel(sourceLevel);", "+\t\tif (sourceLevelValue == 0) sourceLevelValue = ClassFileConstants.JDK1_3; // fault-tolerance", "+\t\tPublicScanner scanner =", "+\t\t\tnew PublicScanner(", "+\t\t\t\ttokenizeComments,", "+\t\t\t\ttokenizeWhiteSpace,", "+\t\t\t\tfalse/*nls*/,", "+\t\t\t\tsourceLevelValue /*sourceLevel*/,", "+\t\t\t\tcomplianceLevelValue,", "+\t\t\t\tnull/*taskTags*/,", "+\t\t\t\tnull/*taskPriorities*/,", "+\t\t\t\ttrue/*taskCaseSensitive*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc198c3cf3c0f5e6d46c23915ab88349", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "eef75e8cff97a0c4a6156f3b48d037bb0a5a8b17", "commitAfterChange": "7cfd16cce02bf6c15cc69b5ed56b855234dd7ed5", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean assertMode, boolean recordLineSeparator)", "signatureAfterChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean assertMode, boolean recordLineSeparator)", "diff": ["-", "-\t\tPublicScanner scanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/, assertMode ? ClassFileConstants.JDK1_4 : ClassFileConstants.JDK1_3/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "+\t\t// use default workspace compliance", "+\t\tlong complianceLevelValue = CompilerOptions.versionToJdkLevel(JavaCore.getOption(JavaCore.COMPILER_COMPLIANCE));", "+\t\tif (complianceLevelValue == 0) complianceLevelValue = ClassFileConstants.JDK1_4; // fault-tolerance", "+\t\tPublicScanner scanner =", "+\t\t\tnew PublicScanner(", "+\t\t\t\ttokenizeComments,", "+\t\t\t\ttokenizeWhiteSpace,", "+\t\t\t\tfalse/*nls*/,", "+\t\t\t\tassertMode ? ClassFileConstants.JDK1_4 : ClassFileConstants.JDK1_3/*sourceLevel*/,", "+\t\t\t\tcomplianceLevelValue,", "+\t\t\t\tnull/*taskTags*/,", "+\t\t\t\tnull/*taskPriorities*/,", "+\t\t\t\ttrue/*taskCaseSensitive*/);"]}], "num": 23513}