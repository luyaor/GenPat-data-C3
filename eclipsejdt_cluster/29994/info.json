{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89ebd466e88f113e1802d4ebd2919556", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e62de295002726f4042f96c4b23d097", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 74, "signatureBeforeChange": "  \tprivate void generateWilcardTypeAnnotation(AnnotationContext annotationContext, int currentOffset)", "signatureAfterChange": "  \tprivate void generateWildcardTypeAnnotation(AnnotationContext annotationContext, int currentOffset)", "diff": ["-", "-\tprivate void generateWilcardTypeAnnotation(AnnotationContext annotationContext, int currentOffset) {", "-\t\tif (this.contentsOffset == currentOffset) {", "-\t\t\t// error occurred while generating the annotation", "-\t\t\treturn;", "-\t\t}", "-\t\tint[] wildcardLocations = getWildcardLocations(annotationContext.typeReference, annotationContext.wildcard);", "+", "+\tprivate void generateWildcardTypeAnnotation(AnnotationContext annotationContext, int currentOffset) {", "-\t\tswitch(targetType) {", "-\t\t\tcase AnnotationTargetTypeConstants.CLASS_EXTENDS_IMPLEMENTS :", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.CLASS_EXTENDS_IMPLEMENTS_GENERIC_OR_ARRAY;", "-\t\t\t\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.LOCAL_VARIABLE :", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.LOCAL_VARIABLE_GENERIC_OR_ARRAY;", "-\t\t\t\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.METHOD_PARAMETER :", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.METHOD_PARAMETER_GENERIC_OR_ARRAY;", "-\t\t\t\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.FIELD :", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.FIELD_GENERIC_OR_ARRAY;", "-\t\t\t\tbreak;", "-//\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_RECEIVER :", "-//\t\t\t\t// should not happen - possible extension", "-//\t\t\t\ttargetType = AnnotationTargetTypeConstants.METHOD_RECEIVER_GENERIC_OR_ARRAY;", "-//\t\t\t\tbreak;", "-//\t\t\tcase AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER :", "-//\t\t\t\t// should not happen - possible extension", "-//\t\t\t\ttargetType = AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER_GENERIC_OR_ARRAY;", "-//\t\t\t\tbreak;", "-//\t\t\tcase AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER_BOUND :", "-//\t\t\t\t// should not happen - possible extension", "-//\t\t\t\ttargetType = AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY;", "-//\t\t\t\tbreak;", "-//\t\t\tcase AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER :", "-//\t\t\t\t// should not happen - possible extension", "-//\t\t\t\ttargetType = AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER_GENERIC_OR_ARRAY;", "-//\t\t\t\tbreak;", "-//\t\t\tcase AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER_BOUND :", "-//\t\t\t\t// should not happen - possible extension", "-//\t\t\t\ttargetType = AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY;", "-//\t\t\t\tbreak;", "-//\t\t\tcase AnnotationTargetTypeConstants.THROWS :", "-//\t\t\t\ttargetType = AnnotationTargetTypeConstants.THROWS_GENERIC_OR_ARRAY;", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_INSTANCEOF:", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.TYPE_INSTANCEOF_GENERIC_OR_ARRAY;", "-\t\t\t\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.CLASS_LITERAL:", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.CLASS_LITERAL_GENERIC_OR_ARRAY;", "-\t\t\t\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.OBJECT_CREATION:", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.OBJECT_CREATION_GENERIC_OR_ARRAY;", "-\t\t\t\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_CAST:", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.TYPE_CAST_GENERIC_OR_ARRAY;", "-\t\t\t\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_ARGUMENT_METHOD_CALL :", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.TYPE_ARGUMENT_METHOD_CALL_GENERIC_OR_ARRAY;", "-\t\t\t\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.TYPE_ARGUMENT_CONSTRUCTOR_CALL :", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.TYPE_ARGUMENT_CONSTRUCTOR_CALL_GENERIC_OR_ARRAY;", "-\t\t\t\tbreak;", "-\t\t\tcase AnnotationTargetTypeConstants.METHOD_RETURN_TYPE :", "-\t\t\t\ttargetType = AnnotationTargetTypeConstants.METHOD_RETURN_TYPE_GENERIC_OR_ARRAY;", "-\t\t}", "+", "-\t\t\t\tannotationContext.wildcard.bound,", "+\t\t\t\tannotationContext.typeReference,", "-\t\t\t\tnull);", "+\t\t\t\tnull,", "+\t\t\t\t0);", "-\t\tthis.contents[this.contentsOffset++] =", "-\t\t\t(byte) (locations != null ?", "-\t\t\t\t\tAnnotationTargetTypeConstants.WILDCARD_BOUND_GENERIC_OR_ARRAY :", "-\t\t\t\t\tAnnotationTargetTypeConstants.WILDCARD_BOUND);", "-\t\tdumpLocations(wildcardLocations);", "+\t\tgenerateAnnotation(annotationContext.annotation, currentOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78cc18d171a14439efc444994410eaad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 73, "signatureBeforeChange": "  \tprivate void generateTypeAnnotation(AnnotationContext annotationContext, int currentOffset)", "signatureAfterChange": " \t \tprivate void generateTypeAnnotation(AnnotationContext annotationContext, int currentOffset)", "diff": ["-", "+\t", "-\t\tint targetType = annotationContext.targetType;", "-\t\t\tgenerateWilcardTypeAnnotation(annotationContext, currentOffset);", "+\t\t\tgenerateWildcardTypeAnnotation(annotationContext, currentOffset);", "-\t\t// common part between type annotation and annotation", "-\t\tgenerateAnnotation(annotationContext.annotation, currentOffset);", "-\t\tif (this.contentsOffset == currentOffset) {", "-\t\t\t// error occurred while generating the annotation", "-\t\t\treturn;", "-\t\t}", "+\t\t", "+\t\tint targetType = annotationContext.targetType;", "+", "-\t\t\tannotationContext.annotationsOnDimensions);", "-\t\tif (locations != null) {", "-\t\t\t// convert to GENERIC_OR_ARRAY type", "-\t\t\tswitch(targetType) {", "-\t\t\t\tcase AnnotationTargetTypeConstants.CLASS_EXTENDS_IMPLEMENTS :", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.CLASS_EXTENDS_IMPLEMENTS_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.LOCAL_VARIABLE :", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.LOCAL_VARIABLE_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_PARAMETER :", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.METHOD_PARAMETER_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.FIELD :", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.FIELD_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-//\t\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_RECEIVER :", "-//\t\t\t\t\t// should not happen - possible extension", "-//\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.METHOD_RECEIVER_GENERIC_OR_ARRAY;", "-//\t\t\t\t\tbreak;", "-//\t\t\t\tcase AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER :", "-//\t\t\t\t\t// should not happen - possible extension", "-//\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER_GENERIC_OR_ARRAY;", "-//\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER_BOUND :", "-\t\t\t\t\t// should not happen - possible extension", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.CLASS_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-//\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER :", "-//\t\t\t\t\t// should not happen - possible extension", "-//\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER_GENERIC_OR_ARRAY;", "-//\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER_BOUND :", "-\t\t\t\t\t// should not happen - possible extension", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.METHOD_TYPE_PARAMETER_BOUND_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-//\t\t\t\tcase AnnotationTargetTypeConstants.THROWS :", "-//\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.THROWS_GENERIC_OR_ARRAY;", "-\t\t\t\tcase AnnotationTargetTypeConstants.TYPE_INSTANCEOF:", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.TYPE_INSTANCEOF_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.CLASS_LITERAL:", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.CLASS_LITERAL_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.OBJECT_CREATION:", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.OBJECT_CREATION_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.TYPE_CAST:", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.TYPE_CAST_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.TYPE_ARGUMENT_METHOD_CALL :", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.TYPE_ARGUMENT_METHOD_CALL_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.TYPE_ARGUMENT_CONSTRUCTOR_CALL :", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.TYPE_ARGUMENT_CONSTRUCTOR_CALL_GENERIC_OR_ARRAY;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_RETURN_TYPE :", "-\t\t\t\t\ttargetType = AnnotationTargetTypeConstants.METHOD_RETURN_TYPE_GENERIC_OR_ARRAY;", "-\t\t\t}", "-\t\t}", "-\t\t// reserve enough space", "+\t\t\tannotationContext.annotationsOnDimensions,", "+\t\t\tannotationContext.dimensions);", "+", "-\t}", "+\t\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fae1e7f937061151686c9fe3586f135e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate boolean internalVisit(Annotation annotation)", "signatureAfterChange": " \t \tprivate boolean internalVisit(Annotation annotation)", "diff": ["+\t", "-\t\t\tannotationContext = new AnnotationContext(annotation, this.typeReference, this.targetType, this.primaryAnnotations, AnnotationContext.INVISIBLE, this.annotationsOnDimensions);", "+\t\t\tannotationContext = new AnnotationContext(annotation, this.typeReference, this.targetType, this.primaryAnnotations, AnnotationContext.INVISIBLE, this.annotationsOnDimensions, this.dimensions);", "-\t\t\tannotationContext = new AnnotationContext(annotation, this.typeReference, this.targetType, this.primaryAnnotations, AnnotationContext.VISIBLE, this.annotationsOnDimensions);", "+\t\t\tannotationContext = new AnnotationContext(annotation, this.typeReference, this.targetType, this.primaryAnnotations, AnnotationContext.VISIBLE, this.annotationsOnDimensions, this.dimensions);", "-\t\t\t\tcase AnnotationTargetTypeConstants.THROWS :", "-\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_PARAMETER :", "-\t\t\t\tcase AnnotationTargetTypeConstants.TYPE_CAST :", "-\t\t\t\tcase AnnotationTargetTypeConstants.TYPE_INSTANCEOF :", "-\t\t\t\tcase AnnotationTargetTypeConstants.OBJECT_CREATION :", "-\t\t\t\tcase AnnotationTargetTypeConstants.CLASS_LITERAL :", "-\t\t\t\tcase AnnotationTargetTypeConstants.CLASS_EXTENDS_IMPLEMENTS:", "+\t\t\t\tcase AnnotationTargetTypeConstants.CLASS_EXTENDS:", "+\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_FORMAL_PARAMETER :", "+\t\t\t\tcase AnnotationTargetTypeConstants.THROWS :", "+\t\t\t\tcase AnnotationTargetTypeConstants.EXCEPTION_PARAMETER :", "+\t\t\t\tcase AnnotationTargetTypeConstants.INSTANCEOF:", "+\t\t\t\tcase AnnotationTargetTypeConstants.NEW :", "+\t\t\t\tcase AnnotationTargetTypeConstants.CONSTRUCTOR_REFERENCE :", "+\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_REFERENCE :", "+\t\t\t\tcase AnnotationTargetTypeConstants.CAST:", "+\t\t\t\tcase AnnotationTargetTypeConstants.RESOURCE_VARIABLE :", "-\t\t\t\tcase AnnotationTargetTypeConstants.TYPE_ARGUMENT_METHOD_CALL :", "-\t\t\t\tcase AnnotationTargetTypeConstants.TYPE_ARGUMENT_CONSTRUCTOR_CALL :", "+\t\t\t\tcase AnnotationTargetTypeConstants.CONSTRUCTOR_INVOCATION_TYPE_ARGUMENT :", "+\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_INVOCATION_TYPE_ARGUMENT :", "+\t\t\t\tcase AnnotationTargetTypeConstants.CONSTRUCTOR_REFERENCE_TYPE_ARGUMENT :", "+\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_REFERENCE_TYPE_ARGUMENT :", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase AnnotationTargetTypeConstants.FIELD :", "+\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_RETURN :", "+\t\t\t\tcase AnnotationTargetTypeConstants.METHOD_RECEIVER :", "+\t\t\t\t\tbreak;", "+\t\t\t\t\t"]}], "num": 29994}