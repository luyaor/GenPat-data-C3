{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76568c456b1a408cca38a7a1005a2882", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "50de7f9141c1e19d23b6991a30aae4bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "b1289825b1d85858e43a8d7cb146ae5cf4375ba5", "commitAfterChange": "968dabd0ec3dcd97fcc7fea5e184cd16cad5b076", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void test020()", "signatureAfterChange": " \tpublic void test020()", "diff": ["-\t\ttry {", "-\t\t\tString sourceA =", "-\t\t\t\t\"public class A {\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "-\t\t\t\t\"\t\tint i = 6;\\n\" +", "-\t\t\t\t\"\t\tif (i\\n\" +", "-\t\t\t\t\"\t\t\t>= 5) {   \t\\n\" +", "-\t\t\t\t\"\t\t   \tSystem.out.println(i);\\n\" +", "-\t\t\t\t\"\t\t   }\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\";", "-\t\t\tcompileAndDeploy(sourceA, \"A\");", "-\t\t\tIClassFileReader classFileReader = ToolFactory.createDefaultClassFileReader(EVAL_DIRECTORY + File.separator + \"A.class\", IClassFileReader.ALL);", "-\t\t\tIMethodInfo[] methodInfos = classFileReader.getMethodInfos();", "-\t\t\tassertEquals(\"wrong size\", 2, methodInfos.length);", "-\t\t\tIMethodInfo methodInfo = methodInfos[1];", "-\t\t\tassertEquals(\"wrong name\", \"main\", new String(methodInfo.getName()));", "-\t\t\tICodeAttribute codeAttribute = methodInfo.getCodeAttribute();", "-\t\t\tassertNotNull(\"No code attribute\", codeAttribute);", "-\t\t\tILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();", "-\t\t\tassertNotNull(\"No code line number attribute\", lineNumberAttribute);", "-\t\t\tint[][] lineNumberTable = lineNumberAttribute.getLineNumberTable();", "-\t\t\tassertEquals(\"wrong size\", 5, lineNumberTable.length);", "-\t\t\tassertEquals(\"wrong pc[0]\", 0, lineNumberTable[0][0]);", "-\t\t\tassertEquals(\"wrong line[0]\", 3, lineNumberTable[0][1]);", "-\t\t\tassertEquals(\"wrong pc[1]\", 3, lineNumberTable[1][0]);", "-\t\t\tassertEquals(\"wrong line[1]\", 4, lineNumberTable[1][1]);", "-\t\t\tassertEquals(\"wrong pc[2]\", 4, lineNumberTable[2][0]);", "-\t\t\tassertEquals(\"wrong line[2]\", 5, lineNumberTable[2][1]);", "-\t\t\tassertEquals(\"wrong pc[3]\", 8, lineNumberTable[3][0]);", "-\t\t\tassertEquals(\"wrong line[3]\", 6, lineNumberTable[3][1]);", "-\t\t\tassertEquals(\"wrong pc[4]\", 15, lineNumberTable[4][0]);", "-\t\t\tassertEquals(\"wrong line[4]\", 8, lineNumberTable[4][1]);", "-\t\t} finally {", "-\t\t\tremoveTempClass(\"A\");", "-\t\t}", "+\t\tString source =", "+\t\t\t\"public class A {\\n\" +", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\"\t\tint i = 6;\\n\" +", "+\t\t\t\"\t\tif (i\\n\" +", "+\t\t\t\"\t\t\t>= 5) {   \t\\n\" +", "+\t\t\t\"\t\t   \tSystem.out.println(i);\\n\" +", "+\t\t\t\"\t\t   }\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\";", "+\t\tString expectedOutput =", "+\t\t\t\"/* \\n\" + ", "+\t\t\t\" * Version (target 1.2) \\n\" + ", "+\t\t\t\" * - magic: CAFEBABE\\n\" + ", "+\t\t\t\" * - minor: 0\\n\" + ", "+\t\t\t\" * - major: 46\\n\" + ", "+\t\t\t\" */\\n\" + ", "+\t\t\t\"// Compiled from A.java\\n\" + ", "+\t\t\t\"public class A extends java.lang.Object {\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  /*  Method descriptor  #6 ()V */\\n\" + ", "+\t\t\t\"  public A();\\n\" + ", "+\t\t\t\"    /* Stack: 1, Locals: 1 */\\n\" + ", "+\t\t\t\"    Code attribute:\\n\" + ", "+\t\t\t\"      0  aload_0\\n\" + ", "+\t\t\t\"      1  invokespecial #9 <Constructor java.lang.Object()>\\n\" + ", "+\t\t\t\"      4  return\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"    Line number attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, line: 1]\\n\" + ", "+\t\t\t\"    Local variable table attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, pc: 5] local: this index: 0 type: A\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  /*  Method descriptor  #15 ([Ljava/lang/String;)V */\\n\" + ", "+\t\t\t\"  public static void main(String[] args);\\n\" + ", "+\t\t\t\"    /* Stack: 2, Locals: 2 */\\n\" + ", "+\t\t\t\"    Code attribute:\\n\" + ", "+\t\t\t\"       0  bipush 6\\n\" + ", "+\t\t\t\"       2  istore_1\\n\" + ", "+\t\t\t\"       3  iload_1\\n\" + ", "+\t\t\t\"       4  iconst_5\\n\" + ", "+\t\t\t\"       5  if_icmplt 15\\n\" + ", "+\t\t\t\"       8  getstatic #21 <Field java.lang.System#out java.io.PrintStream>\\n\" + ", "+\t\t\t\"      11  iload_1\\n\" + ", "+\t\t\t\"      12  invokevirtual #27 <Method java.io.PrintStream#println(int arg) void>\\n\" + ", "+\t\t\t\"      15  return\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"    Line number attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, line: 3]\\n\" + ", "+\t\t\t\"      [pc: 3, line: 4]\\n\" + ", "+\t\t\t\"      [pc: 4, line: 5]\\n\" + ", "+\t\t\t\"      [pc: 8, line: 6]\\n\" + ", "+\t\t\t\"      [pc: 15, line: 8]\\n\" + ", "+\t\t\t\"    Local variable table attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, pc: 16] local: args index: 0 type: java/lang/String[]\\n\" + ", "+\t\t\t\"      [pc: 3, pc: 16] local: i index: 1 type: int\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"}\";", "+\t\tcheckClassFile(\"A\", source, expectedOutput);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ce936d332158cb0ef1580028de0d6dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "b1289825b1d85858e43a8d7cb146ae5cf4375ba5", "commitAfterChange": "968dabd0ec3dcd97fcc7fea5e184cd16cad5b076", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void test032()", "signatureAfterChange": " \tpublic void test032()", "diff": ["-\t\ttry {", "-\t\t\tString sourceA =", "-\t\t\t\t\"public class A {\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "-\t\t\t\t\"\t\tint i = 6;\\n\" +", "-\t\t\t\t\"\t\tif (i\\n\" +", "-\t\t\t\t\"\t\t\t<= 5) {   \t\\n\" +", "-\t\t\t\t\"\t\t   \tSystem.out.println(i);\\n\" +", "-\t\t\t\t\"\t\t   }\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\";", "-\t\t\tcompileAndDeploy(sourceA, \"A\");", "-\t\t\tIClassFileReader classFileReader = ToolFactory.createDefaultClassFileReader(EVAL_DIRECTORY + File.separator + \"A.class\", IClassFileReader.ALL);", "-\t\t\tIMethodInfo[] methodInfos = classFileReader.getMethodInfos();", "-\t\t\tassertEquals(\"wrong size\", 2, methodInfos.length);", "-\t\t\tIMethodInfo methodInfo = methodInfos[1];", "-\t\t\tassertEquals(\"wrong name\", \"main\", new String(methodInfo.getName()));", "-\t\t\tICodeAttribute codeAttribute = methodInfo.getCodeAttribute();", "-\t\t\tassertNotNull(\"No code attribute\", codeAttribute);", "-\t\t\tILineNumberAttribute lineNumberAttribute = codeAttribute.getLineNumberAttribute();", "-\t\t\tassertNotNull(\"No code line number attribute\", lineNumberAttribute);", "-\t\t\tint[][] lineNumberTable = lineNumberAttribute.getLineNumberTable();", "-\t\t\tassertEquals(\"wrong size\", 5, lineNumberTable.length);", "-\t\t\tassertEquals(\"wrong pc[0]\", 0, lineNumberTable[0][0]);", "-\t\t\tassertEquals(\"wrong line[0]\", 3, lineNumberTable[0][1]);", "-\t\t\tassertEquals(\"wrong pc[1]\", 3, lineNumberTable[1][0]);", "-\t\t\tassertEquals(\"wrong line[1]\", 4, lineNumberTable[1][1]);", "-\t\t\tassertEquals(\"wrong pc[2]\", 4, lineNumberTable[2][0]);", "-\t\t\tassertEquals(\"wrong line[2]\", 5, lineNumberTable[2][1]);", "-\t\t\tassertEquals(\"wrong pc[3]\", 8, lineNumberTable[3][0]);", "-\t\t\tassertEquals(\"wrong line[3]\", 6, lineNumberTable[3][1]);", "-\t\t\tassertEquals(\"wrong pc[4]\", 15, lineNumberTable[4][0]);", "-\t\t\tassertEquals(\"wrong line[4]\", 8, lineNumberTable[4][1]);", "-\t\t} finally {", "-\t\t\tremoveTempClass(\"A\");", "-\t\t}", "+\t\tString source =", "+\t\t\t\"public class A {\\n\" +", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\"\t\tint i = 6;\\n\" +", "+\t\t\t\"\t\tif (i\\n\" +", "+\t\t\t\"\t\t\t<= 5) {   \t\\n\" +", "+\t\t\t\"\t\t   \tSystem.out.println(i);\\n\" +", "+\t\t\t\"\t\t   }\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"}\";", "+\t\tString expectedOutput =", "+\t\t\t\"/* \\n\" + ", "+\t\t\t\" * Version (target 1.2) \\n\" + ", "+\t\t\t\" * - magic: CAFEBABE\\n\" + ", "+\t\t\t\" * - minor: 0\\n\" + ", "+\t\t\t\" * - major: 46\\n\" + ", "+\t\t\t\" */\\n\" + ", "+\t\t\t\"// Compiled from A.java\\n\" + ", "+\t\t\t\"public class A extends java.lang.Object {\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  /*  Method descriptor  #6 ()V */\\n\" + ", "+\t\t\t\"  public A();\\n\" + ", "+\t\t\t\"    /* Stack: 1, Locals: 1 */\\n\" + ", "+\t\t\t\"    Code attribute:\\n\" + ", "+\t\t\t\"      0  aload_0\\n\" + ", "+\t\t\t\"      1  invokespecial #9 <Constructor java.lang.Object()>\\n\" + ", "+\t\t\t\"      4  return\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"    Line number attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, line: 1]\\n\" + ", "+\t\t\t\"    Local variable table attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, pc: 5] local: this index: 0 type: A\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"  /*  Method descriptor  #15 ([Ljava/lang/String;)V */\\n\" + ", "+\t\t\t\"  public static void main(String[] args);\\n\" + ", "+\t\t\t\"    /* Stack: 2, Locals: 2 */\\n\" + ", "+\t\t\t\"    Code attribute:\\n\" + ", "+\t\t\t\"       0  bipush 6\\n\" + ", "+\t\t\t\"       2  istore_1\\n\" + ", "+\t\t\t\"       3  iload_1\\n\" + ", "+\t\t\t\"       4  iconst_5\\n\" + ", "+\t\t\t\"       5  if_icmpgt 15\\n\" + ", "+\t\t\t\"       8  getstatic #21 <Field java.lang.System#out java.io.PrintStream>\\n\" + ", "+\t\t\t\"      11  iload_1\\n\" + ", "+\t\t\t\"      12  invokevirtual #27 <Method java.io.PrintStream#println(int arg) void>\\n\" + ", "+\t\t\t\"      15  return\\n\" + ", "+\t\t\t\"\\n\" + ", "+\t\t\t\"    Line number attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, line: 3]\\n\" + ", "+\t\t\t\"      [pc: 3, line: 4]\\n\" + ", "+\t\t\t\"      [pc: 4, line: 5]\\n\" + ", "+\t\t\t\"      [pc: 8, line: 6]\\n\" + ", "+\t\t\t\"      [pc: 15, line: 8]\\n\" + ", "+\t\t\t\"    Local variable table attribute:\\n\" + ", "+\t\t\t\"      [pc: 0, pc: 16] local: args index: 0 type: java/lang/String[]\\n\" + ", "+\t\t\t\"      [pc: 3, pc: 16] local: i index: 1 type: int\\n\" + ", "+\t\t\t\"  \\n\" + ", "+\t\t\t\"}\";", "+\t\tcheckClassFile(\"A\", source, expectedOutput);"]}], "num": 40029}