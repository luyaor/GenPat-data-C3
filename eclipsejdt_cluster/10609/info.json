{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83f9ee88c7c080089ae3137e1f329ff4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3b3438ba7ff075056c901dbc9127f5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\tprivate boolean hasDependency(Set someBounds, InferenceVariable var)", "signatureAfterChange": " \t\tprivate boolean hasDependency(Set<TypeBound> someBounds, InferenceVariable var)", "diff": ["-\t\tprivate boolean hasDependency(Set someBounds, InferenceVariable var) {", "-\t\t\tIterator bIt = someBounds.iterator();", "+\t\tprivate boolean hasDependency(Set<TypeBound> someBounds, InferenceVariable var) {", "+\t\t\tIterator<TypeBound> bIt = someBounds.iterator();", "-\t\t\t\tTypeBound bound = (TypeBound) bIt.next();", "+\t\t\t\tTypeBound bound = bIt.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f893b97a1802e9dc0b83dc5dcf67477d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": "  \tpublic boolean condition18_5_2_bullet_3_3_2(InferenceVariable alpha, TypeBinding targetType, InferenceContext18 ctx18)", "signatureAfterChange": "  \tpublic boolean condition18_5_2_bullet_3_3_2(InferenceVariable alpha, TypeBinding targetType, InferenceContext18 ctx18)", "diff": ["-\t\tThreeSets ts = (ThreeSets) this.boundsPerVariable.get(alpha);", "-\t\tIterator boundIterator;", "+\t\tThreeSets ts = this.boundsPerVariable.get(alpha);", "+\t\tIterator<TypeBound> boundIterator;", "-\t\t\t\tTypeBound b = (TypeBound) boundIterator.next();", "+\t\t\t\tTypeBound b = boundIterator.next();", "-\t\t\t\tTypeBound b = (TypeBound) boundIterator.next();", "+\t\t\t\tTypeBound b = boundIterator.next();"]}], "num": 10609}