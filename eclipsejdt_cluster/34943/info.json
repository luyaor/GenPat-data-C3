{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bfd798482b887d18d0c10b5fa169bddb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "722818f0beaa22b0e05cb97028e5c1c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "8ceb000c7fbb649bb64dc31d912e59b394f3fb60", "commitAfterChange": "88b7c7eb3469a024202ea445bb4a9f81206035c9", "methodNumberBeforeChange": 148, "methodNumberAfterChange": 148, "signatureBeforeChange": " \tpublic boolean visit(MethodRefParameter node)", "signatureAfterChange": " \tpublic boolean visit(MethodRefParameter node)", "diff": ["+\t\tif (node.getAST().apiLevel() >= AST.JLS3) {", "+\t\t\tif (isChanged(node, MethodRefParameter.VARARGS_PROPERTY)) {", "+\t\t\t\tif (getNewValue(node, MethodRefParameter.VARARGS_PROPERTY).equals(Boolean.TRUE)) {", "+\t\t\t\t\tdoTextInsert(pos, \"...\", getEditGroup(node, MethodRefParameter.VARARGS_PROPERTY)); //$NON-NLS-1$", "+\t\t\t\t} else {", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tint ellipsisEnd= getScanner().getNextEndOffset(pos, true);", "+\t\t\t\t\t\tdoTextRemove(pos, ellipsisEnd - pos, getEditGroup(node, MethodRefParameter.VARARGS_PROPERTY)); //$NON-NLS-1$", "+\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\thandleException(e);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa18a5fe1fefe756d79cc753f65e12a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "167c362a4ac2baf619eec088a660153ec713b502", "commitAfterChange": "203954a19427f44b197aa09593f6f49177e09606", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": " \tpublic boolean visit(AnnotationTypeMemberDeclaration node)", "signatureAfterChange": " \tpublic boolean visit(AnnotationTypeMemberDeclaration node)", "diff": ["-\t\tAssert.isTrue(false, \"Modifications in nodes of type \" + node.getClass().getName() + \" not supported yet\");  //$NON-NLS-1$//$NON-NLS-2$", "+\t\tint pos= rewriteJavadoc(node, AnnotationTypeMemberDeclaration.JAVADOC_PROPERTY);", "+\t\trewriteModifiers2(node, AnnotationTypeMemberDeclaration.MODIFIERS2_PROPERTY, pos);", "+\t\trewriteRequiredNode(node, AnnotationTypeMemberDeclaration.TYPE_PROPERTY);", "+\t\tpos= rewriteRequiredNode(node, AnnotationTypeMemberDeclaration.NAME_PROPERTY);", "+\t\t", "+\t\ttry {", "+\t\t\tint changeKind= getChangeKind(node, AnnotationTypeMemberDeclaration.DEFAULT_PROPERTY);", "+\t\t\tif (changeKind == RewriteEvent.INSERTED || changeKind == RewriteEvent.REMOVED) {", "+\t\t\t\tpos= getScanner().getTokenEndOffset(ITerminalSymbols.TokenNameRPAREN, pos);", "+\t\t\t}", "+\t\t\trewriteNode(node, AnnotationTypeMemberDeclaration.DEFAULT_PROPERTY, pos, this.formatter.ANNOT_MEMBER_DEFAULT);", "+\t\t} catch (CoreException e) {", "+\t\t\thandleException(e);", "+\t\t}"]}], "num": 34943}