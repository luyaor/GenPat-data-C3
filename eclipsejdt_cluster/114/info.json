{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0216999b657157b6a1df4e05993373b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "003a0a58aea26ea8d88169f24e75a7fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AdvancedFactoryPathOptionsDialog.java", "commitBeforeChange": "3973964fa15a8c49d459282ce0d949753f7e2224", "commitAfterChange": "be99a78ebde70e086535a722e0c99b2c26590dce", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected Control createDialogArea(Composite parent)", "signatureAfterChange": "      \tprotected Control createDialogArea(Composite parent)", "diff": ["+    ", "+\tprotected Control createDialogArea(Composite parent) {", "+\t\tComposite dlgArea= (Composite) super.createDialogArea(parent);", "+\t\t// Set up \"batch mode\" checkbox.", "-", "-\tprotected Control createDialogArea(Composite parent) {", "-\t\tComposite composite= (Composite) super.createDialogArea(parent);", "-\t\t", "-\t\tComposite inner= new Composite(composite, SWT.NONE);", "-\t\tGridLayout layout= new GridLayout();", "-\t\tlayout.marginHeight= 0;", "-\t\tlayout.marginWidth= 0;", "-\t\tlayout.numColumns= 2;", "-\t\tinner.setLayout(layout);", "-\t\t", "-\t\t_batchModeField.doFillIntoGrid(inner, 2);", "-\t\t", "-\t\t// Plugins can't run in APT compatibility mode.", "+\t\t_batchModeField.doFillIntoGrid(dlgArea, 2);", "+\t\t\t// Plugins can't run in APT compatibility mode.", "-\t\tapplyDialogFont(composite);\t\t", "-\t\treturn composite;", "+\t\tDialogField.createEmptySpace(dlgArea, 1);", "+", "+\t\t// Set up label for processor contents list", "+\t\tLabel description= new Label(dlgArea, SWT.WRAP);", "+\t\tdescription.setText(Messages.AdvancedFactoryPathOptionsDialog_label_processorsInThisContainer); ", "+\t\tGridData gdLabel= new GridData(GridData.HORIZONTAL_ALIGN_FILL);", "+\t\tgdLabel.horizontalSpan= 2;", "+\t\tdescription.setLayoutData(gdLabel);", "+", "+\t\t// Set up processor contents list", "+\t\t_contentsField= new ListViewer(dlgArea, SWT.SINGLE | SWT.BORDER | SWT.H_SCROLL | SWT.V_SCROLL);", "+        GridData data = new GridData(SWT.FILL, SWT.FILL, true, true);", "+        data.heightHint = convertHeightInCharsToPixels(LIST_HEIGHT);", "+        data.widthHint = convertWidthInCharsToPixels(LIST_WIDTH);", "+        _contentsField.getList().setLayoutData(data);", "+        _contentsField.getList().setFont(parent.getFont());", "+        try {", "+\t        for (String name : _fc.getFactoryNames()) {", "+\t        \t_contentsField.add(name);", "+\t        }", "+        }", "+        catch (IOException e) {", "+\t\t\tfinal String message = \"Unable to load factory names from container [\" + _fc.getId() + \"]\"; //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\tExceptionHandler.log(e, message);", "+        }", "+        _contentsField.setSelection(null, false);", "+        ", "+\t\tapplyDialogFont(dlgArea);\t\t", "+\t\treturn dlgArea;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f96b6fe55d8acdddc950cdcfb08d594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/AptConfigurationBlock.java", "commitBeforeChange": "7efb5ac008a425608cb5d382a82b0558813ab0c7", "commitAfterChange": "b7a892c71a4ea9058326a1ed58a7293f0cb9329c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \t@Override \tprotected Control createContents(Composite parent)", "signatureAfterChange": " \t \t@Override \tprotected Control createContents(Composite parent)", "diff": ["-\t\tComposite composite= new Composite(parent, SWT.NONE);", "-\t\tcomposite.setFont(parent.getFont());", "+\t\tfBlockControl = new Composite(parent, SWT.NONE);", "+\t\tfBlockControl.setFont(parent.getFont());", "-\t\tcomposite.setLayout(layout);", "+\t\tfBlockControl.setLayout(layout);", "-\t\tfAptEnabledField.doFillIntoGrid(composite, 2);", "-\t\t", "-\t\tfGenSrcDirField.doFillIntoGrid(composite, 2);", "-\t\t((GridData) fGenSrcDirField.getTextControl(null).getLayoutData()).grabExcessHorizontalSpace= true;", "-\t\t", "-\t\tfProcessorOptionsField.doFillIntoGrid(composite, 2);", "-\t\t((GridData) fProcessorOptionsField.getTextControl(null).getLayoutData()).grabExcessHorizontalSpace= true;", "+\t\tDialogField[] fields = new DialogField[] {", "+\t\t\tfAptEnabledField,", "+\t\t\tfGenSrcDirField,", "+\t\t\tfProcessorOptionsField,", "+\t\t};", "+\t\tLayoutUtil.doDefaultLayout(fBlockControl, fields, true, SWT.DEFAULT, SWT.DEFAULT);", "+\t\tLayoutUtil.setHorizontalGrabbing(fProcessorOptionsField.getListControl(null));", "-\t\tLabel description= new Label(composite, SWT.WRAP);", "+\t\tLabel description= new Label(fBlockControl, SWT.WRAP);", "-\t\tGridData gd= new GridData(GridData.HORIZONTAL_ALIGN_FILL);", "-\t\tgd.horizontalSpan= 2;", "-\t\tgd.widthHint= fPixelConverter.convertWidthInCharsToPixels(60);", "-\t\tdescription.setLayoutData(gd);", "+\t\tGridData gdLabel= new GridData(GridData.HORIZONTAL_ALIGN_FILL);", "+\t\tgdLabel.horizontalSpan= 2;", "+\t\tgdLabel.widthHint= fPixelConverter.convertWidthInCharsToPixels(60);", "+\t\tdescription.setLayoutData(gdLabel);", "-\t\tDialog.applyDialogFont(composite);", "+\t\tDialog.applyDialogFont(fBlockControl);", "-\t\treturn composite;", "+\t\treturn fBlockControl;"]}], "num": 114}