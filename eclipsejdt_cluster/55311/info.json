{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "14130fe4adef1eee49b274437ad5fc15", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11add73de8f9e22dec0e154cd501f895", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "fe98ddbed4cd1f8bb449a78291ed05ed04f18196", "commitAfterChange": "afe1aa1e23ce83b573f50388f1a50d564fe4b851", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, \t\t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, \t\t\tBlockScope scope)", "diff": ["+\t\tif (parameterizedQualifiedTypeReference.annotations != null) formatInlineAnnotations(parameterizedQualifiedTypeReference.annotations[0], false);", "-\t\t\t}", "-\t\t}", "-\t\tint dimensions = getDimensions();", "-\t\tif (dimensions != 0 && dimensions <= parameterizedQualifiedTypeReference.dimensions()) {", "-\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\tif (this.preferences.insert_space_between_brackets_in_array_type_reference) {", "-\t\t\t\t\tthis.scribe.space();", "+\t\t\t\tif (parameterizedQualifiedTypeReference.annotations != null && parameterizedQualifiedTypeReference.annotations.length > i+1) {", "+\t\t\t\t\tformatInlineAnnotations(parameterizedQualifiedTypeReference.annotations[i+1], false);", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "+\t\tformatLeadingDimensions(parameterizedQualifiedTypeReference, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31562ddc38dc3f084b3ed95904f02e7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "eb10ec59bc98c7f83476bce7202c39d197cae0df", "commitAfterChange": "f7fbe1c2009ea9c5d97d4fd12e8279412bfffc23", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 104, "signatureBeforeChange": "\r \t\r \tprivate boolean checkForParenthesis(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "signatureAfterChange": "\r \t\r \tprivate boolean checkForParenthesis(org.eclipse.jdt.internal.compiler.ast.Expression expression)", "diff": ["-\t\tint leftParentCount = 0;\r", "-\t\tint rightParentCount = 0;\r", "+\t\tint dangling = 0, token;\r", "+\t\tboolean first = true;\r", "-\t\t\tint token = scanner.getNextToken();\r", "-\t\t\tif (token != Scanner.TokenNameLPAREN) {\r", "-\t\t\t\treturn false;\r", "-\t\t\t} else {\r", "-\t\t\t\tleftParentCount++;\r", "-\t\t\t}\r", "-\t\t\tboolean stop = false;\r", "-\t\t\twhile (!stop && ((token  = scanner.getNextToken()) != Scanner.TokenNameEOF)) {\r", "-\t\t\t\tswitch(token) {\r", "-\t\t\t\t\tcase Scanner.TokenNameLPAREN:\r", "-\t\t\t\t\t\tleftParentCount++;\r", "+\t\t\twhile (true) {\r", "+\t\t\t\ttoken = scanner.getNextToken();\r", "+\t\t\t\tswitch (token) {\r", "+\t\t\t\t\tcase Scanner.TokenNameLPAREN :\r", "+\t\t\t\t\t\tdangling ++;\r", "-\t\t\t\t\tcase Scanner.TokenNameRPAREN:\r", "-\t\t\t\t\t\trightParentCount++;\r", "-\t\t\t\t\t\tif (rightParentCount == leftParentCount) {\r", "-\t\t\t\t\t\t\t// we found the matching parenthesis\r", "-\t\t\t\t\t\t\tstop = true;\r", "-\t\t\t\t\t\t}\r", "+\t\t\t\t\tcase Scanner.TokenNameRPAREN :\r", "+\t\t\t\t\t\tif (first) return false;\r", "+\t\t\t\t\t\tdangling --;\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase Scanner.TokenNameEOF :\r", "+\t\t\t\t\t\tif (first) return false;\r", "+\t\t\t\t\t\treturn dangling == 0;\r", "+\t\t\t\t\tdefault :\r", "+\t\t\t\t\t\tif (first) return false;\r", "+\t\t\t\t\t\tif (dangling == 0) return false;\r", "+\t\t\t\tfirst = false;\r", "-\t\t\treturn (scanner.currentPosition >= end) && (rightParentCount == leftParentCount);\r", "-\t\t} catch(InvalidInputException e) {\r", "+\t\t} catch (InvalidInputException e){\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c38ae10a50271de534ca0e461fae792", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "fe98ddbed4cd1f8bb449a78291ed05ed04f18196", "commitAfterChange": "afe1aa1e23ce83b573f50388f1a50d564fe4b851", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 111, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, \t\t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, \t\t\tClassScope scope)", "diff": ["+\t\tif (parameterizedQualifiedTypeReference.annotations != null) formatInlineAnnotations(parameterizedQualifiedTypeReference.annotations[0], false);", "-\t\t}", "-\t\tint dimensions = getDimensions();", "-\t\tif (dimensions != 0 && dimensions <= parameterizedQualifiedTypeReference.dimensions()) {", "-\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\tif (this.preferences.insert_space_between_brackets_in_array_type_reference) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "+\t\t\tif (parameterizedQualifiedTypeReference.annotations != null && parameterizedQualifiedTypeReference.annotations.length > i+1) {", "+\t\t\t\tformatInlineAnnotations(parameterizedQualifiedTypeReference.annotations[i+1], false);", "+\t\tformatLeadingDimensions(parameterizedQualifiedTypeReference, true);"]}], "num": 55311}