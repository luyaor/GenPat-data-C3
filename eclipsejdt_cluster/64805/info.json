{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b67db562e5e11f8c9f84d5f765ba5b06", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b311ce46bcf74a6a1bef9836d182720", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "225ea5653541f8a56d524334d3e9e6bb7fa18aa6", "commitAfterChange": "e67d1dc6830648c83fdb0e0b83b59925424638d8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tboolean hasResourceWrapperType = this.resolvedType instanceof ReferenceBinding ", "+\t\tboolean analyseResources = currentScope.compilerOptions().analyseResourceLeaks;", "+\t\tboolean hasResourceWrapperType = analyseResources ", "+\t\t\t\t&& this.resolvedType instanceof ReferenceBinding ", "-\t\t\tif (!hasResourceWrapperType) { // allocation of wrapped closeables is analyzed specially", "+\t\t\tif (analyseResources && !hasResourceWrapperType) { // allocation of wrapped closeables is analyzed specially", "-\tif (FakedTrackingVariable.isAnyCloseable(this.resolvedType))", "+\tif (FakedTrackingVariable.isAnyCloseable(this.resolvedType) && currentScope.compilerOptions().analyseResourceLeaks)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa0f918fe190e9479f13c0f7369d4d5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "40ad9904e939ba54abece52421044021edd6e1c0", "commitAfterChange": "8d45cb26fc5ad244f93e8632d761d46ad4a120cf", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+", "+\t\tboolean hasResourceWrapperType = this.resolvedType instanceof ReferenceBinding ", "+\t\t\t\t&& ((ReferenceBinding)this.resolvedType).hasTypeBit(TypeIds.BitWrapperCloseable);", "-\t\t\t// if argument is an AutoCloseable insert info that it *may* be closed (by the target method, i.e.)", "-\t\t\tflowInfo = FakedTrackingVariable.markPassedToOutside(currentScope, this.arguments[i], flowInfo);", "+\t\t\t// if argument is an AutoCloseable insert info that it *may* be closed (by the target method, i.e.)", "+\t\t\tif (!hasResourceWrapperType) { // allocation of wrapped closeables is analyzed specially", "+\t\t\t\tflowInfo = FakedTrackingVariable.markPassedToOutside(currentScope, this.arguments[i], flowInfo, false);", "+\t\t\t}", "+", "+\tif (FakedTrackingVariable.isAnyCloseable(this.resolvedType))", "+\t\tFakedTrackingVariable.analyseCloseableAllocation(currentScope, flowInfo, this);", "+"]}], "num": 64805}