{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "baf09d192794e996657f5cb533a1bb4e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aca518e9249a999d1dce9f8b83319334", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "152d18d4cacb9bd3ea7ba43af5713a4d308c0471", "commitAfterChange": "01ebf46478e499b6682d2e0eb34536c095d3cff8", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  protected void consumeClassInstanceCreationExpressionWithTypeArguments()", "signatureAfterChange": "  protected void consumeClassInstanceCreationExpressionWithTypeArguments()", "diff": ["-\tthis.patternLocator.match(this.expressionStack[this.expressionPtr], this.nodeSet);", "+\tif (this.patternFineGrain == 0) {", "+\t\tthis.patternLocator.match(this.expressionStack[this.expressionPtr], this.nodeSet);", "+\t} else if ((this.patternFineGrain & IJavaSearchConstants.CLASS_INSTANCE_CREATION_TYPE_REFERENCE) != 0) {", "+\t\tAllocationExpression allocation = (AllocationExpression) this.expressionStack[this.expressionPtr];", "+\t\tthis.patternLocator.match(allocation.type, this.nodeSet);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e882cfb8b491cedca0e718018f5fe828", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "152d18d4cacb9bd3ea7ba43af5713a4d308c0471", "commitAfterChange": "01ebf46478e499b6682d2e0eb34536c095d3cff8", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  protected void consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()", "signatureAfterChange": "  protected void consumeClassInstanceCreationExpressionQualifiedWithTypeArguments()", "diff": ["-\tthis.patternLocator.match(this.expressionStack[this.expressionPtr], this.nodeSet);", "+\tif (this.patternFineGrain == 0) {", "+\t\tthis.patternLocator.match(this.expressionStack[this.expressionPtr], this.nodeSet);", "+\t} else if ((this.patternFineGrain & IJavaSearchConstants.CLASS_INSTANCE_CREATION_TYPE_REFERENCE) != 0) {", "+\t\tAllocationExpression allocation = (AllocationExpression) this.expressionStack[this.expressionPtr];", "+\t\tthis.patternLocator.match(allocation.type, this.nodeSet);", "+\t}"]}], "num": 28010}