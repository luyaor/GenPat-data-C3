{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4aea468542e80f5e1b3c840b76ad752c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "295d20a9a65d5d88e2f0d2516b6b4793", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static TypeBinding[] greaterLowerBound(TypeBinding[] types, Scope scope, LookupEnvironment environment)", "signatureAfterChange": " \tpublic static TypeBinding[] greaterLowerBound(TypeBinding[] types, Scope scope, LookupEnvironment environment)", "diff": ["+\t\t\t\t\t\t// Skip the following check if inference variables or CaptureBinding18 are involved,", "+\t\t\t\t\t\t// hopefully during inference a contradictory glb will simply not produce a solution", "+\t\t\t\t\t\t// (should essentially be detected beforehand in CaptureBinding18.setUpperBounds()): ", "+\t\t\t\t\t\tif (!narrowType.isProperType(false) || !wideType.isProperType(false))", "+\t\t\t\t\t\t\tcontinue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc5b06f8c8c80096fee5ad1e148400ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "139af85152abd28b521b1facd74797215d800fa6", "commitAfterChange": "df04cb9bfcfec194a3c1180d0af18a4bd840680a", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " \tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, ArrayList visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot)", "signatureAfterChange": " \tpublic void updateCycleParticipants(IClasspathEntry[] preferredClasspath, ArrayList visited, HashSet cycleParticipants, IWorkspaceRoot workspaceRoot)", "diff": ["-\t\t\t\t\tproject.updateCycleParticipants(null, visited, cycleParticipants, workspaceRoot);", "+\t\t\t\t\tif (!cycleParticipants.contains(this) || !cycleParticipants.contains(project)) // skip if both are already part of cycle", "+\t\t\t\t\t\tproject.updateCycleParticipants(null, visited, cycleParticipants, workspaceRoot);"]}], "num": 53997}