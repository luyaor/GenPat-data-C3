{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1d65bc51658e0a242b8114ce48764efc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a191d3d42cc1dff7ffaa5561da73494c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "da3abb814c31b6e1c2d43312de494af316e19273", "commitAfterChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["-\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+memberRef.getName()+\" binding was not found!\", memberRef.getName().resolveBinding());", "+\t\t\t\t\t\tSimpleName name = memberRef.getName();", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+name+\" binding was not found!\", name.resolveBinding());", "-\t\t\t\t\t\tIBinding methNameBinding = methodRef.getName().resolveBinding();", "+\t\t\t\t\t\tSimpleName methodName = methodRef.getName();", "+\t\t\t\t\t\tIBinding methNameBinding = methodName.resolveBinding();", "-\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\",methNameBinding);", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodName+\" binding was not found!\",methNameBinding);", "-\t\t\t\t\t\t\t\tchar firstChar = methodRef.getName().getIdentifier().charAt(0);", "+\t\t\t\t\t\t\t\tchar firstChar = methodName.getIdentifier().charAt(0);", "-\t\t\t\t\t\t\t\tif (methNameBinding.getName().equals(methodRef.getName().getIdentifier())) { // binding is not null only for constructor", "-\t\t\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\",methNameBinding);", "+\t\t\t\t\t\t\t\tif (methNameBinding.getName().equals(methodName.getIdentifier())) { // binding is not null only for constructor", "+\t\t\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodName+\" binding was not found!\",methNameBinding);", "-\t\t\t\t\t\t\t\t\tassumeNull(this.prefix+\"\"+methodRef.getName()+\" binding should be null!\", methNameBinding);", "+\t\t\t\t\t\t\t\t\tassumeNull(this.prefix+\"\"+methodName+\" binding should be null!\", methNameBinding);", "-\t\t\t\t\t\t\tif (methodSimpleType.getIdentifier().equals(methodRef.getName().getIdentifier())) { // binding is not null only for constructor", "-\t\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\",methNameBinding);", "+\t\t\t\t\t\t\tif (methodSimpleType.getIdentifier().equals(methodName.getIdentifier())) { // binding is not null only for constructor", "+\t\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodName+\" binding was not found!\",methNameBinding);", "-\t\t\t\t\t\t\t\tassumeNull(this.prefix+\"\"+methodRef.getName()+\" binding should be null!\", methNameBinding);", "+\t\t\t\t\t\t\t\tassumeNull(this.prefix+\"\"+methodName+\" binding should be null!\", methNameBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e50038c27829ae26179adc8b4171e54b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "bb9caf310cba60ea26e86d0cc9ab1b54feb67156", "commitAfterChange": "d63e77a4f3e59d96dada738a65e836b17108f62c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate void verifyBindings(TagElement tagElement)", "signatureAfterChange": " \tprivate void verifyBindings(TagElement tagElement)", "diff": ["-\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\", methodRef.getName().resolveBinding());", "-\t\t\t\t\t\tverifyNameBindings(methodRef.getQualifier());", "+\t\t\t\t\t\tIBinding methNameBinding = methodRef.getName().resolveBinding();", "+\t\t\t\t\t\tName methodQualifier = methodRef.getQualifier();", "+\t\t\t\t\t\t// TODO (frederic) Replace the two following lines by commented block when bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=62650 will be fixed", "+\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\",methNameBinding);", "+\t\t\t\t\t\tverifyNameBindings(methodQualifier);", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\tif (methodQualifier == null) {", "+\t\t\t\t\t\t\tif (methNameBinding == null) {", "+\t\t\t\t\t\t\t\tchar firstChar = methodRef.getName().getIdentifier().charAt(0);", "+\t\t\t\t\t\t\t\tif (Character.isUpperCase(firstChar)) {", "+\t\t\t\t\t\t\t\t\t// assume that selector starting with uppercase is for constructor => signal that binding is null", "+\t\t\t\t\t\t\t\t\tSystem.out.println(this.prefix+\"Binding for selector of  '\"+methodRef+\"' is null.\");", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (methNameBinding.getName().equals(methodRef.getName().getIdentifier())) { // binding is not null only for constructor", "+\t\t\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\",methNameBinding);", "+\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\tassumeNull(this.prefix+\"\"+methodRef.getName()+\" binding should be null!\", methNameBinding);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tSimpleName methodSimpleType = null;", "+\t\t\t\t\t\t\tif (methodQualifier.isQualifiedName()) {", "+\t\t\t\t\t\t\t\tmethodSimpleType = ((QualifiedName)methodQualifier).getName();", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tmethodSimpleType = (SimpleName) methodQualifier;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (methodSimpleType.getIdentifier().equals(methodRef.getName().getIdentifier())) { // binding is not null only for constructor", "+\t\t\t\t\t\t\t\tassumeNotNull(this.prefix+\"\"+methodRef.getName()+\" binding was not found!\",methNameBinding);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tassumeNull(this.prefix+\"\"+methodRef.getName()+\" binding should be null!\", methNameBinding);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tverifyNameBindings(methodRef.getQualifier());", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t*/"]}], "num": 59400}