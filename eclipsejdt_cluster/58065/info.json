{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d7e87ee9ff9ff97d99444c74f5114fa9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "203a4df8c4ad50e65fb9176a61693b5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": "  \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "signatureAfterChange": "  \tprivate void findVariablesAndMethods( \t\tchar[] token, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope)", "diff": ["-\t\t\t\t\t\tthis.requestor.acceptLocalVariable(", "-\t\t\t\t\t\t\tlocal.name,", "-\t\t\t\t\t\t\tlocal.type == null ", "-\t\t\t\t\t\t\t\t? CharOperation.NO_CHAR", "-\t\t\t\t\t\t\t\t: local.type.qualifiedPackageName(),", "-\t\t\t\t\t\t\tlocal.type == null", "-\t\t\t\t\t\t\t\t? local.declaration.type.toString().toCharArray()", "-\t\t\t\t\t\t\t\t: local.type.qualifiedSourceName(),", "-\t\t\t\t\t\t\tlocal.modifiers,", "-\t\t\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.LOCAL_VARIABLE_REF)) {", "+\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.LOCAL_VARIABLE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\tproposal.setSignature(", "+\t\t\t\t\t\t\t\tlocal.type == null", "+\t\t\t\t\t\t\t\t? createTypeSignature(", "+\t\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR,", "+\t\t\t\t\t\t\t\t\t\tlocal.declaration.type.toString().toCharArray())", "+\t\t\t\t\t\t\t\t: getSignature(local.type));", "+\t\t\t\t\t\t\tif(local.type == null) {", "+\t\t\t\t\t\t\t\t//proposal.setPackageName(null);", "+\t\t\t\t\t\t\t\tproposal.setTypeName(local.declaration.type.toString().toCharArray());", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tproposal.setPackageName(local.type.qualifiedPackageName());", "+\t\t\t\t\t\t\t\tproposal.setTypeName(local.type.qualifiedSourceName());", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tproposal.setName(local.name);", "+\t\t\t\t\t\t\tproposal.setCompletion(local.name);", "+\t\t\t\t\t\t\tproposal.setFlags(local.modifiers);", "+\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37d5f98098ffdf36850af3c44a8900d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "64298556651d81e68f8405c1642b36744d7373dd", "commitAfterChange": "b92bafecd030777e0d6056677f8286cf640a489f", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \t \tprivate void proposeNewMethod(char[] token, ReferenceBinding reference)", "signatureAfterChange": " \t \tprivate void proposeNewMethod(char[] token, ReferenceBinding reference)", "diff": ["+\t\tint relevance = computeBaseRelevance();", "+\t\trelevance += computeRelevanceForInterestingProposal();", "-\t\tif(this.requestor instanceof IExtendedCompletionRequestor) {", "-\t\t\tIExtendedCompletionRequestor extendedRequestor = (IExtendedCompletionRequestor) this.requestor;", "-\t\t\t", "-\t\t\tint relevance = computeBaseRelevance();", "-\t\t\trelevance += computeRelevanceForInterestingProposal();", "-\t\t\t", "-\t\t\textendedRequestor.acceptPotentialMethodDeclaration(", "-\t\t\t\t\treference.qualifiedPackageName(),", "-\t\t\t\t\treference.qualifiedSourceName(),", "-\t\t\t\t\ttoken,", "-\t\t\t\t\tthis.startPosition - this.offset,", "-\t\t\t\t\tthis.endPosition - this.offset,", "-\t\t\t\t\trelevance);", "+\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.POTENTIAL_METHOD_DECLARATION, this.actualCompletionPosition);", "+\t\tproposal.setDeclarationSignature(getSignature(reference));", "+\t\tproposal.setSignature(", "+\t\t\t\tcreateMethodSignature(", "+\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\tCharOperation.NO_CHAR,", "+\t\t\t\t\t\tVOID));", "+\t\tproposal.setDeclarationPackageName(reference.qualifiedPackageName());", "+\t\tproposal.setDeclarationTypeName(reference.qualifiedSourceName());", "+\t\t", "+\t\t//proposal.setPackageName(null);", "+\t\tproposal.setTypeName(VOID);", "+\t\tproposal.setName(token);", "+\t\t//proposal.setParameterPackageNames(null);", "+\t\t//proposal.setParameterTypeNames(null);", "+\t\t//proposal.setPackageName(null);", "+\t\tproposal.setCompletion(token);", "+\t\tproposal.setFlags(Flags.AccPublic);", "+\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\tproposal.setRelevance(relevance);", "+\t\tthis.requestor.accept(proposal);", "+\t\tif(DEBUG) {", "+\t\t\tthis.printDebug(proposal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "600e23e5773e8dff630d4925c0ca39af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "24cf489e4c973e29dff7eade9d41897f72a37db0", "commitAfterChange": "f924ed86fe1dbe148077a9cade20b11e404ba89b", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 182, "signatureBeforeChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding, \t\tScope scope)", "signatureAfterChange": "  \tprivate void findTypesAndSubpackages( \t\tchar[] token, \t\tPackageBinding packageBinding, \t\tScope scope)", "diff": ["+\t\t", "+\t\tboolean allowingLongComputationProposals = isAllowingLongComputationProposals();", "+\t\t", "+\t\tboolean proposeConstructor =", "+\t\t\tallowingLongComputationProposals &&", "+\t\t\tthis.assistNodeIsConstructor &&", "+\t\t\t(!isIgnored(CompletionProposal.CONSTRUCTOR_INVOCATION, CompletionProposal.TYPE_REF) ||", "+\t\t\t\t\t!isIgnored(CompletionProposal.ANONYMOUS_CLASS_CONSTRUCTOR_INVOCATION, CompletionProposal.TYPE_REF));", "-\t\tif (proposeType && this.unitScope != null) {", "+\t\tif ((proposeType || proposeConstructor) && this.unitScope != null) {", "-\t\t\t\tthis.knownTypes.put(CharOperation.concat(sourceType.qualifiedPackageName(), sourceType.sourceName(), '.'), this);", "+\t\t\t\tthis.knownTypes.put(CharOperation.concat(sourceType.qualifiedPackageName(), sourceType.sourceName(), '.'), KNOWN_TYPE_WITH_KNOWN_CONSTRUCTORS);", "+\t\t\t\t", "-\t\t\t\tif(proposeType) {", "+\t\t\t\tif(proposeType &&", "+\t\t\t\t\t\t(!this.assistNodeIsConstructor ||", "+\t\t\t\t\t\t\t\t!allowingLongComputationProposals ||", "+\t\t\t\t\t\t\t\thasStaticMemberTypes(sourceType, null, this.unitScope) ||", "+\t\t\t\t\t\t\t\thasMemberTypesInEnclosingScope(sourceType, scope))) {", "+\t\t\t\t", "+\t\t\t\tif (proposeConstructor) {", "+\t\t\t\t\tfindConstructorsOrAnonymousTypes(", "+\t\t\t\t\t\t\tsourceType,", "+\t\t\t\t\t\t\tscope,", "+\t\t\t\t\t\t\tFakeInvocationSite,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\trelevance);", "+\t\t\t\t}", "-\t\tif(proposeType) {", "+\t\tif (proposeConstructor) {", "+", "+\t\t\t", "+\t\t\tcheckCancel();", "+\t\t\t", "+\t\t\tthis.foundConstructorsCount = 0;", "+\t\t\tthis.nameEnvironment.findConstructorDeclarations(", "+\t\t\t\t\tqualifiedName,", "+\t\t\t\t\tthis.options.camelCaseMatch,", "+\t\t\t\t\tthis,", "+\t\t\t\t\tthis.monitor);", "+\t\t\tacceptConstructors(scope);", "+\t\t} if(proposeType) {", "+\t\t"]}], "num": 58065}