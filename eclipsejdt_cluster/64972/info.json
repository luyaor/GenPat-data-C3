{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b26cb2359e09b8c9e728fd559150bcc", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12308ceb8f51238e335fb1d4e65f2942", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "0848b8a6a9afff16623dfc6b0821adb833326b41", "commitAfterChange": "29d4a1149e392c0b5c052a9202992e800f5506a5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tCompilerOptions compilerOptions = currentScope.compilerOptions();", "-\t\t\t&& currentScope.compilerOptions().analyseResourceLeaks", "+\t\t\t&& compilerOptions.analyseResourceLeaks", "-\tint nullStatus = this.expression.nullStatus(flowInfo);", "+\tint nullStatus = this.expression.nullStatus(flowInfo, flowContext);", "-\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, local, nullStatus, this.expression, this.expression.resolvedType);", "+\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\tVariableBinding var = this.lhs.nullAnnotatedVariableBinding(compilerOptions.sourceLevel >= ClassFileConstants.JDK1_8);", "+\t\tif (var != null) {", "+\t\t\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, var, nullStatus, this.expression, this.expression.resolvedType);", "+\t\t\tif (nullStatus == FlowInfo.NON_NULL", "+\t\t\t\t\t&& var instanceof FieldBinding", "+\t\t\t\t\t&& this.lhs instanceof Reference", "+\t\t\t\t\t&& compilerOptions.enableSyntacticNullAnalysisForFields)", "+\t\t\t{", "+\t\t\t\tint timeToLive = (this.bits & InsideExpressionStatement) != 0", "+\t\t\t\t\t\t\t\t\t? 2  // assignment is statement: make info survives the end of this statement", "+\t\t\t\t\t\t\t\t\t: 1; // assignment is expression: expire on next event.", "+\t\t\t\tflowContext.recordNullCheckedFieldReference((Reference) this.lhs, timeToLive);", "+\t\t\t}", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbbab8b702ff03b8147f74520588fe40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "b14a6c4d09a9bece1bab75937908ff44df19fa09", "commitAfterChange": "a846071c58f9098177eef02be0134294158f9c4f", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tCompilerOptions compilerOptions = currentScope.compilerOptions();", "-\t\t\t&& currentScope.compilerOptions().analyseResourceLeaks", "+\t\t\t&& compilerOptions.analyseResourceLeaks", "-\tint nullStatus = this.expression.nullStatus(flowInfo);", "+\tint nullStatus = this.expression.nullStatus(flowInfo, flowContext);", "-\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, local, nullStatus, this.expression, this.expression.resolvedType);", "+\tif (compilerOptions.isAnnotationBasedNullAnalysisEnabled) {", "+\t\tVariableBinding var = this.lhs.nullAnnotatedVariableBinding();", "+\t\tif (var != null) {", "+\t\t\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, var, nullStatus, this.expression, this.expression.resolvedType);", "+\t\t\tif (nullStatus == FlowInfo.NON_NULL", "+\t\t\t\t\t&& var instanceof FieldBinding", "+\t\t\t\t\t&& this.lhs instanceof Reference", "+\t\t\t\t\t&& compilerOptions.enableSyntacticNullAnalysisForFields)", "+\t\t\t{", "+\t\t\t\tint timeToLive = (this.bits & InsideExpressionStatement) != 0", "+\t\t\t\t\t\t\t\t\t? 2  // assignment is statement: make info survives the end of this statement", "+\t\t\t\t\t\t\t\t\t: 1; // assignment is expression: expire on next event.", "+\t\t\t\tflowContext.recordNullCheckedFieldReference((Reference) this.lhs, timeToLive);", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 64972}