{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e931ac1ec56bad772c06659c2e5ee6d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fbe6c8c084571c0266e313e2497bb77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldPattern.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public FieldPattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tchar[] name,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName, \tString signature, \tint matchRule)", "signatureAfterChange": " public FieldPattern( \tboolean findDeclarations, \tboolean readAccess, \tboolean writeAccess, \tchar[] name,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName, \tString typeSignature, \tint matchRule)", "diff": ["-\tString signature,", "+\tString typeSignature,", "-\tif (signature != null) computeSignature(signature);", "+\t// store type signatures and arguments", "+\tif (typeSignature != null) {", "+\t\tthis.typeSignatures = Util.splitTypeLevelsSignature(typeSignature);", "+\t\tsetTypeArguments(Util.getAllTypeArguments(this.typeSignatures));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8acb8e1a8de6947738148b305bf40285", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "23df6bbbb36a9f50a63aa5ce59d1913148166f08", "commitAfterChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tvoid storeTypeSignaturesAndArguments(IType type)", "signatureAfterChange": " \tvoid storeTypeSignaturesAndArguments(IType type)", "diff": ["+\t */", "-\t\t\t// Use unique key to extract signatures and type arguments", "+\t\t} else if (type instanceof ParameterizedBinaryType) {", "+\t\t\tthis.typeSignatures = Util.splitTypeLevelsSignature(((ParameterizedBinaryType)type).uniqueKey);", "+\t\t\tsetTypeArguments(Util.getAllTypeArguments(this.typeSignatures));"]}], "num": 38582}