{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "838c1d28b5419f5ba10bcd94b48955ab", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e920d1254f76e32bc225b40f0e2269d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "86397dfc80023f615cc88c0705b2ada916e6efb2", "commitAfterChange": "24624a25f60573230ed7652730faedca15fd4d8b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic boolean isPackage(char[][] parentPackageName, char[] subPackageName)", "signatureAfterChange": " \tpublic boolean isPackage(char[][] parentPackageName, char[] subPackageName)", "diff": ["-\t\tif (subPackageName == null || CharOperation.contains('.', subPackageName))", "-\t\t\treturn false;", "-\t\tif (parentPackageName == null || parentPackageName.length == 0)", "-\t\t\treturn isTopLevelPackage(subPackageName);", "-\t\tfor (int i = 0, length = parentPackageName.length; i < length; i++)", "-\t\t\tif (parentPackageName[i] == null || CharOperation.contains('.', parentPackageName[i]))", "-\t\t\t\treturn false;", "-", "-\t\tString packageName = new String(CharOperation.concatWith(parentPackageName, subPackageName, '.'));", "-\t\treturn this.nameLookup.findPackageFragments(packageName, false) != null;", "-\t}", "+\t\tString[] pkgName;", "+\t\tif (parentPackageName == null)", "+\t\t\tpkgName = new String[] {new String(subPackageName)};", "+\t\telse {", "+\t\t\tint length = parentPackageName.length;", "+\t\t\tpkgName = new String[length+1];", "+\t\t\tfor (int i = 0; i < length; i++)", "+\t\t\t\tpkgName[i] = new String(parentPackageName[i]);", "+\t\t\tpkgName[length] = new String(subPackageName);", "+\t\t}", "+\t\treturn this.nameLookup.isPackage(pkgName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44bef7365e887c56212888f03ebfed25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "1f874aab25a1e21bfc1a29ee829879f30b3a1fd9", "commitAfterChange": "1897b57abd9c55b801709ab52b14a19d8676374f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic boolean isPackage(char[][] parentPackageName, char[] subPackageName)", "signatureAfterChange": "\r \tpublic boolean isPackage(char[][] parentPackageName, char[] subPackageName)", "diff": ["+\t\tif (subPackageName == null || CharOperation.contains('.', subPackageName))\r", "+\t\t\treturn false;\r", "-\t\tif (subPackageName == null)\r", "-\t\t\treturn false;\r", "-\t\tint length = parentPackageName.length;\r", "-\t\tStringBuffer buffer = new StringBuffer((length + 1) * 6);\r", "-\t\tfor (int i = 0; i < length; i++) {\r", "-\t\t\tif (parentPackageName[i] == null || isQualified(parentPackageName[i]))\r", "+\t\tfor (int i = 0, length = parentPackageName.length; i < length; i++)\r", "+\t\t\tif (parentPackageName[i] == null || CharOperation.contains('.', parentPackageName[i]))\r", "-\t\t\tbuffer.append(parentPackageName[i]);\r", "-\t\t\tbuffer.append('.');\r", "-\t\t}\r", "-\t\tif (isQualified(subPackageName)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tbuffer.append(subPackageName);\r", "-\t\tboolean result =\r", "-\t\t\tthis.nameLookup.findPackageFragments(buffer.toString(), false) != null;\r", "-\t\treturn result;\r", "-\t}\r", "+\t\tString packageName = new String(CharOperation.concatWith(parentPackageName, subPackageName, '.'));\r", "+\t\treturn this.nameLookup.findPackageFragments(packageName, false) != null;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec80b2c5b1afe89c3b4f8bfc443dbcce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/TypeResolveTests.java", "commitBeforeChange": "991fd6e4b6634483ff414608784017adef86e93b", "commitAfterChange": "88f4789ab87b5741bd84f761926c87f3851c7700", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private String resultToString(String[][] result)", "signatureAfterChange": " protected void assertTypesEqual(String expected, String[][] types)", "diff": ["-private String resultToString(String[][] result) {", "-\tStringBuffer toString = new StringBuffer();", "-\tif(result != null) {", "-\t\tfor (int i = 0; i < result.length; i++) {", "-\t\t\tString[] qualifiedName = result[i];", "+protected void assertTypesEqual(String expected, String[][] types) {", "+\tStringBuffer buffer = new StringBuffer();", "+\tif(types != null) {", "+\t\tfor (int i = 0, length = types.length; i < length; i++) {", "+\t\t\tString[] qualifiedName = types[i];", "-\t\t\t\ttoString.append(packageName);", "-\t\t\t\ttoString.append(\".\");", "+\t\t\t\tbuffer.append(packageName);", "+\t\t\t\tbuffer.append(\".\");", "-\t\t\ttoString.append(qualifiedName[1]);", "-\t\t\tif (i < result.length-1) {", "-\t\t\t\ttoString.append(\"\\n\");", "+\t\t\tbuffer.append(qualifiedName[1]);", "+\t\t\tif (i < length-1) {", "+\t\t\t\tbuffer.append(\"\\n\");", "+\t} else {", "+\t\tbuffer.append(\"<null>\");", "-\treturn toString.toString();", "+\tString actual = buffer.toString();", "+\tif (!expected.equals(actual)) {", "+\t \tSystem.out.print(Util.displayString(actual, 2));", "+\t \tSystem.out.println(\",\");", "+\t}", "+\tassertEquals(", "+\t\t\"Unexpected types\",", "+\t\texpected, ", "+\t\tactual);"]}], "num": 29287}