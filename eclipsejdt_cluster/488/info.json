{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97ad133c51af260eaae9fa230c98b19e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20d64b36d93c06c0d6c90872b94e4ea9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void test008()", "signatureAfterChange": "  \tpublic void test008()", "diff": ["-\t\t\t\t\"class C extends B { public A foo() { return null; } }\\n\" +", "+\t\t\t\t\"class C extends B { @Override public A foo() { return null; } }\\n\" +", "-\t\t\t\"\tclass C extends B { public A foo() { return null; } }\\r\\n\" + ", "-\t\t\t\"\t                             ^^^^^\\n\" + ", "+\t\t\t\"\tclass C extends B { @Override public A foo() { return null; } }\\r\\n\" + ", "+\t\t\t\"\t                                       ^^^^^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "899d8798814847dae18ea7a035b91552", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "3d790b2a3902e812434ad14129911a29b3d9bdb4", "commitAfterChange": "eef5cdc73ea4cf102d98e5e7858673a91a3f6a7f", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \tpublic void test027()", "signatureAfterChange": " \tpublic void test027()", "diff": ["+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"\ttransient private X(Object... o) {}\\n\" + ", "+\t\t\t\t\"\tvoid test() { X x = new X(1, 2); }\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 2)\\n\" + ", "+\t\t\t\"\ttransient private X(Object... o) {}\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Illegal modifier for the method X.X()\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9882a1e8ffc47bbdd10b10599ce477e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "a00b91e363390d5872f24709421a2a2b1249ea30", "commitAfterChange": "61bf91bb0112a7323235a8711e82564a6109221c", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void test007()", "signatureAfterChange": "  \tpublic void test007()", "diff": ["-\t\t\t\t\"class B extends A { short get(short i, short s) {return i; } }\\n\"", "+\t\t\t\t\"class B extends A { @Override short get(short i, short s) {return i; } }\\n\"", "-\t\t\t\"\tclass B extends A { short get(short i, short s) {return i; } }\\r\\n\" + ", "-\t\t\t\"\t                          ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"\tclass B extends A { @Override short get(short i, short s) {return i; } }\\r\\n\" + ", "+\t\t\t\"\t                                    ^^^^^^^^^^^^^^^^^^^^^\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d63104f4c42fe172f00c51a472def916", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "5f30987ed4c6718fa22f7e5f22394952935ee8ac", "commitAfterChange": "4855dee32b913a0e5805b6cdbec146242fbf4388", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void test007()", "signatureAfterChange": "  \tpublic void test007()", "diff": ["+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"A.java\",", "+\t\t\t\t\"class A { int get(short i, short s) { return i; } }\\n\" +", "+\t\t\t\t\"class B extends A { short get(short i, short s) {return i; } }\\n\"", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in A.java (at line 2)\\r\\n\" + ", "+\t\t\t\"\tclass B extends A { short get(short i, short s) {return i; } }\\r\\n\" + ", "+\t\t\t\"\t                          ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The return type is incompatible with A.get(short, short)\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t);"]}], "num": 488}