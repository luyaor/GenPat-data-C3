{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ef9115d99b5f4f96f38aa3b69ffd1fb", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d0412dc375aef8bd4abbb3c4532b209", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\t\tint refinedAccuracy = accuracy;", "-\t\t\t\t\tif (this.pattern != null && this.pattern.isParameterized() && refBinding.isParameterizedType()) {", "-\t\t\t\t\t\tParameterizedTypeBinding parameterizedBinding = (ParameterizedTypeBinding)refBinding;", "-\t\t\t\t\t\trefinedAccuracy = refineAccuracy(accuracy, parameterizedBinding, this.pattern.typeArguments, locator);", "-\t\t\t\t\t\tif (refinedAccuracy == -1) return; // refined accuracy shows an impossible match...", "-\t\t\t\t\t\t// specific report accurate match for parameterized types", "-\t\t\t\t\t\tTypeReference[] typeArguments = qTypeRef instanceof ParameterizedQualifiedTypeReference ? ((ParameterizedQualifiedTypeReference) qTypeRef).typeArguments[lastIndex] : null;", "-\t\t\t\t\t\tlocator.reportAccurateParameterizedTypeReference(qTypeRef, this.pattern.simpleName, start, typeArguments, element, refinedAccuracy);", "-\t\t\t\t\t\treturn;", "-\t\t\t\t\t}", "-\t\t\t\t\tSearchMatch match = locator.newTypeReferenceMatch(element, refinedAccuracy, start, end-start+1, qTypeRef);", "-\t\t\t\t\tlocator.report(match);", "+", "+\t\t\t\t\t//  Look if there's a need to special report for parameterized type", "+\t\t\t\t\tmatchReportReference(qTypeRef, element, accuracy, start, end, lastIndex, refBinding, locator);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93495b717d7cee38ba5d701bbf852a3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "9fa4ee2d52d7a35a0c57f8c4b875f0f155754f75", "commitAfterChange": "330462fa1b1e3cc7e6b257e0a0f3470535bf4f54", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void matchReportReference(ArrayTypeReference arrayRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ArrayTypeReference arrayRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\t\t// TODO (frederic) need to add a test for this case while searching generic types...", "-\t\tTypeBinding refBinding = arrayRef.resolvedType.leafComponentType();", "-\t\tint refinedAccuracy = accuracy;", "-\t\tif (this.pattern != null && this.pattern.isParameterized() && refBinding.isParameterizedType()) {", "-\t\t\tParameterizedTypeBinding parameterizedBinding = (ParameterizedTypeBinding)refBinding;", "-\t\t\trefinedAccuracy = refineAccuracy(accuracy, parameterizedBinding, this.pattern.typeArguments, locator);", "-\t\t\tif (refinedAccuracy == -1) return; // refined accuracy shows an impossible match...", "-\t\t\t// specific report accurate match for parameterized types", "-\t\t\tParameterizedSingleTypeReference paramTypeRef = (ParameterizedSingleTypeReference) arrayRef;", "-\t\t\tlocator.reportAccurateParameterizedTypeReference(paramTypeRef, this.pattern.simpleName, arrayRef.sourceStart, paramTypeRef.typeArguments, element, refinedAccuracy);", "-\t\t\treturn;", "-\t\t}", "+\t\tmatchReportReference(arrayRef, element, accuracy, arrayRef.sourceStart, arrayRef.sourceEnd, -1, arrayRef.resolvedType.leafComponentType(), locator);", "+\t\treturn;"]}], "num": 45931}