{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de549cf1caf53699bbec36ea58eaa508", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30969b4186f59116eeabcb34da47bda7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 224, "methodNumberAfterChange": 13, "signatureBeforeChange": " public final static void initTables() throws java.io.IOException", "signatureAfterChange": " public final static void initTables() throws java.io.IOException", "diff": ["+}", "+public final static void initTables() throws java.io.IOException {", "+", "+\tfinal String prefix = FILEPREFIX;", "+\tint i = 0;", "+\tlhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tchar[] chars = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tcheck_table = new short[chars.length];", "+\tfor (int c = chars.length; c-- > 0;) {", "+\t\tcheck_table[c] = (short) (chars[c] - 32768);", "+\t}", "+\tasb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tasr = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tnasb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tnasr = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tterminal_index = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tnon_terminal_index = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tterm_action = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\t", "+\tscope_prefix = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_suffix = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_lhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_state_set = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_rhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_state = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tin_symb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\t", "+\trhs = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tterm_check = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\tscope_la = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\t", "+\tname = readNameTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\t", "+\trules_compliance = readLongTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "+\t", "+\treadableName = readReadableNameTable(READABLE_NAMES_FILE_NAME);", "+\t", "+\tbase_action = lhs;", "+}", "-}", "-public final static void initTables() throws java.io.IOException {", "-", "-\tfinal String prefix = FILEPREFIX;", "-\tint i = 0;", "-\tlhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tchar[] chars = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tcheck_table = new short[chars.length];", "-\tfor (int c = chars.length; c-- > 0;) {", "-\t\tcheck_table[c] = (short) (chars[c] - 32768);", "-\t}", "-\tasb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tasr = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tnasb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tnasr = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tterminal_index = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tnon_terminal_index = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tterm_action = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\t", "-\tscope_prefix = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_suffix = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_lhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_state_set = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_rhs = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_state = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tin_symb = readTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\t", "-\trhs = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tterm_check = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\tscope_la = readByteTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\t", "-\tname = readNameTable(prefix + (++i) + \".rsc\"); //$NON-NLS-1$", "-\treadableName = readReadableNameTable(READABLE_NAMES);", "-\t", "-\tbase_action = lhs;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc763ceaca5860749ed703375f190f11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "e944f831810e143e8894d05428eb208a2cd78cce", "commitAfterChange": "45b2548f21c6553964603037785b1fef0bb3e0d3", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tprotected void assertSourceEquals(String message, String expected, String actual)", "signatureAfterChange": " \tprotected void assertSourceEquals(String message, String expected, String actual)", "diff": ["+\t\t\tSystem.out.println(\"Expected source in \"+getName()+\" should be:\");"]}], "num": 6884}