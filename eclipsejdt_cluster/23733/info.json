{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b16175c4aa770da00cef5f4c9cc9c4f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "283b8b045d356d32a110c34dac7a46d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "10d0299472db75b0d2601fb1ed8fd13d430fef5a", "commitAfterChange": "1d1bcfc5dd72fdf22291e7342487bb93d58df5c4", "methodNumberBeforeChange": 150, "methodNumberAfterChange": 153, "signatureBeforeChange": " \tprivate void createTypeProposal(ReferenceBinding refBinding, char[] typeName, int accessibility, char[] completionName, int relevance)", "signatureAfterChange": " \tprivate void createTypeProposal( \t\t\tReferenceBinding refBinding, \t\t\tchar[] typeName, \t\t\tint accessibility, \t\t\tchar[] completionName, \t\t\tint relevance, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "diff": ["-\tprivate void createTypeProposal(ReferenceBinding refBinding, char[] typeName, int accessibility, char[] completionName, int relevance) {", "+\tprivate void createTypeProposal(", "+\t\t\tReferenceBinding refBinding,", "+\t\t\tchar[] typeName,", "+\t\t\tint accessibility,", "+\t\t\tchar[] completionName,", "+\t\t\tint relevance,", "+\t\t\tBinding[] missingElements,", "+\t\t\tint[] missingElementsStarts,", "+\t\t\tint[] missingElementsEnds,", "+\t\t\tboolean missingElementsHaveProblems) {", "-\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF) && (this.assistNodeInJavadoc & CompletionOnJavadoc.ONLY_INLINE_TAG) == 0) {", "+\t\tif(!this.isIgnored(CompletionProposal.TYPE_REF, missingElements != null) && (this.assistNodeInJavadoc & CompletionOnJavadoc.ONLY_INLINE_TAG) == 0) {", "+\t\t\tif (missingElements != null) {", "+\t\t\t\tCompletionProposal[] subProposals = new CompletionProposal[missingElements.length];", "+\t\t\t\tfor (int i = 0; i < missingElements.length; i++) {", "+\t\t\t\t\tsubProposals[i] =", "+\t\t\t\t\t\tcreateRequiredTypeProposal(", "+\t\t\t\t\t\t\t\tmissingElements[i],", "+\t\t\t\t\t\t\t\tmissingElementsStarts[i],", "+\t\t\t\t\t\t\t\tmissingElementsEnds[i],", "+\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t}", "+\t\t\t\tproposal.setRequiredProposals(subProposals);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "803859e6f7ed39d0f4db0ccf48322897", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "240396375bcd308bc801defacd8d000d9826bf17", "commitAfterChange": "d24d28f1cf95d80c381c825283113e7b36dcb836", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 119, "signatureBeforeChange": " \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean exactMatch, \t\tboolean isQualified, \t\tint relevance)", "signatureAfterChange": " \tprivate void findAnonymousType( \t\tReferenceBinding currentType, \t\tTypeBinding[] argTypes, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tboolean exactMatch, \t\tboolean isQualified, \t\tint relevance)", "diff": ["+\t\tBinding[] missingElements,", "+\t\tint[] missingElementsStarts,", "+\t\tint[] missingElementsEnds,", "+\t\tboolean missingElementsHaveProblems,", "-\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.ANONYMOUS_CLASS_DECLARATION)) {", "+\t\t\t\tif(!isIgnored(CompletionProposal.ANONYMOUS_CLASS_DECLARATION, missingElements != null)) {", "+\t\t\t\t\tif (missingElements != null) {", "+\t\t\t\t\t\tCompletionProposal[] subProposals = new CompletionProposal[missingElements.length];", "+\t\t\t\t\t\tfor (int i = 0; i < missingElements.length; i++) {", "+\t\t\t\t\t\t\tsubProposals[i] =", "+\t\t\t\t\t\t\t\tcreateRequiredTypeProposal(", "+\t\t\t\t\t\t\t\t\t\tmissingElements[i],", "+\t\t\t\t\t\t\t\t\t\tmissingElementsStarts[i],", "+\t\t\t\t\t\t\t\t\t\tmissingElementsEnds[i],", "+\t\t\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tproposal.setRequiredProposals(subProposals);", "+\t\t\t\t\t}", "+\t\t\t\tmissingElements,", "+\t\t\t\tmissingElementsStarts,", "+\t\t\t\tmissingElementsEnds,", "+\t\t\t\tmissingElementsHaveProblems,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8395e074515bf34352bfb4589d0b2a70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "2005580e3a87de753a5cb3dcf29b780f4e6277a6", "commitAfterChange": "2d913b2d9fca363812e8be56e439d90749177e9c", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tprivate void findClassField(char[] token, TypeBinding receiverType, Scope scope)", "signatureAfterChange": "  \tprivate void findClassField( \t\t\tchar[] token, \t\t\tTypeBinding receiverType, \t\t\tScope scope, \t\t\tBinding[] missingElements, \t\t\tint[] missingElementsStarts, \t\t\tint[] missingElementsEnds, \t\t\tboolean missingElementsHaveProblems)", "diff": ["-\tprivate void findClassField(char[] token, TypeBinding receiverType, Scope scope) {", "+\tprivate void findClassField(", "+\t\t\tchar[] token,", "+\t\t\tTypeBinding receiverType,", "+\t\t\tScope scope,", "+\t\t\tBinding[] missingElements,", "+\t\t\tint[] missingElementsStarts,", "+\t\t\tint[] missingElementsEnds,", "+\t\t\tboolean missingElementsHaveProblems) {", "+\t\t\tif (missingElements != null) {", "+\t\t\t\trelevance += computeRelevanceForMissingElements(missingElementsHaveProblems);", "+\t\t\t}", "+\t\t\t", "-\t\t\tif(!this.requestor.isIgnored(CompletionProposal.FIELD_REF)) {", "+\t\t\tif(!isIgnored(CompletionProposal.FIELD_REF, missingElements != null)) {", "+\t\t\t\tif (missingElements != null) {", "+\t\t\t\t\tCompletionProposal[] subProposals = new CompletionProposal[missingElements.length];", "+\t\t\t\t\tfor (int i = 0; i < missingElements.length; i++) {", "+\t\t\t\t\t\tsubProposals[i] =", "+\t\t\t\t\t\t\tcreateRequiredTypeProposal(", "+\t\t\t\t\t\t\t\t\tmissingElements[i],", "+\t\t\t\t\t\t\t\t\tmissingElementsStarts[i],", "+\t\t\t\t\t\t\t\t\tmissingElementsEnds[i],", "+\t\t\t\t\t\t\t\t\trelevance);", "+\t\t\t\t\t}", "+\t\t\t\t\tproposal.setRequiredProposals(subProposals);", "+\t\t\t\t}"]}], "num": 23733}