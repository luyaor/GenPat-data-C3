{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "46495a01e6848fe633e5958e8e052366", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3add295ea5ebe880bc714f69f005aa96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "314f5d19dc6dfaf646f95bec3ee76ef6107ec5f3", "commitAfterChange": "aab7fbca7a58f211fd1488e84bd3e303405fb6b0", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "diff": ["-\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotNestEntryInEntry, new String[] {entryPath.makeRelative().toString(), otherEntry.getPath().makeRelative().toString(), exclusionPattern})); ", "+\t\t\t\t\t\t\t\t\tif (!disableExclusionPatterns) {", "+\t\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotNestEntryInEntry, new String[] {entryPath.makeRelative().toString(), otherEntry.getPath().makeRelative().toString(), exclusionPattern}));", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Messages.bind(Messages.classpath_cannotNestEntryInEntryNoExclusion, new String[] {entryPath.makeRelative().toString(), otherEntry.getPath().makeRelative().toString(), exclusionPattern}));", "+\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df4ff8fe3088f26ed90028e6af96448c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelStatus.java", "commitBeforeChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "commitAfterChange": "fb24630d4effc492cc8061ff912e20ca28ad20e1", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic String getMessage()", "signatureAfterChange": " \tpublic String getMessage()", "diff": ["-\t\t\tcase CP_VARIABLE_PATH_UNBOUND:", "-\t\t\t\tjavaProject = (IJavaProject)elements[0];", "-\t\t\t\treturn Messages.bind(Messages.classpath_unboundVariablePath, new String[] {path.makeRelative().toString(), javaProject.getElementName()}); ", "-\t\t\t\t\t", "-\t\t\tcase CLASSPATH_CYCLE: ", "-\t\t\t\tjavaProject = (IJavaProject)elements[0];", "-\t\t\t\treturn Messages.bind(Messages.classpath_cycle, javaProject.getElementName()); ", "-\t\t\t\t\t\t\t\t\t\t\t\t ", "-\t\t\tcase DISABLED_CP_EXCLUSION_PATTERNS:", "-\t\t\t\tjavaProject = (IJavaProject)elements[0];", "-\t\t\t\tString projectName = javaProject.getElementName();", "-\t\t\t\tIPath newPath = path;", "-\t\t\t\tif (path.segment(0).toString().equals(projectName)) {", "-\t\t\t\t\tnewPath = path.removeFirstSegments(1);", "-\t\t\t\t}", "-\t\t\t\treturn Messages.bind(Messages.classpath_disabledInclusionExclusionPatterns, new String[] {newPath.makeRelative().toString(), projectName}); ", "-", "-\t\t\tcase DISABLED_CP_MULTIPLE_OUTPUT_LOCATIONS:", "-\t\t\t\tjavaProject = (IJavaProject)elements[0];", "-\t\t\t\tprojectName = javaProject.getElementName();", "-\t\t\t\tnewPath = path;", "-\t\t\t\tif (path.segment(0).toString().equals(projectName)) {", "-\t\t\t\t\tnewPath = path.removeFirstSegments(1);", "-\t\t\t\t}", "-\t\t\t\treturn Messages.bind(Messages.classpath_disabledMultipleOutputLocations, new String[] {newPath.makeRelative().toString(), projectName}); ", "-", "-\t\t\tcase INCOMPATIBLE_JDK_LEVEL:", "+\t\t\t\tcase CP_VARIABLE_PATH_UNBOUND:", "-\t\t\t\t\treturn Messages.bind(Messages.classpath_incompatibleLibraryJDKLevel, new String[]{\t", "-\t\t\t\t\t\tjavaProject.getElementName(), ", "-\t\t\t\t\t\tjavaProject.getOption(JavaCore.COMPILER_CODEGEN_TARGET_PLATFORM, true), ", "-\t\t\t\t\t\tpath.makeRelative().toString(),", "-\t\t\t\t\t\tstring,", "-\t\t\t\t\t});", "-\t\t\tcase CANNOT_RETRIEVE_ATTACHED_JAVADOC :", "-\t\t\t\tif (elements != null && elements.length == 1) {", "-\t\t\t\t\tif (this.string != null) {", "-\t\t\t\t\t\treturn Messages.bind(Messages.status_cannot_retrieve_attached_javadoc, ((JavaElement)elements[0]).toStringWithAncestors(), this.string); ", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_unboundVariablePath, new String[] {path.makeRelative().toString(), javaProject.getElementName()}); ", "+", "+\t\t\t\tcase CLASSPATH_CYCLE: ", "+\t\t\t\t\tjavaProject = (IJavaProject)elements[0];", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_cycle, javaProject.getElementName()); ", "+", "+\t\t\t\tcase DISABLED_CP_EXCLUSION_PATTERNS:", "+\t\t\t\t\tjavaProject = (IJavaProject)elements[0];", "+\t\t\t\t\tString projectName = javaProject.getElementName();", "+\t\t\t\t\tIPath newPath = path;", "+\t\t\t\t\tif (path.segment(0).toString().equals(projectName)) {", "+\t\t\t\t\t\tnewPath = path.removeFirstSegments(1);", "-\t\t\t\t\treturn Messages.bind(Messages.status_cannot_retrieve_attached_javadoc, ((JavaElement)elements[0]).toStringWithAncestors(), \"\"); //$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tif (this.string != null) {", "-\t\t\t\t\treturn Messages.bind(Messages.status_cannot_retrieve_attached_javadoc, this.string, \"\");//$NON-NLS-1$", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase UNKNOWN_JAVADOC_FORMAT :", "-\t\t\t\treturn Messages.bind(Messages.status_unknown_javadoc_format, ((JavaElement)elements[0]).toStringWithAncestors()); ", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_disabledInclusionExclusionPatterns, new String[] {newPath.makeRelative().toString(), projectName}); ", "+", "+\t\t\t\tcase DISABLED_CP_MULTIPLE_OUTPUT_LOCATIONS:", "+\t\t\t\t\tjavaProject = (IJavaProject)elements[0];", "+\t\t\t\t\tprojectName = javaProject.getElementName();", "+\t\t\t\t\tnewPath = path;", "+\t\t\t\t\tif (path.segment(0).toString().equals(projectName)) {", "+\t\t\t\t\t\tnewPath = path.removeFirstSegments(1);", "+\t\t\t\t\t}", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_disabledMultipleOutputLocations, new String[] {newPath.makeRelative().toString(), projectName}); ", "+", "+\t\t\t\tcase INCOMPATIBLE_JDK_LEVEL:", "+\t\t\t\t\t\tjavaProject = (IJavaProject)elements[0];", "+\t\t\t\t\t\treturn Messages.bind(Messages.classpath_incompatibleLibraryJDKLevel, new String[]{\t", "+\t\t\t\t\t\t\tjavaProject.getElementName(), ", "+\t\t\t\t\t\t\tjavaProject.getOption(JavaCore.COMPILER_CODEGEN_TARGET_PLATFORM, true), ", "+\t\t\t\t\t\t\tpath.makeRelative().toString(),", "+\t\t\t\t\t\t\tstring,", "+\t\t\t\t\t\t});", "+", "+\t\t\t\tcase CANNOT_RETRIEVE_ATTACHED_JAVADOC :", "+\t\t\t\t\tif (elements != null && elements.length == 1) {", "+\t\t\t\t\t\tif (this.string != null) {", "+\t\t\t\t\t\t\treturn Messages.bind(Messages.status_cannot_retrieve_attached_javadoc, ((JavaElement)elements[0]).toStringWithAncestors(), this.string); ", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn Messages.bind(Messages.status_cannot_retrieve_attached_javadoc, ((JavaElement)elements[0]).toStringWithAncestors(), \"\"); //$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tif (this.string != null) {", "+\t\t\t\t\t\treturn Messages.bind(Messages.status_cannot_retrieve_attached_javadoc, this.string, \"\");//$NON-NLS-1$", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+", "+\t\t\t\tcase UNKNOWN_JAVADOC_FORMAT :", "+\t\t\t\t\treturn Messages.bind(Messages.status_unknown_javadoc_format, ((JavaElement)elements[0]).toStringWithAncestors()); ", "+", "+\t\t\t\tcase DEPRECATED_VARIABLE :", "+\t\t\t\t\tjavaProject = (IJavaProject)elements[0];", "+\t\t\t\t\treturn Messages.bind(Messages.classpath_deprecated_variable, new String[] {path.segment(0).toString(), javaProject.getElementName(), this.string}); "]}], "num": 59648}