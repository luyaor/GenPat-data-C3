{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eadd4c12d85cfdba476fff94d98d82a0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5708a6c559b52f4040d302c2b9f7d509", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathJar.java", "commitBeforeChange": "30961650a033c638f3a768401431bcd77f1a4058", "commitAfterChange": "7d1e8775d87112012e8a87b6995e3b0bfd71512c", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public boolean isPackage(String qualifiedPackageName)", "signatureAfterChange": "  public boolean isPackage(String qualifiedPackageName)", "diff": ["-\tif (packageCache != null)", "-\t\treturn packageCache.includes(qualifiedPackageName);", "+\tif (knownPackageNames != null)", "+\t\treturn knownPackageNames.includes(qualifiedPackageName);", "-\tthis.packageCache = new SimpleSet(41);", "-\tpackageCache.add(\"\"); //$NON-NLS-1$", "-", "-\t\tnextEntry : for (Enumeration e = zipFile.entries(); e.hasMoreElements(); ) {", "-\t\t\tString fileName = ((ZipEntry) e.nextElement()).getName();", "-\t", "-\t\t\t// add the package name & all of its parent packages", "-\t\t\tint last = fileName.lastIndexOf('/');", "-\t\t\twhile (last > 0) {", "-\t\t\t\t// extract the package name", "-\t\t\t\tString packageName = fileName.substring(0, last);", "-\t\t\t\tif (packageCache.includes(packageName))", "-\t\t\t\t\tcontinue nextEntry;", "-\t\t\t\tpackageCache.add(packageName);", "-\t\t\t\tlast = packageName.lastIndexOf('/');", "-\t\t\t}", "-\t\t}", "-\t\treturn packageCache.includes(qualifiedPackageName);", "-\t} catch(Exception e) {}", "-\treturn false;", "+\t\tthis.knownPackageNames = findPackageSet(zipFile);", "+\t} catch(Exception e) {", "+\t\tthis.knownPackageNames = new SimpleSet(); // assume for this build the zipFile is empty", "+\t}", "+\treturn knownPackageNames.includes(qualifiedPackageName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ce9d9e6699766f8e43bd5cab56038bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "06f23e3e171e1532838272ad3cfed1dbf476c295", "commitAfterChange": "fd83708e4f6c48e5f68b55d90ce222d8723ca6ce", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public boolean isPackage(String qualifiedPackageName)", "signatureAfterChange": "\r \t\r \tpublic boolean isPackage(char[][] compoundName, char[] packageName)", "diff": ["-}\r", "-public boolean isPackage(String qualifiedPackageName) {\r", "-\tif (packageCache != null)\r", "-\t\treturn packageCache.containsKey(qualifiedPackageName);\r", "-\r", "-\tthis.packageCache = new Hashtable(41);\r", "-\tpackageCache.put(\"\", \"\"); //$NON-NLS-1$ //$NON-NLS-2$\r", "-\r", "-\tnextEntry : for (Enumeration e = zipFile.entries(); e.hasMoreElements(); ) {\r", "-\t\tString fileName = ((ZipEntry) e.nextElement()).getName();\r", "-\r", "-\t\t// add the package name & all of its parent packages\r", "-\t\tint last = fileName.lastIndexOf('/');\r", "-\t\twhile (last > 0) {\r", "-\t\t\tString packageName = fileName.substring(0, last);\r", "-\t\t\tif (packageCache.containsKey(packageName))\r", "-\t\t\t\tcontinue nextEntry;\r", "-\t\t\tpackageCache.put(packageName, packageName);\r", "-\t\t\tlast = packageName.lastIndexOf('/');\r", "-\treturn packageCache.containsKey(qualifiedPackageName);\r", "-}\r", "+\t\r", "+\tpublic boolean isPackage(char[][] compoundName, char[] packageName) {\r", "+\t\t\r", "+\t\treturn directoryCache.get(\r", "+\t\t\tFileSystem.assembleName(packageName, compoundName, '/'))\r", "+\t\t\t!= null;\r", "+\t}\r"]}], "num": 16950}