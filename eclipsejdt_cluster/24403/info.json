{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "91f929d6600793a7f980835a92a13ef2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ee77154c70f824c2806f000ec3062c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "70388ba5a3272ffd8da7da345ffb96bb25e84f31", "commitAfterChange": "8d8cc91b7aba4777ee9418a3cef6e1e163bfbf27", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\tif (this.currentPosition > this.eofPosition)", "+\t\t\t\tif (this.currentPosition > this.eofPosition) {", "+\t\t\t\t\tif (this.tokenizeWhiteSpace && (whiteStart != this.currentPosition - 1)) {", "+\t\t\t\t\t\tthis.currentPosition--;", "+\t\t\t\t\t\t// reposition scanner in case we are interested by spaces as tokens", "+\t\t\t\t\t\tthis.startPosition = whiteStart;", "+\t\t\t\t\t\treturn TokenNameWHITESPACE;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a5db747eb22b4e5a5e38dd77427def8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "70388ba5a3272ffd8da7da345ffb96bb25e84f31", "commitAfterChange": "8d8cc91b7aba4777ee9418a3cef6e1e163bfbf27", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\tif (this.currentPosition > this.eofPosition)", "+\t\t\t\tif (this.currentPosition > this.eofPosition) {", "+\t\t\t\t\tif (this.tokenizeWhiteSpace && (whiteStart != this.currentPosition - 1)) {", "+\t\t\t\t\t\tthis.currentPosition--;", "+\t\t\t\t\t\t// reposition scanner in case we are interested by spaces as tokens", "+\t\t\t\t\t\tthis.startPosition = whiteStart;", "+\t\t\t\t\t\treturn TokenNameWHITESPACE;", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 24403}