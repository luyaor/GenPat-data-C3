{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5233e599bb07718f4eeb7e6e473f0fc9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "600e8840d633237580d3a489eb5480e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate void mergeParameterNullAnnotations(BlockScope currentScope)", "signatureAfterChange": " \tprivate void mergeParameterNullAnnotations(BlockScope currentScope)", "diff": ["-\t\t\t\tif (descTagBits != 0L && !ourParameters[i].isBaseType())", "-\t\t\t\t\tourParameters[i] = env.createAnnotatedType(ourParameters[i], descTagBits);", "+\t\t\t\tif (descTagBits != 0L && !ourParameters[i].isBaseType()) {", "+\t\t\t\t\tAnnotationBinding [] annotations = descParameters[i].getTypeAnnotations();", "+\t\t\t\t\tfor (int j = 0, length = annotations.length; j < length; j++) {", "+\t\t\t\t\t\tAnnotationBinding annotation = annotations[j];", "+\t\t\t\t\t\tif (annotation != null) {", "+\t\t\t\t\t\t\tswitch (annotation.getAnnotationType().id) {", "+\t\t\t\t\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNullable :", "+\t\t\t\t\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNonNull :", "+\t\t\t\t\t\t\t\t\tourParameters[i] = env.createAnnotatedType(ourParameters[i], new AnnotationBinding [] { annotation });", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85d28af3260eeb978b71f5ce74524d57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "ade89e4fcc147d76e26736c6fadf9edebfc6386e", "commitAfterChange": "29f9f7b54f341569f134578b4014b331ae83ea82", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "\r private IProject[] getRequiredProjects()", "signatureAfterChange": "\r private IProject[] getRequiredProjects()", "diff": ["+\t\t}\r", "+\t\t// some binary resources on the class path can come from projects that are not included in the project references\r", "+\t\tif (binaryResources != null) {\r", "+\t\t\tObject[] keyTable = binaryResources.keyTable;\r", "+\t\t\tfor (int i = 0, l = keyTable.length; i < l; i++) {\r", "+\t\t\t\tIProject p = (IProject) keyTable[i];\r", "+\t\t\t\tif (p != null && !projects.contains(p))\r", "+\t\t\t\t\tprojects.add(p);\r", "+\t\t\t}\r", "+\t\t\tthis.binaryResources = null;\r"]}], "num": 2183}