{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e4ac9aba9dc02465b7464d14a07e618", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05129110ef012e838198c20514189be1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/CompilationUnitSorter.java", "commitBeforeChange": "554ad9262edde8518a6f39200ec65ed5eaeb92c4", "commitAfterChange": "347e47a327239f16771992e70a1916c45c7c5600", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t\tprivate String buildSignature(Type type)", "signatureAfterChange": "  \t\tprivate String buildSignature(Type type)", "diff": ["-\t\t\t\t\tif (code == PrimitiveType.INT) {", "-\t\t\t\t\t\treturn \"int\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.CHAR) {", "-\t\t\t\t\t\treturn \"char\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.BOOLEAN) {", "-\t\t\t\t\t\treturn \"boolean\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.SHORT) {", "-\t\t\t\t\t\treturn \"short\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.LONG) {", "-\t\t\t\t\t\treturn \"long\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.FLOAT) {", "-\t\t\t\t\t\treturn \"float\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.DOUBLE) {", "-\t\t\t\t\t\treturn \"double\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.BYTE) {", "-\t\t\t\t\t\treturn \"byte\"; //$NON-NLS-1$", "-\t\t\t\t\t} else if (code == PrimitiveType.VOID) {", "-\t\t\t\t\t\treturn \"void\"; //$NON-NLS-1$", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\treturn null; // should never happen", "-\t\t\t\t\t}", "+\t\t\t\t\treturn code.toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b83a0d9fe8e2aafccfdae9c54992dab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "be247eb150a4ae64408d691fa5f52cc64cf01665", "commitAfterChange": "560772312173d5112198fae503105dd04e5536f2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprivate int elementType(IResource res, int kind, int flags, int parentType, RootInfo rootInfo)", "signatureAfterChange": " \tprivate int elementType(IResource res, int kind, int flags, int parentType, RootInfo rootInfo)", "diff": ["-\t\t\t\tif (kind != IResourceDelta.CHANGED) {", "-\t\t\t\t\t// change on the project itself", "-\t\t\t\t\treturn IJavaElement.JAVA_PROJECT;", "-\t\t\t\t} else if ((flags & IResourceDelta.OPEN) != 0) {", "-\t\t\t\t\t// project is opened or closed", "-\t\t\t\t\treturn IJavaElement.JAVA_PROJECT;", "-\t\t\t\t} else if ((flags & IResourceDelta.DESCRIPTION) != 0) {", "-\t\t\t\t\t\t// project's description has changed: need to check if java nature has changed", "-\t\t\t\t\t\tIProject proj = res.getProject();", "-\t\t\t\t\t\tboolean wasJavaProject = JavaModelManager.getJavaModelManager().getJavaModel().findJavaProject(proj) != null;", "-\t\t\t\t\t\tboolean isJavaProject = JavaProject.hasJavaNature(proj);", "-\t\t\t\t\t\tif (wasJavaProject != isJavaProject) {", "-\t\t\t\t\t\t\treturn IJavaElement.JAVA_PROJECT;", "-\t\t\t\t\t\t}", "-\t\t\t\t} // else see below", "+\t\t\t\t// case of a movedTo or movedFrom project (other cases are handled in processResourceDelta(...)", "+\t\t\t\treturn IJavaElement.JAVA_PROJECT;", "+\t\t\tcase NON_JAVA_RESOURCE:", "-\t\t\t\t\treturn IJavaElement.JAVA_PROJECT; // not yet in a package fragment root", "+\t\t\t\t\treturn NON_JAVA_RESOURCE; // not yet in a package fragment root"]}], "num": 19887}