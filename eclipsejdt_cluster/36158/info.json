{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9949c1251b0376b3fbac19f4b907e517", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aea247c494cf4c45acabe10dfae905f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/PublicScanner.java", "commitBeforeChange": "b15223f56b9b93dd836fb56b250091caf3bb7607", "commitAfterChange": "4cd0492577aeee522a285b279829f8a5c7e07eb3", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public final void getNextUnicodeChar() \tthrows IndexOutOfBoundsException, InvalidInputException", "signatureAfterChange": " public final void getNextUnicodeChar() \tthrows InvalidInputException", "diff": ["-\tthrows IndexOutOfBoundsException, InvalidInputException {", "+\tthrows InvalidInputException {", "-\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0, unicodeSize = 6;", "-\tthis.currentPosition++;", "-\twhile (this.source[this.currentPosition] == 'u') {", "+\ttry {", "+\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0, unicodeSize = 6;", "-\t\tunicodeSize++;", "-\t}", "-", "-\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t|| c1 < 0", "-\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t|| c2 < 0", "-\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t|| c3 < 0", "-\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t|| c4 < 0){", "-\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t} else {", "-\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t//need the unicode buffer", "-\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t//buffer all the entries that have been left aside....", "-\t\t\tthis.withoutUnicodePtr = this.currentPosition - unicodeSize - this.startPosition;", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tthis.source, ", "-\t\t\t\tthis.startPosition, ", "-\t\t\t\tthis.withoutUnicodeBuffer, ", "-\t\t\t\t1, ", "-\t\t\t\tthis.withoutUnicodePtr); ", "+\t\twhile (this.source[this.currentPosition] == 'u') {", "+\t\t\tthis.currentPosition++;", "+\t\t\tunicodeSize++;", "-\t\t//fill the buffer with the char", "-\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "+", "+\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "+\t\t\t|| c1 < 0", "+\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "+\t\t\t|| c2 < 0", "+\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "+\t\t\t|| c3 < 0", "+\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "+\t\t\t|| c4 < 0){", "+\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "+\t\t} else {", "+\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\t//need the unicode buffer", "+\t\t\tif (this.withoutUnicodePtr == 0) {", "+\t\t\t\t//buffer all the entries that have been left aside....", "+\t\t\t\tthis.withoutUnicodePtr = this.currentPosition - unicodeSize - this.startPosition;", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tthis.source, ", "+\t\t\t\t\tthis.startPosition, ", "+\t\t\t\t\tthis.withoutUnicodeBuffer, ", "+\t\t\t\t\t1, ", "+\t\t\t\t\tthis.withoutUnicodePtr); ", "+\t\t\t}", "+\t\t\t//fill the buffer with the char", "+\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "+\t\t}", "+\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';", "+\t} catch (ArrayIndexOutOfBoundsException e) {", "+\t\tthis.currentPosition--;", "+\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbc5ff80df43602a6bec5cd8fca2d9ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "c97d49d45c71c791811c9ca3bc4a7cfe10e5a767", "commitAfterChange": "b15223f56b9b93dd836fb56b250091caf3bb7607", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public final void getNextUnicodeChar() \tthrows IndexOutOfBoundsException, InvalidInputException", "signatureAfterChange": " public final void getNextUnicodeChar() \tthrows InvalidInputException", "diff": ["-\tthrows IndexOutOfBoundsException, InvalidInputException {", "+\tthrows InvalidInputException {", "-\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0, unicodeSize = 6;", "-\tthis.currentPosition++;", "-\twhile (this.source[this.currentPosition] == 'u') {", "+\ttry {", "+\t\tint c1 = 0, c2 = 0, c3 = 0, c4 = 0, unicodeSize = 6;", "-\t\tunicodeSize++;", "-\t}", "-", "-\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t|| c1 < 0", "-\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t|| c2 < 0", "-\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t|| c3 < 0", "-\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "-\t\t|| c4 < 0){", "-\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\t} else {", "-\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "-\t\t//need the unicode buffer", "-\t\tif (this.withoutUnicodePtr == 0) {", "-\t\t\t//buffer all the entries that have been left aside....", "-\t\t\tthis.withoutUnicodePtr = this.currentPosition - unicodeSize - this.startPosition;", "-\t\t\tSystem.arraycopy(", "-\t\t\t\tthis.source, ", "-\t\t\t\tthis.startPosition, ", "-\t\t\t\tthis.withoutUnicodeBuffer, ", "-\t\t\t\t1, ", "-\t\t\t\tthis.withoutUnicodePtr); ", "+\t\twhile (this.source[this.currentPosition] == 'u') {", "+\t\t\tthis.currentPosition++;", "+\t\t\tunicodeSize++;", "-\t\t//fill the buffer with the char", "-\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "+", "+\t\tif ((c1 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "+\t\t\t|| c1 < 0", "+\t\t\t|| (c2 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "+\t\t\t|| c2 < 0", "+\t\t\t|| (c3 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "+\t\t\t|| c3 < 0", "+\t\t\t|| (c4 = Character.getNumericValue(this.source[this.currentPosition++])) > 15", "+\t\t\t|| c4 < 0){", "+\t\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "+\t\t} else {", "+\t\t\tthis.currentCharacter = (char) (((c1 * 16 + c2) * 16 + c3) * 16 + c4);", "+\t\t\t//need the unicode buffer", "+\t\t\tif (this.withoutUnicodePtr == 0) {", "+\t\t\t\t//buffer all the entries that have been left aside....", "+\t\t\t\tthis.withoutUnicodePtr = this.currentPosition - unicodeSize - this.startPosition;", "+\t\t\t\tSystem.arraycopy(", "+\t\t\t\t\tthis.source, ", "+\t\t\t\t\tthis.startPosition, ", "+\t\t\t\t\tthis.withoutUnicodeBuffer, ", "+\t\t\t\t\t1, ", "+\t\t\t\t\tthis.withoutUnicodePtr); ", "+\t\t\t}", "+\t\t\t//fill the buffer with the char", "+\t\t\tthis.withoutUnicodeBuffer[++this.withoutUnicodePtr] = this.currentCharacter;", "+\t\t}", "+\t\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';", "+\t} catch (ArrayIndexOutOfBoundsException e) {", "+\t\tthis.currentPosition--;", "+\t\tthrow new InvalidInputException(INVALID_UNICODE_ESCAPE);", "-\tthis.unicodeAsBackSlash = this.currentCharacter == '\\\\';"]}], "num": 36158}