{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf921d4fc3d5086ee972e5883ca36262", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1f377cded7a161da356ab7516a4d1a36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "20f9880068ffc8b9ca5e4df40a1417c5832ce46b", "commitAfterChange": "0fb012af3c6557520ab00415c58833602b027192", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic IPackageFragmentRoot getPackageFragmentRoot(IResource resource)", "signatureAfterChange": " \tpublic IPackageFragmentRoot getPackageFragmentRoot(IResource resource)", "diff": ["-\t\tString name = resource.getName();", "-\t\t\t&& (Util.endsWithIgnoreCase(name, \".jar\") //$NON-NLS-1$", "-\t\t\t\t|| Util.endsWithIgnoreCase(name, \".zip\"))) { //$NON-NLS-1$ ", "+\t\t\t&& (Util.isArchiveFileName(resource.getName()))) {", "-\t\t\treturn new PackageFragmentRoot(resource, this);", "+\t\t\tif (resource.getProject().equals(getProject())) {", "+\t\t\t\t// name of root will be the project relative path (source forlders and library folder in same project)", "+\t\t\t\treturn new PackageFragmentRoot(resource, this);", "+\t\t\t} else {", "+\t\t\t\t// name of root will be the full path (library folder in another project)", "+\t\t\t\treturn new PackageFragmentRoot(resource, this, resource.getFullPath().toString());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b7edfd9e6eb7922750d7da16be5fdfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "cec4fb4877f25e83407697d23286a1cfcc77d109", "commitAfterChange": "19f8be8cc1d4099a194d1918329e79458feaf22c", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tprivate int getPackageStatementEndPos(CompilationUnit root)", "signatureAfterChange": " \t \tprivate int getPackageStatementEndPos(CompilationUnit root)", "diff": ["-\t\t\tint lineAfterPackage= root.getLineNumber(packDecl.getStartPosition() + packDecl.getLength()) + 1;", "-\t\t\tint afterPackageStatementPos= root.getPosition(lineAfterPackage, 0);", "-\t\t\tif (afterPackageStatementPos >= 0) {", "-\t\t\t\tint firstTypePos= getFirstTypeBeginPos(root);", "-\t\t\t\tif (firstTypePos != -1 && firstTypePos <= afterPackageStatementPos) {", "-\t\t\t\t\tif (firstTypePos <= afterPackageStatementPos) {", "-\t\t\t\t\t\tthis.flags |= F_NEEDS_TRAILING_DELIM;", "-\t\t\t\t\t\tif (firstTypePos == afterPackageStatementPos) {", "-\t\t\t\t\t\t\tthis.flags |= F_NEEDS_LEADING_DELIM;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\treturn firstTypePos;", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tthis.flags |= F_NEEDS_LEADING_DELIM;", "-\t\t\t\treturn afterPackageStatementPos; // insert a line after after package statement", "+\t\t\tint afterPackageStatementPos= -1;", "+\t\t\tint lineNumber= root.getLineNumber(packDecl.getStartPosition() + packDecl.getLength());", "+\t\t\tif (lineNumber >= 0) {", "+\t\t\t\tint lineAfterPackage= lineNumber + 1;", "+\t\t\t\tafterPackageStatementPos= root.getPosition(lineAfterPackage, 0);", "+\t\t\tif (afterPackageStatementPos < 0) {", "+\t\t\t\tthis.flags|= F_NEEDS_LEADING_DELIM;", "+\t\t\t\treturn packDecl.getStartPosition() + packDecl.getLength();", "+\t\t\t}", "+\t\t\tint firstTypePos= getFirstTypeBeginPos(root);", "+\t\t\tif (firstTypePos != -1 && firstTypePos <= afterPackageStatementPos) {", "+\t\t\t\tif (firstTypePos <= afterPackageStatementPos) {", "+\t\t\t\t\tthis.flags|= F_NEEDS_TRAILING_DELIM;", "+\t\t\t\t\tif (firstTypePos == afterPackageStatementPos) {", "+\t\t\t\t\t\tthis.flags|= F_NEEDS_LEADING_DELIM;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn firstTypePos;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tthis.flags|= F_NEEDS_LEADING_DELIM;", "+\t\t\treturn afterPackageStatementPos; // insert a line after after package statement"]}], "num": 47584}