{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a3821992ee024138d69e42e936d521e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e967fbe0879db8fd48f4151fba7029f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r private boolean createParser(JavaProject project) throws JavaModelException", "signatureAfterChange": "\r \tprivate boolean createParser(JavaProject project) throws JavaModelException", "diff": ["- */\r", "-private boolean createParser(JavaProject project) throws JavaModelException {\r", "-\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "-\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\tCompilerOptions options = new CompilerOptions(null);\r", "-\tProblemReporter problemReporter =\r", "-\t\tnew ProblemReporter(\r", "-\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\toptions,\r", "-\t\t\tproblemFactory);\r", "-\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-\tthis.parser = new MatchLocatorParser(problemReporter);\r", "-\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "-}\r", "+\t */\r", "+\tprivate boolean createParser(JavaProject project) throws JavaModelException {\r", "+\t\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "+\t\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "+\r", "+\t\tCompilerOptions options = new CompilerOptions(null);\r", "+\t\tProblemReporter problemReporter =\r", "+\t\t\tnew ProblemReporter(\r", "+\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\t\toptions,\r", "+\t\t\t\tproblemFactory);\r", "+\t\tthis.lookupEnvironment =\r", "+\t\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+\t\tthis.parser = new MatchLocatorParser(problemReporter);\r", "+\t\tthis.parsedUnits = new HashtableOfObject(10);\r", "+\t\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbf6a79f5d9bc2817db2849b42840cd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r private boolean createParser(JavaProject project) throws JavaModelException", "signatureAfterChange": "\r \tprivate boolean createParser(JavaProject project) throws JavaModelException", "diff": ["- */\r", "-private boolean createParser(JavaProject project) throws JavaModelException {\r", "-\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "-\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "-\tCompilerOptions options = new CompilerOptions(null);\r", "-\tProblemReporter problemReporter =\r", "-\t\tnew ProblemReporter(\r", "-\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "-\t\t\toptions,\r", "-\t\t\tproblemFactory);\r", "-\tthis.lookupEnvironment = new LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "-\tthis.parser = new MatchLocatorParser(problemReporter);\r", "-\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "-}\r", "+\t */\r", "+\tprivate boolean createParser(JavaProject project) throws JavaModelException {\r", "+\t\tINameEnvironment nameEnvironment = project.getSearchableNameEnvironment();\r", "+\t\tIProblemFactory problemFactory = new DefaultProblemFactory();\r", "+\r", "+\t\tCompilerOptions options = new CompilerOptions(null);\r", "+\t\tProblemReporter problemReporter =\r", "+\t\t\tnew ProblemReporter(\r", "+\t\t\t\tDefaultErrorHandlingPolicies.proceedWithAllProblems(),\r", "+\t\t\t\toptions,\r", "+\t\t\t\tproblemFactory);\r", "+\t\tthis.lookupEnvironment =\r", "+\t\t\tnew LookupEnvironment(this, options, problemReporter, nameEnvironment);\r", "+\t\tthis.parser = new MatchLocatorParser(problemReporter);\r", "+\t\tthis.parsedUnits = new HashtableOfObject(10);\r", "+\t\treturn this.pattern.initializeFromLookupEnvironment(this.lookupEnvironment);\r", "+\t}\r"]}], "num": 47140}