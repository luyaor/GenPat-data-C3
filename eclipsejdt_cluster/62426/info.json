{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e9818dbfee7f9f5f3e2f3da262fc8eb3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "977818342405eee872497c8de1f12c8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/IndexBasedHierarchyBuilder.java", "commitBeforeChange": "5ec4215ec4f52f55dcb6e314c5f755ceba34fff6", "commitAfterChange": "5a4580d346b40161405692269366aba5f28266bb", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r private void addInfoFromOpenClassFile(ClassFile classFile, ArrayList infos) throws JavaModelException", "signatureAfterChange": "\r protected void addInfoFromClosedElement(Openable handle,ArrayList infos,ArrayList units,String resourcePath) throws JavaModelException", "diff": ["- */\r", "-private void addInfoFromOpenClassFile(ClassFile classFile, ArrayList infos) throws JavaModelException {\r", "-\tIType type = classFile.getType();\r", "-\tIGenericType info = (IGenericType) ((BinaryType) type).getRawInfo();\r", "-\tinfos.add(info);\r", "-\tthis.infoToHandle.put(info, classFile);\r", "-}\r", "+protected void addInfoFromClosedElement(Openable handle,ArrayList infos,ArrayList units,String resourcePath) throws JavaModelException {\r", "+\tHierarchyBinaryType binaryType = (HierarchyBinaryType) binariesFromIndexMatches.get(resourcePath);\r", "+\tif (binaryType != null) {\r", "+\t\tthis.addInfoFromBinaryIndexMatch(handle, binaryType, infos);\r", "+\t} else {\r", "+\t\tsuper.addInfoFromClosedElement(handle, infos, units, resourcePath);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d7336fe74325f367cfc9eb2f9275adf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a7e924b1651a1b9026ccc6590ce8e03365836a1b", "commitAfterChange": "d3da1d109c57a90a2bd8342736abf401463d58e5", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  private void addNewEntry(ArrayList paths, String currentClasspathName, ArrayList currentRuleSpecs, String customEncoding, boolean isSource)", "signatureAfterChange": "  private void addNewEntry(ArrayList paths, String currentClasspathName, ArrayList currentRuleSpecs, String customEncoding, boolean isSourceOnly)", "diff": ["-private void addNewEntry(ArrayList paths, String currentClasspathName, ArrayList currentRuleSpecs, String customEncoding, boolean isSource) {", "+private void addNewEntry(ArrayList paths, String currentClasspathName, ArrayList currentRuleSpecs, String customEncoding, boolean isSourceOnly) {", "-\t\t\t\tisSource ? ClasspathLocation.SOURCE : ClasspathLocation.BINARY | ClasspathLocation.SOURCE,", "+\t\t\t\tisSourceOnly,"]}], "num": 62426}