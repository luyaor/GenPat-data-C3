{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b4139d7277c3c0ec60fc2926ea073f9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "366f543b543872743155767e8de8fbc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargsTest.java", "commitBeforeChange": "c61a3471dc232eb282f499e766b6240869dfcc94", "commitAfterChange": "99886b8fe1bbade8b0a4bfabc2bc140889fa0f95", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void _test011()", "signatureAfterChange": " \tpublic void test011()", "diff": ["-\t// TODO (kent) must warn when overridiing varargs method with non varargs one", "-\tpublic void _test011() {", "+\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=83379", "+\tpublic void test011() {", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic void count(int ... values) {}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y extends X {\\n\" +", "-\t\t\t\t\"\tpublic void count(int[] values) {}\\n\" +", "-\t\t\t\t\"}\\n\",", "+\t\t\t\t\"public class X { void count(int ... values) {} }\\n\" +", "+\t\t\t\t\"class Y extends X { void count(int[] values) {} }\\n\" +", "+\t\t\t\t\"class Z extends Y { void count(int... values) {} }\\n\"", "-\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"\tpublic void count(int[] values) {}\\n\" + ", "-\t\t\t\"\t  ^^^^^\\n\" + ", "-\t\t\t\"The method count(int[]) is overriding a varargs method from X\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass Y extends X { void count(int[] values) {} }\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Varargs methods should only override other varargs methods unlike count(int[]) and count(int...) from type X\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass Z extends Y { void count(int... values) {} }\\n\" + ", "+\t\t\t\"\t                         ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Varargs methods should only override other varargs methods unlike count(int...) and count(int[]) from type Y\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d073e2d708c76e61fa1fcb1babff8aa4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/VarargTest.java", "commitBeforeChange": "3885d0327ef37626bb68aa8a0a9e1a4a5bb4ba7a", "commitAfterChange": "e4a2d2b531fec7e8dfebadf46195d19caa4fd924", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic void test007()", "signatureAfterChange": "  \tpublic void test008()", "diff": ["-\tpublic void test007() {", "+\tpublic void test008() {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\tY y = new Y(null);\\n\" +", "+\t\t\t\t\"\t\ty = new Y(true, null);\\n\" + // null warning", "+\t\t\t\t\"\t\ty = new Y('i', null);\\n\" + // null warning", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Y extends Z {\\n\" +", "+\t\t\t\t\"\tpublic Y(int ... values) { super(values); }\\n\" +", "+\t\t\t\t\"\tpublic Y(boolean b, Object ... values) { super(b, values); }\\n\" +", "+\t\t\t\t\"\tpublic Y(char c, int[] ... values) {}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Z {\\n\" +", "+\t\t\t\t\"\tpublic Z(int ... values) {}\\n\" +", "+\t\t\t\t\"\tpublic Z(boolean b, Object ... values) {}\\n\" +", "+\t\t\t\t\"\tpublic Z(char c, int[] ... values) {}\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\t\"\ty = new Y(true, null);\\n\" + ", "+\t\t\t\"\t    ^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Inexact argument for the vararg constructor Y(boolean, Object[])\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\t\"\ty = new Y(\\'i\\', null);\\n\" + ", "+\t\t\t\"\t    ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Inexact argument for the vararg constructor Y(char, int[][])\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 43201}