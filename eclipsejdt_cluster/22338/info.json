{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b893a256ab7550adc54f404df444adcf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b312c70a8f6f74826fef1bbbccd6b123", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "778e64a3c8e6903c625067607c9068d73d8cd5e5", "commitAfterChange": "e12812c02c749e710a55fe1f28fa9764f0ac6bd5", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " \tpublic void test050b()", "signatureAfterChange": " \tpublic void test050b()", "diff": ["-\t\tif (new CompilerOptions(getCompilerOptions()).complianceLevel >= ClassFileConstants.JDK1_7) return; // see test187()", "-\t\t\t\t\"\t\t<T extends Y> T foo(Object o) {  return null; } // ok\\n\" +", "-\t\t\t\t\"\t\t<T extends Z> T foo(Object o) {  return null; } // ok\\n\" +", "+\t\t\t\t\"\t\t<T extends Y> T foo(Object o) {  return null; } // duplicate\\n\" +", "+\t\t\t\t\"\t\t<T extends Z> T foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\t\"class A<T> {}\" +", "-\t\t\t\t\"class Y {}\" +", "+\t\t\t\t\"class A<T> {}\\n\" +", "+\t\t\t\t\"class Y {}\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "-\t\t\t\"\tY foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" +", "-\t\t\t\"\tZ foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"3. ERROR in X.java (at line 11)\\n\" +", "-\t\t\t\"\tA<Y> foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t     ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in X.java (at line 12)\\n\" +", "-\t\t\t\"\tA<Z> foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t     ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"5. ERROR in X.java (at line 15)\\n\" +", "-\t\t\t\"\tY foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. ERROR in X.java (at line 16)\\n\" +", "-\t\t\t\"\t<T extends Z> T foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t                ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" +", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tY foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tZ foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\t<T extends Y> T foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C2\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\t<T extends Z> T foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C2\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\tA<Y> foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tA<Z> foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. ERROR in X.java (at line 15)\\n\" + ", "+\t\t\t\"\tY foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"8. ERROR in X.java (at line 16)\\n\" + ", "+\t\t\t\"\t<T extends Z> T foo(Object o) {  return null; } // duplicate\\n\" + ", "+\t\t\t\"\t                ^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" + ", "-\t\t\t// foo(java.lang.Object) is already defined in X.C1", "-\t\t\t// foo(java.lang.Object) is already defined in X.C3", "-\t\t\t// foo(java.lang.Object) is already defined in X.C4", "+/* javac 7", "+X.java:4: foo(Object) is already defined in X.C1", "+                Z foo(Object o) {  return null; } // duplicate", "+                  ^", "+X.java:8: name clash: <T#1>foo(Object) and <T#2>foo(Object) have the same erasure", "+                <T extends Z> T foo(Object o) {  return null; } // duplicate", "+                                ^", "+  where T#1,T#2 are type-variables:", "+    T#1 extends Z declared in method <T#1>foo(Object)", "+    T#2 extends Y declared in method <T#2>foo(Object)", "+X.java:12: foo(Object) is already defined in X.C3", "+                A<Z> foo(Object o) {  return null; } // duplicate", "+                     ^", "+X.java:16: foo(Object) is already defined in X.C4", "+                <T extends Z> T foo(Object o) {  return null; } // duplicate", "+                                ^", "+4 errors", "+ */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3f11c0039f3ab433a5182a191c4a327", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 805, "methodNumberAfterChange": 805, "signatureBeforeChange": " public void test799()", "signatureAfterChange": " public void test799()", "diff": ["-\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\"\tY first;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Type safety: Y is a raw type. References to generic type Y<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 3)\\n\" + ", "+\t\t\"\tY first2;\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Type safety: Y is a raw type. References to generic type Y<E> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"2. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 13)\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"5. ERROR in X.java (at line 14)\\n\" + ", "-\t\t\"4. WARNING in X.java (at line 15)\\n\" + ", "+\t\t\"6. WARNING in X.java (at line 15)\\n\" + ", "-\t\t\"5. WARNING in X.java (at line 18)\\n\" + ", "+\t\t\"7. WARNING in X.java (at line 18)\\n\" + "]}], "num": 22338}