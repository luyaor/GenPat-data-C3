{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7a82ed77987d46b037cc96f0584c143", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66cd93ee98255958b624caa06af94c30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "e7b1ea867718ceec3cf08d3cf2170026c991b041", "commitAfterChange": "ba0154713ba7d434aa2e47b80fd55a84048c10dc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate Compiler( \t\t\tINameEnvironment environment, \t\t\tIErrorHandlingPolicy policy, \t\t\tMap settings, \t\t\tfinal ICompilerRequestor requestor, \t\t\tIProblemFactory problemFactory, \t\t\tPrintWriter out, \t\t\tboolean parseLiteralExpressionsAsConstants, \t\t\tboolean storeAnnotations, \t\t\tboolean statementsRecovery, \t\t\tboolean flag)", "signatureAfterChange": " \tprivate Compiler( \t\t\tINameEnvironment environment, \t\t\tIErrorHandlingPolicy policy, \t\t\tMap settings, \t\t\tfinal ICompilerRequestor requestor, \t\t\tIProblemFactory problemFactory, \t\t\tPrintWriter out, \t\t\tboolean parseLiteralExpressionsAsConstants, \t\t\tboolean storeAnnotations, \t\t\tboolean flag, \t\t\tboolean statementsRecovery)", "diff": ["-\t\t\tboolean statementsRecovery,", "-\t\t\tboolean flag) {", "+\t\t\tboolean flag,", "+\t\t\tboolean statementsRecovery) {", "+\t\tthis.options.performStatementsRecovery = statementsRecovery;", "-\t\t\tthis.options.performStatementsRecovery =", "-\t\t\t\tstatementsRecovery &&", "-\t\t\t\tthis.options.performStatementsRecovery;// TODO temporary code to take into account the temporary JavaCore options"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "88430d40a2801f891c9334922b589473", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "5daa85176eeb6c050d87a4b7fb3642fbff63325e", "commitAfterChange": "d4d7f9bf434c822e7818dfb358fa83468e120df6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean parseLiteralExpressionsAsConstants, \t\tboolean storeAnnotations)", "signatureAfterChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tMap settings, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory, \t\tboolean parseLiteralExpressionsAsConstants, \t\tboolean storeAnnotations, \t\tboolean statementsRecovery)", "diff": ["-\t\tboolean storeAnnotations) {", "+\t\tboolean storeAnnotations,", "+\t\tboolean statementsRecovery) {", "+\t\tthis.options.performStatementsRecovery =", "+\t\t\tstatementsRecovery &&", "+\t\t\tthis.options.performStatementsRecovery;// TODO temporary code to take into account the temporary JavaCore options"]}], "num": 24008}