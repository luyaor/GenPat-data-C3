{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0a7ac6ea488ae1ead90d198afa3598fa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcdccca8b9d7af1d2766820e302ac941", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "7629cb0ea15afb3f8edb59ed2e3e4b5f7f9fa619", "commitAfterChange": "28b2b7ab5af16a63c18bbdefdc1dcdce67c17817", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\tmatch = locator.newMethodReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, reference);", "+\t\t\tboolean isConstructor = reference instanceof ExplicitConstructorCall;", "+\t\t\tboolean isSynthetic = isConstructor ? ((ExplicitConstructorCall) reference).isImplicitSuper() : false;", "+\t\t\tmatch = locator.newMethodReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, isConstructor, isSynthetic, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7c9f6234373b23e45ab0dbdca4e07ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tcase IJavaElement.METHOD:", "-\t\t\tboolean isConstructor = reference instanceof ExplicitConstructorCall;", "-\t\t\tboolean isSynthetic = isConstructor ? ((ExplicitConstructorCall) reference).isImplicitSuper() : false;", "-\t\t\tmatch = locator.newMethodReferenceMatch(element, accuracy, offset, reference.sourceEnd-offset+1, isConstructor, isSynthetic, reference);", "-\t\t\tbreak;"]}], "num": 28883}