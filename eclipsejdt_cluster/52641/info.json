{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "007ff0235dac42dc122857f36bae8538", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2f30c70d279aed12f77ec48239f570c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/compiler/tool/EclipseFileManager.java", "commitBeforeChange": "741931b5ca85aa073f4fdd97bb1854b708311060", "commitAfterChange": "5280e1e8db473b5a94d57033a6d3cab2e44e385d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tvoid addFilesFromExtDirs(File javaHome, ArrayList<File> files)", "signatureAfterChange": " \t \t \tprivate void addFilesFrom(File javaHome, String propertyName, String defaultPath, ArrayList<File> files)", "diff": ["-\tvoid addFilesFromExtDirs(File javaHome, ArrayList<File> files) {", "-\t\t// retrieve files from ext dirs", "-\t\tString extdirsStr = System.getProperty(\"java.ext.dirs\"); //$NON-NLS-1$", "-\t\tFile[][] extDirLibrariesJars = null;", "+\t", "+\tprivate void addFilesFrom(File javaHome, String propertyName, String defaultPath, ArrayList<File> files) {", "+\t\tString extdirsStr = System.getProperty(propertyName); //$NON-NLS-1$", "+\t\tFile[] directoriesToCheck = null;", "-\t\t\t\textDirLibrariesJars = Main.getLibrariesFiles(new File[] { new File(javaHome, \"/lib/ext\") }); //$NON-NLS-1$", "+\t\t\t\tdirectoriesToCheck = new File[] { new File(javaHome, defaultPath) }; //$NON-NLS-1$", "-\t\t\tArrayList<String> extDirsClasspathsPaths = new ArrayList<String>();", "+\t\t\tArrayList<String> paths = new ArrayList<String>();", "-\t\t\t\textDirsClasspathsPaths.add(tokenizer.nextToken());", "+\t\t\t\tpaths.add(tokenizer.nextToken());", "-\t\t\tif (extDirsClasspathsPaths.size() != 0) {", "-\t\t\t\tFile[] directoriesToCheck = new File[extDirsClasspathsPaths.size()];", "+\t\t\tif (paths.size() != 0) {", "+\t\t\t\tdirectoriesToCheck = new File[paths.size()];", "-\t\t\t\t\tdirectoriesToCheck[i] = new File(extDirsClasspathsPaths.get(i));", "+\t\t\t\t\tdirectoriesToCheck[i] = new File(paths.get(i));", "-\t\t\t\textDirLibrariesJars = Main.getLibrariesFiles(directoriesToCheck);", "-\t\taddFiles(extDirLibrariesJars, files);", "+\t\tif (directoriesToCheck != null) {", "+\t\t\taddFiles(Main.getLibrariesFiles(directoriesToCheck), files);", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7c23368bd1d06afe475b9a38359139b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragmentRoot.java", "commitBeforeChange": "ed25425f5de4194a0f32ce4c1315af886ca42c42", "commitAfterChange": "821b6028ffbd0ba8edfd1a0534c32e817f4e830d", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate void initPackageFragToTypes(HashtableOfArrayToObject packageFragToTypes, String entryName, boolean isDirectory)", "signatureAfterChange": " \tprivate void initRawPackageInfo(HashtableOfArrayToObject rawPackageInfo, String entryName, boolean isDirectory, String sourceLevel, String compliance)", "diff": ["-\tprivate void initPackageFragToTypes(HashtableOfArrayToObject packageFragToTypes, String entryName, boolean isDirectory) {", "+\tprivate void initRawPackageInfo(HashtableOfArrayToObject rawPackageInfo, String entryName, boolean isDirectory, String sourceLevel, String compliance) {", "-\t\t\texisting = (String[]) packageFragToTypes.getKey(pkgName, existingLength);", "+\t\t\texisting = (String[]) rawPackageInfo.getKey(pkgName, existingLength);", "-\t\tIJavaProject project = getJavaProject();", "-\t\t\tif (Util.isValidFolderNameForPackage(pkgName[i], project.getOption(JavaCore.COMPILER_SOURCE, true), project.getOption(JavaCore.COMPILER_COMPLIANCE, true))) {", "+\t\t\tif (Util.isValidFolderNameForPackage(pkgName[i], sourceLevel, compliance)) {", "-\t\t\t\tpackageFragToTypes.put(existing, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "+\t\t\t\trawPackageInfo.put(existing, new ArrayList[] { EMPTY_LIST, EMPTY_LIST });", "-\t\t\t\t\tArrayList[] children = (ArrayList[]) packageFragToTypes.get(existing);", "+\t\t\t\t\tArrayList[] children = (ArrayList[]) rawPackageInfo.get(existing);", "-\t\tArrayList[] children = (ArrayList[]) packageFragToTypes.get(pkgName);", "+\t\tArrayList[] children = (ArrayList[]) rawPackageInfo.get(pkgName);", "-\t\t\tString fileName = entryName.substring(lastSeparator + 1);", "-\t\t\tchildren[0/*JAVA*/].add(fileName);", "+\t\t\tString nameWithoutExtension = entryName.substring(lastSeparator + 1, entryName.length() - 6);", "+\t\t\tchildren[0/*JAVA*/].add(nameWithoutExtension);"]}], "num": 52641}