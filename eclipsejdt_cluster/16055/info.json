{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "abf762af61ac2016b4752b3321feb76f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28f180b74268d35caecae2967fb64445", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ParameterizedType.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic Name getName()", "signatureAfterChange": "  \tpublic Name getName()", "diff": ["-\t\tif (typeName == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetName(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.typeName == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.typeName = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.typeName, NAME_PROPERTY);", "-\t\treturn typeName;", "+\t\treturn this.typeName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "481b3786975a7d328c595664f3a50505", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/MethodInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\tif (methodName == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetName(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.methodName == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.methodName = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.methodName, NAME_PROPERTY);", "-\t\treturn methodName;", "+\t\treturn this.methodName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ee6f386397b8afa385ee607c71d3fd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperMethodInvocation.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\tif (methodName == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetName(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.methodName == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.methodName = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.methodName, NAME_PROPERTY);", "-\t\treturn methodName;", "+\t\treturn this.methodName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9cf0bce9b3eab9e4ac3e38c6b7f42b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SuperFieldAccess.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\tif (fieldName == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetName(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.fieldName == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.fieldName = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.fieldName, NAME_PROPERTY);", "-\t\treturn fieldName;", "+\t\treturn this.fieldName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6591564789a49b7468524393ce9986f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/FieldAccess.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tpublic SimpleName getName()", "signatureAfterChange": "  \tpublic SimpleName getName()", "diff": ["-\t\tif (fieldName == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetName(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.fieldName == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.fieldName = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.fieldName, NAME_PROPERTY);", "-\t\treturn fieldName;", "+\t\treturn this.fieldName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f94fa8b1152e95086c048425865b1309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/SimpleType.java", "commitBeforeChange": "ca9dbce3d563d28e984f1680d988cb68608c75f8", "commitAfterChange": "aec4b3fea7801d56d112291851d497436c0f9c81", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic Name getName()", "signatureAfterChange": "  \tpublic Name getName()", "diff": ["-\t\tif (typeName == null) {", "-\t\t\t// lazy initialize - use setter to ensure parent link set too", "-\t\t\tlong count = getAST().modificationCount();", "-\t\t\tsetName(new SimpleName(getAST()));", "-\t\t\tgetAST().setModificationCount(count);", "+\t\tif (this.typeName == null) {", "+\t\t\tpreLazyInit();", "+\t\t\tthis.typeName = new SimpleName(this.ast);", "+\t\t\tpostLazyInit(this.typeName, NAME_PROPERTY);", "-\t\treturn typeName;", "+\t\treturn this.typeName;"]}], "num": 16055}