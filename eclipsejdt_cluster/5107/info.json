{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b79b30e0a77249ed20033952b2df4dd0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2138d2f7c31d1c61365b2f5f3fbbd2f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "15be40cf5262e06998d74b41636698f1f284a564", "commitAfterChange": "a4862af7684f06076791ef9ff6f765210c06b259", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 182, "signatureBeforeChange": " \tpublic void testBug100772_Complex01() throws CoreException", "signatureAfterChange": " \tpublic void testBug100772_HierarchyScope_Complex01() throws CoreException", "diff": ["-\tpublic void testBug100772_Complex01() throws CoreException {", "+\tpublic void testBug100772_HierarchyScope_Complex01() throws CoreException {", "-\t\t\t\"interface IXX<V extends Exception> extends IX<V> {\\n\" + ", "+\t\t\t\"interface IXX<V extends Exception> {\\n\" + ", "-\t\tIMethod method = workingCopies[0].getType(\"IX\").getMethods()[0];", "-\t\tsearch(method, DECLARATIONS);", "+\t\tIType type = workingCopies[0].getType(\"IX\");", "+\t\tIMethod method = type.getMethod(\"foo\", new String[] { \"QU;\" });", "+\t\tsearch(method, DECLARATIONS, SearchEngine.createHierarchyScope(type));", "-\t\t\t\"src/b100772/Test.java void b100772.IXX.foo(V) [foo] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b100772/Test.java void b100772.Z.foo(String) [foo] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b100772/Test.java void b100772.Z.foo(Exception) [foo] EXACT_MATCH\"", "+\t\t\t\"src/b100772/Test.java void b100772.Z.foo(String) [foo] EXACT_MATCH\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eac67d3a0b5d0f9a09c0fde906ff4ef6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "59cddc534051cc4e23e296eb517b3676eee08cc0", "commitAfterChange": "a739bc928d6e81f07965268d15ff502fa14ed12d", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void testFieldReferenceBug77093() throws CoreException", "signatureAfterChange": " \tpublic void testBug77093field() throws CoreException", "diff": ["-\t */", "-\tpublic void testFieldReferenceBug77093() throws CoreException {", "-\t\tIType type = getCompilationUnit(\"JavaSearchBugs/src/b77093/X.java\").getType(\"X\");", "-\t\tIField field = type.getField(\"z_arrays\");", "-\t\tsearch(field, REFERENCES, getJavaSearchScopeBugs(), resultCollector);", "-\t\tassertSearchResults(", "-\t\t\t\"src/b77093/X.java b77093.X(Z[][]) [z_arrays] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b77093/X.java void b77093.X.bar() [z_arrays] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/b77093/X.java void b77093.X.bar() [z_arrays] EXACT_MATCH\",", "-\t\t\tresultCollector);", "-\t}", "+\t}", "+\tpublic void testBug77093field() throws CoreException {", "+\t\tICompilationUnit unit = getCompilationUnit(\"/JavaSearchBugs/src/b77093/X.java\");", "+\t\tIType type = unit.getType(\"X\");", "+\t\tIField field = type.getField(\"z_arrays\");", "+\t\t// Search for field declarations and references", "+\t\tsearch(field, ALL_OCCURRENCES);", "+\t\tassertSearchResults(", "+\t\t\t\"src/b77093/X.java b77093.X.z_arrays [z_arrays] EXACT_MATCH\\n\" +", "+\t\t\t\"src/b77093/X.java b77093.X(Z[][]) [z_arrays] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b77093/X.java void b77093.X.bar() [z_arrays] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/b77093/X.java void b77093.X.bar() [z_arrays] EXACT_MATCH\"", "+\t\t);", "+\t}"]}], "num": 5107}