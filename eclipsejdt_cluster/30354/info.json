{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f07935cd3e87b806d3d90cdc5b440893", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c9933f0d5b963790dba247dea9f1ca5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": " public void recordNullityMismatch(BlockScope currentScope, Expression expression, TypeBinding providedType, TypeBinding expectedType, FlowInfo flowInfo, int nullStatus)", "signatureAfterChange": " public void recordNullityMismatch(BlockScope currentScope, Expression expression, TypeBinding providedType, TypeBinding expectedType, FlowInfo flowInfo, int nullStatus, NullAnnotationMatching annotationStatus)", "diff": ["-public void recordNullityMismatch(BlockScope currentScope, Expression expression, TypeBinding providedType, TypeBinding expectedType, FlowInfo flowInfo, int nullStatus) {", "+public void recordNullityMismatch(BlockScope currentScope, Expression expression, TypeBinding providedType, TypeBinding expectedType, FlowInfo flowInfo, int nullStatus, NullAnnotationMatching annotationStatus) {", "-\tchar[][] annotationName = currentScope.environment().getNonNullAnnotationName();", "-\tcurrentScope.problemReporter().nullityMismatch(expression, providedType, expectedType, nullStatus, annotationName);", "+\tif (annotationStatus != null)", "+\t\tcurrentScope.problemReporter().nullityMismatchingTypeAnnotation(expression, providedType, expectedType, annotationStatus);", "+\telse", "+\t\tcurrentScope.problemReporter().nullityMismatch(expression, providedType, expectedType, nullStatus,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tcurrentScope.environment().getNonNullAnnotationName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c192ff5a006d0396a971d89f16a4518f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "df078329218bf2c1a32b5241c9545d932f017e46", "commitAfterChange": "b807535043a8e4f63fd714ed5c671846765013dc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": "\r protected void openWhenClosed(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": "\r protected void openWhenClosed(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "diff": ["-protected void openWhenClosed(IProgressMonitor pm) throws JavaModelException {\r", "+protected void openWhenClosed(IProgressMonitor pm, IBuffer buffer) throws JavaModelException {\r", "-\t\t\t\topenableParent.openWhenClosed(pm);\r", "+\t\t\t\topenableParent.openWhenClosed(pm, null);\r", "-\t\t// 2) create the new element info and open a buffer\r", "+\t\t// 2) create the new element info and open a buffer if needed\r", "-\t\t\topenBuffer(pm);\r", "+\t\t\tif (buffer == null) {\r", "+\t\t\t\tthis.openBuffer(pm);\r", "+\t\t\t} else {\r", "+\t\t\t\tthis.getBufferManager().addBuffer(buffer);\r", "+\t\t\t\tbuffer.addBufferChangedListener(this);\r", "+\t\t\t}\r"]}], "num": 30354}