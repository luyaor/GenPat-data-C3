{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "031d64486cc5ad7d4d294be0ca7eb301", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "546d9adf5e927d7ee4f9ea1da60a27fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTestAsserts.java", "commitBeforeChange": "9fd5428ce736a6251b7049cd29424ae48e74034b", "commitAfterChange": "462fdbe66c95fe469d26ca4c9a495870e5915168", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public void testBug127575n()", "signatureAfterChange": " public void testBug127575n()", "diff": ["-\t\t\t\t\"           org.eclipse.core.runtime.Assert.isLegal ((o2 = o1) != null);\\n\" +", "+\t\t\t\t\"           org.eclipse.core.runtime.Assert.isLegal (o1 != null);\\n\" +", "-\t\t\t\"\torg.eclipse.core.runtime.Assert.isLegal ((o2 = o1) != null);\\n\" + ", "-\t\t\t\"\t                                         ^^^^^^^^^\\n\" + ", "-\t\t\t\"Null comparison always yields false: The variable o2 can only be null at this location\\n\" + ", "+\t\t\t\"\torg.eclipse.core.runtime.Assert.isLegal (o1 != null);\\n\" + ", "+\t\t\t\"\t                                         ^^\\n\" + ", "+\t\t\t\"Null comparison always yields false: The variable o1 can only be null at this location\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79fc2614424133a9c9a9abb15728f800", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugs8Tests.java", "commitBeforeChange": "ca289ff4e9317024e3c3a344a3b266fd883ffd1d", "commitAfterChange": "aacce274176303cc524a6360232ca1201922c452", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": " public void testBug400905_0013f() throws CoreException", "signatureAfterChange": " public void testBug400905_0013f() throws CoreException", "diff": ["-\t\t\t\t\"src/X.java int int void X.zoo():<lambda>#1.lambda$1(X):<lambda>#2.lambda$2(X) [X] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/X.java int void X.zoo():<lambda>#1.lambda$1(X):Q#1.x [X] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/X.java int void X.zoo():<lambda>#1.lambda$1(X) [X] EXACT_MATCH\\n\" + ", "-\t\t\t\t\"src/X.java int void X.zoo():<lambda>#1.lambda$1(X) [X] EXACT_MATCH\");", "+\t\t\t\t\"src/X.java int int void X.zoo():Lambda(I).doit(X):Lambda(I).doit(X) [X] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/X.java int void X.zoo():Lambda(I).doit(X):Q#1.x [X] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/X.java int void X.zoo():Lambda(I).doit(X) [X] EXACT_MATCH\\n\" + ", "+\t\t\t\t\"src/X.java int void X.zoo():Lambda(I).doit(X) [X] EXACT_MATCH\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbe7380a504a9219a0a09e33aec8d2fc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "9850e4ae951b6df5bc8bfe162d8a3e3e67beff62", "commitAfterChange": "e9ca95978aca2a442bfecfb8ac281f372092486a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void test034()", "signatureAfterChange": " \tpublic void test034()", "diff": ["-\t\t\t\"     9  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"     9  getstatic java.lang.System.out : java.io.PrintStream [21]\\n\" + ", "-\t\t\t\"    13  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + ", "+\t\t\t\"    13  invokevirtual java.io.PrintStream.println(int) : void  [27]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 17] local: args index: 0 type: [Ljava/lang/String;\\n\" + ", "-\t\t\t\"        [pc: 3, pc: 17] local: i index: 1 type: I\\n\";", "+\t\t\t\"        [pc: 0, pc: 17] local: args index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 3, pc: 17] local: i index: 1 type: int\\n\";"]}], "num": 2550}