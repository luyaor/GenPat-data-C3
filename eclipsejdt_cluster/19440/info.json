{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7d1217121c54309675c083478076a5ce", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11bdf1e22b7d80df734e254f6a45afe6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalCompletionProposal.java", "commitBeforeChange": "122aaead4e358f6ebb2c21aa961cc53294d2209d", "commitAfterChange": "dad14e26b600f99744a420507cc556dc0f0ff73b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] paramTypeNames)", "signatureAfterChange": " \tprotected char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] paramTypeNames)", "diff": ["-\t\t\ttype = this.nameLookup.findType(new String(tName), false, NameLookup.ACCEPT_CLASSES & NameLookup.ACCEPT_INTERFACES);", "+\t\t\ttype = this.nameLookup.findType(new String(tName),", "+\t\t\t\tfalse,", "+\t\t\t\tNameLookup.ACCEPT_CLASSES & NameLookup.ACCEPT_INTERFACES,", "+\t\t\t\ttrue/* consider secondary types */,", "+\t\t\t\tfalse/* do NOT wait for indexes */,", "+\t\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7937e01365e65dbb5b6a00a03d769083", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompletionRequestorWrapper.java", "commitBeforeChange": "66cd4232d0ab1e96e3a07f02c56b8bad9d7784af", "commitAfterChange": "c4f302586af8fb051e0ee3dd72d43fa433091810", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \r private char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "signatureAfterChange": "\r \r private char[][] findMethodParameterNames(char[] declaringTypePackageName, char[] declaringTypeName, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "diff": ["-\tIType type = nameLookup.findType(new String(typeName),false,INameLookup.ACCEPT_CLASSES &NameLookup.ACCEPT_INTERFACES);\r", "+\tIType type = nameLookup.findType(new String(typeName), false, NameLookup.ACCEPT_CLASSES & NameLookup.ACCEPT_INTERFACES);\r"]}], "num": 19440}