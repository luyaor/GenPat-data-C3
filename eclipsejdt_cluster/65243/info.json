{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9547679fde50fcd6f3169861858de48c", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72d9bfd5ef4cbca8faf7e53f4376ed07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "d960babe998acb7fa00822d4abe32ae4e44701ca", "commitAfterChange": "b3259a85709d3572dbc66af8429669a5ffb6c93e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r public String toString(int tab)", "signatureAfterChange": "\r \r \tpublic String toString(int tab)", "diff": ["-}\r", "-public String toString(int tab){\r", "-\t/* slow code */\r", "-\tString s = tabString(tab);\r", "-\tif (qualification != null) \r", "-\t\ts = s + qualification.toStringExpression() + \".\" ; //$NON-NLS-1$\r", "-\tif (accessMode == This){\r", "-\t\ts = s + \"this(\"; //$NON-NLS-1$\r", "-\t} else {\r", "-\t\ts = s + \"super(\"; //$NON-NLS-1$\r", "-\tif (arguments != null)\r", "-\t\tfor (int i=0 ; i < arguments.length ; i++)\r", "-\t\t{\ts = s + arguments[i].toStringExpression();\r", "-\t\t\tif (i != arguments.length-1) s = s + \", \";};; //$NON-NLS-1$\r", "-\ts = s+\")\" ; //$NON-NLS-1$\r", "-\treturn s;}\r", "+\r", "+\tpublic String toString(int tab) {\r", "+\r", "+\t\tString s = tabString(tab);\r", "+\t\tif (qualification != null)\r", "+\t\t\ts = s + qualification.toStringExpression() + \".\"; //$NON-NLS-1$\r", "+\t\tif (accessMode == This) {\r", "+\t\t\ts = s + \"this(\"; //$NON-NLS-1$\r", "+\t\t} else {\r", "+\t\t\ts = s + \"super(\"; //$NON-NLS-1$\r", "+\t\t}\r", "+\t\tif (arguments != null)\r", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {\r", "+\t\t\t\ts = s + arguments[i].toStringExpression();\r", "+\t\t\t\tif (i != arguments.length - 1)\r", "+\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\ts = s + \")\"; //$NON-NLS-1$\r", "+\t\treturn s;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a02d77ac530838ca05471257ef9ea8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionOnExplicitConstructorCall.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " public String toString(int tab)", "signatureAfterChange": " \t \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "diff": ["+\tpublic StringBuffer printStatement(int tab, StringBuffer output) {", "+\t\t", "+\t\tprintIndent(tab, output);", "+\t\toutput.append(\"<CompleteOnExplicitConstructorCall:\"); //$NON-NLS-1$", "+\t\tif (qualification != null) qualification.printExpression(0, output).append('.');", "+\t\tif (accessMode == This) {", "+\t\t\toutput.append(\"this(\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\toutput.append(\"super(\"); //$NON-NLS-1$", "+\t\t}", "+\t\tif (arguments != null) {", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\targuments[i].printExpression(0, output);", "+\t\t\t}", "+\t\t}", "+\t\treturn output.append(\")>;\"); //$NON-NLS-1$", "-}", "-public String toString(int tab) {", "-\tString s = tabString(tab);", "-\ts += \"<CompleteOnExplicitConstructorCall:\"; //$NON-NLS-1$", "-\tif (qualification != null)", "-\t\ts = s + qualification.toStringExpression() + \".\"; //$NON-NLS-1$", "-\tif (accessMode == This) {", "-\t\ts = s + \"this(\"; //$NON-NLS-1$", "-\t} else {", "-\t\ts = s + \"super(\"; //$NON-NLS-1$", "-\t}", "-\tif (arguments != null) {", "-\t\tfor (int i = 0; i < arguments.length; i++) {", "-\t\t\ts += arguments[i].toStringExpression();", "-\t\t\tif (i != arguments.length - 1) {", "-\t\t\t\ts += \", \"; //$NON-NLS-1$", "-\t\t\t}", "-\t\t};", "-\t}", "-\ts += \")>\"; //$NON-NLS-1$", "-\treturn s;", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af429a65f778fb0d5c85f3604ee828bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "816b4c1b9cac7ff8ff32a98394f63017de79e76e", "commitAfterChange": "c9c7ee224df6017fe069441025ead9832fa01f51", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public String toStringExpression()", "signatureAfterChange": "\r \r \tpublic String toStringExpression()", "diff": ["-}\r", "-public String toStringExpression() {\r", "-\t/* slow code */\r", "-\r", "-\tString s = \"new \" + type.toString(0); //$NON-NLS-1$\r", "-\tif (arguments == null)\r", "-\t\ts = s + \"()\" ; //$NON-NLS-1$\r", "-\telse\r", "-\t{\ts = s + \"(\"; //$NON-NLS-1$\r", "-\t\tfor (int i = 0 ; i < arguments.length ; i++)\r", "-\t\t{\ts = s + arguments[i].toStringExpression();\r", "-\t\t\tif (i == (arguments.length-1))\r", "-\t\t\t\ts = s + \")\" ; //$NON-NLS-1$\r", "-\t\t\telse\r", "-\t\t\t\ts = s + \", \"; };}; //$NON-NLS-1$\r", "-\treturn s ;}\r", "+\r", "+\tpublic String toStringExpression() {\r", "+\r", "+\t\tString s = \"new \" + type.toString(0); //$NON-NLS-1$\r", "+\t\tif (arguments == null)\r", "+\t\t\ts = s + \"()\"; //$NON-NLS-1$\r", "+\t\telse {\r", "+\t\t\ts = s + \"(\"; //$NON-NLS-1$\r", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {\r", "+\t\t\t\ts = s + arguments[i].toStringExpression();\r", "+\t\t\t\tif (i == (arguments.length - 1))\r", "+\t\t\t\t\ts = s + \")\"; //$NON-NLS-1$\r", "+\t\t\t\telse\r", "+\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\treturn s;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fce3657611e4ddfcd8d376ec27e24d87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int indent, StringBuffer output)", "diff": ["+\tpublic StringBuffer printStatement(int indent, StringBuffer output) {", "+", "+\t\tprintIndent(indent, output);", "+\t\tif (qualification != null) qualification.printExpression(0, output).append('.');", "+\t\tif (accessMode == This) {", "+\t\t\toutput.append(\"this(\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\toutput.append(\"super(\"); //$NON-NLS-1$", "+\t\t}", "+\t\tif (arguments != null) {", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\targuments[i].printExpression(0, output);", "+\t\t\t}", "+\t\t}", "+\t\treturn output.append(\");\"); //$NON-NLS-1$", "+\t}", "-", "-\tpublic String toString(int tab) {", "-", "-\t\tString s = tabString(tab);", "-\t\tif (qualification != null)", "-\t\t\ts = s + qualification.toStringExpression() + \".\"; //$NON-NLS-1$", "-\t\tif (accessMode == This) {", "-\t\t\ts = s + \"this(\"; //$NON-NLS-1$", "-\t\t} else {", "-\t\t\ts = s + \"super(\"; //$NON-NLS-1$", "-\t\t}", "-\t\tif (arguments != null)", "-\t\t\tfor (int i = 0; i < arguments.length; i++) {", "-\t\t\t\ts = s + arguments[i].toStringExpression();", "-\t\t\t\tif (i != arguments.length - 1)", "-\t\t\t\t\ts = s + \", \"; //$NON-NLS-1$", "-\t\t\t}", "-\t\ts = s + \")\"; //$NON-NLS-1$", "-\t\treturn s;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd37e66fa270717f491b5c6b2d8c0ba0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnExplicitConstructorCall.java", "commitBeforeChange": "f6209e22cd3c6ef55e09617e84e4b61166bfdc34", "commitAfterChange": "e3b61331087882f47093048d6298d97548b68615", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " public String toString(int tab)", "signatureAfterChange": "  \tpublic StringBuffer printStatement(int tab, StringBuffer output)", "diff": ["-}", "-public String toString(int tab) {", "-\tString s = tabString(tab);", "-\ts += \"<SelectOnExplicitConstructorCall:\"; //$NON-NLS-1$", "-\tif (qualification != null)", "-\t\ts = s + qualification.toStringExpression() + \".\"; //$NON-NLS-1$", "-\tif (accessMode == This) {", "-\t\ts = s + \"this(\"; //$NON-NLS-1$", "-\t} else {", "-\t\ts = s + \"super(\"; //$NON-NLS-1$", "-\tif (arguments != null) {", "-\t\tfor (int i = 0; i < arguments.length; i++) {", "-\t\t\ts += arguments[i].toStringExpression();", "-\t\t\tif (i != arguments.length - 1) {", "-\t\t\t\ts += \", \"; //$NON-NLS-1$", "+", "+\tpublic StringBuffer printStatement(int tab, StringBuffer output) {", "+", "+\t\tprintIndent(tab, output);", "+\t\toutput.append(\"<SelectOnExplicitConstructorCall:\"); //$NON-NLS-1$", "+\t\tif (qualification != null) qualification.printExpression(0, output).append('.');", "+\t\tif (accessMode == This) {", "+\t\t\toutput.append(\"this(\"); //$NON-NLS-1$", "+\t\t} else {", "+\t\t\toutput.append(\"super(\"); //$NON-NLS-1$", "+\t\t}", "+\t\tif (arguments != null) {", "+\t\t\tfor (int i = 0; i < arguments.length; i++) {", "+\t\t\t\tif (i > 0) output.append(\", \"); //$NON-NLS-1$", "+\t\t\t\targuments[i].printExpression(0, output);", "-\t\t};", "+\t\t}", "+\t\treturn output.append(\")>;\"); //$NON-NLS-1$", "-\ts += \")>\"; //$NON-NLS-1$", "-\treturn s;", "-}"]}], "num": 65243}