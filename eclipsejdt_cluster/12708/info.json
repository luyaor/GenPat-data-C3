{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba2c6c312dec56999713dfd72d634612", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3231ba4fdede0e016864bfe83e2bd0ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "e7041eebe1b9ef3b1ae9f5f9c79b24274ea327d1", "commitAfterChange": "8585977b682b225927c2b7dfa188383f714b1d41", "methodNumberBeforeChange": 403, "methodNumberAfterChange": 403, "signatureBeforeChange": " public void testBug317719d() throws Exception", "signatureAfterChange": " public void testBug317719d() throws Exception", "diff": ["-\t\t\t\"Method foo(List<String>) has the same erasure foo(List<E>) as another method in type X\\n\" + ", "+\t\t\t\"Erasure of method foo(List<String>) is the same as another method in type X\\n\" +", "-\t\t\t\"Method foo(List<Integer>) has the same erasure foo(List<E>) as another method in type X\\n\" + ", "+\t\t\t\"Erasure of method foo(List<Integer>) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method foo(List<String>) has the same erasure foo(List<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method foo(List<String>) is the same as another method in type X\\n\" +", "-\t\t\t\t\"Method foo(List<Integer>) has the same erasure foo(List<E>) as another method in type X\\n\" + ", "+\t\t\t\t\"Erasure of method foo(List<Integer>) is the same as another method in type X\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c5c3cc3eb6315ebce379445cd84f48d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTest_1_3.java", "commitBeforeChange": "dbe199a0a35ed3939846015f97b0348b23531353", "commitAfterChange": "f86c66887c5e1ed3962b4b871db70881ac5621a6", "methodNumberBeforeChange": 52, "methodNumberAfterChange": 52, "signatureBeforeChange": " \tpublic void testBug83127h()", "signatureAfterChange": " \tpublic void testBug83127h()", "diff": ["-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, type parameters are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, type parameters are only available if source level is 1.5\\n\" + ", "-\t\t\t\"Syntax error, parameterized types are only available if source level is 5.0\\n\" + ", "+\t\t\t\"Syntax error, parameterized types are only available if source level is 1.5\\n\" + "]}], "num": 12708}