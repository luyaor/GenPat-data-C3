{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8cad05aa18376dbc7d46b87e3a51baf", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137067a5b6484949eb4cd21199e9c0a9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "8fea12e4bfaf9512e2895dd3e38d29d36df0b0d7", "commitAfterChange": "44745746fe14ee21b76846ff0560d4bd8139889c", "methodNumberBeforeChange": 78, "methodNumberAfterChange": 78, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\tboolean useEnableJavadoc = false;", "-\t\t\t\t\t\thandleWarningToken(token, isEnabling, useEnableJavadoc);", "+\t\t\t\t\t\thandleWarningToken(token, isEnabling);", "-\t\t\t\t\tthis.options.put(", "-\t\t\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "-\t\t\t\t\t\tCompilerOptions.ENABLED);", "-\t\t\t\t\tuseEnableJavadoc = true;", "+\t\t\t\t\tthis.enableJavadocOn = true;", "+\t", "+\t// set DocCommentSupport, with appropriate side effects on defaults if ", "+\t// javadoc is not enabled", "+\tif (this.enableJavadocOn) {", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\tCompilerOptions.ENABLED);", "+\t} else if (this.warnJavadocOn || this.warnAllJavadocOn) {", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "+\t\t\tCompilerOptions.ENABLED);", "+\t\t// override defaults: references that are embedded in javadoc are ignored", "+\t\t// from the perspective of parameters and thrown exceptions usage", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportUnusedParameterIncludeDocCommentReference,", "+\t\t\tCompilerOptions.DISABLED);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownExceptionIncludeDocCommentReference,", "+\t\t\tCompilerOptions.DISABLED);", "+\t}", "+\t// configure warnings for javadoc contents", "+\tif (this.warnJavadocOn || this.warnAllJavadocOn) {", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportInvalidJavadoc,", "+\t\t\tCompilerOptions.WARNING);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "+\t\t\tCompilerOptions.ENABLED);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsDeprecatedRef,", "+\t\t\tCompilerOptions.ENABLED);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsNotVisibleRef,", "+\t\t\tCompilerOptions.ENABLED);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "+\t\t\tCompilerOptions.WARNING);", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "+\t\t\tCompilerOptions.PRIVATE);", "+\t}", "+\tif (this.warnAllJavadocOn) {", "+\t\tthis.options.put(", "+\t\t\tCompilerOptions.OPTION_ReportMissingJavadocComments,", "+\t\t\tCompilerOptions.WARNING);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "347b2f2d48434baa7efd9ca48cd1f4e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "8fea12e4bfaf9512e2895dd3e38d29d36df0b0d7", "commitAfterChange": "44745746fe14ee21b76846ff0560d4bd8139889c", "methodNumberBeforeChange": 73, "methodNumberAfterChange": 73, "signatureBeforeChange": " protected void handleWarningToken(String token, boolean isEnabling, boolean useEnableJavadoc) throws InvalidInputException", "signatureAfterChange": " protected void handleWarningToken(String token, boolean isEnabling) throws InvalidInputException", "diff": ["-protected void handleWarningToken(String token, boolean isEnabling, boolean useEnableJavadoc) throws InvalidInputException {", "+protected void handleWarningToken(String token, boolean isEnabling) throws InvalidInputException {", "-\t\tif (!useEnableJavadoc) {", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "-\t\t\t\tisEnabling ? CompilerOptions.ENABLED: CompilerOptions.DISABLED);", "-\t\t}", "-\t\t// if disabling then it's not necessary to set other javadoc options", "-\t\tif (isEnabling) {", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadoc,", "-\t\t\t\tCompilerOptions.WARNING);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "-\t\t\t\tCompilerOptions.ENABLED);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsDeprecatedRef,", "-\t\t\t\tCompilerOptions.DISABLED);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsNotVisibleRef,", "-\t\t\t\tCompilerOptions.DISABLED);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "-\t\t\t\tCompilerOptions.PRIVATE);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "-\t\t\t\tCompilerOptions.WARNING);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "-\t\t\t\tCompilerOptions.PRIVATE);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportRedundantSuperinterface,", "-\t\t\t\tCompilerOptions.DISABLED);", "-\t\t}", "+\t\tthis.warnJavadocOn = isEnabling;", "-\t\tif (!useEnableJavadoc) {", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_DocCommentSupport,", "-\t\t\t\tisEnabling ? CompilerOptions.ENABLED: CompilerOptions.DISABLED);", "-\t\t}", "-\t\t// if disabling then it's not necessary to set other javadoc options", "-\t\tif (isEnabling) {", "-\t\t\tthis.options.put(", "-\t\t\tCompilerOptions.OPTION_ReportInvalidJavadoc,", "-\t\t\tCompilerOptions.WARNING);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTags,", "-\t\t\t\tCompilerOptions.ENABLED);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportInvalidJavadocTagsVisibility,", "-\t\t\t\tCompilerOptions.PRIVATE);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTags,", "-\t\t\t\tCompilerOptions.WARNING);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocTagsVisibility,", "-\t\t\t\tCompilerOptions.PRIVATE);", "-\t\t\tthis.options.put(", "-\t\t\t\tCompilerOptions.OPTION_ReportMissingJavadocComments,", "-\t\t\t\tCompilerOptions.WARNING);", "-\t\t}", "+\t\tthis.warnAllJavadocOn = this.warnJavadocOn = isEnabling;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98782ff88c51468abc9fa0aa0a0c7fa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "edb32b441cc14878cff12525b3d2fe690e5bc6ce", "commitAfterChange": "1af640370c6653e56d05f0375d401e1bac759776", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-   \t\t\t\t\t} else if (token.equals(\"syntheticAccess\")) { //$NON-NLS-1$", "+   \t\t\t\t\t} else if (token.equals(\"syntheticAccess\") //$NON-NLS-1$", "+   \t\t\t\t\t\t\t|| token.equals(\"synthetic-access\")) { //$NON-NLS-1$", "-\t\t\t\t\t} else if (token.equals(\"unqualifiedField\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"unqualifiedField\") //$NON-NLS-1$", "+\t\t\t\t\t\t\t|| token.equals(\"unqualified-field-access\")) { //$NON-NLS-1$", "-\t\t\t\t\t} else if (token.equals(\"enumSwitch\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"enumSwitch\") //$NON-NLS-1$", "+\t\t\t\t\t\t\t|| token.equals(\"incomplete-switch\")) { //$NON-NLS-1$", "+\t\t\t\t\t} else if (token.equals(\"hiding\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportHiddenCatchBlock,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportLocalVariableHiding,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportFieldHiding,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportTypeParameterHiding,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t} else if (token.equals(\"static-access\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportNonStaticAccessToStatic,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportIndirectStaticAccess,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t} else if (token.equals(\"unused\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedLocal, ", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedParameter,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedImport,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedPrivateMember,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);", "+\t\t\t\t\t\tthis.options.put(", "+\t\t\t\t\t\t\tCompilerOptions.OPTION_ReportUnusedDeclaredThrownException,", "+\t\t\t\t\t\t\tisEnabling ? CompilerOptions.WARNING : CompilerOptions.IGNORE);"]}], "num": 14692}