{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78d67d1b75d574ca2513fae9ccff69c9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72bf097156273eb7c41d46c8bd588a1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "1146476ca138da09c36a16ea64250a150f60b014", "commitAfterChange": "e3d3c02cc33fd5166184422215f4903c5a405e0f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void compile(String[] filenames, String[] initialTypeNames)", "signatureAfterChange": " protected void compile(SourceFile[] units)", "diff": ["-protected void compile(String[] filenames, String[] initialTypeNames) {", "-\tString encoding = javaBuilder.javaProject.getOption(JavaCore.CORE_ENCODING, true);", "-\tint toDo = filenames.length;", "+protected void compile(SourceFile[] units) {", "+\tint toDo = units.length;", "-\t\tSourceFile[] toCompile = new SourceFile[toDo];", "-\t\tfor (int i = 0; i < toDo; i++) {", "-\t\t\tString filename = filenames[i];", "-\t\t\tif (JavaBuilder.DEBUG)", "-\t\t\t\tSystem.out.println(\"About to compile \" + filename); //$NON-NLS-1$", "-\t\t\ttoCompile[i] = new SourceFile(filename, initialTypeNames[i], encoding);", "-\t\t}", "-\t\tcompile(toCompile, initialTypeNames, null);", "+\t\tif (JavaBuilder.DEBUG)", "+\t\t\tfor (int i = 0; i < toDo; i++)", "+\t\t\t\tSystem.out.println(\"About to compile \" + units[i].typeLocator()); //$NON-NLS-1$", "+\t\tcompile(units, null);", "-\t\t\tString[] initialNamesInLoop = new String[doNow];", "-\t\t\t\tString filename = filenames[i];", "-\t\t\t\tif (compilingFirstGroup || workQueue.isWaiting(filename)) {", "+\t\t\t\tSourceFile unit = units[i++];", "+\t\t\t\tif (compilingFirstGroup || workQueue.isWaiting(unit)) {", "-\t\t\t\t\t\tSystem.out.println(\"About to compile \" + filename);//$NON-NLS-1$", "-\t\t\t\t\tString initialTypeName = initialTypeNames[i];", "-\t\t\t\t\tinitialNamesInLoop[index] = initialTypeName;", "-\t\t\t\t\ttoCompile[index++] = new SourceFile(filename, initialTypeName, encoding);", "+\t\t\t\t\t\tSystem.out.println(\"About to compile \" + unit.typeLocator()); //$NON-NLS-1$", "+\t\t\t\t\ttoCompile[index++] = unit;", "-\t\t\t\ti++;", "-\t\t\tif (index < doNow) {", "+\t\t\tif (index < doNow)", "-\t\t\t\tSystem.arraycopy(initialNamesInLoop, 0, initialNamesInLoop = new String[index], 0, index);", "-\t\t\t}", "-\t\t\tString[] additionalFilenames = new String[toDo - i];", "-\t\t\tSystem.arraycopy(filenames, i, additionalFilenames, 0, additionalFilenames.length);", "+\t\t\tSourceFile[] additionalUnits = new SourceFile[toDo - i];", "+\t\t\tSystem.arraycopy(units, i, additionalUnits, 0, additionalUnits.length);", "-\t\t\tcompile(toCompile, initialNamesInLoop, additionalFilenames);", "+\t\t\tcompile(toCompile, additionalUnits);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbe17f1b57f6846fa248322c366c3ff2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "da1ed68bc4edf753a4c670a981fc3b101d0548b0", "commitAfterChange": "d60a521aebaf899095636d4081476cd72ef03126", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void compile(SourceFile[] units)", "signatureAfterChange": " protected void compile(SourceFile[] units)", "diff": ["-\t\tcompile(units, null);", "+\t\tcompile(units, null, true);", "-\t\tint i = 0;", "+\t\tSourceFile[] remainingUnits = new SourceFile[unitsLength]; // copy of units, removing units when about to compile", "+\t\tSystem.arraycopy(units, 0, remainingUnits, 0, unitsLength);", "+\t\tint doNow = unitsLength < MAX_AT_ONCE ? unitsLength : MAX_AT_ONCE;", "+\t\tSourceFile[] toCompile = new SourceFile[doNow];", "+\t\tint remainingIndex = 0;", "-\t\twhile (i < unitsLength) {", "-\t\t\tint doNow = unitsLength < MAX_AT_ONCE ? unitsLength : MAX_AT_ONCE;", "-\t\t\tint index = 0;", "-\t\t\tSourceFile[] toCompile = new SourceFile[doNow];", "-\t\t\twhile (i < unitsLength && index < doNow) {", "+\t\twhile (remainingIndex < unitsLength) {", "+\t\t\tint count = 0;", "+\t\t\twhile (remainingIndex < unitsLength && count < doNow) {", "-\t\t\t\tSourceFile unit = units[i++];", "-\t\t\t\tif (compilingFirstGroup || workQueue.isWaiting(unit)) {", "+\t\t\t\tSourceFile unit = remainingUnits[remainingIndex];", "+\t\t\t\tif (unit != null && (compilingFirstGroup || this.workQueue.isWaiting(unit))) {", "-\t\t\t\t\t\tSystem.out.println(\"About to compile \" + unit.typeLocator()); //$NON-NLS-1$", "-\t\t\t\t\ttoCompile[index++] = unit;", "+\t\t\t\t\t\tSystem.out.println(\"About to compile #\" + remainingIndex + \" : \"+ unit.typeLocator()); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\ttoCompile[count++] = unit;", "+\t\t\t\tremainingUnits[remainingIndex++] = null;", "-\t\t\tif (index < doNow)", "-\t\t\t\tSystem.arraycopy(toCompile, 0, toCompile = new SourceFile[index], 0, index);", "-\t\t\tSourceFile[] additionalUnits = new SourceFile[unitsLength - i];", "-\t\t\tSystem.arraycopy(units, i, additionalUnits, 0, additionalUnits.length);", "+\t\t\tif (count < doNow)", "+\t\t\t\tSystem.arraycopy(toCompile, 0, toCompile = new SourceFile[count], 0, count);", "+\t\t\tif (!compilingFirstGroup)", "+\t\t\t\tfor (int a = remainingIndex; a < unitsLength; a++)", "+\t\t\t\t\tif (remainingUnits[a] != null && this.workQueue.isCompiled(remainingUnits[a]))", "+\t\t\t\t\t\tremainingUnits[a] = null; // use the class file for this source file since its been compiled", "+\t\t\tcompile(toCompile, remainingUnits, compilingFirstGroup);", "-\t\t\tcompile(toCompile, additionalUnits);"]}], "num": 45575}