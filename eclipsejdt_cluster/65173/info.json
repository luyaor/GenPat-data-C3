{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5feca52ac50289309f7e59ff24736e48", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "957b7bb482cca592d49fed8d3d0978ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "0a52fc66fb4db2fd9981d577d974e91228093601", "commitAfterChange": "76d395ddd90431ef7cb4486078cb51e978a5ad63", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  \tprivate void printJavadocBlock(FormatJavadocBlock block)", "signatureAfterChange": "  \tprivate void printJavadocBlock(FormatJavadocBlock block)", "diff": ["-\t\t\t\t\t\t\ttextLength = getTextLength(block, text);", "+\t\t\t\t\t\t\ttextLength = getTextLength(block, text, false);", "-\t\t\t\t\t\tif (newLines > 0) {", "-\t\t\t\t\t\t\tint col = this.column;", "-\t\t\t\t\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\t\t\t\t\tint textEnd = text.separatorsPtr == -1 ? text.sourceEnd : (int) (text.separators[0] >>> 32);", "-\t\t\t\t\t\t\tprintJavadocTextLine(buffer, text.sourceStart, textEnd, block, true, true, true);", "-\t\t\t\t\t\t\taddReplaceEdit(text.sourceStart, textEnd, buffer.toString());", "-\t\t\t\t\t\t\ttextLength -= this.column - col;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tthis.column += textLength;", "+\t\t\t\t\t\tint additionalLength = printJavadocHtmlImmutableTag(text, block, newLines > 0);", "+\t\t\t\t\t\tthis.column += textLength - additionalLength;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8d894ebe998fdf56b80024f2209266f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "8bd987839355c299213c95f3874a2e3574283d9c", "commitAfterChange": "76b6723dbe61d0b9874754d0d6572d1a4d8c0cbc", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  \tprivate int printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate void printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\tprivate int printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine) {", "+\tprivate void printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine) {", "-\t\tint additionalLength = 0;", "-\t\t\t// Indent if necessary", "-\t\t\tif (textOnNewLine) {", "-\t\t\t\tint col = this.column;", "-\t\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\t\tint textEnd = text.separatorsPtr == -1 ? text.sourceEnd : (int) (text.separators[0] >>> 32);", "-\t\t\t\tprintJavadocTextLine(buffer, text.sourceStart, textEnd, block, true, true, true);", "-\t\t\t\taddReplaceEdit(text.sourceStart, textEnd, buffer.toString());", "-\t\t\t\tadditionalLength = this.column - col;", "-\t\t\t}", "-\t", "-\t\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t\t\treturn;", "-\t\treturn text.separatorsPtr<2 ? additionalLength : 0;"]}], "num": 65173}