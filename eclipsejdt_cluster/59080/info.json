{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "643a17abcb6e365e41aa8b74b0529a65", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f0c1a37e1ec52fb065e145305263210", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachedJavadocTests.java", "commitBeforeChange": "721861559c25715968a033650bdf3115ad56483d", "commitAfterChange": "7560640d61f8673c0bdcc6e3d95d6a5f677e0190", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic void test018() throws JavaModelException", "signatureAfterChange": " \tpublic void test018() throws JavaModelException", "diff": ["-\t\tIPackageFragment packageFragment = this.root.getPackageFragment(\"p1/p2\"); //$NON-NLS-1$", "+\t\tIPackageFragment packageFragment = this.root.getPackageFragment(\"p1/p2/p3\"); //$NON-NLS-1$", "-\t\t\tassertTrue(\"Wrong doc\", javadoc.indexOf(method.getElementName()) != -1);", "+\t\t\tfinal String selector = method.getElementName();", "+\t\t\tassertTrue(\"Wrong doc\", javadoc.indexOf(selector) != -1);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f84f24759c64dc78675bdd1d9984a8a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "a81ccfc0bc8694879e3dd29554f4e34087f49572", "commitAfterChange": "090ebdc0744610fb4e5ac8b5b4731d3eafdb24fe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void runTest(boolean shouldCompileOK, String[] testFiles, String commandLine, \t\t\tString expectedOutOutputString, \t\t\tString expectedErrOutputString, \t\t\tboolean shouldFlushOutputDirectory)", "signatureAfterChange": " \tprivate void runTest(boolean shouldCompileOK, String[] testFiles, String commandLine, \t\t\tString expectedOutOutputString, \t\t\tString expectedErrOutputString, \t\t\tboolean shouldFlushOutputDirectory)", "diff": ["-\t\t\tcompileOK = batchCompiler.compile(Main.tokenize(commandLine));", "+\t\t\tfinal String[] tokenizeCommandLine = Main.tokenize(commandLine);", "+\t\t\tcompileOK = batchCompiler.compile(tokenizeCommandLine);"]}], "num": 59080}