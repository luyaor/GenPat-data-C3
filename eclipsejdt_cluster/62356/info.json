{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d8b8a08c73189959dc9533efba9cbe8", "detectedBy": ["DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bb666c91db5e7477bf518fe87ec0d2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetSingleNameReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": " public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, MethodBinding writeAccessor, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\t\t\tFieldBinding fieldBinding = (FieldBinding) this.codegenBinding;", "-\t\t\tif (fieldBinding.isStatic()) {", "-\t\t\t\tif (fieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\t\tcodeStream.getstatic(fieldBinding);", "+\t\t\tFieldBinding codegenField = ((FieldBinding) this.binding).original();", "+\t\t\tif (codegenField.isStatic()) {", "+\t\t\t\tif (codegenField.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\t\t\tTypeBinding someReceiverType = this.delegateThis != null ? this.delegateThis.type : this.actualReceiverType;", "+\t\t\t\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, codegenField, someReceiverType, true /* implicit this */);", "+\t\t\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getstatic, codegenField, constantPoolDeclaringClass);", "-\t\t\t\t\tcodeStream.generateEmulationForField(fieldBinding);", "+\t\t\t\t\tcodeStream.generateEmulationForField(codegenField);", "-\t\t\t\t\tcodeStream.generateEmulatedReadAccessForField(fieldBinding);", "+\t\t\t\t\tcodeStream.generateEmulatedReadAccessForField(codegenField);", "-\t\t\t\tif (fieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\t\tif (codegenField.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\t\tcodeStream.getfield(fieldBinding);", "+\t\t\t\t\tTypeBinding someReceiverType = this.delegateThis != null ? this.delegateThis.type : this.actualReceiverType;", "+\t\t\t\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, codegenField, someReceiverType, true /* implicit this */);", "+\t\t\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getfield, codegenField, constantPoolDeclaringClass);", "-\t\t\t\t\tcodeStream.generateEmulationForField(fieldBinding);", "+\t\t\t\t\tcodeStream.generateEmulationForField(codegenField);", "-\t\t\t\t\tcodeStream.generateEmulatedReadAccessForField(fieldBinding);", "+\t\t\t\t\tcodeStream.generateEmulatedReadAccessForField(codegenField);", "-\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.codegenBinding;", "+\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.binding;", "-\t\t\tFieldBinding fieldBinding = (FieldBinding) this.codegenBinding;", "-\t\t\tif (fieldBinding.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "-\t\t\t\tfieldStore(codeStream, fieldBinding, writeAccessor, valueRequired);", "+\t\t\tFieldBinding codegenField = ((FieldBinding) this.binding).original();", "+\t\t\tif (codegenField.canBeSeenBy(getReceiverType(currentScope), this, currentScope)) {", "+\t\t\t\tfieldStore(currentScope, codeStream, codegenField, writeAccessor, this.actualReceiverType, this.delegateThis == null /* implicit this */, valueRequired);", "-\t\t\t\t\tif ((fieldBinding.type == TypeBinding.LONG) || (fieldBinding.type == TypeBinding.DOUBLE)) {", "-\t\t\t\t\t\tcodeStream.dup2_x2();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcodeStream.dup_x2();", "-\t\t\t\t\t}", "+\t\t\t\t\tswitch (codegenField.type.id) {", "+\t\t\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\t\t\tcodeStream.dup2_x2();", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tcodeStream.dup_x2();", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}\t\t\t\t\t", "-\t\t\t\tcodeStream.generateEmulatedWriteAccessForField(fieldBinding);", "+\t\t\t\tcodeStream.generateEmulatedWriteAccessForField(codegenField);", "-\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.codegenBinding;", "+\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.binding;", "-\t\t\t\tif ((localBinding.type == TypeBinding.LONG) || (localBinding.type == TypeBinding.DOUBLE)) {", "-\t\t\t\t\tcodeStream.dup2();", "-\t\t\t\t} else {", "-\t\t\t\t\tcodeStream.dup();", "-\t\t\t\t}", "+\t\t\t\tswitch (localBinding.type.id) {", "+\t\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\t\tcodeStream.dup2();", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tcodeStream.dup();", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}\t\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ab35c5fbfc844351b30d9640b79591b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\t\t\tFieldBinding fieldBinding;", "-\t\t\tif ((fieldBinding = (FieldBinding) this.codegenBinding).isStatic()) {", "+\t\t\tFieldBinding codegenField = (((FieldBinding)this.binding).original());", "+\t\t\tif (codegenField.isStatic()) {", "-\t\t\t\t\tcodeStream.getstatic(fieldBinding);", "+\t\t\t\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, codegenField, this.actualReceiverType, true /* implicit this */);", "+\t\t\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getstatic, codegenField, constantPoolDeclaringClass);", "-\t\t\t\t\tcodeStream.getfield(fieldBinding);", "+\t\t\t\t\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, codegenField, this.actualReceiverType, true /* implicit this */);", "+\t\t\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getfield, codegenField, constantPoolDeclaringClass);", "-\t\t\t\toperandType = fieldBinding.type;", "+\t\t\t\toperandType = codegenField.type;", "-\t\t\t\tif (fieldBinding.isStatic()) {", "-\t\t\t\t\tif ((operandType == TypeBinding.LONG) || (operandType == TypeBinding.DOUBLE)) {", "-\t\t\t\t\t\tcodeStream.dup2();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcodeStream.dup();", "-\t\t\t\t\t}", "+\t\t\t\tif (codegenField.isStatic()) {", "+\t\t\t\t\tswitch (operandType.id) {", "+\t\t\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\t\t\tcodeStream.dup2();", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tcodeStream.dup();", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}\t\t\t\t\t", "-\t\t\t\t\tif ((operandType == TypeBinding.LONG) || (operandType == TypeBinding.DOUBLE)) {", "-\t\t\t\t\t\tcodeStream.dup2_x1();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcodeStream.dup_x1();", "+\t\t\t\t\tswitch (operandType.id) {", "+\t\t\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\t\t\tcodeStream.dup2_x1();", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tcodeStream.dup_x1();", "+\t\t\t\t\t\t\tbreak;", "-\t\t\tfieldStore(codeStream, fieldBinding, this.syntheticAccessors == null ? null : this.syntheticAccessors[SingleNameReference.WRITE], false);", "+\t\t\tfieldStore(currentScope, codeStream, codegenField, this.syntheticAccessors == null ? null : this.syntheticAccessors[SingleNameReference.WRITE], this.actualReceiverType, true /*implicit this*/, false);", "-\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.codegenBinding;", "+\t\t\tLocalVariableBinding localBinding = (LocalVariableBinding) this.binding;", "-\t\t\t\t\tif ((localBinding.type == TypeBinding.LONG) || (localBinding.type == TypeBinding.DOUBLE)) {", "-\t\t\t\t\t\tcodeStream.dup2();", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tcodeStream.dup();", "-\t\t\t\t\t}", "+\t\t\t\t\tswitch (localBinding.type.id) {", "+\t\t\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\t\t\tcodeStream.dup2();", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\tdefault:", "+\t\t\t\t\t\t\tcodeStream.dup();", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}\t\t\t\t\t"]}], "num": 62356}