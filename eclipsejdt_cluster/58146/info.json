{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84b1e0f3508b2ea6c832009d977178f7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4857b5df6483af2677f9d2b6b6799a2a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "d4b1799d68d9da7272b7b6470cdf87ffed026135", "commitAfterChange": "87e8af21b6459d4881cd0237a774f295946a026a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void test013() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test013() throws JavaModelException, CoreException", "diff": ["+\t// TODO (frederic) put back assertions when failure on linux platform will be fixed", "-//\t\tString independentSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "+\t\tString independentSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "-\t\tassertSourceEquals(\"Encoded UTF-8 source should have been decoded the same way!\", source, encodedContents);", "+//\t\tassertSourceEquals(\"Encoded UTF-8 source should have been decoded the same way!\", source, encodedContents);", "+\t\tSystem.out.println(\"Encoding tests013:\");", "+\t\tSystem.out.println(\"  - file encoding: \"+this.utf8File.getCharset());", "+\t\tSystem.out.println(\"  - project encoding: \"+this.encodingProject.getDefaultCharset());", "+\t\tSystem.out.println(\"  - workspace encoding: \"+getWorkspaceRoot().getDefaultCharset());", "+\t\tif (encodedContents.equals(independentSource)) {", "+\t\t\tSystem.out.println(\"  => SUCCESS: sources are identical\");", "+\t\t} else {", "+//\t\t\tSystem.out.println(\"  => FAIL: Encoded UTF-8 source should have been decoded the same way!\");", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0226de1575ee000c8bf74e422077134", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "65a63579ebc9b37573db7995b64988407cf25ede", "commitAfterChange": "06e8c1940b7fce6b86315eb81900d27eb1279bce", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void test013() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test013() throws JavaModelException, CoreException", "diff": ["-\t// TODO (frederic) put back assertions when failure on linux platform will be fixed", "-\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, null));", "-//\t\tString independentEncodedContents = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(encodedContents);", "-\t\tString independentSource = org.eclipse.jdt.core.tests.util.Util.convertToIndependantLineDelimiter(source);", "-//\t\tassertEquals(\"Encoded UTF-8 source should have been decoded the same way!\", independentEncodedContents, independentSource);", "-//\t\tassertSourceEquals(\"Encoded UTF-8 source should have been decoded the same way!\", source, encodedContents);", "-\t\tSystem.out.println(\"Encoding tests013:\");", "-\t\tSystem.out.println(\"  - file encoding: \"+this.utf8File.getCharset());", "-\t\tSystem.out.println(\"  - project encoding: \"+this.encodingProject.getDefaultCharset());", "-\t\tSystem.out.println(\"  - workspace encoding: \"+getWorkspaceRoot().getDefaultCharset());", "-\t\tif (encodedContents.equals(independentSource)) {", "-\t\t\tSystem.out.println(\"  => SUCCESS: sources are identical\");", "-\t\t} else {", "-//\t\t\tSystem.out.println(\"  => FAIL: Encoded UTF-8 source should have been decoded the same way!\");", "-\t\t}", "+\t\tString encodedContents = new String (Util.getResourceContentsAsCharArray(this.utf8File, systemEncoding));", "+\t\tassertFalse(\"System encoding: \"+systemEncoding+\" should be different than UTF-8!\", \"UTF-8\".equals(systemEncoding));", "+\t\tassertSourceEquals(\"Encoded UTF-8 source should have been decoded the same way!\", source, encodedContents);"]}], "num": 58146}