{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5edca4b6bc13be306937344baea9eafe", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a846961ee8d3c24f54dcc9e3cdde87b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/ClassFileReader.java", "commitBeforeChange": "2a6fc21e132c7337a2ad9e75a03356551f0e9060", "commitAfterChange": "2f8f6c0c9552d7ebf46ec13ce513e098823a7a4e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ClassFileReader(byte[] classFileBytes, int decodingFlags) throws ClassFormatException", "signatureAfterChange": " \tpublic ClassFileReader(byte[] classFileBytes, int decodingFlags) throws ClassFormatException", "diff": ["+\t\t\tthis.interfaceNames = NO_INTERFACES_NAMES;", "+\t\t\tthis.interfaceIndexes = NO_INTERFACE_INDEXES;", "-\t\t\t\t\tthis.interfaceNames = noInterfacesNames;", "-\t\t\t\t\tthis.interfaceIndexes = noInterfacesIndexes;", "-\t\t\t} else {", "-\t\t\t\tthis.interfaceNames = noInterfacesNames;", "-\t\t\t\tthis.interfaceIndexes = noInterfacesIndexes;", "+\t\t\tthis.fields = NO_FIELD_INFOS;", "+\t\t\tthis.methods = NO_METHOD_INFOS;", "+\t\t\tint attributesIndex = 0;", "+\t\t\tthis.attributes = ClassFileAttribute.NO_ATTRIBUTES;", "+\t\t\t\tif (this.attributesCount != 0) {", "+\t\t\t\t\tthis.attributes = new IClassFileAttribute[this.attributesCount];", "+\t\t\t\t}", "+\t\t\t\t\t\tthis.attributes[attributesIndex++] = new ClassFileAttribute(classFileBytes, this.constantPool, readOffset);", "+\t\t\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.INNER_CLASSES)) {", "+\t\t\t\t\t\tthis.innerClassesAttribute = new InnerClassesAttribute(classFileBytes, this.constantPool, readOffset);", "+\t\t\t\t\t\tthis.attributes[attributesIndex++] = this.innerClassesAttribute;", "+\t\t\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.SOURCE)) {", "+\t\t\t\t\t\t\tthis.sourceFileAttribute = new SourceFileAttribute(classFileBytes, this.constantPool, readOffset);", "+\t\t\t\t\t\t\tthis.attributes[attributesIndex++] = this.sourceFileAttribute;", "+\t\t\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.SYNTHETIC)) {", "+\t\t\t\t\t\t\tthis.isSynthetic = true;", "+\t\t\t\t\t\t\tthis.attributes[attributesIndex++] = new ClassFileAttribute(classFileBytes, this.constantPool, readOffset);", "-\t\t\t\t\t\tif (equals(attributeName, IAttributeNamesConstants.INNER_CLASSES)) {", "-\t\t\t\t\t\t\tthis.innerClassesAttribute = new InnerClassesAttribute(classFileBytes, this.constantPool, readOffset);", "-\t\t\t\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.SOURCE)) {", "-\t\t\t\t\t\t\t\tthis.sourceFileAttribute = new SourceFileAttribute(classFileBytes, this.constantPool, readOffset);", "-\t\t\t\t\t\t} else if (equals(attributeName, IAttributeNamesConstants.SYNTHETIC)) {", "-\t\t\t\t\t\t\t\tthis.isSynthetic = true;", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.attributes[attributesIndex++] = new ClassFileAttribute(classFileBytes, this.constantPool, readOffset);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f63ec10c515af6f5102bbf0bbe974e40", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/MethodInfo.java", "commitBeforeChange": "2a6fc21e132c7337a2ad9e75a03356551f0e9060", "commitAfterChange": "2f8f6c0c9552d7ebf46ec13ce513e098823a7a4e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic MethodInfo(byte classFileBytes[], IConstantPool constantPool, int offset) \t\tthrows ClassFormatException", "signatureAfterChange": " \tpublic MethodInfo(byte classFileBytes[], IConstantPool constantPool, int offset) \t\tthrows ClassFormatException", "diff": ["+\t\tthis.attributes = ClassFileAttribute.NO_ATTRIBUTES;", "+\t\tif (this.attributesCount != 0) {", "+\t\t\tthis.attributes = new IClassFileAttribute[this.attributesCount];", "+\t\t}", "+\t\tint attributesIndex = 0;", "-\t\tfor (int i = 0; i < attributesCount; i++) {", "+\t\tfor (int i = 0; i < this.attributesCount; i++) {", "+\t\t\t\tthis.attributes[attributesIndex++] = new ClassFileAttribute(classFileBytes, constantPool, offset + readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = new ClassFileAttribute(classFileBytes, constantPool, offset + readOffset);", "+\t\t\t\tthis.attributes[attributesIndex++] = this.codeAttribute;", "+\t\t\t\tthis.attributes[attributesIndex++] = this.exceptionAttribute;", "+\t\t\t} else {", "+\t\t\t\tthis.attributes[attributesIndex++] = new ClassFileAttribute(classFileBytes, constantPool, offset + readOffset);"]}], "num": 39440}