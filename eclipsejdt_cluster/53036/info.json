{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2af4bd3a4175329afae71c6d6fbac08", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03439e528731f974ad4b23540cbb12c1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "97881e1f65dad02c5fcba69e18ae3332573c3839", "commitAfterChange": "5ae43aadc33d93b5c6af6a0612729105eee79d4f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static ASTNode parse(int kind, char[] source, int offset, int length, Map options, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic static ASTNode parse(int kind, char[] source, int offset, int length, Map options, IProgressMonitor monitor)", "diff": ["+\t\tCodeSnippetParsingUtil codeSnippetParsingUtil = new CodeSnippetParsingUtil();", "-\t\t\t\tConstructorDeclaration constructorDeclaration = CodeSnippetParsingUtil.parseStatements(source, offset, length, options);", "+\t\t\t\tConstructorDeclaration constructorDeclaration = codeSnippetParsingUtil.parseStatements(source, offset, length, options);", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Expression expression = CodeSnippetParsingUtil.parseExpression(source, offset, length, options);", "+\t\t\t\torg.eclipse.jdt.internal.compiler.ast.Expression expression = codeSnippetParsingUtil.parseExpression(source, offset, length, options);", "-\t\t\t\tfinal org.eclipse.jdt.internal.compiler.ast.ASTNode[] nodes = CodeSnippetParsingUtil.parseClassBodyDeclarations(source, offset, length, options);", "+\t\t\t\tfinal org.eclipse.jdt.internal.compiler.ast.ASTNode[] nodes = codeSnippetParsingUtil.parseClassBodyDeclarations(source, offset, length, options);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e31477505be9a39eb2103da3bf3df6b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "0de5167791884524f72d9d44c10f0e243af65d00", "commitAfterChange": "07ab76f69fbeeb2f2fd54cdf3d01ee69344b9ae0", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprivate ASTNode internalCreateASTForKind()", "signatureAfterChange": " \tprivate ASTNode internalCreateASTForKind()", "diff": ["-\t\tif (this.statementsRecovery) {", "+\t\tif ((this.bits & CompilationUnitResolver.STATEMENT_RECOVERY) != 0) {", "-\t\tCodeSnippetParsingUtil codeSnippetParsingUtil = new CodeSnippetParsingUtil(this.ignoreMethodBodies);", "+\t\tCodeSnippetParsingUtil codeSnippetParsingUtil = new CodeSnippetParsingUtil((this.bits & CompilationUnitResolver.IGNORE_METHOD_BODIES) != 0);", "-\t\t\t\tConstructorDeclaration constructorDeclaration = codeSnippetParsingUtil.parseStatements(this.rawSource, this.sourceOffset, this.sourceLength, this.compilerOptions, true, this.statementsRecovery);", "+\t\t\t\tConstructorDeclaration constructorDeclaration = codeSnippetParsingUtil.parseStatements(", "+\t\t\t\t\t\tthis.rawSource,", "+\t\t\t\t\t\tthis.sourceOffset,", "+\t\t\t\t\t\tthis.sourceLength,", "+\t\t\t\t\t\tthis.compilerOptions,", "+\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t(this.bits & CompilationUnitResolver.STATEMENT_RECOVERY) != 0);", "-\t\t\t\tfinal org.eclipse.jdt.internal.compiler.ast.ASTNode[] nodes = codeSnippetParsingUtil.parseClassBodyDeclarations(this.rawSource, this.sourceOffset, this.sourceLength, this.compilerOptions, true, this.statementsRecovery);", "+\t\t\t\tfinal org.eclipse.jdt.internal.compiler.ast.ASTNode[] nodes =", "+\t\t\t\t\tcodeSnippetParsingUtil.parseClassBodyDeclarations(", "+\t\t\t\t\t\t\tthis.rawSource,", "+\t\t\t\t\t\t\tthis.sourceOffset,", "+\t\t\t\t\t\t\tthis.sourceLength,", "+\t\t\t\t\t\t\tthis.compilerOptions,", "+\t\t\t\t\t\t\ttrue,", "+\t\t\t\t\t\t\t(this.bits & CompilationUnitResolver.STATEMENT_RECOVERY) != 0);"]}], "num": 53036}