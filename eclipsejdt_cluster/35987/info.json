{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "459f55c082ba1ee07280d2cea83152b7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bd8602ad7354919371e1a91b5ab51f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(Binding binding)", "signatureAfterChange": "\r public boolean matches(Binding binding)", "diff": ["+ */\r", "+public boolean matches(Binding binding) {\r", "+\tif (!(binding instanceof TypeBinding)) return false;\r", "+\r", "+\tTypeBinding type = (TypeBinding)binding;\r", "+\r", "+\t// fully qualified name\r", "+\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');\r", "+\tif (!this.matchesType(this.simpleName, this.qualification, enclosingTypeName, type)) {\r", "+\t\treturn false;\r", "+\t}\r", "+\r", "+\t// class or interface\r", "+\tswitch (this.classOrInterface) {\r", "+\t\tcase CLASS_SUFFIX:\r", "+\t\t\tif (type.isInterface())\r", "+\t\t\t\treturn false;\r", "+\t\t\tbreak;\r", "+\t\tcase INTERFACE_SUFFIX:\r", "+\t\t\tif (!type.isInterface())\r", "+\t\t\t\treturn false;\r", "+\t\t\tbreak;\r", "+\t}\r", "+\t\r", "+\treturn true;\r", "+}\r", "- */\r", "-public int matchLevel(Binding binding) {\r", "-\tif (binding == null) return INACCURATE_MATCH;\r", "-\tif (!(binding instanceof TypeBinding)) return IMPOSSIBLE_MATCH;\r", "-\r", "-\tTypeBinding type = (TypeBinding)binding;\r", "-\r", "-\t// class or interface\r", "-\tswitch (this.classOrInterface) {\r", "-\t\tcase CLASS_SUFFIX:\r", "-\t\t\tif (type.isInterface())\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\tbreak;\r", "-\t\tcase INTERFACE_SUFFIX:\r", "-\t\t\tif (!type.isInterface())\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\tbreak;\r", "-\t}\r", "-\r", "-\t// fully qualified name\r", "-\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');\r", "-\treturn this.matchLevelForType(this.simpleName, this.qualification, enclosingTypeName, type);\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1febe2fdc1e9154b857bf8449785638e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(Binding binding)", "signatureAfterChange": "\r public boolean matches(Binding binding)", "diff": ["+ */\r", "+public boolean matches(Binding binding) {\r", "+\tif (!(binding instanceof TypeBinding)) return false;\r", "+\r", "+\tTypeBinding type = (TypeBinding)binding;\r", "+\r", "+\t// fully qualified name\r", "+\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');\r", "+\tif (!this.matchesType(this.simpleName, this.qualification, enclosingTypeName, type)) {\r", "+\t\treturn false;\r", "+\t}\r", "+\r", "+\t// class or interface\r", "+\tswitch (this.classOrInterface) {\r", "+\t\tcase CLASS_SUFFIX:\r", "+\t\t\tif (type.isInterface())\r", "+\t\t\t\treturn false;\r", "+\t\t\tbreak;\r", "+\t\tcase INTERFACE_SUFFIX:\r", "+\t\t\tif (!type.isInterface())\r", "+\t\t\t\treturn false;\r", "+\t\t\tbreak;\r", "+\t}\r", "+\t\r", "+\treturn true;\r", "+}\r", "- */\r", "-public int matchLevel(Binding binding) {\r", "-\tif (binding == null) return INACCURATE_MATCH;\r", "-\tif (!(binding instanceof TypeBinding)) return IMPOSSIBLE_MATCH;\r", "-\r", "-\tTypeBinding type = (TypeBinding)binding;\r", "-\r", "-\t// class or interface\r", "-\tswitch (this.classOrInterface) {\r", "-\t\tcase CLASS_SUFFIX:\r", "-\t\t\tif (type.isInterface())\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\tbreak;\r", "-\t\tcase INTERFACE_SUFFIX:\r", "-\t\t\tif (!type.isInterface())\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\tbreak;\r", "-\t}\r", "-\r", "-\t// fully qualified name\r", "-\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');\r", "-\treturn this.matchLevelForType(this.simpleName, this.qualification, enclosingTypeName, type);\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2eb0b61c6f7148c06974c47410ec8622", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "commitAfterChange": "3ba8416c88ea2caabb450ac956476cf3b7bed2e6", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": " public int matchLevel(Binding binding)", "signatureAfterChange": " public int matchLevel(Binding binding)", "diff": ["+ */", "+public int matchLevel(Binding binding) {", "+\tif (binding == null) return INACCURATE_MATCH;", "+\tif (!(binding instanceof TypeBinding)) return IMPOSSIBLE_MATCH;", "+", "+\tTypeBinding type = (TypeBinding) binding;", "+", "+\tswitch (this.classOrInterface) {", "+\t\tcase CLASS_SUFFIX:", "+\t\t\tif (type.isInterface()) return IMPOSSIBLE_MATCH;", "+\t\t\tbreak;", "+\t\tcase INTERFACE_SUFFIX:", "+\t\t\tif (!type.isInterface()) return IMPOSSIBLE_MATCH;", "+\t\t\tbreak;", "+\t\tcase TYPE_SUFFIX : // nothing", "+\t}", "+", "+\t// fully qualified name", "+\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');", "+\treturn matchLevelForType(this.simpleName, this.pkg, enclosingTypeName, type);", "+}", "- */", "-public int matchLevel(Binding binding) {", "-\tif (binding == null) return INACCURATE_MATCH;", "-\tif (!(binding instanceof TypeBinding)) return IMPOSSIBLE_MATCH;", "-", "-\tTypeBinding type = (TypeBinding)binding;", "-", "-\t// class or interface", "-\tswitch (this.classOrInterface) {", "-\t\tcase CLASS_SUFFIX:", "-\t\t\tif (type.isInterface())", "-\t\t\t\treturn IMPOSSIBLE_MATCH;", "-\t\t\tbreak;", "-\t\tcase INTERFACE_SUFFIX:", "-\t\t\tif (!type.isInterface())", "-\t\t\t\treturn IMPOSSIBLE_MATCH;", "-\t\t\tbreak;", "-\t}", "-", "-\t// fully qualified name", "-\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');", "-\treturn this.matchLevelForType(this.simpleName, this.pkg, enclosingTypeName, type);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e999fc2afd0d8d2d1a6aea712af05ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(Binding binding)", "signatureAfterChange": "\r public boolean matches(Binding binding)", "diff": ["+ */\r", "+public boolean matches(Binding binding) {\r", "+\tif (!(binding instanceof TypeBinding)) return false;\r", "+\r", "+\tTypeBinding type = (TypeBinding)binding;\r", "+\r", "+\t// fully qualified name\r", "+\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');\r", "+\tif (!this.matchesType(this.simpleName, this.qualification, enclosingTypeName, type)) {\r", "+\t\treturn false;\r", "+\t}\r", "+\r", "+\t// class or interface\r", "+\tswitch (this.classOrInterface) {\r", "+\t\tcase CLASS_SUFFIX:\r", "+\t\t\tif (type.isInterface())\r", "+\t\t\t\treturn false;\r", "+\t\t\tbreak;\r", "+\t\tcase INTERFACE_SUFFIX:\r", "+\t\t\tif (!type.isInterface())\r", "+\t\t\t\treturn false;\r", "+\t\t\tbreak;\r", "+\t}\r", "+\t\r", "+\treturn true;\r", "+}\r", "- */\r", "-public int matchLevel(Binding binding) {\r", "-\tif (binding == null) return INACCURATE_MATCH;\r", "-\tif (!(binding instanceof TypeBinding)) return IMPOSSIBLE_MATCH;\r", "-\r", "-\tTypeBinding type = (TypeBinding)binding;\r", "-\r", "-\t// class or interface\r", "-\tswitch (this.classOrInterface) {\r", "-\t\tcase CLASS_SUFFIX:\r", "-\t\t\tif (type.isInterface())\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\tbreak;\r", "-\t\tcase INTERFACE_SUFFIX:\r", "-\t\t\tif (!type.isInterface())\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\tbreak;\r", "-\t}\r", "-\r", "-\t// fully qualified name\r", "-\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');\r", "-\treturn this.matchLevelForType(this.simpleName, this.qualification, enclosingTypeName, type);\r", "-}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f0f6109ef863ff912e071d00e15f007", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(Binding binding)", "signatureAfterChange": "\r public boolean matches(Binding binding)", "diff": ["+ */\r", "+public boolean matches(Binding binding) {\r", "+\tif (!(binding instanceof TypeBinding)) return false;\r", "+\r", "+\tTypeBinding type = (TypeBinding)binding;\r", "+\r", "+\t// fully qualified name\r", "+\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');\r", "+\tif (!this.matchesType(this.simpleName, this.qualification, enclosingTypeName, type)) {\r", "+\t\treturn false;\r", "+\t}\r", "+\r", "+\t// class or interface\r", "+\tswitch (this.classOrInterface) {\r", "+\t\tcase CLASS_SUFFIX:\r", "+\t\t\tif (type.isInterface())\r", "+\t\t\t\treturn false;\r", "+\t\t\tbreak;\r", "+\t\tcase INTERFACE_SUFFIX:\r", "+\t\t\tif (!type.isInterface())\r", "+\t\t\t\treturn false;\r", "+\t\t\tbreak;\r", "+\t}\r", "+\t\r", "+\treturn true;\r", "+}\r", "- */\r", "-public int matchLevel(Binding binding) {\r", "-\tif (binding == null) return INACCURATE_MATCH;\r", "-\tif (!(binding instanceof TypeBinding)) return IMPOSSIBLE_MATCH;\r", "-\r", "-\tTypeBinding type = (TypeBinding)binding;\r", "-\r", "-\t// class or interface\r", "-\tswitch (this.classOrInterface) {\r", "-\t\tcase CLASS_SUFFIX:\r", "-\t\t\tif (type.isInterface())\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\tbreak;\r", "-\t\tcase INTERFACE_SUFFIX:\r", "-\t\t\tif (!type.isInterface())\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\tbreak;\r", "-\t}\r", "-\r", "-\t// fully qualified name\r", "-\tchar[] enclosingTypeName = this.enclosingTypeNames == null ? null : CharOperation.concatWith(this.enclosingTypeNames, '.');\r", "-\treturn this.matchLevelForType(this.simpleName, this.qualification, enclosingTypeName, type);\r", "-}\r"]}], "num": 35987}