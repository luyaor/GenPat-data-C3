{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dfd2b87feab17b5ccc5876483b28a841", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9149156d12f097e7b562ebf399542ed9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "efab4b1a6e2a55838a6e3f24bd649c2741fed74a", "commitAfterChange": "031d90cabc1bb0305f45ecbde4233f936523f4a5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  protected void parseTags(boolean hasLineComment)", "signatureAfterChange": "  protected void parseTags(boolean hasLineComment)", "diff": ["-\t\tif (linePtr < 0) {", "-\t\t\tint i = 0;", "-\t\t\twhile (Character.isWhitespace(this.source[i])) {", "-\t\t\t\ti++;", "-\t\t\t}", "-\t\t\tif (getCurrentTokenStartPosition() == i) {", "-\t\t\t\t// the whole line is commented out", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t} else {", "-\t\t\tint i = this.lineEnds[this.linePtr] + 1; ", "-\t\t\twhile (Character.isWhitespace(this.source[i])) {", "-\t\t\t\ti++;", "-\t\t\t}", "-\t\t\tif (getCurrentTokenStartPosition() == i) {", "-\t\t\t\t// the whole line is commented out", "-\t\t\t\treturn;", "-\t\t\t}", "+\t\tint position = 0;", "+\t\tif (linePtr >= 0) {", "+\t\t\tposition = this.lineEnds[this.linePtr] + 1; ", "+\t\t}", "+\t\twhile (Character.isWhitespace(this.source[position])) {", "+\t\t\tposition++;", "+\t\t}", "+\t\tif (getCurrentTokenStartPosition() == position) {", "+\t\t\t// the whole line is commented out", "+\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7ef756255910a4295b2b1edfb0fbe39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "65ed85e50b333a16dfda007fb9cc32acceea0ad7", "commitAfterChange": "7a39ac7b112bcd9ebf4e7db1f1f1ff56c8d905a5", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "  protected void parseTags(boolean hasLineComment)", "signatureAfterChange": "  protected void parseTags(boolean hasLineComment)", "diff": ["-\t\t\tif (currentTokenStart == 0) {", "+\t\t\tint i = 0;", "+\t\t\twhile (Character.isWhitespace(this.source[i])) {", "+\t\t\t\ti++;", "+\t\t\t}", "+\t\t\tif (currentTokenStart == i) {", "-\t\t} else if (currentTokenStart == (lineEnds[linePtr] + 1)) {", "-\t\t\t// the whole line is commented out", "-\t\t\treturn;", "+\t\t} else {", "+\t\t\tint i = this.lineEnds[this.linePtr] + 1; ", "+\t\t\twhile (Character.isWhitespace(this.source[i])) {", "+\t\t\t\ti++;", "+\t\t\t}", "+\t\t\tif (currentTokenStart == i) {", "+\t\t\t\t// the whole line is commented out", "+\t\t\t\treturn;", "+\t\t\t}"]}], "num": 29238}