{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ec81bee358f094d007760efd16a465f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "456b8a248df7bf1ed0bc3074a1c41ed1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "c86c38d672e49d50e598810327b66493258e94dd", "commitAfterChange": "060261358ee4101b16c7399fe1e71ff5bc4ac40a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " MethodBinding computeSubstitutedMethod(MethodBinding method, LookupEnvironment env)", "signatureAfterChange": " MethodBinding computeSubstitutedMethod(MethodBinding method, LookupEnvironment env)", "diff": ["-\tTypeVariableBinding[] vars = this.typeVariables;", "-\tTypeVariableBinding[] vars2 = method.typeVariables;", "-\tif (vars.length != vars2.length)", "+\tint length = this.typeVariables.length;", "+\tTypeVariableBinding[] vars = method.typeVariables;", "+\tif (length != vars.length)", "-\tfor (int v = vars.length; --v >= 0;)", "-\t\tif (!vars[v].isInterchangeableWith(env, vars2[v]))", "-\t\t\treturn null;", "-\treturn env.createParameterizedGenericMethod(method, vars);", "+\tParameterizedGenericMethodBinding substitute =", "+\t\tenv.createParameterizedGenericMethod(method, this.typeVariables);", "+\tfor (int i = 0; i < length; i++)", "+\t\tif (!this.typeVariables[i].isInterchangeableWith(vars[i], substitute))", "+\t\t\treturn null;", "+\treturn substitute;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6654c6c89861571587fe00fb6f22944a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "458d6ecb95c70f1df88b46b781028646894448a8", "commitAfterChange": "eae1dc9444e6dfc78448846e89895dbf064cc65b", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic MethodBinding getExactConstructor(TypeBinding receiverType, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getExactConstructor(TypeBinding receiverType, InvocationSite invocationSite)", "diff": ["-\t\tfinal TypeVariableBinding[] typeVariables = exactConstructor.typeVariables();", "-\t\tif (typeVariables != Binding.NO_TYPE_VARIABLES) {", "-\t\t\tif (typeVariables.length != genericTypeArguments.length)", "-\t\t\t\treturn null;", "-\t\t\texactConstructor = environment().createParameterizedGenericMethod(exactConstructor, genericTypeArguments);", "+\t\tif (exactConstructor != null) {", "+\t\t\tfinal TypeVariableBinding[] typeVariables = exactConstructor.typeVariables();", "+\t\t\tif (typeVariables != Binding.NO_TYPE_VARIABLES) {", "+\t\t\t\tif (typeVariables.length != genericTypeArguments.length)", "+\t\t\t\t\treturn null;", "+\t\t\t\texactConstructor = environment().createParameterizedGenericMethod(exactConstructor, genericTypeArguments);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7bad55ab0cf538568c6037eee019469c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "a337a67d07e229d2e8a590edfef8bdffb92e4516", "commitAfterChange": "f0baa4687c4b232261eab4264c1bc16ee1b49e9d", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 54, "signatureBeforeChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "signatureAfterChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "diff": ["+\t\tif (this.currentInvocation instanceof ReferenceExpression)", "+\t\t\treturn; // no inner expressions", "-\t\t\tif (inner instanceof Invocation) {", "+\t\t\tif (inner instanceof ReferenceExpression) {", "+\t\t\t\tReferenceExpression referenceExpression = (ReferenceExpression) inner;", "+\t\t\t\tMethodBinding compileTimeDecl = referenceExpression.prepareForInferenceResult(this.scope);", "+\t\t\t\tif\t(compileTimeDecl != null) {", "+\t  \t\t\t\tTypeVariableBinding[] variables = compileTimeDecl.typeVariables;", "+\t\t\t\t\tif (variables != Binding.NO_TYPE_VARIABLES) {", "+\t\t\t\t\t\tTypeBinding[] arguments = getSolutions(variables, (InvocationSite) inner, bounds);", "+\t\t\t\t\t\treferenceExpression.binding = this.environment.createParameterizedGenericMethod(compileTimeDecl, arguments);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} else if (inner instanceof Invocation) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0f73011affb54be773b516e323dfd32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SyntheticFactoryMethodBinding.java", "commitBeforeChange": "ec64763fa4e57b4943311ee555e5ddce81854cf2", "commitAfterChange": "b0ee678b65f48d1cfab35972dd53d6bd85389446", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic ParameterizedMethodBinding applyTypeArgumentsOnConstructor(TypeBinding[] typeArguments)", "signatureAfterChange": " \tpublic ParameterizedMethodBinding applyTypeArgumentsOnConstructor(TypeBinding[] typeArguments, TypeBinding[] constructorTypeArguments)", "diff": ["-\t/** Apply the given type arguments on the (declaring class of the) actual constructor being represented by this factory method. */", "-\tpublic ParameterizedMethodBinding applyTypeArgumentsOnConstructor(TypeBinding[] typeArguments) {", "+\t*/", "+\tpublic ParameterizedMethodBinding applyTypeArgumentsOnConstructor(TypeBinding[] typeArguments, TypeBinding[] constructorTypeArguments) {", "-\t\t\t\treturn (ParameterizedMethodBinding) parameterizedMethod;", "+\t\t\t\treturn constructorTypeArguments.length > 0 ? this.environment.createParameterizedGenericMethod(parameterizedMethod, constructorTypeArguments) :", "+\t\t\t\t\t\t\t\t\t\t\t\t\t         (ParameterizedMethodBinding) parameterizedMethod;"]}], "num": 474}