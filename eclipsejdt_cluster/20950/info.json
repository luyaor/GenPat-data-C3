{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d4fb54169aefb6017c61d4fe8c4dc723", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0aa71d631236c45102a547b3fb854eba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "80a779f7e5954c8d87d2d9d39f82f45cac16ecf1", "commitAfterChange": "e6d1c8eac73b65997182b9feaba7e190099afd1a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  public boolean sIsMoreSpecific(TypeBinding s, TypeBinding t)", "signatureAfterChange": "  public boolean sIsMoreSpecific(TypeBinding s, TypeBinding t)", "diff": ["-\tTypeBinding expressionType = this.resolvedType;", "-\tif (expressionType == null || !expressionType.isValidBinding()) // Shouldn't get here, just to play it safe", "-\t\treturn false; // trigger ambiguity.", "-\tif (s.isBaseType() && t.isBaseType())", "-\t\treturn s.isCompatibleWith(t);", "-\treturn s.findSuperTypeOriginatingFrom(t) != null;", "+\treturn s.isCompatibleWith(t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90f40dce1c49b436f8650fbe517c361c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "52aadf84ad4c79f64e59f07a05239268e15539c0", "commitAfterChange": "edc37e94c3a8ff30574beb9cdf0696d92f661cd3", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "   protected void buildStructure(OpenableElementInfo info, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "   protected void buildStructure(OpenableElementInfo info, IProgressMonitor monitor) throws JavaModelException", "diff": ["-", "-\tIProblemRequestor problemRequestor = this.getProblemRequestor();", "-\tif (problemRequestor != null && problemRequestor.isActive()){", "-\t\tproblemRequestor.beginReporting();", "-\t\tCompilationUnitProblemFinder.process(this, problemRequestor, monitor); // TODO: is the JavaModel lock taken here ? Can run client code", "-\t\tproblemRequestor.endReporting();", "-\t}"]}], "num": 20950}