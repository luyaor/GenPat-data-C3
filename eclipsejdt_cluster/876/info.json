{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d63a7ae6b1c9a10cf18653238d299e43", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c655622cf788d0f7e03d345b4b6ed58d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "e33ceacdb6e9b17f29de3a23e3df28f1c6bec162", "commitAfterChange": "81fe472327b51c234112233c89df88e95ab01675", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "diff": ["+\t\tIPath potentialNestedOutput = null;", "+\t\tint sourceEntryCount = 0;", "+\t\t\t\t\tsourceEntryCount++;", "-\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestOutputInOutput\", customOutput.toString(), outputLocations[index].toString())); //$NON-NLS-1$", "+\t\t\t\t\t\t\tif (index == 0) {", "+\t\t\t\t\t\t\t\t// custom output is nested in project's output: need to check if all source entries have a custom", "+\t\t\t\t\t\t\t\t// output before complaining", "+\t\t\t\t\t\t\t\tif (potentialNestedOutput == null) potentialNestedOutput = customOutput;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestOutputInOutput\", customOutput.toString(), outputLocations[index].toString())); //$NON-NLS-1$", "+\t\t\t\t\t\t\t}", "+\t\t// allow custom output nesting in project's output if all source entries have a custom output", "+\t\tif (potentialNestedOutput != null && sourceEntryCount > outputCount-1) {", "+\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestOutputInOutput\", potentialNestedOutput.toString(), outputLocations[0].toString())); //$NON-NLS-1$", "+\t\t}", "-\t\t\t\tif (!allowNestingInOutputLocations[index]){", "-\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestEntryInOutput\", entryPath.toString(), outputLocations[index].toString())); //$NON-NLS-1$", "+\t\t\t\tif (!allowNestingInOutputLocations[index]) {", "+\t\t\t\t\t// allow nesting in project's output if all source entries have a custom output", "+\t\t\t\t\tif (index != 0 || sourceEntryCount > outputCount - 1) {", "+\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestEntryInOutput\", entryPath.toString(), outputLocations[index].toString())); //$NON-NLS-1$", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcf4ec78dc8162753abcfdf194f42268", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "9969e29f774930c96f440be8a722cc700768757e", "commitAfterChange": "b5db65bfc72bbc853a6a1cc971b563564ea182d8", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "diff": ["-\t\tIPath potentialNestedOutput = null;", "+\t\tIPath potentialNestedOutput = null; // for error reporting purpose", "-\t\tif (potentialNestedOutput != null && sourceEntryCount > outputCount-1) {", "+\t\tif (sourceEntryCount <= outputCount-1) {", "+\t\t    allowNestingInOutputLocations[0] = true;", "+\t\t} else if (potentialNestedOutput != null) {", "-\t\t", "+", "-\t\t\tboolean epStartsWithProject = entryPath.segment(0).toString().equals(projectName);", "-\t\t\tString entryPathMsg = epStartsWithProject ? entryPath.removeFirstSegments(1).toString() : entryPath.makeRelative().toString();", "+\t\t\tboolean isProjectRelative = entryPath.segment(0).toString().equals(projectName);", "+\t\t\tString entryPathMsg = isProjectRelative ? entryPath.removeFirstSegments(1).toString() : entryPath.makeRelative().toString();", "-\t\t\tint index;", "-\t\t\tif ((index = Util.indexOfEnclosingPath(entryPath, outputLocations, outputCount)) != -1) {", "-\t\t\t\tif (!allowNestingInOutputLocations[index]) {", "-\t\t\t\t\t// allow nesting in project's output if all source entries have a custom output", "-\t\t\t\t\tif (index != 0 || sourceEntryCount > outputCount - 1) {", "-\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestEntryInOutput\", entryPath.makeRelative().toString(), outputLocations[index].makeRelative().toString())); //$NON-NLS-1$", "-\t\t\t\t\t}", "+\t\t    for (int j = 0; j < outputCount; j++){", "+\t\t        if (allowNestingInOutputLocations[j]) continue;", "+\t\t        IPath currentOutput = outputLocations[j];", "+\t\t\t\tif (currentOutput.isPrefixOf(entryPath)) {", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_CLASSPATH, Util.bind(\"classpath.cannotNestEntryInOutput\", entryPath.makeRelative().toString(), currentOutput.makeRelative().toString())); //$NON-NLS-1$", "-\t\t\t}", "+\t\t    }\t\t\t", "-\t\t\tboolean epStartsWithProject = entryPath.segment(0).toString().equals(projectName);", "-\t\t\tString entryPathMsg = epStartsWithProject ? entryPath.removeFirstSegments(1).toString() : entryPath.makeRelative().toString();", "+\t\t\tboolean isProjectRelative = entryPath.segment(0).toString().equals(projectName);", "+\t\t\tString entryPathMsg = isProjectRelative ? entryPath.removeFirstSegments(1).toString() : entryPath.makeRelative().toString();"]}], "num": 876}