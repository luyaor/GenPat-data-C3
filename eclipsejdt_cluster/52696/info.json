{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "89e2db8dcb3f39bd7efa6300cb6c9cf7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02fb0accf1c434d7a1a5352d8ba3b1e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tint matchMode,  \tboolean isCaseSensitive, \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType)", "signatureAfterChange": " public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType, \tint matchRule)", "diff": ["-", "-\tint matchMode, ", "-\tboolean isCaseSensitive,", "-\tIType declaringType) {", "+\tIType declaringType,", "+\tint matchRule) {", "-\tsuper(METHOD_PATTERN, matchMode, isCaseSensitive);", "+\tsuper(METHOD_PATTERN, matchRule);", "+\tboolean isCaseSensitive = isCaseSensitive();", "-\t\tthis.parameterQualifications = new char[parameterSimpleNames.length][];", "-\t\tthis.parameterSimpleNames = new char[parameterSimpleNames.length][];", "-\t\tfor (int i = 0, max = parameterSimpleNames.length; i < max; i++) {", "+\t\tthis.parameterCount = parameterSimpleNames.length;", "+\t\tthis.parameterQualifications = new char[this.parameterCount][];", "+\t\tthis.parameterSimpleNames = new char[this.parameterCount][];", "+\t\tfor (int i = 0; i < this.parameterCount; i++) {", "+\t} else {", "+\t\tthis.parameterCount = -1;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8c2dbdc8ebabdf7a10a5f4e6139576c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorPattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public ConstructorPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] declaringSimpleName, \tint matchMode, \tboolean isCaseSensitive, \tchar[] declaringQualification, \tchar[][] parameterQualifications, \tchar[][] parameterSimpleNames, \tIType declaringType)", "signatureAfterChange": " public ConstructorPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] declaringSimpleName, \tchar[] declaringQualification, \tchar[][] parameterQualifications, \tchar[][] parameterSimpleNames, \tint matchRule)", "diff": ["-", "-\tint matchMode,", "-\tboolean isCaseSensitive,", "-\tIType declaringType) {", "+\tint matchRule) {", "-\tsuper(CONSTRUCTOR_PATTERN, matchMode, isCaseSensitive);", "+\tsuper(CONSTRUCTOR_PATTERN, matchRule);", "+\tboolean isCaseSensitive = isCaseSensitive();", "-\t\tthis.parameterQualifications = new char[parameterSimpleNames.length][];", "-\t\tthis.parameterSimpleNames = new char[parameterSimpleNames.length][];", "-\t\tfor (int i = 0, max = parameterSimpleNames.length; i < max; i++) {", "+\t\tthis.parameterCount = parameterSimpleNames.length;", "+\t\tthis.parameterQualifications = new char[this.parameterCount][];", "+\t\tthis.parameterSimpleNames = new char[this.parameterCount][];", "+\t\tfor (int i = 0; i < this.parameterCount; i++) {", "+\t} else {", "+\t\tthis.parameterCount = -1;", "-\tthis.declaringType = declaringType;"]}], "num": 52696}