{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8d213364223ebabaa3706349ade13b1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "276dac3a539160bbc4693c85902e2daf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "6781b5445d9813f939573ded9d37ee82c9dbbd15", "commitAfterChange": "6989e5bb4ed8f3be37ea69298930332629e9b475", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\tTypeBinding expectedReceiverType = this.actualReceiverType.erasure().isCompatibleWith(this.binding.declaringClass.erasure())", "-\t\t\t\t? this.actualReceiverType", "-\t\t\t\t: this.binding.declaringClass;", "-\t\t\treceiver.computeConversion(scope, expectedReceiverType, actualReceiverType);", "-\t\t\tif (expectedReceiverType != this.actualReceiverType) this.actualReceiverType = expectedReceiverType;", "+\t\t\tTypeBinding receiverErasure = this.actualReceiverType.erasure();", "+\t\t\tif (receiverErasure instanceof ReferenceBinding) {", "+\t\t\t\tReferenceBinding match = ((ReferenceBinding)receiverErasure).findSuperTypeErasingTo((ReferenceBinding)this.binding.declaringClass.erasure());", "+\t\t\t\tif (match == null) {", "+\t\t\t\t\tthis.actualReceiverType = this.binding.declaringClass; // handle indirect inheritance thru variable secondary bound", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treceiver.computeConversion(scope, this.actualReceiverType, this.actualReceiverType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8b2638011d19da88646b48a0791d2a44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "c5f04dedcf71d7916ac9796a0679367263a828a6", "commitAfterChange": "4d0380dc7539f1f7ccfcfa17696618c7e27e0f4d", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\treceiver.computeConversion(scope, receiverType, receiverType); // compute generic cast if necessary", "+\t\t// compute generic cast if necessary", "+\t\tTypeBinding expectedReceiverType = receiverType.erasure().isCompatibleWith(binding.declaringClass.erasure())", "+\t\t\t? receiverType", "+\t\t\t: binding.declaringClass;", "+\t\treceiver.computeConversion(scope, expectedReceiverType, receiverType);", "+\t\tif (expectedReceiverType != this.qualifyingType) this.qualifyingType = expectedReceiverType;"]}], "num": 61046}