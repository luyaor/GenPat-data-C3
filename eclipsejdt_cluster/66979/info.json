{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fb41ffc7688d244dc46183d636128bb3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67e34f6d3e79f3bf8a6afaa1593cc593", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "45ea0c0963e46daaae31261dbb16943dd8fe31f9", "commitAfterChange": "2eac8e5fe7a3ec66583085fd9b264a552c7df520", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tif (!isConsistent()) { // TODO: (jerome) this code isn't synchronized with regular opening of a working copy", "+\tJavaModelManager manager = JavaModelManager.getJavaModelManager();", "+\tsynchronized(manager){", "+\t\tif (isConsistent()) return;", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a7e61e6756c7fd3bb2730fc90c512a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "de8634c6596eba9d498f21b3f06a4d952c468878", "commitAfterChange": "ed3ff9a36eb2db48659e462eacb164d15ad7a872", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": " \tIType findType(String fullyQualifiedName, NameLookup lookup, boolean considerSecondaryTypes, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["-\t\tIType type = lookup.findType(", "+\t\tNameLookup.Answer answer = lookup.findType(", "+\t\t\tfalse/*don't check restrictions*/,", "-\t\tif (type == null) {", "+\t\tif (answer == null) {", "-\t\t\ttype = findType(fullyQualifiedName.substring(0, lastDot), lookup, considerSecondaryTypes, progressMonitor);", "+\t\t\tIType type = findType(fullyQualifiedName.substring(0, lastDot), lookup, considerSecondaryTypes, progressMonitor);", "+\t\t\treturn type;", "-\t\treturn type;", "+\t\treturn answer.type;"]}], "num": 66979}