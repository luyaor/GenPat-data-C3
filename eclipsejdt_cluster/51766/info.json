{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3045c742c84e56ce67d738294823707e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c8a4fb6915ecfc43e5308338a123fd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "62b97f10b8bb4123dfea4bccabc125ecea6ba019", "commitAfterChange": "8e77108c42837d2f8e34e3f8fd4f8eea8e97b2f7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void checkAgainstNullAnnotation(BlockScope scope, int nullStatus)", "signatureAfterChange": " void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, int nullStatus)", "diff": ["-void checkAgainstNullAnnotation(BlockScope scope, int nullStatus) {", "+void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, int nullStatus) {", "-\t\t\tchar[][] annotationName = scope.environment().getNonNullAnnotationName();", "-\t\t\tscope.problemReporter().nullityMismatch(this.expression, methodBinding.returnType, nullStatus, annotationName);", "+\t\t\tflowContext.recordNullityMismatch(scope, this.expression, nullStatus, methodBinding.returnType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d863c46778cad50b00ff69f564a48ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "79774393baaba7f9e5f3461242a5b822bf662647", "commitAfterChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tvoid checkAgainstNullAnnotation(FlowContext flowContext, Expression expression, int nullStatus)", "signatureAfterChange": " \tvoid checkAgainstNullAnnotation(FlowContext flowContext, Expression expression, FlowInfo flowInfo, int nullStatus)", "diff": ["-\tvoid checkAgainstNullAnnotation(FlowContext flowContext, Expression expression, int nullStatus) {", "+\tvoid checkAgainstNullAnnotation(FlowContext flowContext, Expression expression, FlowInfo flowInfo, int nullStatus) {", "-\t\t\t\tflowContext.recordNullityMismatch(this.scope, expression, expression.resolvedType, this.descriptor.returnType, nullStatus);", "+\t\t\t\tflowContext.recordNullityMismatch(this.scope, expression, expression.resolvedType, this.descriptor.returnType, flowInfo, nullStatus);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a9bb18ffefd6916ba643461ebe33e51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "79774393baaba7f9e5f3461242a5b822bf662647", "commitAfterChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void internalAnalyseOneArgument18(BlockScope currentScope, FlowContext flowContext, TypeBinding expectedType, \t\tExpression argument, int nullStatus, Boolean expectedNonNullness, TypeBinding originalExpected)", "signatureAfterChange": " void internalAnalyseOneArgument18(BlockScope currentScope, FlowContext flowContext, TypeBinding expectedType, \t\tExpression argument, FlowInfo flowInfo, int nullStatus, Boolean expectedNonNullness, TypeBinding originalExpected)", "diff": ["-\t\tExpression argument, int nullStatus, Boolean expectedNonNullness, TypeBinding originalExpected) ", "+\t\tExpression argument, FlowInfo flowInfo, int nullStatus, Boolean expectedNonNullness, TypeBinding originalExpected) ", "-\t\tflowContext.recordNullityMismatch(currentScope, argument, argument.resolvedType, expectedType, nullStatus);", "+\t\tflowContext.recordNullityMismatch(currentScope, argument, argument.resolvedType, expectedType, flowInfo, nullStatus);"]}], "num": 51766}