{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2058ecb76e1444e4da6a4d1c4befdacb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "672d73234b7f5f4dcf41e2c622540458", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 60, "signatureBeforeChange": "  boolean hasNonNullDefault()", "signatureAfterChange": "  boolean hasNonNullDefaultFor(int location, boolean useTypeAnnotations)", "diff": ["-boolean hasNonNullDefault() {", "+boolean hasNonNullDefaultFor(int location, boolean useTypeAnnotations) {", "+\t// 1.8:", "+\tif (useTypeAnnotations) {", "+\t\tif (this.scope == null) {", "+\t\t\treturn (this.defaultNullness & location) != 0;", "+\t\t}", "+\t\treturn this.scope.hasDefaultNullnessFor(location);", "+\t}", "+", "+\t\t\t\t\tif ((foundDefaultNullness & NullnessDefaultMASK) > NULL_UNSPECIFIED_BY_DEFAULT) {", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db2bff97cf715dc6d1093bc6bc9a1e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "signatureAfterChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "diff": ["-\t\t\tboolean needToApplyNonNullDefault = currentMethod.hasNonNullDefault();", "+\t\t\tlong sourceLevel = scope.compilerOptions().sourceLevel;", "+\t\t\tboolean needToApplyNonNullDefault = currentMethod.hasNonNullDefaultFor(Binding.DefaultLocationParameter|Binding.DefaultLocationReturnType,", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tsourceLevel >= ClassFileConstants.JDK1_8);", "-\t\t\t\tlong sourceLevel = scope.compilerOptions().sourceLevel;"]}], "num": 6562}