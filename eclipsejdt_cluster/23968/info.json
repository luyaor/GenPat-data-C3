{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c97df4f4356973d56c5cbf8ea4ff8133", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33cda18edfeccb33349dc14f083488ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "9d4f7131389390a16a995494da191d8ab6c07c5a", "commitAfterChange": "aa852841b1dd73414418bf5fc5420a74b80d0cd9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void endVisit(MarkerAnnotation annotation, BlockScope scope)", "signatureAfterChange": "  \tpublic void endVisit(MarkerAnnotation annotation, BlockScope scope)", "diff": ["-}", "-public void endVisit(MarkerAnnotation annotation, BlockScope scope) {", "-\tASTNode.resolveAnnotations(scope, new Annotation[] { annotation}, this.currentBinding);", "-\tcollector.add(annotation.getCompilerAnnotation());", "-}", "+", "+\tpublic void endVisit(MarkerAnnotation annotation, BlockScope scope) {", "+\t\tASTNode.resolveAnnotations(scope, new Annotation[] { annotation }, this.currentBinding);", "+\t\tAnnotationBinding binding = annotation.getCompilerAnnotation();", "+\t\tTypeElement anno = (TypeElement)ElementFactory.newElement(binding.getAnnotationType()); ", "+\t\tElement element = ElementFactory.newElement(this.currentBinding);", "+\t\t_annoToElement.put(anno, element);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93d28358c2165f7adbc7095b47a68f77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/AnnotationDiscoveryVisitor.java", "commitBeforeChange": "70293ebfba1aa3d3dce9544e23e757d77487db91", "commitAfterChange": "2e4e63b9ed8aad7925bed1f9109d7e2d1a341f45", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "signatureAfterChange": "  \tprivate void resolveAnnotations( \t\t\tBlockScope scope, \t\t\tAnnotation[] annotations, \t\t\tBinding currentBinding)", "diff": ["-\t\tboolean resolved = false;", "+\t\tASTNode.resolveAnnotations(scope, annotations, currentBinding, true);", "+\t\tElement element = null;", "+\t\t", "-\t\t\tif (binding == null && !resolved) {", "-\t\t\t\tASTNode.resolveAnnotations(scope, annotations, currentBinding, true);", "-\t\t\t\tbinding = annotation.getCompilerAnnotation();", "-\t\t\t\tresolved = true;", "-\t\t\t}", "-\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(binding.getAnnotationType()); ", "-\t\t\t\tElement element = _factory.newElement(currentBinding);", "+\t\t\t\tTypeElement anno = (TypeElement)_factory.newElement(binding.getAnnotationType());", "+\t\t\t\tif (element == null) {", "+\t\t\t\t\telement = _factory.newElement(currentBinding);", "+\t\t\t\t}"]}], "num": 23968}