{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d43f1046cabf0c6bc994c44f99e1c390", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ecfdcd504b0a13f97fdde770f0fd12e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "16dca0cdbe17832dfb29f0072e09feca8f8a7af6", "commitAfterChange": "eb9694e0519c131ba8708de11ae2ad1c0157552f", "methodNumberBeforeChange": 736, "methodNumberAfterChange": 736, "signatureBeforeChange": " public void test0730()", "signatureAfterChange": " public void test0730()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"3. WARNING in X.java (at line 14)\\n\" + ", "-\t\t\"\t((SubInterface) this.x).getString();\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type safety: The cast from X.SuperInterface<capture-of ? extends X.SuperInterface> to X.SubInterface is actually checking against the erased type X.SubInterface\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ab555a9d267f5e59e7300ba8784b30e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "c80004d70ebe07235571e96c3ea452dbc7ba5394", "commitAfterChange": "70dd884582455dcf661aaade70c8faff4213db3a", "methodNumberBeforeChange": 256, "methodNumberAfterChange": 256, "signatureBeforeChange": " \tpublic void test0252()", "signatureAfterChange": " \tpublic void test0252()", "diff": ["+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\telement = (Set<X>) iter.next();\\n\" + ", "+\t\t\t\"\t          ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The cast from X to Set<X> is actually checking against the erased type Set\\n\" + "]}], "num": 67688}