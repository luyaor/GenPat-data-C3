{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7a1ebb55b068264339cfcdee27c6dfa", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d512980327514dd0ab6c661d81a8182c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void addRequiredProject(IPath projectPath, IPath requiredProjectPath, IPath[] inclusionPatterns, IPath[] exclusionPatterns, boolean isExported) throws JavaModelException", "signatureAfterChange": " \tpublic void addRequiredProject(IPath projectPath, IPath requiredProjectPath, IPath[] accessibleFiles, IPath[] nonAccessibleFiles, boolean isExported) throws JavaModelException", "diff": ["-\tpublic void addRequiredProject(IPath projectPath, IPath requiredProjectPath, IPath[] inclusionPatterns, IPath[] exclusionPatterns, boolean isExported) throws JavaModelException {", "+\tpublic void addRequiredProject(IPath projectPath, IPath requiredProjectPath, IPath[] accessibleFiles, IPath[] nonAccessibleFiles, boolean isExported) throws JavaModelException {", "-\t\taddEntry(projectPath, JavaCore.newProjectEntry(requiredProjectPath, inclusionPatterns, exclusionPatterns, true, new IClasspathAttribute[0], isExported));", "+\t\tIAccessRule[] accessRules = ClasspathEntry.getAccessRules(accessibleFiles, nonAccessibleFiles);", "+\t\taddEntry(projectPath, JavaCore.newProjectEntry(requiredProjectPath, accessRules, true, new IClasspathAttribute[0], isExported));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4b9f921edfffae00f7d6a8f010b1c02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "72dcd4b854d317f3c3f9226ee2c9a6583e0ff5db", "commitAfterChange": "a2380c5dc7487191ba2f073fdb6868b729cb0c57", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \t@SuppressWarnings(\"unchecked\" \tprivate <A extends Annotation> A[] getAnnotations(AnnotationBinding[] annoInstances, Class<A> annotationClass, boolean justTheFirst)", "signatureAfterChange": "  \t@SuppressWarnings(\"unchecked\" \tprivate <A extends Annotation> A[] getAnnotations(AnnotationBinding[] annoInstances, Class<A> annotationClass, boolean justTheFirst)", "diff": ["-\t\treturn list.size() > 0 ? (A[]) list.toArray(new Annotation[list.size()]) :  null;", "+\t\tA [] result = (A[]) Array.newInstance(annotationClass, list.size());", "+\t\treturn list.size() > 0 ? (A[]) list.toArray(result) :  null;"]}], "num": 46879}