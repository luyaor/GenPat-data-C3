{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5c9a75a9f39ea7d50627081374848f3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17cfdd77c034b43cfeb1c4561c699c7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "20e49d7db3f80bc6329b06987b79f5d477fadae5", "commitAfterChange": "22e8d645d870d81df6b4c6470c338d48fdb84e7f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate synchronized void computeAllRootPaths(IType type)", "signatureAfterChange": " \t \tprivate synchronized void computeAllRootPaths(IType type)", "diff": ["+\t\tString sourceLevel = null;", "+\t\tString complianceLevel = null;", "-\t\t\tIJavaProject project = jarPackageFragmentRoot.getJavaProject();", "-\t\t\tString sourceLevel = null;", "-\t\t\tString complianceLevel = null;", "+\t\t\t\t\t\t\t\t\tIJavaProject project = root.getJavaProject();", "-\t\t\t\t\t\t\t\tfirstLevelPackageNames.add(member.getName());", "+\t\t\t\t\t\t\t\tif (sourceLevel == null) {", "+\t\t\t\t\t\t\t\t\tIJavaProject project = root.getJavaProject();", "+\t\t\t\t\t\t\t\t\tsourceLevel = project.getOption(JavaCore.COMPILER_SOURCE, true);", "+\t\t\t\t\t\t\t\t\tcomplianceLevel = project.getOption(JavaCore.COMPILER_COMPLIANCE, true);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tString firstLevelPackageName = member.getName();", "+\t\t\t\t\t\t\t\tIStatus status = JavaConventions.validatePackageName(firstLevelPackageName, sourceLevel, complianceLevel);", "+\t\t\t\t\t\t\t\tif (status.isOK() || status.getSeverity() == IStatus.WARNING) {", "+\t\t\t\t\t\t\t\t\tfirstLevelPackageNames.add(firstLevelPackageName);", "+\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4471fc1fa57e0b68ea09e6e48643ee62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredMethod.java", "commitBeforeChange": "1f258635fb49ca32f9def120a3d2f7561eca1435", "commitAfterChange": "f3cbbf9c2974017737d02d4ae4c1412f1a96ce0d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public void updateFromParserState()", "signatureAfterChange": " public void updateFromParserState()", "diff": ["+\t\t\t\tMemberValuePair[] memberValuePairs = null;", "+\t\t\t\t\tSystem.arraycopy(parser.astStack, argStart, memberValuePairs = new MemberValuePair[argLength], 0, argLength);", "+\t\t\t\t", "+\t\t\t\tif(memberValuePairs != null) {", "+\t\t\t\t\tSystem.arraycopy(memberValuePairs, 0, parser.astStack, parser.astPtr + 1, memberValuePairs.length);", "+\t\t\t\t\tparser.astPtr += memberValuePairs.length;", "+\t\t\t\t\tparser.astLengthStack[++parser.astLengthPtr] = memberValuePairs.length;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63b153109ce3e57360d807bb0473c301", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "40ad9904e939ba54abece52421044021edd6e1c0", "commitAfterChange": "8d45cb26fc5ad244f93e8632d761d46ad4a120cf", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tFlowInfo preInitInfo = null;", "+\tboolean shouldAnalyseResource = this.binding != null ", "+\t\t\t&& flowInfo.reachMode() == FlowInfo.REACHABLE ", "+\t\t\t&& FakedTrackingVariable.isAnyCloseable(this.initialization.resolvedType);", "+\tif (shouldAnalyseResource) {", "+\t\tpreInitInfo = flowInfo.unconditionalCopy();", "+\t\t// analysis of resource leaks needs additional context while analyzing the RHS:", "+\t\tFakedTrackingVariable.preConnectTrackerAcrossAssignment(this, this.binding, this.initialization);", "+\t}", "+", "-\tFakedTrackingVariable.handleResourceAssignment(flowInfo, this, this.initialization, this.binding, null);", "+", "+\tif (shouldAnalyseResource)", "+\t\tFakedTrackingVariable.handleResourceAssignment(currentScope, preInitInfo, flowInfo, this, this.initialization, this.binding);", "+\telse", "+\t\tFakedTrackingVariable.cleanUpAfterAssignment(currentScope, Binding.LOCAL, this.initialization);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fba0b7c524544aaf8d82b3419b78d629", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "5f7b1ccfabc400ea9e65986d696417445a37876d", "commitAfterChange": "d3d3fd84014a6dcb70309f0821240a82ccf93b29", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tprotected CompilationUnit verifyComments(String fileName, char[] source, Map options)", "signatureAfterChange": "  \tprotected CompilationUnit verifyComments(String fileName, char[] source, Map options)", "diff": ["+\t\tString sourceLevel = null;", "+\t\tString complianceLevel = null;", "+\t\t\t\tcomplianceLevel = currentProject.getOption(JavaCore.COMPILER_COMPLIANCE, true);", "+\t\t\t\tsourceLevel = currentProject.getOption(JavaCore.COMPILER_SOURCE, true);", "+\t\t\t\tcurrentProject.setOption(JavaCore.COMPILER_COMPLIANCE, JavaCore.VERSION_1_5);", "+\t\tif (sourceLevel != null) {", "+\t\t\tcurrentProject.setOption(JavaCore.COMPILER_COMPLIANCE, complianceLevel);", "+\t\t\tcurrentProject.setOption(JavaCore.COMPILER_SOURCE, sourceLevel);", "+\t\t}"]}], "num": 41656}