{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87a88e3c952c177cf963ba3acaba7aee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "000c6989f5afb071527deb57a665f947", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "83e7ec555369f29d4b78a3a829caf1776dce39db", "commitAfterChange": "e965722f47023ae407b487744865b93f56cfe7d1", "methodNumberBeforeChange": 147, "methodNumberAfterChange": 147, "signatureBeforeChange": " protected void consumeEnterVariable()", "signatureAfterChange": " protected void consumeEnterVariable()", "diff": ["-\t\t\t\tdeclaration.bits |= ASTNode.HasTypeAnnotations;", "-\t\t\t\tdeclaration.bits |= ASTNode.HasTypeAnnotations;", "-\t\t\tdeclaration.bits |= ASTNode.HasTypeAnnotations;", "-\t\t\tdeclaration.bits |= (type.bits & ASTNode.HasTypeAnnotations);", "+//\t\t\tdeclaration.bits |= (type.bits & ASTNode.HasTypeAnnotations);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "026b8facde8b59485b38be4d7f49ba4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "faf6597aa00a794b3bf608aa263d02964fb5a0f9", "commitAfterChange": "26e210811de2fca857d5561ae26405b72dccc0f5", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected Map getCompilerOptions()", "signatureAfterChange": " \tprotected Map getCompilerOptions()", "diff": ["-}", "-protected Map getCompilerOptions() {", "-\t\tMap defaultOptions = new CompilerOptions().getMap();", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_LocalVariableAttribute,", "-\t\t\tCompilerOptions.GENERATE);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportUnusedPrivateMember, ", "-\t\t\tCompilerOptions.WARNING);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportLocalVariableHiding,", "-\t\t\tCompilerOptions.WARNING);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportFieldHiding,", "-\t\t\tCompilerOptions.WARNING);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment,", "-\t\t\tCompilerOptions.WARNING);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_ReportSyntheticAccessEmulation,", "-\t\t\tCompilerOptions.WARNING);", "-\t\tdefaultOptions.put(", "-\t\t\tCompilerOptions.OPTION_PreserveUnusedLocal, ", "-\t\t\tCompilerOptions.PRESERVE);", "-", "-\t\tif (false) { // check that all tests are 1.3 & 1.4 compatible by default (compliance tests must specify which version to use)", "-\t\t\tdefaultOptions.put(", "-\t\t\t\tCompilerOptions.OPTION_Compliance, ", "-\t\t\t\tCompilerOptions.VERSION_1_3);", "-\t\t\tdefaultOptions.put(", "-\t\t\t\tCompilerOptions.OPTION_Source, ", "-\t\t\t\tCompilerOptions.VERSION_1_3);", "-\t\t\tdefaultOptions.put(", "-\t\t\t\tCompilerOptions.OPTION_TargetPlatform, ", "-\t\t\t\tCompilerOptions.VERSION_1_1);", "+\t}", "+\tprotected Map getCompilerOptions() {", "+\t\tMap defaultOptions = super.getCompilerOptions();", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_LocalVariableAttribute, CompilerOptions.GENERATE);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.WARNING);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportLocalVariableHiding, CompilerOptions.WARNING);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportFieldHiding, CompilerOptions.WARNING);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportPossibleAccidentalBooleanAssignment, CompilerOptions.WARNING);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, CompilerOptions.WARNING);", "+\t\tdefaultOptions.put(CompilerOptions.OPTION_PreserveUnusedLocal, CompilerOptions.PRESERVE);", "-}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5023889cfedbe4c84e47cc0897ae69b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaCorePreferenceInitializer.java", "commitBeforeChange": "540532d90ea319b134aad3a0154f549c66728687", "commitAfterChange": "6a0eebe34bd6b3f3c957d0d1c92bc68d99fa8f40", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic void initializeDefaultPreferences()", "signatureAfterChange": " \tpublic void initializeDefaultPreferences()", "diff": ["-\t\t", "-\t\t// ImportRewrite settings", "-\t\tdefaultOptionsMap.put(JavaCore.IMPORTREWRITE_IMPORT_ORDER, \"java;javax;org;com\"); //$NON-NLS-1$", "-\t\tdefaultOptionsMap.put(JavaCore.IMPORTREWRITE_ONDEMAND_THRESHOLD, String.valueOf(99));", "-\t\tdefaultOptionsMap.put(JavaCore.IMPORTREWRITE_STATIC_ONDEMAND_THRESHOLD, String.valueOf(99));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d5db7590f9e52231663be35646843ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CompilerInvocationTests.java", "commitBeforeChange": "fa5828480ebc13512cc4c6649155f597883abe5f", "commitAfterChange": "dbadb98550952623b726dd998146fbf52c65b243", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public void test012_compiler_problems_tuning()", "signatureAfterChange": " public void test012_compiler_problems_tuning()", "diff": ["-\t\texpectedProblemAttributes.put(\"IllegalBinaryLiteral\", SKIP);", "-\t\texpectedProblemAttributes.put(\"IllegalHexaLiteral\", SKIP);", "-\t\texpectedProblemAttributes.put(\"IllegalUnderscorePosition\", SKIP);", "-\t\texpectedProblemAttributes.put(\"IllegalUsageOfUnderscore\", SKIP);", "-\t\texpectedProblemAttributes.put(\"InvalidBinary\", SKIP);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7199223f3310b5793d4edd59e56ff976", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ConditionalExpressionTest.java", "commitBeforeChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "commitAfterChange": "0820eec9945610037c75b7f3c6bc13a32acbc80c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void test002()", "signatureAfterChange": " \tpublic void test002()", "diff": ["-\t\tMap options = this.getCompilerOptions();", "-\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "-\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);", "-\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);", "-\t\t\t\"\",", "-\t\t\tnull,", "-\t\t\ttrue,", "-\t\t\tnull,", "-\t\t\toptions,", "-\t\t\tnull", "+\t\t\t\"\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99458971b5bb8eebf1cecefc3657f4f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "7183d81a2458b7a9ecc9004f74bf12b52ac2eafc", "commitAfterChange": "54eb6fa8730358fcf98285db139cf9edbd02f92a", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 43, "signatureBeforeChange": " \t\t \t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword)", "signatureAfterChange": " \t\t \t\tpublic final int rewriteList(ASTNode parent, StructuralPropertyDescriptor property, int offset, String keyword)", "diff": ["-\t\t\t", "-\t\t\tinitCopyRangeChecks(parent, property);", "-\t\t\t\t\t\tcheckForRangeStart(node);", "-\t\t\t\t\t\tcheckForRangeEnd(node);", "-\t\t\t\t\t\tcheckForRangeStart(node);", "-\t\t\t\t\t\tcheckForRangeEnd(node);", "-\t\t\t\t\t\tcheckForRangeStart(node);", "-\t\t\t\t\t\tcheckForRangeEnd(node);", "-\t\t\t\t\t\tcheckForRangeStart(node);", "-\t\t\t\t\t\tcheckForRangeEnd(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed712d39c5abd393891daa647ee688b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatterOptions.java", "commitBeforeChange": "e7e7564689e931d1fed71c56fbe47c45f27678fe", "commitAfterChange": "e414d36721aa05dbbac7b21bf49fdccb073e6286", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic Map getMap()", "signatureAfterChange": "  \tpublic Map getMap()", "diff": ["-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_SNAP_TO_TABS, this.snapToTabs ? DefaultCodeFormatterConstants.TRUE: DefaultCodeFormatterConstants.FALSE);", "-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TAB_LENGTH, Integer.toString(this.tab_length));", "-\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INDENTATION_SIZE, Integer.toString(this.indentation_size));", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE, Integer.toString(this.tab_size));"]}], "num": 21867}