{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de570f86d71facd7f289a03e861b764b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09524a4719de23cff551f4bbaf6e9967", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "4b71ef3be11b1e52d22d795d03898285bb112516", "commitAfterChange": "9966baba46edc3df548fabd09b133cadc0093ca6", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\tboolean isInsideLambda = false;", "+\t\t\t\tboolean shouldCaptureOuterLocals = false;", "-\t\t\t\t\t\t\t\tif (isInsideLambda && invocationSite instanceof NameReference) {", "-\t\t\t\t\t\t\t\t\tNameReference nameReference = (NameReference) invocationSite;", "-\t\t\t\t\t\t\t\t\tnameReference.bits |= ASTNode.IsFromOutsideLambda;", "+\t\t\t\t\t\t\t\tif (shouldCaptureOuterLocals && invocationSite instanceof NameReference) {", "+\t\t\t\t\t\t\t\t\t\tNameReference nameReference = (NameReference) invocationSite;", "+\t\t\t\t\t\t\t\t\t\tnameReference.bits |= ASTNode.IsCapturedOuterLocal;", "+\t\t\t\t\t\t\tshouldCaptureOuterLocals = true;", "-\t\t\t\t\tif (scope.kind == METHOD_SCOPE && scope.parent != null && scope.parent.kind != CLASS_SCOPE) {", "-\t\t\t\t\t\tisInsideLambda = true;", "-\t\t\t\t\t}", "+\t\t\t\t\tif (scope.isLambdaScope()) // Not in Kansas anymore ...", "+\t\t\t\t\t\tshouldCaptureOuterLocals = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2892f96b870dcd82a5ddb801b42ed66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d32dbe370312bc68ef5b59c6268bfdfcda839b17", "commitAfterChange": "4b84620f8d71e6de7e42a2050aa5360e2143f846", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\tboolean shouldCaptureOuterLocals = false;", "+\t\t\t\tboolean shouldTrackOuterLocals = false;", "-\t\t\t\t\t\t\t\tif (shouldCaptureOuterLocals && invocationSite instanceof NameReference) {", "+\t\t\t\t\t\t\t\tif (shouldTrackOuterLocals) {", "+\t\t\t\t\t\t\t\t\tif (invocationSite instanceof NameReference) {", "+\t\t\t\t\t\t\t\t\t} else if (invocationSite instanceof AbstractVariableDeclaration) {", "+\t\t\t\t\t\t\t\t\t\tAbstractVariableDeclaration variableDeclaration = (AbstractVariableDeclaration) invocationSite;", "+\t\t\t\t\t\t\t\t\t\tvariableDeclaration.bits |= ASTNode.ShadowsOuterLocal;", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tshouldCaptureOuterLocals = true;", "+\t\t\t\t\t\t\tshouldTrackOuterLocals = true;", "-\t\t\t\t\t\tshouldCaptureOuterLocals = true;", "+\t\t\t\t\t\tshouldTrackOuterLocals = true;"]}], "num": 10648}