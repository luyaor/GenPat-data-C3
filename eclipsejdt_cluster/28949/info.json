{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "76e36d751f47f5e8cb127c358d6057e2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "87e0636b975b47e7884a001613c7784d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "d9032a87dfcb69e19b4c3aae869d4a786d1fb149", "commitAfterChange": "eee6512d26cd1c50a9b02d1b4b78531f507d95fc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tprivate char[] getQualifiedName()", "signatureAfterChange": "\r \tprivate char[] getQualifiedName()", "diff": ["+\t */\r", "-\t\t} else if (this.openable instanceof org.eclipse.jdt.internal.core.ClassFile) {\r", "-\t\t\torg.eclipse.jdt.internal.core.ClassFile classFile = (org.eclipse.jdt.internal.core.ClassFile)this.openable;\r", "-\t\t\ttry {\r", "-\t\t\t\tIType type = MatchingOpenable.getTopLevelType(classFile.getType());\r", "-\t\t\t\treturn type.getFullyQualifiedName().toCharArray();\r", "-\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\treturn null; // nothing we can do here\r", "+\t\t} else if (this.openable instanceof ClassFile) {\r", "+\t\t\tString sourceFileName = getSourceFileName();\r", "+\t\t\tif (sourceFileName == NO_SOURCE_FILE_NAME) {\r", "+\t\t\t\ttry {\r", "+\t\t\t\t\treturn ((ClassFile)this.openable).getType().getFullyQualifiedName('.').toCharArray();\r", "+\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\t\treturn null;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\tString simpleName = sourceFileName.substring(0, sourceFileName.length()-5); // length-\".java\".length()\r", "+\t\t\tString pkgName = this.openable.getParent().getElementName();\r", "+\t\t\tif (pkgName.length() == 0) {\r", "+\t\t\t\treturn simpleName.toCharArray();\r", "+\t\t\t} else {\r", "+\t\t\t\treturn (pkgName + '.' + simpleName).toCharArray();\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfecdbeab3d84bcebf71347ce320d82d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PotentialMatch.java", "commitBeforeChange": "4e66475f9a73014d666c99c51fe059857a4663fa", "commitAfterChange": "faddcb079bee5b548a6f2f972d8258d3ff3dc5d3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r public PotentialMatch(MatchLocator locator, IResource resource, Openable openable)", "signatureAfterChange": "\r public PotentialMatch(MatchLocator locator, IResource resource, Openable openable)", "diff": ["-\t\t\tString source = ((org.eclipse.jdt.internal.core.ClassFile)openable).getSource();\r", "+\t\t\tchar[] source = null; \r", "+\t\t\torg.eclipse.jdt.internal.core.ClassFile classFile = (org.eclipse.jdt.internal.core.ClassFile)openable;\r", "+\t\t\tSourceMapper sourceMapper = classFile.getSourceMapper();\r", "+\t\t\tif (sourceMapper != null) {\r", "+\t\t\t\tsource = sourceMapper.findSource(classFile.getType());\r", "+\t\t\t}\r", "+\t\t\tif (source == null) {\r", "+\t\t\t\t// default to opening the class file\r", "+\t\t\t\tString sourceFromBuffer = classFile.getSource();\r", "+\t\t\t\tif (sourceFromBuffer != null) {\r", "+\t\t\t\t\tsource = sourceFromBuffer.toCharArray();\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "-\t\t\t\tthis.buildTypeBindings(source.toCharArray());\r", "+\t\t\t\tthis.buildTypeBindings(source);\r", "-\t\t\t\t\torg.eclipse.jdt.core.IClassFile classFile = \r", "+\t\t\t\t\torg.eclipse.jdt.core.IClassFile mainTypeClassFile = \r", "-\t\t\t\t\tif (classFile.exists()) {\r", "-\t\t\t\t\t\tthis.openable = (Openable)classFile;\r", "+\t\t\t\t\tif (mainTypeClassFile.exists()) {\r", "+\t\t\t\t\t\tthis.openable = (Openable)mainTypeClassFile;\r"]}], "num": 28949}