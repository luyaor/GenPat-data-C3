{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "596edac550d4bb6dd36e84997a4a49a5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3807cf200ed3fbfae3eeff681001573d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "e3ab7adcf5341254d66eeef47fc0727dbe42868f", "commitAfterChange": "8915ec2bb74e44419be85002d7c3a4c9f8582635", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 23, "signatureBeforeChange": " public int getNextToken() throws InvalidInputException", "signatureAfterChange": " public int getNextToken() throws InvalidInputException", "diff": ["-\t\t\t\t\t\tcheckNonExternalizedString();", "+\t\t\t\t\t\tif (this.currentLine != null) {", "+\t\t\t\t\t\t\tparseTags(false);", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tthis.currentLine = null;", "+\t\t\t\t\t\t} else if (this.currentLine != null) {", "+\t\t\t\t\t\t\tthis.currentLine.clear();", "-\t\t\t\t\tif (this.checkNonExternalizedStringLiterals){ // check for presence of\tNLS tags //$NON-NLS-?$ where ? is an int.", "-\t\t\t\t\t\tif (this.currentLine == null) {", "-\t\t\t\t\t\t\tthis.currentLine = new NLSLine();", "-\t\t\t\t\t\t}", "+\t\t\t\t\tif (this.currentLine != null){ // check for presence of\tNLS tags", "-\t\t\t\t\t\t\t\t\tcheckNonExternalizedString();", "+\t\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\t\tparseTags(true);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "+\t\t\t\t\t\t\t\t\t} else if (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\t\tthis.currentLine.clear();", "+\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\tparseTags(true);", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tcheckNonExternalizedString();", "+\t\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\t\tparseTags(false);", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "+\t\t\t\t\t\t\t\t\t} else if (currentLine != null){", "+\t\t\t\t\t\t\t\t\t\tthis.currentLine.clear();", "-\t\t\t\t\t\t\t\t\t\tcheckNonExternalizedString();", "+\t\t\t\t\t\t\t\t\t\tif (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\t\t\tparseTags(false);", "+\t\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\t\t\tthis.currentLine = null;", "+\t\t\t\t\t\t\t\t\t\t} else if (this.currentLine != null) {", "+\t\t\t\t\t\t\t\t\t\t\tthis.currentLine.clear();", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1ec85afdc6361815e989d123ece6e56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "ee73272992444a9c8e6586ce5a37f5dc6d6e8bd9", "commitAfterChange": "f598d68e65d421b1e902e4d71831d57a9b4e73ab", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tvoid setSourceComment(char[] source)", "signatureAfterChange": " \tvoid setSourceComment(char[] source)", "diff": ["-\t\tfor (int i=0; i<source.length; i++) {", "+\t\tint length = source.length;", "+\t\tfor (int i=0; i<length; i++) {", "-\t\t\t\tif (source[i] == '/') {", "-\t\t\t\t\tswitch (source[++i]) {", "-\t\t\t\t\t\tcase '/':", "-\t\t\t\t\t\t\tcomment = 1; // line comment", "-\t\t\t\t\t\t\tbuffer = new StringBuffer(\"//\");", "-\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase '*':", "-\t\t\t\t\t\t\tif (source[++i] == '*') {", "-\t\t\t\t\t\t\t\tif (source[++i] == '/') { // empty block comment", "-\t\t\t\t\t\t\t\t\tthis.comments.add(\"/**/\");", "-\t\t\t\t\t\t\t\t\tthis.allTags.add(new ArrayList());", "-\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\tswitch (source[i]) {", "+\t\t\t\t\tcase '/':", "+\t\t\t\t\t\tswitch (source[++i]) {", "+\t\t\t\t\t\t\tcase '/':", "+\t\t\t\t\t\t\t\tcomment = 1; // line comment", "+\t\t\t\t\t\t\t\tbuffer = new StringBuffer(\"//\");", "+\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\tcase '*':", "+\t\t\t\t\t\t\t\tif (source[++i] == '*') {", "+\t\t\t\t\t\t\t\t\tif (source[++i] == '/') { // empty block comment", "+\t\t\t\t\t\t\t\t\t\tthis.comments.add(\"/**/\");", "+\t\t\t\t\t\t\t\t\t\tthis.allTags.add(new ArrayList());", "+\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tcomment = 3; // javadoc", "+\t\t\t\t\t\t\t\t\t\tbuffer = new StringBuffer(\"/**\");", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t\tcomment = 3; // javadoc", "-\t\t\t\t\t\t\t\t\tbuffer = new StringBuffer(\"/**\");", "+\t\t\t\t\t\t\t\t\tcomment = 2; // block comment", "+\t\t\t\t\t\t\t\t\tbuffer = new StringBuffer(\"/*\");", "+\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase '\\'':", "+\t\t\t\t\t\twhile (i<length) {", "+\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\tif (i==length) break;", "+\t\t\t\t\t\t\tif (source[i] == '\\\\') {", "+\t\t\t\t\t\t\t\ti++;", "-\t\t\t\t\t\t\t\tcomment = 2; // block comment", "-\t\t\t\t\t\t\t\tbuffer = new StringBuffer(\"/*\");", "+\t\t\t\t\t\t\t\tif (source[i] == '\\'') {", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase '\"':", "+\t\t\t\t\t\twhile (i<length) {", "+\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\tif (i==length) break;", "+\t\t\t\t\t\t\tif (source[i] == '\\\\') {", "+\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (source[i] == '\"') {", "+\t\t\t\t\t\t\t\t\tif ((i+1)==length) break;", "+\t\t\t\t\t\t\t\t\tif (source[i+1] == '\"') {", "+\t\t\t\t\t\t\t\t\t\ti++;", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tbreak;", "-\t\t\t\t\tbuffer.append(source[i]);", "+\t\t\t\t\t\t/*", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tbuffer.append(source[i]);"]}], "num": 64208}