{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b6c7990988c4e7e68beb8d831011c653", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16d67b64f91b2e22047dc78b5e771e21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/RepeatableAnnotationTest.java", "commitBeforeChange": "618a6ff3d34de5a5e41db8b1f1893c42061e44cd", "commitAfterChange": "71dea98c1d878b28c8144aaff13d309d86912875", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tpublic void test026()", "signatureAfterChange": " \tpublic void test026()", "diff": ["-\t// TC's has no @Targets (=everywhere), but @Foo has, then complain.", "+\t// TC's has no @Targets (=every SE7 location), but @Foo has, then complain.", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in Foo.java (at line 3)\\n\" + ", "-\t\t\"\t@java.lang.annotation.Repeatable(FooContainer.class)\\n\" + ", "-\t\t\"\t                                 ^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"The repeatable annotation @Foo has a @Target annotation, @FooContainer does not\\n\" + ", "-\t\t\"----------\\n\",", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in Foo.java (at line 3)\\n\" + ", "+\t\t\t\"\t@java.lang.annotation.Repeatable(FooContainer.class)\\n\" + ", "+\t\t\t\"\t                                 ^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The containing annotation @FooContainer is allowed at targets where the repeatable annotation @Foo is not: TYPE, METHOD, PARAMETER, CONSTRUCTOR, LOCAL_VARIABLE, ANNOTATION_TYPE, PACKAGE\\n\" + ", "+\t\t\t\"----------\\n\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "722497356e467b3bc0d87e89c3fe4538", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "40dc3e7d9dd43b267f2ba783336b865193eac1be", "commitAfterChange": "01b9296a9ea93c38acbcfd0ee226b1f00d5fc41b", "methodNumberBeforeChange": 327, "methodNumberAfterChange": 327, "signatureBeforeChange": " \tpublic void test325()", "signatureAfterChange": " \tpublic void test325()", "diff": ["-\t\t\t\"should also report illegal construct on init of j field\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tX<String>.Item<Thread> i = new X<Exception>().new Item<Thread>();\\n\" + ", "+\t\t\t\"\t                       ^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X<Exception>.Item<Thread> to X<String>.Item<Thread>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tX.Item k = new X.Item();\\n\" + ", "+\t\t\t\"\t           ^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"No enclosing instance of type X<T> is accessible. Must qualify the allocation with an enclosing instance of type X<T> (e.g. x.new A() where x is an instance of X<T>).\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 11291}