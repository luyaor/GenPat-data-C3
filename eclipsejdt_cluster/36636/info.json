{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7e5dc35cf8f547526a03c6b592fc96a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c90fe481631d6332c88e4a7356c8f94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 549, "methodNumberAfterChange": 549, "signatureBeforeChange": " public void testCompletionQualifiedAllocationType1() throws JavaModelException", "signatureAfterChange": " public void testCompletionQualifiedAllocationType1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionQualifiedAllocationType1.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionQualifiedAllocationType1.java\",", "+            \"public class CompletionQualifiedAllocationType1 {\\n\"+", "+            \"\tpublic class YYY {\\n\"+", "+            \"\t}\\n\"+", "+            \"\tvoid foo(){\\n\"+", "+            \"\t\tthis.new YYY\\n\"+", "+            \"\t}\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"YYY\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"YYY\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"element:CompletionQualifiedAllocationType1.YYY    completion:YYY    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME+ R_NON_RESTRICTED),", "+    assertResults(", "+\t\t\"CompletionQualifiedAllocationType1.YYY[TYPE_REF]{YYY, , LCompletionQualifiedAllocationType1$YYY;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_NAME+ R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a4b2bdf516949f4c19fef1c52ca3338", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 557, "methodNumberAfterChange": 557, "signatureBeforeChange": " public void testCompletionStaticMethodDeclaration2() throws JavaModelException", "signatureAfterChange": " public void testCompletionStaticMethodDeclaration2() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionStaticMethodDeclaration2.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionStaticMethodDeclaration2.java\",", "+            \"public class CompletionStaticMethodDeclaration2 {\\n\" +", "+            \"\tclass Inner1 extends TypeWithAMethodAndAStaticMethod {\\n\" +", "+            \"\t\tfoo\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"foo\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"foo\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\t\"element:foo0    completion:public void foo0()    relevance:\" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED),", "+\tassertResults(", "+\t\t\t\"foo[POTENTIAL_METHOD_DECLARATION]{foo, LCompletionStaticMethodDeclaration2$Inner1;, ()V, foo, null, \" + (R_DEFAULT + R_INTERESTING + R_NON_RESTRICTED) + \"}\\n\" +", "+\t\t\t\"foo0[METHOD_DECLARATION]{public void foo0(), LTypeWithAMethodAndAStaticMethod;, ()V, foo0, null, \" + (R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC_OVERIDE+ R_NON_RESTRICTED) + \"}\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf72abdc7d0c4ddca0f2e79e4c6b5432", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 129, "signatureBeforeChange": " public void testCompletionMemberType() throws JavaModelException", "signatureAfterChange": " public void testCompletionMemberType() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionMemberType.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionMemberType.java\",", "+            \"public class CompletionMemberType {\\n\"+", "+            \"\tpublic class Y {\\n\"+", "+            \"\t\tpublic void foo(){\\n\"+", "+            \"\t\t\tY var = new Y\\n\"+", "+            \"\t\t}\\n\"+", "+            \"\t}\\n\"+", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"new Y\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"new Y\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"element:CompletionMemberType.Y    completion:Y    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_EXACT_NAME+ R_NON_RESTRICTED),", "+    assertResults(", "+\t\t\"CompletionMemberType.Y[TYPE_REF]{Y, , LCompletionMemberType$Y;, null, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_EXACT_NAME+ R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\","]}], "num": 36636}