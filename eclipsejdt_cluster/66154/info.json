{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5fc5ea24db4fbb20aff4562eb625d8bb", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0349eadbde76f8e917a603a3d13f5f84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "01c0777b298a5c62a2819ec93e382b1ab9650906", "commitAfterChange": "f58d2dbeb8fe5ca58dc0a3fee57b3d7a41711711", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void saveIndex(Index index) throws IOException", "signatureAfterChange": " public void saveIndex(Index index) throws IOException", "diff": ["-\t\t\tfor (int i = this.jobEnd; i > this.jobStart; i--) { // skip the current job", "-\t\t\t\tIJob job = this.awaitingJobs[i];", "-\t\t\t\tif (job instanceof IndexRequest)", "-\t\t\t\t\tif (((IndexRequest) job).containerPath.equals(containerPath)) return;", "+\t\t\tsynchronized(this) {", "+\t\t\t\tfor (int i = this.jobEnd; i > this.jobStart; i--) { // skip the current job", "+\t\t\t\t\tIJob job = this.awaitingJobs[i];", "+\t\t\t\t\tif (job instanceof IndexRequest)", "+\t\t\t\t\t\tif (((IndexRequest) job).containerPath.equals(containerPath)) return;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ae619da500e44f15be87ae40b4c5087", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void saveIndex(Index index) throws IOException", "signatureAfterChange": " public void saveIndex(Index index) throws IOException", "diff": ["-\tString indexName = index.getIndexFile().getPath();", "+\tString indexLocation = index.getIndexFile().getPath();", "-\t\tObject indexPath = indexNames.keyForValue(indexName);", "-\t\tif (indexPath != null) {", "+\t\tObject containerPath = this.indexLocations.keyForValue(indexLocation);", "+\t\tif (containerPath != null) {", "-\t\t\t\t\tif (((IndexRequest) job).containerPath.equals(indexPath)) return;", "+\t\t\t\t\tif (((IndexRequest) job).containerPath.equals(containerPath)) return;", "-\tupdateIndexState(indexName, SAVED_STATE);", "+\tupdateIndexState(indexLocation, SAVED_STATE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7e862077215b4ebd4d475f7a8a276f7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "589f6f354433243a559cfee0f9641e3e2af4d62f", "commitAfterChange": "078478e8a765943e089111dd6dddc420a7546230", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void saveIndex(IIndex index) throws IOException", "signatureAfterChange": " public void saveIndex(IIndex index) throws IOException", "diff": ["-\tupdateIndexState(index.getIndexFile().getPath(), SAVED_STATE);", "+\tString indexName = index.getIndexFile().getPath();", "+\tif (this.jobEnd > this.jobStart) {", "+\t\tObject indexPath = indexNames.keyForValue(indexName);", "+\t\tif (indexPath != null) {", "+\t\t\tfor (int i = this.jobEnd; i > this.jobStart; i--) { // skip the current job", "+\t\t\t\tIJob job = this.awaitingJobs[i];", "+\t\t\t\tif (job instanceof IndexRequest)", "+\t\t\t\t\tif (((IndexRequest) job).indexPath.equals(indexPath)) return;", "+\t\t\t}", "+\t\t}", "+\t}", "+\tupdateIndexState(indexName, SAVED_STATE);"]}], "num": 66154}