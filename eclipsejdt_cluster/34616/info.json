{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cc054e73b5051848322633fcbae05f6c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02403d30410fa70c9ac95ef5fb3b0266", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 1057, "methodNumberAfterChange": 1058, "signatureBeforeChange": " public void test1029()", "signatureAfterChange": " public void test1029()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "+\tString xSource =", "-\t\t\t\"}\", // =================", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 10)\\n\" +", "-\t\t\"\tList<Number> name = makeNumberList(5, 5D);\\n\" +", "-\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from List<Number&Comparable<?>> to List<Number>\\n\" +", "-\t\t\"----------\\n\",", "-\t\tnull,", "-\t\ttrue,", "-\t\toptions);", "+\t\t\t\"}\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\txSource,", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 10)\\n\" +", "+\t\t\t\"\tList<Number> name = makeNumberList(5, 5D);\\n\" +", "+\t\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from List<Number&Comparable<?>> to List<Number>\\n\" +", "+\t\t\t\"----------\\n\",", "+\t\t\tnull,", "+\t\t\ttrue,", "+\t\t\toptions);", "+\t} else {", "+\t\trunConformTest(new String[] { \"X.java\", xSource });", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18327690b798957a95df1e91ca00518a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "df9e156f4fc8e7c9ba600ff3791d21d593d64696", "commitAfterChange": "fe7c59b2b32a0d542adaf2c2d848dcfd7c5b93b2", "methodNumberBeforeChange": 342, "methodNumberAfterChange": 342, "signatureBeforeChange": " public void test433747() throws Exception", "signatureAfterChange": " public void test433747() throws Exception", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "+\tString[] src = new String[] {", "-\t\t\t\"@PackageAnnot(\\\"p\\\")\\n\" +", "+\t\t\t\"@PackageAnnot(\\\"p123456\\\")\\n\" +", "-\t\t},", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in p\\\\package-info.java (at line 1)\\n\" + ", "-\t\t\"\t@PackageAnnot(\\\"p\\\")\\n\" + ", "-\t\t\"\t^^^^^^^^^^^^^\\n\" + ", "-\t\t\"The annotation @PackageAnnot is disallowed for this location\\n\" + ", "-\t\t\"----------\\n\",", "-\t\tnull,", "-\t\ttrue,", "-\t\tnull,", "-\t\ttrue, // generate output", "-\t\tfalse,", "-\t\tfalse);", "+\t};", "+\tif (this.complianceLevel <= ClassFileConstants.JDK1_6) {", "+\t\tthis.runConformTest(src);", "+\t\tcheckDisassembledClassFile(OUTPUT_DIR + File.separator + \"p/package-info.class\", \"\", \"p123456\");", "+\t} else {", "+\t\tthis.runNegativeTest(", "+\t\t\tsrc,", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in p\\\\package-info.java (at line 1)\\n\" +", "+\t\t\t\"\t@PackageAnnot(\\\"p123456\\\")\\n\" +", "+\t\t\t\"\t^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"The annotation @PackageAnnot is disallowed for this location\\n\" +", "+\t\t\t\"----------\\n\",", "+\t\t\tnull,", "+\t\t\ttrue,", "+\t\t\tnull,", "+\t\t\ttrue, // generate output", "+\t\t\tfalse,", "+\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a416f61028c991113ef78394028d7e7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 95, "methodNumberAfterChange": 95, "signatureBeforeChange": " public void testBug415734()", "signatureAfterChange": " public void _testBug415734()", "diff": ["-public void testBug415734() {", "-\trunNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\"Compile.java\",", "+// Disabled due to spec bug, see https://bugs.eclipse.org/423496", "+public void _testBug415734() {", "+\tString compileSrc =", "-\t\t\t\"}\\n\"", "-\t\t},", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in Compile.java (at line 11)\\n\" +", "-\t\t\"\tArrayList<String> list = typedNull();\\n\" +", "-\t\t\"\t                         ^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from List<Object> to ArrayList<String>\\n\" +", "-\t\t\"----------\\n\");", "+\t\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\trunNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"Compile.java\",", "+\t\t\t\tcompileSrc", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in Compile.java (at line 11)\\n\" +", "+\t\t\t\"\tArrayList<String> list = typedNull();\\n\" +", "+\t\t\t\"\t                         ^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from List<Object> to ArrayList<String>\\n\" +", "+\t\t\t\"----------\\n\");", "+\t} else {", "+\t\trunConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"Compile.java\",", "+\t\t\t\tcompileSrc", "+\t\t\t});", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db59e9e8b9f44f945ac87e0dfba49ce2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "e0ebad67303a47fa3ab9d8532c92ffc60ae916e2", "commitAfterChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "methodNumberBeforeChange": 1138, "methodNumberAfterChange": 1139, "signatureBeforeChange": " public void test1109()", "signatureAfterChange": " public void test1109()", "diff": ["-\tthis.runNegativeTest(", "-\t\tnew String[] {", "-\t\t\t\"X.java\",", "+\tString xSource =", "-\t\t\t\"}\\n\",", "-\t\t},", "-\t\tthis.complianceLevel < ClassFileConstants.JDK1_8 ? ", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\"\treturn true ? Z.bar() : null;\\n\" +", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Type mismatch: cannot convert from Y<Object> to Y<String>\\n\" +", "-\t\t\"----------\\n\" :", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\treturn true ? Z.bar() : null;\\n\" + ", "-\t\t\t\"\t                        ^^^^\\n\" + ", "-\t\t\t\"Dead code\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\t\"}\\n\";", "+\tif (this.complianceLevel < ClassFileConstants.JDK1_8) {", "+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\txSource,", "+\t\t\t},", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "+\t\t\t\"\treturn true ? Z.bar() : null;\\n\" +", "+\t\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\t\"Type mismatch: cannot convert from Y<Object> to Y<String>\\n\" +", "+\t\t\t\"----------\\n\");\t", "+\t} else {", "+\t\trunConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\txSource", "+\t\t\t});", "+\t}"]}], "num": 34616}