{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2f3861a13c06b62245e21453f8ab983", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a315f4b12ab87c7dd261292b5275c878", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "9c0097e084b2c48ccca0e818ba9c1c1a50818167", "commitAfterChange": "ed04e9efb45ff73e01fac12a6ae0aba550054536", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void matchReportReference(ArrayTypeReference arrayRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ArrayTypeReference arrayRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["+\t\t\treturn;", "-\t} else if (this.pattern.shouldExtendSelection() && arrayRef.resolvedType.isParameterizedType() && ((ParameterizedTypeBinding)arrayRef.resolvedType).arguments != null) {", "-\t\t// specific report accurate match for parameterized types", "-\t\tlocator.reportAccurateParameterizedTypeReference(arrayRef, this.pattern.simpleName, element, accuracy);", "-\t} else ", "-\t\tlocator.reportAccurateTypeReference(arrayRef, this.pattern.simpleName, element, accuracy);", "+\t}", "+\tTypeBinding refBinding = arrayRef.resolvedType;", "+\tint refinedAccuracy = accuracy;", "+\tif (this.pattern != null && this.pattern.typeSignature != null && refBinding.isParameterizedType()) {", "+\t\tParameterizedTypeBinding parameterizedBinding = (ParameterizedTypeBinding)refBinding;", "+\t\trefinedAccuracy = refineAccuracy(accuracy, parameterizedBinding, this.pattern.typeSignature, locator);", "+\t\tif (refinedAccuracy == -1) return; // refined accuracy shows an impossible match...", "+\t\tif (this.pattern.shouldExtendSelection() && parameterizedBinding.arguments != null) {", "+\t\t\t// specific report accurate match for parameterized types", "+\t\t\tlocator.reportAccurateParameterizedTypeReference(arrayRef, this.pattern.simpleName, element, refinedAccuracy);", "+\t\t\treturn;", "+\t\t}", "+\t}", "+\tlocator.reportAccurateTypeReference(arrayRef, this.pattern.simpleName, element, accuracy);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7e0427dee00a98616cf706f30546382", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferenceLocator.java", "commitBeforeChange": "9c0097e084b2c48ccca0e818ba9c1c1a50818167", "commitAfterChange": "ed04e9efb45ff73e01fac12a6ae0aba550054536", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(QualifiedTypeReference qTypeRef, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\t\t\tif (this.pattern.shouldExtendSelection() && refBinding.isParameterizedType() && ((ParameterizedTypeBinding)refBinding).arguments != null) {", "-\t\t\t\t\t\t// specific report accurate match for parameterized types", "-\t\t\t\t\t\tlocator.reportAccurateParameterizedTypeReference(qTypeRef, this.pattern.simpleName, element, accuracy);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tSearchMatch match = locator.newTypeReferenceMatch(element, accuracy, start, end-start+1, qTypeRef);", "-\t\t\t\t\t\tlocator.report(match);", "+\t\t\t\t\tint refinedAccuracy = accuracy;", "+\t\t\t\t\tif (this.pattern != null && this.pattern.typeSignature != null && refBinding.isParameterizedType()) {", "+\t\t\t\t\t\tParameterizedTypeBinding parameterizedBinding = (ParameterizedTypeBinding)refBinding;", "+\t\t\t\t\t\trefinedAccuracy = refineAccuracy(accuracy, parameterizedBinding, this.pattern.typeSignature, locator);", "+\t\t\t\t\t\tif (refinedAccuracy == -1) return; // refined accuracy shows an impossible match...", "+\t\t\t\t\t\tif (this.pattern.shouldExtendSelection() && parameterizedBinding.arguments != null) {", "+\t\t\t\t\t\t\t// specific report accurate match for parameterized types", "+\t\t\t\t\t\t\tlocator.reportAccurateParameterizedTypeReference(qTypeRef, this.pattern.simpleName, element, refinedAccuracy);", "+\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t}", "+\t\t\t\t\tSearchMatch match = locator.newTypeReferenceMatch(element, refinedAccuracy, start, end-start+1, qTypeRef);", "+\t\t\t\t\tlocator.report(match);"]}], "num": 11393}