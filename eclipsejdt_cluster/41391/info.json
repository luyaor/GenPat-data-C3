{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22681e40b418f0eae77c5361c26b9988", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9318266b3bb4d15547b66e6dbfb8d245", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 97, "signatureBeforeChange": "  public void testCompletionAllocationExpressionIsParent2() throws JavaModelException", "signatureAfterChange": "  public void testCompletionAllocationExpressionIsParent2() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAllocationExpressionIsParent2.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionAllocationExpressionIsParent2.java\",", "+            \"public class CompletionAllocationExpressionIsParent2 {\\n\" +", "+            \"\tpublic class Inner {\\n\" +", "+            \"\t\tpublic Inner(long i, long j){super();}\\n\" +", "+            \"\t\tpublic Inner(Object i, Object j){super();}\\n\" +", "+            \"\t\t\\n\" +", "+            \"\t}\\n\" +", "+            \"\t\\n\" +", "+            \"\tlong zzlong;\\n\" +", "+            \"\tint zzint;\\n\" +", "+            \"\tdouble zzdouble;\\n\" +", "+            \"\tboolean zzboolean;\\n\" +", "+            \"\tObject zzObject;\\n\" +", "+            \"\t\\n\" +", "+            \"\tvoid foo() {\\n\" +", "+            \"\t\tthis.new Inner(1, zz\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"zz\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"zz\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"element:zzObject    completion:zzObject    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzboolean    completion:zzboolean    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzdouble    completion:zzdouble    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzint    completion:zzint    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzlong    completion:zzlong    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+    assertResults(", "+            \"zzObject[FIELD_REF]{zzObject, LCompletionAllocationExpressionIsParent2;, Ljava.lang.Object;, zzObject, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzboolean[FIELD_REF]{zzboolean, LCompletionAllocationExpressionIsParent2;, Z, zzboolean, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzdouble[FIELD_REF]{zzdouble, LCompletionAllocationExpressionIsParent2;, D, zzdouble, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzint[FIELD_REF]{zzint, LCompletionAllocationExpressionIsParent2;, I, zzint, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzlong[FIELD_REF]{zzlong, LCompletionAllocationExpressionIsParent2;, J, zzlong, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED+ R_NON_RESTRICTED)+\"}\",", "+            requestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991e5ae58ce4f75368090cbd41896e2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  public void testCompletionAllocationExpressionIsParent6() throws JavaModelException", "signatureAfterChange": "  public void testCompletionAllocationExpressionIsParent6() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAllocationExpressionIsParent6.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionAllocationExpressionIsParent6.java\",", "+            \"public class CompletionAllocationExpressionIsParent6 {\\n\" +", "+            \"\t\\n\" +", "+            \"\tlong zzlong;\\n\" +", "+            \"\tint zzint;\\n\" +", "+            \"\tdouble zzdouble;\\n\" +", "+            \"\tboolean zzboolean;\\n\" +", "+            \"\tObject zzObject;\\n\" +", "+            \"\t\\n\" +", "+            \"\tvoid foo() {\\n\" +", "+            \"\t\tnew CompletionAllocation_ERROR_ExpressionIsParent6Plus().new Inner(1, zz\\n\" +", "+            \"\t}\\n\" +", "+            \"}\\n\" +", "+            \"class CompletionAllocationExpressionIsParent6Plus {\\n\" +", "+            \"\tpublic class Inner {\\n\" +", "+            \"\t\tpublic Inner(long i, long j){\\n\" +", "+            \"\t\t\t\\n\" +", "+            \"\t\t}\t\\n\" +", "+            \"\t}\t\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"zz\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"zz\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"element:zzObject    completion:zzObject    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzboolean    completion:zzboolean    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzdouble    completion:zzdouble    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzint    completion:zzint    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzlong    completion:zzlong    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+    assertResults(", "+            \"zzObject[FIELD_REF]{zzObject, LCompletionAllocationExpressionIsParent6;, Ljava.lang.Object;, zzObject, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzboolean[FIELD_REF]{zzboolean, LCompletionAllocationExpressionIsParent6;, Z, zzboolean, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzdouble[FIELD_REF]{zzdouble, LCompletionAllocationExpressionIsParent6;, D, zzdouble, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzint[FIELD_REF]{zzint, LCompletionAllocationExpressionIsParent6;, I, zzint, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzlong[FIELD_REF]{zzlong, LCompletionAllocationExpressionIsParent6;, J, zzlong, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED+ R_NON_RESTRICTED)+\"}\",", "+            requestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ea9b6d41984c8c81dcd987a0d6dee52d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": "  public void testCompletionAllocationExpressionIsParent3() throws JavaModelException", "signatureAfterChange": "  public void testCompletionAllocationExpressionIsParent3() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAllocationExpressionIsParent3.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionAllocationExpressionIsParent3.java\",", "+            \"public class CompletionAllocationExpressionIsParent3 {\\n\" +", "+            \"\tpublic class Inner {\\n\" +", "+            \"\t\tpublic Inner(long i, long j){super();}\\n\" +", "+            \"\t\tpublic Inner(Object i, Object j){super();}\\n\" +", "+            \"\t\t\\n\" +", "+            \"\t}\\n\" +", "+            \"\t\\n\" +", "+            \"\tlong zzlong;\\n\" +", "+            \"\tint zzint;\\n\" +", "+            \"\tdouble zzdouble;\\n\" +", "+            \"\tboolean zzboolean;\\n\" +", "+            \"\tObject zzObject;\\n\" +", "+            \"\t\\n\" +", "+            \"\tvoid foo() {\\n\" +", "+            \"\t\tnew CompletionAllocationExpressionIsParent3().new Inner(1, zz\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"zz\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"zz\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"element:zzObject    completion:zzObject    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzboolean    completion:zzboolean    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzdouble    completion:zzdouble    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzint    completion:zzint    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"\\n\" +", "-\t\t\"element:zzlong    completion:zzlong    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+    assertResults(", "+            \"zzObject[FIELD_REF]{zzObject, LCompletionAllocationExpressionIsParent3;, Ljava.lang.Object;, zzObject, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzboolean[FIELD_REF]{zzboolean, LCompletionAllocationExpressionIsParent3;, Z, zzboolean, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzdouble[FIELD_REF]{zzdouble, LCompletionAllocationExpressionIsParent3;, D, zzdouble, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzint[FIELD_REF]{zzint, LCompletionAllocationExpressionIsParent3;, I, zzint, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXPECTED_TYPE + R_UNQUALIFIED + R_NON_RESTRICTED)+\"}\\n\" +", "+            \"zzlong[FIELD_REF]{zzlong, LCompletionAllocationExpressionIsParent3;, J, zzlong, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_EXACT_EXPECTED_TYPE + R_UNQUALIFIED+ R_NON_RESTRICTED)+\"}\",", "+            requestor.getResults());"]}], "num": 41391}