{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5a630effe44ce26f9f1967806c8518f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42d538a53bf247ea003bcf37fa49fd06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "1b7318e8b4bff96e8318070fbe6e3d3cd574e2b0", "commitAfterChange": "13d04cce0ea1e365f1d568669e2b131c84e2d694", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  \tprivate String formatStatements(String source, int indentationLevel, int[] positions, String lineSeparator)", "signatureAfterChange": "  \tprivate String formatStatements(String source, int indentationLevel, int[] positions, String lineSeparator)", "diff": ["-\t\treturn this.newCodeFormatter.format(source, positions, constructorDeclaration);", "+\t\tString result = this.newCodeFormatter.format(source, positions, constructorDeclaration);;", "+\t\tif (positions != null) {", "+\t\t\tSystem.arraycopy(this.newCodeFormatter.scribe.mappedPositions, 0, positions, 0, positions.length);", "+\t\t}", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60fab265a1faa76ab7f4f866636cead2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "1b7318e8b4bff96e8318070fbe6e3d3cd574e2b0", "commitAfterChange": "13d04cce0ea1e365f1d568669e2b131c84e2d694", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprivate String formatCompilationUnit(String source, int indentationLevel, int[] positions, String lineSeparator)", "signatureAfterChange": "  \tprivate String formatCompilationUnit(String source, int indentationLevel, int[] positions, String lineSeparator)", "diff": ["-\t\treturn this.newCodeFormatter.format(source, positions, compilationUnitDeclaration);", "+\t\tString result = this.newCodeFormatter.format(source, positions, compilationUnitDeclaration);", "+\t\tif (positions != null) {", "+\t\t\tSystem.arraycopy(this.newCodeFormatter.scribe.mappedPositions, 0, positions, 0, positions.length);", "+\t\t}", "+\t\treturn result;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "939d25ef0f30dff9e77fdc83d87301e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "1b7318e8b4bff96e8318070fbe6e3d3cd574e2b0", "commitAfterChange": "13d04cce0ea1e365f1d568669e2b131c84e2d694", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate String formatClassBodyDeclarations(String source, int indentationLevel, int[] positions, String lineSeparator)", "signatureAfterChange": "  \tprivate String formatClassBodyDeclarations(String source, int indentationLevel, int[] positions, String lineSeparator)", "diff": ["-\t\treturn this.newCodeFormatter.format(source, positions, bodyDeclarations);", "+\t\tString result = this.newCodeFormatter.format(source, positions, bodyDeclarations);", "+\t\tif (positions != null) {", "+\t\t\tSystem.arraycopy(this.newCodeFormatter.scribe.mappedPositions, 0, positions, 0, positions.length);", "+\t\t}", "+\t\treturn result;"]}], "num": 62481}