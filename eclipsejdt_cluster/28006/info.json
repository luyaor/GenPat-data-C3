{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "622516b5b4ca1f38fc499be819d6d479", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "140f0cc033e2a07efbd87cb183e91961", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void addPossibleMatch(AstNode node)", "signatureAfterChange": " public void addPossibleMatch(AstNode node)", "diff": ["-", "-\tAstNode existing = (AstNode)this.potentialMatchingNodesKeys.get(key);", "-\tif (existing != null && existing.getClass().equals(node.getClass())) {", "-\t\tthis.potentialMatchingNodes.remove(existing);", "-\t}", "+\tAstNode existing = (AstNode) this.potentialMatchingNodesKeys.get(key);", "+\tif (existing != null && existing.getClass().equals(node.getClass()))", "+\t\tthis.potentialMatchingNodesSet.remove(existing);", "-\tthis.potentialMatchingNodes.put(node, new Integer(SearchPattern.POTENTIAL_MATCH));", "+\tthis.potentialMatchingNodesSet.add(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8a4e278c03547713c01e3601f9d04e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "6d8036f4b0f90ef715394ba92952a819714c2135", "commitAfterChange": "02733ea32199eef92e7e8bc7be9f2db172e7eedd", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void addPossibleMatch(AstNode node)", "signatureAfterChange": " public void addPossibleMatch(AstNode node)", "diff": ["-\tAstNode existing = (AstNode) this.potentialMatchingNodesKeys.get(key);", "+\tAstNode existing = (AstNode) this.possibleMatchingNodesKeys.get(key);", "-\t\tthis.potentialMatchingNodesSet.remove(existing);", "+\t\tthis.possibleMatchingNodesSet.remove(existing);", "-\tthis.potentialMatchingNodesSet.add(node);", "-\tthis.potentialMatchingNodesKeys.put(key, node);", "+\tthis.possibleMatchingNodesSet.add(node);", "+\tthis.possibleMatchingNodesKeys.put(key, node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d106d87c986659b6e2a7c4be9fc065c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingNodeSet.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void addTrustedMatch(AstNode node)", "signatureAfterChange": " public void addTrustedMatch(AstNode node)", "diff": ["-\t", "-\tAstNode existing = (AstNode)this.matchingNodesKeys.get(key);", "-\tif (existing != null && existing.getClass().equals(node.getClass())) {", "-\t\tthis.matchingNodes.remove(existing);", "-\t}", "+\tAstNode existing = (AstNode) this.matchingNodesKeys.get(key);", "+\tif (existing != null && existing.getClass().equals(node.getClass()))", "+\t\tthis.matchingNodes.removeKey(existing);", "-\t// add node to set", "-\tthis.matchingNodes.put(node, new Integer(SearchPattern.ACCURATE_MATCH));", "+\t// map node to its accuracy level", "+\tthis.matchingNodes.put(node, EXACT_MATCH);"]}], "num": 28006}