{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "30570f31a3f4a3eb51e70b593b4026c1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ae502ab99d39c1520625822cbda8429a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/NaiveASTFlattener.java", "commitBeforeChange": "db9f959a935f205a7a7a5ac245a707865595ee87", "commitAfterChange": "0d3451e9a7c942ed5f2531f8cbfba408096982ef", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " \tpublic boolean visit(SimpleType node)", "signatureAfterChange": " \tpublic boolean visit(SimpleType node)", "diff": ["-\t\tName name = node.getName();", "-\t\tif (name.isQualifiedName()) {", "-\t\t\tQualifiedName qualifiedName = (QualifiedName) name;", "-\t\t\tqualifiedName.getQualifier().accept(this);", "-\t\t\tthis.buffer.append(\".\");//$NON-NLS-1$", "-\t\t\tvisitTypeAnnotations(node);", "-\t\t\tqualifiedName.getName().accept(this);", "-\t\t} else {", "-\t\t\tvisitTypeAnnotations(node);", "-\t\t\tnode.getName().accept(this);\t\t\t", "-\t\t}", "+\t\tvisitTypeAnnotations(node);", "+\t\tnode.getName().accept(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5b82d634903e34a797ac4ef6ed85455", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "6f4f90e2451f9fcdb6af6941acb2518968bd5fec", "commitAfterChange": "140d5208fae36b92de255acde8dd7fe538818d2b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r public void add(IFile resource, IPath indexedContainer)", "signatureAfterChange": "\r public void addBinary(IFile resource, IPath indexedContainer)", "diff": ["-public void add(IFile resource, IPath indexedContainer){\r", "-\tString extension = resource.getFileExtension();\r", "-\tif (\"java\".equals(extension)){ //$NON-NLS-1$\r", "-\t\tAddCompilationUnitToIndex job = new AddCompilationUnitToIndex(resource, this, indexedContainer);\r", "-\t\tif (this.awaitingJobsCount() < MAX_FILES_IN_MEMORY) {\r", "-\t\t\tjob.initializeContents();\r", "-\t\t}\r", "-\t\trequest(job);\r", "-\t} else if (\"class\".equals(extension)){ //$NON-NLS-1$\r", "-\t\tAddClassFileToIndex job = new AddClassFileToIndex(resource, this, indexedContainer);\r", "-\t\tif (this.awaitingJobsCount() < MAX_FILES_IN_MEMORY) {\r", "-\t\t\tjob.initializeContents();\r", "-\t\t}\r", "-\t\trequest(job);\r", "+ */\r", "+public void addBinary(IFile resource, IPath indexedContainer){\r", "+\tif (JavaCore.getPlugin() == null || this.workspace == null) return;\t\r", "+\tAddClassFileToIndex job = new AddClassFileToIndex(resource, this, indexedContainer);\r", "+\tif (this.awaitingJobsCount() < MAX_FILES_IN_MEMORY) {\r", "+\t\tjob.initializeContents();\r", "+\t}\r", "+\trequest(job);\r"]}], "num": 19091}