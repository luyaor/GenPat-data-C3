{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e2fbb7e4526c55526d815b70f35eb3f3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83fe54e6f91b1f24dd2dadf8a5363482", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "e62c45ebe5881b0e2838be4fcb8a4a48c85b9c0c", "commitAfterChange": "c36a6a2b662267e56067d121b7f34ae48cbcb692", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 112, "signatureBeforeChange": " \tpublic void test036e()", "signatureAfterChange": " \tpublic void test036e()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "-\t\t\t\"----------\\n\"", "+\t\t\t\"----------\\n\" :", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in Y.java (at line 1)\\n\" + ", "+\t\t\t\"\tabstract class Y implements Equivalent<String>, EqualityComparable<Integer> {\\n\" + ", "+\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(T) of type Equivalent<T> has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in Y.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic abstract boolean equalTo(Object other);\\n\" + ", "+\t\t\t\"\t                        ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type Equivalent<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in Y.java (at line 2)\\n\" + ", "+\t\t\t\"\tpublic abstract boolean equalTo(Object other);\\n\" + ", "+\t\t\t\"\t                        ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method equalTo(Object) of type Y has the same erasure as equalTo(T) of type EqualityComparable<T> but does not override it\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5d7b1e1b3a1a20dcc2619f41e4f9ad3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b89ad18e17834e64930a830c92b5e2241f9a8b44", "commitAfterChange": "d9605208e25375e966739effbd053a969138c830", "methodNumberBeforeChange": 154, "methodNumberAfterChange": 154, "signatureBeforeChange": " \tpublic void test048d()", "signatureAfterChange": " \tpublic void test048d()", "diff": ["+\t\tString expectedCompilerLog = (this.complianceLevel == ClassFileConstants.JDK1_6)?", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"1. WARNING in X5.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tpublic Object foo(I<String> z) { return null; }\\n\" + ", "+\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo(I<String>) of type X5 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\":", "+\t\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\t\"1. ERROR in X5.java (at line 2)\\n\" + ", "+\t\t\t\t\t\"\tpublic Object foo(I<String> z) { return null; }\\n\" + ", "+\t\t\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\t\t\"Name clash: The method foo(I<String>) of type X5 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "+\t\t\t\t\t\"----------\\n\";", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X5.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic Object foo(I<String> z) { return null; }\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method foo(I<String>) of type X5 has the same erasure as foo(I<? extends T>) of type Y<T> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedCompilerLog"]}], "num": 34897}