{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8c9ff9872f077054a644071e9868a79", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f6f0cc4b346acfcdec781b3b7b5898a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "b1ce5a863ad0a541f80dd0793ff207f1e4ecf677", "commitAfterChange": "72d60854091bd7e8a5aafafdfea62cc297a3eb41", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " TypeReferencePattern(int matchRule)", "signatureAfterChange": " public TypeReferencePattern(char[] qualification, char[] simpleName, char[][] typeNames, boolean fromJavaElement, int[] wildcards, int matchRule)", "diff": ["+// SEARCH_15 Instanciate a type reference pattern with additional information for generics search", "+public TypeReferencePattern(char[] qualification, char[] simpleName, char[][] typeNames, boolean fromJavaElement, int[] wildcards, int matchRule) {", "+\tthis(qualification, simpleName,matchRule);", "+", "+\tif (typeNames != null) {", "+\t\t// store type arguments as is even if patter is not case sensitive", "+\t\tthis.typeNames= typeNames;", "+\t}", "+\tthis.declaration = fromJavaElement;", "+\tthis.wildcards = wildcards;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "afc3249727a6b8d3372d7b86f4b0963f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "4043b8a88c35a2c1612858cff67743727f25247b", "commitAfterChange": "6b8da2bd2bb1367c9817dbe3821476ed638f0906", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public TypeReferencePattern(char[] qualification, char[] simpleName, char[] signature, boolean fromJavaElement, int matchRule)", "signatureAfterChange": " public TypeReferencePattern(char[] qualification, char[] simpleName, String signature, boolean fromJavaElement, int matchRule)", "diff": ["-public TypeReferencePattern(char[] qualification, char[] simpleName, char[] signature, boolean fromJavaElement, int matchRule) {", "+public TypeReferencePattern(char[] qualification, char[] simpleName, String signature, boolean fromJavaElement, int matchRule) {", "-\tif (signature != null) {", "-\t\tthis.typeSignature = signature;", "-\t\tCharOperation.replace(this.typeSignature, '/', '.');", "-\t}", "-\tthis.declaration = fromJavaElement;", "+\tif (signature != null) computeSignature(signature);"]}], "num": 39555}