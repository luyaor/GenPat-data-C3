{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "201c025798ad8a34b7b72a4294553fb3", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdfd75b3106efa99a8627512660e24ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "82ebf715db153176c821d224623053c8e446f0cb", "commitAfterChange": "278d4e1b32f27e1cf67071cc3713ec8e809940ef", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void buildFields()", "signatureAfterChange": " \t \tprivate void buildFields()", "diff": ["-\t\tboolean hierarchyIsInconsistent = referenceContext.binding.isHierarchyInconsistent();", "-\t\t\tif (hierarchyIsInconsistent) { // 72468", "-\t\t\t\treferenceContext.binding.fields = new FieldBinding[1];", "-\t\t\t\treferenceContext.binding.fields[0] =", "-\t\t\t\t\tnew FieldBinding(IncompleteHierarchy, TypeBinding.INT, ClassFileConstants.AccPrivate, referenceContext.binding, null);", "-\t\t\t} else {", "-\t\t\t\treferenceContext.binding.fields = Binding.NO_FIELDS;", "-\t\t\t}", "+\t\t\treferenceContext.binding.fields = Binding.NO_FIELDS;", "-\t\tif (hierarchyIsInconsistent)", "-\t\t\tcount++;", "-\t\tif (hierarchyIsInconsistent)", "-\t\t\tfieldBindings[count++] = new FieldBinding(IncompleteHierarchy, TypeBinding.INT, ClassFileConstants.AccPrivate, referenceContext.binding, null);", "-"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8f7f2e606c50763261f025f8975b99d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "a6c016e4b9174d429d2989715c74cf56e42ef6bb", "commitAfterChange": "c9f804b2e84f02e4cfe425f0463c67be2149642c", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void buildFields()", "signatureAfterChange": " \t \tprivate void buildFields()", "diff": ["+\t\tboolean hierarchyIsInconsistent = referenceContext.binding.isHierarchyInconsistent();", "-\t\t\treferenceContext.binding.fields = NoFields;", "+\t\t\tif (hierarchyIsInconsistent) { // 72468", "+\t\t\t\treferenceContext.binding.fields = new FieldBinding[1];", "+\t\t\t\treferenceContext.binding.fields[0] =", "+\t\t\t\t\tnew FieldBinding(IncompleteHierarchy, VoidBinding, AccPrivate, referenceContext.binding, null);", "+\t\t\t} else {", "+\t\t\t\treferenceContext.binding.fields = NoFields;", "+\t\t\t}", "+\t\tif (hierarchyIsInconsistent)", "+\t\t\tcount++;", "+\t\tif (hierarchyIsInconsistent)", "+\t\t\tfieldBindings[count++] = new FieldBinding(IncompleteHierarchy, VoidBinding, AccPrivate, referenceContext.binding, null);"]}], "num": 39162}