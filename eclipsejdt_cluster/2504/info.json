{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a25125a68af7aa02271de149e00f089", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61c503cabf320c256cf99ac238db8360", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/HierarchyResolver.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "\r \r public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "signatureAfterChange": "\r \r public void resolve(IGenericType[] suppliedTypes, ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\t\tunits[++count] = SourceTypeConverter.buildCompilationUnit(new ISourceType[]{topLevelType}, false, true, lookupEnvironment.problemReporter, result);\r", "+\t\t\t\tunits[++count] = SourceTypeConverter.buildCompilationUnit(topLevelType, false, true, lookupEnvironment.problemReporter, result);\r", "-\t\t\tCompilerOptions options = new CompilerOptions(Compiler.getDefaultOptions(Locale.getDefault()));\r", "-\t\t\tParser parser = new Parser(lookupEnvironment.problemReporter, false, options.getAssertMode());\r", "+\t\t\tParser parser = new Parser(lookupEnvironment.problemReporter);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "893401dfb4f332e81a3fed13d1e05867", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/NameEnvironment.java", "commitBeforeChange": "dc882d5765f5ebe6ddd0fd95b556bea362bb123f", "commitAfterChange": "615fac1240227c90a7ae2e892e27bd3660f50d7d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  void createFolder(IContainer folder, IProject p) throws CoreException", "signatureAfterChange": "  private void createFolder(IContainer folder) throws CoreException", "diff": ["-void createFolder(IContainer folder, IProject p) throws CoreException {", "+private void createFolder(IContainer folder) throws CoreException {", "-\t\tIContainer parent = folder.getParent();", "-\t\tif (!p.getFullPath().equals(parent.getFullPath()))", "-\t\t\tcreateFolder(parent, p);", "+\t\tcreateFolder(folder.getParent());"]}], "num": 2504}