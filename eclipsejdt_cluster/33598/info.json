{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fcaa45edcfb38ddf3e6505ed1ad3fead", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd3ed6869a0cce5154d3e543c018278", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 143, "signatureBeforeChange": " public void invalidMethod(MessageSend messageSend, MethodBinding method)", "signatureAfterChange": " public void invalidMethod(MessageSend messageSend, MethodBinding method)", "diff": ["-\t\t\t\t\tString closestParameterTypeNames = parametersAsString(shownMethod.parameters, false);", "-\t\t\t\t\tString parameterTypeNames = parametersAsString(method.parameters, false);", "-\t\t\t\t\tString closestParameterTypeShortNames = parametersAsString(shownMethod.parameters, true);", "-\t\t\t\t\tString parameterTypeShortNames = parametersAsString(method.parameters, true);", "+\t\t\t\t\tString closestParameterTypeNames = typesAsString(shownMethod.isVarargs(), shownMethod.parameters, false);", "+\t\t\t\t\tString parameterTypeNames = typesAsString(method.isVarargs(), method.parameters, false);", "+\t\t\t\t\tString closestParameterTypeShortNames = typesAsString(shownMethod.isVarargs(), shownMethod.parameters, true);", "+\t\t\t\t\tString parameterTypeShortNames = typesAsString(method.isVarargs(), method.parameters, true);", "-\t\t\t\t        parametersAsString(shownMethod.parameters, false), ", "+\t\t\t\t        typesAsString(shownMethod.isVarargs(), shownMethod.parameters, false), ", "-\t\t\t\t        parametersAsString(substitutedMethod.parameters, false), ", "+\t\t\t\t        typesAsString(substitutedMethod.isVarargs(), substitutedMethod.parameters, false), ", "-\t\t\t\t        parametersAsString(shownMethod.parameters, true), ", "+\t\t\t\t        typesAsString(shownMethod.isVarargs(), shownMethod.parameters, true), ", "-\t\t\t\t        parametersAsString(substitutedMethod.parameters, true), ", "+\t\t\t\t        typesAsString(substitutedMethod.isVarargs(), substitutedMethod.parameters, true), ", "-\t\t\t\t\t        parametersAsString(shownMethod.parameters, false), ", "+\t\t\t\t\t        typesAsString(shownMethod.isVarargs(), shownMethod.parameters, false), ", "-\t\t\t\t\t        parametersAsString(method.parameters, false) },", "+\t\t\t\t\t        typesAsString(method.isVarargs(), method.parameters, false) },", "-\t\t\t\t\t        parametersAsString(shownMethod.parameters, true), ", "+\t\t\t\t\t        typesAsString(shownMethod.isVarargs(), shownMethod.parameters, true), ", "-\t\t\t\t\t        parametersAsString(method.parameters, true) },", "+\t\t\t\t\t        typesAsString(method.isVarargs(), method.parameters, true) },", "-\t\t\t\t\t        parametersAsString(shownMethod.parameters, false), ", "+\t\t\t\t\t        typesAsString(shownMethod.isVarargs(), shownMethod.parameters, false), ", "-\t\t\t\t\t\t\tparametersAsString(shownMethod.typeVariables, false),", "-\t\t\t\t\t        parametersAsString(method.parameters, false) },", "+\t\t\t\t\t\t\ttypesAsString(false, shownMethod.typeVariables, false),", "+\t\t\t\t\t        typesAsString(method.isVarargs(), method.parameters, false) },", "-\t\t\t\t\t        parametersAsString(shownMethod.parameters, true), ", "+\t\t\t\t\t        typesAsString(shownMethod.isVarargs(), shownMethod.parameters, true), ", "-\t\t\t\t\t\t\tparametersAsString(shownMethod.typeVariables, true),", "-\t\t\t\t\t        parametersAsString(method.parameters, true) },", "+\t\t\t\t\t\t\ttypesAsString(false, shownMethod.typeVariables, true),", "+\t\t\t\t\t        typesAsString(method.isVarargs(), method.parameters, true) },", "-\t\t\t\t        parametersAsString(shownMethod.parameters, false), ", "+\t\t\t\t        typesAsString(shownMethod.isVarargs(), shownMethod.parameters, false), ", "-\t\t\t\t\t\tparametersAsString(((ParameterizedGenericMethodBinding)shownMethod).typeArguments, false),", "-\t\t\t\t        parametersAsString(method.parameters, false) },", "+\t\t\t\t\t\ttypesAsString(false, ((ParameterizedGenericMethodBinding)shownMethod).typeArguments, false),", "+\t\t\t\t        typesAsString(method.isVarargs(), method.parameters, false) },", "-\t\t\t\t        parametersAsString(shownMethod.parameters, true), ", "+\t\t\t\t        typesAsString(shownMethod.isVarargs(), shownMethod.parameters, true), ", "-\t\t\t\t\t\tparametersAsString(((ParameterizedGenericMethodBinding)shownMethod).typeArguments, true),", "-\t\t\t\t        parametersAsString(method.parameters, true) },", "+\t\t\t\t\t\ttypesAsString(false, ((ParameterizedGenericMethodBinding)shownMethod).typeArguments, true),", "+\t\t\t\t        typesAsString(method.isVarargs(), method.parameters, true) },", "-\t\t\t\t        parametersAsString(shownMethod.parameters, false), ", "+\t\t\t\t        typesAsString(shownMethod.isVarargs(), shownMethod.parameters, false), ", "-\t\t\t\t        parametersAsString(method.parameters, false) },", "+\t\t\t\t        typesAsString(method.isVarargs(), method.parameters, false) },", "-\t\t\t\t        parametersAsString(shownMethod.parameters, true), ", "+\t\t\t\t        typesAsString(shownMethod.isVarargs(), shownMethod.parameters, true), ", "-\t\t\t\t        parametersAsString(method.parameters, true) },", "+\t\t\t\t        typesAsString(method.isVarargs(), method.parameters, true) },", "-\t\t\tnew String(shownMethod.selector), parametersAsString(shownMethod.parameters, false)},", "+\t\t\tnew String(shownMethod.selector), typesAsString(shownMethod.isVarargs(), shownMethod.parameters, false)},", "-\t\t\tnew String(shownMethod.selector), parametersAsString(shownMethod.parameters, true)},", "+\t\t\tnew String(shownMethod.selector), typesAsString(shownMethod.isVarargs(), shownMethod.parameters, true)},"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfb956b87908afb71785abc79e383e1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 134, "signatureBeforeChange": " public void invalidConstructor(Statement statement, MethodBinding targetConstructor)", "signatureAfterChange": " public void invalidConstructor(Statement statement, MethodBinding targetConstructor)", "diff": ["+\tint sourceStart = statement.sourceStart;", "+\tint sourceEnd = statement.sourceEnd;", "+\tif (statement instanceof AllocationExpression) {", "+\t\tAllocationExpression allocation = (AllocationExpression)statement;", "+\t\tif (allocation.enumConstant != null) {", "+\t\t\tsourceStart = allocation.enumConstant.sourceStart;", "+\t\t\tsourceEnd = allocation.enumConstant.sourceEnd;", "+\t\t}", "+\t}", "+\t", "-\t\t\t\t        parametersAsString(shownConstructor.parameters, false), ", "+\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false), ", "-\t\t\t\t        parametersAsString(substitutedConstructor.parameters, false), ", "+\t\t\t\t        typesAsString(substitutedConstructor.isVarargs(), substitutedConstructor.parameters, false), ", "-\t\t\t\t        parametersAsString(shownConstructor.parameters, true), ", "+\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true), ", "-\t\t\t\t        parametersAsString(substitutedConstructor.parameters, true), ", "+\t\t\t\t        typesAsString(substitutedConstructor.isVarargs(), substitutedConstructor.parameters, true), ", "-\t\t\t\tstatement.sourceStart,", "-\t\t\t\tstatement.sourceEnd);\t\t    ", "+\t\t\t\tsourceStart,", "+\t\t\t\tsourceEnd);\t\t    ", "-\t\t\t\t\t        parametersAsString(shownConstructor.parameters, false), ", "+\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false), ", "-\t\t\t\t\t        parametersAsString(targetConstructor.parameters, false) },", "+\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "-\t\t\t\t\t        parametersAsString(shownConstructor.parameters, true), ", "+\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true), ", "-\t\t\t\t\t        parametersAsString(targetConstructor.parameters, true) },", "-\t\t\t\t\tstatement.sourceStart,", "-\t\t\t\t\tstatement.sourceEnd);\t\t    ", "+\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\t\tsourceStart,", "+\t\t\t\t\tsourceEnd);\t\t    ", "-\t\t\t\t\t        parametersAsString(shownConstructor.parameters, false), ", "+\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false), ", "-\t\t\t\t\t\t\tparametersAsString(shownConstructor.typeVariables, false),", "-\t\t\t\t\t        parametersAsString(targetConstructor.parameters, false) },", "+\t\t\t\t\t\t\ttypesAsString(false, shownConstructor.typeVariables, false),", "+\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "-\t\t\t\t\t        parametersAsString(shownConstructor.parameters, true), ", "+\t\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true), ", "-\t\t\t\t\t\t\tparametersAsString(shownConstructor.typeVariables, true),", "-\t\t\t\t\t        parametersAsString(targetConstructor.parameters, true) },", "-\t\t\t\t\tstatement.sourceStart,", "-\t\t\t\t\tstatement.sourceEnd);\t\t    ", "+\t\t\t\t\t\t\ttypesAsString(false, shownConstructor.typeVariables, true),", "+\t\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\t\tsourceStart,", "+\t\t\t\t\tsourceEnd);\t\t    ", "-\t\t\t\t        parametersAsString(shownConstructor.parameters, false), ", "+\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false), ", "-\t\t\t\t\t\tparametersAsString(((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, false),", "-\t\t\t\t        parametersAsString(targetConstructor.parameters, false) },", "+\t\t\t\t\t\ttypesAsString(false, ((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, false),", "+\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "-\t\t\t\t        parametersAsString(shownConstructor.parameters, true), ", "+\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true), ", "-\t\t\t\t\t\tparametersAsString(((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, true),", "-\t\t\t\t        parametersAsString(targetConstructor.parameters, true) },", "-\t\t\t\tstatement.sourceStart,", "-\t\t\t\tstatement.sourceEnd);\t\t    ", "+\t\t\t\t\t\ttypesAsString(false, ((ParameterizedGenericMethodBinding)shownConstructor).typeArguments, true),", "+\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\tsourceStart,", "+\t\t\t\tsourceEnd);\t\t    ", "-\t\t\t\t        parametersAsString(shownConstructor.parameters, false), ", "+\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false), ", "-\t\t\t\t        parametersAsString(targetConstructor.parameters, false) },", "+\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, false) },", "-\t\t\t\t        parametersAsString(shownConstructor.parameters, true), ", "+\t\t\t\t        typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true), ", "-\t\t\t\t        parametersAsString(targetConstructor.parameters, true) },", "-\t\t\t\tstatement.sourceStart,", "-\t\t\t\tstatement.sourceEnd);\t", "+\t\t\t\t        typesAsString(targetConstructor.isVarargs(), targetConstructor.parameters, true) },", "+\t\t\t\tsourceStart,", "+\t\t\t\tsourceEnd);\t", "-\t\tnew String[] {new String(targetConstructor.declaringClass.readableName()), parametersAsString(shownConstructor.parameters, false)},", "-\t\tnew String[] {new String(targetConstructor.declaringClass.shortReadableName()), parametersAsString(shownConstructor.parameters, true)},", "-\t\tstatement.sourceStart,", "-\t\tstatement.sourceEnd);", "+\t\tnew String[] {new String(targetConstructor.declaringClass.readableName()), typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, false)},", "+\t\tnew String[] {new String(targetConstructor.declaringClass.shortReadableName()), typesAsString(shownConstructor.isVarargs(), shownConstructor.parameters, true)},", "+\t\tsourceStart,", "+\t\tsourceEnd);"]}], "num": 33598}