{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "37d05da3a8960618552f64c8cc50c8e9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc1e882b0a39924c1563caf54bb8af31", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "a31fc41a761266e1336ef1dbd295debe293f4d81", "commitAfterChange": "4cad3f68ebca407bf91db6d03bc970a0ea223e63", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic boolean isCompatibleWith(TypeBinding left, Scope scope)", "signatureAfterChange": " \t \tpublic boolean isCompatibleWith(TypeBinding left, Scope scope)", "diff": ["-\t\treturn this.valueIfTrue.isCompatibleWith(left, scope) && this.valueIfFalse.isCompatibleWith(left, scope);", "+\t\treturn isPolyExpression() ? this.valueIfTrue.isCompatibleWith(left, scope) && this.valueIfFalse.isCompatibleWith(left, scope) :", "+\t\t\tsuper.isCompatibleWith(left, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb917e8d049eb49feb84fc61127e70dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/PolyTypeBinding.java", "commitBeforeChange": "a31fc41a761266e1336ef1dbd295debe293f4d81", "commitAfterChange": "4cad3f68ebca407bf91db6d03bc970a0ea223e63", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic boolean isCompatibleWith(TypeBinding left, Scope scope)", "signatureAfterChange": "  \tpublic boolean isCompatibleWith(TypeBinding left, Scope scope)", "diff": ["-\t\treturn this.expression.isCompatibleWith(left, scope);", "+\t\treturn this.vanillaCompatibilty ? this.expression.isCompatibleWith(left, scope) : this.expression.isBoxingCompatibleWith(left, scope);"]}], "num": 45799}