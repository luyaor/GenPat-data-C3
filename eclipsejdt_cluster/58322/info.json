{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7588a06d8a5391fe3fb15e085011692c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11add73de8f9e22dec0e154cd501f895", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "fe98ddbed4cd1f8bb449a78291ed05ed04f18196", "commitAfterChange": "afe1aa1e23ce83b573f50388f1a50d564fe4b851", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 110, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, \t\t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, \t\t\tBlockScope scope)", "diff": ["+\t\tif (parameterizedQualifiedTypeReference.annotations != null) formatInlineAnnotations(parameterizedQualifiedTypeReference.annotations[0], false);", "-\t\t\t}", "-\t\t}", "-\t\tint dimensions = getDimensions();", "-\t\tif (dimensions != 0 && dimensions <= parameterizedQualifiedTypeReference.dimensions()) {", "-\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\tif (this.preferences.insert_space_between_brackets_in_array_type_reference) {", "-\t\t\t\t\tthis.scribe.space();", "+\t\t\t\tif (parameterizedQualifiedTypeReference.annotations != null && parameterizedQualifiedTypeReference.annotations.length > i+1) {", "+\t\t\t\t\tformatInlineAnnotations(parameterizedQualifiedTypeReference.annotations[i+1], false);", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "+\t\tformatLeadingDimensions(parameterizedQualifiedTypeReference, true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c38ae10a50271de534ca0e461fae792", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "fe98ddbed4cd1f8bb449a78291ed05ed04f18196", "commitAfterChange": "afe1aa1e23ce83b573f50388f1a50d564fe4b851", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 111, "signatureBeforeChange": " \tpublic boolean visit( \t\t\tParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, \t\t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\t\tParameterizedQualifiedTypeReference parameterizedQualifiedTypeReference, \t\t\tClassScope scope)", "diff": ["+\t\tif (parameterizedQualifiedTypeReference.annotations != null) formatInlineAnnotations(parameterizedQualifiedTypeReference.annotations[0], false);", "-\t\t}", "-\t\tint dimensions = getDimensions();", "-\t\tif (dimensions != 0 && dimensions <= parameterizedQualifiedTypeReference.dimensions()) {", "-\t\t\tif (this.preferences.insert_space_before_opening_bracket_in_array_type_reference) {", "-\t\t\t\tthis.scribe.space();", "-\t\t\t}", "-\t\t\tfor (int i = 0; i < dimensions; i++) {", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLBRACKET);", "-\t\t\t\tif (this.preferences.insert_space_between_brackets_in_array_type_reference) {", "-\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t}", "-\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRBRACKET);", "+\t\t\tif (parameterizedQualifiedTypeReference.annotations != null && parameterizedQualifiedTypeReference.annotations.length > i+1) {", "+\t\t\t\tformatInlineAnnotations(parameterizedQualifiedTypeReference.annotations[i+1], false);", "+\t\tformatLeadingDimensions(parameterizedQualifiedTypeReference, true);"]}], "num": 58322}