{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cedf8ed797104f12ddcb1f36b1aa08d7", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b8fb89186e00de50a5e48f6c716beb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic boolean visit( \t\tSynchronizedStatement synchronizedStatement, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tSynchronizedStatement synchronizedStatement, \t\tBlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNamesynchronized);", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameLPAREN, this.preferences.insert_space_before_synchronized_condition);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNamesynchronized);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameLPAREN, this.preferences.insert_space_before_synchronized_condition);", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameRPAREN, this.preferences.insert_space_in_synchronized_condition);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameRPAREN, this.preferences.insert_space_in_synchronized_condition);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5848414f6c38b8edd95eb38600a0c10a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "8a64589617f7b80b7f12bb3f773ab58c605663c7", "commitAfterChange": "6585c7471e2cc73387fb0d652a600f2678de9051", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic boolean visit(AssertStatement assertStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(AssertStatement assertStatement, BlockScope scope)", "diff": ["-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameassert);", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameassert);", "-\t\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameCOLON, this.preferences.insert_space_before_colon_in_assert);", "+\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOLON, this.preferences.insert_space_before_colon_in_assert);", "-\t\tthis.scribe.printNextToken(ITerminalSymbols.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);\t\t", "+\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameSEMICOLON, this.preferences.insert_space_before_semicolon);\t\t", "+\t\tthis.scribe.printTrailingComment();"]}], "num": 20281}