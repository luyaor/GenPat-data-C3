{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "93bc0017a7fa09060a1e5d07857ecccb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0da656b4d8c7c6361008074efd39fe43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "a08e8dc8e9230a115f0cfdb4f78a05f8533a21b8", "commitAfterChange": "7df061f9da0ab96be87e5851cb157a28c5f5bca0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprotected void assertExtraDimensionsEqual(String message, List dimensions, String expected)", "signatureAfterChange": "  \tprotected void assertExtraDimensionsEqual(String message, List dimensions, String expected)", "diff": ["-\t\t\tDimensionInfo dim = (DimensionInfo) iter.next();", "+\t\t\tExtraDimension dim = (ExtraDimension) iter.next();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21c530e486bdbb0aae2e44990b0c0f37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "cba4a74f046a7c7d43d81e11b279554f1ab8b4ad", "commitAfterChange": "2a01994b0addf3b51b8cc85382b32cfdc277de6c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, boolean includeReferencedProjects)", "signatureAfterChange": "\r public static IJavaSearchScope createJavaSearchScope(IJavaElement[] elements, boolean includeReferencedProjects)", "diff": ["-\tHashtable visitedProjects = new Hashtable(2);\r", "+\tHashSet visitedProjects = new HashSet(2);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4b40985cb54040ae33bb5e65d11f2d3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchNameEnvironment.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  private void computeClasspathLocations(IWorkspaceRoot workspaceRoot, JavaProject javaProject)", "signatureAfterChange": "  private void computeClasspathLocations(IWorkspaceRoot workspaceRoot, JavaProject javaProject)", "diff": ["-\t\t\t\tcpLocations[index++] = new ClasspathJar(zipFile, ((ClasspathEntry) root.getRawClasspathEntry()).getImportRestriction());", "+\t\t\t\tcpLocations[index++] = new ClasspathJar(zipFile, ((ClasspathEntry) root.getRawClasspathEntry()).getAccessRuleSet());", "-\t\t\t\t\tcpLocations[index++] = ClasspathLocation.forBinaryFolder((IContainer) target, false, ((ClasspathEntry) root.getRawClasspathEntry()).getImportRestriction());", "+\t\t\t\t\tcpLocations[index++] = ClasspathLocation.forBinaryFolder((IContainer) target, false, ((ClasspathEntry) root.getRawClasspathEntry()).getAccessRuleSet());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "983f5f865e428aed7de85349ddbc4cdb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "0aeb22995e46f30c358e82b0f30fbb77f85d3cde", "commitAfterChange": "8f9fbe48639f547ef5e11d2ef3b8f942596a7f36", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean assertMode, boolean recordLineSeparator, boolean strictCommentMode)", "signatureAfterChange": " \tpublic static IScanner createScanner(boolean tokenizeComments, boolean tokenizeWhiteSpace, boolean assertMode, boolean recordLineSeparator, boolean strictCommentMode)", "diff": ["-\t\tScanner scanner = new Scanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/, assertMode, strictCommentMode /*strict comment*/, null/*taskTags*/, null/*taskPriorities*/);", "+\t\tPublicScanner scanner = new PublicScanner(tokenizeComments, tokenizeWhiteSpace, false/*nls*/, assertMode, strictCommentMode /*strict comment*/, null/*taskTags*/, null/*taskPriorities*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "984c1c45a401be955830b01b9e99b017", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "21b9b0f5640cfb80f180c2faa0f4171ca50a57f3", "commitAfterChange": "5d61642c437086f29b6dc6094fc3f19e8e041c37", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tIJavaProject currentProject, \t\tIPath currentOutput, \t\tint outputTraverseMode)", "signatureAfterChange": " \tprotected boolean traverseDelta( \t\tIResourceDelta delta,  \t\tint elementType,  \t\tIJavaProject currentProject, \t\tIPath currentOutput, \t\tint outputTraverseMode)", "diff": ["-\t\t\t// check source attachment change", "-\t\t\tthis.checkSourceAttachmentChange(delta, res);", "-\t\t\t", "-\t\t\t\tIPath childPath = childRes.getFullPath();", "+", "+\t\t\t\t// check source attachment change", "+\t\t\t\tthis.checkSourceAttachmentChange(child, childRes);", "+\t\t\t\tIPath childPath = childRes.getFullPath();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "998b5087d0f32acd6b4f9e5ed247ebd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "acb688302e3cacbdc42738d6941f0a71f5b00f9c", "commitAfterChange": "37562c5a562cc71ff03559ef16cdaf50168f2116", "methodNumberBeforeChange": 194, "methodNumberAfterChange": 194, "signatureBeforeChange": " protected void dispatchDeclarationInto(int length)", "signatureAfterChange": " protected void dispatchDeclarationInto(int length)", "diff": ["-\t\tAstNode astNode = astStack[astPtr--];", "+\t\tASTNode astNode = astStack[astPtr--];", "-\t\ttypeDecl.memberTypes = new MemberTypeDeclaration[size3];", "+\t\ttypeDecl.memberTypes = new TypeDeclaration[size3];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a17361f6d8cd523966d2f5dcf075fff3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "74638c6ba2ff749df371c0b7b5765b684e3c7bae", "commitAfterChange": "b7b6a243304e66fe9d0d477b8b6306031c8fd484", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic IPath[] getNonAccessibleFiles()", "signatureAfterChange": " \tpublic IPath[] getNonAccessibleFiles()", "diff": ["-\t\tIPath[] result = getFilePaths(this.accessRuleSet.getAccessRules(), ProblemSeverities.Error);", "+\t\tIPath[] result = getFilePaths(this.accessRuleSet.getAccessRules(), IProblem.ForbiddenReference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7d0892d7cf45ff22fdbfe40dfe4cb27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyElementsOperation.java", "commitBeforeChange": "40b99e5148bf82c3e66b88907e69f5d1e18e6f74", "commitAfterChange": "85d2c2c8ac37bb6f0260d6630185def87956883b", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " private String getSourceFor(IJavaElement element) throws JavaModelException", "signatureAfterChange": " private String getSourceFor(IJavaElement element) throws JavaModelException", "diff": ["-\tString source = (String) fSources.get(element);", "+\tString source = (String) sources.get(element);", "-\t\tfSources.put(element, source);", "+\t\tsources.put(element, source);"]}], "num": 45660}