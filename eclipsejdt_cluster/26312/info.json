{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a1195b6d00f589311c97a0ed52de00f", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03c33e7f2f78315f8d31c311ec6e8f19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 390, "methodNumberAfterChange": 397, "signatureBeforeChange": " private String typesAsString(boolean isVarargs, TypeBinding[] types, boolean makeShort)", "signatureAfterChange": " private String typesAsString(TypeBinding[] types, boolean makeShort)", "diff": ["-private String typesAsString(boolean isVarargs, TypeBinding[] types, boolean makeShort) {", "-\tfor (int i = 0, length = types.length; i < length; i++) {", "-\t\tif (i != 0)", "-\t\tTypeBinding type = types[i];", "-\t\tboolean isVarargType = isVarargs && i == length-1;", "-\t\tif (isVarargType) type = ((ArrayBinding)type).elementsType();", "-\t\tif (isVarargType) buffer.append(\"...\"); //$NON-NLS-1$", "+private String typesAsString(TypeBinding[] types, boolean makeShort) {", "+\tStringBuffer buffer = new StringBuffer(10);", "+\tfor (int i = 0, length = types.length; i < length; i++) {", "+\t\tif (i != 0) {", "+\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "+\t\t}", "+\t\tTypeBinding type = types[i];", "+\t\tbuffer.append(new String(makeShort ? type.shortReadableName() : type.readableName()));", "+\t}", "+\treturn buffer.toString();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "295afa37296e2387ffe8102ff3528fe2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "9275c96ab9e7e5e5f780672ec67bf57a1eb2d42e", "commitAfterChange": "437ac0488c92b5c24e88567c6caa0b204b0064ba", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 287, "signatureBeforeChange": " private String parametersAsString(TypeBinding[] params, boolean makeShort)", "signatureAfterChange": " private String typesAsString(boolean isVarargs, TypeBinding[] types, boolean makeShort)", "diff": ["-private String parametersAsString(TypeBinding[] params, boolean makeShort) {", "-\tStringBuffer buffer = new StringBuffer(10);", "-\tfor (int i = 0, length = params.length; i < length; i++) {", "-\t\tif (i != 0)", "-\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "-\t\tbuffer.append(new String(makeShort ? params[i].shortReadableName() : params[i].readableName()));", "-\t}", "-\treturn buffer.toString();", "-}", "+private String typesAsString(boolean isVarargs, TypeBinding[] types, boolean makeShort) {", "+\tStringBuffer buffer = new StringBuffer(10);", "+\tfor (int i = 0, length = types.length; i < length; i++) {", "+\t\tif (i != 0)", "+\t\t\tbuffer.append(\", \"); //$NON-NLS-1$", "+\t\tTypeBinding type = types[i];", "+\t\tboolean isVarargType = isVarargs && i == length-1;", "+\t\tif (isVarargType) type = ((ArrayBinding)type).elementsType();", "+\t\tbuffer.append(new String(makeShort ? type.shortReadableName() : type.readableName()));", "+\t\tif (isVarargType) buffer.append(\"...\"); //$NON-NLS-1$", "+\t}", "+\treturn buffer.toString();", "+}"]}], "num": 26312}