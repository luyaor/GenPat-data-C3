{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "32c6c9d806a9b36d52fcb60df12de93b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14bd6ab1dc1c3031032df46cd7d4b34e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsTests.java", "commitBeforeChange": "27612a777df418501ffa9535c686f7fa1f1cc84e", "commitAfterChange": "df0ced66f14be6d828e0c07bdfbf827df2636039", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " public void _testBlockComments13() throws JavaModelException", "signatureAfterChange": " public void testBlockComments13() throws JavaModelException", "diff": ["-// TODO (frederic) This one fail since 3.3 => the new comment formatter is not involved", "-public void _testBlockComments13() throws JavaModelException {", "-\tformatUnit(\"comments.block\", \"X13.java\");", "+public void testBlockComments13() throws JavaModelException {", "+\tString source =", "+\t\t\"package test.comments.block;\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"public class X13 {\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"protected void handleWarningToken(String token, boolean isEnabling) {\\r\\n\" + ", "+\t\t\"\tif (token.equals(\\\"pkgDefaultMethod___\\\") || token.equals(\\\"packageDefaultMethod___\\\")/*backward compatible*/ ) { //$NON-NLS-1$ //$NON-NLS-2$\\r\\n\" + ", "+\t\t\"\t}\\r\\n\" + ", "+\t\t\"}\\r\\n\" + ", "+\t\t\"}\\r\\n\";", "+\t// Difference with old formatter:", "+\t// 1) split comment block starts one tab before to avoid possible words over the max line length", "+\t//\t\tnote that in this peculiar this was not necessary as even the first word is over the max line length!", "+\tformatSource(source,", "+\t\t\"package test.comments.block;\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"public class X13 {\\r\\n\" + ", "+\t\t\"\\r\\n\" + ", "+\t\t\"\tprotected void handleWarningToken(String token, boolean isEnabling) {\\r\\n\" + ", "+\t\t\"\t\tif (token.equals(\\\"pkgDefaultMethod___\\\") || token.equals(\\\"packageDefaultMethod___\\\")/*\\r\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t * backward\\r\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t * compatible\\r\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t */) { //$NON-NLS-1$ //$NON-NLS-2$\\r\\n\" + ", "+\t\t\"\t\t}\\r\\n\" + ", "+\t\t\"\t}\\r\\n\" + ", "+\t\t\"}\\r\\n\",", "+\t\tfalse /* do not repeat */", "+\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a8c96706dbfb2cdaf97c5a28a1cb7d19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterCommentsTests.java", "commitBeforeChange": "02923f16f1c823a00fbe6663157d3da79aaee5af", "commitAfterChange": "90d281c6abe2405cdd6eb338ead640e6b6f0225a", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " public void testBlockComments13() throws JavaModelException", "signatureAfterChange": " public void testBlockComments13() throws JavaModelException", "diff": ["-\t\t\"\tif (token.equals(\\\"pkgDefaultMethod___\\\") || token.equals(\\\"packageDefaultMethod___\\\")/*backward compatible*/ ) { //$NON-NLS-1$ //$NON-NLS-2$\\r\\n\" + ", "+\t\t\"\tif (token.equals(\\\"pkgDefaultMethod___\\\") || token.equals(\\\"packageDefaultMethod___\\\")/*_backward_ _compatible_*/ ) {\\r\\n\" + ", "-\t\t\"package test.comments.block;\\r\\n\" + ", "-\t\t\"\\r\\n\" + ", "-\t\t\"public class X13 {\\r\\n\" + ", "-\t\t\"\\r\\n\" + ", "-\t\t\"\tprotected void handleWarningToken(String token, boolean isEnabling) {\\r\\n\" + ", "-\t\t\"\t\tif (token.equals(\\\"pkgDefaultMethod___\\\") || token.equals(\\\"packageDefaultMethod___\\\")/*\\r\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t * backward\\r\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t * compatible\\r\\n\" + ", "-\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t */) { //$NON-NLS-1$ //$NON-NLS-2$\\r\\n\" + ", "-\t\t\"\t\t}\\r\\n\" + ", "-\t\t\"\t}\\r\\n\" + ", "-\t\t\"}\\r\\n\",", "-\t\tfalse /* do not repeat */", "+\t\t\"package test.comments.block;\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"public class X13 {\\n\" + ", "+\t\t\"\\n\" + ", "+\t\t\"\tprotected void handleWarningToken(String token, boolean isEnabling) {\\n\" + ", "+\t\t\"\t\tif (token.equals(\\\"pkgDefaultMethod___\\\")\\n\" + ", "+\t\t\"\t\t\t\t|| token.equals(\\\"packageDefaultMethod___\\\")/*\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t * _backward_\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t * _compatible_\\n\" + ", "+\t\t\"\t\t\t\t\t\t\t\t\t\t\t\t\t\t */) {\\n\" + ", "+\t\t\"\t\t}\\n\" + ", "+\t\t\"\t}\\n\" + ", "+\t\t\"}\\n\""]}], "num": 5862}