{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fe3c4af29a1666d48f465077411f669b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1be7265644a30c789926d0aca97bc801", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "0534618c17c0b5f6c361eb5acf9c22731255984f", "commitAfterChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "methodNumberBeforeChange": 402, "methodNumberAfterChange": 429, "signatureBeforeChange": " protected boolean resumeAfterRecovery()", "signatureAfterChange": " protected boolean resumeAfterRecovery()", "diff": ["-", "-\t// reset internal stacks ", "-\tthis.resetStacks();", "-\tthis.resetModifiers();", "+\tif(!this.methodRecoveryActivated && !this.statementRecoveryActivated) {", "+\t\t", "+\t\t// reset internal stacks ", "+\t\tthis.resetStacks();", "+\t\tthis.resetModifiers();", "+\t\t", "+\t\t/* attempt to move checkpoint location */", "+\t\tif (!this.moveRecoveryCheckpoint()) {", "+\t\t\treturn false;", "+\t\t}", "-\t/* attempt to move checkpoint location */", "-\tif (!this.moveRecoveryCheckpoint()) {", "+\t\t// only look for headers", "+\t\tif (this.referenceContext instanceof CompilationUnitDeclaration){", "+\t\t\tgoForHeaders();", "+\t\t\tthis.diet = true; // passed this point, will not consider method bodies", "+\t\t\treturn true;", "+\t\t}", "+\t\t", "+\t\t// does not know how to restart", "+\t\treturn false;", "+\t} else if(!this.statementRecoveryActivated) {", "+\t\t", "+\t\t// reset internal stacks ", "+\t\tthis.resetStacks();", "+\t\tthis.resetModifiers();", "+\t\t", "+\t\t/* attempt to move checkpoint location */", "+\t\tif (!this.moveRecoveryCheckpoint()) {", "+\t\t\treturn false;", "+\t\t}", "+\t\t", "+\t\t// only look for headers", "+\t\tgoForHeaders();", "+\t\treturn true;", "+\t} else {", "-", "-\t// only look for headers", "-\tif (this.referenceContext instanceof CompilationUnitDeclaration){", "-\t\tgoForHeaders();", "-\t\tthis.diet = true; // passed this point, will not consider method bodies", "-\t\treturn true;", "-\t}", "-\t// does not know how to restart", "-\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20f155a5fa9294a59ee6ba65870cd0f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic boolean equals(Object object)", "signatureAfterChange": " \tpublic boolean equals(Object object)", "diff": ["+\t\t\t\treturn false;", "+", "+\t\t\tif (this.isCleaningOutputLocation != otherEntry.isCleaningOutputLocation())", "+\t\t\t", "+\t\t\totherPath = otherEntry.getOutputLocation();", "+\t\t\tif (this.specificOutputLocation == null) {", "+\t\t\t\tif (otherPath != null)", "+\t\t\t\t\treturn false;", "+\t\t\t} else {", "+\t\t\t\tif (!this.specificOutputLocation.equals(otherPath))", "+\t\t\t\t\treturn false;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3194165e905d8b2a34881e49d1766cf1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic boolean equals(Object object)", "signatureAfterChange": " \tpublic boolean equals(Object object)", "diff": ["+\t\t\tif (!equalPatterns(this.accessibleFiles, otherEntry.getAccessibleFiles()))", "+\t\t\t\treturn false;", "+\t\t\tif (!equalPatterns(this.nonAccessibleFiles, otherEntry.getNonAccessibleFiles()))", "+\t\t\t\treturn false;", "+\t\t\tif (!equalAttributes(this.extraAttributes, otherEntry.getExtraAttributes()))", "+\t\t\t\treturn false;"]}], "num": 35248}