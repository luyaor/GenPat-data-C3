{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d36d45285dcc2ca04909932311b80e47", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34546e1cf50e0e91f2ad8f74ad147639", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "050b48aa4655d04d8ebd3c1cccebaabdd5848e02", "commitAfterChange": "dd23dd84454d0fa5c72d126d13e15a9ff7a73fdd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tMethodBinding matchingMethod, \t\tObjectVector found)", "signatureAfterChange": " \tpublic MethodBinding findDefaultAbstractMethod( \t\tReferenceBinding receiverType,  \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite, \t\tReferenceBinding classHierarchyStart, \t\tMethodBinding matchingMethod, \t\tObjectVector found)", "diff": ["-\t\tif (foundSize == startFoundSize) return matchingMethod; // maybe null", "-", "+\t\tif (foundSize == startFoundSize) {", "+\t\t\tif (matchingMethod != null) compilationUnitScope().recordTypeReferences(matchingMethod.thrownExceptions);", "+\t\t\treturn matchingMethod; // maybe null", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e21f7a1e66a3353e309c36d9999bd2e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "f908d0c09b5bf34a0f6e90dacd8d551c0f19870c", "commitAfterChange": "2d9e2019b5b59684e0488ab5bab1ae5850c1ca71", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "signatureAfterChange": "  \tpublic void generateCompoundAssignment( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tExpression expression, \t\tint operator, \t\tint assignmentImplicitConversion, \t\tboolean valueRequired)", "diff": ["+\t\t\t\tif (this.genericCast != null)", "+\t\t\t\t\tcodeStream.checkcast(this.genericCast);\t\t\t\t"]}], "num": 51215}