{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ab52f514f62d5d152d1fb6ea47b887d2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b3d91ec45cb8db459b153abc59f9d3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/TypeAnnotationSyntaxTest.java", "commitBeforeChange": "ac89e34b658454668afe2f1f4be9617e74cd6624", "commitAfterChange": "5ea91ed47e2e2277fa878fc631fcabfaf9ef89b3", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 128, "signatureBeforeChange": "\r public void test0111() throws IOException", "signatureAfterChange": "\r public void test0111() throws IOException", "diff": ["-\tString expectedError =\r", "-\t\t\t\"----------\\n\" +\r", "-\t\t\t\"1. ERROR in test0111 (at line 6)\\n\" +\r", "-\t\t\t\"\tnew <@Readonly String> @Marker @SingleMember(0) X(\\\"SUCCESS\\\");\\n\" +\r", "-\t\t\t\"\t                       ^^^^^^^^^^^^^^^^^^^^^\\n\" +\r", "-\t\t\t\"Syntax error, type annotations are illegal here\\n\" +\r", "-\t\t\t\"----------\\n\";\r", "-\tcheckParse(CHECK_PARSER, source.toCharArray(), expectedError, \"test0111\", null);\r", "+\tString expectedUnitToString =\r", "+\t\t\t\"class X {\\n\" +\r", "+\t\t\t\"  public <T>X(T t) {\\n\" +\r", "+\t\t\t\"    super();\\n\" +\r", "+\t\t\t\"    System.out.println(t);\\n\" +\r", "+\t\t\t\"  }\\n\" +\r", "+\t\t\t\"  public static void main(String[] args) {\\n\" +\r", "+\t\t\t\"    new <@Readonly String>@Marker @SingleMember(0) X(\\\"SUCCESS\\\");\\n\" +\r", "+\t\t\t\"  }\\n\" +\r", "+\t\t\t\"}\\n\";\r", "+\tcheckParse(CHECK_PARSER, source.toCharArray(), null, \"test0111\", expectedUnitToString);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0d0e1a5226a97dda815e04781deb33f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/TypeAnnotationSyntaxTest.java", "commitBeforeChange": "ac89e34b658454668afe2f1f4be9617e74cd6624", "commitAfterChange": "5ea91ed47e2e2277fa878fc631fcabfaf9ef89b3", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 127, "signatureBeforeChange": "\r public void test0110() throws IOException", "signatureAfterChange": "\r public void test0110() throws IOException", "diff": ["-\tString expectedError =\r", "-\t\t\t\"----------\\n\" +\r", "-\t\t\t\"1. ERROR in test0110 (at line 8)\\n\" +\r", "-\t\t\t\"\tnew @Marker @SingleMember(10) X().new <@Readonly String> @Marker MX(\\\"SUCCESS\\\");\\n\" +\r", "-\t\t\t\"\t                                                         ^^^^^^^\\n\" +\r", "-\t\t\t\"Syntax error, type annotations are illegal here\\n\" +\r", "-\t\t\t\"----------\\n\";\r", "-\tcheckParse(CHECK_PARSER, source.toCharArray(), expectedError, \"test0110\", null );\r", "+\tString expectedUnitToString =\r", "+\t\t\t\"class X {\\n\" +\r", "+\t\t\t\"  class MX {\\n\" +\r", "+\t\t\t\"    @Marker <T>MX(T t) {\\n\" +\r", "+\t\t\t\"      super();\\n\" +\r", "+\t\t\t\"      System.out.println(t);\\n\" +\r", "+\t\t\t\"    }\\n\" +\r", "+\t\t\t\"  }\\n\" +\r", "+\t\t\t\"  X() {\\n\" +\r", "+\t\t\t\"    super();\\n\" +\r", "+\t\t\t\"  }\\n\" +\r", "+\t\t\t\"  public static void main(String[] args) {\\n\" +\r", "+\t\t\t\"    new @Marker @SingleMember(10) X().new <@Readonly String>@Marker MX(\\\"SUCCESS\\\");\\n\" +\r", "+\t\t\t\"  }\\n\" +\r", "+\t\t\t\"}\\n\";\r", "+\tcheckParse(CHECK_PARSER, source.toCharArray(), null, \"test0110\", expectedUnitToString);\r"]}], "num": 54669}