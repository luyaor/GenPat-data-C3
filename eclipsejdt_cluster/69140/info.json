{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c426130e52a54be23e8149b2e0a5e1b8", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7163d8a998f8e7a625edf920269b5e81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "d8fdcf17a6a4f58acd9ec9d53426880134d9869a", "commitAfterChange": "e0a0631e6ad0dd184a0c6f7c90e330e7c7d93f89", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 66, "signatureBeforeChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, ObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findTypesFromStaticImports(char[] token, Scope scope, ObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\tif (typeBinding.isClass()){", "+\t\t\t\t\t\t\tif (typeBinding.isClass()) {", "-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\tthis.noProposal = false;", "-\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "-\t\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "-\t\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(typeBinding.qualifiedPackageName());", "-\t\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(typeBinding));", "-\t\t\t\t\t\t\t\t\tproposal.setPackageName(typeBinding.qualifiedPackageName());", "-\t\t\t\t\t\t\t\t\tproposal.setTypeName(typeBinding.qualifiedSourceName());", "-\t\t\t\t\t\t\t\t\tproposal.setCompletion(typeBinding.sourceName());", "-\t\t\t\t\t\t\t\t\tproposal.setFlags(typeBinding.modifiers);", "-\t\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "-\t\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "-\t\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "-\t\t\t\t\t\t\t\t\tif(DEBUG) {", "-\t\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "-\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t} else if(typeBinding.isEnum()) {", "+\t\t\t\t\t\t\t\trelevance += computeRelevanceForEnum();", "+\t\t\t\t\t\t\t} else if(typeBinding.isInterface()) {", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t\tthis.noProposal = false;", "-\t\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "-\t\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "-\t\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(typeBinding.qualifiedPackageName());", "-\t\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(typeBinding));", "-\t\t\t\t\t\t\t\t\tproposal.setPackageName(typeBinding.qualifiedPackageName());", "-\t\t\t\t\t\t\t\t\tproposal.setTypeName(typeBinding.qualifiedSourceName());", "-\t\t\t\t\t\t\t\t\tproposal.setCompletion(typeBinding.sourceName());", "-\t\t\t\t\t\t\t\t\tproposal.setFlags(typeBinding.modifiers);", "-\t\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "-\t\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "-\t\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "-\t\t\t\t\t\t\t\t\tif(DEBUG) {", "-\t\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tthis.noProposal = false;", "+\t\t\t\t\t\t\tif(!this.requestor.isIgnored(CompletionProposal.TYPE_REF)) {", "+\t\t\t\t\t\t\t\tCompletionProposal proposal = this.createProposal(CompletionProposal.TYPE_REF, this.actualCompletionPosition);", "+\t\t\t\t\t\t\t\tproposal.setDeclarationSignature(typeBinding.qualifiedPackageName());", "+\t\t\t\t\t\t\t\tproposal.setSignature(getSignature(typeBinding));", "+\t\t\t\t\t\t\t\tproposal.setPackageName(typeBinding.qualifiedPackageName());", "+\t\t\t\t\t\t\t\tproposal.setTypeName(typeBinding.qualifiedSourceName());", "+\t\t\t\t\t\t\t\tproposal.setCompletion(typeBinding.sourceName());", "+\t\t\t\t\t\t\t\tproposal.setFlags(typeBinding.modifiers);", "+\t\t\t\t\t\t\t\tproposal.setReplaceRange(this.startPosition - this.offset, this.endPosition - this.offset);", "+\t\t\t\t\t\t\t\tproposal.setRelevance(relevance);", "+\t\t\t\t\t\t\t\tthis.requestor.accept(proposal);", "+\t\t\t\t\t\t\t\tif(DEBUG) {", "+\t\t\t\t\t\t\t\t\tthis.printDebug(proposal);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c88bb9e3735a98ba8cd4e82e2890e3a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "59f134d776625487d5c6b62a9862cfb00a070d3e", "commitAfterChange": "96b4864be18ed8951f75fa1c52f7e975191f2b07", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["-\t\t\tif (typeBinding.isInterface()) {", "+\t\t\t", "+\t\t\tif(typeBinding instanceof ProblemReferenceBinding) {", "+\t\t\t\ttypeBinding = ((ProblemReferenceBinding) typeBinding).original;", "+\t\t\t}", "+\t\t\t", "+\t\t\tif (isLocal(typeBinding) && this.requestor instanceof SelectionRequestor) {", "-\t\t\t\tif (isLocal(typeBinding) && this.requestor instanceof SelectionRequestor) {", "-\t\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "-\t\t\t\t\t}", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(typeBinding);", "-\t\t\t\t} else {", "-\t\t\t\t\tchar[] genericTypeSignature = null;", "-\t\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "-\t\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "-\t\t\t\t\t}", "+\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "+\t\t\t\t\tcompleteLocalTypes(typeBinding);", "+\t\t\t\t}", "+\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(typeBinding);", "+\t\t\t} else {", "+\t\t\t\tthis.noProposal = false;", "+\t\t\t\t", "+\t\t\t\tchar[] genericTypeSignature = null;", "+\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "+\t\t\t\t\tcompleteLocalTypes(typeBinding);", "+\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "+\t\t\t\t}", "+\t\t\t\tif (typeBinding.isAnnotationType()) {", "+\t\t\t\t\tthis.requestor.acceptAnnotation(", "+\t\t\t\t\t\ttypeBinding.qualifiedPackageName(),", "+\t\t\t\t\t\ttypeBinding.qualifiedSourceName(),", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tgenericTypeSignature,", "+\t\t\t\t\t\tthis.actualSelectionStart,", "+\t\t\t\t\t\tthis.actualSelectionEnd);", "+\t\t\t\t} else if (typeBinding.isInterface()) {", "-\t\t\t\t}", "-\t\t\t} else if(typeBinding instanceof ProblemReferenceBinding){", "-\t\t\t\tReferenceBinding original = ((ProblemReferenceBinding) typeBinding).original;", "-\t\t\t\tif(original == null) return;", "-\t\t\t\tthis.noProposal = false;", "-\t\t\t\tif (isLocal(original) && this.requestor instanceof SelectionRequestor) {", "-\t\t\t\t\tif(original.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(original);", "-\t\t\t\t\t}", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(original);", "-\t\t\t\t} else {", "-\t\t\t\t\tchar[] genericTypeSignature = null;", "-\t\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "-\t\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.requestor.acceptClass(", "-\t\t\t\t\t\toriginal.qualifiedPackageName(),", "-\t\t\t\t\t\toriginal.qualifiedSourceName(),", "+\t\t\t\t} else if (typeBinding.isEnum()) {", "+\t\t\t\t\tthis.requestor.acceptEnum(", "+\t\t\t\t\t\ttypeBinding.qualifiedPackageName(),", "+\t\t\t\t\t\ttypeBinding.qualifiedSourceName(),", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tthis.noProposal = false;", "-\t\t\t\tif (isLocal(typeBinding) && this.requestor instanceof SelectionRequestor) {", "-\t\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "-\t\t\t\t\t}", "-\t\t\t\t\t((SelectionRequestor)this.requestor).acceptLocalType(typeBinding);", "-\t\t\t\t\tchar[] genericTypeSignature = null;", "-\t\t\t\t\tif(typeBinding.isParameterizedType() || typeBinding.isRawType()) {", "-\t\t\t\t\t\tcompleteLocalTypes(typeBinding);", "-\t\t\t\t\t\tgenericTypeSignature = typeBinding.computeUniqueKey();", "-\t\t\t\t\t}", "+\t\t\t\t\tthis.noProposal = false;"]}], "num": 69140}