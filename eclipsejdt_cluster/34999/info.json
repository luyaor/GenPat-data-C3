{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4b3a4ce7fccea59d67898045bf7a6dc", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "137983078467b04764a9d4d34d0188f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "1d9c797e2d535a723d97129a4995a501f060e8fc", "commitAfterChange": "45457c087850a9bcb1e2d528c971be662d0a4e96", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void fillInDefaultNonNullness(TypeBinding annotationBinding)", "signatureAfterChange": " protected void fillInDefaultNonNullness(TypeBinding annotationBinding)", "diff": ["-\tfor (int i = 0; i < this.parameterNonNullness.length; i++) {", "+\tboolean added = false;", "+\tint length = this.parameterNonNullness.length;", "+\tfor (int i = 0; i < length; i++) {", "-\t\tboolean added = false;", "-\t\tif (added)", "-\t\t\tthis.tagBits |= TagBits.HasParameterAnnotations;", "+\tif (added)", "+\t\tthis.tagBits |= TagBits.HasParameterAnnotations;", "-\t\t\tsourceMethod.addNullnessAnnotation((ReferenceBinding)annotationBinding);", "+\t\t\tsourceMethod.addNonNullAnnotation((ReferenceBinding)annotationBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3fdcfa37d9c2801ed467757769643f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "e3216b16627ead1fc92c7b9c7ba781e891ae2552", "commitAfterChange": "43497388c1b074873dbf4e928e2bdb93bbcc87f9", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["-\t\tif (patterns != null) {", "+\t\tint length;", "+\t\tif ((length = patterns.length) > 0) {", "-\t\t\tfor (int i = 0, length = patterns.length; i < length; i++) {", "+\t\t\tfor (int i = 0; i < length; i++) {"]}], "num": 34999}