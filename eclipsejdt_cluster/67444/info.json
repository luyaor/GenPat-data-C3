{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2381d3755a0e496d5d1574bfd1ad08b8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "120c4e94c606914b73352a387a976f21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/VariableElementImpl.java", "commitBeforeChange": "bbb750998e75511ba75783c9f2d763f2e32279d9", "commitAfterChange": "02bf4272774dd4f6faf4897c054614bdc809ab9e", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \t@Override \tpublic Element getEnclosingElement()", "signatureAfterChange": "  \t@Override \tpublic Element getEnclosingElement()", "diff": ["-\t\telse if (_binding instanceof LocalVariableBinding){", "-\t\t\t//TODO: return enclosing method binding", "-\t\t\tthrow new UnsupportedOperationException(\"NYI: VariableElementImpl.getEnclosingElement()\"); //$NON-NLS-1$", "+\t\telse if (_binding instanceof AptSourceLocalVariableBinding){", "+\t\t\treturn _env.getFactory().newElement(((AptSourceLocalVariableBinding) _binding).methodBinding);", "+\t\t} else if (_binding instanceof AptBinaryLocalVariableBinding) {", "+\t\t\treturn _env.getFactory().newElement(((AptBinaryLocalVariableBinding) _binding).methodBinding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b9903e32905675e3267e9288fbc2298", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "e254cb1235fced696c16505589db91831c0df710", "commitAfterChange": "fdf4380d8dd2e7b1f08462c3e15a52a8d6142eb4", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "     @Override     public DeclaredType getDeclaredType(DeclaredType containing, TypeElement typeElem,             TypeMirror... typeArgs)", "signatureAfterChange": "     @Override     public DeclaredType getDeclaredType(DeclaredType containing, TypeElement typeElem,             TypeMirror... typeArgs)", "diff": ["-        ReferenceBinding referenceBinding = (ReferenceBinding) typeElementImpl._binding;", "-        TypeVariableBinding[] typeVariables = referenceBinding.typeVariables();", "+        ReferenceBinding elementBinding = (ReferenceBinding) typeElementImpl._binding;", "+        TypeVariableBinding[] typeVariables = elementBinding.typeVariables();", "-            if (referenceBinding.isGenericType()) {", "-                // must return a raw type", "-                return (DeclaredType) _env.getFactory().newTypeMirror(this._env.getLookupEnvironment().createRawType(referenceBinding, enclosingType));", "+            if (elementBinding.isGenericType()) {", "+                // e.g., Outer.Inner<T> but T is not specified", "+                // Per javadoc on interface, must return the raw type Outer.Inner", "+                return (DeclaredType) _env.getFactory().newTypeMirror(", "+                        _env.getLookupEnvironment().createRawType(elementBinding, enclosingType));", "+            } else {", "+                // e.g., Outer<Long>.Inner", "+                ParameterizedTypeBinding ptb = _env.getLookupEnvironment().createParameterizedType(elementBinding, null, enclosingType);", "+                return (DeclaredType) _env.getFactory().newTypeMirror(ptb);", "-            // TODO (see how to create a member type binding", "-            throw new UnsupportedOperationException(\"NYI: TypesImpl.getDeclaredType(...) for member types\"); //$NON-NLS-1$", "-                this._env.getLookupEnvironment().createParameterizedType(referenceBinding, typeArguments, enclosingType));", "+                this._env.getLookupEnvironment().createParameterizedType(elementBinding, typeArguments, enclosingType));"]}], "num": 67444}