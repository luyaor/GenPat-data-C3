{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8410762f9cf2a8c527e49ac8d0464ccb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c27b093f6deb89a8be1b2a2be5d847e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFoldersManager.java", "commitBeforeChange": "40eac8059a53961d90f717be2da5fcbf0c755e95", "commitAfterChange": "53bc343588c2b2b6eb1ea59b00d820f1868f0f5f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate IProject createExternalFoldersProject(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tprivate IProject createExternalFoldersProject(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\ttry {", "-\t\t\t\tproject.open(monitor);", "-\t\t\t} catch (CoreException e1) {", "-\t\t\t\tif (e1.getStatus().getCode() == IResourceStatus.FAILED_READ_METADATA) {", "-\t\t\t\t\t// workspace was moved (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=241400)", "-\t\t\t\t\tproject.delete(true, monitor);", "-\t\t\t\t\tcreateExternalFoldersProject(project, monitor);", "-\t\t\t\t} else {", "-\t\t\t\t\t// .project or folder on disk have been deleted, recreate them", "-\t\t\t\t\tIPath stateLocation = DEBUG ? ResourcesPlugin.getWorkspace().getRoot().getLocation() : JavaCore.getPlugin().getStateLocation();", "-\t\t\t\t\tIPath projectPath = stateLocation.append(EXTERNAL_PROJECT_NAME);", "-\t\t\t\t\tprojectPath.toFile().mkdirs();", "-\t\t\t\t\ttry {", "-\t\t\t\t\t    FileOutputStream output = new FileOutputStream(projectPath.append(\".project\").toOSString()); //$NON-NLS-1$", "-\t\t\t\t\t    try {", "-\t\t\t\t\t        output.write((", "-\t\t\t\t\t        \t\t\"<?xml version=\\\"1.0\\\" encoding=\\\"UTF-8\\\"?>\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t        \t\t\"<projectDescription>\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t        \t\t\"\t<name>\" + EXTERNAL_PROJECT_NAME + \"</name>\\n\" + //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\t\t        \t\t\"\t<comment></comment>\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t        \t\t\"\t<projects>\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t        \t\t\"\t</projects>\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t        \t\t\"\t<buildSpec>\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t        \t\t\"\t</buildSpec>\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t        \t\t\"\t<natures>\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t        \t\t\"\t</natures>\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t        \t\t\"</projectDescription>\").getBytes()); //$NON-NLS-1$", "-\t\t\t\t\t    } finally {", "-\t\t\t\t\t        output.close();", "-\t\t\t\t\t    }", "-\t\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t\t// fallback to re-creating the project", "-\t\t\t\t\t\tproject.delete(true, monitor);", "-\t\t\t\t\t\tcreateExternalFoldersProject(project, monitor);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tproject.open(monitor);", "-\t\t\t}", "+\t\t\topenExternalFoldersProject(project, monitor);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3da2785a587bcc2dcc14671841a89967", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/APIDocumentationTests.java", "commitBeforeChange": "9892e22e3cda97844e8704bc9ff3072e4e043b62", "commitAfterChange": "fe412add93d4cfbb83d610f46ca1de0e6d064ca7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void test001() throws CoreException, IllegalArgumentException, IllegalAccessException, IOException", "signatureAfterChange": " public void testJavaCoreAPI() throws CoreException, IllegalArgumentException, IllegalAccessException, IOException", "diff": ["-public void test001() throws CoreException, IllegalArgumentException, IllegalAccessException, IOException {", "+public void testJavaCoreAPI() throws CoreException, IllegalArgumentException, IllegalAccessException, IOException {", "+", "+", "+\t// 1. attempt: workspace relative location in project org.eclipse.jdt.core:", "-System.err.println(\"Bundle URL = \"+url);", "-System.err.println(\"Bundle path = \"+path);", "-\tpath = path.removeLastSegments(1).append(\"org.eclipse.jdt.core\");", "-System.err.println(\"jdt.core path = \"+path);", "-\tString stringPath = path.toString() + \"/model/org/eclipse/jdt/core/JavaCore.java\"; ", "+\tpath = path.removeLastSegments(1).append(ORG_ECLIPSE_JDT_CORE);", "+\tString stringPath = path.toString() + \"/model/\" + PATH_JAVA_CORE_JAVA; ", "-System.err.println(\"JavaCore.java = \"+javaCoreSourceFile+\" exists? \"+javaCoreSourceFile.exists());", "-\t\tsourceChars = org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(javaCoreSourceFile, null);", "+\t\tsourceChars = Util.getFileCharContent(javaCoreSourceFile, null);", "-\t\t// experimental Q&D tweak: try to find the source bundle by manipulating the file name of the regular bundle's location:", "-\t\t@SuppressWarnings(\"deprecation\")Bundle[] sourceBundles = org.eclipse.jdt.core.tests.Activator.getPackageAdmin().getBundles(\"org.eclipse.jdt.core\", null);", "+\t\t// 2. attempt: locate org.eclipse.jdt.core.source jar next to org.eclipse.jdt.core jar:", "+\t\t@SuppressWarnings(\"deprecation\")Bundle[] sourceBundles =", "+\t\t\t\torg.eclipse.jdt.core.tests.Activator.getPackageAdmin().getBundles(ORG_ECLIPSE_JDT_CORE, null);", "-System.err.println(\"Source Bundle = \"+bundle);", "-System.err.println(\"Bundle Location = \"+stringPath);", "-\t\t\tif (stringPath.startsWith(\"reference:file:\"))", "-\t\t\t\tstringPath = stringPath.substring(\"reference:file:\".length());", "-\t\t\tstringPath = stringPath.replace(\"org.eclipse.jdt.core\", \"org.eclipse.jdt.core.source\");", "-System.err.println(\"Source Bundle Location = \"+stringPath);", "+\t\t\tif (stringPath.startsWith(REFERENCE_FILE_SCHEMA))", "+\t\t\t\tstringPath = stringPath.substring(REFERENCE_FILE_SCHEMA.length());", "+\t\t\tstringPath = stringPath.replace(ORG_ECLIPSE_JDT_CORE, ORG_ECLIPSE_JDT_CORE_SOURCE);", "-System.err.println(\"Jar File = \"+jarFile+\" exists? \"+jarFile.exists());", "-\t\t\t\t\tZipEntry entry = zipFile.getEntry(\"org/eclipse/jdt/core/JavaCore.java\");", "-System.err.println(\"Zip Entry = \"+entry);", "-System.err.println(\"Zip Entry Size = \"+entry.getSize());", "+\t\t\t\t\tZipEntry entry = zipFile.getEntry(PATH_JAVA_CORE_JAVA);", "-\t\t\t\t\t\tsourceChars = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(inputStream, (int)entry.getSize(), null);", "+\t\t\t\t\t\tsourceChars = Util.getInputStreamAsCharArray(inputStream, (int)entry.getSize(), null);", "+\t"]}], "num": 34891}