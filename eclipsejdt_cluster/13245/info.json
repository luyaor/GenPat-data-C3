{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a646bdfcb8d4c9a28b7601e104c100d9", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d887293abe2c19eab57ce0a0c82d885", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "811f4b05d58ca33710b13af0352652814cf9e788", "commitAfterChange": "2270533a2db02a384cae364b95bf4d107920358d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void resolve(BlockScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(BlockScope upperScope)", "diff": ["+\t\t\tboolean isTargetJsr14 = this.scope.compilerOptions().targetJDK == ClassFileConstants.JDK1_4;", "+\t\t\t\tif (iterableType == null && isTargetJsr14) {", "+\t\t\t\t\titerableType = ((ReferenceBinding)collectionType).findSuperTypeOriginatingFrom(T_JavaUtilCollection, false /*Iterable is not a class*/);", "+\t\t\t\t}", "-\t\t\t\t\tif (((ReferenceBinding)this.iteratorReceiverType).findSuperTypeOriginatingFrom(T_JavaLangIterable, false) == null) {", "+\t\t\t\t\tif (isTargetJsr14) {", "+\t\t\t\t\t\tif (((ReferenceBinding)this.iteratorReceiverType).findSuperTypeOriginatingFrom(T_JavaUtilCollection, false) == null) {", "+\t\t\t\t\t\t\tthis.iteratorReceiverType = iterableType; // handle indirect inheritance thru variable secondary bound", "+\t\t\t\t\t\t\tthis.collection.computeConversion(this.scope, iterableType, collectionType);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tthis.collection.computeConversion(this.scope, collectionType, collectionType);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else if (((ReferenceBinding)this.iteratorReceiverType).findSuperTypeOriginatingFrom(T_JavaLangIterable, false) == null) {", "-\t\t\t\t\tthis.scope.problemReporter().invalidTypeForCollection(this.collection);", "+\t\t\t\t\tif (isTargetJsr14) {", "+\t\t\t\t\t\tthis.scope.problemReporter().invalidTypeForCollectionTarget14(this.collection);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.scope.problemReporter().invalidTypeForCollection(this.collection);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a4aa45ee5e0c1bba219a0bc4faa508f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": "  private void evaluateNullAnnotations(long annotationTagBits)", "signatureAfterChange": "  private void evaluateNullAnnotations(long annotationTagBits)", "diff": ["-\t// transfer nullness info from tagBits to this.nullnessDefaultAnnotation", "-\tint newDefaultNullness = NO_NULL_DEFAULT;", "-\tif ((annotationTagBits & TagBits.AnnotationNullUnspecifiedByDefault) != 0)", "-\t\tnewDefaultNullness = NULL_UNSPECIFIED_BY_DEFAULT;", "-\telse if ((annotationTagBits & TagBits.AnnotationNonNullByDefault) != 0)", "-\t\tnewDefaultNullness = NONNULL_BY_DEFAULT;", "-\tif (newDefaultNullness != NO_NULL_DEFAULT) {", "-\t\tif (isPackageInfo) {", "-\t\t\tpkg.defaultNullness = newDefaultNullness;", "-\t\t} else {", "-\t\t\tthis.defaultNullness = newDefaultNullness;", "-\t\t\tTypeDeclaration typeDecl = this.scope.referenceContext;", "-\t\t\tlong nullDefaultBits = annotationTagBits & (TagBits.AnnotationNullUnspecifiedByDefault|TagBits.AnnotationNonNullByDefault);", "-\t\t\tcheckRedundantNullnessDefaultRecurse(typeDecl, typeDecl.annotations, nullDefaultBits);", "+\tboolean isJdk18 = this.scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_8;", "+\tif (isJdk18) {", "+\t\tif (this.defaultNullness != 0) {", "+\t\t\tif (isPackageInfo) {", "+\t\t\t\tpkg.defaultNullness = this.defaultNullness;", "+\t\t\t} else {", "+\t\t\t\tTypeDeclaration typeDecl = this.scope.referenceContext;", "+\t\t\t\tcheckRedundantNullnessDefaultRecurse(typeDecl, typeDecl.annotations, this.defaultNullness, isJdk18);", "+\t\t\t}", "+\t\t} else if (isPackageInfo || (isInDefaultPkg && !(this instanceof NestedTypeBinding))) {", "+\t\t\tthis.scope.problemReporter().missingNonNullByDefaultAnnotation(this.scope.referenceContext);", "+\t\t\tif (!isInDefaultPkg)", "+\t\t\t\tpkg.defaultNullness = NULL_UNSPECIFIED_BY_DEFAULT;", "-\t} else if (isPackageInfo || (isInDefaultPkg && !(this instanceof NestedTypeBinding))) {", "-\t\tthis.scope.problemReporter().missingNonNullByDefaultAnnotation(this.scope.referenceContext);", "-\t\tif (!isInDefaultPkg)", "-\t\t\tpkg.defaultNullness = NULL_UNSPECIFIED_BY_DEFAULT;", "+\t} else {", "+\t\t// transfer nullness info from tagBits to this.nullnessDefaultAnnotation", "+\t\tint newDefaultNullness = NO_NULL_DEFAULT;", "+\t\tif ((annotationTagBits & TagBits.AnnotationNullUnspecifiedByDefault) != 0)", "+\t\t\tnewDefaultNullness = NULL_UNSPECIFIED_BY_DEFAULT;", "+\t\telse if ((annotationTagBits & TagBits.AnnotationNonNullByDefault) != 0)", "+\t\t\tnewDefaultNullness = NONNULL_BY_DEFAULT;", "+\t\tif (newDefaultNullness != NO_NULL_DEFAULT) {", "+\t\t\tif (isPackageInfo) {", "+\t\t\t\tpkg.defaultNullness = newDefaultNullness;", "+\t\t\t} else {", "+\t\t\t\tthis.defaultNullness = newDefaultNullness;", "+\t\t\t\tTypeDeclaration typeDecl = this.scope.referenceContext;", "+\t\t\t\tlong nullDefaultBits = annotationTagBits & (TagBits.AnnotationNullUnspecifiedByDefault|TagBits.AnnotationNonNullByDefault);", "+\t\t\t\tcheckRedundantNullnessDefaultRecurse(typeDecl, typeDecl.annotations, nullDefaultBits, false);", "+\t\t\t}", "+\t\t} else if (isPackageInfo || (isInDefaultPkg && !(this instanceof NestedTypeBinding))) {", "+\t\t\tthis.scope.problemReporter().missingNonNullByDefaultAnnotation(this.scope.referenceContext);", "+\t\t\tif (!isInDefaultPkg)", "+\t\t\t\tpkg.defaultNullness = NULL_UNSPECIFIED_BY_DEFAULT;", "+\t\t}", "+\t}", "+\tmaybeMarkTypeParametersNonNull();", "+}"]}], "num": 13245}