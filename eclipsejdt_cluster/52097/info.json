{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4dd18a8b414aede2c47a5352aa0d4bb5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e2909e0652165afea4dfdf7b83ce3e56", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/ParticipantBuildTests.java", "commitBeforeChange": "d85ef445439a7932d1fe7c7dafa9bf16e2d2dd51", "commitAfterChange": "17f252997734a1fb1f7e356e8b4b3c43b6ed95af", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic void testProcessAnnotationReferences2() throws JavaModelException", "signatureAfterChange": "  \tpublic void testProcessAnnotationQualifiedReferences() throws JavaModelException", "diff": ["+\tpublic void testProcessAnnotationQualifiedReferences() throws JavaModelException {", "+\t\tIPath projectPath = env.addProject(\"Project\", \"1.5\"); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\tenv.addExternalJars(projectPath, Util.getJavaClassLibs());", "+\t\tenv.removePackageFragmentRoot(projectPath, \"\"); //$NON-NLS-1$", "+\t\tIPath root = env.addPackageFragmentRoot(projectPath, \"src\"); //$NON-NLS-1$", "+\t\tenv.setOutputFolder(projectPath, \"bin\"); //$NON-NLS-1$", "+", "+\t\tenv.addClass(root, \"p1\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"package p1;\\n\" + //$NON-NLS-1$", "+\t\t\t\"@GeneratedAnnotation\\n\" + //$NON-NLS-1$", "+\t\t\t\"public class Test { public void method() { p1.p2.GeneratedType.method(); } }\\n\" //$NON-NLS-1$", "+\t\t\t);", "+", "+\t\tenv.addClass(root, \"p1\", \"GeneratedAnnotation\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"package p1;\\n\" + //$NON-NLS-1$", "+\t\t\t\"@interface GeneratedAnnotation{}\\n\" //$NON-NLS-1$", "+\t\t\t);", "+", "+\t\t// install compilationParticipant", "+\t\tnew BuildTestParticipant() {", "+\t\t\tpublic boolean isAnnotationProcessor() {", "+\t\t\t\treturn true;", "+\t\t\t}", "+\t\t\tpublic void processAnnotations(ICompilationParticipantResult[] files) {", "+\t\t\t\t// want to add a gen'ed source file that is referenced from the initial file to see if its recompiled", "+\t\t\t\tICompilationParticipantResult result = files[0];", "+\t\t\t\tIFile genedType = result.getFile().getProject().getFile(new Path(\"src/p1/p2/GeneratedType.java\")); //$NON-NLS-1$", "+\t\t\t\tif (genedType.exists()) return;", "+\t\t\t\ttry {", "+\t\t\t\t\tIFolder folder = (IFolder) genedType.getParent();", "+\t\t\t\t\tif(!folder.exists())", "+\t\t\t\t\t\tfolder.create(true, true, null);\t\t\t\t", "+\t\t\t\t\tgenedType.create(new ByteArrayInputStream(\"package p1.p2; public class GeneratedType { public static void method(){} }\".getBytes()), true, null); //$NON-NLS-1$", "+\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\te.printStackTrace();", "+\t\t\t\t}", "+\t\t\t\tresult.recordAddedGeneratedFiles(new IFile[] {genedType});", "+\t\t\t}", "+\t\t};", "+", "+\t\tfullBuild(projectPath);", "+\t\texpectingNoProblems();", "+\t}", "-", "-\tpublic void testProcessAnnotationReferences2() throws JavaModelException {", "-\t\tIPath projectPath = env.addProject(\"Project\", \"1.5\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t\tenv.addExternalJars(projectPath, Util.getJavaClassLibs());", "-\t\tenv.removePackageFragmentRoot(projectPath, \"\"); //$NON-NLS-1$", "-\t\tIPath root = env.addPackageFragmentRoot(projectPath, \"src\"); //$NON-NLS-1$", "-\t\tenv.setOutputFolder(projectPath, \"bin\"); //$NON-NLS-1$", "-", "-\t\tenv.addClass(root, \"\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"@GeneratedAnnotation\\n\" + //$NON-NLS-1$", "-\t\t\t\"public class Test extends p.GeneratedType {}\\n\" //$NON-NLS-1$", "-\t\t\t);", "-", "-\t\tenv.addClass(root, \"\", \"GeneratedAnnotation\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"@interface GeneratedAnnotation{}\\n\"", "-\t\t\t);", "-", "-\t\t// install compilationParticipant", "-\t\tnew BuildTestParticipant() {", "-\t\t\tpublic boolean isAnnotationProcessor() {", "-\t\t\t\treturn true;", "-\t\t\t}", "-\t\t\tpublic void processAnnotations(ICompilationParticipantResult[] files) {", "-\t\t\t\t// want to add a gen'ed source file that is referenced from the initial file to see if its recompiled", "-\t\t\t\tICompilationParticipantResult result = files[0];", "-\t\t\t\tif (!\"Test.java\".equals(result.getFile().getName())) return; //$NON-NLS-1$", "-\t\t\t\tIFile genedType = null;", "-\t\t\t\ttry {", "-\t\t\t\t\tIFolder genedFolder = result.getFile().getParent().getFolder(new Path(\"p\"));", "-\t\t\t\t\tif (!genedFolder.exists())", "-\t\t\t\t\t\tgenedFolder.create(true, false, null);", "-\t\t\t\t\tgenedType = genedFolder.getFile(new Path(\"GeneratedType.java\")); //$NON-NLS-1$", "-\t\t\t\t\tif (genedType.exists()) return;", "-\t\t\t\t\tgenedType.create(new ByteArrayInputStream(\"package p; public class GeneratedType {}\".getBytes()), true, null); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff751e934383c54e4a33bc1deccdaf8a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/NullAnnotationModelTests.java", "commitBeforeChange": "34b4972480c62fc99b17d4728db2648e98460b52", "commitAfterChange": "a234173ab4d645c8990c97cafa00ec82ce0a909f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void _testConvertedSourceType1() throws CoreException, InterruptedException", "signatureAfterChange": "  \tpublic void testConvertedSourceType1() throws CoreException, InterruptedException", "diff": ["-\t// DISABLED due to dysfunctional global default after Bug 366063 - Compiler should not add synthetic @NonNull annotations", "-\tpublic void _testConvertedSourceType1() throws CoreException, InterruptedException {", "+\tpublic void testConvertedSourceType1() throws CoreException, InterruptedException {", "-\t\t\tp.setOption(JavaCore.COMPILER_NONNULL_IS_DEFAULT, JavaCore.ENABLED);", "+\t\t\t\t\"@org.eclipse.jdt.annotation.NonNullByDefault\\n\" +", "+\t\t\t\t\"@org.eclipse.jdt.annotation.NonNullByDefault\\n\" +", "-\t\t\t\t\t\"1. WARNING in /P/p2/C2.java (at line 7)\\n\" +", "+\t\t\t\t\t\"1. WARNING in /P/p2/C2.java (at line 8)\\n\" +"]}], "num": 52097}