{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8f502725074ad6b9295d8c1bd63aec29", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b19e16517fa0138fc71ca6906afbe9d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 220, "signatureBeforeChange": " \tpublic void test0300_switch()", "signatureAfterChange": " public void test0800_switch()", "diff": ["-\t// null analysis -- switch", "-\tpublic void test0300_switch() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\tint k;\\n\" + ", "-\t\t\t\t\"\tvoid foo() {\\n\" + ", "-\t\t\t\t\"\t\tObject o = null;\\n\" + ", "-\t\t\t\t\"\t\tswitch (k) {\\n\" + ", "-\t\t\t\t\"\t\t\tcase 0 :\\n\" + ", "-\t\t\t\t\"\t\t\t\to = new Object();\\n\" + ", "-\t\t\t\t\"\t\t\t\tbreak;\\n\" + ", "-\t\t\t\t\"\t\t\tcase 2 :\\n\" + ", "-\t\t\t\t\"\t\t\t\treturn;\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t\tif(o == null) { /* */\t}\\n\" + // quiet: don't know whether came from 0 or default", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-\t\t);", "-\t}", "+// null analysis -- switch", "+public void test0800_switch() {", "+\tthis.runConformTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\" int k;\\n\" + ", "+\t\t\t\" void foo() {\\n\" + ", "+\t\t\t\"   Object o = null;\\n\" + ", "+\t\t\t\"   switch (k) {\\n\" + ", "+\t\t\t\"     case 0 :\\n\" + ", "+\t\t\t\"       o = new Object();\\n\" + ", "+\t\t\t\"       break;\\n\" + ", "+\t\t\t\"     case 2 :\\n\" + ", "+\t\t\t\"       return;\\n\" + ", "+\t\t\t\"   }\\n\" + ", "+\t\t\t\"   if(o == null) { /* */ }\\n\" + // quiet: don't know whether came from 0 or default", "+\t\t\t\" }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1121cf46367293609662e58b8127bdd7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 111, "signatureBeforeChange": " \tpublic void test0119_while()", "signatureAfterChange": " public void test0409_while()", "diff": ["-\t// null analysis -- while", "-\tpublic void test0119_while() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t boolean dummy;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t while (dummy || (o = new Object()).equals(o)) {\\n\" +", "-\t\t\t\t\"\t\t   o.toString();\\n\" +", "-\t\t\t\t\"\t\t }\\n\" +", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"  ", "-\t\t);", "-\t}", "+// null analysis -- while", "+public void test0409_while() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  boolean dummy;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    while (dummy || (o = new Object()).equals(o)) {\\n\" +", "+\t\t\t\"      o.toString();\\n\" +", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "117576d18a8b104fc8b59c882647ed93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 87, "methodNumberAfterChange": 184, "signatureBeforeChange": " \tpublic void _test0207_do_while()", "signatureAfterChange": " public void test0607_do_while()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0207_do_while() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t boolean dummy;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t do {\\n\" + ", "-\t\t\t\t\"\t\t   o.toString();\\n\" + ", "-\t\t\t\t      \t // complain: NPE on first iteration ", "-\t\t\t\t\"\t\t   o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t while (dummy);\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"WARN\"  ", "-\t\t);", "-\t}", "+// null analysis -- do while", "+public void test0607_do_while() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  boolean dummy;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    do {\\n\" + ", "+\t\t\t\"      o.toString();\\n\" + ", "+\t\t\t         // complain: NPE", "+\t\t\t\"      o = new Object();\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    while (dummy);\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "241a8d6a2352e980f74131227ed48506", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic void test0105_if_else()", "signatureAfterChange": " public void test0305_if_else()", "diff": ["-\t// null analysis - if/else", "-\tpublic void test0105_if_else() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t void foo(Object o) {\\n\" + ", "-\t\t\t\t\"\t\t if (o == null) {\\n\" + ", "-\t\t\t\t\"\t\t\t // do nothing\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-\t\t);", "-\t}", "+// null analysis - if/else", "+public void test0305_if_else() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo(Object o) {\\n\" + ", "+\t\t\t\"    if (o == null) {\\n\" + ", "+\t\t\t\"      // do nothing\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf7370b27adfb331ac0d84728b411f4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 109, "signatureBeforeChange": " \tpublic void test0126_while()", "signatureAfterChange": " public void test0407_while()", "diff": ["-\t// null analysis -- while", "-\tpublic void test0126_while() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t boolean dummy;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t while (dummy) {\\n\" + ", "-\t\t\t\t\"\t\t   o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"  ", "-\t\t);", "-\t}", "+// null analysis -- while", "+public void test0407_while() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  boolean dummy;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    while (dummy) {\\n\" +", "+\t\t\t\"      o.toString();\\n\" +  // complain: NPE on first iteration", "+\t\t\t\"      o = new Object();\\n\" +", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0c8a89c823168d3d50298c5cdaecc0e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 114, "signatureBeforeChange": " \tpublic void test0122_while_if_nested()", "signatureAfterChange": " public void test0412_while_if_nested()", "diff": ["-\t// null analysis -- while", "-\tpublic void test0122_while_if_nested() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t boolean dummy, other;\\n\" + ", "-\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\"\t\t Object o = null;\\n\" + ", "-\t\t\t\t\"\t\t while (dummy) {\\n\" +   ", "-\t\t\t\t\"\t\t   if (other) {\\n\" + ", "-\t\t\t\t\"\t\t     o.toString();\\n\" +    ", "-\t\t\t\t\"\t\t   }\\n\" + ", "-\t\t\t\t\"\t\t   o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"  ", "-\t\t);", "-\t}", "+// null analysis -- while", "+public void test0412_while_if_nested() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  boolean dummy, other;\\n\" + ", "+\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\"    Object o = null;\\n\" + ", "+\t\t\t\"    while (dummy) {\\n\" +   ", "+\t\t\t\"      if (other) {\\n\" + ", "+\t\t\t\"        o.toString();\\n\" +    ", "+\t\t\t\"      }\\n\" + ", "+\t\t\t\"      o = new Object();\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "daa59e2981888688ab06338fc194b1eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tpublic void test0124_while_unknown_parameter()", "signatureAfterChange": " public void test0414_while_unknown_parameter()", "diff": ["-\t// null analysis -- while", "-\tpublic void test0124_while_unknown_parameter() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t boolean dummy;\\n\" + ", "-\t\t\t\t\"\t void foo(Object o) {\\n\" + ", "-\t\t\t\t\"\t\t while (dummy) {\\n\" +", "-\t\t\t\t\"\t\t   o = null;\\n\" +", "-\t\t\t\t\"\t\t }\\n\" +", "-\t\t\t\t\"\t\t o.toString();\\n\" +", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"  ", "-\t\t);", "-\t}", "+// null analysis -- while", "+public void test0414_while_unknown_parameter() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  boolean dummy;\\n\" + ", "+\t\t\t\"  void foo(Object o) {\\n\" + ", "+\t\t\t\"    while (dummy) {\\n\" +", "+\t\t\t\"      o = null;\\n\" + // quiet: first iteration doesn't know", "+\t\t\t\"    }\\n\" +", "+\t\t\t\"    o.toString();\\n\" + // complain: only get out of the loop with null", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd9f1f67ba92a59b4a5868a58f15b594", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 223, "signatureBeforeChange": " \tpublic void test0303_switch()", "signatureAfterChange": " public void test0803_switch()", "diff": ["-\t// null analysis -- switch", "-\tpublic void test0303_switch() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\tint k;\\n\" + ", "-\t\t\t\t\"\tvoid foo() {\\n\" + ", "-\t\t\t\t\"\t\tObject o = null;\\n\" + ", "-\t\t\t\t\"\t\tswitch (k) {\\n\" + ", "-\t\t\t\t\"\t\t\tcase 0 :\\n\" + ", "-\t\t\t\t\"\t\t\t  o = new Object();\\n\" + ", "-\t\t\t\t\"\t\t\tcase 1 :\\n\" + ", "-\t\t\t\t\"\t\t\t\to.toString();\\n\" + // quiet: may come through 0 or 1", "-\t\t\t\t\"\t\t\t\tbreak;\\n\" + ", "-\t\t\t\t\"\t\t}\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "+// null analysis -- switch", "+public void test0803_switch() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\" int k;\\n\" + ", "+\t\t\t\" void foo() {\\n\" + ", "+\t\t\t\"   Object o = null;\\n\" + ", "+\t\t\t\"   switch (k) {\\n\" + ", "+\t\t\t\"     case 0 :\\n\" + ", "+\t\t\t\"       o = new Object();\\n\" + ", "+\t\t\t\"     case 1 :\\n\" + ", "+\t\t\t\"       o.toString();\\n\" + // complain: may come through 0 or 1", "+\t\t\t\"       break;\\n\" + ", "+\t\t\t\"   }\\n\" + ", "+\t\t\t\" }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\"\to.toString();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"The variable o may be null\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}], "num": 31167}