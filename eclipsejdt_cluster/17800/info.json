{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "be7f94622a17b2ba2c6ee54400801e14", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53e8565e2f02d5cb532313ed04b486fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "3a6aeedce3450e7596db387f3add7d006e250d09", "commitAfterChange": "ccb3e5525c54dfe23c1e360c5b523dc7389a8449", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r private int matchLevel(NameReference nameRef, boolean resolve)", "signatureAfterChange": "\r private int matchLevel(NameReference nameRef, boolean resolve)", "diff": ["-\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++){\r", "-\t\t\t\t\tif (this.matchesName(this.name, tokens[i])) {\r", "+\t\t\t\tif (this.writeAccess && !this.readAccess) {\r", "+\t\t\t\t\t// in the case of the assigment of a qualified name reference, the match must be on the last token\r", "+\t\t\t\t\tif (this.matchesName(this.name, tokens[tokens.length-1])) {\r", "+\t\t\t\t} else {\r", "+\t\t\t\t\tfor (int i = 0, max = tokens.length; i < max; i++){\r", "+\t\t\t\t\t\tif (this.matchesName(this.name, tokens[i])) {\r", "+\t\t\t\t\t\t\t// can only be a possible match since resolution is needed \r", "+\t\t\t\t\t\t\t// to find out if it is a field ref\r", "+\t\t\t\t\t\t\treturn POSSIBLE_MATCH;\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "efdb61d9241804112b0c71c5d074e010", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "f27e1412cdba4e953d571d1998376687a4c5af71", "commitAfterChange": "7b0b78b45319bc18ccff993af876123282997e70", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " protected void consumeInsideCastExpression()", "signatureAfterChange": " protected void consumeInsideCastExpression()", "diff": ["-\tif(this.identifierLengthStack[this.identifierLengthPtr] > 0) {", "-\t\tpushOnGenericsIdentifiersLengthStack(this.identifierLengthStack[this.identifierLengthPtr]);", "-\t\tif(this.genericsLengthPtr < 0) {", "+\tif(topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_PARAMETERIZED_CAST) {", "+\t\tpopElement(K_PARAMETERIZED_CAST);", "+\t\t", "+\t\tif(this.identifierLengthStack[this.identifierLengthPtr] > 0) {", "+\t\t\tpushOnGenericsIdentifiersLengthStack(this.identifierLengthStack[this.identifierLengthPtr]);", "+\t\t}", "+\t} else {", "+\t\tif(this.identifierLengthStack[this.identifierLengthPtr] > 0) {", "+\t\t\tpushOnGenericsIdentifiersLengthStack(this.identifierLengthStack[this.identifierLengthPtr]);"]}], "num": 17800}