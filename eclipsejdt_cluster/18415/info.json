{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "286c7dc74c3a22b8b5d3df09cd2244aa", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7658a1ae11064ea07094d36537b98fa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "26e0b0c271d5031424823a1070ef180ba24218bf", "commitAfterChange": "c84496f37e5dff715764911530c1fceaa60b14ee", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["+\t\tint pc = codeStream.position;", "-\t\t\tint pc = codeStream.position;", "-\t\tLabel falseLabel;", "-\t\tbits |= OnlyValueRequired;", "-\t\tgenerateOptimizedBoolean(", "-\t\t\tcurrentScope, ", "-\t\t\tcodeStream, ", "-\t\t\tnull, ", "-\t\t\tfalseLabel = new Label(codeStream), ", "-\t\t\tvalueRequired);", "-\t\tif (falseLabel.hasForwardReferences()) {", "-\t\t\tif (valueRequired){", "-\t\t\t\t// comparison is TRUE ", "-\t\t\t\tcodeStream.iconst_1();", "-\t\t\t\tif ((bits & IsReturnedValue) != 0){", "-\t\t\t\t\tcodeStream.generateImplicitConversion(this.implicitConversion);", "-\t\t\t\t\tcodeStream.generateReturnBytecode(this);", "-\t\t\t\t\t// comparison is FALSE", "-\t\t\t\t\tfalseLabel.place();", "-\t\t\t\t\tcodeStream.iconst_0();", "-\t\t\t\t} else {", "-\t\t\t\t\tLabel endLabel = new Label(codeStream);", "-\t\t\t\t\tcodeStream.goto_(endLabel);", "-\t\t\t\t\tcodeStream.decrStackSize(1);", "-\t\t\t\t\t// comparison is FALSE", "-\t\t\t\t\tfalseLabel.place();", "-\t\t\t\t\tcodeStream.iconst_0();", "-\t\t\t\t\tendLabel.place();", "-\t\t\t\t}", "-\t\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "-\t\t\t} else {", "-\t\t\t\tfalseLabel.place();", "-\t\t\t}\t", "+\t\t", "+\t\tif ((left.implicitConversion & COMPILE_TYPE_MASK) /*compile-time*/ == T_boolean) {", "+\t\t\tgenerateBooleanEqual(currentScope, codeStream, valueRequired);", "+\t\t} else {", "+\t\t\tgenerateNonBooleanEqual(currentScope, codeStream, valueRequired);", "+\t\tif (valueRequired) {", "+\t\t\tcodeStream.generateImplicitConversion(implicitConversion);", "+\t\t}", "+\t\tcodeStream.recordPositionsFrom(pc, this.sourceStart);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a787cdc24ca09dac46e72c68e9fed377", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "6da1051d4f1d8e21b3b7542b130601f7eef250a3", "commitAfterChange": "a0bf175365121b2ce6109fd510a1295aae7ead4c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "\r public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\tLabel falseLabel = new Label(codeStream);\r", "-\tgenerateOptimizedBoolean(currentScope, codeStream, null, falseLabel, valueRequired);\r", "-\tif (valueRequired){\r", "-\t\t// comparison is TRUE \r", "-\t\tcodeStream.iconst_1();\r", "-\t\tif ((bits & ValueForReturnMASK) != 0){\r", "-\t\t\tcodeStream.ireturn();\r", "-\t\t\t// comparison is FALSE\r", "-\t\t\tfalseLabel.place();\r", "-\t\t\tcodeStream.iconst_0();\r", "+\tLabel falseLabel;\r", "+\tgenerateOptimizedBoolean(\r", "+\t\tcurrentScope, \r", "+\t\tcodeStream, \r", "+\t\tnull, \r", "+\t\tfalseLabel = new Label(codeStream), \r", "+\t\tvalueRequired);\r", "+\tif (falseLabel.hasForwardReferences()) {\r", "+\t\tif (valueRequired){\r", "+\t\t\t// comparison is TRUE \r", "+\t\t\tcodeStream.iconst_1();\r", "+\t\t\tif ((bits & ValueForReturnMASK) != 0){\r", "+\t\t\t\tcodeStream.ireturn();\r", "+\t\t\t\t// comparison is FALSE\r", "+\t\t\t\tfalseLabel.place();\r", "+\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t} else {\r", "+\t\t\t\tLabel endLabel = new Label(codeStream);\r", "+\t\t\t\tcodeStream.goto_(endLabel);\r", "+\t\t\t\tcodeStream.decrStackSize(1);\r", "+\t\t\t\t// comparison is FALSE\r", "+\t\t\t\tfalseLabel.place();\r", "+\t\t\t\tcodeStream.iconst_0();\r", "+\t\t\t\tendLabel.place();\r", "+\t\t\t}\r", "-\t\t\tLabel endLabel = new Label(codeStream);\r", "-\t\t\tcodeStream.goto_(endLabel);\r", "-\t\t\tcodeStream.decrStackSize(1);\r", "-\t\t\t// comparison is FALSE\r", "-\t\t\tcodeStream.iconst_0();\r", "-\t\t\tendLabel.place();\r", "-\t\t}\r", "-\t}\r", "+\t\t}\t\r", "+\t}\t\r"]}], "num": 18415}