{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e4b07f4db9111cb847228610a832e3f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "136680dd3cb254b2d3159a356be0fa96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "673b7eda95cd26449992e862f0c63f2c612903a0", "commitAfterChange": "b04602938404af4f8569a399fb36a5018768a262", "methodNumberBeforeChange": 82, "methodNumberAfterChange": 82, "signatureBeforeChange": "\r \r \tprotected void consumeExitVariableWithoutInitialization()", "signatureAfterChange": "\r protected void consumeExitVariableWithoutInitialization()", "diff": ["-\r", "-\tprotected void consumeExitVariableWithoutInitialization() {\r", "-\t\t// ExitVariableWithoutInitialization ::= $empty\r", "-\t\t// do nothing by default\r", "-\t}\r", "+}\r", "+protected void consumeExitVariableWithoutInitialization() {\r", "+\t// ExitVariableWithoutInitialization ::= $empty\r", "+\t// do nothing by default\r", "+\t((AbstractVariableDeclaration) astStack[astPtr]).declarationSourceEnd = scanner.currentPosition - 1;\t\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a48b65f16eb23fb1bb0448020b84402", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "bcf6d39cea27ed7bf3bf85709bd7e60dc5605058", "commitAfterChange": "6556a52f97cad4f6513f531b95066570adca8205", "methodNumberBeforeChange": 115, "methodNumberAfterChange": 113, "signatureBeforeChange": " protected void consumeEmptyDefaultValue()", "signatureAfterChange": " protected void consumeEmptyMethodHeaderDefaultValue()", "diff": ["-protected void consumeEmptyDefaultValue() {", "+protected void consumeEmptyMethodHeaderDefaultValue() {", "-\tpushOnExpressionStackLengthStack(0);", "+\tAbstractMethodDeclaration method = (AbstractMethodDeclaration)this.astStack[this.astPtr];", "+\tif(method.isAnnotationMethod()) { //'method' can be a MethodDeclaration when recovery is started", "+\t\tpushOnExpressionStackLengthStack(0);", "+\t}"]}], "num": 40132}