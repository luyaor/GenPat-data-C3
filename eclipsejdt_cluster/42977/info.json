{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09e65d640c2cc62114247398eaa65c43", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99754255ec2d1db5253266becb41d4d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 22, "signatureBeforeChange": " public IPath getSourceAttachmentPath() throws JavaModelException", "signatureAfterChange": " public IPath getSourceAttachmentPath() throws JavaModelException", "diff": ["-\tif (index < 0) return null;", "-\tString serverSourcePathString= serverPathString.substring(0, index);", "-\treturn new Path(serverSourcePathString);", "+\tif (index < 0) {", "+\t\t// no root path specified", "+\t\treturn new Path(serverPathString);", "+\t} else {", "+\t\tString serverSourcePathString= serverPathString.substring(0, index);", "+\t\treturn new Path(serverSourcePathString);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d047a391dcf3ab5814add8f54d50a796", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "64433022bceb2595097c3f7c00fcd64fa73ac744", "commitAfterChange": "c9a2d077051546e9b662a9a56f4334f97725e2ba", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void setCompilerOptions(Map options)", "signatureAfterChange": " \tpublic void setCompilerOptions(Map options)", "diff": ["-\t   if (options == null) {", "-\t      options = JavaCore.getOptions();", "-\t   }", "-\t   options.remove(JavaCore.COMPILER_TASK_TAGS); // no need to parse task tags", "-\t   this.compilerOptions = options;", "+\t\tif (options == null) {", "+\t\t\toptions = JavaCore.getOptions();", "+\t\t} else {", "+\t\t\t// copy client's options so as to not do any side effect on them", "+\t\t\toptions = new HashMap(options);", "+\t\t}", "+\t\toptions.remove(JavaCore.COMPILER_TASK_TAGS); // no need to parse task tags", "+\t\tthis.compilerOptions = options;"]}], "num": 42977}