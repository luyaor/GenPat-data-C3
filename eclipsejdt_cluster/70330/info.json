{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "da5f32460bc311714bc85463292a3ffa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97b1a4803fa5ae14fa84c11bf7bd79b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "faf6597aa00a794b3bf608aa263d02964fb5a0f9", "commitAfterChange": "26e210811de2fca857d5561ae26405b72dccc0f5", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected void runNegativeTest(String[] testFiles, String expectedProblemLog, String[] classLib, boolean shouldFlushOutputDirectory)", "signatureAfterChange": " \tprotected void runNegativeTest( \t\tString[] testFiles,  \t\tString expectedProblemLog,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory)", "diff": ["+\t */", "+\tprotected void runNegativeTest(", "+\t\tString[] testFiles, ", "+\t\tString expectedProblemLog, ", "+\t\tString[] classLib,", "+\t\tboolean shouldFlushOutputDirectory) {", "+\t\t", "+\t\trunNegativeTest(testFiles, expectedProblemLog, classLib, shouldFlushOutputDirectory, null);", "+\t}", "- */", "-protected void runNegativeTest(String[] testFiles, String expectedProblemLog, String[] classLib, boolean shouldFlushOutputDirectory) {", "-\tthis.runNegativeTest(testFiles, expectedProblemLog, classLib, shouldFlushOutputDirectory, null);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee63f32e882259ddb6165454a7fc8706", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "faf6597aa00a794b3bf608aa263d02964fb5a0f9", "commitAfterChange": "26e210811de2fca857d5561ae26405b72dccc0f5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected INameEnvironment getNameEnvironment(final String[] testFiles, String[] classPaths)", "signatureAfterChange": " \tprotected INameEnvironment getNameEnvironment(final String[] testFiles, String[] classPaths)", "diff": ["+\t */", "+\tprotected INameEnvironment getNameEnvironment(final String[] testFiles, String[] classPaths) {", "+\t\tthis.classpaths = classPaths == null ? getDefaultClassPaths() : classPaths;", "+\t\treturn new InMemoryNameEnvironment(testFiles, getClassLibs());", "+\t}", "- */", "-protected INameEnvironment getNameEnvironment(final String[] testFiles, String[] classPaths) {", "-\tthis.classpaths = ", "-\t\tclassPaths == null ? ", "-\t\t\tthis.getDefaultClassPaths() :", "-\t\t\tclassPaths;", "-\treturn ", "-\t\tnew InMemoryNameEnvironment(", "-\t\t\tthis.getClassLibs()", "-\t\t);", "-}"]}], "num": 70330}