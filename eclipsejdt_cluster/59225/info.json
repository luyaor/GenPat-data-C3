{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6dbc96ee8e2112c8d1c85ef34c69585", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0b66f7433edc8942cd7b830c0a34821e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void test0015_final_field()", "signatureAfterChange": " public void test0021_final_field()", "diff": ["+// null analysis -- field", "+public void test0021_final_field() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  final Object o = null;\\n\" + ", "+\t\t\t\"  X () {\\n\" +        ", "+\t\t\t\"    bar();\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void bar() {/* */}\\n\" +        ", "+\t\t\t\"}\\n\"},", "+\t\t\"\"", "+//      \"----------\\n\" + ", "+//      \"1. ERROR in X.java (at line 5)\\n\" + ", "+//      \"\to.toString();\\n\" + ", "+//      \"\t^\\n\" + ", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "+//      \"----------\\n\" ", "+\t);", "+}", "-\t// TODO (maxime) reset diagnostic once supported", "-\tpublic void test0015_final_field() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t final Object o = null;\\n\" + ", "-\t\t\t\t\"  X () {\\n\" + \t\t\t\t", "-\t\t\t\t\"\t\t bar();\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"  void bar() {/* */}\\n\" + \t\t\t\t", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-//\t\t\t\"----------\\n\" + ", "-//\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-//\t\t\t\"\to.toString();\\n\" + ", "-//\t\t\t\"\t^\\n\" + ", "-//\t\t\t\"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "-//\t\t\t\"----------\\n\" ", "-\t\t);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1ead2899c35d6875afdfc85a6659afeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 97, "methodNumberAfterChange": 197, "signatureBeforeChange": " \tpublic void _test0229_for()", "signatureAfterChange": " public void test0709_for()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0229_for() {", "-\t\t\t\t\"\t void foo(Object o) {\\n\" + ", "-\t\t\t\t\"\t\t for (o.toString(); o == null;) { /* */ }\\n\" + // complain: protected then unchanged", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tfor (o.toString(); o == null;) { /* */ }\\n\" + ", "-\t\t\t\"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "+// null analysis -- for", "+public void test0709_for() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  void foo(Object o) {\\n\" + ", "+\t\t\t\"    for (o.toString(); o == null;) { /* */ }\\n\" + // complain: protected then unchanged", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\"\tfor (o.toString(); o == null;) { /* */ }\\n\" + ", "+\t\t\"\t                   ^\\n\" + ", "+\t\t\"The variable o cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d5283833342b2ef9f78335fcda723ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void test0013_field_synchronized()", "signatureAfterChange": " public void test0019_field_synchronized()", "diff": ["+// behave as locals when no call to further methods can affect them", "+public void test0019_field_synchronized() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  Object o;\\n\" + ", "+\t\t\t\"  public synchronized void foo() {\\n\" +        ", "+\t\t\t\"    o = null;\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void bar() {/* */}\\n\" +        ", "+\t\t\t\"}\\n\"},", "+\t\t\"\"", "+//      \"----------\\n\" + ", "+//      \"1. ERROR in X.java (at line 5)\\n\" + ", "+//      \"\to.toString();\\n\" + ", "+//      \"\t^\\n\" + ", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "+//      \"----------\\n\" ", "+\t);", "+}", "-\t// TODO (maxime) reset diagnostic once supported", "-\tpublic void test0013_field_synchronized() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t Object o;\\n\" + ", "-\t\t\t\t\"  public synchronized void foo() {\\n\" + \t\t\t\t", "-\t\t\t\t\"\t\t o = null;\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"  void bar() {/* */}\\n\" + \t\t\t\t", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-//\t\t\t\"----------\\n\" + ", "-//\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-//\t\t\t\" o.toString();\\n\" + ", "-//\t\t\t\"\t^\\n\" + ", "-//\t\t\t\"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "-//\t\t\t\"----------\\n\" ", "-\t\t);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aea8aa349f6c09d2576f0665d72229c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void test0016_final_field()", "signatureAfterChange": " public void test0022_final_field()", "diff": ["+// null analysis -- field", "+public void test0022_final_field() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  final Object o = new Object();\\n\" + ", "+\t\t\t\"  X () {\\n\" +        ", "+\t\t\t\"    bar();\\n\" + ", "+\t\t\t\"    if (o == null) { /* empty */ }\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void bar() {/* */}\\n\" +        ", "+\t\t\t\"}\\n\"},", "+\t\t\"\"", "+//      \"----------\\n\" + ", "+//      \"1. ERROR in X.java (at line 5)\\n\" + ", "+//      \"\tif (o == null) { /* empty */ }\\n\" + ", "+//      \"\t    ^\\n\" + ", "+//      \"The field o is likely non null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "+//      \"----------\\n\"", "+\t);", "+}", "-\t// TODO (maxime) reset diagnostic once supported", "-\tpublic void test0016_final_field() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t final Object o = new Object();\\n\" + ", "-\t\t\t\t\"  X () {\\n\" + \t\t\t\t", "-\t\t\t\t\"\t\t bar();\\n\" + ", "-\t\t\t\t\"\t\t if (o == null) { /* empty */ }\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"  void bar() {/* */}\\n\" + \t\t\t\t", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-//\t\t\t\"----------\\n\" + ", "-//\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-//\t\t\t\"\tif (o == null) { /* empty */ }\\n\" + ", "-//\t\t\t\"\t    ^\\n\" + ", "-//\t\t\t\"The field o is likely non null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "-//\t\t\t\"----------\\n\"", "-\t\t);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c6b4c80eafeea3855e07206c93d0c1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic void _test0033_autoboxing_literal()", "signatureAfterChange": " public void test0043_autoboxing_literal()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0033_autoboxing_literal() {", "-\t\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "-\t\t\tthis.runNegativeTest(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\",", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\t\"\t\t Integer i = null;\\n\" +", "-\t\t\t\t\t\"    System.out.println(i + 4);\\n\" + // complain: this is null", "-\t\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\t\"}\\n\"},", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\tSystem.out.println(i + 4);\\n\" + ", "-\t\t\t\t\"\t                   ^\\n\" + ", "-\t\t\t\t\"The variable i can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t\t);", "-\t\t}", "-\t}", "+// null analysis -- autoboxing", "+public void test0043_autoboxing_literal() {", "+\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "+\t\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\t\"    Integer i = null;\\n\" +", "+\t\t\t\t\"    System.out.println(i + 4);\\n\" + // complain: this is null", "+\t\t\t\t\"  }\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tSystem.out.println(i + 4);\\n\" + ", "+\t\t\t\"The variable i can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7aa12cc89467825983ce215653deb107", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void test0032_autoboxing_literal()", "signatureAfterChange": " public void test0042_autoboxing_literal()", "diff": ["-\t// null analysis -- autoboxing", "-\tpublic void test0032_autoboxing_literal() {", "-\t\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "-\t\t\tthis.runNegativeTest(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\",", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\t\"\t\t Integer i = 0;\\n\" +", "-\t\t\t\t\t\"    if (i == null) {};\\n\" + // complain: this is non null", "-\t\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\t\"}\\n\"},", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\tif (i == null) {};\\n\" + ", "-\t\t\t\t\"\t    ^\\n\" + ", "-\t\t\t\t\"The variable i cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t\t);", "-\t\t}", "-\t}", "+// null analysis -- autoboxing", "+public void test0042_autoboxing_literal() {", "+\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "+\t\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\t\"    Integer i = 0;\\n\" +", "+\t\t\t\t\"    if (i == null) {};\\n\" + // complain: this is non null", "+\t\t\t\t\"  }\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tif (i == null) {};\\n\" + ", "+\t\t\t\"\t    ^\\n\" + ", "+\t\t\t\"The variable i cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "+\t\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8fa27101e12972b9d4be7addeb5794bb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void test0014_final_field()", "signatureAfterChange": " public void test0020_final_field()", "diff": ["+// methods", "+public void test0020_final_field() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  final Object o = null;\\n\" + ", "+\t\t\t\"  public synchronized void foo() {\\n\" +        ", "+\t\t\t\"    bar();\\n\" + ", "+\t\t\t\"    o.toString();\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  void bar() {/* */}\\n\" +        ", "+\t\t\t\"}\\n\"},", "+\t\t\"\"", "+//      \"----------\\n\" + ", "+//      \"1. ERROR in X.java (at line 5)\\n\" + ", "+//      \"\to.toString();\\n\" + ", "+//      \"\t^\\n\" + ", "+//      \"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "+//      \"----------\\n\" ", "+\t);", "+}", "-\t// TODO (maxime) reset diagnostic once supported", "-\tpublic void test0014_final_field() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t final Object o = null;\\n\" + ", "-\t\t\t\t\"  public synchronized void foo() {\\n\" + \t\t\t\t", "-\t\t\t\t\"\t\t bar();\\n\" + ", "-\t\t\t\t\"\t\t o.toString();\\n\" + ", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"  void bar() {/* */}\\n\" + \t\t\t\t", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"\"", "-//\t\t\t\"----------\\n\" + ", "-//\t\t\t\"1. WARNING in X.java (at line 5)\\n\" + ", "-//\t\t\t\"\to.toString();\\n\" + ", "-//\t\t\t\"\t^\\n\" + ", "-//\t\t\t\"The field o is likely null; it was either set to null or checked for null when last used\\n\" + ", "-//\t\t\t\"----------\\n\" ", "-\t\t);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f68892c14d32860cd9396b793f1b964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic void test0051_type_reference()", "signatureAfterChange": " public void test0070_type_reference()", "diff": ["-\t// null analysis -- type reference", "-\tpublic void test0051_type_reference() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t public static void main(String args[]) {\\n\" + ", "-\t\t\t\t\"\t\t Class c = java.lang.Object.class;\\n\" +", "-\t\t\t\t\"    if (c == null) {};\\n\" +", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tif (c == null) {};\\n\" + ", "-\t\t\t\"\t    ^\\n\" + ", "-\t\t\t\"The variable c cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}", "+// null analysis -- type reference", "+public void test0070_type_reference() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  public static void main(String args[]) {\\n\" + ", "+\t\t\t\"    Class c = java.lang.Object.class;\\n\" +", "+\t\t\t\"    if (c == null) {};\\n\" +", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\tif (c == null) {};\\n\" + ", "+\t\t\"\t    ^\\n\" + ", "+\t\t\"The variable c cannot be null; it was either set to a non-null value or assumed to be non-null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c839db93cd0b3ff979b848ec21c6f737", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic void test0042_array()", "signatureAfterChange": " public void test0051_array()", "diff": ["-\t// null analysis -- array", "-\tpublic void test0042_array() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"\t public static void main(String args[]) {\\n\" + ", "-\t\t\t\t\"\t\t args = null;\\n\" +", "-\t\t\t\t\"    args[0].toString();\\n\" + // complain: args is null", "-\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\"}\\n\"},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\targs[0].toString();\\n\" + ", "-\t\t\t\"\t^^^^\\n\" + ", "-\t\t\t\"The variable args can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t);", "-\t}", "+// null analysis -- array", "+public void test0051_array() {", "+\tthis.runNegativeTest(", "+\t\tnew String[] {", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" + ", "+\t\t\t\"  public static void main(String args[]) {\\n\" + ", "+\t\t\t\"    args = null;\\n\" +", "+\t\t\t\"    args[0].toString();\\n\" + // complain: args is null", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\"},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\"\targs[0].toString();\\n\" + ", "+\t\t\"\t^^^^\\n\" + ", "+\t\t\"The variable args can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d333cdcbf9fc698b811979592ce2f4fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 41, "signatureBeforeChange": " \tpublic void _test0031_autoboxing_increment_operator()", "signatureAfterChange": " public void test0041_autoboxing_increment_operator()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0031_autoboxing_increment_operator() {", "-\t\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "-\t\t\tthis.runNegativeTest(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\",", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\t\"\t\t Integer i = null;\\n\" +", "-\t\t\t\t\t\"    i++;\\n\" + // complain: this is null", "-\t\t\t\t\t\"    ++i;\\n\" + // quiet (because previous step guards it)", "-\t\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\t\"}\\n\"},", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\ti++;\\n\" + ", "-\t\t\t\t\"\t^\\n\" + ", "-\t\t\t\t\"The variable i can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t\t);", "-\t\t}", "-\t}", "+// null analysis -- autoboxing", "+public void test0041_autoboxing_increment_operator() {", "+\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "+\t\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\t\"    Integer i = null;\\n\" +", "+\t\t\t\t\"    i++;\\n\" + // complain: this is null", "+\t\t\t\t\"    ++i;\\n\" + // quiet (because previous step guards it)", "+\t\t\t\t\"  }\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\ti++;\\n\" + ", "+\t\t\t\"The variable i can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\t\"----------\\n\");", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8f71308857f10508ffa5c91ec11872e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic void _test0030_autoboxing_compound_assignment()", "signatureAfterChange": " public void test0040_autoboxing_compound_assignment()", "diff": ["-\t// TODO (maxime) fix", "-\tpublic void _test0030_autoboxing_compound_assignment() {", "-\t\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "-\t\t\tthis.runNegativeTest(", "-\t\t\t\tnew String[] {", "-\t\t\t\t\t\"X.java\",", "-\t\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\t\"\t void foo() {\\n\" + ", "-\t\t\t\t\t\"\t\t Integer i = null;\\n\" +", "-\t\t\t\t\t\"    i += 1;\\n\" + ", "-\t\t\t\t\t\"\t }\\n\" + ", "-\t\t\t\t\t\"}\\n\"},", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\t\"\ti += 1;\\n\" + ", "-\t\t\t\t\"\t^\\n\" + ", "-\t\t\t\t\"The variable i can only be null; it was either set to null or checked for null when last used\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t\t);", "-\t\t}", "-\t}", "+// null analysis -- autoboxing", "+public void test0040_autoboxing_compound_assignment() {", "+\tif (COMPLIANCE_1_5.equals(this.complianceLevel)) {", "+\t\t\t\t\"  void foo() {\\n\" + ", "+\t\t\t\t\"    Integer i = null;\\n\" +", "+\t\t\t\t\"    i += 1;\\n\" + ", "+\t\t\t\t\"  }\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\ti += 1;\\n\" + ", "+\t\t\t\"The variable i can only be null; it was either set to null or checked for null when last used\\n\" + ", "+\t\t\t\"----------\\n\");", "+}"]}], "num": 59225}