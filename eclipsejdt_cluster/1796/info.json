{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2e9f75ac7fb84fbe1959d0ccc1eac7ff", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0acaf8214e90db4eb995f54920fe7ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "4b4dbca0bb97a8d7d91d56de2e2d0246704ead9c", "commitAfterChange": "f45c88f3e7a99f05a0822482d3d6807236a1c216", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 21, "signatureBeforeChange": "\t \tpublic AccessRestriction getImportRestriction()", "signatureAfterChange": "\t \tpublic AccessRestriction getImportRestriction()", "diff": ["-\t\t\tchar[][] importIncludes = getAccessRestrictionPatterns(this.inclusionPatterns);", "-\t\t\tchar[][] importExcludes = getAccessRestrictionPatterns(this.exclusionPatterns);", "-\t\t\tif (importIncludes == null && importExcludes == null) {", "+\t\t\tchar[][] accessibleFilesPatterns = getAccessRestrictionPatterns(this.accessibleFiles);", "+\t\t\tchar[][] nonAccessibleFilesPatterns = getAccessRestrictionPatterns(this.nonAccessibleFiles);", "+\t\t\tif (accessibleFilesPatterns == null && nonAccessibleFilesPatterns == null) {", "-\t\t\t\tthis.importRestriction = new AccessRestriction(", "-\t\t\t\t\t\t\t\t\t(this.entryKind == CPE_PROJECT || this.entryKind == CPE_SOURCE) // can be remote source entry when reconciling", "-\t\t\t\t\t\t\t\t\t\t? org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.project\", \"{0}\", getPath().segment(0)) //$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t\t\t\t\t\t\t\t: org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.library\", \"{0}\", getPath().makeRelative().toOSString()), //$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t\t\t\t\t\t\timportIncludes, ", "-\t\t\t\t\t\t\t\t\timportExcludes,", "-\t\t\t\t\t\t\t\t\tnull /* no further restriction */);", "+\t\t\t\tString messageTemplate;", "+\t\t\t\tif (this.entryKind == CPE_PROJECT || this.entryKind == CPE_SOURCE) { // can be remote source entry when reconciling", "+\t\t\t\t\tmessageTemplate = org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.project\", \"{0}\", getPath().segment(0)); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t} else {", "+\t\t\t\t\tIPath libPath = getPath();", "+\t\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), libPath, false);", "+\t\t\t\t\tString pathString;", "+\t\t\t\t\tif (target instanceof java.io.File)", "+\t\t\t\t\t\tpathString = libPath.toOSString();", "+\t\t\t\t\telse", "+\t\t\t\t\t\tpathString = libPath.makeRelative().toString();", "+\t\t\t\t\tmessageTemplate = org.eclipse.jdt.internal.core.util.Util.bind(\"restrictedAccess.library\", \"{0}\", pathString); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t}\t", "+\t\t\t\tthis.importRestriction = ", "+\t\t\t\t\tnew AccessRestriction(", "+\t\t\t\t\t\tmessageTemplate,", "+\t\t\t\t\t\taccessibleFilesPatterns, ", "+\t\t\t\t\t\tnonAccessibleFilesPatterns,", "+\t\t\t\t\t\tnull /* no further restriction */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "defe2a06cdf2c13123b495208e3328e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "c7faa32a6528344b00a9e604c5a7741d66ef04b2", "commitAfterChange": "3ebd920b94628f11b4180b27539affa16ca37a1e", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath( \t\tboolean ignoreUnresolvedEntry, \t\tboolean generateMarkerOnError) \t\tthrows JavaModelException", "diff": ["+", "+\t\t\t// remember the timestamps of external libraries", "+\t\t\tfor (int i = 0, length = resolvedPath.length; i < length; i++) {", "+\t\t\t\tIClasspathEntry entry = resolvedPath[i];", "+\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\t\t\tIPath path = entry.getPath();", "+\t\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), path, true);", "+\t\t\t\t\tif (target instanceof java.io.File) {", "+\t\t\t\t\t\tlong timestamp = DeltaProcessor.getTimeStamp((java.io.File)target);", "+\t\t\t\t\t\tJavaModelManager.getJavaModelManager().deltaProcessor.externalTimeStamps.put(path, new Long(timestamp));\t\t\t\t\t\t\t", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}\t\t\t\t\t\t\t", "+\t\t"]}], "num": 1796}