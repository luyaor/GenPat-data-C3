{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "852a0c7a05e0fc507081c48195acc6ef", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0048728121a35a5e0098979c89d5489", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "de08ae3ac42ace8070739ebb7715adc6c4ed1304", "commitAfterChange": "a74cc2e7acd1e0aec09bded5c981fd784a55b04c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  SourceMapper createSourceMapper(IPath sourcePath, IPath rootPath)", "signatureAfterChange": "  SourceMapper createSourceMapper(IPath sourcePath, IPath rootPath) throws JavaModelException", "diff": ["-SourceMapper createSourceMapper(IPath sourcePath, IPath rootPath) {", "+SourceMapper createSourceMapper(IPath sourcePath, IPath rootPath) throws JavaModelException {", "+\tIClasspathEntry entry = ((JavaProject) getParent()).getClasspathEntryFor(getPath());", "+\tString encoding = (entry== null) ? null : ((ClasspathEntry) entry).getSourceAttachmentEncoding();", "-\t\tgetJavaProject().getOptions(true)); // cannot use workspace options if external jar is 1.5 jar and workspace options are 1.4 options", "+\t\tgetJavaProject().getOptions(true),// cannot use workspace options if external jar is 1.5 jar and workspace options are 1.4 options", "+\t\tencoding);", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fbfe126b24b2b0927db0e789cc555491", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "86397dfc80023f615cc88c0705b2ada916e6efb2", "commitAfterChange": "24624a25f60573230ed7652730faedca15fd4d8b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, IPath[] exclusionPatterns, String specificOutputLocation) throws JavaModelException", "signatureAfterChange": " \tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, IPath[] patterns, boolean areExclusionPatterns, String specificOutputLocation) throws JavaModelException", "diff": ["+\t */", "+\tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName, IPath[] patterns, boolean areExclusionPatterns, String specificOutputLocation) throws JavaModelException {", "-\t\tIClasspathEntry entry = JavaCore.newSourceEntry(path, exclusionPatterns == null ? new Path[0] : exclusionPatterns, outputPath);", "+\t\tIClasspathEntry entry;", "+\t\tif (areExclusionPatterns)", "+\t\t\t// exclusion patterns", "+\t\t\tentry = JavaCore.newSourceEntry(path, patterns == null ? new Path[0] : patterns, outputPath);", "+\t\telse", "+\t\t\t// inclusion patterns", "+\t\t\tentry = JavaCore.newSourceEntry(path, patterns == null ? new Path[0] : patterns, new Path[0], outputPath);"]}], "num": 7794}