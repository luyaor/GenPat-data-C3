{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f4ba91a6423e4e639cf121032c11aad", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "832baf14d4d41e3c99734245ac7ba7ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  private static int encodeTypeSignature(char[] typeName, int start, boolean isResolved, int length, StringBuffer buffer)", "signatureAfterChange": "  private static int encodeTypeSignature(char[] typeName, int start, boolean isResolved, int length, StringBuffer buffer)", "diff": ["-\t\tcase 'c':", "-\t\t    checkPos = checkName(CHAR, typeName, pos, length);", "-\t\t    if (checkPos > 0) {", "-\t\t        pos = encodeArrayDimension(typeName, checkPos, length, buffer);", "-\t\t\t    buffer.append(C_CHAR);", "-\t\t\t    return pos;", "-\t\t\t} ", "-\t\t    break;", "+\t\tcase 'c':", "+\t\t    checkPos = checkName(CHAR, typeName, pos, length);", "+\t\t    if (checkPos > 0) {", "+\t\t        pos = encodeArrayDimension(typeName, checkPos, length, buffer);", "+\t\t\t    buffer.append(C_CHAR);", "+\t\t\t    return pos;", "+\t\t\t} else {", "+\t\t\t\tcheckPos = checkName(CAPTURE, typeName, pos, length);", "+\t\t\t\tif (checkPos > 0) {", "+\t\t\t\t\tpos = consumeWhitespace(typeName, checkPos, length);", "+\t\t\t\t\tif (typeName[pos] != '?') {", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t} else {", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tbuffer.append(C_CAPTURE);", "+\t\t\t// fall-thru for wildcard part of capture typecheckPos"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d98be0bc24b8871ffe81c3b86aa38d7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/Signature.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 28, "signatureBeforeChange": "  private static int encodeTypeSignature(char[] typeName, int start, boolean isResolved, int length, StringBuffer buffer)", "signatureAfterChange": "  private static int encodeTypeSignature(char[] typeName, int start, boolean isResolved, int length, StringBuffer buffer)", "diff": ["-\t\t    pos = encodeTypeSignature(typeName, checkPos, isResolved, length, buffer);", "-\t\t    while ((checkPos = checkNextChar(typeName, ',', pos, length, true)) > 0) {", "-\t\t\t    pos = encodeTypeSignature(typeName, checkPos, isResolved, length, buffer);", "-\t\t    }", "-\t\t    pos = checkNextChar(typeName, '>', pos, length, false);", "-\t\t\tbuffer.append(C_GENERIC_END);", "+\t\t\t// Stop gap fix for <>.", "+\t\t\tif ((pos = checkNextChar(typeName, '>', checkPos, length, true)) > 0) {", "+\t\t\t\tbuffer.append(C_GENERIC_END);", "+\t\t\t} else {", "+\t\t\t\tpos = encodeTypeSignature(typeName, checkPos, isResolved, length, buffer);", "+\t\t\t\twhile ((checkPos = checkNextChar(typeName, ',', pos, length, true)) > 0) {", "+\t\t\t\t\tpos = encodeTypeSignature(typeName, checkPos, isResolved, length, buffer);", "+\t\t\t\t}", "+\t\t\t\tpos = checkNextChar(typeName, '>', pos, length, false);", "+\t\t\t\tbuffer.append(C_GENERIC_END);", "+\t\t\t}", "-}"]}], "num": 7672}