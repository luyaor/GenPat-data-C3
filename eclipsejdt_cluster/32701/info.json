{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "912233bfeaf14215c7a1dad56a49876e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1741627af6538a840be78ab6c651925e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationExpression.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof VariableDeclarationExpression)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tVariableDeclarationExpression o = (VariableDeclarationExpression) other;\r", "-\t\treturn\r", "-\t\t\tgetModifiers() == o.getModifiers()\r", "-\t\t\t&& ASTNode.equalNodes(getType(), o.getType())\r", "-\t\t\t&& ASTNode.equalLists(fragments(), o.fragments());\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "871c975aefc4cd88db4a724af20670ad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/VariableDeclarationStatement.java", "commitBeforeChange": "4ab6cc8c24529af798fcb3762ec8aa5f9887812e", "commitAfterChange": "86d04547b51d0677dda29f45b4279354b3702983", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tboolean equalSubtrees(Object other)", "signatureAfterChange": "\r \tpublic boolean subtreeMatch(ASTMatcher matcher, Object other)", "diff": ["-\tboolean equalSubtrees(Object other) {\r", "-\t\tif (!(other instanceof VariableDeclarationStatement)) {\r", "-\t\t\treturn false;\r", "-\t\t}\r", "-\t\tVariableDeclarationStatement o = (VariableDeclarationStatement) other;\r", "-\t\treturn\r", "-\t\t\tgetModifiers() == o.getModifiers()\r", "-\t\t\t&& ASTNode.equalNodes(getType(), o.getType())\r", "-\t\t\t&& ASTNode.equalLists(fragments(), o.fragments());\r", "+\tpublic boolean subtreeMatch(ASTMatcher matcher, Object other) {\r", "+\t\t// dispatch to correct overloaded match method\r", "+\t\treturn matcher.match(this, other);\r"]}], "num": 32701}