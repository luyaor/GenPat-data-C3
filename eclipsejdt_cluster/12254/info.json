{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c887cdab89fb3c0638a41a73add68fa2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72ca054a7cab3167538dc67428321480", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void boundCheck(Scope scope, TypeReference[] argumentReferences)", "signatureAfterChange": " \tpublic void boundCheck(Scope scope, TypeReference[] argumentReferences)", "diff": ["-\t\t\t\t\t\tscope.problemReporter().typeMismatchError(this.arguments[i], typeVariables[i], this.type, argumentReferences[i]);", "+\t\t\t\t    \tif ((this.arguments[i].tagBits & TagBits.HasMissingType) == 0) {", "+\t\t\t\t    \t\t// do not report secondary error, if type reference already got complained against", "+\t\t\t\t\t\t\tscope.problemReporter().typeMismatchError(this.arguments[i], typeVariables[i], this.type, argumentReferences[i]);", "+\t\t\t\t    \t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e23132661a178897119acf86aaffe0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "51bd63a22899c3914a4700dcdf97ec58937533c9", "commitAfterChange": "84f1aab618cdc74f8c6aecebdc0fb845b80d6368", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " protected void consumeMemberValuePair()", "signatureAfterChange": " protected void consumeMemberValuePair()", "diff": ["-\tthis.patternLocator.match((MemberValuePair) this.astStack[this.astPtr], this.nodeSet);", "+\tif ((this.patternFineGrain & ~IJavaSearchConstants.METHOD_REFERENCE_EXPRESSION) != 0) {", "+\t\tthis.patternLocator.match((MemberValuePair) this.astStack[this.astPtr], this.nodeSet);", "+\t}"]}], "num": 12254}