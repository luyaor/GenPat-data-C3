{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b2c323046bdf17e682df37987702b64a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91c864a4bfe68b03ed11077543383107", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/DependencyGraph.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic INode getNodeFor(Object o, boolean create)", "signatureAfterChange": "\r \tpublic INode getNodeFor(Object o, boolean create)", "diff": ["-\t\t\treturn getNodeFor((PackageElement) o, create);\r", "-\t\t} else\r", "-\t\t\tif (o instanceof IPackage) {\r", "-\t\t\t\treturn getNodeFor((IPackage) o, create);\r", "-\t\t\t} else\r", "-\t\t\t\tif (o instanceof IPath) {\r", "-\t\t\t\t\treturn getNodeFor((IPath) o, create);\r", "-\t\t\t\t} else {\r", "-\t\t\t\t\tAssert.isTrue(false, \"Unknown kind of node.\");\r", "-\t\t\t\t\treturn null;\r", "-\t\t\t\t}\r", "+\t\t\treturn getNodeFor((PackageElement)o, create);\r", "+\t\t} else if (o instanceof IPackage) {\r", "+\t\t\treturn getNodeFor((IPackage)o, create);\r", "+\t\t} else if (o instanceof IPath) {\r", "+\t\t\treturn getNodeFor((IPath)o, create);\r", "+\t\t}\r", "+\t\telse {\r", "+\t\t\tAssert.isTrue(false, Util.bind(\"build.unknownNode\"/*nonNLS*/));\r", "+\t\t\treturn null;\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d29c68941615dfa390a702052e33dd33", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/ConstructorReferencePattern.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected boolean matches(AstNode node, boolean resolve)", "signatureAfterChange": "\r public int matchLevel(AstNode node, boolean resolve)", "diff": ["- */\r", "-protected boolean matches(AstNode node, boolean resolve) {\r", "-\tif (node instanceof AllocationExpression) {\r", "-\t\treturn this.matches((AllocationExpression)node, resolve);\r", "-\t} else if (node instanceof ExplicitConstructorCall) {\r", "-\t\treturn this.matches((ExplicitConstructorCall)node, resolve);\r", "-\t}\r", "-\treturn false;\r", "-}\r", "+ */\r", "+public int matchLevel(AstNode node, boolean resolve) {\r", "+\tif (node instanceof AllocationExpression) {\r", "+\t\treturn this.matchLevel((AllocationExpression)node, resolve);\r", "+\t} else if (node instanceof ExplicitConstructorCall) {\r", "+\t\treturn this.matchLevel((ExplicitConstructorCall)node, resolve);\r", "+\t}\r", "+\treturn IMPOSSIBLE_MATCH;\r", "+}\r"]}], "num": 14335}