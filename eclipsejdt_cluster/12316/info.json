{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4349082edbb712199fcc8195374153fd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8332189a08e811a1570a076e899d1a08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "c0f9d8b84abc89ce64134386f4c44ab56579df25", "commitAfterChange": "9ba8652d2cebf2117416af5e39a70e172556117b", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["+\t\t\t\tchar[] exceptionType = Signature.toCharArray(localVariableTableEntry.getDescriptor());", "+\t\t\t\tCharOperation.replace(exceptionType, '/', '.');", "-\t\t\t\t\t.append(Signature.toCharArray(localVariableTableEntry.getDescriptor()));", "+\t\t\t\t\t.append(exceptionType);", "+\t\t\tchar[] exceptionType = Signature.toCharArray(localVariableTableEntry.getDescriptor());", "+\t\t\tCharOperation.replace(exceptionType, '/', '.');", "-\t\t\t\t.append(Signature.toCharArray(localVariableTableEntry.getDescriptor()));", "+\t\t\t\t.append(exceptionType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ce235978526a426d337698c4a968908", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "b9b175d1f3b3a2cd4a485af26edf7481b654f8d0", "commitAfterChange": "2ee5cab3338235f002d8a433d3e99e7f32c5838e", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected IJavaElement createHandle(AbstractMethodDeclaration method, IJavaElement parent)", "signatureAfterChange": " protected IJavaElement createHandle(AbstractMethodDeclaration method, IJavaElement parent)", "diff": ["-\t\t\t\t\t\tchar[][] parameterTypes = Signature.getParameterTypes(binaryMethod.getMethodDescriptor());", "+\t\t\t\t\t\tchar[] signature = binaryMethod.getGenericSignature();", "+\t\t\t\t\t\tif (signature == null) signature = binaryMethod.getMethodDescriptor();", "+\t\t\t\t\t\tchar[][] parameterTypes = Signature.getParameterTypes(signature);", "-\t\t\t\t\t\t\tif (!CharOperation.endsWith(Signature.toCharArray(parameterTypeName), typeName))", "+\t\t\t\t\t\t\tif (!CharOperation.endsWith(Signature.toCharArray(Signature.getTypeErasure(parameterTypeName)), typeName))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b80acdd35fc95b273561806d2ad30b06", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/AstNodeFinder.java", "commitBeforeChange": "14f89ca9b18a3480429e3f25bc68dd79b7e9f0db", "commitAfterChange": "eb21ce31e87e64ed6c3b487b0fe31d2556ab8015", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic AbstractMethodDeclaration findMethod(IMethod methodHandle)", "signatureAfterChange": " \tpublic AbstractMethodDeclaration findMethod(IMethod methodHandle)", "diff": ["-\t\t\tString[] parameterTypeNames = methodHandle.getParameterTypes();", "-\t\t\tint parameterCount = parameterTypeNames.length;", "+\t\t\tString[] parameterTypeSignatures = methodHandle.getParameterTypes();", "+\t\t\tint parameterCount = parameterTypeSignatures.length;", "-\t\t\t\t\t\t\tif (!CharOperation.equals(args[j].name, parameterTypeNames[j].toCharArray())) {", "+\t\t\t\t\t\t\tTypeReference type = args[j].type;", "+\t\t\t\t\t\t\tString signature = org.eclipse.jdt.internal.core.Util.typeSignature(type);", "+\t\t\t\t\t\t\tif (!signature.equals(parameterTypeSignatures[j])) {"]}], "num": 12316}