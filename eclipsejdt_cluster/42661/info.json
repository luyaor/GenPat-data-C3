{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "923bd55f8979b549f1eba9b7585a3e41", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bb5a58c51ffcf02374d03ea6f5e337d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 70, "methodNumberAfterChange": 68, "signatureBeforeChange": " \tpublic IPath getOutputLocation(boolean createMarkers, boolean logProblems) throws JavaModelException", "signatureAfterChange": " \tpublic IPath getOutputLocation() throws JavaModelException", "diff": ["-\t */", "-\tpublic IPath getOutputLocation(boolean createMarkers, boolean logProblems) throws JavaModelException {", "-", "-\t\tJavaModelManager.PerProjectInfo perProjectInfo = getPerProjectInfo();", "+\t\t// Do not create marker while getting output location", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = this.getPerProjectInfo();", "-", "+\t\t", "-\t\tthis.getRawClasspath(createMarkers, logProblems);", "+\t\tgetRawClasspath();", "+\t\t", "-\t\t\treturn defaultOutputLocation();", "+\t\t\treturn this.defaultOutputLocation();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4613b31be327652f26758efbf860db4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragment.java", "commitBeforeChange": "9a282e201d7bcf805a911be644106295038b1f1b", "commitAfterChange": "e6d78cda375a26ce6fdb882d62ed50fe3c6a25b5", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " public String getAttachedJavadoc(IProgressMonitor monitor, String defaultEncoding) throws JavaModelException", "signatureAfterChange": " public String getAttachedJavadoc(IProgressMonitor monitor, String defaultEncoding) throws JavaModelException", "diff": ["+\tPerProjectInfo projectInfo = JavaModelManager.getJavaModelManager().getPerProjectInfoCheckExistence(this.getJavaProject().getProject());", "+\tif (projectInfo.javadocCache != null) {", "+\t\tfinal String cachedJavadoc = (String) projectInfo.javadocCache.get(this);", "+\t\tif (cachedJavadoc != null) {", "+\t\t\treturn cachedJavadoc;", "+\t\t}", "+\t} else {", "+\t\tprojectInfo.javadocCache = new HashMap();", "+\t}", "+\tprojectInfo.javadocCache.put(this, contents);"]}], "num": 42661}