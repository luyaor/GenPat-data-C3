{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d6a170e8aac9b9990f001a760db29ab6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c764717b711013d1cc4eb485e7552b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env)", "signatureAfterChange": " static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env, char[][][] missingTypeNames)", "diff": ["-static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env) {", "+static AnnotationBinding createAnnotation(IBinaryAnnotation annotationInfo, LookupEnvironment env, char[][][] missingTypeNames) {", "-\t\tpairs[i] = new ElementValuePair(binaryPairs[i].getName(), convertMemberValue(binaryPairs[i].getValue(), env), null);", "+\t\tpairs[i] = new ElementValuePair(binaryPairs[i].getName(), convertMemberValue(binaryPairs[i].getValue(), env, missingTypeNames), null);", "-\tReferenceBinding annotationType = env.getTypeFromConstantPoolName(typeName, 1, typeName.length - 1, false);", "+\tReferenceBinding annotationType = env.getTypeFromConstantPoolName(typeName, 1, typeName.length - 1, false, missingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f5cc7b6c34fa33a78c33fb70ba4b0bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "f69ff4a662bad4fd89b88d240101a9ac63e64955", "commitAfterChange": "7c493ed6b34d98f52ff4fc8520fcd8662e5ffd91", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tTypeAnnotationWalker walker)", "signatureAfterChange": "  TypeBinding getTypeFromVariantTypeSignature( \t\tSignatureWrapper wrapper, \t\tTypeVariableBinding[] staticVariables, \t\tReferenceBinding enclosingType, \t\tReferenceBinding genericType, \t\tint rank, \t\tchar[][][] missingTypeNames, \t\tTypeAnnotationWalker walker)", "diff": ["-\t\t\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);", "+\t\t\tAnnotationBinding [] annotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(-1), this, missingTypeNames);", "-\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);", "+\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(-1), this, missingTypeNames);", "-\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(0), this, missingTypeNames);", "+\t\t\tannotations = BinaryTypeBinding.createAnnotations(walker.getAnnotationsAtCursor(-1), this, missingTypeNames);"]}], "num": 50311}