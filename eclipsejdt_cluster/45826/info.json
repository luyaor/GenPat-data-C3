{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "574f473690687b8c39a587a20219bc58", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52cb8cf8b01114f50a798d1ba29f21a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BasicBuildTests.java", "commitBeforeChange": "90b810df265e79befa5cf6aa97ec5bb891d50b26", "commitAfterChange": "97ab3cc22cd29aa2a71224814e66535bc04ff083", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void testbBug386901() throws JavaModelException", "signatureAfterChange": " \tpublic void testbBug386901() throws JavaModelException", "diff": ["-\t\tIPath projectPath = env.addProject(\"Project\"); //$NON-NLS-1$", "-\t\tenv.addExternalJars(projectPath, Util.getJavaClassLibs());", "-", "-\t\t// remove old package fragment root so that names don't collide", "-\t\tenv.removePackageFragmentRoot(projectPath, \"\"); //$NON-NLS-1$", "-", "-\t\tIPath root = env.addPackageFragmentRoot(projectPath, \"src\"); //$NON-NLS-1$", "-\t\tenv.setOutputFolder(projectPath, \"bin\"); //$NON-NLS-1$", "-", "-\t\tenv.addClass(root, \"p\", \"AA\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"package p;\t\\n\"+ //$NON-NLS-1$", "-\t\t\t\"public class AA {}\t\\n\"+ //$NON-NLS-1$", "-\t\t\t\"class AZ {}\"); //$NON-NLS-1$", "-", "-\t\tIPath pathToAB = env.addClass(root, \"p\", \"AB\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"package p;\t\\n\"+ //$NON-NLS-1$", "-\t\t\t\"public class AB extends AZ {}\"); //$NON-NLS-1$", "-", "+\t\t", "-\t\torg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.MAX_AT_ONCE = 1; // units compiled in batches of '1' unit", "-\t\tfullBuild(projectPath);", "-\t\texpectingProblemsFor(", "-\t\t\t\tpathToAB,", "-\t\t\t\t\"Problem : AZ cannot be resolved to a type [ resource : </Project/src/p/AB.java> range : <36,38> category : <40> severity : <2>]\"", "-\t\t\t);", "+\t\ttry {", "+\t\t\tIPath projectPath = env.addProject(\"Project\"); //$NON-NLS-1$", "+\t\t\tenv.addExternalJars(projectPath, Util.getJavaClassLibs());", "-\t\torg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.MAX_AT_ONCE = 0; // All units compiled at once", "-\t\tfullBuild(projectPath);", "-\t\texpectingNoProblems();", "-\t\tassertEquals(\"Incorrect value\", 0, previous);", "+\t\t\t// remove old package fragment root so that names don't collide", "+\t\t\tenv.removePackageFragmentRoot(projectPath, \"\"); //$NON-NLS-1$", "+", "+\t\t\tIPath root = env.addPackageFragmentRoot(projectPath, \"src\"); //$NON-NLS-1$", "+\t\t\tenv.setOutputFolder(projectPath, \"bin\"); //$NON-NLS-1$", "+", "+\t\t\tenv.addClass(root, \"p\", \"AA\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\"package p;\t\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"public class AA {}\t\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"class AZ {}\"); //$NON-NLS-1$", "+", "+\t\t\tIPath pathToAB = env.addClass(root, \"p\", \"AB\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\"package p;\t\\n\"+ //$NON-NLS-1$", "+\t\t\t\t\"public class AB extends AZ {}\"); //$NON-NLS-1$", "+", "+\t\t\torg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.MAX_AT_ONCE = 1; // units compiled in batches of '1' unit", "+\t\t\tfullBuild(projectPath);", "+\t\t\texpectingProblemsFor(", "+\t\t\t\t\tpathToAB,", "+\t\t\t\t\t\"Problem : AZ cannot be resolved to a type [ resource : </Project/src/p/AB.java> range : <36,38> category : <40> severity : <2>]\"", "+\t\t\t\t);", "+", "+\t\t\torg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.MAX_AT_ONCE = 0; // All units compiled at once", "+\t\t\tfullBuild(projectPath);", "+\t\t\texpectingNoProblems();", "+\t\t} finally {", "+\t\t\torg.eclipse.jdt.internal.core.builder.AbstractImageBuilder.MAX_AT_ONCE = previous;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abd3bd87f1e4ac772f0abcc7f19be92f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/OutputFolderTests.java", "commitBeforeChange": "abd333621a0cbd2492673b0e887a888245d2d663", "commitAfterChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void testChangeOutputFolder()", "signatureAfterChange": "  \tpublic void testChangeOutputFolder()", "diff": ["+", "+\tpublic void testChangeOutputFolder() {", "+\t\tIPath projectPath = env.addProject(\"Project\"); //$NON-NLS-1$", "+\t\tenv.addExternalJar(projectPath, Util.getJavaClassLib());", "+", "+\t\t// remove old package fragment root so that names don't collide", "+\t\tenv.removePackageFragmentRoot(projectPath, \"\"); //$NON-NLS-1$", "+", "+\t\tIPath root = env.addPackageFragmentRoot(projectPath, \"src\"); //$NON-NLS-1$", "+\t\tIPath bin1 = env.setOutputFolder(projectPath, \"bin1\"); //$NON-NLS-1$", "+", "+\t\tenv.addClass(root, \"p\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\"package p;\\n\" + //$NON-NLS-1$", "+\t\t\t\"public class Test {}\" //$NON-NLS-1$", "+\t\t);", "+", "+\t\tfullBuild();", "+\t\texpectingNoProblems();", "+\t\texpectingPresenceOf(bin1.append(\"p/Test.class\")); //$NON-NLS-1$", "+", "+\t\tIPath bin2 = env.setOutputFolder(projectPath, \"bin2\"); //$NON-NLS-1$", "+\t\tincrementalBuild();", "+\t\texpectingNoProblems();", "+\t\texpectingPresenceOf(bin2.append(\"p/Test.class\")); //$NON-NLS-1$", "+\t}", "-\t", "-\tpublic void testChangeOutputFolder() {", "-\t\t//----------------------------", "-\t\t//           Step 1: Setup project and full build", "-\t\t//----------------------------", "-\t\tIPath projectPath = env.addProject(\"Project\"); //$NON-NLS-1$", "-\t\t", "-\t\t// remove old package fragment root so that names don't collide", "-\t\tenv.removePackageFragmentRoot(projectPath, \"\"); //$NON-NLS-1$", "-\t\t", "-\t\tIPath root = env.addPackageFragmentRoot(projectPath, \"src\"); //$NON-NLS-1$", "-\t\tIPath bin1 = env.setOutputFolder(projectPath, \"bin1\"); //$NON-NLS-1$", "-\t\tenv.addClass(root, \"p\", \"Test\", //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\"package p;\\n\" + //$NON-NLS-1$", "-\t\t\t\"public class Test {\\n\"+ //$NON-NLS-1$", "-\t\t\t\"}\\n\" //$NON-NLS-1$", "-\t\t\t", "-\t\texpectingPresenceOf(new IPath[]{", "-\t\t\tbin1,", "-\t\t\tbin1.append(\"p\").append(\"Test.class\"), //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t", "-\t\t//----------------------------", "-\t\t//           Step 2: Incremental build", "-\t\t//----------------------------", "-\t\t/* Disabled as the incremental builder doesn't detect the change of output folder", "-\t\tIPath bin2 = env.setOutputFolder(projectPath, \"bin2\"); //$NON-NLS-1$", "-\t\t", "-\t\tincrementalBuild();", "-\t\t", "-\t\texpectingNoProblems();", "-\t\texpectingPresenceOf(new IPath[]{", "-\t\t\tbin2,", "-\t\t\tbin2.append(\"p\").append(\"Test.class\"), //$NON-NLS-1$ //$NON-NLS-2$", "-\t\t});", "-\t\t*/", "-\t\t", "-\t\t//----------------------------", "-\t\t//           Step 3: Full build", "-\t\t//----------------------------", "-\t\tIPath bin3 = env.setOutputFolder(projectPath, \"bin3\"); //$NON-NLS-1$", "-\t\t", "-\t\t", "-\t\texpectingPresenceOf(new IPath[]{", "-\t\t\tbin3,", "-\t\t\tbin3.append(\"p\").append(\"Test.class\"), //$NON-NLS-1$ //$NON-NLS-2$"]}], "num": 45826}