{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "33761f49913844d120185ae30457ad11", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6320e9d4aae2eabd395756b70a7469db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ProblemConstructorTest.java", "commitBeforeChange": "8d8cc91b7aba4777ee9418a3cef6e1e163bfbf27", "commitAfterChange": "d0534e0376f1634b8fe35d19dde78d7433440f37", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test004()", "signatureAfterChange": " public void test004()", "diff": ["-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tprivate class M { \\n\" + // expect unused field, method, constructor and type warnings", "-\t\t\t\t\"       private int state = 0;\\n\" +", "-\t\t\t\t\"       public int unusedMethod() { return this.state; }\\n\" +", "-\t\t\t\t\"       public M (int state) { this.state = state;} \\n\" +", "-\t\t\t\t\"       public int unusedField = 0;\\n\" +", "-\t\t\t\t\"       public class N {}\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"\tprivate class N { \\n\" +  // No warnings should come from within here", "-\t\t\t\t\"       private int state = 0;\\n\" +", "-\t\t\t\t\"       public int usedMethod() { new O(); return new N(this.state + this.usedField).state; }\\n\" +", "-\t\t\t\t\"       public N (int state) { this.state = state;} \\n\" +", "-\t\t\t\t\"       public int usedField = 0;\\n\" +", "-\t\t\t\t\"       public class O {}\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"\tpublic class P { \\n\" + // No warnings should come from within here.", "-\t\t\t\t\"       private int state = 0;\\n\" +", "-\t\t\t\t\"       public int unusedMethod() { return this.state; }\\n\" +", "-\t\t\t\t\"       public P (int state) { this.state = state;} \\n\" +", "-\t\t\t\t\"       public int unusedField = 0;\\n\" +", "-\t\t\t\t\"       public class N {}\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"\tpublic M foo(M m, N n) {\\n\" +", "-\t\t\t\t\"   n.usedMethod(); return m;\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"} \\n\"", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tpublic int unusedMethod() { return this.state; }\\n\" + ", "-\t\t\t\"\t           ^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The method unusedMethod() from the type X.M is never used locally\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. WARNING in X.java (at line 6)\\n\" + ", "-\t\t\t\"\tpublic int unusedField = 0;\\n\" + ", "-\t\t\t\"\t           ^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The field X.M.unusedField is never read locally\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\t\"\tpublic class N {}\\n\" + ", "-\t\t\t\"\t             ^\\n\" + ", "-\t\t\t\"The type X.M.N is never used locally\\n\" + ", "-\t\t\t\"----------\\n\"", "-\t\t\t);", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\tprivate class M { \\n\" + // expect unused field, method, constructor and type warnings", "+\t\t\t\"       private int state = 0;\\n\" +", "+\t\t\t\"       public int unusedMethod() { return this.state; }\\n\" +", "+\t\t\t\"       public M (int state) { this.state = state;} \\n\" +", "+\t\t\t\"       public int unusedField = 0;\\n\" +", "+\t\t\t\"       public class N {}\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"\tprivate class N { \\n\" +  // No warnings should come from within here", "+\t\t\t\"       private int state = 0;\\n\" +", "+\t\t\t\"       public int usedMethod() { new O(); return new N(this.state + this.usedField).state; }\\n\" +", "+\t\t\t\"       public N (int state) { this.state = state;} \\n\" +", "+\t\t\t\"       public int usedField = 0;\\n\" +", "+\t\t\t\"       public class O {}\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"\tpublic class P { \\n\" + // No warnings should come from within here.", "+\t\t\t\"       private int state = 0;\\n\" +", "+\t\t\t\"       public int unusedMethod() { return this.state; }\\n\" +", "+\t\t\t\"       public P (int state) { this.state = state;} \\n\" +", "+\t\t\t\"       public int unusedField = 0;\\n\" +", "+\t\t\t\"       public class N {}\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"\tpublic M foo(M m, N n) {\\n\" +", "+\t\t\t\"   n.usedMethod(); return m;\\n\" +", "+\t\t\t\"\t}\\n\" +", "+\t\t\t\"} \\n\"", "+\t\t},", "+\t\t\"----------\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 4)\\n\" + ", "+\t\t\"\tpublic int unusedMethod() { return this.state; }\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"The method unusedMethod() from the type X.M is never used locally\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 5)\\n\" + ", "+\t\t\"\tpublic M (int state) { this.state = state;} \\n\" + ", "+\t\t\"\t       ^^^^^^^^^^^^^\\n\" + ", "+\t\t\"The constructor X.M(int) is never used locally\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 6)\\n\" + ", "+\t\t\"\tpublic int unusedField = 0;\\n\" + ", "+\t\t\"\t           ^^^^^^^^^^^\\n\" + ", "+\t\t\"The field X.M.unusedField is never read locally\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\"\tpublic class N {}\\n\" + ", "+\t\t\"\t             ^\\n\" + ", "+\t\t\"The type X.M.N is never used locally\\n\" + ", "+\t\t\"----------\\n\"", "+\t\t);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8d55f73d5410a489c82f36293087bd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "b031afa5d276b867791e1b801c0ddbbd905837a2", "commitAfterChange": "af60458069f14dd1b42612d075df4c51d6608d2d", "methodNumberBeforeChange": 299, "methodNumberAfterChange": 299, "signatureBeforeChange": " public void test149()", "signatureAfterChange": " public void test149()", "diff": ["-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in B.java (at line 2)\\n\" +", "-\t\t\"\tstatic void a(X x) {}\\n\" +", "-\t\t\"\t            ^^^^^^\\n\" +", "-\t\t\"This static method cannot hide the instance method from A\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in B.java (at line 3)\\n\" +", "-\t\t\"\tstatic void b(Y<String> y) {}\\n\" +", "-\t\t\"\t            ^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Name clash: The method b(Y<String>) of type B has the same erasure as b(Y<Integer>) of type A but does not override it\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in B2.java (at line 2)\\n\" +", "-\t\t\"\tstatic void b(Y<Integer> y) {}\\n\" +", "-\t\t\"\t            ^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"This static method cannot hide the instance method from A\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in C.java (at line 3)\\n\" +", "-\t\t\"\tvoid b(Y<String> y) {}\\n\" +", "-\t\t\"\t     ^^^^^^^^^^^^^^\\n\" +", "-\t\t\"Name clash: The method b(Y<String>) of type C has the same erasure as b(Y<Integer>) of type A but does not override it\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in C.java (at line 4)\\n\" +", "-\t\t\"\tvoid c(X x) {}\\n\" +", "-\t\t\"\t     ^^^^^^\\n\" +", "-\t\t\"This instance method cannot override the static method from A\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"----------\\n\" +", "-\t\t\"1. ERROR in C2.java (at line 3)\\n\" +", "-\t\t\"\tvoid d(Y<Integer> y) {}\\n\" +", "-\t\t\"\t     ^^^^^^^^^^^^^^^\\n\" +", "-\t\t\"This instance method cannot override the static method from A\\n\" +", "-\t\t\"----------\\n\"", "+\t\tthis.complianceLevel < ClassFileConstants.JDK1_7 ?", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in B.java (at line 2)\\n\" + ", "+\t\t\"\tstatic void a(X x) {}\\n\" + ", "+\t\t\"\t            ^^^^^^\\n\" + ", "+\t\t\"This static method cannot hide the instance method from A\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in B2.java (at line 2)\\n\" + ", "+\t\t\"\tstatic void b(Y<Integer> y) {}\\n\" + ", "+\t\t\"\t            ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"This static method cannot hide the instance method from A\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in C.java (at line 3)\\n\" + ", "+\t\t\"\tvoid b(Y<String> y) {}\\n\" + ", "+\t\t\"\t     ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"Name clash: The method b(Y<String>) of type C has the same erasure as b(Y<Integer>) of type A but does not override it\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in C.java (at line 4)\\n\" + ", "+\t\t\"\tvoid c(X x) {}\\n\" + ", "+\t\t\"\t     ^^^^^^\\n\" + ", "+\t\t\"This instance method cannot override the static method from A\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in C2.java (at line 3)\\n\" + ", "+\t\t\"\tvoid d(Y<Integer> y) {}\\n\" + ", "+\t\t\"\t     ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\"This instance method cannot override the static method from A\\n\" + ", "+\t\t\"----------\\n\" :", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in B.java (at line 2)\\n\" + ", "+\t\t\t\"\tstatic void a(X x) {}\\n\" + ", "+\t\t\t\"\t            ^^^^^^\\n\" + ", "+\t\t\t\"This static method cannot hide the instance method from A\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in B.java (at line 3)\\n\" + ", "+\t\t\t\"\tstatic void b(Y<String> y) {}\\n\" + ", "+\t\t\t\"\t            ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method b(Y<String>) of type B has the same erasure as b(Y<Integer>) of type A but does not hide it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in B.java (at line 5)\\n\" + ", "+\t\t\t\"\tstatic void d(Y<String> y) {}\\n\" + ", "+\t\t\t\"\t            ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method d(Y<String>) of type B has the same erasure as d(Y<Integer>) of type A but does not hide it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in B2.java (at line 2)\\n\" + ", "+\t\t\t\"\tstatic void b(Y<Integer> y) {}\\n\" + ", "+\t\t\t\"\t            ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"This static method cannot hide the instance method from A\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in C.java (at line 3)\\n\" + ", "+\t\t\t\"\tvoid b(Y<String> y) {}\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method b(Y<String>) of type C has the same erasure as b(Y<Integer>) of type A but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in C.java (at line 4)\\n\" + ", "+\t\t\t\"\tvoid c(X x) {}\\n\" + ", "+\t\t\t\"\t     ^^^^^^\\n\" + ", "+\t\t\t\"This instance method cannot override the static method from A\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in C.java (at line 5)\\n\" + ", "+\t\t\t\"\tvoid d(Y<String> y) {}\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method d(Y<String>) of type C has the same erasure as d(Y<Integer>) of type A but does not hide it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in C2.java (at line 3)\\n\" + ", "+\t\t\t\"\tvoid d(Y<Integer> y) {}\\n\" + ", "+\t\t\t\"\t     ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"This instance method cannot override the static method from A\\n\" + ", "+\t\t\t\"----------\\n\""]}], "num": 48808}