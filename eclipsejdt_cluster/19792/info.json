{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f5b892f468806bdea88f25430638d78a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64d0a9cc8cfebf102024e01b6b555477", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void testAttachSourceRetrievalMethod() throws JavaModelException", "signatureAfterChange": " public void testMethodRetrieval() throws JavaModelException", "diff": ["- */", "-public void testAttachSourceRetrievalMethod() throws JavaModelException {", "-\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "-\tIMethod[] methods = cf.getType().getMethods();", "-\tfor (int i = 0; i < methods.length; i++) {", "-\t\tIMethod method = methods[i];", "-\t\tassertTrue(\"source code does not exist for the method \" + method, method.getSource() != null);", "-\t\tassertTrue(\"method name range not correct\", method.getNameRange().getOffset() != -1 && method.getNameRange().getLength() != 0);", "-\t}", "-}", "+ */", "+public void testMethodRetrieval() throws JavaModelException {", "+\tIClassFile cf = this.root.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tIMethod[] methods = cf.getType().getMethods();", "+\tfor (int i = 0; i < methods.length; i++) {", "+\t\tIMethod method = methods[i];", "+\t\tassertTrue(\"source code does not exist for the method \" + method, method.getSource() != null);", "+\t\tassertTrue(\"method name range not correct\", method.getNameRange().getOffset() != -1 && method.getNameRange().getLength() != 0);", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9fef6f36b134aac635fc6e8f1e11a2cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AttachSourceTests.java", "commitBeforeChange": "4cbca3a5c8650b81b5a31d226fc27b2c31db5b39", "commitAfterChange": "2d45e82533a4fdf2e19ac612c4a04c15da28bf1a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " public void testClassFileGetElementAt() throws JavaModelException", "signatureAfterChange": " public void testClassFileGetElementAt02() throws JavaModelException", "diff": ["-public void testClassFileGetElementAt() throws JavaModelException {", "-\tIClassFile cf = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "-\tIJavaElement elt = null;", "-\t", "-\telt = cf.getElementAt(15);", "-\tassertTrue(\"should have found \\\"A\\\"\",", "-\t\telt != null &&", "-\t\telt.getElementType() == IJavaElement.TYPE &&", "-\t\telt.getElementName().equals(\"A\"));", "-\t", "-\telt = cf.getElementAt(53);", "-\tassertTrue(\"should have found \\\"public A()\\\"\",", "-\t\telt != null &&", "-\t\telt.getElementType() == IJavaElement.METHOD &&", "-\t\telt.getElementName().equals(\"A\"));", "-", "-\telt = cf.getElementAt(72);", "-\tassertTrue(\"should have found \\\"public void foo()\\\"\",", "-\t\telt != null &&", "-\t\telt.getElementType() == IJavaElement.METHOD &&", "-\t\telt.getElementName().equals(\"foo\"));", "+ */", "+public void testClassFileGetElementAt02() throws JavaModelException {", "+\tIClassFile classFile = this.pkgFragmentRoot.getPackageFragment(\"x.y\").getClassFile(\"A.class\");", "+\tString source = classFile.getSource();", "+\tIJavaElement element = classFile.getElementAt(source.indexOf(\"public A\"));", "+\tassertElementEquals(", "+\t\t\"Unexpected element\",", "+\t\t\"A() [in A [in A.class [in x.y [in attach.jar [in AttachSourceTests]]]]]\",", "+\t\telement);", "+}"]}], "num": 19792}