{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3669da6acb65127cdc873a689a459a3", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c26127dc2cc3d0b113887717cac1d89", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 119, "methodNumberAfterChange": 120, "signatureBeforeChange": " public void testBug36032c() throws CoreException, InterruptedException", "signatureAfterChange": " public void testBug36032c() throws CoreException, InterruptedException", "diff": ["-\t\t\t\"/P1/test/Foo.java\", ", "+\t\t\t\"/P1/test/Foo.java\",", "-\t\t\t\"/P1/test/Test1.java\", ", "+\t\t\t\"/P1/test/Test1.java\",", "-\t\t\t\"public class Test1 {\\n\" + ", "-\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\t\"\t\tnew Secondary().foo();\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "+\t\t\t\"public class Test1 {\\n\" +", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\"\t\tnew Secondary().foo();\\n\" +", "+\t\t\t\"\t}\\n\" +", "-\t\tString source = ", "+\t\tString source =", "-\t\t\t\"public class Test2 {\\n\" + ", "-\t\t\t\"\tpublic static void main(String[] args) {\\n\" + ", "-\t\t\t\"\t\tnew Secondary().foo();\\n\" + ", "-\t\t\t\"\t}\\n\" + ", "+\t\t\t\"public class Test2 {\\n\" +", "+\t\t\t\"\tpublic static void main(String[] args) {\\n\" +", "+\t\t\t\"\t\tnew Secondary().foo();\\n\" +", "+\t\t\t\"\t}\\n\" +", "-\t\t\t\"/P2/test/Test2.java\", ", "+\t\t\t\"/P2/test/Test2.java\",", "-\t\t", "+", "-\t\tthis.workingCopy = getCompilationUnit(\"/P2/test/Test2.java\").getWorkingCopy(new WorkingCopyOwner() {}, this.problemRequestor, null);", "+\t\tthis.workingCopy = getCompilationUnit(\"/P2/test/Test2.java\").getWorkingCopy(this.wcOwner, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6cc8ac66ca4f675b96b28f8793fe3e9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 75, "signatureBeforeChange": " public void testMethodWithError04() throws CoreException", "signatureAfterChange": " public void testMethodWithError04() throws CoreException", "diff": ["-\t", "+", "-\tthis.workingCopy = x.getWorkingCopy(new WorkingCopyOwner() {}, this.problemRequestor, null);", "+\tthis.workingCopy = x.getWorkingCopy(this.wcOwner, null);", "-\t// use force flag to refresh problems\t\t\t", "+\t// use force flag to refresh problems", "-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in /Reconciler/src/p1/X.java (at line 3)\\n\" + ", "-\t\t\"\tZork f;\t\\n\" + ", "-\t\t\"\t^^^^\\n\" + ", "-\t\t\"Zork cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\" +", "+\t\t\"1. ERROR in /Reconciler/src/p1/X.java (at line 3)\\n\" +", "+\t\t\"\tZork f;\t\\n\" +", "+\t\t\"\t^^^^\\n\" +", "+\t\t\"Zork cannot be resolved to a type\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a3e884a1c01537110a75e818bcda31f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 114, "signatureBeforeChange": " public void testTypeWithDollarName() throws CoreException", "signatureAfterChange": " public void testTypeWithDollarName() throws CoreException", "diff": ["-\t\t\t\"/Reconciler/src/p1/Y$Z.java\", ", "+\t\t\t\"/Reconciler/src/p1/Y$Z.java\",", "-\t\tthis.workingCopy = getCompilationUnit(\"Reconciler/src/p1/Y$Z.java\").getWorkingCopy(new WorkingCopyOwner() {}, this.problemRequestor, null);", "-\t\t", "+\t\tthis.workingCopy = getCompilationUnit(\"Reconciler/src/p1/Y$Z.java\").getWorkingCopy(this.wcOwner, null);", "+", "-\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad5e92b02bf6e11eb0e56fa31b2f8869", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "20a3b07578a2ebec2d9a0569764e78af37761eaf", "commitAfterChange": "c052d66dbc2732414cdaf446e79eec5da0743843", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 77, "signatureBeforeChange": " public void testMethodWithError06() throws CoreException", "signatureAfterChange": " public void testMethodWithError06() throws CoreException", "diff": ["-\t\t\t\"/Reconciler/src/p1/Y.java\", ", "+\t\t\t\"/Reconciler/src/p1/Y.java\",", "-\t\tthis.workingCopy = getCompilationUnit(\"Reconciler/src/p1/Y.java\").getWorkingCopy(new WorkingCopyOwner() {}, this.problemRequestor, null);", "+\t\tthis.workingCopy = getCompilationUnit(\"Reconciler/src/p1/Y.java\").getWorkingCopy(this.wcOwner, null);", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in /Reconciler/src/p1/Y.java (at line 3)\\n\" + ", "-\t\t\t\"\tpublic.void foo() {\\n\" + ", "-\t\t\t\"\t      ^\\n\" + ", "-\t\t\t\"Syntax error on token \\\".\\\", delete this token\\n\" + ", "+\t\t\t\"----------\\n\" +", "+\t\t\t\"1. ERROR in /Reconciler/src/p1/Y.java (at line 3)\\n\" +", "+\t\t\t\"\tpublic.void foo() {\\n\" +", "+\t\t\t\"\t      ^\\n\" +", "+\t\t\t\"Syntax error on token \\\".\\\", delete this token\\n\" +"]}], "num": 54701}