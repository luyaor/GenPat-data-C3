{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "47ad55f3b54d20390e022d37e077fe8a", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e5cae6a348e933a4a82d949cb4ed0a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "d0983045319f4deaedb594fb4398659a34901dc9", "commitAfterChange": "38d28ea617b0a936911af5a6eaa00f4a348a9008", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void initializeIndexLocations()", "signatureAfterChange": " private void initializeIndexLocations()", "diff": ["-\t\t\t\twhile (javaElement != null && !(javaElement instanceof ICompilationUnit) && !(javaElement instanceof IClassFile)) {", "+\t\t\t\twhile (javaElement != null && !(javaElement instanceof ITypeRoot)) {", "-\t\t\t\t\tICompilationUnit compilationUnit = (ICompilationUnit) javaElement;", "-\t\t\t\t\tchar[][] qualifiedName = CharOperation.splitOn('.', compilationUnit.findPrimaryType().getFullyQualifiedName().toCharArray());", "-\t\t\t\t\tchar[][][] qualifiedNames = ReferenceCollection.internQualifiedNames(new char[][][] {qualifiedName});", "-\t\t\t\t\tfocusQualifiedName = qualifiedNames[0];", "+\t\t\t\t\tIType primaryType = ((ITypeRoot) javaElement).findPrimaryType();", "+\t\t\t\t\tif (primaryType != null) {", "+\t\t\t\t\t\tchar[][] qualifiedName = CharOperation.splitOn('.', primaryType.getFullyQualifiedName().toCharArray());", "+\t\t\t\t\t\tchar[][][] qualifiedNames = ReferenceCollection.internQualifiedNames(new char[][][] {qualifiedName});", "+\t\t\t\t\t\tfocusQualifiedName = qualifiedNames[0];", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86db3c79eb131083c9735e1795ac8737", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/IndexSelector.java", "commitBeforeChange": "db331d5badcb0b35069c87387ccad89f9c226a52", "commitAfterChange": "30b862416cba759ca39b029e0f535018291e11dc", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private void initializeIndexLocations()", "signatureAfterChange": " private void initializeIndexLocations()", "diff": ["+\t\t\t// See whether the state builder might be used to reduce the number of index locations", "+\t\t\tboolean isAutoBuilding = ResourcesPlugin.getWorkspace().getDescription().isAutoBuilding();", "+\t\t\tchar[][] focusQualifiedName = null;", "+\t\t\tif (isAutoBuilding && focus instanceof IJavaProject) {", "+\t\t\t\tIJavaElement javaElement = this.pattern.focus;", "+\t\t\t\twhile (javaElement != null && !(javaElement instanceof ICompilationUnit) && !(javaElement instanceof IClassFile)) {", "+\t\t\t\t\tjavaElement = javaElement.getParent();", "+\t\t\t\t}", "+\t\t\t\tif (javaElement != null) {", "+\t\t\t\t\tICompilationUnit compilationUnit = (ICompilationUnit) javaElement;", "+\t\t\t\t\tchar[][] qualifiedName = CharOperation.splitOn('.', compilationUnit.findPrimaryType().getFullyQualifiedName().toCharArray());", "+\t\t\t\t\tchar[][][] qualifiedNames = ReferenceCollection.internQualifiedNames(new char[][][] {qualifiedName});", "+\t\t\t\t\tfocusQualifiedName = qualifiedNames[0];", "+\t\t\t\t}", "+\t\t\t}", "+", "-\t\t\t\t\tif (canSeeFocus(focuses, project)) {", "+\t\t\t\t\tif (canSeeFocus(focuses, project, focusQualifiedName)) {"]}], "num": 17673}