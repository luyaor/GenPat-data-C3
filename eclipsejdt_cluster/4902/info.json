{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9fc28c6c41d75546ac2306e7e998287d", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de81f8f5946ee45bdd40e57bd5403b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "9b1a210d5a28a563f2b4edd6ee52ca04080352c2", "commitAfterChange": "c5fa126d3049a81f85a0cfd9b830435aeefe82e4", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["-\t\t\t\tif (!this.requestor.isIgnored(CompletionProposal.KEYWORD)) {", "-\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.NEW}, false, false);", "+\t\t\t\tif (!access.isInsideAnnotation) {", "+\t\t\t\t\tif (!this.requestor.isIgnored(CompletionProposal.KEYWORD)) {", "+\t\t\t\t\t\tfindKeywords(this.completionToken, new char[][]{Keywords.NEW}, false, false);", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\tfindFieldsAndMethods(", "+\t\t\t\t\t\tthis.completionToken,", "+\t\t\t\t\t\t((TypeBinding) qualifiedBinding).capture(scope, access.receiver.sourceEnd),", "+\t\t\t\t\t\tscope,", "+\t\t\t\t\t\taccess,", "+\t\t\t\t\t\tscope,", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\taccess.receiver instanceof SuperReference,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\tnull,", "+\t\t\t\t\t\tfalse);", "-\t\t\t\t", "-\t\t\t\tfindFieldsAndMethods(", "-\t\t\t\t\tthis.completionToken,", "-\t\t\t\t\t((TypeBinding) qualifiedBinding).capture(scope, access.receiver.sourceEnd),", "-\t\t\t\t\tscope,", "-\t\t\t\t\taccess,", "-\t\t\t\t\tscope,", "-\t\t\t\t\tfalse,", "-\t\t\t\t\taccess.receiver instanceof SuperReference,", "-\t\t\t\t\tnull,", "-\t\t\t\t\tnull,", "-\t\t\t\t\tnull,", "-\t\t\t\t\tfalse);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b78139b7ffbb3e9ffaa3533a50999167", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "cf6c558f3e8d77fc234110cd8914f5b336ef0d92", "commitAfterChange": "ab10a34ac484d145f4f6c275f96c1a07de4e2006", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "signatureAfterChange": " \t \tprivate boolean complete(ASTNode astNode, ASTNode astNodeParent, Binding qualifiedBinding, Scope scope, boolean insideTypeAnnotation)", "diff": ["+\t\t\t\tif (scope instanceof BlockScope && !this.requestor.isIgnored(CompletionProposal.LOCAL_VARIABLE_REF)) {", "+\t\t\t\t\tchar[][] alreadyDefinedName = computeAlreadyDefinedName((BlockScope)scope, singleNameReference);", "+\t\t\t\t\t", "+\t\t\t\t\tfindUnresolvedReference(", "+\t\t\t\t\t\t\tsingleNameReference.sourceStart - 1,", "+\t\t\t\t\t\t\tsingleNameReference.sourceEnd,", "+\t\t\t\t\t\t\t(BlockScope)scope,", "+\t\t\t\t\t\t\talreadyDefinedName);", "+\t\t\t\t}", "+\t\t\t\t\t\trelevance += computeRelevanceForResolution();", "+\t\t\t\t\t\tif (scope instanceof BlockScope && !this.requestor.isIgnored(CompletionProposal.LOCAL_VARIABLE_REF)) {", "+\t\t\t\t\t\t\tchar[][] alreadyDefinedName = computeAlreadyDefinedName((BlockScope)scope, FakeInvocationSite);", "+\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\tfindUnresolvedReference(", "+\t\t\t\t\t\t\t\t\tmemberValuePair.sourceStart - 1,", "+\t\t\t\t\t\t\t\t\tmemberValuePair.sourceEnd,", "+\t\t\t\t\t\t\t\t\t(BlockScope)scope,", "+\t\t\t\t\t\t\t\t\talreadyDefinedName);", "+\t\t\t\t\t\t}"]}], "num": 4902}