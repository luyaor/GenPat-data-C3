{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f1cbd5a53f7a69836844d5cea62c7fc", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3fc04c5fcd5a3589c127d158133e0ffd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Annotation.java", "commitBeforeChange": "e90dfab1761bccc6555735320e283aaf05372db5", "commitAfterChange": "2360be30596f096b30c40d59f0ef4f349bd446d6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic static void checkAnnotationValue(TypeBinding requiredType, TypeBinding annotationType, char[] memberName, Expression memberValue, Scope scope)", "signatureAfterChange": " \t \tpublic static void checkAnnotationValue(TypeBinding requiredType, TypeBinding annotationType, char[] memberName, Expression memberValue, Scope scope)", "diff": ["+\t\tTypeBinding memberValueType = memberValue.resolvedType;", "+\t\tif (memberValueType != null) {", "+\t\t\tif (!memberValueType.isCompatibleWith(requiredType)) {", "+\t\t\t\tscope.problemReporter().typeMismatchError(memberValueType, requiredType, memberValue);", "+\t\t\t\treturn; // may allow to proceed to find more errors at once", "+\t\t\t} else {", "+\t\t\t\tscope.compilationUnitScope().recordTypeConversion(requiredType, memberValueType);", "+\t\t\t}", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf8605ad748d270ceb0455a520b04d5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConditionalExpression.java", "commitBeforeChange": "f200f8d976d56839e6f0d721d690d85cc3afbb03", "commitAfterChange": "0b27e1fc307c28641d0d95f2d81ae5062cecb103", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\tif (valueIfTrueType != null && !valueIfTrueType.isCompatibleWith(this.expectedType, scope)) {", "+\t\t\t\tscope.problemReporter().typeMismatchError(valueIfTrueType, this.expectedType, this.valueIfTrue, null);", "+\t\t\t}", "+\t\t\tif (valueIfFalseType != null && !valueIfFalseType.isCompatibleWith(this.expectedType, scope)) {", "+\t\t\t\tscope.problemReporter().typeMismatchError(valueIfFalseType, this.expectedType, this.valueIfFalse, null);", "+\t\t\t}"]}], "num": 46513}