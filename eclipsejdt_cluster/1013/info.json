{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90b4623e9b1897b6607c4a70870d87c8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "022c0e955f455712f36fdc5d443781aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "8ad7ea4a3e807d9d57eeeda9a3a7bd6598dfbdb1", "commitAfterChange": "b7a41e13e2a80300225883c3cc5ff3990406ce0a", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, char[][][] missingTypeNames)", "signatureAfterChange": "  TypeBinding getTypeFromTypeSignature(SignatureWrapper wrapper, TypeVariableBinding[] staticVariables, ReferenceBinding enclosingType, char[][][] missingTypeNames)", "diff": ["-\tReferenceBinding genericType = actualType;", "-\t\t// The actualType needs to be a ParameterizedTypeBinding when its a member type, whose enclosing type is a generic", "-\t\tgenericType = createParameterizedType(actualType, null, actualEnclosing);", "-\tTypeBinding[] typeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, genericType, missingTypeNames);", "+\tTypeBinding[] typeArguments = getTypeArgumentsFromSignature(wrapper, staticVariables, enclosingType, actualType, missingTypeNames);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edb5c47d24e9a0b03dc74f5ee03c34d3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "39b8f6b75b82f5da2d98cfd1c56a1cffeb468721", "commitAfterChange": "2ce280d5528def273827657b0266a19fea9f8b19", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, Binding declaringElement)", "signatureAfterChange": " private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, boolean assignVariables)", "diff": ["-private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, Binding declaringElement) {", "+private TypeVariableBinding[] createTypeVariables(SignatureWrapper wrapper, boolean assignVariables) {", "-\t\t\t\t\t\tvariables.add(new TypeVariableBinding(variableName, declaringElement, rank++));", "+\t\t\t\t\t\tvariables.add(new TypeVariableBinding(variableName, this, rank++));", "+\t// when creating the type variables for a type, the type must remember them before initializing each variable", "+\t// see https://bugs.eclipse.org/bugs/show_bug.cgi?id=163680", "+\tif (assignVariables)", "+\t\tthis.typeVariables = result;"]}], "num": 1013}