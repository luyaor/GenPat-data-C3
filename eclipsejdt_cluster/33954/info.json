{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24288beabb87486f8275c9591bf2320e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c953f075acca7f2015477bfbce397511", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "fde095e0f0a4d97a0e65a7c6307c3d16195d07f7", "commitAfterChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 31, "signatureBeforeChange": " private ArrayList getAllSupertypes0(IType type, ArrayList supers)", "signatureAfterChange": " private ArrayList<IType> getAllSupertypes0(IType type, ArrayList<IType> supers)", "diff": ["-private ArrayList getAllSupertypes0(IType type, ArrayList supers) {", "-\tIType[] superinterfaces = (IType[]) this.typeToSuperInterfaces.get(type);", "+private ArrayList<IType> getAllSupertypes0(IType type, ArrayList<IType> supers) {", "+\tIType[] superinterfaces = this.typeToSuperInterfaces.get(type);", "-\t\t\tsupers = new ArrayList();", "-\t\taddAllCheckingDuplicates(supers, superinterfaces);", "-\t\tfor (int i = 0; i < superinterfaces.length; i++) {", "-\t\t\tsupers = getAllSuperInterfaces0(superinterfaces[i], supers);", "+\t\t\tsupers = new ArrayList<IType>();", "+\t\tfor (int i1 = 0; i1 < superinterfaces.length; i1++) {", "+\t\t\tIType element = superinterfaces[i1];", "+\t\t\tif (!supers.contains(element)) {", "+\t\t\t\tsupers.add(element);", "+\t\t\t\tsupers = getAllSuperInterfaces0(element, supers);", "+\t\t\t}", "-\tIType superclass = (IType) this.classToSuperclass.get(type);", "+\tIType superclass = this.classToSuperclass.get(type);", "-\t\t\tsupers = new ArrayList();", "+\t\t\tsupers = new ArrayList<>();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa74a0510f4280c9582e761c46ef4a9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "fde095e0f0a4d97a0e65a7c6307c3d16195d07f7", "commitAfterChange": "9ea1cdb7f6499dc7c1092eeaa0da392a32816565", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 29, "signatureBeforeChange": " private ArrayList getAllSuperInterfaces0(IType type, ArrayList supers)", "signatureAfterChange": " private ArrayList<IType> getAllSuperInterfaces0(IType type, ArrayList<IType> supers)", "diff": ["-private ArrayList getAllSuperInterfaces0(IType type, ArrayList supers) {", "-\tIType[] superinterfaces = (IType[]) this.typeToSuperInterfaces.get(type);", "+private ArrayList<IType> getAllSuperInterfaces0(IType type, ArrayList<IType> supers) {", "+\tIType[] superinterfaces = this.typeToSuperInterfaces.get(type);", "-\t\t\tsupers = new ArrayList();", "-\t\taddAllCheckingDuplicates(supers, superinterfaces);", "-\t\tfor (int i = 0; i < superinterfaces.length; i++) {", "-\t\t\tsupers = getAllSuperInterfaces0(superinterfaces[i], supers);", "+\t\t\tsupers = new ArrayList<IType>();", "+\t\tfor (int i1 = 0; i1 < superinterfaces.length; i1++) {", "+\t\t\tIType element = superinterfaces[i1];", "+\t\t\tif (supers.contains(element)) continue;", "+\t\t\tsupers.add(element);", "+\t\t\tsupers = getAllSuperInterfaces0(element, supers);", "-\tIType superclass = (IType) this.classToSuperclass.get(type);", "+\tIType superclass = this.classToSuperclass.get(type);"]}], "num": 33954}