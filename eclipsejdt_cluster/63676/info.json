{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "de7217d14601db0f1473a9608107c418", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ad3c7a826e557a03b44566387140309", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/JavaDevelopmentContextImpl.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r protected static ConfigurableOption[] getDefaultCompilerOptions()", "signatureAfterChange": "\r protected static ConfigurableOption[] getDefaultCompilerOptions()", "diff": ["-\treturn JavaModelManager.getOptions();\r", "+\tConfigurableOption[] options = Compiler.getDefaultOptions(Locale.getDefault());\r", "+\r", "+\t/**\r", "+\t * Ugly because this requires knowledge of the compiler's\r", "+\t * internal problem representation.\r", "+\t */\r", "+\tsetCompilerOption(options, 11, 1);\r", "+\tsetCompilerOption(options, 12, 1);\r", "+\treturn options;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3551bd1d151c55719eeb0549937d275", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/JavaDevelopmentContextImpl.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r protected static ConfigurableOption[] getDefaultCompilerOptions()", "signatureAfterChange": "\r protected static ConfigurableOption[] getDefaultCompilerOptions()", "diff": ["-\treturn JavaModelManager.getOptions();\r", "+\tConfigurableOption[] options = Compiler.getDefaultOptions(Locale.getDefault());\r", "+\r", "+\t/**\r", "+\t * Ugly because this requires knowledge of the compiler's\r", "+\t * internal problem representation.\r", "+\t */\r", "+\tsetCompilerOption(options, 11, 1);\r", "+\tsetCompilerOption(options, 12, 1);\r", "+\treturn options;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d988b9c12896661b8bd24c3812337b02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/JavaDevelopmentContextImpl.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r protected static ConfigurableOption[] getDefaultCompilerOptions()", "signatureAfterChange": "\r protected static ConfigurableOption[] getDefaultCompilerOptions()", "diff": ["-\treturn JavaModelManager.getOptions();\r", "+\tConfigurableOption[] options = Compiler.getDefaultOptions(Locale.getDefault());\r", "+\r", "+\t/**\r", "+\t * Ugly because this requires knowledge of the compiler's\r", "+\t * internal problem representation.\r", "+\t */\r", "+\tsetCompilerOption(options, 11, 1);\r", "+\tsetCompilerOption(options, 12, 1);\r", "+\treturn options;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1a02a329fd330ed171d5d105d95ab5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "6f4b0eded9544b6a8a8dc2fca33a55f67493174e", "commitAfterChange": "ff3377c129f148614715d5a6b935584c08ca9868", "methodNumberBeforeChange": 193, "methodNumberAfterChange": 193, "signatureBeforeChange": " \tprotected void tearDown() throws Exception", "signatureAfterChange": " \tprotected void tearDown() throws Exception", "diff": ["+\t\t", "+\t\t// ensure workspace options have been restored to their default", "+\t\tHashtable options = JavaCore.getOptions();", "+\t\tHashtable defaultOptions = JavaCore.getDefaultOptions();", "+\t\tassertEquals(", "+\t\t\t\"Workspace options should be back to their default\", ", "+\t\t\tnew CompilerOptions(defaultOptions).toString(), ", "+\t\t\tnew CompilerOptions(options).toString());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e823cbf7d223ff1e43db71016791972b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/JavaDevelopmentContextImpl.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r protected static ConfigurableOption[] getDefaultCompilerOptions()", "signatureAfterChange": "\r protected static ConfigurableOption[] getDefaultCompilerOptions()", "diff": ["-\treturn JavaModelManager.getOptions();\r", "+\tConfigurableOption[] options = Compiler.getDefaultOptions(Locale.getDefault());\r", "+\r", "+\t/**\r", "+\t * Ugly because this requires knowledge of the compiler's\r", "+\t * internal problem representation.\r", "+\t */\r", "+\tsetCompilerOption(options, 11, 1);\r", "+\tsetCompilerOption(options, 12, 1);\r", "+\treturn options;\r"]}], "num": 63676}