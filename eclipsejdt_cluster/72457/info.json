{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2b7b9f69554b3e3e587bc67e2f36f186", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "184d9531522dd20a891f88014d2ad0e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "a8c43fb1703bc9585d371b45c5bc751b66052e18", "commitAfterChange": "40ace06b6f9aaa2f71ebf049ffa37ed745fa6ef3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "signatureAfterChange": " \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "diff": ["-\t\tfPlaceholders= placeholders;", "-\t\tfEventStore= eventStore;", "+\t\tthis.placeholders= placeholders;", "+\t\tthis.eventStore= eventStore;", "-\t\tfOptions= options;", "-\t\tfLineDelimiter= lineDelimiter;", "+\t\tthis.options= options;", "+\t\tthis.lineDelimiter= lineDelimiter;", "+\t\t", "+\t\tint tabWidthVal;", "+\t\ttry {", "+\t\t\ttabWidthVal= Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE));", "+\t\t} catch (NumberFormatException e) {", "+\t\t\ttabWidthVal= 4;", "+\t\t}", "+\t\tthis.tabWidth= tabWidthVal;", "+\t\t", "+\t\tString indent;", "+\t\tString code= \"x\"; //$NON-NLS-1$", "+    \tTextEdit edit= formatString(CodeFormatter.K_EXPRESSION, code, 1, \"\", options); //$NON-NLS-1$", "+    \tif (edit != null) {", "+    \t\tString str= evaluateFormatterEdit(code, edit, null);", "+    \t\tindent= str.substring(0, str.indexOf(code));", "+    \t} else {", "+    \t   indent= String.valueOf('\\t');", "+    \t}", "+\t\tthis.singleIndentString= indent;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "683af9e7e48b60baccc0f6c835316e24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "115aa955b9babd8a2ed6e802830c5035a2e2a28f", "commitAfterChange": "c555269f6d77af957f827daf14cfb9a3af0c01ad", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "signatureAfterChange": " \t \tpublic ASTRewriteFormatter(NodeInfoStore placeholders, RewriteEventStore eventStore, Map options, String lineDelimiter)", "diff": ["-\t\tthis.tabWidth= Indents.getTabWidth(options);", "-\t\tthis.indentWidth= Indents.getIndentWidth(options, this.tabWidth);", "+\t\tint tabWidthVal;", "+\t\ttry {", "+\t\t\ttabWidthVal= Integer.parseInt((String) options.get(DefaultCodeFormatterConstants.FORMATTER_TAB_SIZE));", "+\t\t} catch (NumberFormatException e) {", "+\t\t\ttabWidthVal= 4;", "+\t\t}", "+\t\tthis.tabWidth= tabWidthVal;", "+\t\t", "+\t\tString indent;", "+\t\tString code= \"x\"; //$NON-NLS-1$", "+    \tTextEdit edit= formatString(CodeFormatter.K_EXPRESSION, code, 1, \"\", options); //$NON-NLS-1$", "+    \tif (edit != null) {", "+    \t\tString str= evaluateFormatterEdit(code, edit, null);", "+    \t\tindent= str.substring(0, str.indexOf(code));", "+    \t} else {", "+    \t   indent= String.valueOf('\\t');", "+    \t}", "+\t\tthis.singleIndentString= indent;"]}], "num": 72457}