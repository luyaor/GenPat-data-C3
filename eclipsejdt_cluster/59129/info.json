{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b493d31738500e7b360d935a12dad719", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ede958630bc638070b96108b0b42987", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tvoid parseThrows()", "signatureAfterChange": " \t \tprivate void parseThrows() throws InvalidInputException", "diff": ["+\tprivate void parseThrows() throws InvalidInputException {", "+\t\tint start = this.scanner.currentPosition;", "+\t\ttry {", "+\t\t\tTypeReference typeRef = parseQualifiedName(true);", "+\t\t\tif (typeRef == null) {", "+\t\t\t\tthis.sourceParser.problemReporter().annotationMissingThrowsClassName(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\t}", "+\t\t\telse {", "+\t\t\t\tpushThrowName(typeRef);", "+\t\t\t}", "+\t\t}", "+\t\tcatch (InvalidInputException ex) {", "+\t\t\tthis.sourceParser.problemReporter().annotationInvalidThrowsClass(start, getEndPosition());", "+\t\t}", "+\t\tfinally {", "+\t\t\tconsumeToken();", "+\t\t}", "-\t", "-\tvoid parseThrows() {", "-\t\t// to be continued"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d64bda4475a89ebedde61f970c530f82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "aabd59e4934a861167bc5ad69597bc9fd97e06dc", "commitAfterChange": "4ed2786f22dd00c9c1f7773433c3548c8c0f6fc3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tvoid parseSee()", "signatureAfterChange": "  \tprivate void parseSee() throws InvalidInputException", "diff": ["-\tvoid parseSee() {", "-\t\t// to be continued", "+", "+\tprivate void parseSee() throws InvalidInputException {", "+\t\tint start = this.scanner.currentPosition;", "+\t\t\tExpression msgRef = parseReference();", "+\t\t\tif (msgRef != null) {", "+\t\t\t\tpushSeeRef(msgRef);", "+\t\t\t}", "+\t\t}", "+\t\tcatch (InvalidInputException ex) {", "+\t\t\tthis.sourceParser.problemReporter().annotationInvalidSeeReference(start, getEndPosition());", "+\t\t}", "+\t\tfinally {", "+\t\t\tconsumeToken();"]}], "num": 59129}