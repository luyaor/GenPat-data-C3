{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d108a3173dcbf13919d611d9f45a74e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0993bc097d2fd33ca7997287544a97eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTRequestor.java", "commitBeforeChange": "4def04db1c57f4783cd9268aed9565e613fe59c2", "commitAfterChange": "166f6dd5be5c675bb046225e1f8d62e9663ca203", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic IBinding[] createBindings(String[] bindingKeys)", "signatureAfterChange": " \tpublic final IBinding[] createBindings(String[] bindingKeys)", "diff": ["-\tpublic IBinding[] createBindings(String[] bindingKeys) {", "+\tpublic final IBinding[] createBindings(String[] bindingKeys) {", "-\t\tfor (int i = 0; i < length; i++)", "-\t\t\tresult[i] = this.compilationUnitResolver.createBinding(bindingKeys[i]);", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tresult[i] = null;", "+\t\t\tif (this.compilationUnitResolver != null) {", "+\t\t\t\tresult[i] = this.compilationUnitResolver.createBinding(bindingKeys[i]);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "401c68df0b5bcc30336a2447f69d7ade", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/AbstractASTTests.java", "commitBeforeChange": "5739eb5b2f82f16d73f7174ce6602e0e03939d00", "commitAfterChange": "c18c68a976e1e7ddfc35757dbbd26a3f421830be", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 20, "signatureBeforeChange": " \t \tprotected IBinding[] resolveBindings(String[] bindingKeys, IJavaProject project, WorkingCopyOwner owner)", "signatureAfterChange": " \t \tprotected IBinding[] resolveBindings(String[] bindingKeys, IJavaProject project, WorkingCopyOwner owner)", "diff": ["-\t\tclass BindingRequestor extends ASTRequestor {", "-\t\t\tHashMap bindings = new HashMap();", "-\t\t\tpublic void acceptBinding(String bindingKey, IBinding binding) {", "-\t\t\t\tthis.bindings.put(bindingKey, binding);", "-\t\t\t}", "-\t\t}", "-\t\tint length = requestor.bindings.size();", "-\t\tIBinding[] result = new IBinding[length];", "-\t\tfor (int i = 0; i < length; i++) {", "-\t\t\tresult[i] = (IBinding) requestor.bindings.get(bindingKeys[i]);", "-\t\t}", "-\t\treturn result;", "+\t\treturn requestor.getBindings();"]}], "num": 23665}