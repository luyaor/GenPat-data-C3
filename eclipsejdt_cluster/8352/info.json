{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f744015e44206a805674cc4164cc27e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c13bcde9824cb911ca6bc934ca7fa3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "37a02139caf878f43448c01ddaa8d50350269f33", "commitAfterChange": "c4bc9dbda3acec03e7397a532251ed78da035956", "methodNumberBeforeChange": 63, "methodNumberAfterChange": 63, "signatureBeforeChange": "  \tprivate void printLineComment()", "signatureAfterChange": "  \tprivate void printLineComment()", "diff": ["-\t\t\t\t\tint lastCommentIndentation = this.lastLineComment.currentIndentation;", "-\t\t\t\t\tif (this.tabLength > 0) {", "-\t\t\t\t\t\tif ((currentCommentIndentation % this.tabLength) == 0) {", "-\t\t\t\t\t\t\tlastCommentIndentation = (lastCommentIndentation / this.tabLength) * this.tabLength;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tcurrentCommentIndentation = ((currentCommentIndentation / this.tabLength) + 1) * this.tabLength;", "-\t\t\t\t\t\t}", "+\t\t\t\t\tint relativeIndentation = currentCommentIndentation - this.lastLineComment.currentIndentation;", "+\t\t\t\t\tboolean similarCommentsIndentation = false;", "+\t\t\t\t\tif (this.tabLength == 0) {", "+\t\t\t\t\t\tsimilarCommentsIndentation = relativeIndentation == 0;", "+\t\t\t\t\t} else if (relativeIndentation > -this.tabLength) {", "+\t\t\t\t\t\tsimilarCommentsIndentation = this.formatter.preferences.comment_format_line_comment_starting_on_first_column ||", "+\t\t\t\t\t\t\t(currentCommentIndentation != 0 && this.lastLineComment.currentIndentation != 0);", "-\t\t\t\t\tif (currentCommentIndentation >= lastCommentIndentation && this.lastLineComment.indentation != this.indentationLevel) {", "+\t\t\t\t\tif (similarCommentsIndentation && this.lastLineComment.indentation != this.indentationLevel) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "49c5b074fe060b5f03b4cd507e9ddb28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "76a2ec884825e9edb380555c61500f23750ece32", "commitAfterChange": "0dc9f4a7cc769fd0c2e397d6cc32c352b61f03b4", "methodNumberBeforeChange": 393, "methodNumberAfterChange": 393, "signatureBeforeChange": " public void unnecessaryTypeArgumentsForMethodInvocation(MessageSend messageSend)", "signatureAfterChange": " public void unnecessaryTypeArgumentsForMethodInvocation(MethodBinding method, TypeBinding[] genericTypeArguments, TypeReference[] typeArguments)", "diff": ["-public void unnecessaryTypeArgumentsForMethodInvocation(MessageSend messageSend) {", "-\tMethodBinding method = messageSend.binding;", "-\tTypeBinding[] genericTypeArguments = messageSend.genericTypeArguments;", "+public void unnecessaryTypeArgumentsForMethodInvocation(MethodBinding method, TypeBinding[] genericTypeArguments, TypeReference[] typeArguments) {", "+\tString methodName = method.isConstructor()", "+\t\t? new String(method.declaringClass.shortReadableName())", "+\t\t: new String(method.selector);", "-\t\tIProblem.UnusedTypeArgumentsForMethodInvocation,", "+\t\t\tmethod.isConstructor()", "+\t\t\t\t? IProblem.UnusedTypeArgumentsForConstructorInvocation", "+\t\t\t\t: IProblem.UnusedTypeArgumentsForMethodInvocation,", "-\t\t        new String(method.selector),", "+\t\t\t\tmethodName,", "-\t\t        new String(method.selector),", "+\t\t\t\tmethodName,", "-\t\tmessageSend.typeArguments[0].sourceStart,", "-\t\tmessageSend.typeArguments[messageSend.typeArguments.length-1].sourceEnd);\t\t", "+\t\ttypeArguments[0].sourceStart,", "+\t\ttypeArguments[typeArguments.length-1].sourceEnd);\t\t"]}], "num": 8352}