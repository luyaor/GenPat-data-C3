{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9c49ccad4df0a35e2b53ae3edb895daa", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "238e5ca27d60ae7e67020245e7784877", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \t \tpublic void testIfStatementReplaceElse4() throws Exception", "signatureAfterChange": " \t \tpublic void testIfStatementReplaceElse4() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(statement, newBody, null);", "+\t\t\trewrite.replace(statement, newBody, null);", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), newElseBlock, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), newElseBlock, null);", "-\t\t\trewrite.markAsReplaced(body, newBody, null);", "+\t\t\trewrite.replace(body, newBody, null);", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), newElseBlock, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), newElseBlock, null);", "-\t\t\trewrite.markAsReplaced(statement, newBody, null);\t\t\t\t", "+\t\t\trewrite.replace(statement, newBody, null);\t\t\t\t", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), newElseBlock, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), newElseBlock, null);", "-\t\t\trewrite.markAsReplaced(body, newBody, null);", "+\t\t\trewrite.replace(body, newBody, null);", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), newElseBlock, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), newElseBlock, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d1f1fdf39c2049919adba4ba6cb2469", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingExpressionsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  \tpublic void testMethodParamsRenameReorder() throws Exception", "signatureAfterChange": "  \tpublic void testMethodParamsRenameReorder() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(first, newFirstArg, null);", "-\t\t\trewrite.markAsReplaced(second, newSecondArg, null);", "+\t\t\trewrite.replace(first, newFirstArg, null);", "+\t\t\trewrite.replace(second, newSecondArg, null);", "-\t\t\trewrite.markAsReplaced(firstParam.getName(), newFirstName, null);", "-\t\t\trewrite.markAsReplaced(secondParam.getName(), newSecondName, null);", "+\t\t\trewrite.replace(firstParam.getName(), newFirstName, null);", "+\t\t\trewrite.replace(secondParam.getName(), newSecondName, null);", "-\t\t\trewrite.markAsReplaced(firstParam, paramplaceholder2, null);", "-\t\t\trewrite.markAsReplaced(secondParam, paramplaceholder1, null);", "+\t\t\trewrite.replace(firstParam, paramplaceholder2, null);", "+\t\t\trewrite.replace(secondParam, paramplaceholder1, null);", "-\t\t\trewrite.markAsReplaced(first, placeholder2, null);", "-\t\t\trewrite.markAsReplaced(second, placeholder1, null);", "+\t\t\trewrite.replace(first, placeholder2, null);", "+\t\t\trewrite.replace(second, placeholder1, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abf04440b2abf5794a291824fd159214", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \t \tpublic void testIfStatementReplaceElse2() throws Exception", "signatureAfterChange": " \t \t \tpublic void testIfStatementReplaceElse2() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(statement, newBody, null);", "+\t\t\trewrite.replace(statement, newBody, null);", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), newElseBlock, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), newElseBlock, null);", "-\t\t\trewrite.markAsReplaced(body, newBody, null);", "+\t\t\trewrite.replace(body, newBody, null);", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), newElseBlock, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), newElseBlock, null);", "-\t\t\trewrite.markAsReplaced(statement, newBody, null);\t\t\t\t", "+\t\t\trewrite.replace(statement, newBody, null);\t\t\t\t", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), returnStatement, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), returnStatement, null);", "-\t\t\trewrite.markAsReplaced(body, newBody, null);", "+\t\t\trewrite.replace(body, newBody, null);", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), returnStatement, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), returnStatement, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a0dd7e3c258873de492e0d7ae131b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \t \tpublic void testForStatement() throws Exception", "signatureAfterChange": " \t \tpublic void testForStatement() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced((ASTNode) initializers.get(0), assignment, null);", "+\t\t\trewrite.replace((ASTNode) initializers.get(0), assignment, null);", "-\t\t\trewrite.markAsReplaced(forStatement.getExpression(), literal, null);", "+\t\t\trewrite.replace(forStatement.getExpression(), literal, null);", "-\t\t\trewrite.markAsReplaced(forStatement.getBody(), newBody, null);", "+\t\t\trewrite.replace(forStatement.getBody(), newBody, null);", "-\t\t\trewrite.markAsRemoved((ASTNode) initializers.get(0), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) initializers.get(1), null);", "+\t\t\trewrite.remove((ASTNode) initializers.get(0), null);", "+\t\t\trewrite.remove((ASTNode) initializers.get(1), null);", "-\t\t\trewrite.markAsRemoved(forStatement.getExpression(), null);", "+\t\t\trewrite.remove(forStatement.getExpression(), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) updaters.get(0), null);", "-\t\t\trewrite.markAsRemoved((ASTNode) updaters.get(1), null);", "+\t\t\trewrite.remove((ASTNode) updaters.get(0), null);", "+\t\t\trewrite.remove((ASTNode) updaters.get(1), null);", "-\t\t\trewrite.markAsReplaced(assignment, varDecl, null);", "+\t\t\trewrite.replace(assignment, varDecl, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5383b0b6dce74b28bcae1fff1224648", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingStatementsTest.java", "commitBeforeChange": "62b1429c1157377303cda59d75bfca97d69751c0", "commitAfterChange": "2bf3ca4fdac4d07bd91bee9a8957437ed1319e5b", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tpublic void testIfStatementReplaceElse3() throws Exception", "signatureAfterChange": " \t \tpublic void testIfStatementReplaceElse3() throws Exception", "diff": ["-\t\tNewASTRewrite rewrite= new NewASTRewrite(astRoot.getAST());", "+\t\tASTRewrite rewrite= new ASTRewrite(astRoot.getAST());", "-\t\t\trewrite.markAsReplaced(statement, newBody, null);", "+\t\t\trewrite.replace(statement, newBody, null);", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), newElseBlock, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), newElseBlock, null);", "-\t\t\trewrite.markAsReplaced(body, newBody, null);", "+\t\t\trewrite.replace(body, newBody, null);", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), newElseBlock, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), newElseBlock, null);", "-\t\t\trewrite.markAsReplaced(statement, newBody, null);\t\t\t\t", "+\t\t\trewrite.replace(statement, newBody, null);\t\t\t\t", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), newElseBlock, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), newElseBlock, null);", "-\t\t\trewrite.markAsReplaced(body, newBody, null);", "+\t\t\trewrite.replace(body, newBody, null);", "-\t\t\trewrite.markAsReplaced(ifStatement.getElseStatement(), newElseBlock, null);", "+\t\t\trewrite.replace(ifStatement.getElseStatement(), newElseBlock, null);"]}], "num": 5593}