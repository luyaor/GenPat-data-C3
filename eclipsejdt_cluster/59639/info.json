{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0971c9a400c4b47b1c9ebbbef3389bc0", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30f6ff92ecd4894a6175eef9ce32db6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "1a94a1e6652f1701b8c360d56d755e5438b79c26", "commitAfterChange": "3b002cab97d2ee77b59be67feaf705de255bc1fb", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void test012()", "signatureAfterChange": " public void test012()", "diff": ["-        \"                       and '']''.\\n\" + ", "+        \"                       and '']''. Each directory can further specify a specific\\n\" + ", "+        \"                       destination directory using a ''-d'' option between ''[''\\n\" +", "+        \"                       and '']''; this overrides the general ''-d'' option.\\n\" +", "-        \"                       destination directory is specified.\\n\" + ", "+        \"                       general ''-d'' option is specified. zip/jar files cannot\\n\" +", "+        \"                       override the general ''-d'' option\\n\" + ", "-        \"                       created)\\n\" + ", "-        \"    -d none            generate no .class files\\n\" + ", "+        \"                       created); this option can be overridden per source\\n\" + ", "+\t\t\"                       directory\\n\" +", "+\t\t\"    -d none            generate no .class files\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89ecfcbe9ffc964cee22b70221bb60c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ImportRewriteTest.java", "commitBeforeChange": "f8f573fb4945f47fa2e1f634d0b55fa9e0151f17", "commitAfterChange": "b1e2ed2bb1403d1f729ccda27eb7b9ebe7009bed", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 84, "signatureBeforeChange": "     public void testBug378024b() throws Exception", "signatureAfterChange": "     public void testBug378024b() throws Exception", "diff": ["-                \"import java.awt.*;// test1\\n\" +", "+                \"// test1\\n\" +", "+                \"import java.awt.*;\\n\" +", "-                \"import java.io.*;// test2\\n\" +", "+                \"// test2\\n\" +", "+                \"import java.io.*;\\n\" +", "-                \"import java.util.*;// test3\\n\" +", "+                \"// test3\\n\" +", "+                \"import java.util.*;\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5de08589e4a1130a043c35338a98483", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/TestVerifier.java", "commitBeforeChange": "283ea669e65ae7c25e43949f506630d59e6cdb74", "commitAfterChange": "247dd2da1a649afa18a4b7387fd9cbdf69c251eb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " private String getVerifyTestsCode()", "signatureAfterChange": " private String getVerifyTestsCode()", "diff": ["-\t\t\"\tDataInputStream in = new DataInputStream(this.socket.getInputStream());\\n\" +", "+\t\t\"\tfinal DataInputStream in = new DataInputStream(this.socket.getInputStream());\\n\" +", "-\t\t\"\t\t\t\t}\\n\" +", "+\t\t\"\t\t\t\t} finally {\\n\" +", "+\t\t\"                   try {\\n\" +", "+\t\t\"\t\t\t\t\t    in.close();\\n\" +", "+\t\t\"\t\t\t\t\t    out.close();\\n\" +", "+\t\t\"                   } catch (IOException ioex) {}\\n\" +", "+\t\t\"               }\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e648e40102a21956559418e52d40befa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "909d7ea106422d6ae8df5392c045bb0bb269cbe3", "commitAfterChange": "1b7cc740dd9297bd0f4bafe7fea18d712058ba6e", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " public void test0312_if_else()", "signatureAfterChange": " public void test0312_if_else()", "diff": ["-\t\t\"2. ERROR in X.java (at line 7)\\n\" +", "-\t\t\"\to.toString();\\n\" +", "-\t\t\"\t^\\n\" +", "-\t\t\"Potential null pointer access: The variable o may be null at this location\\n\" +", "+\t\t\"2. WARNING in X.java (at line 5)\\n\" +", "+\t\t\"\tif (o == null) { /* */ }\\n\" +", "+\t\t\"\t               ^^^^^^^^^\\n\" +", "+\t\t\"Dead code\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"3. ERROR in X.java (at line 6)\\n\" +", "+\t\t\"\tif (o != null) { /* */ }\\n\" +", "+\t\t\"\t    ^\\n\" +", "+\t\t\"Redundant null check: The variable o cannot be null at this location\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8c8498d8cf3f245126bf786c29f8589", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "0bd04abb8575a021cf8905c773ca1d2199f31c53", "commitAfterChange": "1bf6db68524b43c8e140351de0b8d9940aee5925", "methodNumberBeforeChange": 449, "methodNumberAfterChange": 449, "signatureBeforeChange": " \tpublic void test447()", "signatureAfterChange": " \tpublic void test447()", "diff": ["-\t\t\t\"5. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\t\"5. ERROR in X.java (at line 10)\\n\" + ", "-\t\t\t\"Type safety: The expression of type X.Inner<Integer> needs unchecked conversion to conform to X<String>.Inner<Integer>\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X.Inner<Integer> to X<String>.Inner<Integer>\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 13)\\n\" + ", "+\t\t\t\"6. ERROR in X.java (at line 11)\\n\" + ", "+\t\t\t\"\td3 = d1;\\n\" + ", "+\t\t\t\"\t     ^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from X<String>.Inner<Integer> to X.Inner<Integer>\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"7. WARNING in X.java (at line 13)\\n\" + "]}], "num": 59639}