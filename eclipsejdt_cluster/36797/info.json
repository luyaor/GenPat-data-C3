{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3c70ab9f894ca465df03df968728407b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1211137b68f1c8b67b88e7ac16178cb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public char[][] getMatchCategories()", "diff": ["-public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "-", "-\tif (progressMonitor != null && progressMonitor.isCanceled()) throw new OperationCanceledException();", "-", "-\tchar[][] possibleTags = this.simpleName == null ? REF_TAGS : TAGS;", "-\tfor (int i = 0, max = possibleTags.length; i < max; i++) {", "-\t\tcurrentTag = possibleTags[i];", "-\t\tsuper.findIndexMatches(input, requestor, progressMonitor, scope);", "-\t}", "+}", "+public char[][] getMatchCategories() {", "+\treturn this.simpleName == null ? REF_CATEGORIES : CATEGORIES;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc64a086fb41416cd2c2cad4db9a380b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected char[][] getPossibleTags()", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-protected char[][] getPossibleTags(){", "-\tif (this.simpleName == null) {", "-\t\treturn REF_TAGS;", "-\t} else {", "-\t\treturn TAGS;", "+public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException {", "+", "+\tif (progressMonitor != null && progressMonitor.isCanceled()) throw new OperationCanceledException();", "+", "+\tchar[][] possibleTags = this.simpleName == null ? REF_TAGS : TAGS;", "+\tfor (int i = 0, max = possibleTags.length; i < max; i++) {", "+\t\tcurrentTag = possibleTags[i];", "+\t\tsuper.findIndexMatches(input, requestor, detailLevel, progressMonitor, scope);"]}], "num": 36797}