{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a612497dd863f667e5cea0dea3c67361", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "329d07aad3920b8fd61de66cef0f774e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "5e23ed7edfe961d34bd26ee29fb9ade957409733", "commitAfterChange": "28dd1050b46fae522d51f1c10cb06a79601770f3", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  \tprivate TypeBinding[] computeTypes(Expression[] arguments, BlockScope scope)", "signatureAfterChange": "  \tprivate TypeBinding[] computeTypes(Expression[] arguments)", "diff": ["-\tprivate TypeBinding[] computeTypes(Expression[] arguments, BlockScope scope) {", "-", "-\t\tif (arguments == null)", "-\t\t\treturn null;", "-", "+\tprivate TypeBinding[] computeTypes(Expression[] arguments) {", "+\t\tif (arguments == null) return null;", "-\t\tfor (int a = argsLength; --a >= 0;)", "+\t\tfor (int a = argsLength; --a >= 0;) {", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "620cce35527ff6b14b16d843f67f15f4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "5e4ea8ac03b51c08067ab35c8af60e3999ca1301", "commitAfterChange": "aaea57f144ce91db666531c49de57c996bd81422", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " protected void reportAccurateParameterizedTypeReference(TypeReference typeRef, int start, int index, TypeReference[] typeArguments, IJavaElement element, int accuracy, int rule) throws CoreException", "signatureAfterChange": " protected void reportAccurateParameterizedTypeReference(TypeReference typeRef, int start, int index, TypeReference[] typeArguments, IJavaElement element, int accuracy, int rule) throws CoreException", "diff": ["-\t\t\t\t\tdepth = resetScannerAfterLastTypeArgumentEnd(typeArguments[i], scanner, depth)+1;", "+\t\t\t\t\tlong lastTypeArgInfo = findLastTypeArgumentInfo(typeArguments[i]);", "+\t\t\t\t\tdepth = (int) (lastTypeArgInfo >>> 32)+1;", "+\t\t\t\t\tscanner.resetTo(((int)lastTypeArgInfo)+1, scanner.eofPosition-1);"]}], "num": 35584}