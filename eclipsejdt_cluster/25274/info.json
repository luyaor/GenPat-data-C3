{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "782151ae16ed00cc507c118386b85a77", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f358a8c001727a17bba74c2eec225ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaMethod.java", "commitBeforeChange": "77e59a44eb8dbf245688369fa4e6a37813270ef9", "commitAfterChange": "6bbe71e24e5d5d76445f30e5351f63286e328fac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic static LambdaMethod make(JavaElement parent, org.eclipse.jdt.internal.compiler.ast.LambdaExpression lambdaExpression)", "signatureAfterChange": " \t \tpublic static LambdaMethod make(JavaElement parent, org.eclipse.jdt.internal.compiler.ast.LambdaExpression lambdaExpression)", "diff": ["-\t\t\tparameterTypes[i] = manager.intern(new String(lambdaExpression.descriptor.parameters[i].signature()));", "+\t\t\tparameterTypes[i] = getTypeSignature(manager, lambdaExpression.descriptor.parameters[i]);", "-\t\tString returnType = manager.intern(new String(Signature.toCharArray(lambdaExpression.descriptor.returnType.signature())));", "+\t\tString returnType = getTypeSignature(manager, lambdaExpression.descriptor.returnType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b3cd4407cd64e5ca15d27bfe08318eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "cbb56371194d086a0d7ceadd428e925ec29bd8a8", "commitAfterChange": "229553f1d5c57748bfad7a16f6ff070ea4bc9e8a", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "  private boolean hasClasspathChanged()", "signatureAfterChange": "  private boolean hasClasspathChanged()", "diff": ["+\t\t\t} else if (this.lastState.isSourceFolderEmpty(oldSourceLocations[o].sourceFolder)) {", "+\t\t\t\tn--;", "+\t\t\t\tcontinue;", "-\tif (o < oldLength) {", "+\twhile (o < oldLength) {", "+\t\tif (this.lastState.isSourceFolderEmpty(oldSourceLocations[o].sourceFolder)) {", "+\t\t\to++;", "+\t\t\tcontinue;", "+\t\t}", "-\t\t\tSystem.out.println(\"Removed source folder\"); //$NON-NLS-1$", "+\t\t\tSystem.out.println(\"Removed non-empty source folder\"); //$NON-NLS-1$"]}], "num": 25274}