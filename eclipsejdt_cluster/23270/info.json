{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8355ca5a7d2f75a2435b36e95514bd8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c14b5369c9e8dbec6b7930cd7dab49a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tprotected Map getCompilerOptions()", "signatureAfterChange": "  \tprotected Map getCompilerOptions()", "diff": ["-\t\tMap compilerOptions = super.getCompilerOptions();", "-\t\tcompilerOptions.put(CompilerOptions.OPTION_ReportMissingOverrideAnnotationForInterfaceMethodImplementation, CompilerOptions.DISABLED);", "-\t\treturn compilerOptions;", "+\t\tMap options = super.getCompilerOptions();", "+\t\toptions.put(CompilerOptions.OPTION_ReportMissingOverrideAnnotationForInterfaceMethodImplementation, CompilerOptions.DISABLED);", "+\t\toptions.put(CompilerOptions.OPTION_ReportUnusedLocal, CompilerOptions.IGNORE);", "+\t\toptions.put(CompilerOptions.OPTION_ReportUnusedParameter, CompilerOptions.IGNORE);", "+\t\toptions.put(CompilerOptions.OPTION_ReportUnusedPrivateMember, CompilerOptions.IGNORE);", "+\t\treturn options;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3ac8f9f16ac6364233283bfd682333a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/batch/org/eclipse/jdt/internal/compiler/apt/dispatch/BatchProcessingEnvImpl.java", "commitBeforeChange": "70c7b91219f1abe7757608bdb335ee87fa26cb28", "commitAfterChange": "4f113d7aa945e602017e7829c71f3e73f6f0d8c6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic BatchProcessingEnvImpl(AnnotationProcessorManager dispatchManager, Main batchCompiler, \t\t\tString[] commandLineArguments)", "signatureAfterChange": " \t \tpublic BatchProcessingEnvImpl(BaseAnnotationProcessorManager dispatchManager, Main batchCompiler, \t\t\tString[] commandLineArguments)", "diff": ["-", "-\tpublic BatchProcessingEnvImpl(AnnotationProcessorManager dispatchManager, Main batchCompiler,", "+\t", "+\tpublic BatchProcessingEnvImpl(BaseAnnotationProcessorManager dispatchManager, Main batchCompiler,", "-\t\t_compiler = batchCompiler;", "+\t\tsuper();", "+\t\t_compilerOwner = batchCompiler;", "+\t\t_compiler = batchCompiler.batchCompiler;", "-\t\t_processorOptions = parseProcessorOptions(commandLineArguments);", "+\t\t_processorOptions = Collections.unmodifiableMap(parseProcessorOptions(commandLineArguments));", "-\t\t_messager = new BatchMessagerImpl(_compiler.batchCompiler.problemReporter);", "-\t\t_elementUtils = new ElementsImpl(this);", "+\t\t_messager = new BatchMessagerImpl(_compilerOwner.batchCompiler.problemReporter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c8fe7f41a0497b4a66815bdebcf84526", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1bbd363622ec3abe41252dbdd3db2116c2dbd8d5", "commitAfterChange": "a9eb0f9efda6e3ba532fc37dccaaacc16601b2a7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tMap settings)", "signatureAfterChange": "\r \tpublic CompletionEngine(\r \t\tISearchableNameEnvironment nameEnvironment,\r \t\tICompletionRequestor requestor,\r \t\tMap settings)", "diff": ["+\t\tsuper(settings);\r", "-\t\toptions = new AssistOptions(settings);\r", "-\t\tCompilerOptions compilerOptions = new CompilerOptions(settings);\r", "-\r", "-\t\t\t\tcompilerOptions,\r", "+\t\t\t\tthis.compilerOptions,\r", "-\t\t\tnew CompletionParser(problemReporter, compilerOptions.assertMode);\r", "+\t\t\tnew CompletionParser(problemReporter, this.compilerOptions.assertMode);\r", "-\t\t\tnew LookupEnvironment(this, compilerOptions, problemReporter, nameEnvironment);\r", "+\t\t\tnew LookupEnvironment(this, this.compilerOptions, problemReporter, nameEnvironment);\r", "-\t\t\tnew Scanner(false, false, false, compilerOptions.assertMode);\r", "+\t\t\tnew Scanner(false, false, false, this.compilerOptions.assertMode);\r"]}], "num": 23270}