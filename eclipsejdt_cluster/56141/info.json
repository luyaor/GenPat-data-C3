{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42107f2bf75432efb12b9dd96d977bdd", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24c17691f271d2d9bc2fbb20fea0c0e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "2f0c7ec523954b9442b914a192aeb84937c76666", "commitAfterChange": "e1ce38065823480549fe152214755fa58b2884e3", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tpublic String getSharedProperty(String key) throws CoreException", "signatureAfterChange": " \tpublic String getSharedProperty(String key) throws CoreException", "diff": ["-\t\t\tFile file  = rscFile.getLocation().toFile();", "-\t\t\tif (file.exists()) {", "-\t\t\t\tbyte[] bytes;", "-\t\t\t\ttry {", "-\t\t\t\t\tbytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(file);", "-\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\treturn null;", "-\t\t\t\t}", "-\t\t\t\ttry {", "-\t\t\t\t\tproperty = new String(bytes, org.eclipse.jdt.internal.compiler.util.Util.UTF_8); // .classpath always encoded with UTF-8", "-\t\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\t\tUtil.log(e, \"Could not read .classpath with UTF-8 encoding\"); //$NON-NLS-1$", "-\t\t\t\t\t// fallback to default", "-\t\t\t\t\tproperty = new String(bytes);", "+\t\t\tIPath location = rscFile.getLocation();", "+\t\t\tif (location != null) {", "+\t\t\t\tFile file = location.toFile();", "+\t\t\t\tif (file.exists()) {", "+\t\t\t\t\tbyte[] bytes;", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tbytes = org.eclipse.jdt.internal.compiler.util.Util.getFileByteContent(file);", "+\t\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "+\t\t\t\t\ttry {", "+\t\t\t\t\t\tproperty = new String(bytes, org.eclipse.jdt.internal.compiler.util.Util.UTF_8); // .classpath always encoded with UTF-8", "+\t\t\t\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\t\t\t\tUtil.log(e, \"Could not read .classpath with UTF-8 encoding\"); //$NON-NLS-1$", "+\t\t\t\t\t\t// fallback to default", "+\t\t\t\t\t\tproperty = new String(bytes);", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f387f89bab2ec3117faa81cb85798eaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "137d17cbff4a2ae5133173b2584d756409234eb4", "commitAfterChange": "3eea226b0688d8900e48a81d42b158e30404c893", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 117, "signatureBeforeChange": " \tpublic IClasspathEntry[] readFileEntriesWithException(Map unknownElements) throws CoreException, IOException, ClasspathEntry.AssertionFailedException", "signatureAfterChange": " \tpublic IClasspathEntry[] readFileEntriesWithException(Map unknownElements) throws CoreException, IOException, ClasspathEntry.AssertionFailedException", "diff": ["-\t\tString xmlClasspath;", "+\t\tbyte[] bytes;", "-\t\t\tbyte[] bytes = Util.getResourceContentsAsByteArray(rscFile);", "-\t\t\ttry {", "-\t\t\t\txmlClasspath = new String(bytes, org.eclipse.jdt.internal.compiler.util.Util.UTF_8); // .classpath always encoded with UTF-8", "-\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\tUtil.log(e, \"Could not read .classpath with UTF-8 encoding\"); //$NON-NLS-1$", "-\t\t\t\t// fallback to default", "-\t\t\t\txmlClasspath = new String(bytes);", "-\t\t\t}", "+\t\t\tbytes = Util.getResourceContentsAsByteArray(rscFile);", "-\t\t\tbyte[] bytes;", "-\t\t\ttry {", "-\t\t\t\txmlClasspath = new String(bytes, org.eclipse.jdt.internal.compiler.util.Util.UTF_8); // .classpath always encoded with UTF-8", "-\t\t\t} catch (UnsupportedEncodingException e) {", "-\t\t\t\tUtil.log(e, \"Could not read .classpath with UTF-8 encoding\"); //$NON-NLS-1$", "-\t\t\t\t// fallback to default", "-\t\t\t\txmlClasspath = new String(bytes);", "-\t\t\t}", "+\t\t}", "+\t\tif (hasUTF8BOM(bytes)) { // see https://bugs.eclipse.org/bugs/show_bug.cgi?id=240034", "+\t\t\tint length = bytes.length-IContentDescription.BOM_UTF_8.length;", "+\t\t\tSystem.arraycopy(bytes, IContentDescription.BOM_UTF_8.length, bytes = new byte[length], 0, length);", "+\t\t}", "+\t\tString xmlClasspath;", "+\t\ttry {", "+\t\t\txmlClasspath = new String(bytes, org.eclipse.jdt.internal.compiler.util.Util.UTF_8); // .classpath always encoded with UTF-8", "+\t\t} catch (UnsupportedEncodingException e) {", "+\t\t\tUtil.log(e, \"Could not read .classpath with UTF-8 encoding\"); //$NON-NLS-1$", "+\t\t\t// fallback to default", "+\t\t\txmlClasspath = new String(bytes);"]}], "num": 56141}