{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "918a91580322de947e33c072615dd442", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c2156adfc7d0c3a5cd7137a6515dabf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7d36cd74d7dfc1f56f940c426e98d6c489655858", "commitAfterChange": "f95e58c822d23fa71cf6c6e2ac3adce80f07a42f", "methodNumberBeforeChange": 1370, "methodNumberAfterChange": 1369, "signatureBeforeChange": " public void test1339()", "signatureAfterChange": " public void test1338()", "diff": ["+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=234619", "+\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\", // =================", "+\t\t\t\t\"public class X {\\n\" + ", "+\t\t\t\t\"        void m(Object someObject, Integer intObject) {\\n\" + ", "+\t\t\t\t\"                Exception class1 = someObject.getClass();\\n\" + ", "+\t\t\t\t\"                Exception class2 = intObject.getClass();\\n\" + ", "+\t\t\t\t\"        }\\n\" + ", "+\t\t\t\t\"}\\n\", // =================", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "+\t\t\t\"\tException class1 = someObject.getClass();\\n\" + ", "+\t\t\t\"\t                   ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends Object> to Exception\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "+\t\t\t\"\tException class2 = intObject.getClass();\\n\" + ", "+\t\t\t\"\t                   ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Class<capture#2-of ? extends Integer> to Exception\\n\" + ", "+\t\t\t\"----------\\n\");", "+}", "-//https://bugs.eclipse.org/bugs/show_bug.cgi?id=234619", "-public void test1339() {", "-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\", // =================", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"        void m(Object someObject, Integer intObject) {\\n\" + ", "-\t\t\t\t\"                Exception class1 = someObject.getClass();\\n\" + ", "-\t\t\t\t\"                Exception class2 = intObject.getClass();\\n\" + ", "-\t\t\t\t\"        }\\n\" + ", "-\t\t\t\t\"}\\n\", // =================", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tException class1 = someObject.getClass();\\n\" + ", "-\t\t\t\"\t                   ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends Object> to Exception\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tException class2 = intObject.getClass();\\n\" + ", "-\t\t\t\"\t                   ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Class<capture#2-of ? extends Integer> to Exception\\n\" + ", "-\t\t\t\"----------\\n\");", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9570c6af0c14030817bf63f28d3798f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7d36cd74d7dfc1f56f940c426e98d6c489655858", "commitAfterChange": "f95e58c822d23fa71cf6c6e2ac3adce80f07a42f", "methodNumberBeforeChange": 1370, "methodNumberAfterChange": 1370, "signatureBeforeChange": " public void test1339()", "signatureAfterChange": " public void test1339()", "diff": ["+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=234619 - variation", "+public void test1339() {", "+\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"java/lang/Object.java\", // =================", "+\t\t\t\t\"package java.lang;\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"public class Object {\\n\" + ", "+\t\t\t\t\"\tvoid foo() {\\n\" + ", "+\t\t\t\t\"\t\tException e1 = getClass();\\n\" + ", "+\t\t\t\t\"\t\tException e2 = this.getClass();\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tpublic Class<?> getClass() { return null; }\\n\" +", "+\t\t\t\t\"}\\n\", // =================", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in java\\\\lang\\\\Object.java (at line 5)\\n\" + ", "+\t\t\t\"\tException e1 = getClass();\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends Object> to Exception\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in java\\\\lang\\\\Object.java (at line 6)\\n\" + ", "+\t\t\t\"\tException e2 = this.getClass();\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Class<capture#2-of ? extends Object> to Exception\\n\" + ", "+\t\t\t\"----------\\n\");", "+}", "-//https://bugs.eclipse.org/bugs/show_bug.cgi?id=234619", "-public void test1339() {", "-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\", // =================", "-\t\t\t\t\"public class X {\\n\" + ", "-\t\t\t\t\"        void m(Object someObject, Integer intObject) {\\n\" + ", "-\t\t\t\t\"                Exception class1 = someObject.getClass();\\n\" + ", "-\t\t\t\t\"                Exception class2 = intObject.getClass();\\n\" + ", "-\t\t\t\t\"        }\\n\" + ", "-\t\t\t\t\"}\\n\", // =================", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\t\"\tException class1 = someObject.getClass();\\n\" + ", "-\t\t\t\"\t                   ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends Object> to Exception\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\tException class2 = intObject.getClass();\\n\" + ", "-\t\t\t\"\t                   ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Class<capture#2-of ? extends Integer> to Exception\\n\" + ", "-\t\t\t\"----------\\n\");", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed2eee87c1f20cef19d0bd68359b57ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "7c8286e32ed1c984440c429d1b469ce918e31ba0", "commitAfterChange": "7d36cd74d7dfc1f56f940c426e98d6c489655858", "methodNumberBeforeChange": 1371, "methodNumberAfterChange": 1373, "signatureBeforeChange": " public void _test1339()", "signatureAfterChange": " public void test1342()", "diff": ["-//https://bugs.eclipse.org/bugs/show_bug.cgi?id=234619 - variation", "-public void _test1339() {", "-\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"java/lang/Object.java\", // =================", "-\t\t\t\t\"package java.lang;\\n\" + ", "-\t\t\t\t\"\\n\" + ", "-\t\t\t\t\"public class Object {\\n\" + ", "-\t\t\t\t\"\tvoid foo() {\\n\" + ", "-\t\t\t\t\"\t\tException e1 = getClass();\\n\" + ", "-\t\t\t\t\"\t\tException e2 = this.getClass();\\n\" + ", "-\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\"\tpublic Class<?> getClass() { return null; }\\n\" +", "-\t\t\t\t\"}\\n\", // =================", "-\t\t\t},", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in java\\\\lang\\\\Object.java (at line 5)\\n\" + ", "-\t\t\t\"\tException e1 = getClass();\\n\" + ", "-\t\t\t\"\t               ^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends Object> to Exception\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in java\\\\lang\\\\Object.java (at line 6)\\n\" + ", "-\t\t\t\"\tException e2 = this.getClass();\\n\" + ", "-\t\t\t\"\t               ^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Type mismatch: cannot convert from Class<capture#2-of ? extends Object> to Exception\\n\" + ", "+//https://bugs.eclipse.org/bugs/show_bug.cgi?id=234619 - variation", "+public void test1342() {", "+\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"java/lang/Object.java\", // =================", "+\t\t\t\t\"package java.lang;\\n\" + ", "+\t\t\t\t\"\\n\" + ", "+\t\t\t\t\"public class Object {\\n\" + ", "+\t\t\t\t\"\tvoid foo() {\\n\" + ", "+\t\t\t\t\"\t\tException e1 = getClass();\\n\" + ", "+\t\t\t\t\"\t\tException e2 = this.getClass();\\n\" + ", "+\t\t\t\t\"\t}\\n\" + ", "+\t\t\t\t\"\tpublic Class<?> getClass() { return null; }\\n\" +", "+\t\t\t\t\"}\\n\", // =================", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in java\\\\lang\\\\Object.java (at line 5)\\n\" + ", "+\t\t\t\"\tException e1 = getClass();\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Class<capture#1-of ? extends Object> to Exception\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in java\\\\lang\\\\Object.java (at line 6)\\n\" + ", "+\t\t\t\"\tException e2 = this.getClass();\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type mismatch: cannot convert from Class<capture#2-of ? extends Object> to Exception\\n\" + ", "+\t\t\t\"----------\\n\");", "+}"]}], "num": 3885}