{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "505d288cbcf5b99571346ff6b4c85d25", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56fc1c757117998475b2836b34d76b22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "ce95cbd0fd6ce62e0a880cf427ad9d5c5121d1ae", "commitAfterChange": "95993961e278d83dc23d7d0203a47aaea09dd722", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tprotected void seekTypesInSourcePackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "signatureAfterChange": " \tprotected void seekTypesInSourcePackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "diff": ["+\t\tboolean[] isWorkingCopy = new boolean[length];", "+\t\t\t\t\tisWorkingCopy[i] = true;", "+\t\t\t\t\t\tSystem.arraycopy(isWorkingCopy, 0, isWorkingCopy = new boolean[length], 0, index);", "+\t\t\t\t\tisWorkingCopy[index] = true; ", "+\t\t\t\tSystem.arraycopy(isWorkingCopy, 0, isWorkingCopy = new boolean[index], 0, index);", "-\t\t\tif ((!potentialMemberType && workingCopies != null && workingCopies.containsValue(compilationUnit))", "+\t\t\tif ((isWorkingCopy[i] && !potentialMemberType)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "614006159c67c2871abe7c3b923004a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "21cbb8771cc00d8e13a556404fdfae59ecdb14f8", "commitAfterChange": "0899c90ae8de27e397eab6637d91f616ff022416", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource)", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource)", "diff": ["-\tfor (int i = 0, max = projects.length; i < max; i++) {", "+\tint length = projects.length;", "+\tIJavaElement[] children = new IJavaElement[length];", "+\tint index = 0;", "+\tfor (int i = 0; i < length; i++) {", "-\t\t\tinfo.addChild(getJavaProject(project));", "+\t\t\tchildren[index++] = getJavaProject(project);", "+\tif (index < length)", "+\t\tSystem.arraycopy(children, 0, children = new IJavaElement[index], 0, index);", "+\tinfo.setChildren(children);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c43a8d5fb239a9dc1d6cc601ca0f1099", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "commitAfterChange": "0bd9f6472768db6e5f0062ffcfd17bd3adede039", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic CompilationUnit convert(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit, char[] source)", "signatureAfterChange": " \tpublic CompilationUnit convert(org.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration unit, char[] source)", "diff": ["-\t\tif (unit.compilationResult.problemCount != 0) {", "-\t\t\tpropagateErrors(compilationUnit, unit.compilationResult.problems, unit.compilationResult.problemCount);", "+\t\tint problemLength = unit.compilationResult.problemCount;", "+\t\tif (problemLength != 0) {", "+\t\t\tIProblem[] resizedProblems = null;", "+\t\t\tfinal IProblem[] problems = unit.compilationResult.problems;", "+\t\t\tif (problems.length == problemLength) {", "+\t\t\t\tresizedProblems = problems;", "+\t\t\t} else {", "+\t\t\t\tSystem.arraycopy(problems, 0, (resizedProblems = new IProblem[problemLength]), 0, problemLength);", "+\t\t\t}", "+\t\t\tpropagateErrors(compilationUnit, resizedProblems);", "+\t\t\tcompilationUnit.setProblems(resizedProblems);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fe6852559d9ae5ca698ad0f539850bda", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "f482e17ca46d43774914916e0157c70a13f00e99", "commitAfterChange": "f527cf4f7e4c93ea86c2f85d506bb185a3192a98", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void connect(IGenericType suppliedType, IGenericType superclass, IGenericType[] superinterfaces)", "signatureAfterChange": "\r public void connect(IGenericType suppliedType, IGenericType superclass, IGenericType[] superinterfaces)", "diff": ["-\t\tinterfaceHandles= new IType[superinterfaces.length];\r", "-\t\tfor (int i= 0; i < interfaceHandles.length; i++) {\r", "-\t\t\tinterfaceHandles[i]= getHandle(superinterfaces[i]);\r", "+\t\tint length = superinterfaces.length;\r", "+\t\tIType[] resolvedInterfaceHandles= new IType[length];\r", "+\t\tint index = 0;\r", "+\t\tfor (int i= 0; i < length; i++) {\r", "+\t\t\tif (superinterfaces[i] != null) {\r", "+\t\t\t\tresolvedInterfaceHandles[index++]= getHandle(superinterfaces[i]);\r", "+\t\t\t}\r", "+\t\t// resize\r", "+\t\tSystem.arraycopy(resolvedInterfaceHandles, 0, interfaceHandles = new IType[index], 0, index);\r"]}], "num": 39014}