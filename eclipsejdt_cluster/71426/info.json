{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f0b7a3a912b154f840e4431fb70104e4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f96cd696b1a970a8e85df0e67e99654", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] elementsToRefresh, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] elementsToRefresh, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t\tjavaProject.getResolvedClasspath(", "-\t\t\t\t\t\ttrue/*ignoreUnresolvedEntry*/, ", "-\t\t\t\t\t\ttrue/*generateMarkerOnError*/, ", "-\t\t\t\t\t\tfalse/*don't returnResolutionInProgress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ac211fda3256e9d9068058397ae2bbc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "signatureAfterChange": " \tpublic void computePackageFragmentRoots( \t\tIClasspathEntry resolvedEntry, \t\tObjectVector accumulatedRoots,  \t\tHashSet rootIDs,  \t\tboolean insideOriginalProject, \t\tboolean checkExistency, \t\tboolean retrieveExportedRoots) throws JavaModelException", "diff": ["-\t\t\t\t\t\t\trequiredProject.getResolvedClasspath(true), ", "+\t\t\t\t\t\t\trequiredProject.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "387fba63b9aa7c9f933955ff20065836", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void deleting(IProject project)", "signatureAfterChange": " \tprivate void deleting(IProject project)", "diff": ["-\t\t\t\t\t\tjavaProject.getResolvedClasspath(true), ", "+\t\t\t\t\t\tjavaProject.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, false/*don't generateMarkerOnError*/, false/*don't returnResolutionInProgress*/), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec5d4faf8df851b1369a1ef5877d8413", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "30748a6c6dfe6f7060b223cad8c061c5c1b6cae9", "commitAfterChange": "1a0dc0ac3e33cbb594dc3b8ca78970e5922d2a33", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] elementsToRefresh, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic void checkExternalArchiveChanges(IJavaElement[] elementsToRefresh, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t\t\ttrue, // ignoreUnresolvedEntry", "-\t\t\t\t\t\ttrue); // generateMarkerOnError", "+\t\t\t\t\t\ttrue/*ignoreUnresolvedEntry*/, ", "+\t\t\t\t\t\ttrue/*generateMarkerOnError*/, ", "+\t\t\t\t\t\tfalse/*don't returnResolutionInProgress*/);"]}], "num": 71426}