{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "717d538be3e732037564a98b3b105947", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68acdb2926414c9da02a7933e5a689a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "d9fb3e56eed823fb6622a8495eae4ece5fa65380", "commitAfterChange": "dd35bd97ba21687c000ee94c7818b9d5fcec230b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public boolean checkPathMatch(char[] pattern, char[] path, boolean isCaseSensitive)", "signatureAfterChange": " public boolean checkPathMatch(char[] pattern, char[] path, boolean isCaseSensitive)", "diff": ["-\tboolean antResult = SelectorUtils.matchPath(new String(pattern), new String(path), isCaseSensitive);", "+\t//boolean antResult = SelectorUtils.matchPath(new String(pattern), new String(path), isCaseSensitive);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b9a0f467eb17df2d9005f01e97d63aaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "a9c68df97efd734f3ed326f5e99e4d21e6054bec", "commitAfterChange": "af2f21c145913c8a7ccf22989ee905c5f5c7dd0d", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic static ISearchPattern createSearchPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "signatureAfterChange": " \tpublic static ISearchPattern createSearchPattern(String stringPattern, int searchFor, int limitTo, boolean isCaseSensitive)", "diff": ["-\t\treturn SearchPattern.createPattern(stringPattern, searchFor, limitTo, matchMode, isCaseSensitive);", "+\t\treturn  new SearchPatternAdapter(SearchPattern.createPattern(stringPattern, searchFor, limitTo, matchMode, isCaseSensitive));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9b86ac01e1edee5ad6fb7a84cbc6c62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tprotected void search(IJavaElement element, int limitTo, int matchRule, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "signatureAfterChange": " \tprotected void search(IJavaElement element, int limitTo, int matchRule, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "diff": ["+\t\tSearchPattern pattern = SearchPattern.createPattern(element, limitTo, matchRule);", "+\t\tassertNotNull(\"Pattern should not be null\", pattern);", "-\t\t\tSearchPattern.createPattern(element, limitTo, matchRule),", "+\t\t\tpattern,"]}], "num": 66534}