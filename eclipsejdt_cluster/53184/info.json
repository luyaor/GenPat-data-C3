{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "023fcff797695f46f1c557614a690302", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5118b904a40829b6375b4b522522b12e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tVariableBinding var = this.lhs.variableBinding(currentScope);", "+\tLocalVariableBinding local = this.lhs.localVariableBinding();", "-\tLocalVariableBinding localToAnalyseAsResource = null;", "-\tif (var instanceof LocalVariableBinding ", "-\t\t\t&& flowInfo.reachMode() == FlowInfo.REACHABLE", "-\t\t\t&& currentScope.compilerOptions().analyseResourceLeaks", "+\tboolean shouldAnalyseResource = local != null ", "+\t\t\t&& flowInfo.reachMode() == FlowInfo.REACHABLE ", "-\t\t\t\t\t|| this.expression.resolvedType == TypeBinding.NULL)) {", "-\t\tlocalToAnalyseAsResource = (LocalVariableBinding) var;", "-", "+\t\t\t\t\t|| this.expression.resolvedType == TypeBinding.NULL);", "+\tif (shouldAnalyseResource) {", "-\t\tFakedTrackingVariable.preConnectTrackerAcrossAssignment(this, localToAnalyseAsResource, this.expression);", "+\t\tFakedTrackingVariable.preConnectTrackerAcrossAssignment(this, local, this.expression);", "-\tif (localToAnalyseAsResource != null) {", "-\t\tFakedTrackingVariable.handleResourceAssignment(currentScope, preInitInfo, flowInfo, this, this.expression, localToAnalyseAsResource);", "-\t} else {", "+\tif (shouldAnalyseResource)", "+\t\tFakedTrackingVariable.handleResourceAssignment(currentScope, preInitInfo, flowInfo, this, this.expression, local);", "+\telse", "-\t}", "-\tif (var != null && (var.type.tagBits & TagBits.IsBaseType) == 0) {", "+\tif (local != null && (local.type.tagBits & TagBits.IsBaseType) == 0) {", "-\t\t\tflowContext.recordUsingNullReference(currentScope, var, this.lhs,", "+\t\t\tflowContext.recordUsingNullReference(currentScope, local, this.lhs,", "-\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, var, nullStatus, this.expression);", "-\tif (var != null && (var.type.tagBits & TagBits.IsBaseType) == 0) {", "-\t\tflowInfo.markNullStatus(var, nullStatus);", "+\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, local, nullStatus, this.expression);", "+\tif (local != null && (local.type.tagBits & TagBits.IsBaseType) == 0) {", "+\t\tflowInfo.markNullStatus(local, nullStatus);", "-\t\t\tflowContext.initsOnFinally.markNullStatus(var, nullStatus);", "+\t\t\tflowContext.initsOnFinally.markNullStatus(local, nullStatus);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fea9f9b13410c6e7ece66f9e82a87175", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Assignment.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\tLocalVariableBinding local = this.lhs.localVariableBinding();", "+\tVariableBinding var = this.lhs.variableBinding(currentScope);", "-\tboolean shouldAnalyseResource = local != null ", "+\tLocalVariableBinding localToAnalyseAsResource = null;", "+\tif (var instanceof LocalVariableBinding ", "-\t\t\t\t\t|| this.expression.resolvedType == TypeBinding.NULL);", "-\tif (shouldAnalyseResource) {", "+\t\t\t\t\t|| this.expression.resolvedType == TypeBinding.NULL)) {", "+\t\tlocalToAnalyseAsResource = (LocalVariableBinding) var;", "+", "-\t\tFakedTrackingVariable.preConnectTrackerAcrossAssignment(this, local, this.expression);", "+\t\tFakedTrackingVariable.preConnectTrackerAcrossAssignment(this, localToAnalyseAsResource, this.expression);", "-\tif (shouldAnalyseResource)", "-\t\tFakedTrackingVariable.handleResourceAssignment(currentScope, preInitInfo, flowInfo, this, this.expression, local);", "-\telse", "+\tif (localToAnalyseAsResource != null) {", "+\t\tFakedTrackingVariable.handleResourceAssignment(currentScope, preInitInfo, flowInfo, this, this.expression, localToAnalyseAsResource);", "+\t} else {", "+\t}", "-\tif (local != null && (local.type.tagBits & TagBits.IsBaseType) == 0) {", "+\tif (var != null && (var.type.tagBits & TagBits.IsBaseType) == 0) {", "-\t\t\tflowContext.recordUsingNullReference(currentScope, local, this.lhs,", "+\t\t\tflowContext.recordUsingNullReference(currentScope, var, this.lhs,", "-\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, local, nullStatus, this.expression);", "-\tif (local != null && (local.type.tagBits & TagBits.IsBaseType) == 0) {", "-\t\tflowInfo.markNullStatus(local, nullStatus);", "+\tnullStatus = checkAssignmentAgainstNullAnnotation(currentScope, flowContext, var, nullStatus, this.expression);", "+\tif (var != null && (var.type.tagBits & TagBits.IsBaseType) == 0) {", "+\t\tflowInfo.markNullStatus(var, nullStatus);", "-\t\t\tflowContext.initsOnFinally.markNullStatus(local, nullStatus);", "+\t\t\tflowContext.initsOnFinally.markNullStatus(var, nullStatus);"]}], "num": 53184}