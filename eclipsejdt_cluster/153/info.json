{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e3906fd94de6021c13fc00ec988feba8", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5ef17dee0cef91c6747a7e5d6f501eaa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "09c77a64b988d1b8740f2abeef7353a697d466b3", "commitAfterChange": "472457e984077a2dae302cbc6a3b8aff55ad1844", "methodNumberBeforeChange": 127, "methodNumberAfterChange": 126, "signatureBeforeChange": " \tpublic void test040c()", "signatureAfterChange": " \tpublic void test040c()", "diff": ["-\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_6 ?", "-\t\t\t\"----------\\n\":", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"1. WARNING in X.java (at line 2)\\n\" +", "-\t\t\t\t\"\tabstract class Y<S> implements X<S> { public abstract X x(); }\\n\" +", "-\t\t\t\t\"\t                                                      ^\\n\" +", "-\t\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"2. WARNING in X.java (at line 2)\\n\" +", "-\t\t\t\t\"\tabstract class Y<S> implements X<S> { public abstract X x(); }\\n\" +", "-\t\t\t\t\"\t                                                      ^\\n\" +", "-\t\t\t\t\"Type safety: The return type X for x() from the type Y<S> needs unchecked conversion to conform to X<T> from the type X<T>\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"3. WARNING in X.java (at line 2)\\n\" +", "-\t\t\t\t\"\tabstract class Y<S> implements X<S> { public abstract X x(); }\\n\" +", "-\t\t\t\t\"\t                                                        ^^^\\n\" +", "-\t\t\t\t\"The method x() of type Y<S> should be tagged with @Override since it actually overrides a superinterface method\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"4. WARNING in X.java (at line 3)\\n\" +", "-\t\t\t\t\"\tabstract class Z implements X { public abstract X x(); }\\n\" +", "-\t\t\t\t\"\t                            ^\\n\" +", "-\t\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"5. WARNING in X.java (at line 3)\\n\" +", "-\t\t\t\t\"\tabstract class Z implements X { public abstract X x(); }\\n\" +", "-\t\t\t\t\"\t                                                ^\\n\" +", "-\t\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" +", "-\t\t\t\t\"----------\\n\" +", "-\t\t\t\t\"6. WARNING in X.java (at line 3)\\n\" +", "-\t\t\t\t\"\tabstract class Z implements X { public abstract X x(); }\\n\" +", "-\t\t\t\t\"\t                                                  ^^^\\n\" +", "-\t\t\t\t\"The method x() of type Z should be tagged with @Override since it actually overrides a superinterface method\\n\" +", "-\t\t\t\t\"----------\\n\"", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d75b592332e23f74052701c2ed949ee7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "75ef57a93e4cb21ceda10f87f94dbbdb5e4d9d80", "commitAfterChange": "09c77a64b988d1b8740f2abeef7353a697d466b3", "methodNumberBeforeChange": 126, "methodNumberAfterChange": 127, "signatureBeforeChange": " \tpublic void test040c()", "signatureAfterChange": " \tpublic void test040c()", "diff": ["+\t\t\tthis.complianceLevel < ClassFileConstants.JDK1_6 ?", "-\t\t\t\"----------\\n\"", "+\t\t\t\"----------\\n\":", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"1. WARNING in X.java (at line 2)\\n\" +", "+\t\t\t\t\"\tabstract class Y<S> implements X<S> { public abstract X x(); }\\n\" +", "+\t\t\t\t\"\t                                                      ^\\n\" +", "+\t\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"2. WARNING in X.java (at line 2)\\n\" +", "+\t\t\t\t\"\tabstract class Y<S> implements X<S> { public abstract X x(); }\\n\" +", "+\t\t\t\t\"\t                                                      ^\\n\" +", "+\t\t\t\t\"Type safety: The return type X for x() from the type Y<S> needs unchecked conversion to conform to X<T> from the type X<T>\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"3. WARNING in X.java (at line 2)\\n\" +", "+\t\t\t\t\"\tabstract class Y<S> implements X<S> { public abstract X x(); }\\n\" +", "+\t\t\t\t\"\t                                                        ^^^\\n\" +", "+\t\t\t\t\"The method x() of type Y<S> should be tagged with @Override since it actually overrides a superinterface method\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"4. WARNING in X.java (at line 3)\\n\" +", "+\t\t\t\t\"\tabstract class Z implements X { public abstract X x(); }\\n\" +", "+\t\t\t\t\"\t                            ^\\n\" +", "+\t\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"5. WARNING in X.java (at line 3)\\n\" +", "+\t\t\t\t\"\tabstract class Z implements X { public abstract X x(); }\\n\" +", "+\t\t\t\t\"\t                                                ^\\n\" +", "+\t\t\t\t\"X is a raw type. References to generic type X<T> should be parameterized\\n\" +", "+\t\t\t\t\"----------\\n\" +", "+\t\t\t\t\"6. WARNING in X.java (at line 3)\\n\" +", "+\t\t\t\t\"\tabstract class Z implements X { public abstract X x(); }\\n\" +", "+\t\t\t\t\"\t                                                  ^^^\\n\" +", "+\t\t\t\t\"The method x() of type Z should be tagged with @Override since it actually overrides a superinterface method\\n\" +", "+\t\t\t\t\"----------\\n\""]}], "num": 153}