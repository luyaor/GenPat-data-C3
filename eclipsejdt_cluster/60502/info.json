{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "182a78f8c85ca459bb3c8ea58d850948", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d8918716bf8da3e49217427cdabd8af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaWorkspaceScope.java", "commitBeforeChange": "bc001047b4a82ed71734208a2fa6b751eb7774fc", "commitAfterChange": "2500b3904e1334267970c0209e30fc4f2378bf72", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public IPackageFragmentRoot packageFragmentRoot(String resourcePathString, int jarSeparatorIndex, String jarPath)", "signatureAfterChange": " public IPackageFragmentRoot packageFragmentRoot(String resourcePathString, int jarSeparatorIndex, String jarPath)", "diff": ["-\t\trootInfo = (DeltaProcessor.RootInfo) rootInfos.get(path);", "-\t\twhile (rootInfo == null && path.segmentCount() > 0) {", "-\t\t\tpath = path.removeLastSegments(1);", "+\t\tif (ExternalFoldersManager.isInternalPathForExternalFolder(path)) {", "+\t\t\tIResource resource = JavaModel.getWorkspaceTarget(path.uptoSegment(2/*linked folders for external folders are always of size 2*/));", "+\t\t\tif (resource != null)", "+\t\t\t\trootInfo = (DeltaProcessor.RootInfo) rootInfos.get(resource.getLocation());", "+\t\t} else {", "+\t\t\twhile (rootInfo == null && path.segmentCount() > 0) {", "+\t\t\t\tpath = path.removeLastSegments(1);", "+\t\t\t\trootInfo = (DeltaProcessor.RootInfo) rootInfos.get(path);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809a8a20d1e437eccd92970104bcb889", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "commitAfterChange": "ed3a0c0705f2be20be3aaf856f81a3803e4ac341", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " protected int matchMethod(MethodBinding method, boolean skipImpossibleArg)", "signatureAfterChange": " protected int matchMethod(MethodBinding method, boolean skipImpossibleArg)", "diff": ["+\t\t\tif (argType.isTypeVariable()) {", "+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=123836, No point in textually comparing type variables, captures etc with concrete types. ", "+\t\t\t\tMethodBinding focusMethodBinding = this.matchLocator.getMethodBinding(this.pattern);", "+\t\t\t\tif (focusMethodBinding != null) {", "+\t\t\t\t\tif (matchOverriddenMethod(focusMethodBinding.declaringClass, focusMethodBinding, method)) {", "+\t\t\t\t\t\treturn ACCURATE_MATCH;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "edc7b63c4f0495772805e492979d78eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "94a425e221148886c840b4d545bf87183980be4b", "commitAfterChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public String toString()", "signatureAfterChange": "  public String toString()", "diff": ["-\t\t\t\tresult.append(this.containerPaths[i]);", "+\t\t\t\tif (ExternalFoldersManager.isInternalPathForExternalFolder(new Path(this.containerPaths[i]))) {", "+\t\t\t\t\tObject target = JavaModel.getWorkspaceTarget(new Path(this.containerPaths[i]));", "+\t\t\t\t\tresult.append(((IFolder) target).getLocation().toOSString());", "+\t\t\t\t} else {", "+\t\t\t\t\tresult.append(this.containerPaths[i]);", "+\t\t\t\t}"]}], "num": 60502}