{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "877709924380717b348a83467b398c9c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d409ad82da5b1eead44b71b56af9f613", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/LocalVariableLocator.java", "commitBeforeChange": "cb3a630359a22f7ce6166a489826cbd44a0698c7", "commitAfterChange": "684148daf1ae1fa5c2a3b4e261bbfa56ad328f58", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic int match(LocalDeclaration node, MatchingNodeSet nodeSet)", "signatureAfterChange": " public int match(LocalDeclaration node, MatchingNodeSet nodeSet)", "diff": ["+}", "+public int match(LocalDeclaration node, MatchingNodeSet nodeSet) {", "+\tint referencesLevel = IMPOSSIBLE_MATCH;", "+\tif (this.pattern.findReferences)", "+\t\t// must be a write only access with an initializer", "+\t\tif (this.pattern.writeAccess && !this.pattern.readAccess && node.initialization != null)", "+\t\t\tif (matchesName(this.pattern.name, node.name))", "+\t\t\t\treferencesLevel = this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH;", "-\tpublic int match(LocalDeclaration node, MatchingNodeSet nodeSet) {", "-\t\tint referencesLevel = IMPOSSIBLE_MATCH;", "-\t\tif (this.pattern.findReferences)", "-\t\t\t// must be a write only access with an initializer", "-\t\t\tif (this.pattern.writeAccess && !this.pattern.readAccess && node.initialization != null)", "-\t\t\t\tif (matchesName(this.pattern.name, node.name))", "-\t\t\t\t\treferencesLevel = this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH;", "-\t", "-\t\tint declarationsLevel = IMPOSSIBLE_MATCH;", "-\t\tif (this.pattern.findDeclarations)", "-\t\t\tif (matchesName(this.pattern.name, node.name)) {", "-\t\t\t\tif (node.declarationSourceStart == getLocalVariable().declarationSourceStart)", "-\t\t\t\t\tdeclarationsLevel = this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH;", "-\t\t\t}", "-\t", "-\t\treturn nodeSet.addMatch(node, referencesLevel >= declarationsLevel ? referencesLevel : declarationsLevel); // use the stronger match", "-\t}", "+\tint declarationsLevel = IMPOSSIBLE_MATCH;", "+\tif (this.pattern.findDeclarations)", "+\t\tif (matchesName(this.pattern.name, node.name))", "+\t\t\tif (node.declarationSourceStart == getLocalVariable().declarationSourceStart)", "+\t\t\t\tdeclarationsLevel = this.pattern.mustResolve ? POSSIBLE_MATCH : ACCURATE_MATCH;", "+\treturn nodeSet.addMatch(node, referencesLevel >= declarationsLevel ? referencesLevel : declarationsLevel); // use the stronger match", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "da2cb2bee24ba0b1cb9eff55b3b32ead", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 18, "signatureBeforeChange": " protected void resetQuery()", "signatureAfterChange": " protected void resetQuery()", "diff": ["-\tif (this.simpleName == null) {", "-\t\t/* walk the segments from end to start as it will find less potential references using 'lang' than 'java' */", "+\t/* walk the segments from end to start as it will find less potential references using 'lang' than 'java' */", "+\tif (this.simpleName == null)", "-\t}"]}], "num": 41097}