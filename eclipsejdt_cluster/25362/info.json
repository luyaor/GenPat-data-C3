{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83a4a50513b7790dc83294cf6ab976b2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e6791bb93074a95fb9ab54e38736c12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "8f40b18693d984d1b3346925dd24dfb773855585", "commitAfterChange": "98a24097737828240f1d21a0b23b90c66df1d2e5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void createTypeHierarchyBasedOnRegion(ArrayList allTypesInRegion, IProgressMonitor monitor)", "signatureAfterChange": " private void createTypeHierarchyBasedOnRegion(ArrayList allOpenablesInRegion, IProgressMonitor monitor)", "diff": ["-private void createTypeHierarchyBasedOnRegion(ArrayList allTypesInRegion, IProgressMonitor monitor) {", "+private void createTypeHierarchyBasedOnRegion(ArrayList allOpenablesInRegion, IProgressMonitor monitor) {", "-\tint size = allTypesInRegion.size();", "+\tint size = allOpenablesInRegion.size();", "-\tHashSet existingOpenables = new HashSet(size);", "-\tint openableIndex = 0;", "-\tfor (int i = 0; i < size; i++) {", "-\t\tIType type = (IType)allTypesInRegion.get(i);", "-\t\tOpenable openable;", "-\t\tif (type.isBinary()) {", "-\t\t\topenable = (Openable)type.getClassFile();", "-\t\t} else {", "-\t\t\topenable = (Openable)type.getCompilationUnit();", "-\t\t}", "-\t\tif (existingOpenables.add(openable)) {", "-\t\t\topenables[openableIndex++] = openable;", "-\t\t}", "-\t}", "-\tif (openableIndex < size) {", "-\t\tSystem.arraycopy(openables, 0, openables = new Openable[openableIndex], 0, openableIndex);", "-\t}", "+\tallOpenablesInRegion.toArray(openables);", "-\t\tif (monitor != null) monitor.beginTask(\"\", openableIndex * 2/* 1 for build binding, 1 for connect hierarchy*/); //$NON-NLS-1$", "-\t\tif (openableIndex > 0) {", "+\t\tif (monitor != null) monitor.beginTask(\"\", size * 2/* 1 for build binding, 1 for connect hierarchy*/); //$NON-NLS-1$", "+\t\tif (size > 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82a0d34ff98723cbee43ca0e76d28dde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedHierarchyBuilder.java", "commitBeforeChange": "f881f7f3af831f777efbcae1d912f604e776b198", "commitAfterChange": "af8ddf1224acdd73d35eff5f86a6b2b80c9a4304", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " private void createTypeHierarchyBasedOnRegion(ArrayList allOpenablesInRegion, IProgressMonitor monitor)", "signatureAfterChange": " private void createTypeHierarchyBasedOnRegion(HashMap allOpenablesInRegion, IProgressMonitor monitor)", "diff": ["-private void createTypeHierarchyBasedOnRegion(ArrayList allOpenablesInRegion, IProgressMonitor monitor) {", "+private void createTypeHierarchyBasedOnRegion(HashMap allOpenablesInRegion, IProgressMonitor monitor) {", "-\tOpenable[] openables = new Openable[size];", "-\tallOpenablesInRegion.toArray(openables);", "-", "-\ttry {", "-\t\t// resolve", "-\t\tif (monitor != null) monitor.beginTask(\"\", size * 2/* 1 for build binding, 1 for connect hierarchy*/); //$NON-NLS-1$", "-\t\tif (size > 0) {", "-\t\t\tthis.hierarchyResolver.resolve(openables, null, monitor);", "+\t", "+\tIterator javaProjects = allOpenablesInRegion.keySet().iterator();", "+\twhile (javaProjects.hasNext()) {", "+\t\tArrayList allOpenables = (ArrayList) allOpenablesInRegion.get(javaProjects.next());", "+\t\tOpenable[] openables = new Openable[allOpenables.size()];", "+\t\tallOpenables.toArray(openables);", "+\t", "+\t\ttry {", "+\t\t\t// resolve", "+\t\t\tif (monitor != null) monitor.beginTask(\"\", size * 2/* 1 for build binding, 1 for connect hierarchy*/); //$NON-NLS-1$", "+\t\t\tif (size > 0) {", "+\t\t\t\tthis.hierarchyResolver.resolve(openables, null, monitor);", "+\t\t\t}", "+\t\t} finally {", "+\t\t\tif (monitor != null) monitor.done();", "-\t} finally {", "-\t\tif (monitor != null) monitor.done();"]}], "num": 25362}