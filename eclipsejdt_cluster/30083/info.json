{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7090d04ef78b710e421eec1850721789", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1c9f37a9b7d53a83e10f5461a6e8ba5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "9cba04f18d30e225a9b07e674615bf0c81dc9b5f", "commitAfterChange": "d59541eb58af959f3a88200970206c2ba05248de", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 34, "signatureBeforeChange": " \t\tprivate JavacHasABug(int mismatchType, int[] minorsFixed)", "signatureAfterChange": " \t\t\t\t\t\t\tExcuse excuseFor(JavacCompiler compiler)", "diff": ["-\t\tprivate JavacHasABug(int mismatchType, int[] minorsFixed) {", "-\t\t\tsuper(mismatchType);", "-\t\t\tthis.minorsFixed = minorsFixed;", "-\t\t}", "+\t\t\t\t\t\tMismatchType.JavacErrorsEclipseNone) {", "+\t\t\t\t\t\t\tExcuse excuseFor(JavacCompiler compiler) {", "+\t\t\t\t\t\t\t\treturn compiler.compliance != ClassFileConstants.JDK1_5 ||", "+\t\t\t\t\t\t\t\t\t\tcompiler.minor != 1600 ? null : this;", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9e156167c9b12489822583de144d981", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  public void computeId()", "signatureAfterChange": "  public void computeId()", "diff": ["-\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ASSERTIONERROR[2]))", "-\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAssertionError;", "+\t\t\t\t\tswitch(typeName.length) {", "+\t\t\t\t\t\tcase 13 :", "+\t\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_AUTOCLOSEABLE[2]))", "+\t\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAutoCloseable;", "+\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\tcase 14:", "+\t\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_ASSERTIONERROR[2]))", "+\t\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangAssertionError;", "+\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t\t\tcase 11 :", "+\t\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_SAFEVARARGS[2]))", "+\t\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangSafeVarargs;", "+\t\t\t\t\t\t\treturn;", "-\t\t\tif (!CharOperation.equals(TypeConstants.LANG, this.compoundName[1]))", "-\t\t\t\treturn;", "+\t\t\tpackageName = this.compoundName[1];", "+\t\t\tif (packageName.length == 0) return; // just to be safe", "+", "+\t\t\t\tcase 'i':", "+\t\t\t\t\tif (CharOperation.equals(packageName, TypeConstants.INVOKE)) {", "+\t\t\t\t\t\tif (typeName.length == 0) return; // just to be safe", "+\t\t\t\t\t\tswitch (typeName[0]) {", "+\t\t\t\t\t\t\tcase 'M' :", "+\t\t\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_INVOKE_METHODHANDLE_$_POLYMORPHICSIGNATURE[3]))", "+\t\t\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangInvokeMethodHandlePolymorphicSignature;", "+\t\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\treturn;", "+\t\tcase 5 :", "+\t\t\tif (!CharOperation.equals(TypeConstants.JAVA, this.compoundName[0]))", "+\t\t\t\treturn;", "+\t\t\tpackageName = this.compoundName[1];", "+\t\t\tif (packageName.length == 0) return; // just to be safe", "+", "+\t\t\tif (CharOperation.equals(TypeConstants.LANG, packageName)) {", "+\t\t\t\tpackageName = this.compoundName[2];", "+\t\t\t\tif (packageName.length == 0) return; // just to be safe", "+\t\t\t\tswitch (packageName[0]) {", "+\t\t\t\t\tcase 'i' :", "+\t\t\t\t\t\tif (CharOperation.equals(packageName, TypeConstants.INVOKE)) { ", "+\t\t\t\t\t\t\ttypeName = this.compoundName[3];", "+\t\t\t\t\t\t\tif (typeName.length == 0) return; // just to be safe", "+\t\t\t\t\t\t\tswitch (typeName[0]) {", "+\t\t\t\t\t\t\t\tcase 'M' :", "+\t\t\t\t\t\t\t\t\tchar[] memberTypeName = this.compoundName[4];", "+\t\t\t\t\t\t\t\t\tif (memberTypeName.length == 0) return; // just to be safe", "+\t\t\t\t\t\t\t\t\tif (CharOperation.equals(typeName, TypeConstants.JAVA_LANG_INVOKE_METHODHANDLE_POLYMORPHICSIGNATURE[3])", "+\t\t\t\t\t\t\t\t\t\t\t&& CharOperation.equals(memberTypeName, TypeConstants.JAVA_LANG_INVOKE_METHODHANDLE_POLYMORPHICSIGNATURE[4]))", "+\t\t\t\t\t\t\t\t\t\tthis.id = TypeIds.T_JavaLangInvokeMethodHandlePolymorphicSignature;", "+\t\t\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t\treturn;", "+\t\t\t}"]}], "num": 30083}