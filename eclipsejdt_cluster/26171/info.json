{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c1a800ebc8a3e05a44a881f69a0ff570", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3481b7fe91f7f9a57c420b2adfb5b410", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "d8a456bd9b26260c97b05c5b9053ba80ab69b578", "commitAfterChange": "a460dab1d90a50493c5778c6266a2505ebe8bca6", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 43, "signatureBeforeChange": " \tpublic static IClasspathEntry newSourceEntry(IPath path, IPath[] exclusionPatterns)", "signatureAfterChange": " \tpublic static IClasspathEntry newSourceEntry(IPath path, IPath[] exclusionPatterns, IPath specificOutputLocation, boolean isCleaning)", "diff": ["+\t */", "+\tpublic static IClasspathEntry newSourceEntry(IPath path, IPath[] exclusionPatterns, IPath specificOutputLocation, boolean isCleaning) {", "+//TODO: check here on in conventions ?", "+//\t\tAssert.isTrue(path.segment(0).equals(outputLocation.segment(0)), Util.bind(\"classpath.mustBeInSameProject\" )); //$NON-NLS-1$", "+\t\t\tspecificOutputLocation, // custom output location", "+\t\t\tisCleaning, // cleaning"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "430f2d89cc8fb2c428183f010a242fad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/base/XMLComparer.java", "commitBeforeChange": "e5afcb0ec821099a058acc796f2348c4c58a2e3e", "commitAfterChange": "1a36ae2092977e6a13134bbe916d1e02aefe6f2e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static boolean compare(Document actual, Document expected, OutputStream out)", "signatureAfterChange": " \tpublic static boolean compare(Document actual, Document expected,  \t\t\tOutputStream out, StringBuilder summary, boolean ignoreJavacBugs)", "diff": ["-\tpublic static boolean compare(Document actual, Document expected, OutputStream out) {", "-\t\tXMLComparer comparer = new XMLComparer(actual, expected, out);", "+\tpublic static boolean compare(Document actual, Document expected, ", "+\t\t\tOutputStream out, StringBuilder summary, boolean ignoreJavacBugs) {", "+\t\tXMLComparer comparer = new XMLComparer(actual, expected, out, summary, ignoreJavacBugs);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f25b9f658c9bb6bbc372d84d976337a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "7629cb0ea15afb3f8edb59ed2e3e4b5f7f9fa619", "commitAfterChange": "28b2b7ab5af16a63c18bbdefdc1dcdce67c17817", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  public SearchMatch newMethodReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tASTNode reference)", "signatureAfterChange": "  public SearchMatch newMethodReferenceMatch( \t\tIJavaElement enclosingElement, \t\tint accuracy, \t\tint offset,   \t\tint length, \t\tboolean isConstructor, \t\tboolean isSynthetic, \t\tASTNode reference)", "diff": ["+\t\tboolean isConstructor,", "+\t\tboolean isSynthetic,", "-\treturn new MethodReferenceMatch(enclosingElement, accuracy, offset, length, insideDocComment, participant, resource);", "+\treturn new MethodReferenceMatch(enclosingElement, accuracy, offset, length, isConstructor, isSynthetic, insideDocComment, participant, resource);"]}], "num": 26171}