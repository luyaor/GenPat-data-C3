{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d3eebd0a62bd80071e2a3e4d94fda89", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cf8179190007826e55bcf793349c090", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "e0cd6e6d433203b4e058ad278dd47a28ff7501a4", "commitAfterChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel)", "signatureAfterChange": " private void createMethods(IBinaryMethod[] iMethods, long sourceLevel)", "diff": ["-\t\t\tif (isViewedAsDeprecated && !method.isDeprecated()) {", "+\t\t\tif (isViewedAsDeprecated && !method.isDeprecated())", "-\t\t\t}\t\t", "-\t\tfor (int i = 0, index = 0; i < initialTotal; i++)", "+\t\tfor (int i = 0, index = 0; i < initialTotal; i++) {", "-\t\t\t\tif (isViewedAsDeprecated && !method.isDeprecated()) {", "+\t\t\t\tif (isViewedAsDeprecated && !method.isDeprecated())", "-\t\t\t\t}\t\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e99abae855d98300b5b366e8b0f3abe7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "84a8f41b2dd2dacf2e433dcace83425a3df5cf2d", "commitAfterChange": "2cb54434593d4e5dfdb20e79742efc2e53dbb162", "methodNumberBeforeChange": 100, "methodNumberAfterChange": 100, "signatureBeforeChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "signatureAfterChange": " \tpublic boolean visit( \t\tMethodDeclaration methodDeclaration, \t\tClassScope scope)", "diff": ["-\t\tif (!methodDeclaration.isNative() && !methodDeclaration.isAbstract() && ((methodDeclaration.modifiers & CompilerModifiers.AccSemicolonBody) == 0)) {", "+\t\tif (!methodDeclaration.isNative() && !methodDeclaration.isAbstract() && ((methodDeclaration.modifiers & ExtraCompilerModifiers.AccSemicolonBody) == 0)) {"]}], "num": 23391}