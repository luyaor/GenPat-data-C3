{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "306abfbcd3a019ce1049bd57a6f5e43d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5267c80f691421fb3fe49ff85e351cbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8d1c92d5ff789a78e5b2b21597d7c303cc8d5234", "commitAfterChange": "270bcfc5f9a8c2abee755a7d8ecdd2a24972b638", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters)", "signatureAfterChange": " \t \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters)", "diff": ["+\t\t\t\t\tif (superType.isParameterizedType()) {", "+\t\t\t\t\t\tReferenceBinding match = typeVariable.superclass.findSuperTypeErasingTo((ReferenceBinding) superType.erasure());", "+\t\t\t\t\t\tboolean isCollision = match != null && match != superType;", "+\t\t\t\t\t\tfor (int index = typeVariable.superInterfaces.length; !isCollision && --index >= 0;) {", "+\t\t\t\t\t\t\tReferenceBinding temp = typeVariable.superInterfaces[index];", "+\t\t\t\t\t\t\tisCollision = superType != temp && superType.erasure() == temp.erasure();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (isCollision) {", "+\t\t\t\t\t\t\tproblemReporter().boundHasConflictingArguments(typeRef, superType);", "+\t\t\t\t\t\t\ttypeVariable.tagBits |= HierarchyHasProblems;", "+\t\t\t\t\t\t\tnoProblems = false;", "+\t\t\t\t\t\t\tcontinue nextVariable;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b37f8065860e77761877d6e0c796ddb6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "26c2e79f3bf65d02ca24e9f456c481b11db84310", "commitAfterChange": "1542690d818b56ca31610b1599cca37ada2a98ce", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters)", "signatureAfterChange": " \t \tprotected boolean connectTypeVariables(TypeParameter[] typeParameters)", "diff": ["+\t\t\t\t\tfor (int index = typeVariable.superInterfaces.length; --index >= 0;) {", "+\t\t\t\t\t\tif (superType.erasure() == typeVariable.superInterfaces[index].erasure()) {", "+\t\t\t\t\t\t\tproblemReporter().duplicateBounds(typeRef, superType);", "+\t\t\t\t\t\t\ttypeVariable.tagBits |= HierarchyHasProblems;", "+\t\t\t\t\t\t\tnoProblems = false;", "+\t\t\t\t\t\t\tcontinue nextVariable;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}], "num": 49354}