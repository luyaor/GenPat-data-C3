{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf4b13797d2f982f9018c073b8468188", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c70819712ffb44afff01d0346cead4a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ExternalJarDeltaTests.java", "commitBeforeChange": "bd2b202132c8d4bb0e104bd05827a1b9231c9dc5", "commitAfterChange": "4aad3541005b227c1c4489d6142b68e14885b9dc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void testExternalJarInternalExternalJar() throws CoreException, IOException", "signatureAfterChange": " public void testExternalJarInternalExternalJar() throws CoreException, IOException", "diff": ["+\t\tproject.open(null); // ensure that project is opened, as external jar delta is optimized for this case (if the project is not opened, there is no need for broadcasting an external jar delta)", "-\t\tf.createNewFile();", "-\t\t", "-\t\t\t\"\t\"+externalFooPathString+\"[+]: {}\\n\"+", "+\t\t\t\"\t\"+externalFooPathString+\"[*]: {ADDED TO CLASSPATH}\\n\"+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee05412873e9493e0e462041a5893bb5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "50431e234c5ece34d7b8d3e0af32a86a5079d5cd", "commitAfterChange": "e87f626a0744f3e42bfbad630a4e9545c488a83d", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean( \t\tBlockScope currentScope, \t\tCodeStream codeStream, \t\tLabel trueLabel, \t\tLabel falseLabel, \t\tboolean valueRequired)", "diff": ["-\t\t\t\tLabel internalTrueLabel = new Label(codeStream);", "+\t\t\t\tLabel internalFalseLabel = new Label(codeStream);", "-\t\t\t\t\tinternalTrueLabel, // will be false in the end", "-\t\t\t\t\tfalse);", "+\t\t\t\t\tinternalFalseLabel, ", "+\t\t\t\t\ttrue);", "-\t\t\t\tinternalTrueLabel.place();", "+\t\t\t\tinternalFalseLabel.place();"]}], "num": 7675}