{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d92b0058a6775498f2fec8f9567e6d96", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0876524b5402db1b93b1c5ac03b164e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "1a6d97b0c8e2ee11e777bc806dbc197dca19b1ac", "commitAfterChange": "4a455a738b063857a7ce52571f1a941497e79aea", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tICompilationUnit unit, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tICompilationUnit unit, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner)", "diff": ["-\t\t\t\tcompilationUnitDeclaration = CompilationUnitResolver.resolve(unit, false/*don't cleanup*/);", "+\t\t\t\tcompilationUnitDeclaration = CompilationUnitResolver.resolve(unit, false/*don't cleanup*/, source);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca6710f9de3acb54cd6fc1d738cf2993", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/CodeSnippetParsingUtil.java", "commitBeforeChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "commitAfterChange": "0bd9f6472768db6e5f0062ffcfd17bd3adede039", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings)", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings)", "diff": ["-\tpublic CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings) {", "+\tpublic static CompilationUnitDeclaration parseCompilationUnit(char[] source, Map settings) {", "-\t\tparser.javadocParser.checkJavadoc = false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf7f5c6b7ae30aba4529511055968a30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "b505eec36702205d416645439f4218a52c610506", "commitAfterChange": "a0c59dbe1fcc531830cd318af17b39e6ad26be4e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\t\tcompilationUnitDeclaration = parser.parseCompilationUnit(source, true /*full parse to find local elements*/);", "+\t\t\tcompilationUnitDeclaration = parser.parseCompilationUnit(source, true /*full parse to find local elements*/, pm);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df61eb7b795e4eb668b1fcda1df5c717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tICompilationUnit unit, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tICompilationUnit unit, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner)", "diff": ["+\t\t", "+\t\treturn parseCompilationUnit(unit, resolveBindings, owner, null);", "+\t}", "-\t\t\t\tcompilationUnitDeclaration = CompilationUnitResolver.resolve(unit, false/*don't cleanup*/, source, owner);", "-\t\t\t\tASTConverter converter = new ASTConverter(unit.getJavaProject().getOptions(true), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6197d628c1ebf6d7f0fb3a1e276491b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit(char[] source, Map options)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject project, \t\tWorkingCopyOwner owner)", "diff": ["+\t\t", "+\t\treturn parseCompilationUnit(source, unitName, project, owner, null);", "+\t}", "-\tpublic static CompilationUnit parseCompilationUnit(char[] source, Map options) {", "-\t\tASTConverter converter = new ASTConverter(options, false);"]}], "num": 9558}