{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff2377c523c9c71705e069ca027e0762", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c8568886c5cd996ee8d7f4478a8db15", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BaseTypeBinding.java", "commitBeforeChange": "2f56fba6c2e777da3162491a81994cf0b767a403", "commitAfterChange": "6bb9ac9dc18ee0f8d98f9fd4a48ab0839082bd53", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic static final boolean isNarrowing(int left, int right)", "signatureAfterChange": " \tpublic static final boolean isNarrowing(int left, int right)", "diff": ["+\t */", "+\tpublic static final boolean isNarrowing(int left, int right) {", "+\t\tint right2left = right + (left<<4);", "+\t\treturn right2left >= 0 ", "+\t\t\t\t\t\t&& right2left < MAX_CONVERSIONS ", "+\t\t\t\t\t\t&& (CONVERSIONS[right2left] & (IDENTITY|NARROWING)) != 0;", "+\t}", "-", "-\tpublic static final boolean isNarrowing(int left, int right) {", "-", "-\t\t//can \"left\" store a \"right\" using some narrowing conversion", "-\t\t//(is left smaller than right)", "-\t\tswitch (left) {", "-\t\t\tcase TypeIds.T_boolean :", "-\t\t\t\treturn right == TypeIds.T_boolean;", "-\t\t\tcase TypeIds.T_char :", "-\t\t\tcase TypeIds.T_byte :", "-\t\t\t\tif (right == TypeIds.T_byte)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tcase TypeIds.T_short :", "-\t\t\t\tif (right == TypeIds.T_short)", "-\t\t\t\t\treturn true;", "-\t\t\t\tif (right == TypeIds.T_char)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tcase TypeIds.T_int :", "-\t\t\t\tif (right == TypeIds.T_int)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tcase TypeIds.T_long :", "-\t\t\t\tif (right == TypeIds.T_long)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tcase TypeIds.T_float :", "-\t\t\t\tif (right == TypeIds.T_float)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tcase TypeIds.T_double :", "-\t\t\t\tif (right == TypeIds.T_double)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tdefault :", "-\t\t\t\treturn false;", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56abcf736a81641889aa316917676a13", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BaseTypeBinding.java", "commitBeforeChange": "2f56fba6c2e777da3162491a81994cf0b767a403", "commitAfterChange": "6bb9ac9dc18ee0f8d98f9fd4a48ab0839082bd53", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static final boolean isWidening(int left, int right)", "signatureAfterChange": " \tpublic static final boolean isWidening(int left, int right)", "diff": ["+\t */", "+\tpublic static final boolean isWidening(int left, int right) {", "+\t\tint right2left = right + (left<<4);", "+\t\treturn right2left >= 0 ", "+\t\t\t\t\t\t&& right2left < MAX_CONVERSIONS ", "+\t\t\t\t\t\t&& (CONVERSIONS[right2left] & (IDENTITY|WIDENING)) != 0;", "+\t}", "-\tpublic static final boolean isWidening(int left, int right) {", "-\t\t//can \"left\" store a \"right\" using some widening conversion", "-\t\t//(is left \"bigger\" than right)", "-\t\tswitch (left) {", "-\t\t\tcase TypeIds.T_boolean :", "-\t\t\t\treturn right == TypeIds.T_boolean;", "-\t\t\tcase TypeIds.T_char :", "-\t\t\t\treturn right == TypeIds.T_char;", "-\t\t\tcase TypeIds.T_double :", "-\t\t\t\tif (right == TypeIds.T_double)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tcase TypeIds.T_float :", "-\t\t\t\tif (right == TypeIds.T_float)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tcase TypeIds.T_long :", "-\t\t\t\tif (right == TypeIds.T_long)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tcase TypeIds.T_int :", "-\t\t\t\tif (right == TypeIds.T_int)", "-\t\t\t\t\treturn true;", "-\t\t\t\tif (right == TypeIds.T_char)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tcase TypeIds.T_short :", "-\t\t\t\tif (right == TypeIds.T_short)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tcase TypeIds.T_byte :", "-\t\t\t\tif (right == TypeIds.T_byte)", "-\t\t\t\t\treturn true;", "-\t\t\t\t//$FALL-THROUGH$", "-\t\t\tdefault :", "-\t\t\t\treturn false;", "-\t\t}", "-\t}"]}], "num": 72561}