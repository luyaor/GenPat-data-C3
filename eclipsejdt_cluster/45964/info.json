{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a4233d770ce1a3507faca71dfae1284", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c19dd30070756eacacceab8119bf41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/InternalNamingConventions.java", "commitBeforeChange": "71c4acdd0905e065690b5a7def2363cd736fd9d9", "commitAfterChange": "40efcac62f74a525f36207bf04469af4d555a161", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[] internalPrefix, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "signatureAfterChange": " \t \tprivate static void suggestNames( \t\tchar[] packageName, \t\tchar[] qualifiedTypeName, \t\tint dim, \t\tchar[] internalPrefix, \t\tchar[][] prefixes, \t\tchar[][] suffixes, \t\tchar[][] excludedNames, \t\tScanner nameScanner, \t\tINamingRequestor requestor)", "diff": ["+\t\t\tunprefixedName[0] = ScannerHelper.toUpperCase(unprefixedName[0]);", "-\t\t\t\tif(j == internalPrefix.length || CharOperation.prefixEquals(CharOperation.subarray(internalPrefix, j, -1), unprefixedName, false)) {", "+\t\t\t\tif(j == internalPrefix.length ||", "+\t\t\t\t\t\tCharOperation.prefixEquals(CharOperation.subarray(internalPrefix, j, -1), unprefixedName, j != 0 /*do not check case when there is no prefix*/)) {", "-\t\t\t\t\tif(j != 0) tempName[j] = ScannerHelper.toUpperCase(tempName[j]);", "+\t\t\t\t\tif(j == 0) tempName[0] = ScannerHelper.toLowerCase(tempName[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b754f16f7328cc77a8f8a663821133ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "7159d03b35583ef652a35141b4e5f0e03996db0b", "commitAfterChange": "d2487ffafdbbe7eaca44a67066ee7584eaf4c775", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static char[] removePrefixAndSuffix(char[] name, char[][] prefixes, char[][] suffixes)", "signatureAfterChange": " \t \tprivate static char[] removePrefixAndSuffix(char[] name, char[][] prefixes, char[][] suffixes)", "diff": ["-\t\t\t\t\tif (bestLength < currLen && name.length != currLen) {", "-\t\t\t\t\t\twithoutPrefixName = CharOperation.subarray(name, currLen, name.length);", "-\t\t\t\t\t\tbestLength = currLen;", "+\t\t\t\t\tboolean lastCharIsLetter = Character.isLetter(prefix[currLen - 1]);", "+\t\t\t\t\tif(!lastCharIsLetter || (lastCharIsLetter && name.length > currLen && Character.isUpperCase(name[currLen]))) {", "+\t\t\t\t\t\tif (bestLength < currLen && name.length != currLen) {", "+\t\t\t\t\t\t\twithoutPrefixName = CharOperation.subarray(name, currLen, name.length);", "+\t\t\t\t\t\t\tbestLength = currLen;", "+\t\t\t\t\t\t}"]}], "num": 45964}