{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5dc9d90eec6409d7d0e74951e53f79a0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09469356141c4fb5f08da66c158fce96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LambdaExpression.java", "commitBeforeChange": "a3a00115caa9dfd2b9b6d5b9fcf61ba0f8479cd9", "commitAfterChange": "c5d3e87bb720e91660c058962146e02390cfc415", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  \tpublic String[] getSuperInterfaceTypeSignatures() throws JavaModelException", "signatureAfterChange": "  \tpublic String[] getSuperInterfaceTypeSignatures() throws JavaModelException", "diff": ["-\t\tSourceTypeElementInfo info = (SourceTypeElementInfo) getElementInfo();", "-\t\tchar[][] names = info.getInterfaceNames();", "-\t\tif (names == null) {", "-\t\t\treturn CharOperation.NO_STRINGS;", "-\t\t}", "-\t\tString[] strings = new String[names.length];", "-\t\tfor (int i= 0; i < names.length; i++) {", "-\t\t\tstrings[i] = new String(Signature.createTypeSignature(names[i], true));", "-\t\t}", "-\t\treturn strings;", "+\t\treturn new String[] { this.interphase };"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7414627099bd4a8787e35ddcec815e8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "8067f09e8071a20569a3fd9dc66db19a958bfb97", "commitAfterChange": "f6a0948c2da27a90da464bd930eca2dc3c5c851b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public String[] getParameterNames() throws JavaModelException", "signatureAfterChange": " public String[] getParameterNames() throws JavaModelException", "diff": ["-\t\t\t\t// ignore", "+\t\t\t\tjavadocContents = null;", "-\t\t} else {", "-\t\t\t// let's see if we can retrieve them from the debug infos", "-\t\t\tchar[][] argumentNames = info.getArgumentNames();", "-\t\t\tif (argumentNames != null && argumentNames.length == paramCount) {", "-\t\t\t\tString[] names = new String[paramCount];", "-\t\t\t\tfor (int i = 0; i < paramCount; i++) {", "-\t\t\t\t\tnames[i] = new String(argumentNames[i]);", "-\t\t\t\t}", "-\t\t\t\treturn this.parameterNames = names;", "-\t\t\t}", "-\t\t\treturn getRawParameterNames(paramCount);"]}], "num": 64836}