{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7a70777fa2d3499a567f3f3ff2a8cc3e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "700a2a3ada8fb6f4af214c25087ced3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "5228dfdf7fa03d5185db0383190068a0dd5a8b1d", "commitAfterChange": "0bd28d2896289b3835c461013a60982c7e5b2bf2", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void test008()", "signatureAfterChange": " \tpublic void test008()", "diff": ["+\t\t// int -> Integer", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// byte -> Byte", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static byte bar() {return 1;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\tY.test(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Y {\\n\" +", "+\t\t\t\t\"\tprivate static void test(byte i) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tstatic void test(byte... i) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tpublic static void test(Byte b) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// char -> Character", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static char bar() {return 'c';}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\tY.test(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Y {\\n\" +", "+\t\t\t\t\"\tprivate static void test(char i) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tstatic void test(char... i) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tpublic static void test(Character c) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// float -> Float", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static float bar() {return 0.0f;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\tY.test(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Y {\\n\" +", "+\t\t\t\t\"\tprivate static void test(float f) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tstatic void test(float... f) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tpublic static void test(Float f) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// double -> Double", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static double bar() {return 0.0;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\tY.test(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Y {\\n\" +", "+\t\t\t\t\"\tprivate static void test(double d) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tstatic void test(double... d) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tpublic static void test(Double d) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// long -> Long", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static long bar() {return 0;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\tY.test(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Y {\\n\" +", "+\t\t\t\t\"\tprivate static void test(long l) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tstatic void test(long... l) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tpublic static void test(Long l) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// short -> Short", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static short bar() {return 0;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\tY.test(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Y {\\n\" +", "+\t\t\t\t\"\tprivate static void test(short s) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tstatic void test(short... s) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tpublic static void test(Short s) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// boolean -> Boolean", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static boolean bar() {return true;}\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\tY.test(bar());\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"}\\n\" +", "+\t\t\t\t\"class Y {\\n\" +", "+\t\t\t\t\"\tprivate static void test(boolean b) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tstatic void test(boolean... b) { System.out.print('n'); }\\n\" +", "+\t\t\t\t\"\tpublic static void test(Boolean b) { System.out.print('y'); }\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83185c8b13c1003978c954181e814d25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AutoBoxingTest.java", "commitBeforeChange": "7e8c39a9e3d7dea3d8b022efbc3b049165785892", "commitAfterChange": "1585d95aacd546d0fef8e25ddee2f5a6f64f7c62", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void test002()", "signatureAfterChange": "  \tpublic void test003()", "diff": ["+", "+\tpublic void test003() { // Number -> base type", "+\t\t// Integer -> int", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(new Integer(1));\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(int i) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// Byte -> byte", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(new Byte((byte) 1));\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(byte b) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// Byte -> long", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(new Byte((byte) 1));\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(long l) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// Character -> char", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(new Character('c'));\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(char c) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// Float -> float", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(new Float(0.0f));\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(float f) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// Double -> double", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(new Double(0.0));\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(double d) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// Long -> long", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(new Long(0L));\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(long l) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// Short -> short", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(new Short((short) 0));\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(short s) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t\t// Boolean -> boolean", "+\t\tthis.runConformTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"public class X {\\n\" +", "+\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "+\t\t\t\t\"\t\ttest(Boolean.TRUE);\\n\" +", "+\t\t\t\t\"\t}\\n\" +", "+\t\t\t\t\"\tpublic static void test(boolean b) { System.out.print('y'); }\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t},", "+\t\t\t\"y\"", "+\t\t);", "+\t}", "-\tpublic void test002() { // convert Byte to long?", "-\t\tthis.runConformTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\"\tpublic static void main(String[] s) {\\n\" +", "-\t\t\t\t\"\t\tnew Y().test(new Byte((byte) 1));\\n\" +", "-\t\t\t\t\"\t}\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class Y {\\n\" +", "-\t\t\t\t\"\tvoid test(long i) { System.out.print('y'); }\\n\" +", "-\t\t\t\t\"}\\n\",", "-\t\t\t},", "-\t\t\t\"y\"", "-\t\t);", "-\t}"]}], "num": 57397}