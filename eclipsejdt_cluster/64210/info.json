{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6ee229e48e07243a57d72db6b0a45e9", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b51cf240d83126844b58d291fb9a68a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "72a68c016a698ff6410dc3bc7e6c9d812a69aea4", "commitAfterChange": "ceb9e880c1b5f4a965f8c0bb64e2584c9ba904dc", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\tfinal CompilerOptions compilerOptions = scope.compilerOptions();", "+\t\tif (compilerOptions.complainOnUninternedIdentityComparison && originalRightType.hasTypeBit(TypeIds.BitUninternedType) && originalLeftType.hasTypeBit(TypeIds.BitUninternedType))", "+\t\t\tscope.problemReporter().uninternedIdentityComparison(this, originalLeftType, originalRightType);", "+", "-\t\tboolean use15specifics = scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5;", "+\t\tboolean use15specifics = compilerOptions.sourceLevel >= ClassFileConstants.JDK1_5;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78f363a49f90d80dd809694615e5130e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "06c5cc5d76301192931dd7d79fa73fba87dfcc22", "commitAfterChange": "7b78243b59a21f4401b3ec3e9d2215dc9a75a7b5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\tfinal CompilerOptions compilerOptions = scope.compilerOptions();", "+\t\tif (compilerOptions.complainOnUninternedIdentityComparison && originalRightType.hasTypeBit(TypeIds.BitUninternedType) && originalLeftType.hasTypeBit(TypeIds.BitUninternedType))", "+\t\t\tscope.problemReporter().uninternedIdentityComparison(this, originalLeftType, originalRightType);", "+", "-\t\tboolean use15specifics = scope.compilerOptions().sourceLevel >= ClassFileConstants.JDK1_5;", "+\t\tboolean use15specifics = compilerOptions.sourceLevel >= ClassFileConstants.JDK1_5;"]}], "num": 64210}