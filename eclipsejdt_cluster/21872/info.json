{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a4f039f59ab2a9fdd04c9cbe3aa9b411", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94b030fafb90a8d390ccf22c5856e22d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "0490e8b1eeb14a2cc033060047b6bcfdf849f8a0", "commitAfterChange": "68c4f604f354a3213e3cb188ddbd758a47497f3f", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tprivate static void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprivate static void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tIPath oldPath = JavaModelManager.variableGet(variableName); // if reentering will provide previous session value ", "-\t\t\tif (oldPath == JavaModelManager.VariableInitializationInProgress){", "-\t\t\t\tIPath previousPath = (IPath)JavaModelManager.PreviousSessionVariables.get(variableName);", "+\t\t\tIPath oldPath = JavaModelManager.getJavaModelManager().variableGet(variableName); // if reentering will provide previous session value ", "+\t\t\tif (oldPath == JavaModelManager.VARIABLE_INITIALIZATION_IN_PROGRESS){", "+\t\t\t\tIPath previousPath = (IPath)JavaModelManager.getJavaModelManager().previousSessionVariables.get(variableName);", "-\t\t\t\t\tJavaModelManager.variablePut(variableName, previousPath); // replace value so reentering calls are seeing old value", "+\t\t\t\t\tJavaModelManager.getJavaModelManager().variablePut(variableName, previousPath); // replace value so reentering calls are seeing old value", "-\t\t\tJavaModelManager.variablePut(variableNames[i], variablePaths[i]);", "+\t\t\tJavaModelManager.getJavaModelManager().variablePut(variableNames[i], variablePaths[i]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "991021d5703df6581452daf4a4570715", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f51d6f5a0e9a386694d73d0c3aec5b18e2ce1002", "commitAfterChange": "4ec516fd83ba9f8d854c904c0afabe8bb5fc0412", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " \tprivate static void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprivate static void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\tIPath oldPath = (IPath)JavaModelManager.variableGet(variableNames[i]);", "-\t\t\tif (oldPath == JavaModelManager.VariableInitializationInProgress) oldPath = null;", "+\t\t\tString variableName = variableNames[i];", "+\t\t\tIPath oldPath = (IPath)JavaModelManager.variableGet(variableName); // if reentering will provide previous session value ", "+\t\t\tif (oldPath == JavaModelManager.VariableInitializationInProgress){", "+\t\t\t\tIPath previousPath = (IPath)JavaModelManager.PreviousSessionVariables.get(variableName);", "+\t\t\t\tif (previousPath != null){", "+\t\t\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE){", "+\t\t\t\t\t\tSystem.out.println(\"CPVariable INIT - reentering access to variable: \" + variableName+ \" during its initialization, will see previous value: \"+ previousPath); //$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\t}", "+\t\t\t\t\tJavaModelManager.variablePut(variableName, previousPath); // replace value so reentering calls are seeing old value", "+\t\t\t\t}", "+\t\t\t\toldPath = previousPath;", "+\t\t\t}", "-\t\t\t\t\t\t\t\taffectedProjects.put(project, ((JavaProject)project).getResolvedClasspath(true));", "+\t\t\t\t\t\t\t\taffectedProjects.put(project, project.getResolvedClasspath(true));", "-\t\t\t\t\t\t\t\taffectedProjects.put(project, ((JavaProject)project).getResolvedClasspath(true));", "+\t\t\t\t\t\t\t\taffectedProjects.put(project, project.getResolvedClasspath(true));", "-\t\t\tIPath path = variablePaths[i];", "-\t\t\tJavaModelManager.variablePut(variableNames[i], path);", "+\t\t\tJavaModelManager.variablePut(variableNames[i], variablePaths[i]);"]}], "num": 21872}