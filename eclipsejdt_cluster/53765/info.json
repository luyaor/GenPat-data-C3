{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c4fc4657d9a96c648e31f5a2d3bbda7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "704aeedb7341df63a1a60f4046d7315f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/NullInfoRegistry.java", "commitBeforeChange": "e283e45dcf10b8a279f599faf5a92449ec8c719c", "commitAfterChange": "8f130374b1740d04a2a1a32967cf4d9130b4bd12", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void markAsDefinitelyNull(VariableBinding local)", "signatureAfterChange": " public void markAsDefinitelyNull(LocalVariableBinding local)", "diff": ["-public void markAsDefinitelyNull(VariableBinding local) {", "+public void markAsDefinitelyNull(LocalVariableBinding local) {", "-    \tif (local instanceof FieldBinding && ((local.modifiers & AccConstant) == AccConstant)) {", "-    \t\t// non-final fields may be modified in separate threads and we cannot be sure about their", "-    \t\t// definite nullness. Hence, marking as potential null.", "-    \t\tthis.markNullStatus(local, FlowInfo.POTENTIALLY_NULL);", "-\t    \treturn;", "-    \t} else {", "-    \t\tposition = local.getAnalysisId(this.maxFieldCount);", "-    \t}", "-    \tif (position < BitCacheSize) { // use bits", "+    \tif ((position = local.id + this.maxFieldCount) < BitCacheSize) { // use bits"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b71fbf97be9a747f00769265f3a3db9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/NullInfoRegistry.java", "commitBeforeChange": "99e06cdf0656ed0f6c3eb604300a8baae7ee3beb", "commitAfterChange": "d6c2a90130be430285c5f6a000090d250c310afd", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void markAsDefinitelyNull(LocalVariableBinding local)", "signatureAfterChange": " public void markAsDefinitelyNull(VariableBinding local)", "diff": ["-public void markAsDefinitelyNull(LocalVariableBinding local) {", "+public void markAsDefinitelyNull(VariableBinding local) {", "+    \tif (local instanceof FieldBinding && ((local.modifiers & AccConstant) == AccConstant)) {", "+    \t\t// non-final fields may be modified in separate threads and we cannot be sure about their", "+    \t\t// definite nullness. Hence, marking as potential null.", "+    \t\tthis.markNullStatus(local, FlowInfo.POTENTIALLY_NULL);", "+\t    \treturn;", "+    \t} else {", "+    \t\tposition = local.getAnalysisId(this.maxFieldCount);", "+    \t}", "-    \tif ((position = local.id + this.maxFieldCount) < BitCacheSize) { // use bits", "+    \tif (position < BitCacheSize) { // use bits"]}], "num": 53765}