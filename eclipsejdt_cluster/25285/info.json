{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a98296d6b81cd3459f2b6e6c3ade6f86", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f2b0253373363ce459f6cc8a3591213", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldDeclaration.java", "commitBeforeChange": "cb1229e517a2018e5263ed249b199ae2a321da49", "commitAfterChange": "4732df192beaa38106d940c4bfeefb54a9e4a1cf", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public void resolve(MethodScope initializationScope)", "signatureAfterChange": "  public void resolve(MethodScope initializationScope)", "diff": ["-\t\t\t\tFieldBinding existingVariable = classScope.findField(declaringType.superclass, this.name, this,  false /*do not resolve hidden field*/);", "+\t\t\t\tBinding existingVariable = classScope.findField(declaringType.superclass, this.name, this,  false /*do not resolve hidden field*/);", "-\t\t\t\tif (existingVariable.original() == this.binding) break checkHidingSuperField; // keep checking outer scenario", "-\t\t\t\tif (!existingVariable.canBeSeenBy(declaringType, this, initializationScope)) break checkHidingSuperField; // keep checking outer scenario", "+\t\t\t\tif (existingVariable instanceof FieldBinding) {", "+\t\t\t\t\tFieldBinding existingField = (FieldBinding) existingVariable;", "+\t\t\t\t\tif (existingField.original() == this.binding) break checkHidingSuperField; // keep checking outer scenario", "+\t\t\t\t\tif (!existingField.canBeSeenBy(declaringType, this, initializationScope)) break checkHidingSuperField; // keep checking outer scenario", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b5789373c345e742609f753c0a9fc6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Annotation.java", "commitBeforeChange": "4ad3c874e62c224ecc8908a13e75fb553a601626", "commitAfterChange": "96b9f3a2bb7723060aaffc443c165d9a3e629afb", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic ISourceRange getNameRange() throws JavaModelException", "signatureAfterChange": "  \tpublic ISourceRange getNameRange() throws JavaModelException", "diff": ["-\t\tAnnotationInfo info = (AnnotationInfo) getElementInfo();", "-\t\treturn new SourceRange(info.nameStart, info.nameEnd - info.nameStart + 1);", "+\t\tObject info = getElementInfo();", "+\t\tif (info instanceof AnnotationInfo) {", "+\t\t\tAnnotationInfo annotationInfo = (AnnotationInfo) info;", "+\t\t\treturn new SourceRange(annotationInfo.nameStart, annotationInfo.nameEnd - annotationInfo.nameStart + 1);", "+\t\t}", "+\t\treturn null;"]}], "num": 25285}