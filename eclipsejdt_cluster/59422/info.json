{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48e8e0238301c4d30d326193f28a5edf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34f819ead3aa6c8ebe3889233eb4d6ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe2.java", "commitBeforeChange": "7ae418fd7c0f682802a208d278a74651039ebd3b", "commitAfterChange": "b7fa9526368fbc417ea1b7d0b501e47a1eefe091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "      \tScribe2(CodeFormatterVisitor2 formatter, Map settings, int offset, int length, CompilationUnit unit)", "signatureAfterChange": "  \tScribe2(CodeFormatterVisitor2 formatter, long sourceLevel, int offset, int length, CompilationUnit unit)", "diff": ["-    ", "-\tScribe2(CodeFormatterVisitor2 formatter, Map settings, int offset, int length, CompilationUnit unit) {", "-\t\tif (settings != null) {", "-\t\t\tObject sourceLevelOption = settings.get(JavaCore.COMPILER_SOURCE);", "-\t\t\tlong sourceLevel = ClassFileConstants.JDK1_3;", "-\t\t\tif (JavaCore.VERSION_1_4.equals(sourceLevelOption)) {", "-\t\t\t\tsourceLevel = ClassFileConstants.JDK1_4;", "-\t\t\t} else if (JavaCore.VERSION_1_5.equals(sourceLevelOption)) {", "-\t\t\t\tsourceLevel = ClassFileConstants.JDK1_5;", "-\t\t\t}", "-\t\t\tthis.scanner = new Scanner(true, true, false/*nls*/, sourceLevel/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\t\t} else {", "-\t\t\tthis.scanner = new Scanner(true, true, false/*nls*/, ClassFileConstants.JDK1_3/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\t\t}", "+", "+\tScribe2(CodeFormatterVisitor2 formatter, long sourceLevel, int offset, int length, CompilationUnit unit) {", "+\t\tthis.scanner = new Scanner(true, true, false/*nls*/, sourceLevel/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99155c1b3d3a39344325d7c062f4c58e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor2.java", "commitBeforeChange": "7ae418fd7c0f682802a208d278a74651039ebd3b", "commitAfterChange": "b7fa9526368fbc417ea1b7d0b501e47a1eefe091", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic CodeFormatterVisitor2(DefaultCodeFormatterOptions preferences, Map settings, int offset, int length, CompilationUnit unit)", "signatureAfterChange": "  \tpublic CodeFormatterVisitor2(DefaultCodeFormatterOptions preferences, Map settings, int offset, int length, CompilationUnit unit)", "diff": ["-\t\tif (settings != null) {", "-\t\t\tObject assertModeSetting = settings.get(JavaCore.COMPILER_SOURCE);", "-\t\t\tlong sourceLevel = ClassFileConstants.JDK1_3;", "-\t\t\tif (JavaCore.VERSION_1_4.equals(assertModeSetting)) {", "-\t\t\t\tsourceLevel = ClassFileConstants.JDK1_4;", "-\t\t\t} else if (JavaCore.VERSION_1_5.equals(assertModeSetting)) {", "-\t\t\t\tsourceLevel = ClassFileConstants.JDK1_5;", "-\t\t\t}\t\t", "-\t\t\tthis.localScanner = new Scanner(true, false, false/*nls*/, sourceLevel/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\t\t} else {", "-\t\t\tthis.localScanner = new Scanner(true, false, false/*nls*/, ClassFileConstants.JDK1_3/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\t\t}", "+\t\tlong sourceLevel = settings == null", "+\t\t\t? ClassFileConstants.JDK1_3", "+\t\t\t: CompilerOptions.versionToJdkLevel(settings.get(JavaCore.COMPILER_SOURCE));", "+\t\tthis.localScanner = new Scanner(true, false, false/*nls*/, sourceLevel/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\t\tthis.scribe = new Scribe2(this, settings, offset, length, unit);", "+\t\tthis.scribe = new Scribe2(this, sourceLevel, offset, length, unit);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a1359acbf35b2c0f9b8d080e7fd6bd7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "271685466872d325398ebec16c060abe01ade112", "commitAfterChange": "464f6cfbc4d7c79e3b0be7d1378b5d3f2b61c7f8", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tScribe(CodeFormatterVisitor formatter, Map settings, int offset, int length, CodeSnippetParsingUtil codeSnippetParsingUtil)", "signatureAfterChange": "  \tScribe(CodeFormatterVisitor formatter, Map settings, int offset, int length, CodeSnippetParsingUtil codeSnippetParsingUtil)", "diff": ["-\t\t\tObject assertModeSetting = settings.get(JavaCore.COMPILER_SOURCE);", "+\t\t\tObject sourceLevelOption = settings.get(JavaCore.COMPILER_SOURCE);", "-\t\t\tif (JavaCore.VERSION_1_4.equals(assertModeSetting)) {", "+\t\t\tif (JavaCore.VERSION_1_4.equals(sourceLevelOption)) {", "-\t\t\t} else if (JavaCore.VERSION_1_5.equals(assertModeSetting)) {", "+\t\t\t} else if (JavaCore.VERSION_1_5.equals(sourceLevelOption)) {", "-\t\t\t} else {", "-\t\t\t\tsourceLevel = ClassFileConstants.JDK1_3;", "-\t\t\tif (assertModeSetting != null) {", "-\t\t\t\tthis.scanner = new Scanner(true, true, false/*nls*/, sourceLevel/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\t\t\t} else {", "-\t\t\t\tthis.scanner = new Scanner(true, true, false/*nls*/, ClassFileConstants.JDK1_3/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);", "-\t\t\t}", "+\t\t\tthis.scanner = new Scanner(true, true, false/*nls*/, sourceLevel/*sourceLevel*/, null/*taskTags*/, null/*taskPriorities*/, true/*taskCaseSensitive*/);"]}], "num": 59422}