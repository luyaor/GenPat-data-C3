{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7f3ce81f6596953355a543789227618", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23e4e5836cef72321ee02c857d6aa6ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "d0b9fa49059380aa33c580ecd386773dc780db14", "commitAfterChange": "297d21321fa4e0f1df8ca75fc42ba95a96cc17a8", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["-\t\t\t\t\t\t\t\tTypeBinding match = ((ReferenceBinding)wildcardBound).findSuperTypeWithSameErasure(superclassBound);", "+\t\t\t\t\t\t\t\tTypeBinding match = wildcardBound.findSuperTypeWithSameErasure(superclassBound);", "-\t\t\t\t\t\t\t\t\treturn TypeConstants.MISMATCH;", "+\t\t\t\t\t\t\t\t\tmatch =  superclassBound.findSuperTypeWithSameErasure(wildcardBound);", "+\t\t\t\t\t\t\t\t\tif (match != null) {", "+\t\t\t\t\t\t\t\t\t\tif (!match.isIntersectingWith(wildcardBound)) {", "+\t\t\t\t\t\t\t\t\t\t\treturn TypeConstants.MISMATCH;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\t\t\tif (!wildcardBound.isTypeVariable() && !superclassBound.isTypeVariable()) {", "+\t\t\t\t\t\t\t\t\t\t\treturn TypeConstants.MISMATCH;", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7505eb5d03288cc053b787d7035c2d7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "41c63d173b783da585741afcc316e6689497e1b3", "commitAfterChange": "9211325c9e25bcdca490e5898b25afc780be94ca", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "signatureAfterChange": " \tpublic int boundCheck(Substitution substitution, TypeBinding argumentType)", "diff": ["-\t\t\t\t\t\tif (isArrayBound) {", "-\t\t\t\t\t\t\tif (!wildcardBound.isCompatibleWith(superclassBound))", "-\t\t\t\t\t\t\t\treturn TypeConstants.MISMATCH;", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tReferenceBinding match = ((ReferenceBinding)wildcardBound).findSuperTypeWithSameErasure(superclassBound);", "-\t\t\t\t\t\t\tif (match != null) {", "-\t\t\t\t\t\t\t\tif (!match.isIntersectingWith(superclassBound)) {", "+\t\t\t\t\t\tif (superclassBound.id != T_JavaLangObject) {", "+\t\t\t\t\t\t\tif (isArrayBound) {", "+\t\t\t\t\t\t\t\tif (!wildcardBound.isCompatibleWith(superclassBound))", "+\t\t\t\t\t\t\t\t\treturn TypeConstants.MISMATCH;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tReferenceBinding match = ((ReferenceBinding)wildcardBound).findSuperTypeWithSameErasure(superclassBound);", "+\t\t\t\t\t\t\t\tif (match != null) {", "+\t\t\t\t\t\t\t\t\tif (!match.isIntersectingWith(superclassBound)) {", "+\t\t\t\t\t\t\t\t\t\treturn TypeConstants.MISMATCH;", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\treturn TypeConstants.MISMATCH;"]}], "num": 71455}