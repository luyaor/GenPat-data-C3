{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8707b86d2ed7cb9e8b5918ccf227643", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04aa633352967d12ab3f6eea5f139b59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "0a52fc66fb4db2fd9981d577d974e91228093601", "commitAfterChange": "76d395ddd90431ef7cb4486078cb51e978a5ad63", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected boolean parseHtmlTag(int previousPosition, int endTextPosition) throws InvalidInputException", "signatureAfterChange": " protected boolean parseHtmlTag(int previousPosition, int endTextPosition) throws InvalidInputException", "diff": ["+\t\t\t\tif (htmlPtr >= 0) {", "+\t\t    \t\tint lastHtmlTagIndex = getHtmlTagIndex(this.htmlTags[htmlPtr]);", "+\t\t\t\t\tif ((lastHtmlTagIndex & JAVADOC_TAGS_ID_MASK) == JAVADOC_IMMUTABLE_TAGS_ID) {", "+\t\t\t\t\t\t// Do not accept tags inside immutable tags except the <pre> tag", "+\t\t\t\t\t\tif ((htmlIndex & JAVADOC_TAGS_ID_MASK) == JAVADOC_CODE_TAGS_ID) {", "+\t\t\t\t\t\t\tFormatJavadocBlock previousBlock = (FormatJavadocBlock) this.astStack[this.astPtr];", "+\t\t\t\t\t\t\tFormatJavadocNode parentNode = previousBlock;", "+\t\t\t\t\t\t\tFormatJavadocNode lastNode = parentNode;", "+\t\t\t\t\t\t\twhile (lastNode.getLastNode() != null) {", "+\t\t\t\t\t\t\t\tparentNode = lastNode;", "+\t\t\t\t\t\t\t\tlastNode = lastNode.getLastNode();", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (lastNode.isText()) {", "+\t\t\t\t\t\t\t\tFormatJavadocText text = (FormatJavadocText) lastNode;", "+\t\t\t\t\t\t\t\tif (text.separatorsPtr == -1) {", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t    \t\t\treturn false;", "+\t\t\t\t\t}", "+\t    \t\t}", "+", "+\t    // Push texts"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85911f788b3e0422c59ed879d5f2d18d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/FormatterCommentParser.java", "commitBeforeChange": "e94247ea6ac5ec863496bda9d3658e2dc349e6ab", "commitAfterChange": "9448736fbeb476ae8eacb15d6ea8788cf2db77a1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " protected boolean parseHtmlTag(int previousPosition, int endTextPosition) throws InvalidInputException", "signatureAfterChange": " protected boolean parseHtmlTag(int previousPosition, int endTextPosition) throws InvalidInputException", "diff": ["-\t\t\t\tif (htmlIndex == JAVADOC_TAGS_ID_MASK) return valid;", "+\t\t\t\tif (htmlIndex == JAVADOC_TAGS_ID_MASK) return false;", "-\t    \t\t\treturn valid;", "+\t    \t\t\treturn false;", "-\t\t\t\tif (htmlIndex == JAVADOC_TAGS_ID_MASK) return valid;", "+\t\t\t\tif (htmlIndex == JAVADOC_TAGS_ID_MASK) return false;", "-\t    \t\t\t\treturn valid;", "+\t    \t\t\t\treturn false;", "-    \t\t\treturn valid;", "+    \t\t\treturn false;", "-\t    \t// invalid syntax", "-\t\t\treturn valid;", "+\t    \tif ((htmlIndex & JAVADOC_SPECIAL_TAGS_ID) == JAVADOC_SPECIAL_TAGS_ID) {", "+\t    \t\t// Special tags may have attributes, so consume tokens until the greater token is encountered", "+\t    \t\twhile (token != TerminalTokens.TokenNameGREATER) {", "+\t    \t\t\ttoken = readTokenAndConsume();", "+\t    \t\t\tif (token == TerminalTokens.TokenNameEOF) {", "+\t    \t\t\t\treturn false;", "+\t    \t\t\t}", "+\t    \t\t}", "+\t    \t} else {", "+\t\t    \t// invalid syntax", "+\t\t\t\treturn false;", "+\t    \t}"]}], "num": 57575}