{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "42396bb8072dd177004bd57c81541e62", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "330ca751eb736fa3300afe3fd792a356", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "94d47e986d9039a78cf3884e937a3af1f33fdf7a", "commitAfterChange": "50ebd5fafa3697bcc83ff6864ef26a8b932adc3c", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic ArrayCreation convert(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression expression)", "signatureAfterChange": "  \tpublic ArrayCreation convert(org.eclipse.jdt.internal.compiler.ast.ArrayAllocationExpression expression)", "diff": ["-\t\t\t\tpreviousSearchStart = retrieveRightBracketPosition(previousSearchStart + 1, this.compilationUnitSource.length);", "+\t\t\t\tpreviousSearchStart = retrieveRightBracketPosition(previousSearchStart + 1, this.compilationUnitSourceLength);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ca62e7ab06ac1859d17775e28468bd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "9660c735cff4b315bd70793323783a0cac61cb62", "commitAfterChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration parse(char[] source, NodeSearcher nodeSearcher, Map settings)", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration parse(char[] source, NodeSearcher nodeSearcher, Map settings)", "diff": ["-\t\t\t\t", "+\t\t", "+\t\tint searchPosition = nodeSearcher.position;", "+\t\tif (searchPosition < 0 || searchPosition > source.length) {", "+\t\t\t// the position is out of range. There is no need to search for a node.", "+ \t\t\treturn compilationUnitDeclaration;", "+\t\t}", "+\t"]}], "num": 59365}