{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f923eaa1be780d91b3d79b88b17bd5b3", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43842fa54ce0eedd6363250f17296c00", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " public void testClasspathNoChanges() throws CoreException", "signatureAfterChange": " public void testClasspathNoChanges() throws CoreException", "diff": ["-", "-", "-//\t\ttry {", "-//\t\t\tjava.io.File file = p.getProject().getFile(JavaProject.CLASSPATH_FILENAME).getLocation().toFile();", "-//\t\t\tif (file.exists()){", "-//\t\t\t\tchar[] classpath = org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(file, \"UTF-8\");", "-//\t\t\t\tSystem.out.println(new String(classpath));", "-//\t\t\t}", "-//\t\t} catch(java.io.IOException e){", "-//\t\t}", "-", "-\t\tStringBuffer buffer = new StringBuffer(10);", "-\t\tfor (int i = 0; i < this.deltaListener.deltas.length; i++){", "-\t\t\tbuffer.append(this.deltaListener.deltas[i].toString()).append('\\n');", "-\t\t}", "-\t\tassertEquals(\"No deltas should be generated for the same classpath\", \"\", buffer.toString());", "+\t\tassertDeltas(\"Unexpected delta\", \"\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f8de047b7e287552b7e67265580694", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeEquivalentTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tvoid cleanLine(StringBuffer buffer, char[] line)", "signatureAfterChange": " \tint[] removeLastTypeArgument(char[] line)", "diff": ["-\tvoid cleanLine(StringBuffer buffer, char[] line) {", "-\t\tif (CharOperation.match(RESULT_ERASURE_MATCH, line, true))", "-\t\t\treturn;", "-\t\tif (buffer.length() > 0) buffer.append('\\n');", "-\t\tbuffer.append(line);", "+\t */", "+\tint[] removeLastTypeArgument(char[] line) {", "+\t\treturn null;"]}], "num": 14488}