{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "78a78e24d58c6561d10faf2eafd25e05", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c1cf9ccd07d4f0b0fda522a28f27b1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "8fdb14b64608b58e620c67bc0f2758fb559de717", "commitAfterChange": "447dafd45d9eea3d096b0cc1d1d11fe893f03ec0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " public static SearchPattern createPattern(IJavaElement element, int limitTo, int matchRule)", "signatureAfterChange": " public static SearchPattern createPattern(IJavaElement element, int limitTo, int matchRule)", "diff": ["-\t\t\tboolean findDeclarations = false;", "-\t\t\tboolean readAccess = false;", "-\t\t\tboolean writeAccess = false;", "-\t\t\tswitch (maskedLimitTo) {", "-\t\t\t\tcase IJavaSearchConstants.DECLARATIONS :", "-\t\t\t\t\tfindDeclarations = true;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IJavaSearchConstants.REFERENCES :", "-\t\t\t\t\treadAccess = true;", "-\t\t\t\t\twriteAccess = true;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IJavaSearchConstants.READ_ACCESSES :", "-\t\t\t\t\treadAccess = true;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IJavaSearchConstants.WRITE_ACCESSES :", "-\t\t\t\t\twriteAccess = true;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IJavaSearchConstants.ALL_OCCURRENCES :", "-\t\t\t\t\tfindDeclarations = true;", "-\t\t\t\t\treadAccess = true;", "-\t\t\t\t\twriteAccess = true;", "-\t\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\t\t\tfindDeclarations,", "-\t\t\t\t\treadAccess,", "-\t\t\t\t\twriteAccess,", "+\t\t\t\t\tlimitTo,", "-\t\t\tboolean findVarDeclarations = false;", "-\t\t\tboolean findVarReadAccess = false;", "-\t\t\tboolean findVarWriteAccess = false;", "-\t\t\tswitch (maskedLimitTo) {", "-\t\t\t\tcase IJavaSearchConstants.DECLARATIONS :", "-\t\t\t\t\tfindVarDeclarations = true;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IJavaSearchConstants.REFERENCES :", "-\t\t\t\t\tfindVarReadAccess = true;", "-\t\t\t\t\tfindVarWriteAccess = true;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IJavaSearchConstants.READ_ACCESSES :", "-\t\t\t\t\tfindVarReadAccess = true;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IJavaSearchConstants.WRITE_ACCESSES :", "-\t\t\t\t\tfindVarWriteAccess = true;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IJavaSearchConstants.ALL_OCCURRENCES :", "-\t\t\t\t\tfindVarDeclarations = true;", "-\t\t\t\t\tfindVarReadAccess = true;", "-\t\t\t\t\tfindVarWriteAccess = true;", "-\t\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\tsearchPattern = ", "-\t\t\t\tnew LocalVariablePattern(", "-\t\t\t\t\tfindVarDeclarations,", "-\t\t\t\t\tfindVarReadAccess,", "-\t\t\t\t\tfindVarWriteAccess,", "-\t\t\t\t\tlocalVar,", "-\t\t\t\t\tmatchRule);", "+\t\t\tsearchPattern = new LocalVariablePattern(localVar, limitTo, matchRule);", "-\t\t\tboolean findMethodDeclarations = true;", "-\t\t\tboolean findMethodReferences = true;", "-\t\t\tswitch (maskedLimitTo) {", "-\t\t\t\tcase IJavaSearchConstants.DECLARATIONS :", "-\t\t\t\t\tfindMethodReferences = false;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IJavaSearchConstants.REFERENCES :", "-\t\t\t\t\tfindMethodDeclarations = false;", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase IJavaSearchConstants.ALL_OCCURRENCES :", "-\t\t\t\t\tbreak;", "-\t\t\t}", "-\t\t\t\t\t\tfindMethodDeclarations,", "-\t\t\t\t\t\tfindMethodReferences,", "+\t\t\t\t\t\tlimitTo,", "-\t\t\t\t\t\tfindMethodDeclarations,", "-\t\t\t\t\t\tfindMethodReferences,", "+\t\t\t\t\t\tlimitTo,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db77cb166436312511f39040fc472234", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "ff4953718f4a4fa66bb0922d1821b22a0e2fdd84", "commitAfterChange": "b48f366c7cd622655a48ea734bdcd0016d20ec8b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo, int matchRule)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo, int matchRule)", "diff": ["+\t\t\t\tboolean findVarDeclarations = false;", "+\t\t\t\tboolean findVarReadAccess = false;", "+\t\t\t\tboolean findVarWriteAccess = false;", "-\t\t\t\t\t\tsearchPattern = ", "-\t\t\t\t\t\t\tnew LocalVariablePattern(", "-\t\t\t\t\t\t\t\ttrue, // declarations", "-\t\t\t\t\t\t\t\tfalse, // no read access", "-\t\t\t\t\t\t\t\tfalse, // no write access", "-\t\t\t\t\t\t\t\tlocalVar,", "-\t\t\t\t\t\t\t\tmatchRule);", "+\t\t\t\t\t\tfindVarDeclarations = true;", "-\t\t\t\t\t\tsearchPattern = ", "-\t\t\t\t\t\t\tnew LocalVariablePattern(", "-\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\ttrue, // read access", "-\t\t\t\t\t\t\t\ttrue, // write access", "-\t\t\t\t\t\t\t\tlocalVar,", "-\t\t\t\t\t\t\t\tmatchRule);", "+\t\t\t\t\t\tfindVarReadAccess = true;", "+\t\t\t\t\t\tfindVarWriteAccess = true;", "-\t\t\t\t\t\tsearchPattern = ", "-\t\t\t\t\t\t\tnew LocalVariablePattern(", "-\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\ttrue, // read access only", "-\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\tlocalVar,", "-\t\t\t\t\t\t\t\tmatchRule);", "+\t\t\t\t\t\tfindVarReadAccess = true;", "-\t\t\t\t\t\tsearchPattern = ", "-\t\t\t\t\t\t\tnew LocalVariablePattern(", "-\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\tfalse,", "-\t\t\t\t\t\t\t\ttrue, // write access only", "-\t\t\t\t\t\t\t\tlocalVar,", "-\t\t\t\t\t\t\t\tmatchRule);", "+\t\t\t\t\t\tfindVarWriteAccess = true;", "-\t\t\t\t\t\tsearchPattern =", "-\t\t\t\t\t\t\tnew LocalVariablePattern(", "-\t\t\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\t\t\ttrue, // read access", "-\t\t\t\t\t\t\t\ttrue, // write access", "-\t\t\t\t\t\t\t\tlocalVar,", "-\t\t\t\t\t\t\t\tmatchRule);", "+\t\t\t\t\t\tfindVarDeclarations = true;", "+\t\t\t\t\t\tfindVarReadAccess = true;", "+\t\t\t\t\t\tfindVarWriteAccess = true;", "+\t\t\t\tsearchPattern = ", "+\t\t\t\t\tnew LocalVariablePattern(", "+\t\t\t\t\t\tfindVarDeclarations,", "+\t\t\t\t\t\tfindVarReadAccess,", "+\t\t\t\t\t\tfindVarWriteAccess,", "+\t\t\t\t\t\tlocalVar,", "+\t\t\t\t\t\tmatchRule);", "+\t\t\t\tbreak;", "+\t\t\tcase IJavaElement.TYPE_PARAMETER:", "+\t\t\t\tITypeParameter typeParam = (ITypeParameter) element;", "+\t\t\t\tboolean findParamDeclarations = true;", "+\t\t\t\tboolean findParamReferences = true;", "+\t\t\t\tswitch (limitTo) {", "+\t\t\t\t\tcase IJavaSearchConstants.DECLARATIONS :", "+\t\t\t\t\t\tfindParamReferences = false;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase IJavaSearchConstants.REFERENCES :", "+\t\t\t\t\t\tfindParamDeclarations = false;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t\tsearchPattern = ", "+\t\t\t\t\tnew TypeParameterPattern(", "+\t\t\t\t\t\tfindParamDeclarations,", "+\t\t\t\t\t\tfindParamReferences,", "+\t\t\t\t\t\ttypeParam,", "+\t\t\t\t\t\tmatchRule);"]}], "num": 14010}