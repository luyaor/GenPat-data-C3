{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dcef33d6df4a12754fedf41cbab3b16e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c631cd71d6abfd4816a464ab90ce3a1e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "ac8b2356773cc6e92e0d19b5268137d464946f23", "commitAfterChange": "cb7fbd5992b1dc7d3fc64f9386005bd0e5774188", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t} else if (this.upstreamNullFlowInfo.isDefinitelyNonNull(local) && !flowInfo.isPotentiallyNull(local)) {    // https://bugs.eclipse.org/bugs/show_bug.cgi?id=291418", "+\t\t\t} else if (this.upstreamNullFlowInfo.isDefinitelyNonNull(local) && !flowInfo.isPotentiallyNull(local) && !flowInfo.isPotentiallyUnknown(local)) {    ", "+\t\t\t\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=291418"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e8fe5d31906803bb3ea0d86fdb3d07e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "86653d5c035aa51cca2173bb8c909d061953e701", "commitAfterChange": "e556f9da5ae6c442ae4aa18b3f85e0ca7f743a2a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["+\t\t\t} else if (this.upstreamNullFlowInfo.isDefinitelyNonNull(local) && !flowInfo.isPotentiallyNull(local)) {    // https://bugs.eclipse.org/bugs/show_bug.cgi?id=291418", "+\t\t\t\tflowInfo.markAsDefinitelyNonNull(local);", "+\t\t\t\trecordNullReference(local, reference, checkType);"]}], "num": 26686}