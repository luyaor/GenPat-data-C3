{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "551c646778f0cdc8e199702892f03d3f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f0b7815f714738fa56522d479bfa057", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "030294305389e5486e7f63658830617d44acd9c2", "commitAfterChange": "3f4495ecc3a42cb049fa3e01aeaf49a7722af380", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 150, "signatureBeforeChange": " \t\t \tprivate int findTagNameEnd(TagElement tagNode)", "signatureAfterChange": " \t\t \tprivate int findTagNameEnd(TagElement tagNode)", "diff": ["-\t\t    try {", "-\t\t        IDocument doc = getDocument();", "-\t\t        int len= doc.getLength();", "-\t\t        int i= tagNode.getStartPosition();", "-\t\t        while (i < len && !Indents.isIndentChar(doc.getChar(i))) {", "-\t\t            i++;", "-\t\t        }", "-\t\t        return i;", "-\t\t    } catch (BadLocationException e) {", "-\t\t        handleException(e);", "-\t\t    }", "+\t\t\tchar[] cont= getContent();", "+\t\t    int len= cont.length;", "+\t\t\tint i= tagNode.getStartPosition();", "+\t\t\twhile (i < len && !Indents.isIndentChar(cont[i])) {", "+\t\t\t    i++;", "+\t\t\t}", "+\t\t\treturn i;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55ba76f6ae30a0cb1d4bf66a2e26c60f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteAnalyzer.java", "commitBeforeChange": "e497289bc003a7408d142ab6e19e1ca9f528eed2", "commitAfterChange": "64adb94de0734c7d5adfd2cb11839ed3d3641dfc", "methodNumberBeforeChange": 149, "methodNumberAfterChange": 149, "signatureBeforeChange": " \t\t \tprivate int findTagNameStart(ASTNode tagNode)", "signatureAfterChange": " \t\t \tprivate int findTagNameEnd(TagElement tagNode)", "diff": ["-\tprivate int findTagNameStart(ASTNode tagNode) {", "-\t    try {", "-\t        IDocument doc = getDocument();", "-\t        int i= tagNode.getStartPosition();", "-\t        int end= i + tagNode.getLength();", "-\t        while (i < end && !Character.isJavaIdentifierStart(doc.getChar(i))) {", "-\t            i++;", "-\t        }", "-\t        return i;", "-\t    } catch (BadLocationException e) {", "-\t        handleException(e);", "-\t    }", "+\tprivate int findTagNameEnd(TagElement tagNode) {", "+\t\tif (tagNode.getTagName() != null) {", "+\t\t    try {", "+\t\t        IDocument doc = getDocument();", "+\t\t        int len= doc.getLength();", "+\t\t        int i= tagNode.getStartPosition();", "+\t\t        while (i < len && !Indents.isIndentChar(doc.getChar(i))) {", "+\t\t            i++;", "+\t\t        }", "+\t\t        return i;", "+\t\t    } catch (BadLocationException e) {", "+\t\t        handleException(e);", "+\t\t    }", "+\t\t}"]}], "num": 36596}