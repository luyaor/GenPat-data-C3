{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b03a9dfe5cf7ed9c05f2e05e4f591bd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55a56fbd092ba38edb163e5ff497fc08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "b03089beba6b009ef7cb1955138705446e620cd8", "commitAfterChange": "d9195349320cdcd84c669156fad022fb7f169939", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public ILocalVariable[] getParameters() throws JavaModelException", "signatureAfterChange": " public ILocalVariable[] getParameters() throws JavaModelException", "diff": ["+\tint startIndex = 0;", "+\ttry {", "+\t\tif (isConstructor()) {", "+\t\t\tIType declaringType = this.getDeclaringType();", "+\t\t\tif (declaringType.isEnum()) {", "+\t\t\t\tstartIndex = 2;", "+\t\t\t} else if (declaringType.isMember()", "+\t\t\t\t\t&& !Flags.isStatic(declaringType.getFlags())) {", "+\t\t\t\tstartIndex = 1;", "+\t\t\t}", "+\t\t}", "+\t} catch(JavaModelException e) {", "+\t\t// ignore", "+\t}", "-\t\tLocalVariable localVariable = new LocalVariable(", "-\t\t\t\tthis,", "-\t\t\t\tnew String(argumentNames[i]),", "-\t\t\t\t0,", "-\t\t\t\t-1,", "-\t\t\t\t0,", "-\t\t\t\t-1,", "-\t\t\t\tthis.parameterTypes[i],", "-\t\t\t\tnull,", "-\t\t\t\t-1,", "-\t\t\t\ttrue);", "-\t\tlocalVariables[i] = localVariable;", "-\t\tIAnnotation[] annotations = getAnnotations(localVariable, info.getParameterAnnotations(i));", "-\t\tlocalVariable.annotations = annotations;", "+\t\tif (i < startIndex) {", "+\t\t\tLocalVariable localVariable = new LocalVariable(", "+\t\t\t\t\tthis,", "+\t\t\t\t\tnew String(argumentNames[i]),", "+\t\t\t\t\t0,", "+\t\t\t\t\t-1,", "+\t\t\t\t\t0,", "+\t\t\t\t\t-1,", "+\t\t\t\t\tthis.parameterTypes[i],", "+\t\t\t\t\tnull,", "+\t\t\t\t\t-1,", "+\t\t\t\t\ttrue);", "+\t\t\tlocalVariables[i] = localVariable;", "+\t\t\tlocalVariable.annotations = Annotation.NO_ANNOTATIONS;", "+\t\t} else {", "+\t\t\tLocalVariable localVariable = new LocalVariable(", "+\t\t\t\t\tthis,", "+\t\t\t\t\tnew String(argumentNames[i]),", "+\t\t\t\t\t0,", "+\t\t\t\t\t-1,", "+\t\t\t\t\t0,", "+\t\t\t\t\t-1,", "+\t\t\t\t\tthis.parameterTypes[i],", "+\t\t\t\t\tnull,", "+\t\t\t\t\t-1,", "+\t\t\t\t\ttrue);", "+\t\t\tlocalVariables[i] = localVariable;", "+\t\t\tIAnnotation[] annotations = getAnnotations(localVariable, info.getParameterAnnotations(i - startIndex));", "+\t\t\tlocalVariable.annotations = annotations;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "648e4bde9c0f5917d179747a53f2989a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "73c0b0b740cb64c7be657afbb9bc34e48a20047c", "commitAfterChange": "779e2b28fa6a74758838c96d9e99e9834fa3cd9a", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public ILocalVariable[] getParameters() throws JavaModelException", "signatureAfterChange": " public ILocalVariable[] getParameters() throws JavaModelException", "diff": ["+\tint startIndex = 0;", "+\ttry {", "+\t\tif (isConstructor()) {", "+\t\t\tIType declaringType = this.getDeclaringType();", "+\t\t\tif (declaringType.isEnum()) {", "+\t\t\t\tstartIndex = 2;", "+\t\t\t} else if (declaringType.isMember()", "+\t\t\t\t\t&& !Flags.isStatic(declaringType.getFlags())) {", "+\t\t\t\tstartIndex = 1;", "+\t\t\t}", "+\t\t}", "+\t} catch(JavaModelException e) {", "+\t\t// ignore", "+\t}", "-\t\tLocalVariable localVariable = new LocalVariable(", "-\t\t\t\tthis,", "-\t\t\t\tnew String(argumentNames[i]),", "-\t\t\t\t0,", "-\t\t\t\t-1,", "-\t\t\t\t0,", "-\t\t\t\t-1,", "-\t\t\t\tthis.parameterTypes[i],", "-\t\t\t\tnull,", "-\t\t\t\t-1,", "-\t\t\t\ttrue);", "-\t\tlocalVariables[i] = localVariable;", "-\t\tIAnnotation[] annotations = getAnnotations(localVariable, info.getParameterAnnotations(i));", "-\t\tlocalVariable.annotations = annotations;", "+\t\tif (i < startIndex) {", "+\t\t\tLocalVariable localVariable = new LocalVariable(", "+\t\t\t\t\tthis,", "+\t\t\t\t\tnew String(argumentNames[i]),", "+\t\t\t\t\t0,", "+\t\t\t\t\t-1,", "+\t\t\t\t\t0,", "+\t\t\t\t\t-1,", "+\t\t\t\t\tthis.parameterTypes[i],", "+\t\t\t\t\tnull,", "+\t\t\t\t\t-1,", "+\t\t\t\t\ttrue);", "+\t\t\tlocalVariables[i] = localVariable;", "+\t\t\tlocalVariable.annotations = Annotation.NO_ANNOTATIONS;", "+\t\t} else {", "+\t\t\tLocalVariable localVariable = new LocalVariable(", "+\t\t\t\t\tthis,", "+\t\t\t\t\tnew String(argumentNames[i]),", "+\t\t\t\t\t0,", "+\t\t\t\t\t-1,", "+\t\t\t\t\t0,", "+\t\t\t\t\t-1,", "+\t\t\t\t\tthis.parameterTypes[i],", "+\t\t\t\t\tnull,", "+\t\t\t\t\t-1,", "+\t\t\t\t\ttrue);", "+\t\t\tlocalVariables[i] = localVariable;", "+\t\t\tIAnnotation[] annotations = getAnnotations(localVariable, info.getParameterAnnotations(i - startIndex));", "+\t\t\tlocalVariable.annotations = annotations;", "+\t\t}"]}], "num": 8435}