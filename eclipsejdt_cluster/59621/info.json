{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "315ba73a50dc3ea2441510c97e7cb699", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4ebe6bb4927b0f2ccd24b815165f81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "b25ef34887644ea18525c5ddf8306650e4ae2a92", "commitAfterChange": "49e2fd56011591a794ecb71e8ae756f20a6e2103", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void findAllTypes(char[] prefix)", "signatureAfterChange": " \tprivate void findAllTypes(char[] prefix)", "diff": ["-\t\t\tSelectionTypeNameMatchRequestorWrapper requestorWrapper = new SelectionTypeNameMatchRequestorWrapper(typeNameMatchRequestor, scope, this.unitScope.referenceContext.imports);", "+\t\t\tSelectionTypeNameMatchRequestorWrapper requestorWrapper =", "+\t\t\t\tnew SelectionTypeNameMatchRequestorWrapper(", "+\t\t\t\t\t\ttypeNameMatchRequestor, ", "+\t\t\t\t\t\tscope,", "+\t\t\t\t\t\tthis.unitScope == null ? null : this.unitScope.referenceContext.imports);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f72b443c319c9254b5c627ad4fc2a3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/TypeNameMatchRequestorWrapper.java", "commitBeforeChange": "c93b7fc02953335388042ab5bd4ec34f70464821", "commitAfterChange": "c9213ae595dd32af0d2b3bd7c31b733e8b1d0dd1", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public TypeNameMatchRequestorWrapper(TypeNameMatchRequestor requestor, IJavaSearchScope scope, ICompilationUnit[] workingCopies)", "signatureAfterChange": "  public TypeNameMatchRequestorWrapper(TypeNameMatchRequestor requestor, IJavaSearchScope scope)", "diff": ["-public TypeNameMatchRequestorWrapper(TypeNameMatchRequestor requestor, IJavaSearchScope scope, ICompilationUnit[] workingCopies) {", "+", "+public TypeNameMatchRequestorWrapper(TypeNameMatchRequestor requestor, IJavaSearchScope scope) {", "-\tthis.workingCopies = workingCopies;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ade9b5f4ebb4438b342f7aa66cd112e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "029ecda8642c825aa67d5cb4d406e2fb27fbac64", "commitAfterChange": "9fd07391f19c4a21692e666449d0c7ff9bcdd172", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal IRestrictedAccessTypeRequestor nameRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\t\t\t\t\t\t\t\t((TypeNameMatchRequestorWrapper)nameRequestor).requestor.acceptTypeNameMatch(new TypeNameMatch(type));", "+\t\t\t\t\t\t\t\t\t((TypeNameMatchRequestorWrapper)nameRequestor).requestor.acceptTypeNameMatch(new TypeNameMatch(type, type.getFlags()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b84d601e7f491a418cafe5a08b5f01b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchEngine.java", "commitBeforeChange": "c93b7fc02953335388042ab5bd4ec34f70464821", "commitAfterChange": "c9213ae595dd32af0d2b3bd7c31b733e8b1d0dd1", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal TypeNameMatchRequestor nameMatchRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "signatureAfterChange": " \tpublic void searchAllTypeNames( \t\tfinal char[] packageName,  \t\tfinal int packageMatchRule,  \t\tfinal char[] typeName, \t\tfinal int typeMatchRule,  \t\tint searchFor,  \t\tIJavaSearchScope scope,  \t\tfinal TypeNameMatchRequestor nameMatchRequestor, \t\tint waitingPolicy, \t\tIProgressMonitor progressMonitor)  throws JavaModelException", "diff": ["-\t\tTypeNameMatchRequestorWrapper requestorWrapper = new TypeNameMatchRequestorWrapper(nameMatchRequestor, scope, this.basicEngine.getWorkingCopies());", "+\t\tTypeNameMatchRequestorWrapper requestorWrapper = new TypeNameMatchRequestorWrapper(nameMatchRequestor, scope);"]}], "num": 59621}