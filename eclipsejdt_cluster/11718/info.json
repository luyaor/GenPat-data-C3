{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "65325fd9107b1bfceac64f64b31a875a", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68d2880ba671933e1d9063a9d6989c2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/StackMapFrameCodeStream.java", "commitBeforeChange": "23e8716719900ce4b242cb2e611d552c0a8892a4", "commitAfterChange": "fd7de82f6da7ed292619b2fd7babad1ecc33c07d", "methodNumberBeforeChange": 160, "methodNumberAfterChange": 160, "signatureBeforeChange": " public void invokespecial(MethodBinding methodBinding)", "signatureAfterChange": " public void invokespecial(MethodBinding methodBinding)", "diff": ["-\t\tif (methodBinding.declaringClass.isNestedType()) {", "+\t\tfinal ReferenceBinding declaringClass = methodBinding.declaringClass;", "+\t\tif (declaringClass.isNestedType()) {", "-\t\t\tTypeBinding[] syntheticArgumentTypes = methodBinding.declaringClass.syntheticEnclosingInstanceTypes();", "+\t\t\tTypeBinding[] syntheticArgumentTypes = declaringClass.syntheticEnclosingInstanceTypes();", "-\t\t\tSyntheticArgumentBinding[] syntheticArguments = methodBinding.declaringClass.syntheticOuterLocalVariables();", "+\t\t\tSyntheticArgumentBinding[] syntheticArguments = declaringClass.syntheticOuterLocalVariables();", "+\t\t} else if (declaringClass.isEnum()) {", "+\t\t\targCount += 2;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ac2772f74e743dfea55ddc0c54b8e1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "23e8716719900ce4b242cb2e611d552c0a8892a4", "commitAfterChange": "fd7de82f6da7ed292619b2fd7babad1ecc33c07d", "methodNumberBeforeChange": 205, "methodNumberAfterChange": 205, "signatureBeforeChange": " public void invokespecial(MethodBinding methodBinding)", "signatureAfterChange": " public void invokespecial(MethodBinding methodBinding)", "diff": ["-\tif (methodBinding.isConstructor() && methodBinding.declaringClass.isNestedType()) {", "-\t\t// enclosing instances", "-\t\tTypeBinding[] syntheticArgumentTypes = methodBinding.declaringClass.syntheticEnclosingInstanceTypes();", "-\t\tif (syntheticArgumentTypes != null) {", "-\t\t\tfor (int i = 0, max = syntheticArgumentTypes.length; i < max; i++) {", "-\t\t\t\tif (((id = syntheticArgumentTypes[i].id) == TypeIds.T_double) || (id == TypeIds.T_long)) {", "-\t\t\t\t\targCount += 2;", "-\t\t\t\t} else {", "-\t\t\t\t\targCount++;", "+\tif (methodBinding.isConstructor()) {", "+\t\tfinal ReferenceBinding declaringClass = methodBinding.declaringClass;", "+\t\tif (declaringClass.isNestedType()) {", "+\t\t\t// enclosing instances", "+\t\t\tTypeBinding[] syntheticArgumentTypes = declaringClass.syntheticEnclosingInstanceTypes();", "+\t\t\tif (syntheticArgumentTypes != null) {", "+\t\t\t\tfor (int i = 0, max = syntheticArgumentTypes.length; i < max; i++) {", "+\t\t\t\t\tif (((id = syntheticArgumentTypes[i].id) == TypeIds.T_double) || (id == TypeIds.T_long)) {", "+\t\t\t\t\t\targCount += 2;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\targCount++;", "+\t\t\t\t\t}", "-\t\t}", "-\t\t// outer local variables", "-\t\tSyntheticArgumentBinding[] syntheticArguments = methodBinding.declaringClass.syntheticOuterLocalVariables();", "-\t\tif (syntheticArguments != null) {", "-\t\t\tfor (int i = 0, max = syntheticArguments.length; i < max; i++) {", "-\t\t\t\tif (((id = syntheticArguments[i].type.id) == TypeIds.T_double) || (id == TypeIds.T_long)) {", "-\t\t\t\t\targCount += 2;", "-\t\t\t\t} else {", "-\t\t\t\t\targCount++;", "+\t\t\t// outer local variables", "+\t\t\tSyntheticArgumentBinding[] syntheticArguments = declaringClass.syntheticOuterLocalVariables();", "+\t\t\tif (syntheticArguments != null) {", "+\t\t\t\tfor (int i = 0, max = syntheticArguments.length; i < max; i++) {", "+\t\t\t\t\tif (((id = syntheticArguments[i].type.id) == TypeIds.T_double) || (id == TypeIds.T_long)) {", "+\t\t\t\t\t\targCount += 2;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\targCount++;", "+\t\t\t\t\t}", "+\t\t} else if (declaringClass.isEnum()) {", "+\t\t\t// adding String and int", "+\t\t\targCount += 2;"]}], "num": 11718}