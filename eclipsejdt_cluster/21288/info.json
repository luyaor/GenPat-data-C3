{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cad59f67935c1ed2bff3283fde7dfaaa", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5de8db0b49e4084e6cd76a8f1361b90b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "f18746495477338a9b83fca4f673d973bc3b28e9", "commitAfterChange": "b7c75d5af8ed9aa46f28be9d8bc08449dc25dc4e", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "     public TypeDeclaration getTypeDeclaration(String name)", "signatureAfterChange": "     public TypeDeclaration getTypeDeclaration(String name)", "diff": ["-\t\t// any AST is as good as the other.", "-\t\tITypeBinding typeBinding = _astRoot.getAST().resolveWellKnownType(name);", "+\t\t// any AST is as good as the other.\t\t", "+\t\tITypeBinding typeBinding = null;", "+\t\tif( _astRoot != null )", "+\t\t\ttypeBinding = _astRoot.getAST().resolveWellKnownType(name);", "-\t\t\tASTNode node = _astRoot.findDeclaringNode(typeKey);", "+\t\t\tASTNode node = null;", "+\t\t\tif( _astRoot != null )", "+\t\t\t\tnode = _astRoot.findDeclaringNode(typeKey);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8cf36779ec7cae4525b5310618f86a6a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "372799d5bd955eabbf1069fe0bbf8aba8ea8af85", "commitAfterChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": "     public TypeDeclaration getTypeDeclaration(String name)", "signatureAfterChange": "     public TypeDeclaration getTypeDeclaration(String name)", "diff": ["-\t\tITypeBinding typeBinding = _astCompilationUnit.getAST().resolveWellKnownType(name);", "+\t\t// any AST is as good as the other.", "+\t\tITypeBinding typeBinding = _astRoot.getAST().resolveWellKnownType(name);", "-\t\t\t// then look into the current compilation unit\t\t\t", "-\t\t\tfinal ASTNode node = _astCompilationUnit.findDeclaringNode(typeKey);\t\t\t", "+\t\t\t// then look into the current compilation units\t\t\t", "+\t\t\tASTNode node = _astRoot.findDeclaringNode(typeKey);", "+\t\t\t\t\t\t"]}], "num": 21288}