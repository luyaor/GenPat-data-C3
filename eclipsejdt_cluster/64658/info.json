{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54f9c2f292c83bd4b36ef59bc0d33a07", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d799ac21f393b67a075be97d5186e11b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "f9b051d5e41bd27efd803711c20da8dcd750758f", "commitAfterChange": "30e745fbf3ea6ef7e0fc020627656bfc553d5256", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic boolean visit(ForStatement forStatement, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(ForStatement forStatement, BlockScope scope)", "diff": ["-\t\t\t\tinitializations[i].traverse(this, scope);", "-\t\t\t\tif (i >= 0 && (i < length - 1) && !(initializations[i] instanceof LocalDeclaration)) {", "-\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_for_inits);", "-\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_for_inits) {", "-\t\t\t\t\t\tthis.scribe.space();", "-\t\t\t\t\t}", "-\t\t\t\t}\t\t\t\t", "+\t\t\t\tif (initializations[i] instanceof LocalDeclaration) {", "+\t\t\t\t\tformatLocalDeclaration((LocalDeclaration) initializations[i], scope, this.preferences.insert_space_before_comma_in_for_inits, this.preferences.insert_space_after_comma_in_for_inits);", "+\t\t\t\t} else {", "+\t\t\t\t\tinitializations[i].traverse(this, scope);", "+\t\t\t\t\tif (i >= 0 && (i < length - 1)) {", "+\t\t\t\t\t\tthis.scribe.printNextToken(TerminalTokens.TokenNameCOMMA, this.preferences.insert_space_before_comma_in_for_inits);", "+\t\t\t\t\t\tif (this.preferences.insert_space_after_comma_in_for_inits) {", "+\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}\t\t\t\t", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd84c68d3a05d14b4191073a247ee678", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c62ecfd031507c11ea236866605fedd6f3a952c5", "commitAfterChange": "ded73445e8c5cf2db0a4abcc53e1680f02ae6cf7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprivate boolean dumpEqualityExpression( \t\tBinaryExpression binaryExpression, \t\tint operator, \t\tBlockScope scope)", "signatureAfterChange": "  \tprivate boolean dumpEqualityExpression( \t\tBinaryExpression binaryExpression, \t\tint operator, \t\tBlockScope scope)", "diff": ["-\t\tbinaryExpression.left.traverse(this, scope);", "-\t\tthis.scribe.printNextToken(operator, this.preferences.insert_space_before_binary_operator);", "-\t\tif (this.preferences.insert_space_after_binary_operator) {", "-\t\t\tthis.scribe.space();", "+\t\tif (this.expressionsDepth < 0) {", "+\t\t\tthis.expressionsDepth = 0;", "+\t\t} else {", "+\t\t\tthis.expressionsDepth++;", "+\t\t\tthis.expressionsPos <<= 2;", "-\t\tbinaryExpression.right.traverse(this, scope);", "-", "+\t\ttry {", "+\t\t\tthis.expressionsPos |= EXPRESSIONS_POS_ENTER_EQUALITY;", "+\t\t\tbinaryExpression.left.traverse(this, scope);", "+\t\t\tthis.scribe.printNextToken(operator, this.preferences.insert_space_before_binary_operator, Scribe.PRESERVE_EMPTY_LINES_IN_EQUALITY_EXPRESSION);", "+\t\t\tif (this.preferences.insert_space_after_binary_operator) {", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}", "+\t\t\tbinaryExpression.right.traverse(this, scope);", "+\t\t}", "+\t\tfinally {", "+\t\t\tthis.expressionsDepth--;", "+\t\t\tthis.expressionsPos >>= 2;", "+\t\t}"]}], "num": 64658}