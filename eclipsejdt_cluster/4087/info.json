{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "359d72416f2e3a88052101314a4de7d7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "079f597c0793c7a5e9a39a57383de996", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "1784048e951cac8e5c6590cc5827817757e6384e", "commitAfterChange": "4a48abb3b4027036bdeac61104059b6c83710144", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate int readToken() throws InvalidInputException", "signatureAfterChange": " \tprivate int readToken() throws InvalidInputException", "diff": ["+\t\t\tif (this.scanner.currentPosition > (this.lineEnd+1) && this.currentTokenType == TerminalTokens.TokenNameMULTIPLY) {", "+\t\t\t\twhile (this.currentTokenType == TerminalTokens.TokenNameMULTIPLY) {", "+\t\t\t\t\tthis.currentTokenType = this.scanner.getNextToken();", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9216be38ce3ed15323f92c349f81364", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "da3abb814c31b6e1c2d43312de494af316e19273", "commitAfterChange": "8af0e3d96f10bb27360a77bbd330487cf3fdc8dd", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "signatureAfterChange": " \tprotected Object createMethodReference(Object receiver, List arguments) throws InvalidInputException", "diff": ["-\t\t\t\t\tJavadocAllocationExpression expr = new JavadocAllocationExpression(this.identifierPositionStack[0]);", "-\t\t\t\t\texpr.type = typeRef;", "-\t\t\t\t\treturn expr;", "+\t\t\t\t\tJavadocAllocationExpression alloc = new JavadocAllocationExpression(this.identifierPositionStack[0]);", "+\t\t\t\t\talloc.type = typeRef;", "+\t\t\t\t\talloc.tagValue = this.tagValue;", "+\t\t\t\t\treturn alloc;", "+\t\t\t\t\tmsg.tagValue = this.tagValue;", "+\t\t\t\t\talloc.tagValue = this.tagValue;", "+\t\t\t\t\tmsg.tagValue = this.tagValue;"]}], "num": 4087}