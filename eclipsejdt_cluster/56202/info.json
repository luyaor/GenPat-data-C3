{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2df3700e3a6954db2090a9bf988a645c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7afa8283d3446635c869ca4bd4a00e12", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "3c339caa1e7b5ca6c56cf03ac002e58b4380b89e", "commitAfterChange": "51917a0c83743a82a23c6f16badda9326a65b40d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 22, "signatureBeforeChange": " \t \tprivate void initializeRoots(IJavaModel model)", "signatureAfterChange": " \t \tprivate void initializeRoots(IJavaModel model)", "diff": ["-\t\tthis.exclusionPatterns = new HashMap();", "-\t\t\t\t\tthis.roots.put(path, project);", "-\t\t\t\t\tthis.exclusionPatterns.put(path, ((ClasspathEntry)entry).fullExclusionPatternChars());", "+\t\t\t\t\tthis.roots.put(path, new RootInfo(project, ((ClasspathEntry)entry).fullExclusionPatternChars()));", "-\t\t\t\t\tHashSet set = (HashSet)this.otherRoots.get(path);", "-\t\t\t\t\tif (set == null) {", "-\t\t\t\t\t\tset = new HashSet();", "-\t\t\t\t\t\tthis.otherRoots.put(path, set);", "+\t\t\t\t\tArrayList rootList = (ArrayList)this.otherRoots.get(path);", "+\t\t\t\t\tif (rootList == null) {", "+\t\t\t\t\t\trootList = new ArrayList();", "+\t\t\t\t\t\tthis.otherRoots.put(path, rootList);", "-\t\t\t\t\tset.add(project);", "+\t\t\t\t\trootList.add(new RootInfo(project, ((ClasspathEntry)entry).fullExclusionPatternChars()));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc1292f22c034ea3de9a210436ab2a6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "9bfee1a7f82eaf250c7d0204f3b27ddeef1a9ccd", "commitAfterChange": "6dcea7f92f6d51021ec146f3cbf4e000acdf0623", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void initializeRoots()", "signatureAfterChange": "  \tpublic void initializeRoots()", "diff": ["-\t\t\tthis.oldRoots = this.roots == null ? new Hashtable() : this.roots;", "-\t\t\tthis.oldOtherRoots = this.otherRoots == null ? new Hashtable() : this.otherRoots;\t\t\t", "-\t\t\tif (newRoots != null) {", "-\t\t\t\tthis.roots = newRoots;", "-\t\t\t\tthis.otherRoots = newOtherRoots;", "-\t\t\t\tthis.sourceAttachments = newSourceAttachments;", "-\t\t\t\tthis.rootsAreStale = false;", "+\t\t\tif (this.rootsAreStale) { // double check again", "+\t\t\t\tthis.oldRoots = this.roots == null ? new Hashtable() : this.roots;", "+\t\t\t\tthis.oldOtherRoots = this.otherRoots == null ? new Hashtable() : this.otherRoots;\t\t\t", "+\t\t\t\tif (newRoots != null) {", "+\t\t\t\t\tthis.roots = newRoots;", "+\t\t\t\t\tthis.otherRoots = newOtherRoots;", "+\t\t\t\t\tthis.sourceAttachments = newSourceAttachments;", "+\t\t\t\t\tthis.rootsAreStale = false;", "+\t\t\t\t}"]}], "num": 56202}