{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4fd86e032d295420deee6d3ecdf34af1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15505e6e18cc49d3474afca45d802ec6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StaticImportTest.java", "commitBeforeChange": "2fdd800912ee4f65c51a2ec384533d1146c71af7", "commitAfterChange": "844f82aaef831e55c4827a65ccd98caed0cd08f3", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void test005()", "signatureAfterChange": "  \tpublic void test005()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in p\\\\X.java (at line 3)\\n\" + ", "-\t\t\t\"\timport static p2.Z.Zint;\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^\\n\" + ", "-\t\t\t\"The import p2.Z.Zint cannot be resolved\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in p\\\\X.java (at line 4)\\n\" + ", "-\t\t\t\"\timport static p2.Z.ZMember;\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The type p2.Z.ZMember is not visible\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in p\\\\X.java (at line 6)\\n\" + ", "-\t\t\t\"\tint x = y(1);\\n\" + ", "-\t\t\t\"\t        ^\\n\" + ", "-\t\t\t\"The method y(int) from the type Y is not visible\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in p\\\\X.java (at line 7)\\n\" + ", "-\t\t\t\"\tint y = Yint;\\n\" + ", "-\t\t\t\"\t        ^^^^\\n\" + ", "-\t\t\t\"The field Yint is not visible\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in p\\\\X.java (at line 8)\\n\" + ", "-\t\t\t\"\tint z = Zint;\\n\" + ", "-\t\t\t\"\t        ^^^^\\n\" + ", "-\t\t\t\"Zint cannot be resolved\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. ERROR in p\\\\X.java (at line 9)\\n\" + ", "-\t\t\t\"\tvoid m1(YMember m) {}\\n\" + ", "-\t\t\t\"\t        ^^^^^^^\\n\" + ", "-\t\t\t\"The type YMember is not visible\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"7. ERROR in p\\\\X.java (at line 10)\\n\" + ", "-\t\t\t\"\tvoid m2(ZMember m) {}\\n\" + ", "-\t\t\t\"\t        ^^^^^^^\\n\" + ", "-\t\t\t\"ZMember cannot be resolved to a type\\n\" + ", "-\t\t\t\"----------\\n\");", "+\t\t\"----------\\n\" + ", "+\t\t\"1. ERROR in p\\\\X.java (at line 3)\\n\" + ", "+\t\t\"\timport static p2.Z.Zint;\\n\" + ", "+\t\t\"\t              ^^^^^^^^^\\n\" + ", "+\t\t\"The import p2.Z.Zint cannot be resolved\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. ERROR in p\\\\X.java (at line 4)\\n\" + ", "+\t\t\"\timport static p2.Z.ZMember;\\n\" + ", "+\t\t\"\t              ^^^^^^^^^^^^\\n\" + ", "+\t\t\"The type p2.Z.ZMember is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. ERROR in p\\\\X.java (at line 6)\\n\" + ", "+\t\t\"\tint x = y(1);\\n\" + ", "+\t\t\"\t        ^\\n\" + ", "+\t\t\"The method y(int) from the type Y is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"4. ERROR in p\\\\X.java (at line 7)\\n\" + ", "+\t\t\"\tint y = Yint;\\n\" + ", "+\t\t\"\t        ^^^^\\n\" + ", "+\t\t\"The field Y.Yint is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"5. ERROR in p\\\\X.java (at line 8)\\n\" + ", "+\t\t\"\tint z = Zint;\\n\" + ", "+\t\t\"\t        ^^^^\\n\" + ", "+\t\t\"Zint cannot be resolved\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"6. ERROR in p\\\\X.java (at line 9)\\n\" + ", "+\t\t\"\tvoid m1(YMember m) {}\\n\" + ", "+\t\t\"\t        ^^^^^^^\\n\" + ", "+\t\t\"The type YMember is not visible\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"7. ERROR in p\\\\X.java (at line 10)\\n\" + ", "+\t\t\"\tvoid m2(ZMember m) {}\\n\" + ", "+\t\t\"\t        ^^^^^^^\\n\" + ", "+\t\t\"ZMember cannot be resolved to a type\\n\" + ", "+\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "297a0ebf24b674b90a45b7d06a42412e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/EnumTest.java", "commitBeforeChange": "c218bc0b3cb8966af8e948021d2d770d85b0b8fd", "commitAfterChange": "0a2ac075c4c856fa99a690dbbe5d8bb93c4e0de4", "methodNumberBeforeChange": 172, "methodNumberAfterChange": 172, "signatureBeforeChange": " public void test167() throws Exception", "signatureAfterChange": " public void test167() throws Exception", "diff": ["-\t\t\t\t\"X.java\", // =================", "-\t\t\t\t\"public enum X {\\n\" + ", "-\t\t\t\t\"    ;\\n\" + ", "-\t\t\t\t\"    static int valueOf(String arg0) { return 0; }//9\\n\" + ", "-\t\t\t\t\"    void foo() {\\n\" + ", "-\t\t\t\t\"    \tint i = X.valueOf(\\\"\\\");\\n\" +", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"}\\n\",", "-\t\t\t\t\"Other.java\",// =================", "-\t\t\t\t\"public class Other {\\n\" + ", "-\t\t\t\t\"    void foo() {\\n\" + ", "-\t\t\t\t\"    \tint i = X.valueOf(\\\"\\\");\\n\" + ", "-\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\"}\\n\", // =================", "+\t\t\t\"X.java\", // =================", "+\t\t\t\"public enum X {\\n\" + ", "+\t\t\t\"    ;\\n\" + ", "+\t\t\t\"    static int valueOf(String arg0) { return 0; }//9\\n\" + ", "+\t\t\t\"    void foo() {\\n\" + ", "+\t\t\t\"    \tint i = X.valueOf(\\\"\\\");\\n\" +", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"}\\n\",", "+\t\t\t\"Other.java\",// =================", "+\t\t\t\"public class Other {\\n\" + ", "+\t\t\t\"    void foo() {\\n\" + ", "+\t\t\t\"    \tint i = X.valueOf(\\\"\\\");\\n\" + ", "+\t\t\t\"    }\\n\" + ", "+\t\t\t\"}\\n\", // =================", "-\t\t\"1. ERROR in X.java (at line 3)\\n\" + ", "-\t\t\"\tstatic int valueOf(String arg0) { return 0; }//9\\n\" + ", "-\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"The enum X already defines the method valueOf(String) implicitly\\n\" + ", "+\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "+\t\t\"\tstatic int valueOf(String arg0) { return 0; }//9\\n\" +", "+\t\t\"\t           ^^^^^^^^^^^^^^^^^^^^\\n\" +", "+\t\t\"The enum X already defines the method valueOf(String) implicitly\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"2. ERROR in X.java (at line 5)\\n\" +", "+\t\t\"\tint i = X.valueOf(\\\"\\\");\\n\" +", "+\t\t\"\t        ^^^^^^^^^^^^^\\n\" +", "+\t\t\"Type mismatch: cannot convert from X to int\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"----------\\n\" +", "+\t\t\"1. ERROR in Other.java (at line 3)\\n\" +", "+\t\t\"\tint i = X.valueOf(\\\"\\\");\\n\" +", "+\t\t\"\t        ^^^^^^^^^^^^^\\n\" +", "+\t\t\"Type mismatch: cannot convert from X to int\\n\" +", "-\t\t\tnew String[] {", "-\t\t\t\t\t\"Other.java\",// =================", "-\t\t\t\t\t\"public class Other {\\n\" + ", "-\t\t\t\t\t\"    void foo() {\\n\" + ", "-\t\t\t\t\t\"    \tint i = X.valueOf(\\\"\\\");\\n\" + ", "-\t\t\t\t\t\"    }\\n\" + ", "-\t\t\t\t\t\"}\\n\", // =================", "-\t\t\t},", "-\t\t\t\"\",", "-\t\t\tnull,", "-\t\t\tfalse, // flush output", "-\t\t\tnull,", "-\t\t\ttrue, // generate output", "-\t\t\tfalse,", "-\t\t\tfalse);}", "+\t\tnew String[] {", "+\t\t\t\t\"Other.java\",// =================", "+\t\t\t\t\"public class Other {\\n\" + ", "+\t\t\t\t\"    void foo() {\\n\" + ", "+\t\t\t\t\"    \tint i = X.valueOf(\\\"\\\");\\n\" + ", "+\t\t\t\t\"    }\\n\" + ", "+\t\t\t\t\"}\\n\", // =================", "+\t\t},", "+\t\t\"----------\\n\" +", "+\t\t\"1. ERROR in Other.java (at line 3)\\n\" +", "+\t\t\"\tint i = X.valueOf(\\\"\\\");\\n\" +", "+\t\t\"\t          ^^^^^^^\\n\" +", "+\t\t\"The method valueOf(Class<T>, String) in the type Enum<X> is not applicable for the arguments (String)\\n\" +", "+\t\t\"----------\\n\",", "+\t\tnull,", "+\t\tfalse, // flush output", "+\t\tnull,", "+\t\ttrue, // generate output", "+\t\tfalse,", "+\t\tfalse);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "473dd8c01f36aa56aaa867e3e4796d7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "3bee3efb3c3139a52dff7aa299065deb5290ece4", "commitAfterChange": "645825dd1e7c490f7b149a754d38a08b99765996", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " \tpublic void testBug76324string()", "signatureAfterChange": " \tpublic void testBug76324string()", "diff": ["-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public class X {\\n\" +", "-\t\t\t\t\t\"\t/**\\n\" + ", "-\t\t\t\t\t\"\t * Inline string references \\n\" + ", "-\t\t\t\t\t\"\t *\\n\" + ", "-\t\t\t\t\t\"\t * {@link \\\"}\\n\" + ", "-\t\t\t\t\t\"\t * {@link \\\"unterminated string}\\n\" + ", "-\t\t\t\t\t\"\t * {@link \\\"invalid string\\\"\\\"}\\n\" + ", "-\t\t\t\t\t\"\t * {@link \\\"valid string\\\"}\\n\" + ", "-\t\t\t\t\t\"\t * {@link \\\"invalid\\\" no text allowed after the string}\\n\" + ", "-\t\t\t\t\t\"\t */\\n\" + ", "-\t\t\t\t\t\"\tpublic void s_foo() {\\n\" + ", "-\t\t\t\t\t\"\t}\\n\" + ", "-\t\t\t\t\t\"}\\n\" },", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "-\t\t\t\t\t\"\t* {@link \\\"}\\n\" + ", "-\t\t\t\t\t\"\t        ^^^\\n\" + ", "-\t\t\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "-\t\t\t\t\t\"\t* {@link \\\"unterminated string}\\n\" + ", "-\t\t\t\t\t\"\t        ^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\t\"Javadoc: Invalid reference\\n\" + ", "-\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "-\t\t\t\t\t\"\t* {@link \\\"invalid string\\\"\\\"}\\n\" + ", "-\t\t\t\t\t\"\t                         ^^\\n\" + ", "-\t\t\t\t\t\"Javadoc: Unexpected text\\n\" + ", "-\t\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\t\t\t\"\t* {@link \\\"invalid\\\" no text allowed after the string}\\n\" + ", "-\t\t\t\t\t\"\t                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\t\"Javadoc: Unexpected text\\n\" + ", "-\t\t\t\t\t\"----------\\n\"", "+\t\t\t\"X.java\",", "+\t\t\t\"public class X {\\n\" +", "+\t\t\t\"\t/**\\n\" + ", "+\t\t\t\"\t * Inline string references \\n\" + ", "+\t\t\t\"\t *\\n\" + ", "+\t\t\t\"\t * {@link \\\"}\\n\" + ", "+\t\t\t\"\t * {@link \\\"unterminated string}\\n\" + ", "+\t\t\t\"\t * {@link \\\"invalid string\\\"\\\"}\\n\" + ", "+\t\t\t\"\t * {@link \\\"valid string\\\"}\\n\" + ", "+\t\t\t\"\t * {@link \\\"invalid\\\" no text allowed after the string}\\n\" + ", "+\t\t\t\"\t */\\n\" + ", "+\t\t\t\"\tpublic void s_foo() {\\n\" + ", "+\t\t\t\"\t}\\n\" + ", "+\t\t\t\"}\\n\" },", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"\t* {@link \\\"}\\n\" + ", "+\t\t\t\"\t         ^^\\n\" + ", "+\t\t\t\"Javadoc: Invalid reference\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 6)\\n\" + ", "+\t\t\t\"\t* {@link \\\"unterminated string}\\n\" + ", "+\t\t\t\"\t         ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Invalid reference\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 7)\\n\" + ", "+\t\t\t\"\t* {@link \\\"invalid string\\\"\\\"}\\n\" + ", "+\t\t\t\"\t                         ^^\\n\" + ", "+\t\t\t\"Javadoc: Unexpected text\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\t* {@link \\\"invalid\\\" no text allowed after the string}\\n\" + ", "+\t\t\t\"\t                  ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Javadoc: Unexpected text\\n\" + ", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3edb4ab02c22b5450f31474a62ea3be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "08c5b9004bde27fb4063ce300ce881966676fe74", "commitAfterChange": "28d58bf6eb942015446b8ffce8f446f86e9686d9", "methodNumberBeforeChange": 164, "methodNumberAfterChange": 164, "signatureBeforeChange": " public void test401789_401790a()", "signatureAfterChange": " public void test401789_401790a()", "diff": ["-\t\t\t\t\"\t^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X.Y(X::goo) is undefined\\n\" + ", "+\t\t\t\t\"\t     ^^^^^^\\n\" + ", "+\t\t\t\t\"The type of goo() from the type X is int, this is incompatible with the descriptor\\'s return type: String\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  return 10;\\n\" + ", "-\t\t\t\t\"}) is undefined\\n\" + ", "+\t\t\t\t\"\t                     ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from int to String\\n\" + ", "-\t\t\t\t\"\t^^^\\n\" + ", "-\t\t\t\t\"The method foo(I) in the type X is not applicable for the arguments (X::goo)\\n\" + ", "+\t\t\t\t\"\t    ^^^^^^\\n\" + ", "+\t\t\t\t\"The type of goo() from the type X is int, this is incompatible with the descriptor\\'s return type: String\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  return 10;\\n\" + ", "-\t\t\t\t\"}) is undefined\\n\" + ", "+\t\t\t\t\"\t                    ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from int to String\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  return 10;\\n\" + ", "-\t\t\t\t\"}) is undefined\\n\" + ", "+\t\t\t\t\"\t                    ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from int to String\\n\" + ", "-\t\t\t\t\"6. ERROR in X.java (at line 20)\\n\" + ", "-\t\t\t\t\"\tnew X((x)->{ return 10;}).new Y((x) -> { return 0;});\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X.Y((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  return 0;\\n\" + ", "-\t\t\t\t\"}) is undefined\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"7. ERROR in X.java (at line 21)\\n\" + ", "+\t\t\t\t\"6. ERROR in X.java (at line 21)\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X((<no type> x) -> {\\n\" + ", "-\t\t\t\t\"  return 10;\\n\" + ", "-\t\t\t\t\"}) is undefined\\n\" + ", "+\t\t\t\t\"\t                    ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from int to String\\n\" + ", "-\t\t\t\t\"8. ERROR in X.java (at line 26)\\n\" + ", "+\t\t\t\t\"7. ERROR in X.java (at line 26)\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X(X::goo) is undefined\\n\" + ", "+\t\t\t\t\"\t      ^^^^^^\\n\" + ", "+\t\t\t\t\"The type of goo() from the type X is int, this is incompatible with the descriptor\\'s return type: String\\n\" + ", "-\t\t\t\t\"9. ERROR in X.java (at line 29)\\n\" + ", "+\t\t\t\t\"8. ERROR in X.java (at line 29)\\n\" + ", "-\t\t\t\t\"\t^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\t\"The constructor X((<no type> x) -> 10) is undefined\\n\" + ", "+\t\t\t\t\"\t            ^^\\n\" + ", "+\t\t\t\t\"Type mismatch: cannot convert from int to String\\n\" + ", "-\t\t\t\t\"10. ERROR in X.java (at line 31)\\n\" + ", "+\t\t\t\t\"9. ERROR in X.java (at line 31)\\n\" + "]}], "num": 38193}