{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e6a39caf800004a8996c14fd51997773", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e8bc29feafce94e0d13d83499803b74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 28, "signatureBeforeChange": " \t \tprivate FactoryContainer[] openVariableSelectionDialog(FactoryContainer original)", "signatureAfterChange": " \tprivate FactoryPathEntry[] openVariableSelectionDialog(FactoryPathEntry original)", "diff": ["-\tprivate FactoryContainer[] openVariableSelectionDialog(FactoryContainer original) {", "-\t\tIPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.VARJAR, original);", "+\t */", "+\tprivate FactoryPathEntry[] openVariableSelectionDialog(FactoryPathEntry original) {", "+\t\tIPath[] existingPaths = getExistingPaths(FactoryContainer.FactoryType.VARJAR, original._fc);", "-\t\t\tArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();", "+\t\t\tArrayList<FactoryPathEntry> res= new ArrayList<FactoryPathEntry>();", "-\t\t\t\tres.add(FactoryPath.newVarJarFactoryContainer(selected[i]));", "+\t\t\t\tFactoryContainer fc= FactoryPathUtil.newVarJarFactoryContainer(selected[i]);", "+\t\t\t\t// assume defaults of enabled=true, runInAptMode=false", "+\t\t\t\tFactoryPath.Attributes attr = new FactoryPath.Attributes(true, false);", "+\t\t\t\tFactoryPathEntry fpe = new FactoryPathEntry(fc, attr);", "+\t\t\t\tres.add(fpe);", "-\t\t\treturn res.toArray(new FactoryContainer[res.size()]);", "+\t\t\treturn res.toArray(new FactoryPathEntry[res.size()]);", "-\t\t\tIPath result= BuildPathDialogAccess.configureVariableEntry(getShell(), new Path(original.getId()), existingPaths);", "+\t\t\tIPath result= BuildPathDialogAccess.configureVariableEntry(getShell(), new Path(original._fc.getId()), existingPaths);", "-\t\t\tFactoryContainer[] edited= new FactoryContainer[1];", "-\t\t\tedited[0]= FactoryPath.newVarJarFactoryContainer(result);", "+\t\t\tFactoryPathEntry[] edited= new FactoryPathEntry[1];", "+\t\t\tFactoryContainer fc= FactoryPathUtil.newVarJarFactoryContainer(result);", "+\t\t\t// Use prior value for isEnabled.  Assume default of runInAptMode=false", "+\t\t\tFactoryPath.Attributes attr = new FactoryPath.Attributes(original._attr.isEnabled(), false);", "+\t\t\tedited[0]= new FactoryPathEntry(fc, attr);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c0d46737706d442ab9283b495fc6a5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.ui/src/org/eclipse/jdt/apt/ui/internal/preferences/FactoryPathConfigurationBlock.java", "commitBeforeChange": "6a39aeee024a65d73e9084e99bead655e3ded072", "commitAfterChange": "30a0d8b166ac2fa2854a231544dfecb8e382982a", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tprivate FactoryContainer[] openExtJarFileDialog(FactoryContainer existing)", "signatureAfterChange": " \tprivate FactoryPathEntry[] openExtJarFileDialog(FactoryPathEntry original)", "diff": ["-\tprivate FactoryContainer[] openExtJarFileDialog(FactoryContainer existing) {", "-\t\tif (existing == null) {", "+\t */", "+\tprivate FactoryPathEntry[] openExtJarFileDialog(FactoryPathEntry original) {", "+\t\tif (original == null) {", "-\t\t\tArrayList<FactoryContainer> res= new ArrayList<FactoryContainer>();", "+\t\t\tArrayList<FactoryPathEntry> res= new ArrayList<FactoryPathEntry>();", "-\t\t\t\tres.add(FactoryPath.newExtJarFactoryContainer(selected[i].toFile()));", "+\t\t\t\tFactoryContainer fc = FactoryPathUtil.newExtJarFactoryContainer(selected[i].toFile());", "+\t\t\t\t// assume defaults of enabled=true, runInAptMode=false", "+\t\t\t\tFactoryPath.Attributes attr = new FactoryPath.Attributes(true, false);", "+\t\t\t\tFactoryPathEntry fpe = new FactoryPathEntry(fc, attr);", "+\t\t\t\tres.add(fpe);", "-\t\t\treturn res.toArray(new FactoryContainer[res.size()]);", "+\t\t\treturn res.toArray(new FactoryPathEntry[res.size()]);", "-\t\t\tIPath result= BuildPathDialogAccess.configureExternalJAREntry(getShell(), new Path(existing.getId()));", "+\t\t\tIPath result= BuildPathDialogAccess.configureExternalJAREntry(getShell(), new Path(original._fc.getId()));", "-\t\t\tFactoryContainer[] edited= new FactoryContainer[1];", "-\t\t\tedited[0]= FactoryPath.newExtJarFactoryContainer(result.toFile());", "+\t\t\tFactoryPathEntry[] edited= new FactoryPathEntry[1];", "+\t\t\tFactoryContainer fc= FactoryPathUtil.newExtJarFactoryContainer(result.toFile());", "+\t\t\t// Use prior value for isEnabled.  Assume default of runInAptMode=false", "+\t\t\tFactoryPath.Attributes attr = new FactoryPath.Attributes(original._attr.isEnabled(), false);", "+\t\t\tedited[0]= new FactoryPathEntry(fc, attr);"]}], "num": 30029}