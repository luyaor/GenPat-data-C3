{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0b5804cb1213a160b9430e731bfbb66d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e0c586faad31d41e2384ef98a8e423", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "a8a55ef8028ddd96daf4473daaec157ec40ab668", "commitAfterChange": "2c2d8aa7ba193d80394867d2f6025d47f27b1f9e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tsynchronized ITypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding referenceBinding)", "signatureAfterChange": " \tsynchronized ITypeBinding getTypeBinding(org.eclipse.jdt.internal.compiler.lookup.TypeBinding referenceBinding)", "diff": ["+\t\t\t\t\tif (!this.isRecoveringBindings) {", "+\t\t\t\t\t\treturn null;", "+\t\t\t\t\t}", "-\t\t\t\t\t} else if (this.isRecoveringBindings) {", "+\t\t\t\t\t} else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cb592926c66222eab027d7de7737504f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "a462f60bcd5621db94a0ab92a7b3533ebbfd0b51", "commitAfterChange": "08a2bb4b18c0c69c0ed4f816cadfd40ebe8abddb", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r void recordTypeReference(TypeBinding type)", "signatureAfterChange": "\r void recordTypeReference(TypeBinding type)", "diff": ["-\t\tif (actualType.isLocalType()) return; // no need to add references to a local type\r", "-\t\trecordReference(actualType.isMemberType()\r", "-\t\t\t? CharOperation.splitOn('.', actualType.readableName())\r", "-\t\t\t: actualType.compoundName);\r", "-\t\tif (actualType.enclosingType() != null)\r", "-\t\t\trecordTypeReference(actualType.enclosingType());\r", "+\t\tif (!actualType.isLocalType()) {\r", "+\t\t\trecordReference(actualType.isMemberType()\r", "+\t\t\t\t? CharOperation.splitOn('.', actualType.readableName())\r", "+\t\t\t\t: actualType.compoundName);\r", "+\t\t\tif (actualType.enclosingType() != null)\r", "+\t\t\t\trecordTypeReference(actualType.enclosingType());\r", "+\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9104ffc3c6cf5bec124bff10f206ca1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "be3b8398abdd134469cb25f74becb573498bac14", "commitAfterChange": "5c654dd7dd9bc98526f6c419699195d84517b84b", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "signatureAfterChange": "  \tboolean match(char patternTypeSuffix, char[] patternPkg, char[] patternTypeName, int matchRule, int typeKind, char[] pkg, char[] typeName)", "diff": ["-\t\t\t\t\tif (isCamelCase) return false;", "-\t\t\t\t\treturn matchFirstChar && CharOperation.equals(patternTypeName, typeName, isCaseSensitive);", "+\t\t\t\t\tif (!isCamelCase) {", "+\t\t\t\t\t\treturn matchFirstChar && CharOperation.equals(patternTypeName, typeName, isCaseSensitive);", "+\t\t\t\t\t}", "+\t\t\t\t\t// fall through next case to match as prefix if camel case failed"]}], "num": 5049}