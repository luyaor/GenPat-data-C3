{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "738f63de158331077c29ea7dd3aaf06e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01a61e4b02e74ff8b74df3dbb6270bcc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "0c0f02419934ad3b7d3b29ce6843cc90f00cf260", "commitAfterChange": "ce9d82264275b3c4ad926312ca4ca735e225fab4", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "signatureAfterChange": "\r \tpublic boolean visit(\r \t\t\tMemberTypeDeclaration memberTypeDeclaration,\r \t\t\tClassScope scope)", "diff": ["+\tpublic boolean visit(\r", "+\t\t\tMemberTypeDeclaration memberTypeDeclaration,\r", "+\t\t\tClassScope scope) {\r", "+\t\tif ((matchSet.matchContainer & SearchPattern.CLASS) != 0) {\r", "+\t\t\tmatchSet.checkMatching(memberTypeDeclaration);\r", "+\t\t}\r", "+\t\treturn true;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "116b83cecfa1fc6b39121abee6015cf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "0271031e5844c32df2646c3a81a2c00b29e7d251", "commitAfterChange": "14c82497ad7236bee9eedf2d9ff4867e4a47ff21", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic boolean visit(Initializer initializer, MethodScope scope)", "signatureAfterChange": " \tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope)", "diff": ["-\t\tif ((matchSet.matchContainer & SearchPattern.CLASS) != 0) {", "-\t\t\tmatchSet.checkMatching(initializer);", "-\t\t}", "+\tpublic boolean visit(MethodDeclaration methodDeclaration, ClassScope scope) {", "+\t\treturn (methodDeclaration.bits & AstNode.HasLocalTypeMASK) != 0; // continue only if it has local type", "+\t}\t"]}], "num": 56615}