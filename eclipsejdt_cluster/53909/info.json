{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "56719d8d1ebee0aaa49fb45ab6215a45", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06bc72929067509e920f18454d5b42bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "2eab698c606e3b17217602bbc99837242c743a5a", "commitAfterChange": "6d141275326cf4caf65ec5dca68b565e2e9b1360", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tint [] exceptionToCatchBlockMap, \t\tArgument [] catchArguments, \t\tFlowContext initializationParent, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "signatureAfterChange": " ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tint [] exceptionToCatchBlockMap, \t\tArgument [] catchArguments, \t\tFlowContext initializationParent, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "diff": ["+}", "+ExceptionHandlingFlowContext(", "+\t\tFlowContext parent,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "af1cb5de66122fbdb1105b6b1e2ba152", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "8c030d505f30b0cafedd9f4204a10256b97739b1", "commitAfterChange": "7ad108ea3de2b7d68d2737f4428379110b97b811", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " public ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tint [] exceptionToCatchBlockMap, \t\tArgument [] catchArguments, \t\tFlowContext initializationParent, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "signatureAfterChange": " ExceptionHandlingFlowContext( \t\tFlowContext parent, \t\tASTNode associatedNode, \t\tReferenceBinding[] handledExceptions, \t\tint [] exceptionToCatchBlockMap, \t\tArgument [] catchArguments, \t\tFlowContext initializationParent, \t\tBlockScope scope, \t\tUnconditionalFlowInfo flowInfo)", "diff": ["+}", "+ExceptionHandlingFlowContext(", "+\t\tFlowContext parent,"]}], "num": 53909}