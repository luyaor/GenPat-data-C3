{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "631a36c81f1ab8d880d23f6cf6a691ef", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e32bc677068d164da613abddc8dc865", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 26, "signatureBeforeChange": " public void testMethodWithError() throws JavaModelException, CoreException", "signatureAfterChange": " public void testMethodWithError() throws JavaModelException, CoreException", "diff": ["-\tthis.workingCopy.getBuffer().setContents(", "+\tsetWorkingCopyContents(", "-\tthis.workingCopy.reconcile(false, null);", "+\tthis.workingCopy.reconcile(false, false, null, null);", "-\tthis.problemRequestor.initialize();", "-\tthis.workingCopy.getBuffer().setContents(", "+\tString contents =", "-\t\t\"}\");", "-\tthis.workingCopy.reconcile(false, null);", "+\t\t\"}\";", "+\tsetWorkingCopyContents(contents);", "+\tthis.workingCopy.reconcile(false, false, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d684f3f6c1c97b31b5d5275b2d08f82f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "e6d78cda375a26ce6fdb882d62ed50fe3c6a25b5", "commitAfterChange": "8aee5680d034dfec291b1e7b2abb4d9d081e8e31", "methodNumberBeforeChange": 103, "methodNumberAfterChange": 104, "signatureBeforeChange": " public void testBug36032c() throws CoreException", "signatureAfterChange": " public void testBug36032c() throws CoreException, InterruptedException", "diff": ["-public void testBug36032c() throws CoreException {", "+public void testBug36032c() throws CoreException, InterruptedException {", "-\t\tString source2 = ", "+\t\tString source = ", "-\t\t\tsource2", "+\t\t\tsource", "+\t\t", "+\t\t// Get compilation unit and reconcile it => expect no error", "+\t\tchar[] sourceChars = source.toCharArray();", "+\t\tthis.problemRequestor.initialize(sourceChars);", "-\t\tthis.problemRequestor.initialize(source2.toCharArray());", "-\t\tthis.workingCopy.getBuffer().setContents(source2);", "+\t\tthis.workingCopy.getBuffer().setContents(source);", "-\t\tif (this.problemRequestor.problemCount > 0) {", "-\t\t\tassertEquals(\"Working copy should NOT have any problem!\", \"\", this.problemRequestor.problems.toString());", "-\t\t}", "+\t\tassertNoProblem(sourceChars);"]}], "num": 51512}