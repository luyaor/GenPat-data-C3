{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bb89884349ace13fd29f38b4d2bc81c4", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ed1445c437efba0407e4a7c51b15a3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": " \tprivate void updateClasspathMarkers(IResourceDelta delta, HashSet affectedProjects, Map preferredClasspaths, Map preferredOutputs)", "signatureAfterChange": "  \tprivate void validateClasspaths(IResourceDelta delta, HashSet affectedProjects)", "diff": ["-\t */", "-\tprivate void updateClasspathMarkers(IResourceDelta delta, HashSet affectedProjects, Map preferredClasspaths, Map preferredOutputs) {", "+\tprivate void validateClasspaths(IResourceDelta delta, HashSet affectedProjects) {", "-", "-\t", "-\t\t\t\t\t\t\t\tjavaProject.updateClasspathMarkers(preferredClasspaths, preferredOutputs); // in case .classpath got modified while closed", "+\t\t\t\t\t\t\t\tthis.state.addClasspathValidation(javaProject); // in case .classpath got modified while closed", "-\t\t\t\t\t\t\t\taffectedProjects.add(project.getFullPath());", "-\t\t\t\t\t\t\t\t// flush classpath markers", "-\t\t\t\t\t\t\t\tjavaProject.", "-\t\t\t\t\t\t\t\t\tflushClasspathProblemMarkers(", "-\t\t\t\t\t\t\t\t\t\ttrue, // flush cycle markers", "-\t\t\t\t\t\t\t\t\t\ttrue  //flush classpath format markers", "-\t\t\t\t\t\t\t\t\t);", "-\t\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\t// remove problems and tasks created  by the builder", "-\t\t\t\t\t\t\t\tJavaBuilder.removeProblemsAndTasksFor(project);", "+\t\t\t\t\t\t\t\tthis.state.addClasspathValidation(javaProject); ", "+", "+\t\t\t\t\t\t\t\taffectedProjects.add(project.getFullPath());", "+\t\t\t\t\t\t\t} if (isJavaProject) {", "+\t\t\t\t\t\t\t\t// check if all entries exist", "+\t\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "+\t\t\t\t\t\t\t\tthis.state.addClasspathValidation(javaProject); ", "-\t\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "-\t\t\t\t\t\t\t\tjavaProject.getResolvedClasspath(true/*ignoreUnresolvedEntry*/, \ttrue/*generateMarkerOnError*/, false/*don't returnResolutionInProgress*/);", "-\t\t\t\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t\t\t\t\t\t// project doesn't exist: ignore", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "+\t\t\t\t\t\t\tthis.state.addClasspathValidation(javaProject); ", "-\t\t\t\t\tjavaProject.updateClasspathMarkers(preferredClasspaths, preferredOutputs);", "+\t\t\t\t\tthis.state.addClasspathValidation(javaProject); ", "-//\t\t\t\t/* check custom preference file change */", "-//\t\t\t\tif (file.getName().equals(JavaProject.PREF_FILENAME)) {", "-//\t\t\t\t\treconcilePreferenceFileUpdate(delta, file, project);", "-//\t\t\t\t\tbreak;", "-//\t\t\t\t}", "-\t\t\t\tupdateClasspathMarkers(children[i], affectedProjects, preferredClasspaths, preferredOutputs);", "+\t\t\t\tvalidateClasspaths(children[i], affectedProjects);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d25bba32a2f227b64aa7db90071451f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "bcbb4fd41dd165de3cdd211bb6142702f90b97bc", "commitAfterChange": "24ef44c7c098d6f518674c10c6e6263f51aafb8e", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": " \tprivate static void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprivate static void updateVariableValues( \t\tString[] variableNames, \t\tIPath[] variablePaths, \t\tIProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tfinal HashMap affectedProjects = new HashMap(5);", "+\t\tfinal HashMap affectedProjectClasspaths = new HashMap(5);", "-\t\t\t\t\t\t\t\taffectedProjects.put(project, project.getResolvedClasspath(true));", "+\t\t\t\t\t\t\t\taffectedProjectClasspaths.put(project, project.getResolvedClasspath(true));", "-\t\t\t\t\t\t\t\taffectedProjects.put(project, project.getResolvedClasspath(true));", "+\t\t\t\t\t\t\t\taffectedProjectClasspaths.put(project, project.getResolvedClasspath(true));", "-\t\tif (!affectedProjects.isEmpty()) {", "+\t\tif (!affectedProjectClasspaths.isEmpty()) {", "+\t\t\t\tfinal boolean canChangeResources = !ResourcesPlugin.getWorkspace().isTreeLocked();", "-\t\t\t\t\t\t\tIterator projectsToUpdate = affectedProjects.keySet().iterator();", "+\t\t\t\t\t\t\tIterator projectsToUpdate = affectedProjectClasspaths.keySet().iterator();", "-\t\t\t\t\t\t\t\tJavaProject project = (JavaProject) projectsToUpdate.next();", "+\t\t\t\t\t\t\t\tJavaProject affectedProject = (JavaProject) projectsToUpdate.next();", "-\t\t\t\t\t\t\t\t\tSystem.out.println(\"CPVariable SET  - updating affected project: [\"+project.getElementName() //$NON-NLS-1$", "+\t\t\t\t\t\t\t\t\tSystem.out.println(\"CPVariable SET  - updating affected project: [\"+affectedProject.getElementName() //$NON-NLS-1$", "-\t\t\t\t\t\t\t\t", "-\t\t\t\t\t\t\t\tproject", "+", "+\t\t\t\t\t\t\t\taffectedProject", "-\t\t\t\t\t\t\t\t\t\tproject.getRawClasspath(),", "+\t\t\t\t\t\t\t\t\t\taffectedProject.getRawClasspath(),", "-\t\t\t\t\t\t\t\t\t\t!ResourcesPlugin.getWorkspace().isTreeLocked(), // can change resources", "-\t\t\t\t\t\t\t\t\t\t(IClasspathEntry[]) affectedProjects.get(project),", "+\t\t\t\t\t\t\t\t\t\tcanChangeResources, ", "+\t\t\t\t\t\t\t\t\t\t(IClasspathEntry[]) affectedProjectClasspaths.get(affectedProject),", "+\t\t\t\t\t\t\t\t// ensures the project is getting rebuilt if only variable is modified", "+\t\t\t\t\t\t\t\tif (canChangeResources) {", "+\t\t\t\t\t\t\t\t\taffectedProject.getProject().touch(progressMonitor);", "+\t\t\t\t\t\t\t\t}"]}], "num": 57280}