{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f8e462256e56255d4430f21e7da13498", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c5c896eefbcec4955f74b4ed3bdb2ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "d78b8094daf355f9dfeb37d82fffda46614be5da", "commitAfterChange": "5903b5532387cc7ed73791cbff2d52e4ceee6d52", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\tTypeVariableBinding typeVariableBinding = (TypeVariableBinding) this.type.resolvedType;", "+\t\tif (methodScope != null && methodScope.referenceContext instanceof TypeDeclaration) {", "+\t\t\t// initialization scope", "+\t\t\tmethodScope = methodScope.enclosingMethodScope();", "+\t\t}", "-\t\tif (methodDeclaration != null && ((methodDeclaration.bits & ASTNode.CanBeStatic) != 0) && methodDeclaration.binding != null) {", "+\t\tif (methodDeclaration != null && methodDeclaration.binding != null) {", "-\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "+\t\t\t\tif (typeVariableBinding.declaringElement instanceof TypeBinding)", "+\t\t\t\t\tcurrentScope.resetDeclaringClassMethodStaticFlag((TypeBinding) typeVariableBinding.declaringElement);", "+\t\t\t\telse", "+\t\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "-\t\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "+\t\t\t\t\tif (typeVariableBinding.declaringElement instanceof TypeBinding)", "+\t\t\t\t\t\tcurrentScope.resetDeclaringClassMethodStaticFlag((TypeBinding) typeVariableBinding.declaringElement);", "+\t\t\t\t\telse", "+\t\t\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1b24065a12bddf8844b5bb012002de1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LocalDeclaration.java", "commitBeforeChange": "e5bb4bddaa8ae27dfddec859067bcb3df83df4dc", "commitAfterChange": "65877d9109defab8c1c7191e1a9530b8bc8f9b43", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\tif (this.binding != null && this.type.resolvedType instanceof TypeVariableBinding) {", "+\t\tMethodScope methodScope= this.binding.declaringScope.methodScope();", "+\t\tAbstractMethodDeclaration methodDeclaration = methodScope.referenceMethod();", "+\t\tif (methodDeclaration != null && ((methodDeclaration.bits & ASTNode.CanBeStatic) != 0) && methodDeclaration.binding != null) {", "+\t\t\tTypeVariableBinding[] typeVariables = methodDeclaration.binding.typeVariables();", "+\t\t\tif (typeVariables == Binding.NO_TYPE_VARIABLES) {", "+\t\t\t\t// Method declares no type variables.", "+\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "+\t\t\t} else {", "+\t\t\t\t// to check whether the resolved type for this is declared by enclosing method as a type variable", "+\t\t\t\tboolean usesEnclosingTypeVar = false; ", "+\t\t\t\tfor (int i = 0; i < typeVariables.length ; i ++) {", "+\t\t\t\t\tif (typeVariables[i] == this.type.resolvedType){", "+\t\t\t\t\t\tusesEnclosingTypeVar = true;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (!usesEnclosingTypeVar) {", "+\t\t\t\t\t// uses a type variable not declared by enclosing method", "+\t\t\t\t\tcurrentScope.resetEnclosingMethodStaticFlag();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 24426}