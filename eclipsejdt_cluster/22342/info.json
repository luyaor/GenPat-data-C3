{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9cec04980af50a4d746a30516b8b085", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24250beb62cc398ffc21afa967a7a15c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPathUtil.java", "commitBeforeChange": "8908235d3be70b9dc1a86302d67d48a28d815e79", "commitAfterChange": "a5a5f2f627cd928ff3dd3693be20380c04afbdb2", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static void saveFactoryPathFile(IJavaProject jproj, Map<FactoryContainer, Boolean> containerMap)  \t\tthrows CoreException, IOException", "signatureAfterChange": " \tpublic static void saveFactoryPathFile(IJavaProject jproj, Map<FactoryContainer, Boolean> containerMap)  \t\tthrows CoreException", "diff": ["-\t\tthrows CoreException, IOException ", "+\t\tthrows CoreException ", "-\t\tif (containerMap != null) {", "-\t\t\tString data = FactoryPathUtil.encodeFactoryPath(containerMap);", "-\t\t\t// If project is null, set workspace-level data", "-\t\t\tif (jproj == null) {", "-\t\t\t\tFileSystemUtil.writeStringToFile(wkspFile, data);", "+\t\ttry {", "+\t\t\tif (containerMap != null) {", "+\t\t\t\tString data = FactoryPathUtil.encodeFactoryPath(containerMap);", "+\t\t\t\t// If project is null, set workspace-level data", "+\t\t\t\tif (jproj == null) {", "+\t\t\t\t\tFileSystemUtil.writeStringToFile(wkspFile, data);", "+\t\t\t\t}", "+\t\t\t\telse {", "+\t\t\t\t\tFileSystemUtil.writeStringToIFile(projFile, data);", "+\t\t\t\t}", "-\t\t\telse {", "-\t\t\t\tFileSystemUtil.writeStringToIFile(projFile, data);", "+\t\t\telse { // restore defaults by deleting the factorypath file.", "+\t\t\t\tif (jproj != null) {", "+\t\t\t\t\tprojFile.delete(true, null);", "+\t\t\t\t}", "+\t\t\t\telse {", "+\t\t\t\t\twkspFile.delete();", "+\t\t\t\t}", "-\t\telse { // restore defaults by deleting the factorypath file.", "-\t\t\tif (jproj != null) {", "-\t\t\t\tprojFile.delete(true, null);", "-\t\t\t}", "-\t\t\telse {", "-\t\t\t\twkspFile.delete();", "-\t\t\t}", "+\t\tcatch (IOException e) {", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, AptPlugin.PLUGIN_ID, -1, Messages.FactoryPathUtil_status_ioException, e));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75bae68c854dfdc1c3e8555232c3e383", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPathUtil.java", "commitBeforeChange": "8908235d3be70b9dc1a86302d67d48a28d815e79", "commitAfterChange": "a5a5f2f627cd928ff3dd3693be20380c04afbdb2", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static Map<FactoryContainer, Boolean> readFactoryPathFile(IJavaProject jproj)  \t\tthrows IOException, CoreException", "signatureAfterChange": " \tpublic static Map<FactoryContainer, Boolean> readFactoryPathFile(IJavaProject jproj)  \t\tthrows CoreException", "diff": ["-\t\tthrows IOException, CoreException", "+\t\tthrows CoreException", "-\t\tString data;", "-\t\t// If project is null, use workspace-level data", "-\t\tif (jproj == null) {", "-\t\t\tFile file = getFileForWorkspace();", "-\t\t\tif (!file.exists()) {", "-\t\t\t\treturn null;", "+\t\tString data = null;", "+\t\ttry {", "+\t\t\t// If project is null, use workspace-level data", "+\t\t\tif (jproj == null) {", "+\t\t\t\tFile file = getFileForWorkspace();", "+\t\t\t\tif (!file.exists()) {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "+\t\t\t\tdata = FileSystemUtil.getContentsOfFile(file);", "-\t\t\tdata = FileSystemUtil.getContentsOfFile(file);", "+\t\t\telse {", "+\t\t\t\tIFile ifile = getIFileForProject(jproj);", "+\t\t\t\tif (!ifile.exists()) {", "+\t\t\t\t\treturn null;", "+\t\t\t\t}", "+\t\t\t\tdata = FileSystemUtil.getContentsOfIFile(ifile);", "+\t\t\t}", "-\t\telse {", "-\t\t\tIFile ifile = getIFileForProject(jproj);", "-\t\t\tif (!ifile.exists()) {", "-\t\t\t\treturn null;", "-\t\t\t}", "-\t\t\tdata = FileSystemUtil.getContentsOfIFile(ifile);", "+\t\tcatch (IOException e) {", "+\t\t\tthrow new CoreException(new Status(IStatus.ERROR, AptPlugin.PLUGIN_ID, -1, Messages.FactoryPathUtil_status_ioException, e));"]}], "num": 22342}