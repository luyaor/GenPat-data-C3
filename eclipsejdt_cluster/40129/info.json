{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "75f773d17817097dd480361eac87715e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "97b494327690f22bcf91f49b9051d556", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ConverterTestSetup.java", "commitBeforeChange": "a127c18eb2e0be7f3c68a60246b08a9a69e7be5d", "commitAfterChange": "771a62c1c5090742b5612a8958d0207ca0f557cc", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 84, "signatureBeforeChange": "  \tprotected void checkSourceRange(ASTNode node, String expectedContents, char[] source)", "signatureAfterChange": " \tprotected void checkSourceRange(ASTNode node, String expectedContents, char[] source, boolean expectMalformed)", "diff": ["+\t}", "+\tprotected void checkSourceRange(ASTNode node, String expectedContents, char[] source, boolean expectMalformed) {", "+\t\tif (expectMalformed) {", "+\t\t\tassertTrue(\"Is not malformed\", isMalformed(node));", "+\t\t} else {", "+\t\t\tassertFalse(\"Is malformed\", isMalformed(node));", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab406725d55616d594462a4270941b24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "821b6028ffbd0ba8edfd1a0534c32e817f4e830d", "commitAfterChange": "06e4a5efa4ac79a81431ad2110bd08f2ba1b98a7", "methodNumberBeforeChange": 333, "methodNumberAfterChange": 333, "signatureBeforeChange": " \tpublic void test0686() throws JavaModelException", "signatureAfterChange": " \tpublic void test0686() throws JavaModelException", "diff": ["+\t\t\tassertFalse(\"Not a malformed node\", isMalformed(fragment));", "+\t\t\tassertFalse(\"Not a malformed node\", isMalformed(fragment));", "+\t\t\tassertFalse(\"Not a malformed node\", isMalformed(fragment));", "+\t\t\tassertFalse(\"Not a malformed node\", isMalformed(fragment));"]}], "num": 40129}