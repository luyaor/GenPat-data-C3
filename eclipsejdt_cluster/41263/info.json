{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7da34d44f6fbb7d591d89e68dc2dedc2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "584f0caac8cd33eb0844a844dcb932bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ExplicitConstructorCall.java", "commitBeforeChange": "bbda9462840b601872d8559c9cdc1bb66c60deb7", "commitAfterChange": "95d2c0fa45382ec7185e2b49268996e13543280e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic void resolve(BlockScope scope)", "signatureAfterChange": " \t \tpublic void resolve(BlockScope scope)", "diff": ["+\t\t\t\t\t// record a best guess, for clients who need hint about possible contructor match", "+\t\t\t\t\tTypeBinding[] pseudoArgs = new TypeBinding[length];", "+\t\t\t\t\tfor (int i = length; --i >= 0;)", "+\t\t\t\t\t\tpseudoArgs[i] = argumentTypes[i] == null ? receiverType : argumentTypes[i]; // replace args with errors with receiver", "+\t\t\t\t\tthis.binding = scope.findMethod(receiverType, TypeConstants.INIT, pseudoArgs, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad9d6d01758983b3d95dd46eea75fe37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AllocationExpression.java", "commitBeforeChange": "629a3f65ab389a5cfc8b01a51ec0ef547bc3adfe", "commitAfterChange": "a93dad39ef275bbf6417bb0529204b9a1aeb09b1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\t\tif (this.resolvedType instanceof ReferenceBinding) {", "+\t\t\t\t\t// record a best guess, for clients who need hint about possible contructor match", "+\t\t\t\t\tTypeBinding[] pseudoArgs = new TypeBinding[length];", "+\t\t\t\t\tfor (int i = length; --i >= 0;)", "+\t\t\t\t\t\tpseudoArgs[i] = argumentTypes[i] == null ? this.resolvedType : argumentTypes[i]; // replace args with errors with receiver", "+\t\t\t\t\tthis.binding = scope.getConstructor((ReferenceBinding) this.resolvedType, pseudoArgs, this);", "+\t\t\t\t}"]}], "num": 41263}