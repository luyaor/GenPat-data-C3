{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "429251a7fd1ab9e2fb6f8cc5282661d8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37addd71324179ce0d1b12500ed52cf3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "055cf2299e246e07310e3c00069174f749475bd4", "commitAfterChange": "ee49c8f1081c02bdb311590036980191aff6a2f1", "methodNumberBeforeChange": 47, "methodNumberAfterChange": 47, "signatureBeforeChange": "  \tprivate void acceptPendingPolyArguments(BoundSet acceptedResult, TypeBinding[] parameterTypes, boolean isVarArgs)", "signatureAfterChange": "  \tprivate void acceptPendingPolyArguments(BoundSet acceptedResult, TypeBinding[] parameterTypes, boolean isVarArgs)", "diff": ["+\t\t\t\t\t\t\tif (!innerBinding.isValidBinding()) {", "+\t\t\t\t\t\t\t\tif (invocation instanceof MessageSend)", "+\t\t\t\t\t\t\t\t\tinnerCtx.scope.problemReporter().invalidMethod((MessageSend) invocation, innerBinding);", "+\t\t\t\t\t\t\t\telse", "+\t\t\t\t\t\t\t\t\tinnerCtx.scope.problemReporter().invalidConstructor(expression, innerBinding);", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69f6b57fc279a35f98f775fa3c746ef2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "055cf2299e246e07310e3c00069174f749475bd4", "commitAfterChange": "ee49c8f1081c02bdb311590036980191aff6a2f1", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "signatureAfterChange": " \tpublic void rebindInnerPolies(BoundSet bounds, TypeBinding[] parameterTypes)", "diff": ["-\t\t\t\tif (solutions == null) ", "-\t\t\t\t\tcontinue; // play safe, but shouldn't happen in a resolved context", "+\t\t\t\tif (solutions == null) {", "+\t\t\t\t\tif (binding instanceof ParameterizedGenericMethodBinding) {", "+\t\t\t\t\t\tInferenceContext18 innerCtx = innerMessage.getInferenceContext((ParameterizedGenericMethodBinding) binding);", "+\t\t\t\t\t\tif (innerCtx != null && !binding.isValidBinding()) {", "+\t\t\t\t\t\t\tif (innerMessage instanceof MessageSend)", "+\t\t\t\t\t\t\t\tinnerCtx.scope.problemReporter().invalidMethod((MessageSend) innerMessage, binding);", "+\t\t\t\t\t\t\telse", "+\t\t\t\t\t\t\t\tinnerCtx.scope.problemReporter().invalidConstructor(inner, binding);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tcontinue; // inner inference not requested -> not a problem", "+\t\t\t\t}"]}], "num": 417}