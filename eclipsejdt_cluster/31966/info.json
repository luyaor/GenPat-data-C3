{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba1ca508544d750d61850d49ad134699", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34414d77b99ae835350936d00614c541", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ASTRewriteFormatter.java", "commitBeforeChange": "357e7f80c15f23eab4aa968e46d39c66d6f56a92", "commitAfterChange": "8164609d0329b8e1757d2e11bb01a0c925e98561", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " \t\t \tpublic static TextEdit formatString(int kind, String string, int indentationLevel, String lineSeparator, Map options)", "signatureAfterChange": " \t\t \tpublic TextEdit formatString(int kind, String string, int offset, int length, int indentationLevel)", "diff": ["-\tpublic static TextEdit formatString(int kind, String string, int indentationLevel, String lineSeparator, Map options) {", "-\t\treturn ToolFactory.createCodeFormatter(options).format(kind, string, 0, string.length(), indentationLevel, lineSeparator);", "+\tpublic TextEdit formatString(int kind, String string, int offset, int length, int indentationLevel) {", "+\t\treturn ToolFactory.createCodeFormatter(this.options).format(kind, string, offset, length, indentationLevel, this.lineDelimiter);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ac83e3eb8d22352cbd2548e2c966ada5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/WorkingCopyCleanupListener.java", "commitBeforeChange": "4a9dbcb223c65a26348db68f3ba0775c9668cb28", "commitAfterChange": "ea8e63f616ba93be45fa6f7194a531b08059ef99", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tprivate void processElementDelta( IJavaElementDelta delta )", "signatureAfterChange": " \t \tprivate void processElementDelta( IJavaElementDelta delta )", "diff": ["-\t\t\t//", "-\t\t\t// cu.isWorkingCopy() doesn't work here.  For back-compat reasons, that always returns ", "-\t\t\t// true for non-primary working copies, so we use the following test to see if a working copy", "-\t\t\t// has been discarded.", "-\t\t\t//", "-\t\t\t// TODO:  remove reference to jdt-internal class", "-\t\t\t//", "-\t\t\torg.eclipse.jdt.internal.core.CompilationUnit cu2 = (org.eclipse.jdt.internal.core.CompilationUnit)cu;\t\t\t", "-\t\t\tboolean workingCopyDiscarded = cu2.isPrimary() ? !cu.isWorkingCopy() : cu2.getPerWorkingCopyInfo() == null;", "-", "+\t\t\tboolean workingCopyDiscarded = ", "+\t\t\t\tcu.getOwner() == null ? !cu.isWorkingCopy() : !cu.exists();", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc22676ceff8f6c8931314b7292144d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "6a300d21464d2fe06e2fb97a05726aa4bf91f99a", "commitAfterChange": "a32ab9844c9785077bc7ead2e7a3b745b89de636", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected void seekTypesInSourcePackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "signatureAfterChange": " \tprotected void seekTypesInSourcePackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "diff": ["-\t\tMap workingCopies = (Map) this.unitsToLookInside.get();", "-\t\tif (workingCopies != null && (workingCopiesSize = workingCopies.size()) > 0) {", "+\t\tif (this.unitsToLookInside != null && (workingCopiesSize = this.unitsToLookInside.size()) > 0) {", "-\t\t\ttemp.putAll(workingCopies);", "+\t\t\ttemp.putAll(this.unitsToLookInside);"]}], "num": 31966}