{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f96684b7b1fb7f67aece706ab2561418", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "29e4fb5c0a8e172506e467e92c3432b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "8bb6b9481b79f29da1fc965f1ebeeb888e97d205", "commitAfterChange": "4e81456d91d85b9a795956ecc38cb1d7061bd32d", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tTypeBinding receiverType,\r \t\tInvocationSite invocationSite)", "signatureAfterChange": "\r \tprivate void findLocalMethods(\r \t\tchar[] methodName,\r \t\tTypeBinding[] argTypes,\r \t\tMethodBinding[] methods,\r \t\tScope scope,\r \t\tObjectVector methodsFound,\r \t\tboolean onlyStaticMethods,\r \t\tboolean exactMatch,\r \t\tTypeBinding receiverType,\r \t\tInvocationSite invocationSite)", "diff": ["-\t//\tboolean noVoidReturnType, how do you know?\r", "-\tboolean onlyStaticMethods,\r", "+\t\tboolean onlyStaticMethods,\r", "+\r", "+\r", "+\r", "+\r", "+\r", "+\r", "-\t\t\tfor (int a = minArgLength; --a >= 0;)\r", "-\t\t\t\tif (argTypes[a] != null) // can be null if it could not be resolved properly\r", "-\t\t\t\t\tif (!scope.areTypesCompatible(argTypes[a], method.parameters[a]))\r", "-\t\t\t\t\t\tcontinue next;\r", "+\t\t\tfor (int a = minArgLength; --a >= 0;){\r", "+\t\t\t\tif (argTypes[a] != null){ // can be null if it could not be resolved properly\r", "+\t\t\t\t\tif (!scope.areTypesCompatible(argTypes[a], method.parameters[a])) {\r", "+\t\t\t\t\t\tcontinue next;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\r", "+\r", "+\r", "+\r", "+\r", "+\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c06510c4fc802c471d12f3d4449c78d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "996624297f7f1b08dc25c3bd565493751f6df397", "commitAfterChange": "a8d55f7d4930fd7566ac4b1489f0aa7e3f902477", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r void faultInImports()", "signatureAfterChange": "\r void faultInImports()", "diff": ["-\t\t\t\tif (CharOperation.equals(compoundName, resolvedImports[j].compoundName))\r", "+\t\t\t\tif (CharOperation.equals(compoundName, resolvedImports[j].compoundName)) {\r", "+\t\t\t\t}\r", "-\t\t\tif (CharOperation.equals(compoundName, currentPackageName))\r", "+\t\t\tif (CharOperation.equals(compoundName, currentPackageName)) {\r", "-\r", "+\t\t\t}\r", "-\t\t\tresolvedImports[index++] = new ImportBinding(compoundName, true, importBinding);\r", "+\t\t\tresolvedImports[index++] = new ImportBinding(compoundName, true, importBinding, importReference);\r", "-\t\t\t\tif (existingType == typeBinding)\r", "+\t\t\t\tif (existingType == typeBinding) {\r", "-\r", "+\t\t\t\t}\r", "-\t\t\tresolvedImports[index++] = new ImportBinding(compoundName, false, typeBinding);\r", "+\t\t\tresolvedImports[index++] = new ImportBinding(compoundName, false, typeBinding, importReference);\r"]}], "num": 49574}