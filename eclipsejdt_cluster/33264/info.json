{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6148f283b6df7c69988b6857ae10f8b7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32cdce85ec256ba7d8f79338cbfce96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "526458b6e9c716596dd0c5e362d41c478db4dab2", "commitAfterChange": "6c6249e790ddddb720baadd9b9e8d451ec0db2f1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t} else if (! flowInfo.cannotBeDefinitelyNullOrNonNull(local)) {", "-\t\t\t\tif (flowInfo.isPotentiallyNonNull(local)) {", "-\t\t\t\t\trecordNullReference(local, reference, CAN_ONLY_NON_NULL | checkType & CONTEXT_MASK);", "-\t\t\t\t} else {", "-\t\t\t\t\tif ((this.tagBits & FlowContext.HIDE_NULL_COMPARISON_WARNING) == 0) {", "+\t\t\t} else if (flowInfo.cannotBeDefinitelyNullOrNonNull(local)) {", "+\t\t\t\treturn; // no reason to complain, since there is definitely some uncertainty making the comparison relevant.", "+\t\t\t} else {", "+\t\t\t\tif ((this.tagBits & FlowContext.HIDE_NULL_COMPARISON_WARNING) == 0) {", "+\t\t\t\t\t// note: pot non-null & pot null is already captured by cannotBeDefinitelyNullOrNonNull()", "+\t\t\t\t\tif (flowInfo.isPotentiallyNonNull(local)) {", "+\t\t\t\t\t\t// knowing 'local' can be non-null, we're only interested in seeing whether it can *only* be non-null ", "+\t\t\t\t\t\trecordNullReference(local, reference, CAN_ONLY_NON_NULL | checkType & CONTEXT_MASK);", "+\t\t\t\t\t} else if (flowInfo.isPotentiallyNull(local)) {", "+\t\t\t\t\t\t// knowing 'local' can be null, we're only interested in seeing whether it can *only* be null", "+\t\t\t\t\t\trecordNullReference(local, reference, CAN_ONLY_NULL | checkType & CONTEXT_MASK);", "+\t\t\t\t\t} else {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba9336f94b64972de2ba77dc993c7d5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "79774393baaba7f9e5f3461242a5b822bf662647", "commitAfterChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tASTNode location, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tASTNode location, int checkType, FlowInfo flowInfo)", "diff": ["+\t\t\t\trecordNullReference(local, reference, checkType, flowInfo);", "-\t\t\t\trecordNullReference(local, reference, checkType);", "-\t\t\t\t\t\trecordNullReference(local, reference, CAN_ONLY_NON_NULL | checkType & (CONTEXT_MASK|HIDE_NULL_COMPARISON_WARNING_MASK));", "+\t\t\t\t\t\trecordNullReference(local, reference, CAN_ONLY_NON_NULL | checkType & (CONTEXT_MASK|HIDE_NULL_COMPARISON_WARNING_MASK), flowInfo);", "-\t\t\t\t\t\trecordNullReference(local, reference, CAN_ONLY_NULL | checkType & (CONTEXT_MASK|HIDE_NULL_COMPARISON_WARNING_MASK));", "+\t\t\t\t\t\trecordNullReference(local, reference, CAN_ONLY_NULL | checkType & (CONTEXT_MASK|HIDE_NULL_COMPARISON_WARNING_MASK), flowInfo);", "-\t\t\t\t\t\trecordNullReference(local, reference, checkType);", "+\t\t\t\t\t\trecordNullReference(local, reference, checkType, flowInfo);", "-\t\t\trecordNullReference(local, reference, checkType);", "+\t\t\trecordNullReference(local, reference, checkType, flowInfo);", "-\t\t\trecordNullReference(local, location, checkType);", "+\t\t\trecordNullReference(local, location, checkType, flowInfo);"]}], "num": 33264}