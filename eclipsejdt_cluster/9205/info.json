{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "90f79565a6ea782659e3066febf6a9ba", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ceba35b06885e3449391dd4f0ef59f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "2a762b85f858691a63d4547af177cc649d7b1329", "commitAfterChange": "7675c409a4b3b1e15b1cc476a0a66b988b5fb4a0", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \tprotected void updateCycleMarkers()", "signatureAfterChange": "\r \tprotected void updateCycleMarkers(IClasspathEntry[] newResolvedPath)", "diff": ["-\tprotected void updateCycleMarkers() {\r", "+\tprotected void updateCycleMarkers(IClasspathEntry[] newResolvedPath) {\r", "+\t\t\r", "-\t\t\t\ttry {\r", "-\t\t\t\t\tJavaProject project = (JavaProject)projects[i];\r", "-\t\t\t\t\tproject.flushClasspathProblemMarkers(true);\r", "-\t\t\t\t\tif (project.hasClasspathCycle(project.getResolvedClasspath(true))){\r", "-\t\t\t\t\t\tproject.createClasspathProblemMarker(\r", "-\t\t\t\t\t\t\tUtil.bind(\"classpath.cycle\"), //$NON-NLS-1$\r", "-\t\t\t\t\t\t\tIMarker.SEVERITY_ERROR,\r", "-\t\t\t\t\t\t\ttrue); \r", "-\t\t\t\t\t}\r", "-\t\t\t\t} catch (JavaModelException e) {\r", "+\t\t\t\tJavaProject project = (JavaProject)projects[i];\r", "+\t\t\t\tproject.flushClasspathProblemMarkers(true);\r", "+\t\t\t\tif (project.hasClasspathCycle(project.getResolvedClasspath(true))){\r", "+\t\t\t\t\tproject.createClasspathProblemMarker(\r", "+\t\t\t\t\t\tUtil.bind(\"classpath.cycle\"), //$NON-NLS-1$\r", "+\t\t\t\t\t\tIMarker.SEVERITY_ERROR,\r", "+\t\t\t\t\t\ttrue); \r", "+\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a9ffe1b15edaba18c5511f45ca0bf4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "bf1ba1c1732b0be00fbd03cfd8ae394b6a169e63", "commitAfterChange": "debb51f61b0b4a5b1a6926f67a451ba72125546c", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tprotected void updateCycleMarkersIfNecessary(IClasspathEntry[] newResolvedPath)", "signatureAfterChange": " \tprotected void updateCycleMarkersIfNecessary(IClasspathEntry[] newResolvedPath)", "diff": ["-\t\ttry {", "-\t\t\tJavaProject project = getProject();", "-\t\t\tif (!project.hasCycleMarker() && !project.hasClasspathCycle(project.getResolvedClasspath(true))){", "-\t\t\t\treturn;", "-\t\t\t}", "-\t\t", "-\t\t\tpostAction(", "-\t\t\t\tnew IPostAction() {", "-\t\t\t\t\tpublic String getID() {", "-\t\t\t\t\t\treturn \"updateCycleMarkers\";  //$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t\tpublic void run() throws JavaModelException {", "-\t\t\t\t\t\tJavaProject.updateAllCycleMarkers();", "-\t\t\t\t\t}", "-\t\t\t\t},", "-\t\t\t\tREMOVEALL_APPEND);", "-\t\t} catch(JavaModelException e){", "+\t\tJavaProject project = getProject();", "+\t\tif (!project.hasCycleMarker() && !project.hasClasspathCycle(newResolvedPath)){", "+\t\t\treturn;", "+\t", "+\t\tpostAction(", "+\t\t\tnew IPostAction() {", "+\t\t\t\tpublic String getID() {", "+\t\t\t\t\treturn \"updateCycleMarkers\";  //$NON-NLS-1$", "+\t\t\t\t}", "+\t\t\t\tpublic void run() throws JavaModelException {", "+\t\t\t\t\tJavaProject.updateAllCycleMarkers();", "+\t\t\t\t}", "+\t\t\t},", "+\t\t\tREMOVEALL_APPEND);"]}], "num": 9205}