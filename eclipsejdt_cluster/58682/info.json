{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cac5da7a4e6a4eb5e09dd67a21ac5f4f", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90f80f9770f632109f3dce59b6079a6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding18.java", "commitBeforeChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "commitAfterChange": "dd2d999bb92f1e106218a30e477eebe8f58b2e19", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tpublic char[] shortReadableName()", "signatureAfterChange": "  \tpublic char[] shortReadableName()", "diff": ["-\t", "+", "-\t\t\tif (!this.inRecursiveFunction) {", "+\t\t\tif (this.recursionLevel < 2) {", "-\t\t\t\t\tthis.inRecursiveFunction = true;", "+\t\t\t\t\tthis.recursionLevel++;", "+\t\t\t\t\tif (this.upperBounds != null && this.upperBounds.length > 1) {", "+\t\t\t\t\t\tStringBuffer sb = new StringBuffer();", "+\t\t\t\t\t\tsb.append(this.upperBounds[0].shortReadableName());", "+\t\t\t\t\t\tfor (int i = 1; i < this.upperBounds.length; i++)", "+\t\t\t\t\t\t\tsb.append('&').append(this.upperBounds[i].shortReadableName());", "+\t\t\t\t\t\tint len = sb.length();", "+\t\t\t\t\t\tchar[] name = new char[len];", "+\t\t\t\t\t\tsb.getChars(0, len, name, 0);", "+\t\t\t\t\t\treturn name;", "+\t\t\t\t\t}", "-\t\t\t\t\tthis.inRecursiveFunction = false;", "+\t\t\t\t\tthis.recursionLevel--;", "-\t\t\t\treturn this.firstBound.erasure().shortReadableName();", "+\t\t\t\treturn this.originalName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b500d8ead9aad7ff093c9ee0003d43fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding18.java", "commitBeforeChange": "6940f5238f5f044dc7dc7f5472f64a2c5617a365", "commitAfterChange": "dd2d999bb92f1e106218a30e477eebe8f58b2e19", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic char[] readableName()", "signatureAfterChange": " \t \tpublic char[] readableName()", "diff": ["-\t\t\tif (!this.inRecursiveFunction) {", "+\t\t\tif (this.recursionLevel < 2) {", "-\t\t\t\t\tthis.inRecursiveFunction = true;", "+\t\t\t\t\tthis.recursionLevel ++;", "+\t\t\t\t\tif (this.upperBounds != null && this.upperBounds.length > 1) {", "+\t\t\t\t\t\tStringBuffer sb = new StringBuffer();", "+\t\t\t\t\t\tsb.append(this.upperBounds[0].readableName());", "+\t\t\t\t\t\tfor (int i = 1; i < this.upperBounds.length; i++)", "+\t\t\t\t\t\t\tsb.append('&').append(this.upperBounds[i].readableName());", "+\t\t\t\t\t\tint len = sb.length();", "+\t\t\t\t\t\tchar[] name = new char[len];", "+\t\t\t\t\t\tsb.getChars(0, len, name, 0);", "+\t\t\t\t\t\treturn name;", "+\t\t\t\t\t}", "-\t\t\t\t\tthis.inRecursiveFunction = false;", "+\t\t\t\t\tthis.recursionLevel--;", "-\t\t\t} else {\t\t\t\t", "-\t\t\t\treturn this.firstBound.erasure().readableName();", "+\t\t\t} else {", "+\t\t\t\treturn this.originalName;"]}], "num": 58682}