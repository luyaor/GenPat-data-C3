{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "03234a1d4abca28a744ade92e2148ba6", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "134eefd4977e88ed61ccd2e04db3d03f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/DependencyGraph.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": "\r \tpublic void integrityCheck(Dictionary table)", "signatureAfterChange": "\r \tpublic void integrityCheck(Dictionary table)", "diff": ["-\t\tString msg = Util.bind(\"build.graphCorrupt\"/*nonNLS*/);\r", "+\t\tString msg = \"Internal Error: the dependency graph is corrupt, do a full build to workaround error\"/*nonNLS*/;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1772dbb9d5628b131e78cbb8db7e3b53", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/StateSnapConstantPool.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r public void add(IHandle handle)", "signatureAfterChange": "\r public void add(IHandle handle)", "diff": ["-\t\t\tAssert.isTrue(false, Util.bind(\"build.unknownHandle\"/*nonNLS*/));\r", "+\t\t\tAssert.isTrue(false, \"Unknown kind of handle\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17e86ff58c692cab1de0351ad8aa0be9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/AbstractMemberHandle.java", "commitBeforeChange": "5e822caf41e5c8401dd961b84bb7f6d0d93a554e", "commitAfterChange": "86159c3022beffa95d7d57cb9f43b80d21471332", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tString computeSignature(String name, IType[] parameterTypes)", "signatureAfterChange": "\r \tString computeSignature(String name, IType[] parameterTypes)", "diff": ["-\t\t\t\tthrow new StateSpecificException(Util.bind(\"build.incompatibleParameterTypes\"/*nonNLS*/));\r", "+\t\t\t\tthrow new StateSpecificException(\"Incompatible parameter types\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1810658c4336b77be39622b821ffa23e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/DependencyGraph.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic INode getNodeFor(Object o, boolean create)", "signatureAfterChange": "\r \tpublic INode getNodeFor(Object o, boolean create)", "diff": ["-\t\t\tAssert.isTrue(false, Util.bind(\"build.unknownNode\"/*nonNLS*/));\r", "+\t\t\tAssert.isTrue(false, \"Unknown kind of node\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3122de229820fb67da0a9cfdf44427d8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/StateSnapV5.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r protected void badFormat() throws IOException", "signatureAfterChange": "\r protected void badFormat() throws IOException", "diff": ["-\tthrow new IOException(Util.bind(\"build.formatError\"/*nonNLS*/));\r", "+\tthrow new IOException(\"Error in format\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36313c3b79fb1230e6da61f05c3b914b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/JavaDevelopmentContextImpl.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r public IState getCurrentState() throws NotPresentException", "signatureAfterChange": "\r public IState getCurrentState() throws NotPresentException", "diff": ["-\t\tthrow new NotPresentException(Util.bind(\"build.noState\"/*nonNLS*/));\r", "+\t\tthrow new NotPresentException(\"Internal Error - No current state\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f65794ed4c0cc43a53cbc8f28491399", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/BatchImageBuilder.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public void lazyBuild(PackageElement unit)", "signatureAfterChange": "\r public void lazyBuild(PackageElement unit)", "diff": ["-\tAssert.isTrue(false, Util.bind(\"build.lazyBuildDisabled\"/*nonNLS*/));\r", "+\tAssert.isTrue(false, \"Internal Error - Lazy building has been disabled\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43480f4e6d1fe0cbffe168dd1e5f2048", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/DeltaImpl.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tDeltaImpl(IState oldState, IState newState, IImageContext context, IncrementalImageBuilder builder)", "signatureAfterChange": "\r \tDeltaImpl(IState oldState, IState newState, IImageContext context, IncrementalImageBuilder builder)", "diff": ["-\t\t\tAssert.isTrue(false, Util.bind(\"build.invalidStates\"/*nonNLS*/));\r", "+\t\t\tAssert.isTrue(false, \"Internal Error - Invalid states\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "43bf2190d92e31867ea67c4832eb1248", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/StateSnapConstantPool.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "\r private void writeNumber(Number num, DataOutputStream out) throws IOException", "signatureAfterChange": "\r private void writeNumber(Number num, DataOutputStream out) throws IOException", "diff": ["-\t\tAssert.isTrue(false, Util.bind(\"build.unexpectedNumberType\"/*nonNLS*/));\r", "+\t\tAssert.isTrue(false, \"Unexpected type of number\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5c87aa18808e1d7624c41f1e13cbd4db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/StateSnapConstantPool.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public void add(SourceEntry entry)", "signatureAfterChange": "\r public void add(SourceEntry entry)", "diff": ["-\tAssert.isNotNull(entry, Util.bind(\"build.nullEntryInPool\"/*nonNLS*/));\r", "+\tAssert.isNotNull(entry, \"Null SourceEntry being added to StateSnapConstantPool\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6d9b888331b2885396bd50b6c75c2cf0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/DependencyGraph.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tINode deleteNode(INode toRemove)", "signatureAfterChange": "\r \tINode deleteNode(INode toRemove)", "diff": ["-\t\t\t\tAssert.isTrue(false, Util.bind(\"build.errorDeletingNode\"/*nonNLS*/));\r", "+\t\t\t\tAssert.isTrue(false, \"Attempt to delete unknown node type from dependency graph\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71d9ae93718076bce41afcb603fce190", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ImportContainer.java", "commitBeforeChange": "2553316bdc0b8032f2f4a80e15ded7371fde47b6", "commitAfterChange": "f0ac4e7feb4f3da2e95e255bf4e22a381e54030d", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected char getHandleMementoDelimiter()", "signatureAfterChange": " protected char getHandleMementoDelimiter()", "diff": ["-\tAssert.isTrue(false, Util.bind(\"assert.shouldNotImplement\")); //$NON-NLS-1$", "+\tAssert.isTrue(false, \"Should not be called\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897d49388814ea0ece4b6d338b63d87b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "2553316bdc0b8032f2f4a80e15ded7371fde47b6", "commitAfterChange": "f0ac4e7feb4f3da2e95e255bf4e22a381e54030d", "methodNumberBeforeChange": 56, "methodNumberAfterChange": 56, "signatureBeforeChange": " \tpublic static void setClasspathVariables( \t\tString[] variableNames, \t\tIPath[] paths, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathVariables( \t\tString[] variableNames, \t\tIPath[] paths, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\tAssert.isTrue(variableNames.length == paths.length, Util.bind(\"classpath.mismatchNamePath\" )); //$NON-NLS-1$", "+\t\tAssert.isTrue(variableNames.length == paths.length, \"Variable names and paths collections should have the same size\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a61e50330ebf71567fb3047ffcae4e09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "2553316bdc0b8032f2f4a80e15ded7371fde47b6", "commitAfterChange": "f0ac4e7feb4f3da2e95e255bf4e22a381e54030d", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tAssert.isTrue(affectedProjects.length == respectiveContainers.length, Util.bind(\"classpath.mismatchProjectsContainers\" )); //$NON-NLS-1$", "+\t\tAssert.isTrue(affectedProjects.length == respectiveContainers.length, \"Projects and containers collections should have the same size\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b68de670377b12c3b8ca8b351abcf61e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModel.java", "commitBeforeChange": "2553316bdc0b8032f2f4a80e15ded7371fde47b6", "commitAfterChange": "f0ac4e7feb4f3da2e95e255bf4e22a381e54030d", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected char getHandleMementoDelimiter()", "signatureAfterChange": " protected char getHandleMementoDelimiter()", "diff": ["-\tAssert.isTrue(false, Util.bind(\"assert.shouldNotImplement\")); //$NON-NLS-1$", "+\tAssert.isTrue(false, \"Should not be called\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bbfc4e550df4294e7cc4dba4205f547e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/DependencyGraph.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \tprotected Object clone()", "signatureAfterChange": "\r \tprotected Object clone()", "diff": ["-\t\t\tAssert.isTrue(false, Util.bind(\"build.cloneException\"/*nonNLS*/));\r", "+\t\t\tAssert.isTrue(false, \"Unexpected clone exception in DependencyGraph.clone()\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfa96d967343f12b8c9a2eb8664bb4e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/StateSnapConstantPool.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r private void read(IDevelopmentContext dc, DataInputStream in, StateSnapV5 snap) throws IOException", "signatureAfterChange": "\r private void read(IDevelopmentContext dc, DataInputStream in, StateSnapV5 snap) throws IOException", "diff": ["-\t\t\t\tthrow new IOException(Util.bind(\"build.unexpectedPoolItem\"/*nonNLS*/));\r", "+\t\t\t\tthrow new IOException(\"Unexpected kind of pool item\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cac1f82608820e8193164c06b100ac32", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/StateSnapV5.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r protected void addDependencyGraphToPool(StateImpl state, StateSnapConstantPool pool)", "signatureAfterChange": "\r protected void addDependencyGraphToPool(StateImpl state, StateSnapConstantPool pool)", "diff": ["-\t\t\t\tAssert.isTrue(false, Util.bind(\"build.unexpectedNode\"/*nonNLS*/));\r", "+\t\t\t\tAssert.isTrue(false, \"Unexpected kind of node\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1c8c72baabb6be994306e47ceeaaab3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/StateSnapConstantPool.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "\r public void write(DataOutputStream out) throws IOException", "signatureAfterChange": "\r public void write(DataOutputStream out) throws IOException", "diff": ["-\t\t\tAssert.isTrue(false, Util.bind(\"build.unexpectedPoolItem\"/*nonNLS*/));\r", "+\t\t\tAssert.isTrue(false, \"Unexpected kind of pool item\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4b12c41ba7b83025daf8d8e31297dbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/AbstractNode.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \tpublic boolean equals(Object o)", "signatureAfterChange": "\r \tpublic boolean equals(Object o)", "diff": ["-\t\tAssert.isTrue(false, Util.bind(\"build.noEqualityForNodes\"/*nonNLS*/));\r", "+\t\tAssert.isTrue(false, \"Internal Error - Equality not defined for dependency graph nodes\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5c0451b8538360660839a1b721f8aaf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/IndictmentSet.java", "commitBeforeChange": "05b313c1ebccd8136a07de8477552de6fc20b5e1", "commitAfterChange": "f391db9dfa982dbe09df7c4d362cd9e5a8546769", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "\r \tpublic void add(Indictment i)", "signatureAfterChange": "\r \tpublic void add(Indictment i)", "diff": ["-\t\t\t\t\tAssert.isTrue(false, Util.bind(\"build.unknownIndictment\"/*nonNLS*/));\r", "+\t\t\t\t\tAssert.isTrue(false, \"Internal Error - Unexpected kind of indictment\"/*nonNLS*/);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec6d6269b9b0890af678aaa0e0f580a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "2553316bdc0b8032f2f4a80e15ded7371fde47b6", "commitAfterChange": "f0ac4e7feb4f3da2e95e255bf4e22a381e54030d", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tpublic static void setClasspathVariable( \t\tString variableName, \t\tIPath path, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathVariable( \t\tString variableName, \t\tIPath path, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\tAssert.isTrue(path != null, Util.bind(\"classpath.nullVariablePath\" )); //$NON-NLS-1$", "+\t\tAssert.isTrue(path != null, \"Variable path cannot be null\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5048a99e5c676baee61ec19b5a53ea5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "5a02e3ef9eebbbfbf5479e7ec13a8eec010013e9", "commitAfterChange": "b525c03916a55b82c2a2a3976eed083d2d68c216", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate void disassemble(IClassFileReader classFileReader, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "signatureAfterChange": " \tprivate void disassemble(IClassFileReader classFileReader, IMethodInfo methodInfo, StringBuffer buffer, String lineSeparator, int tabNumber, int mode)", "diff": ["-\t\t\tbuffer.append(Util.bind(\"classfileformat.throws\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(\"throws\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5196c89449b92bb3641c5adc5c73ba3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "2553316bdc0b8032f2f4a80e15ded7371fde47b6", "commitAfterChange": "f0ac4e7feb4f3da2e95e255bf4e22a381e54030d", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic static IClasspathEntry newProjectEntry(IPath path, boolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newProjectEntry(IPath path, boolean isExported)", "diff": ["-\t\tAssert.isTrue(path.isAbsolute(), Util.bind(\"classpath.needAbsolutePath\" )); //$NON-NLS-1$", "+\t\tAssert.isTrue(path.isAbsolute(), \"Path for IClasspathEntry must be absolute\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f564f417fbb6f0631c4dbfc5ab92b560", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "2553316bdc0b8032f2f4a80e15ded7371fde47b6", "commitAfterChange": "f0ac4e7feb4f3da2e95e255bf4e22a381e54030d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic static IClasspathEntry newLibraryEntry( \t\tIPath path, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tboolean isExported)", "signatureAfterChange": " \tpublic static IClasspathEntry newLibraryEntry( \t\tIPath path, \t\tIPath sourceAttachmentPath, \t\tIPath sourceAttachmentRootPath, \t\tboolean isExported)", "diff": ["-\t\t\tUtil.bind(\"classpath.needAbsolutePath\" )); //$NON-NLS-1$", "+\t\t\t\"Path for IClasspathEntry must be absolute\"); //$NON-NLS-1$"]}], "num": 60694}