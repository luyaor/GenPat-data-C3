{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "834a2e054647a406af298a52d1898abe", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dad5c8336050ecd8bab4fd0668ef068", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "1bdf253b6c3e0502956ffbd356aa7f9c70660509", "commitAfterChange": "79857ed757b181d48665a94a07c64e0c91436988", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": " \t \tpublic void test0027() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0027() throws JavaModelException", "diff": ["+\t\tIVariableBinding binding = enumConstantDeclaration.resolveVariable();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"Wrong name\", \"PENNY\", binding.getName());", "+\t\tbinding = enumConstantDeclaration.resolveVariable();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"Wrong name\", \"NICKEL\", binding.getName());", "+\t\tbinding = enumConstantDeclaration.resolveVariable();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"Wrong name\", \"DIME\", binding.getName());", "+\t\tbinding = enumConstantDeclaration.resolveVariable();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"Wrong name\", \"QUARTER\", binding.getName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "187957992fef00eeb0b3de6485c85072", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "1dbf45ade1eaa8473579771e92825a7887776253", "commitAfterChange": "0fb8e6d8cd5771230b88c7189dc0d95f3a5da0e3", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprivate void verifyNameBindings(Name name)", "signatureAfterChange": " \tprivate void verifyNameBindings(Name name)", "diff": ["+\t\t\tint index = 0;", "-\t\t\t\tassertNotNull(simpleName+\" binding was not found!\", simpleName.resolveBinding());", "+\t\t\t\tIBinding binding = simpleName.resolveBinding();", "+\t\t\t\tassertNotNull(simpleName+\" binding was not found!\", binding);", "+\t\t\t\tif (index > 0 && this.packageBinding) {", "+\t\t\t\t\tassertEquals(\"Wrong binding type\", IBinding.PACKAGE, binding.getKind());", "+\t\t\t\t}", "+\t\t\t\tindex++;", "-\t\t\t\tassertNotNull(name+\" binding was not found!\", name.resolveBinding());", "+\t\t\t\tbinding = name.resolveBinding();", "+\t\t\t\tassertNotNull(name+\" binding was not found!\", binding);", "+\t\t\t\tif (this.packageBinding) {", "+\t\t\t\t\tassertEquals(\"Wrong binding type\", IBinding.PACKAGE, binding.getKind());", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2cae9ac82fd5e7d55e65a30bf436a36e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "833acf9fd171cc3b88beb3f35c58318abd7b1b7c", "commitAfterChange": "e83ae1e37e0f93b696a44a9888bf8d5e9425c659", "methodNumberBeforeChange": 241, "methodNumberAfterChange": 241, "signatureBeforeChange": " \t \tpublic void _test0227() throws JavaModelException", "signatureAfterChange": " \t \tpublic void test0227() throws JavaModelException", "diff": ["-\tpublic void _test0227() throws JavaModelException {", "+\tpublic void test0227() throws JavaModelException {", "-    \t\t\"\tpublic void f() {}\\n\" + ", "+    \t\t\t// the annotation we chase up is not this one, but the one", "+    \t\t\t// carried by B#f", "+    \t\t\"\tpublic void f() {}\\n\" +", "+    \t\t\"   IFoo.IBar m;\\n\" + ", "-\t\tassertTrue(\"not a type binding\", value instanceof ITypeBinding);", "-\t\tITypeBinding typeBinding2 = (ITypeBinding) value;", "-\t\tassertEquals(\"Wrong qualified name\", \"intf.IFoo.IBar\", typeBinding2.getQualifiedName());", "+\t\tassertTrue(\"Not a type binding\", value instanceof ITypeBinding);", "+\t\tIVariableBinding[] fields = ", "+\t\t\tdeclaration.resolveBinding().getDeclaredFields();", "+\t\tassertTrue(\"Bad field definition\", fields != null && fields.length == 1);", "+\t\tassertEquals(\"Type binding mismatch\", value, fields[0].getType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34cdc612f628406648b66223cb946c49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "1e22f37e66131cc9e23c709493c04076f31fc58e", "commitAfterChange": "07320ae1b15d683e6cba715cbbe3b5f425005448", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic void _test0073() throws JavaModelException", "signatureAfterChange": " \tpublic void test0073() throws JavaModelException", "diff": ["-\tpublic void _test0073() throws JavaModelException {", "+\tpublic void test0073() throws JavaModelException {", "+\t\tITypeBinding binding = parameterizedType.resolveBinding();", "+\t\tassertNotNull(\"No binding\", binding);", "-\t\tfinal ITypeBinding binding = type2.resolveBinding();", "-\t\tassertNotNull(\"No binding\", binding);", "+\t\tITypeBinding binding2 = type2.resolveBinding();", "+\t\tassertNotNull(\"No binding\", binding2);", "-\t\tITypeBinding binding2 = simpleName.resolveTypeBinding();", "-\t\tassertNotNull(\"No binding\", binding2);", "+\t\tITypeBinding binding3 = simpleName.resolveTypeBinding();", "+\t\tassertNotNull(\"No binding\", binding3);", "+\t\tassertTrue(\"Different binding\", binding3.isEqualTo(binding));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f03788bb2e62c75c3f1aa86fbed2a27", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "e0259efe596fb3e88871acf616821dc2f984a25a", "commitAfterChange": "6ccbe6e7a1eb8a287ad2e183536fbec86fa90b93", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic void test0040() throws JavaModelException", "signatureAfterChange": " \tpublic void test0040() throws JavaModelException", "diff": ["+\t\tASTNode node = getASTNode(compilationUnit, 0, 0);", "+\t\tassertEquals(\"Not a method declaration\", ASTNode.METHOD_DECLARATION, node.getNodeType());", "+\t\tMethodDeclaration methodDeclaration = (MethodDeclaration) node;", "+\t\tList typeParameters = methodDeclaration.typeParameters();", "+\t\tassertEquals(\"wrong size\", 1, typeParameters.size());", "+\t\tTypeParameter parameter = (TypeParameter) typeParameters.get(0);", "+\t\tIBinding binding = parameter.resolveBinding();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"wrong type\", IBinding.TYPE, binding.getKind());", "+\t\tassertEquals(\"wrong key\", \"T:test0040/A/test0040.Tfoo()\", binding.getKey());", "+\t\tType returnType = methodDeclaration.getReturnType2();", "+\t\tIBinding binding2 = returnType.resolveBinding();", "+\t\tassertNotNull(\"No binding\", binding2);", "+\t\tassertEquals(\"wrong type\", IBinding.TYPE, binding2.getKind());", "+\t\tassertEquals(\"wrong key\", \"T:test0040/A/test0040.Tfoo()\", binding2.getKey());\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "579c0a10db6ab669b934ed5a23e6cf95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter18Test.java", "commitBeforeChange": "9b4643830ee06b9ae3b83a25e11220a2814a6ade", "commitAfterChange": "857474872b3b285c254583d672bce0e505994b35", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void testBug404489a() throws JavaModelException", "signatureAfterChange": " \tpublic void testBug404489a() throws JavaModelException", "diff": ["+\t\tSimpleType simpleType = (SimpleType) qualifiedType.getQualifier();", "+\t\tassertEquals(\"incorrect type\", \"@A X\", simpleType.toString());", "+\t\tbinding = simpleType.resolveBinding();", "+\t\tassertNotNull(\"No binding\", binding);", "+\t\tassertEquals(\"Wrong qualified name\", \"test404489.bug.X\", binding.getQualifiedName());", "-\t\tSimpleType simpleType = (SimpleType) qualifiedType.getQualifier();", "+\t\tsimpleType = (SimpleType) qualifiedType.getQualifier();", "-\t\tassertEquals(\"Wrong qualified name\", \"test404489.bug.X.Y\", binding.getQualifiedName());", "+\t\tassertEquals(\"Wrong qualified name\", \"test404489.bug.X\", binding.getQualifiedName());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f43931d83631c40a44fa4145dec6511a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "0b12d287970a543efa74b3f16f5eaa0f1a0fc0f9", "commitAfterChange": "6e0407bfb74a28f835049dc8c47aa0d5efd146ea", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void test0037() throws JavaModelException", "signatureAfterChange": " \tpublic void test0037() throws JavaModelException", "diff": ["+\t\tSimpleName simpleName = typeParameter.getName();", "+\t\tassertEquals(\"Wrong name\", \"Y\", simpleName.getIdentifier());", "+\t\tIBinding binding2 = simpleName.resolveBinding();", "+\t\tassertNotNull(\"No binding\", binding2);", "+\t\tassertEquals(\"Wrong type\", IBinding.TYPE, binding2.getKind());", "+\t\tITypeBinding typeBinding2 = (ITypeBinding) binding2;", "+\t\tassertEquals(\"Wrong name\", \"Y\", typeBinding2.getName());", "+\t\tITypeBinding typeBinding3 = simpleName.resolveTypeBinding();", "+\t\tassertNotNull(\"No binding\", typeBinding3);", "+\t\tassertEquals(\"Wrong type\", IBinding.TYPE, typeBinding3.getKind());", "+\t\tassertEquals(\"Wrong name\", \"Y\", typeBinding3.getName());"]}], "num": 46300}