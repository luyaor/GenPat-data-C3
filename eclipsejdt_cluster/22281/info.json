{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b93e399b4431e2cffb0b9e63dacc45d5", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24a5f7140d08b55f60cdcf76c127b717", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "be06cbd679eb1986b6f0bdf5bd668f84ace503d5", "commitAfterChange": "dcc13bcc231a91a0da132c3e6be02c0dee1633d4", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic IMarker[] getTaskMarkersFor(IPath path)", "signatureAfterChange": " \tpublic IMarker[] getTaskMarkersFor(IPath path)", "diff": ["-\t\t\t\treturn resource.findMarkers(IJavaModelMarker.TASK_MARKER, true, IResource.DEPTH_INFINITE);", "+\t\t\t\tfinal IMarker[] markers = resource.findMarkers(IJavaModelMarker.TASK_MARKER, true, IResource.DEPTH_INFINITE);", "+\t\t\t\tArrays.sort(markers, new Comparator() {", "+\t\t\t\t\tpublic int compare(Object o1, Object o2) {", "+\t\t\t\t\t\tIMarker marker1 = (IMarker) o1;", "+\t\t\t\t\t\tIMarker marker2 = (IMarker) o2;", "+\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\tfinal int start1 = ((Integer) marker1.getAttribute(IMarker.CHAR_START)).intValue();", "+\t\t\t\t\t\t\tfinal int start2 = ((Integer) marker2.getAttribute(IMarker.CHAR_START)).intValue();", "+\t\t\t\t\t\t\treturn start1 - start2;", "+\t\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t});", "+\t\t\t\treturn markers;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7068bf869c249f1525d452b23528af9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "dcc13bcc231a91a0da132c3e6be02c0dee1633d4", "commitAfterChange": "025681891696756dee175279859f47fc45429f5e", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic IMarker[] getTaskMarkersFor(IPath path)", "signatureAfterChange": " \tpublic IMarker[] getTaskMarkersFor(IPath path)", "diff": ["-\t\t\t\tArrays.sort(markers, new Comparator() {", "-\t\t\t\t\tpublic int compare(Object o1, Object o2) {", "-\t\t\t\t\t\tIMarker marker1 = (IMarker) o1;", "-\t\t\t\t\t\tIMarker marker2 = (IMarker) o2;", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tfinal int start1 = ((Integer) marker1.getAttribute(IMarker.CHAR_START)).intValue();", "-\t\t\t\t\t\t\tfinal int start2 = ((Integer) marker2.getAttribute(IMarker.CHAR_START)).intValue();", "-\t\t\t\t\t\t\treturn start1 - start2;", "-\t\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\t\treturn 0;", "+\t\t\t\tif (markers.length > 1) {", "+\t\t\t\t\tArrays.sort(markers, new Comparator() {", "+\t\t\t\t\t\tpublic int compare(Object o1, Object o2) {", "+\t\t\t\t\t\t\tIMarker marker1 = (IMarker) o1;", "+\t\t\t\t\t\t\tIMarker marker2 = (IMarker) o2;", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tfinal int start1 = ((Integer) marker1.getAttribute(IMarker.CHAR_START)).intValue();", "+\t\t\t\t\t\t\t\tfinal int start2 = ((Integer) marker2.getAttribute(IMarker.CHAR_START)).intValue();", "+\t\t\t\t\t\t\t\treturn start1 - start2;", "+\t\t\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t});", "+\t\t\t\t\t});", "+\t\t\t\t}"]}], "num": 22281}