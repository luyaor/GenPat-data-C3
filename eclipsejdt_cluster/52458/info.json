{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8c47da8b64022459933ef6edc0a228a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "21497d592e6c5086c7e422bf469a486f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "3acaf9f2cc7da97a00b2acb627c9215063ca971e", "commitAfterChange": "30bcd436389796ede9b25cfba962b4a18b7675bd", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\tFlowInfo preTryBodyFlowInfo = flowInfo.copy();", "-\t\t\tflowInfo = this.resources[i].analyseCode(currentScope, handlingContext, flowInfo.copy());", "-\t\t\tthis.postResourcesInitStateIndexes[i] = currentScope.methodScope().recordInitializationStates(flowInfo);", "+\t\t\tpreTryBodyFlowInfo = this.resources[i].analyseCode(currentScope, handlingContext, preTryBodyFlowInfo);", "+\t\t\tthis.postResourcesInitStateIndexes[i] = currentScope.methodScope().recordInitializationStates(preTryBodyFlowInfo);", "-\t\t\t\t\t\thandlingContext.checkExceptionHandlers(thrownExceptions[j], this.resources[i], flowInfo, currentScope, true);", "+\t\t\t\t\t\thandlingContext.checkExceptionHandlers(thrownExceptions[j], this.resources[i], preTryBodyFlowInfo, currentScope, true);", "-\t\t\ttryInfo = flowInfo;", "+\t\t\ttryInfo = preTryBodyFlowInfo;", "-\t\t\ttryInfo = this.tryBlock.analyseCode(currentScope, handlingContext, flowInfo.copy());", "+\t\t\ttryInfo = this.tryBlock.analyseCode(currentScope, handlingContext, preTryBodyFlowInfo);", "+\t\tFlowInfo preTryBlockFlowInfo = flowInfo.copy();", "-\t\t\tflowInfo = this.resources[i].analyseCode(currentScope, handlingContext, flowInfo.copy());", "-\t\t\tthis.postResourcesInitStateIndexes[i] = currentScope.methodScope().recordInitializationStates(flowInfo);", "+\t\t\tpreTryBlockFlowInfo = this.resources[i].analyseCode(currentScope, handlingContext, preTryBlockFlowInfo);", "+\t\t\tthis.postResourcesInitStateIndexes[i] = currentScope.methodScope().recordInitializationStates(preTryBlockFlowInfo);", "-\t\t\t\t\t\thandlingContext.checkExceptionHandlers(thrownExceptions[j], this.resources[i], flowInfo, currentScope, true);", "+\t\t\t\t\t\thandlingContext.checkExceptionHandlers(thrownExceptions[j], this.resources[i], preTryBlockFlowInfo, currentScope, true);", "-\t\t\ttryInfo = flowInfo;", "+\t\t\ttryInfo = preTryBlockFlowInfo;", "-\t\t\ttryInfo = this.tryBlock.analyseCode(currentScope, handlingContext, flowInfo.copy());", "+\t\t\ttryInfo = this.tryBlock.analyseCode(currentScope, handlingContext, preTryBlockFlowInfo);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54cb74b18b34cf8e7d8d29dd4c07dbcd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "d93134db10799af61489a9927044406c2353d246", "commitAfterChange": "c4beaedd10d4a8f9b9c00524348c70568b6af6c6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tFlowInfo preTryBodyFlowInfo = flowInfo.copy();", "+\t\tFlowInfo tryInfo = flowInfo.copy();", "-\t\t\tpreTryBodyFlowInfo = this.resources[i].analyseCode(currentScope, handlingContext, preTryBodyFlowInfo);", "-\t\t\tthis.postResourcesInitStateIndexes[i] = currentScope.methodScope().recordInitializationStates(preTryBodyFlowInfo);", "+\t\t\ttryInfo = this.resources[i].analyseCode(currentScope, handlingContext, tryInfo);", "+\t\t\tthis.postResourcesInitStateIndexes[i] = currentScope.methodScope().recordInitializationStates(tryInfo);", "-\t\t\t\t\t\thandlingContext.checkExceptionHandlers(thrownExceptions[j], this.resources[i], preTryBodyFlowInfo, currentScope, true);", "+\t\t\t\t\t\thandlingContext.checkExceptionHandlers(thrownExceptions[j], this.resources[i], tryInfo, currentScope, true);", "-\t\tFlowInfo tryInfo;", "-\t\tif (this.tryBlock.isEmptyBlock()) {", "-\t\t\ttryInfo = preTryBodyFlowInfo;", "-\t\t} else {", "-\t\t\ttryInfo = this.tryBlock.analyseCode(currentScope, handlingContext, preTryBodyFlowInfo);", "+\t\tif (!this.tryBlock.isEmptyBlock()) {", "+\t\t\ttryInfo = this.tryBlock.analyseCode(currentScope, handlingContext, tryInfo);", "-\t\tFlowInfo preTryBlockFlowInfo = flowInfo.copy();", "+\t\tFlowInfo tryInfo = flowInfo.copy();", "-\t\t\tpreTryBlockFlowInfo = this.resources[i].analyseCode(currentScope, handlingContext, preTryBlockFlowInfo);", "-\t\t\tthis.postResourcesInitStateIndexes[i] = currentScope.methodScope().recordInitializationStates(preTryBlockFlowInfo);", "+\t\t\ttryInfo = this.resources[i].analyseCode(currentScope, handlingContext, tryInfo);", "+\t\t\tthis.postResourcesInitStateIndexes[i] = currentScope.methodScope().recordInitializationStates(tryInfo);", "-\t\t\t\t\t\thandlingContext.checkExceptionHandlers(thrownExceptions[j], this.resources[i], preTryBlockFlowInfo, currentScope, true);", "+\t\t\t\t\t\thandlingContext.checkExceptionHandlers(thrownExceptions[j], this.resources[i], tryInfo, currentScope, true);", "-\t\tFlowInfo tryInfo;", "-\t\tif (this.tryBlock.isEmptyBlock()) {", "-\t\t\ttryInfo = preTryBlockFlowInfo;", "-\t\t} else {", "-\t\t\ttryInfo = this.tryBlock.analyseCode(currentScope, handlingContext, preTryBlockFlowInfo);", "+\t\tif (!this.tryBlock.isEmptyBlock()) {", "+\t\t\ttryInfo = this.tryBlock.analyseCode(currentScope, handlingContext, tryInfo);"]}], "num": 52458}