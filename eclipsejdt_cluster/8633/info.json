{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b639e408597625cc9feb7743c72e1667", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "844e14ec054666866a81a0f341367354", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/BinaryIndexer.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate void extractReferenceFromConstantPool(byte[] contents, ClassFileReader reader) throws ClassFormatException", "signatureAfterChange": " \tprivate void extractReferenceFromConstantPool(byte[] contents, ClassFileReader reader) throws ClassFormatException", "diff": ["-\t\t\t\t\t\t// add a constructor reference", "-\t\t\t\t\t\tchar[] className = replace('/', '.', extractClassName(constantPoolOffsets, reader, i)); // so that it looks like java.lang.String", "-\t\t\t\t\t\taddConstructorReference(className, extractArgCount(type));", "+\t\t\t\t\t\t// get class name and see if it's a local type or not", "+\t\t\t\t\t\tchar[] className = extractClassName(constantPoolOffsets, reader, i);", "+\t\t\t\t\t\tboolean localType = false;", "+\t\t\t\t\t\tif (className !=  null) {", "+\t\t\t\t\t\t\tfor (int c = 0, max = className.length; c < max; c++) {", "+\t\t\t\t\t\t\t\tswitch (className[c]) {", "+\t\t\t\t\t\t\t\t\tcase '/':", "+\t\t\t\t\t\t\t\t\t\tclassName[c] = '.';", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t\tcase '$':", "+\t\t\t\t\t\t\t\t\t\tlocalType = true;", "+\t\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t// add a constructor reference, use class name to extract arg count if it's a local type to remove synthetic parameter", "+\t\t\t\t\t\taddConstructorReference(className, extractArgCount(type, localType?className:null));", "-\t\t\t\t\t\taddMethodReference(name, extractArgCount(type));", "+\t\t\t\t\t\taddMethodReference(name, extractArgCount(type, null));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91eacada5cef07239368753f02caa653", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3acd0c7c3783a0971d4796127903b77eaaaa4fe8", "commitAfterChange": "34c10732bc825eb0d60f9ca451e5bffcde825629", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": "  \tprotected void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": "  \tprotected void findFieldsAndMethods( \t\tchar[] token, \t\tTypeBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\t\t\t\tcreateMethodSignature(", "-\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "-\t\t\t\t\t\t\t\t\tCharOperation.concatWith(JAVA_LANG, '.'),", "-\t\t\t\t\t\t\t\t\tOBJECT));", "+\t\t\t\t\t\t\tthis.compilerOptions.sourceLevel > ClassFileConstants.JDK1_4 && receiverType.isArrayType() ?", "+\t\t\t\t\t\t\t\t\tcreateMethodSignature(", "+\t\t\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\t\t\t\tgetSignature(receiverType)) :", "+\t\t\t\t\t\t\t\t\tcreateMethodSignature(", "+\t\t\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\t\t\t\tCharOperation.NO_CHAR_CHAR,", "+\t\t\t\t\t\t\t\t\t\t\tCharOperation.concatWith(JAVA_LANG, '.'),", "+\t\t\t\t\t\t\t\t\t\t\tOBJECT));"]}], "num": 8633}