{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "11cf28205924fa41c1727e95e6369ade", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ab06b0a1b81949c879c7b2fc027a5c2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "0cdfa4a20d7efcfc7530ed5117682b5beffbec92", "commitAfterChange": "bb52fb238d7a2ec2262456ebe1c6375c54c6da32", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public AnnotationBinding createAnnotation(ReferenceBinding annotationType, ElementValuePair[] pairs)", "signatureAfterChange": " public AnnotationBinding createAnnotation(ReferenceBinding annotationType, ElementValuePair[] pairs)", "diff": ["+\t\t\t\t\t\t\tif (pair.value == null) {", "+\t\t\t\t\t\t\t\tif (pair2.value == null) {", "+\t\t\t\t\t\t\t\t\tcontinue loop;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\tcontinue nextCachedType;", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tif (pair2.value == null", "+\t\t\t\t\t\t\t\t\t\t|| !pair2.value.equals(pair.value)) {", "+\t\t\t\t\t\t\t\t\tcontinue nextCachedType;", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69d931fa66da97c50c3597289ce44fe2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/AnnotationMirrorImpl.java", "commitBeforeChange": "2a851009aaa407c5e4c32cb132dfb84271f2e7fd", "commitAfterChange": "2d801bf770aaf09259e660518c988fbfdf829ec5", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate static boolean equals(AnnotationBinding annotationBinding, AnnotationBinding annotationBinding2)", "signatureAfterChange": "  \tprivate static boolean equals(AnnotationBinding annotationBinding, AnnotationBinding annotationBinding2)", "diff": ["-\t\t\t\t\t\tif (pair2.value == null", "-\t\t\t\t\t\t\t\t|| !pair2.value.equals(pair.value)) {", "+\t\t\t\t\t\tif (pair2.value == null) return false;", "+\t\t\t\t\t\tif (pair2.value instanceof Object[] && pair.value instanceof Object[]) {", "+\t\t\t\t\t\t\tif (!Arrays.equals((Object[]) pair.value, (Object[]) pair2.value)) {", "+\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else if (!pair2.value.equals(pair.value)){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89138c7caee84fec77477e66428b4dc8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/CompilationUnitSorter.java", "commitBeforeChange": "f088819455a71b45548a596058f67b6352ed6ea3", "commitAfterChange": "d8924c5474634641f5ba8e8d6797d0147577e226", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t\tpublic int compare(Object o1, Object o2)", "signatureAfterChange": " \t\tpublic int compare(Object o1, Object o2)", "diff": ["-\t\t\t// TODO: (olivier) remove unnecessary null checks", "-\t\t\tif (node1Signature == null || node2Signature == null) {", "-\t\t\t\treturn 0;", "-\t\t\t} else if (node1Signature.length() != 0 && node2Signature.length() != 0) {", "+\t\t\tif (node1Signature.length() != 0 && node2Signature.length() != 0) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf4167b2bc6dfaab742aa222a86581f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "e3216b16627ead1fc92c7b9c7ba781e891ae2552", "commitAfterChange": "43497388c1b074873dbf4e928e2bdb93bbcc87f9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected int classpathContains( \t\tIClasspathEntry[] list, \t\tIClasspathEntry entry)", "signatureAfterChange": " \tprotected int classpathContains( \t\tIClasspathEntry[] list, \t\tIClasspathEntry entry)", "diff": ["-\t\t\t\t\tif (exclusionPatterns == null) {", "-\t\t\t\t\t\tif (otherExcludes != null)", "-\t\t\t\t\t\t\tcontinue;", "-\t\t\t\t\t} else {", "+\t\t\t\t\tif (exclusionPatterns != otherExcludes) {", "-\t\t\t\t\t\tif (otherExcludes == null || otherExcludes.length != excludeLength)", "+\t\t\t\t\t\tif (otherExcludes.length != excludeLength)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de420e72aa09ee8a6eb52e2d3d3d95a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "ba10f45041825dbf68cbcdf31a0ebf684627c110", "commitAfterChange": "02eaea91c32c7f6f2f7d5c5c521c03ffb22cea04", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \t\tpublic int logProblems(IProblem[] problems, char[] unitSource, Main currentMain)", "signatureAfterChange": "  \t\tpublic int logProblems(IProblem[] problems, char[] unitSource, Main currentMain)", "diff": ["+\t\t\t\t\t\t\t} else if (problem.getID() == IProblem.Task) {", "+\t\t\t\t\t\t\t\tcurrentMain.globalTasksCount++;", "+\t\t\t\t\t\t\t\ttasks++;", "-\t\t\t\t\t\t\t\tif (problem.getID() == IProblem.Task) {", "-\t\t\t\t\t\t\t\t\tcurrentMain.globalTasksCount++;", "-\t\t\t\t\t\t\t\t\ttasks++;", "-\t\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\t\twarnings++;", "-\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\twarnings++;"]}], "num": 15646}