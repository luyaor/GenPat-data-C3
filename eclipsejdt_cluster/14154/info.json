{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e133a7b84a02b0e13b87a3744dd943f0", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c10c4fc0c6d0bbb49941b51efb94101", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedSourceFolderManager.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tprivate void removeFolder(final IFolder srcFolder)", "signatureAfterChange": " \tprivate void removeFolder()", "diff": ["-\tprivate void removeFolder(final IFolder srcFolder) {", "-\t\tif( srcFolder != null ){", "-\t\t\tfinal IWorkspaceRunnable runnable = new IWorkspaceRunnable(){", "-\t            public void run(IProgressMonitor monitor)", "-\t            {\t\t", "-\t            \tif( srcFolder != null ){", "-\t\t            \ttry{", "-\t\t            \t\tsrcFolder.delete(true, false, null);", "-\t\t            \t}catch(CoreException e){", "-\t\t            \t\tAptPlugin.log(e, \"failed to delete old generated source folder \" + srcFolder.getName() ); //$NON-NLS-1$", "-\t\t            \t}catch(OperationCanceledException cancel){", "-\t\t            \t\tAptPlugin.log(cancel, \"deletion of generated source folder got cancelled\"); //$NON-NLS-1$", "-\t\t            \t}", "-\t            \t}", "-\t            };", "-\t        };", "-\t        IWorkspace ws = _aptProject.getJavaProject().getProject().getWorkspace();", "-\t        try{", "-\t        \tws.run(runnable, ws.getRoot(), IWorkspace.AVOID_UPDATE, null);", "-\t        }catch(CoreException e){", "-\t    \t\tAptPlugin.log(e, \"Runnable for deleting old generated source folder \" + srcFolder.getName() + \" failed.\"); //$NON-NLS-1$ //$NON-NLS-2$", "-\t    \t}", "+\tprivate void removeFolder() {", "+\t\tIFolder srcFolder = null;", "+\t\tsynchronized ( this )", "+\t\t{", "+\t\t\tsrcFolder = _generatedSourceFolder;", "+\t\t\t_generatedSourceFolder = null;", "+\t\tif (srcFolder == null) {", "+\t\t\treturn;", "+\t\t}", "+\t\t", "+\t\t// Clear out the generated file maps", "+\t\t_aptProject.projectClean(false);", "+\t\t", "+\t\t// clean up the classpath first so that when we actually delete the ", "+\t\t// generated source folder we won't cause a classpath error.", "+\t\ttry {\t", "+\t\t\tClasspathUtil.removeFromProjectClasspath( _aptProject.getJavaProject(), srcFolder, null );\t\t", "+\t\t} catch (JavaModelException e) {", "+\t\t\tAptPlugin.log( e, \"Failed to remove classpath entry for old generated src folder \" + srcFolder.getName() ); //$NON-NLS-1$", "+\t\t}", "+\t\t", "+\t\tFileSystemUtil.deleteFolder(srcFolder);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9e586c6f355c9d8f4cdeddf4900ff23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "05a3e6b542ee827cf511d126431eeeeff129c0c5", "commitAfterChange": "c203fa24cd19d35decddec98e524ad9aa8271741", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 503, "signatureBeforeChange": "  \tvoid createTestCase(String contents, int counter)", "signatureAfterChange": " \tpublic void test484()", "diff": ["-", "-\tvoid createTestCase(String contents, int counter) {", "-\t\tSystem.out.println(\"Create test \" + counter);", "-\t\ttry {", "-\t\t\tFile testDir = new File(\"D:/workspaces/eclipse/plugins/org.eclipse.jdt.core.tests.model/workspace/Formatter\", \"test\" + counter);", "-\t\t\ttestDir.mkdirs();", "-\t\t\tBufferedWriter writer = new BufferedWriter(new FileWriter(new File(testDir, \"A_in.java\")));", "-\t\t\twriter.write(contents);", "-\t\t\twriter.flush();", "-\t\t\twriter.close();", "-\t\t\twriter = new BufferedWriter(new FileWriter(new File(testDir, \"A_out.java\")));", "-\t\t\twriter.write(contents);", "-\t\t\twriter.flush();", "-\t\t\twriter.close();", "-\t\t} catch (IOException e) {", "-\t\t\te.printStackTrace();", "-\t\t}", "-\t\tSystem.out.println(\"Done test \" + counter);", "-\t}", "+\t */", "+\tpublic void test484() {", "+\t\tMap options = DefaultCodeFormatterConstants.getDefaultSettings();", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_NUMBER_OF_EMPTY_LINES_TO_PRESERVE, \"1\");//$NON-NLS-1$", "+\t\tDefaultCodeFormatterOptions preferences = new DefaultCodeFormatterOptions(options);", "+\t\tDefaultCodeFormatter codeFormatter = new DefaultCodeFormatter(preferences);", "+\t\trunTest(codeFormatter, \"test484\", \"A.java\", CodeFormatter.K_COMPILATION_UNIT);//$NON-NLS-1$ //$NON-NLS-2$", "+\t}"]}], "num": 14154}