{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a8528a0d900e0c6d259425ed7c52afc1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22419f7aa2280ff8522cbb1cdc442013", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "8c93d4e99b8a943865cb7391e781eba5bb83dfc9", "commitAfterChange": "bd0edd7688142c1743cb6b10766dfc576040f113", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-\t\t// check missing blank final field initializations", "+\t\t// check missing blank final field initializations (plus @NonNull)", "-\t\t\t\tFieldBinding field;", "-\t\t\t\tif ((!(field = fields[i]).isStatic())", "-\t\t\t\t\t&& field.isFinal()", "-\t\t\t\t\t&& (!flowInfo.isDefinitelyAssigned(fields[i]))) {", "-\t\t\t\t\tthis.scope.problemReporter().uninitializedBlankFinalField(", "-\t\t\t\t\t\tfield,", "-\t\t\t\t\t\t((this.bits & ASTNode.IsDefaultConstructor) != 0) ? (ASTNode) this.scope.referenceType() : this);", "+\t\t\t\tFieldBinding field = fields[i];", "+\t\t\t\tif (!field.isStatic()) {", "+\t\t\t\t\tif (field.isFinal()", "+\t\t\t\t\t\t\t&& (!flowInfo.isDefinitelyAssigned(field))) {", "+\t\t\t\t\t\tthis.scope.problemReporter().uninitializedBlankFinalField(", "+\t\t\t\t\t\t\t\tfield,", "+\t\t\t\t\t\t\t\t((this.bits & ASTNode.IsDefaultConstructor) != 0) ? (ASTNode) this.scope.referenceType() : this);", "+\t\t\t\t\t} else if (field.isNonNull()) {", "+\t\t\t\t\t\tif (!flowInfo.isDefinitelyAssigned(field)) {", "+\t\t\t\t\t\t\tthis.scope.problemReporter().uninitializedNonNullField(", "+\t\t\t\t\t\t\t\t\tfield,", "+\t\t\t\t\t\t\t\t\t((this.bits & ASTNode.IsDefaultConstructor) != 0) ? (ASTNode) this.scope.referenceType() : this);\t\t\t\t\t\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5a995df1fac822ece7c35365f063e20b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ConstructorDeclaration.java", "commitBeforeChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "commitAfterChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "signatureAfterChange": " public void analyseCode(ClassScope classScope, InitializationFlowContext initializerFlowContext, FlowInfo flowInfo, int initialReachMode)", "diff": ["-\t\t// check missing blank final field initializations (plus @NonNull)", "+\t\t// check missing blank final field initializations", "-\t\t\t\tFieldBinding field = fields[i];", "-\t\t\t\tif (!field.isStatic()) {", "-\t\t\t\t\tif (field.isFinal()", "-\t\t\t\t\t\t\t&& (!flowInfo.isDefinitelyAssigned(field))) {", "-\t\t\t\t\t\tthis.scope.problemReporter().uninitializedBlankFinalField(", "-\t\t\t\t\t\t\t\tfield,", "-\t\t\t\t\t\t\t\t((this.bits & ASTNode.IsDefaultConstructor) != 0) ? (ASTNode) this.scope.referenceType() : this);", "-\t\t\t\t\t} else if (field.isNonNull()) {", "-\t\t\t\t\t\tif (!flowInfo.isDefinitelyAssigned(field)) {", "-\t\t\t\t\t\t\tthis.scope.problemReporter().uninitializedNonNullField(", "-\t\t\t\t\t\t\t\t\tfield,", "-\t\t\t\t\t\t\t\t\t((this.bits & ASTNode.IsDefaultConstructor) != 0) ? (ASTNode) this.scope.referenceType() : this);\t\t\t\t\t\t", "-\t\t\t\t\t\t}", "-\t\t\t\t\t}", "+\t\t\t\tFieldBinding field;", "+\t\t\t\tif ((!(field = fields[i]).isStatic())", "+\t\t\t\t\t&& field.isFinal()", "+\t\t\t\t\t&& (!flowInfo.isDefinitelyAssigned(fields[i]))) {", "+\t\t\t\t\tthis.scope.problemReporter().uninitializedBlankFinalField(", "+\t\t\t\t\t\tfield,", "+\t\t\t\t\t\t((this.bits & ASTNode.IsDefaultConstructor) != 0) ? (ASTNode) this.scope.referenceType() : this);"]}], "num": 37698}