{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e62e663eb0193ad6cdf80c1c9c69a484", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "adfa172fd3ed172a213c77f8ee2ad2b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FactoryPathUtil.java", "commitBeforeChange": "cd183320c3c7103a7cac7c96f1ba42f087c13d49", "commitAfterChange": "9318beb1001c9d1a97d62cd25a1df5140d1d4221", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic static synchronized Map<FactoryContainer, Boolean> getAllContainers(IJavaProject jproj)", "signatureAfterChange": " \tpublic static synchronized Map<FactoryContainer, Boolean> getAllContainers(IJavaProject jproj)", "diff": ["-\t\t\t\tce.printStackTrace();", "+\t\t\t\tAptPlugin.log(ce, \"Could not get factory containers for project: \" + jproj);", "-\t\t\t\tioe.printStackTrace();", "+\t\t\t\tAptPlugin.log(ioe, \"Could not get factory containers for project: \" + jproj);", "-\t\t\t\tce.printStackTrace();", "+\t\t\t\tAptPlugin.log(ce, \"Could not get factory containers for project: \" + jproj);", "-\t\t\t\tioe.printStackTrace();", "+\t\t\t\tAptPlugin.log(ioe, \"Could not get factory containers for project: \" + jproj);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5c88b49be1dce00cf6a635353487ca4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 832, "methodNumberAfterChange": 832, "signatureBeforeChange": " public void test826()", "signatureAfterChange": " public void test826()", "diff": ["-\t\t\"1. WARNING in X.java (at line 10)\\n\" + ", "+\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\"\tX t1 = new X();\\n\" + ", "+\t\t\"\t^\\n\" + ", "+\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"2. WARNING in X.java (at line 9)\\n\" + ", "+\t\t\"\tX t1 = new X();\\n\" + ", "+\t\t\"\t           ^\\n\" + ", "+\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\"----------\\n\" + ", "+\t\t\"3. WARNING in X.java (at line 10)\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 14)\\n\" + ", "+\t\t\"4. ERROR in X.java (at line 14)\\n\" + "]}], "num": 37651}