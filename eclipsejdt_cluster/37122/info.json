{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3fc3f69583b76fbd072518572cb897cf", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d893c9197a135f19b07bea07ab91670a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "4bfbcab36fb89b16cf210b2b9fb5423da164ca27", "commitAfterChange": "f8d11ef45ee47eccac4f4a1fef52a70287187d6c", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 238, "signatureBeforeChange": " \tpublic void migrateObsoleteOption(Map options, String optionName, String optionValue)", "signatureAfterChange": " \tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences)", "diff": ["-\t */", "-\tpublic void migrateObsoleteOption(Map options, String optionName, String optionValue) {", "-", "-\t\t// Migrate formatter options", "-\t\tString[] compatibleConstants = getFormatterCompatibleConstants(optionName);", "-\t\tif (compatibleConstants != null) {", "-\t\t\tfor (int i=0, length=compatibleConstants.length; i < length; i++) {", "-\t\t\t\toptions.put(compatibleConstants[i], optionValue);", "-\t\t\t}", "-\t\t\treturn;", "-\t\t}", "-\t}", "+\t */", "+\tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences) {", "+\t\tint optionLevel = this.getOptionLevel(optionName);", "+\t\tif (optionLevel == UNKNOWN_OPTION) return false; // unrecognized option", "+\t\t", "+\t\t// Store option value", "+\t\tswitch (optionLevel) {", "+\t\t\tcase JavaModelManager.VALID_OPTION:", "+\t\t\t\tif (optionValue == null) {", "+\t\t\t\t\teclipsePreferences.remove(optionName);", "+\t\t\t\t} else {", "+\t\t\t\t\teclipsePreferences.put(optionName, optionValue);", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tcase JavaModelManager.DEPRECATED_OPTION:", "+\t\t\t\t// Try to migrate deprecated option", "+\t\t\t\teclipsePreferences.remove(optionName); // get rid off old preference", "+\t\t\t\tString[] compatibleOptions = (String[]) this.deprecatedOptions.get(optionName);", "+\t\t\t\tfor (int co=0, length=compatibleOptions.length; co < length; co++) {", "+\t\t\t\t\tif (optionValue == null) {", "+\t\t\t\t\t\teclipsePreferences.remove(compatibleOptions[co]);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\teclipsePreferences.put(compatibleOptions[co], optionValue);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tbreak;", "+\t\t\tdefault:", "+\t\t\t\treturn false;", "+\t\t}", "+\t\treturn true;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e423c5ab59d953f95006ba7f05ea3a3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "54632eb8b3fc718083fd85b7fed41bcce1a85dc7", "commitAfterChange": "bfb03069bc857fa6dbdefe509f7d5cec8610c33c", "methodNumberBeforeChange": 233, "methodNumberAfterChange": 105, "signatureBeforeChange": " \tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences)", "signatureAfterChange": " \tpublic void migrateObsoleteOption(Map options, String optionName, String optionValue)", "diff": ["+\t */", "+\tpublic void migrateObsoleteOption(Map options, String optionName, String optionValue) {", "+", "+\t\t// Migrate formatter options", "+\t\tString[] compatibleConstants = getFormatterCompatibleConstants(optionName);", "+\t\tif (compatibleConstants != null) {", "+\t\t\tfor (int i=0, length=compatibleConstants.length; i < length; i++) {", "+\t\t\t\toptions.put(compatibleConstants[i], optionValue);", "+\t\t\t}", "+\t\t\treturn;", "+\t\t}", "+\t}", "-\t */", "-\tpublic boolean storePreference(String optionName, String optionValue, IEclipsePreferences eclipsePreferences) {", "-\t\tint optionLevel = this.getOptionLevel(optionName);", "-\t\tif (optionLevel == UNKNOWN_OPTION) return false; // unrecognized option", "-\t\t", "-\t\t// Store option value", "-\t\tswitch (optionLevel) {", "-\t\t\tcase JavaModelManager.VALID_OPTION:", "-\t\t\t\tif (optionValue == null) {", "-\t\t\t\t\teclipsePreferences.remove(optionName);", "-\t\t\t\t} else {", "-\t\t\t\t\teclipsePreferences.put(optionName, optionValue);", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tcase JavaModelManager.DEPRECATED_OPTION:", "-\t\t\t\t// Try to migrate deprecated option", "-\t\t\t\teclipsePreferences.remove(optionName); // get rid off old preference", "-\t\t\t\tString[] compatibleOptions = (String[]) this.deprecatedOptions.get(optionName);", "-\t\t\t\tfor (int co=0, length=compatibleOptions.length; co < length; co++) {", "-\t\t\t\t\tif (optionValue == null) {", "-\t\t\t\t\t\teclipsePreferences.remove(compatibleOptions[co]);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\teclipsePreferences.put(compatibleOptions[co], optionValue);", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tbreak;", "-\t\t\tdefault:", "-\t\t\t\treturn false;", "-\t\t}", "-\t\treturn true;", "-\t}"]}], "num": 37122}