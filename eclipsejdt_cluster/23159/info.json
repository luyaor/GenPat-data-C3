{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b1513a82e027d49bc3d57b1b6e3e836a", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d87cae2c6ea4676b9df82f3c8092fb28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/FilerImpl.java", "commitBeforeChange": "64db8d36b73417ee83ea1a6d91baaefe7d3848b0", "commitAfterChange": "706bf7889f5a9b55b080bd919d03ab5ee97600fa", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "     public OutputStream createClassFile(String name) throws IOException", "signatureAfterChange": "     public OutputStream createClassFile(String name) throws IOException", "diff": ["-        throw new UnsupportedOperationException( \"Not Yet Implemented\" ); //$NON-NLS-1$", "+    \tGeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( _env.getProject() );", "+    \tFile f = null;", "+    \t", "+    \ttry ", "+    \t{", "+    \t\tf = gfm.getGeneratedSourceFolderOutputLocation();", "+    \t}", "+    \tcatch ( Exception e )", "+    \t{", "+    \t\t// TODO - stop throwing this exception", "+    \t\tAptPlugin.log(e, \"Failure getting the output file\"); //$NON-NLS-1$", "+    \t\tthrow new IOException();", "+    \t}", "+    \t", "+    \tf = new File( f, name.replace( '.', File.separatorChar ) + \".class\" ); //$NON-NLS-1$", "+  ", "+        // REVIEW: for no apparent reason it is sometimes necessary to create the", "+        // parent dir, else an IOException occurs creating f..", "+        File p = f.getParentFile();", "+        FileSystemUtil.mkdirs( p );", "+    \t", "+        return new FileOutputStream( f );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8112932a103f0f81339240c4ff92937", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/FilerImpl.java", "commitBeforeChange": "64db8d36b73417ee83ea1a6d91baaefe7d3848b0", "commitAfterChange": "706bf7889f5a9b55b080bd919d03ab5ee97600fa", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "     public PrintWriter createTextFile(Filer.Location loc, String pkg, File relPath, String charsetName)          throws IOException", "signatureAfterChange": "     public PrintWriter createTextFile(Filer.Location loc, String pkg, File relPath, String charsetName)          throws IOException", "diff": ["-    \t", "-    \t// TODO - clean this up", "-    \tFile f = null;", "-    \tGeneratedFileManager gfm = GeneratedFileManager.getGeneratedFileManager( _env.getProject() );", "-    \tif ( loc == Filer.Location.CLASS_TREE )", "-    \t{", "-    \t\ttry ", "-    \t\t{", "-    \t\t\tf = gfm.getGeneratedSourceFolderOutputLocation();", "-    \t\t}", "-    \t\tcatch ( Exception e )", "-    \t\t{", "-    \t\t\t// TODO - stop throwing this exception", "-    \t\t\tAptPlugin.log(e, \"Failure getting the output file\"); //$NON-NLS-1$", "-    \t\t\tthrow new IOException();", "-    \t\t}", "-    \t}", "-    \telse if ( loc == Filer.Location.SOURCE_TREE )", "-    \t\tf = gfm.getGeneratedSourceFolder().getRawLocation().toFile();", "-    \t\t\t", "-", "-", "-        if( pkg != null )", "-            f = new File( f, pkg.replace('.', File.separatorChar) );", "-", "-        f = new File( f, relPath.getPath() );", "-", "-        // REVIEW: for no apparent reason it is sometimes necessary to create the", "-        // parent dir, else an IOException occurs creating f..", "-        File p = f.getParentFile();", "-        FileSystemUtil.mkdirs( p );", "+    \tFile f = getOutputFileForLocation( loc, pkg, relPath );"]}], "num": 23159}