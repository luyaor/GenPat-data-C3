{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2763eccfec97ef553cf86e75771fe1af", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5db91ae06632974f5dfe8f6816bde41", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullAnnotationTest.java", "commitBeforeChange": "8c93d4e99b8a943865cb7391e781eba5bb83dfc9", "commitAfterChange": "bd0edd7688142c1743cb6b10766dfc576040f113", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": " public void _test_nonnull_return_009b()", "signatureAfterChange": " public void test_nonnull_return_009b()", "diff": ["-public void _test_nonnull_return_009b() {", "+public void test_nonnull_return_009b() {", "-\trunConformTestWithLibs(", "+\trunNegativeTestWithLibs(", "-\t\t\"----------\\n\" +", "-\t\t\"2. ERROR in X.java (at line 9)\\n\" +", "-\t\t\"\tif (left != getObject())\\n\" +", "-\t\t\"\t            ^^^^^^^^^^^\\n\" +", "-\t\t\"Redundant null check: The method getObject() cannot return null\\n\" +", "+// Ideally we would see a second error, but when comparing local (depends on loop) with @NonNull", "+// we would have to include @NonNull into deferred checking :(", "+//\t\t\"----------\\n\" +", "+//\t\t\"2. ERROR in X.java (at line 9)\\n\" +", "+//\t\t\"\tif (left != getObject())\\n\" +", "+//\t\t\"\t            ^^^^^^^^^^^\\n\" +", "+//\t\t\"Redundant null check: The method getObject() cannot return null\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fcca74e506ce37638db919b212500b38", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "593a2bfc58d2fd5243ade8b5af13c44714cac2ea", "commitAfterChange": "7b2f5f6178a06612a97483ad1acce7a04ca7dd08", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void test088()", "signatureAfterChange": " public void testONLY_088()", "diff": ["-public void test088() {", "+public void testONLY_088() {", "-\t\t\"----------\\n\" + ", "-\t\t\"8. WARNING in p\\\\X.java (at line 39)\\n\" + ", "-\t\t\"\tMethod _getMethod = c.getMethod(\\\"d\\\",null);\\n\" + ", "-\t\t\"\t                    ^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type safety: The method getMethod(String, Class...) belongs to the raw type Class. References to generic type Class<T> should be parameterized\\n\" + "]}], "num": 62273}