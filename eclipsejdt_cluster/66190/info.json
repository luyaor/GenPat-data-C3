{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6da8ec7dd9fc38d6abf6d0f81bf431d0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e6bccee51161e04b166423975064dbb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "085978da36a941ea2e2a66b4aeed7c0c347fdb16", "commitAfterChange": "2d41a268a385b5c55fbe07147a7a3f7d2ae25fd3", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r protected void consumeMethodInvocationPrimary()", "signatureAfterChange": "\r protected void consumeMethodInvocationPrimary()", "diff": ["-\tif (!(selector == this.assistIdentifier() && CharOperation.equals(selector, SUPER))){\r", "+\tint accessMode;\r", "+\tif(selector == this.assistIdentifier()) {\r", "+\t\tif(CharOperation.equals(selector, SUPER)) {\r", "+\t\t\taccessMode = ExplicitConstructorCall.Super;\r", "+\t\t} else if(CharOperation.equals(selector, THIS)) {\r", "+\t\t\taccessMode = ExplicitConstructorCall.This;\r", "+\t\t} else {\r", "+\t\t\tsuper.consumeMethodInvocationPrimary();\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t} else {\r", "-\tExplicitConstructorCall constructorCall = new SelectionOnExplicitConstructorCall(ExplicitConstructorCall.Super);\r", "+\t\r", "+\tExplicitConstructorCall constructorCall = new SelectionOnExplicitConstructorCall(accessMode);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d378c1c8b793b9c1fb8393fcc50aa7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "085978da36a941ea2e2a66b4aeed7c0c347fdb16", "commitAfterChange": "2d41a268a385b5c55fbe07147a7a3f7d2ae25fd3", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r protected void consumeMethodInvocationName()", "signatureAfterChange": "\r protected void consumeMethodInvocationName()", "diff": ["-\tif (!(selector == this.assistIdentifier() && CharOperation.equals(selector, SUPER))){\r", "+\tint accessMode;\r", "+\tif(selector == this.assistIdentifier()) {\r", "+\t\tif(CharOperation.equals(selector, SUPER)) {\r", "+\t\t\taccessMode = ExplicitConstructorCall.Super;\r", "+\t\t} else if(CharOperation.equals(selector, THIS)) {\r", "+\t\t\taccessMode = ExplicitConstructorCall.This;\r", "+\t\t} else {\r", "+\t\t\tsuper.consumeMethodInvocationName();\r", "+\t\t\treturn;\r", "+\t\t}\r", "+\t} else {\r", "-\t}\t\r", "-\tExplicitConstructorCall constructorCall = new SelectionOnExplicitConstructorCall(ExplicitConstructorCall.Super);\r", "+\t}\r", "+\t\r", "+\tExplicitConstructorCall constructorCall = new SelectionOnExplicitConstructorCall(accessMode);\r"]}], "num": 66190}