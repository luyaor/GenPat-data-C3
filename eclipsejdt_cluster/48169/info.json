{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4dc883d49328e791339608b746927513", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04b015ae1b861e6d97026d94455444fb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ExternalFolderChange.java", "commitBeforeChange": "3df203dd14216a5a05c7609bcd2dd61cc345cbe4", "commitAfterChange": "220df3e54541b1d486d18b098bb99954035d7238", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void updateExternalFoldersIfNecessary(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic void updateExternalFoldersIfNecessary(boolean refreshIfExistAlready, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tpublic void updateExternalFoldersIfNecessary(IProgressMonitor monitor) throws JavaModelException {", "-\t\tHashSet oldFolders = this.oldResolvedClasspath == null ? new HashSet() : getExternalFolders(this.oldResolvedClasspath);", "+\tpublic void updateExternalFoldersIfNecessary(boolean refreshIfExistAlready, IProgressMonitor monitor) throws JavaModelException {", "+\t\tHashSet oldFolders = ExternalFoldersManager.getExternalFolders(this.oldResolvedClasspath);", "-\t\tHashSet newFolders = getExternalFolders(newResolvedClasspath);", "+\t\tHashSet newFolders = ExternalFoldersManager.getExternalFolders(newResolvedClasspath);", "+\t\tif (newFolders == null)", "+\t\t\treturn;", "-\t\t\tif (!oldFolders.remove(folderPath)) {", "+\t\t\tif (oldFolders == null || !oldFolders.remove(folderPath)) {", "-\t\t\t\t\tfoldersManager.createLinkFolder((IPath) folderPath, monitor);", "+\t\t\t\t\tfoldersManager.createLinkFolder((IPath) folderPath, refreshIfExistAlready, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ecb09c4cf3cc5c71a9145f1ce9f6d58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "94a425e221148886c840b4d545bf87183980be4b", "commitAfterChange": "ee446c21d0aaa4f4c4b0513ad11960ed53ccba7d", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "diff": ["-\t\t\tboolean externalFoldersProjectExists = JavaModelManager.getExternalManager().getExternalFoldersProject().isAccessible();", "+\t\t\tExternalFoldersManager externalFoldersManager = JavaModelManager.getExternalManager();", "-\t\t\t\t\t\tif (!needExternalFolderCreation && !externalFoldersProjectExists && entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "-\t\t\t\t\t\t\tObject target = JavaModel.getTarget(entry.getPath(), false/*don't check existence*/);", "-\t\t\t\t\t\t\tif (target instanceof IFolder && ExternalFoldersManager.isExternal(((IFolder) target).getFullPath()))", "+\t\t\t\t\t\tif (!needExternalFolderCreation && entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\t\t\t\t\tIPath entryPath = entry.getPath();", "+\t\t\t\t\t\t\tif (ExternalFoldersManager.isExternalFolderPath(entryPath) && externalFoldersManager.getFolder(entryPath) == null) {", "+\t\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6c587d90b90052a461637d7d26ad7ba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException", "signatureAfterChange": " void add(JavaProject javaProject, IPath pathToAdd, int includeMask, HashSet visitedProjects, IClasspathEntry referringEntry) throws JavaModelException", "diff": ["+\t\t\t\t\t\t\t\tObject target = JavaModel.getTarget(path, false/*don't check existence*/);", "+\t\t\t\t\t\t\t\tif (target instanceof IFolder) // case of an external folder", "+\t\t\t\t\t\t\t\t\tpath = ((IFolder) target).getFullPath();", "-\t\t\t\t\t\t\t\taddEnclosingProjectOrJar(path);", "+\t\t\t\t\t\t\t\taddEnclosingProjectOrJar(entry.getPath());", "+\t\t\t\t\t\t\tObject target = JavaModel.getTarget(path, false/*don't check existence*/);", "+\t\t\t\t\t\t\tif (target instanceof IFolder) // case of an external folder", "+\t\t\t\t\t\t\t\tpath = ((IFolder) target).getFullPath();", "-\t\t\t\t\t\t\taddEnclosingProjectOrJar(path);", "+\t\t\t\t\t\t\taddEnclosingProjectOrJar(entry.getPath());", "-\t\t\t\t\t\tadd((JavaProject) model.getJavaProject(entry.getPath().lastSegment()), null, includeMask, visitedProjects, cpEntry);", "+\t\t\t\t\t\tadd((JavaProject) model.getJavaProject(path.lastSegment()), null, includeMask, visitedProjects, cpEntry);"]}], "num": 48169}