{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9769c7e9dff6b2508b6c90675873c7a9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9495b6bbfe422a65d72d5d98f0dc5f44", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/CompletionParserTest2.java", "commitBeforeChange": "da80cfa9ed625bab885e849d64ff277d071e3e84", "commitAfterChange": "de7e4b40954d182f333159de9571c0420d75e2aa", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 240, "signatureBeforeChange": " public void test0132()", "signatureAfterChange": " public void test0132_Method()", "diff": ["-public void test0132(){", "-", "-\texpectedCompletionNodeToString = \"<CompleteOnName:>\";", "-\texpectedParentNodeToString = \"<NONE>\";", "-\tcompletionIdentifier = \"\";", "-\texpectedReplacedSource = \"\";", "-\texpectedUnitDisplayString =", "-\t\t\"public class A {\\n\" + ", "-\t\t\"  public A(final String str1, final String str2) {\\n\" + ", "-\t\t\"  }\\n\" + ", "-\t\t\"  private A[] methodA(final String str1, final String str2) {\\n\" + ", "-\t\t\"    new A(str1, str2) {\\n\" + ", "-\t\t\"      {\\n\" + ", "-\t\t\"        <CompleteOnName:>;\\n\" + ", "-\t\t\"      }\\n\" + ", "-\t\t\"    };\\n\" + ", "-\t\t\"  }\\n\" + ", "+ */", "+public void test0132_Method(){", "+\tString str =", "+\t\t\"public class A\\n\" +", "+\t\t\"{\\n\" +", "+\t\t\"   public A(final String str1, final String str2)\\n\" +", "+\t\t\"   {\\n\" +", "+\t\t\"      \\n\" +\t", "+\t\t\"   }\\n\" +", "+\t\t\"   \\n\" +", "+\t\t\"   private A[] methodA(final String str1, final String str2)\\n\" +", "+\t\t\"      {\\n\" +", "+\t\t\"         return new A[]\\n\" +", "+\t\t\"         {\\n\" +", "+\t\t\"            new A(str1, str2)\\n\" +", "+\t\t\"            {\\n\" +", "+\t\t\"               //initialiser!\\n\" +", "+\t\t\"               {\\n\" +", "+\t\t\"                  methodA(\\\"1\\\", \\\"2\\\");\\n\" +", "+\t\t\"               }\\n\" +", "+\t\t\"            },\\n\" +", "+\t\t\"            new A(\\\"hello\\\".c) //<--------code complete to \\\"hello\\\".concat()\\n\" +", "+\t\t\"         };\\n\" +", "+\t\t\"      \\n\" +", "+\t\t\"      }\\n\" +", "+", "+", "+\tString completeBehind = \"\\\"2\\\");\";", "+\tint cursorLocation = str.indexOf(\"\\\"2\\\");\") + completeBehind.length() - 1;", "+\tString expectedCompletionNodeToString = \"<CompleteOnName:>\";", "+\tString expectedParentNodeToString = \"<NONE>\";", "+\tString completionIdentifier = \"\";", "+\tString expectedReplacedSource = \"\";", "+\tString expectedUnitDisplayString =", "+\t\t\t\"public class A {\\n\" + ", "+\t\t\t\"  public A(final String str1, final String str2) {\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"  private A[] methodA(final String str1, final String str2) {\\n\" + ", "+\t\t\t\"    new A(str1, str2) {\\n\" + ", "+\t\t\t\"      {\\n\" + ", "+\t\t\t\"        <CompleteOnName:>;\\n\" + ", "+\t\t\t\"      }\\n\" + ", "+\t\t\t\"    };\\n\" + ", "+\t\t\t\"  }\\n\" + ", "+\t\t\t\"}\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bb8955db1e21c5a044e3f0f2e4261fd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "44bc8bb24de374506385d6361730798867bd9b35", "commitAfterChange": "4eb272881c87b1bea3aa02e641fb6fc8190374ff", "methodNumberBeforeChange": 48, "methodNumberAfterChange": 48, "signatureBeforeChange": " public void testBug293240() throws JavaModelException", "signatureAfterChange": " public void testBug293240()", "diff": ["-public void testBug293240() throws JavaModelException {", "+public void testBug293240() {", "-\tString source = ", "-\t\t\"public class Test {\\n\" + ", "-\t\t\"  public static <A, B> Function<A, B> forMap(\\n\" + ", "-\t\t\"      Map<? super A, ? extends B> map, @Nullable final B defaultValue) {\\n\" + ", "-\t\t\"    if (defaultValue == null) {\\n\" + ", "-\t\t\"      return forMap(map);\\n\" + ", "-\t\t\"    }\\n\" + ", "-\t\t\"    return new ForMapWithDefault<A, B>(map, defaultValue);\\n\" + ", "-\t\t\"  }\\n\" + ", "-\t\t\"  public Object[] bar() {\\n\" + ", "-\t\t\"\t  return new Object[] { null };\\n\" + ", "-\t\t\"  }\\n\" + ", "+\tString source =", "+\t\t\"public class Test {\\n\" +", "+\t\t\"  public static <A, B> Function<A, B> forMap(\\n\" +", "+\t\t\"      Map<? super A, ? extends B> map, @Nullable final B defaultValue) {\\n\" +", "+\t\t\"    if (defaultValue == null) {\\n\" +", "+\t\t\"      return forMap(map);\\n\" +", "+\t\t\"    }\\n\" +", "+\t\t\"    return new ForMapWithDefault<A, B>(map, defaultValue);\\n\" +", "+\t\t\"  }\\n\" +", "+\t\t\"  public Object[] bar() {\\n\" +", "+\t\t\"\t  return new Object[] { null };\\n\" +", "+\t\t\"  }\\n\" +", "-\t\t\"public class Test {\\n\" + ", "-\t\t\"    public static <A, B> Function<A, B> forMap(Map<? super A, ? extends B> map,\\n\" + ", "-\t\t\"            @Nullable final B defaultValue) {\\n\" + ", "-\t\t\"        if (defaultValue == null) {\\n\" + ", "-\t\t\"            return forMap(map);\\n\" + ", "-\t\t\"        }\\n\" + ", "-\t\t\"        return new ForMapWithDefault<A, B>(map, defaultValue);\\n\" + ", "-\t\t\"    }\\n\" + ", "-\t\t\"\\n\" + ", "-\t\t\"    public Object[] bar() {\\n\" + ", "-\t\t\"        return new Object[] { null };\\n\" + ", "-\t\t\"    }\\n\" + ", "+\t\t\"public class Test {\\n\" +", "+\t\t\"    public static <A, B> Function<A, B> forMap(Map<? super A, ? extends B> map,\\n\" +", "+\t\t\"            @Nullable final B defaultValue) {\\n\" +", "+\t\t\"        if (defaultValue == null) {\\n\" +", "+\t\t\"            return forMap(map);\\n\" +", "+\t\t\"        }\\n\" +", "+\t\t\"        return new ForMapWithDefault<A, B>(map, defaultValue);\\n\" +", "+\t\t\"    }\\n\" +", "+\t\t\"\\n\" +", "+\t\t\"    public Object[] bar() {\\n\" +", "+\t\t\"        return new Object[] { null };\\n\" +", "+\t\t\"    }\\n\" +"]}], "num": 7100}