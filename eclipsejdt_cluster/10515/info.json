{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ed4d0d7d42f80a2598a68135fd1e151", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03d4f71a5dfb4de30ec20b1c9b3d4565", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/runtime/LocalVirtualMachine.java", "commitBeforeChange": "4dbfc96b81c8ea986466921f071c4e6377836a2c", "commitAfterChange": "b7f468690a70977c68b74d1aeee81bdba359d238", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected void cleanupTargetPath() throws TargetException", "signatureAfterChange": " protected void cleanupTargetPath() throws TargetException", "diff": ["-\t\tcleanupDirectory(new File(targetPath, LocalVMLauncher.REGULAR_CLASSPATH_DIRECTORY));", "-\t\tcleanupDirectory(new File(targetPath, LocalVMLauncher.BOOT_CLASSPATH_DIRECTORY));", "+\t\tUtil.delete(new File(targetPath, LocalVMLauncher.REGULAR_CLASSPATH_DIRECTORY));", "+\t\tUtil.delete(new File(targetPath, LocalVMLauncher.BOOT_CLASSPATH_DIRECTORY));", "-\t\t// workaround pb with Process.exitValue() that returns the process has exited, but it has not free the file yet", "+\t\t/* workaround pb with Process.exitValue() that returns the process has exited, but it has not free the file yet", "-\t\tif (file.exists()) {", "+\t\t*/", "+\t\tif (!Util.delete(file)) {", "-\t\tcleanupDirectory(new File(targetPath));", "+\t\tUtil.delete(targetPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2cf146eeab03873b2b9dd3787221294", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/PackageFragmentRoot.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "  private IClasspathEntry findSourceAttachmentRecommendation()", "signatureAfterChange": "  private IClasspathEntry findSourceAttachmentRecommendation()", "diff": ["-\t\tIWorkspaceRoot workspaceRoot = ResourcesPlugin.getWorkspace().getRoot();", "-\t\t\t\tObject target = JavaModel.getTarget(workspaceRoot, entry.getSourceAttachmentPath(), true);", "+\t\t\t\tObject target = JavaModel.getTarget(entry.getSourceAttachmentPath(), true);", "-\t\t\t\t\tObject target = JavaModel.getTarget(workspaceRoot, entry.getSourceAttachmentPath(), true);", "+\t\t\t\t\tObject target = JavaModel.getTarget(entry.getSourceAttachmentPath(), true);", "-\t\t\t\t\t\tif (file.isFile()) {", "-\t\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(file.getName())){", "-\t\t\t\t\t\t\t\treturn entry;", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t// external directory", "+\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isArchiveFileName(file.getName())){"]}], "num": 10515}