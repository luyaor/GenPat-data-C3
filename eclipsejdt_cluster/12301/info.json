{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "04a6922a329cf610f34ecc3e9ed675c1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0e18fe7a80bf6b96828c36823e82767a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "ef65b8b1774a515074b8340776ab2542dae4a475", "commitAfterChange": "9075dc15ba5b5b70200c2d9ee0faa5fffc4ee53d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\tthis.ast = workingCopy.makeConsistent(this.createAST, this.progressMonitor);", "+\t\t\t\tthis.ast = workingCopy.makeConsistent(this.createAST, this.astLevel, this.progressMonitor);", "-\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(unit, contents, options, this.progressMonitor);", "+\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(this.astLevel, unit, contents, options, this.progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "448f1ce5351d37a19771e0c3fa2e4797", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/BatchASTCreationTests.java", "commitBeforeChange": "996ea5997dae4e7ec05722a233804ef32ae29f15", "commitAfterChange": "7ea60a7b6970ae1932f1363685910c0b3ca8b604", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprivate void assertRequestedBindingFound(String[] pathAndSources, final String expectedKey) throws JavaModelException", "signatureAfterChange": " \tprivate void assertRequestedBindingFound(String[] pathAndSources, final String expectedKey) throws JavaModelException", "diff": ["-\t\t\tworkingCopies = createWorkingCopies(markerInfos);", "+\t\t\tworkingCopies = createWorkingCopies(markerInfos, this.owner);", "-\t\t\tresolveASTs(workingCopies, new String[] {expectedKey}, requestor);", "+\t\t\tresolveASTs(workingCopies, new String[] {expectedKey}, requestor, this.owner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f77ebbbb248fa9e5cd2ac59d092ce5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "6436bbd31cbe5b698244c0208dd161fd144dd93e", "commitAfterChange": "4e5b524e8fed0a2f038362e79ac7bed8b62bd551", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tthis.resolvedType = this.binding.returnType.capture(scope, this.sourceEnd);", "+\t\tthis.resolvedType = this.binding.returnType.capture(scope, this.sourceStart, this.sourceEnd);", "-\t\t\t\treturnType = returnType.capture(scope, this.sourceEnd);", "+\t\t\t\treturnType = returnType.capture(scope, this.sourceStart, this.sourceEnd);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6395ee8018aed7a9d99b2448218f9269", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, IPackageFragment dest) throws JavaModelException", "signatureAfterChange": " \tprivate void processCompilationUnitResource(ICompilationUnit source, IPackageFragment dest) throws JavaModelException", "diff": ["-\t\t\t\t\t\tif (sourceEncoding != null) destFile.setCharset(sourceEncoding);", "+\t\t\t\t\t\tif (sourceEncoding != null) destFile.setCharset(sourceEncoding, this.progressMonitor);", "-\t\t\t\t\t\tif (sourceEncoding != null) destFile.setCharset(sourceEncoding);", "+\t\t\t\t\t\tif (sourceEncoding != null) destFile.setCharset(sourceEncoding, this.progressMonitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a201f669cbfa5f71499e18e846ddb22", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "94200ed39d00137579089415688a6cedf88ddec1", "commitAfterChange": "382f13be1a95be764b13ca01158d15888308733b", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "  private MethodBinding createMethod(IBinaryMethod method, IBinaryType binaryType, long sourceLevel, char[][][] missingTypeNames)", "signatureAfterChange": "  private MethodBinding createMethod(IBinaryMethod method, IBinaryType binaryType, long sourceLevel, char[][][] missingTypeNames)", "diff": ["-\t\t\t\t\t\tparamAnnotations[i - startIndex] = createAnnotations(method.getParameterAnnotations(i - startIndex), this.environment, missingTypeNames);", "+\t\t\t\t\t\tparamAnnotations[i - startIndex] = createAnnotations(method.getParameterAnnotations(i - startIndex, this.fileName), this.environment, missingTypeNames);", "-\t\t\t\t\t\tparamAnnotations[i] = createAnnotations(method.getParameterAnnotations(i), this.environment, missingTypeNames);", "+\t\t\t\t\t\tparamAnnotations[i] = createAnnotations(method.getParameterAnnotations(i,  this.fileName), this.environment, missingTypeNames);"]}], "num": 12301}