{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "314374c5173cb76303b5adc438dac618", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "69f538c22300c0504617b5ae894c6cbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "7d377efa996fb82a3b5c1b0d3643171f071fe458", "commitAfterChange": "5725587b7e076e798174c1de3afdd9fd81ea2803", "methodNumberBeforeChange": 186, "methodNumberAfterChange": 186, "signatureBeforeChange": "  public void invoke(byte opcode, MethodBinding methodBinding, TypeBinding declaringClass)", "signatureAfterChange": "  public void invoke(byte opcode, MethodBinding methodBinding, TypeBinding declaringClass)", "diff": ["-    if (declaringClass.isNestedType()) {", "-        this.classFile.recordInnerClasses(declaringClass);", "-    }", "-    // compute receiverAndArgsSize", "-    int receiverAndArgsSize;", "-    switch(opcode) {", "-    \tcase Opcodes.OPC_invokestatic :", "-    \t\treceiverAndArgsSize = 0; // no receiver", "-    \t\tbreak;", "-    \tcase Opcodes.OPC_invokeinterface :", "-    \tcase Opcodes.OPC_invokevirtual :", "-    \t\treceiverAndArgsSize = 1; // receiver", "-    \t\tbreak;", "-    \tcase Opcodes.OPC_invokespecial :", "-    \t\treceiverAndArgsSize = 1; // receiver", "-    \t\tif (methodBinding.isConstructor()) {", "-    \t\t\tif (declaringClass.isNestedType()) {", "-        \t\t\tReferenceBinding nestedType = (ReferenceBinding) declaringClass;", "-    \t\t\t\t// enclosing instances", "-        \t\t\treceiverAndArgsSize += nestedType.getEnclosingInstancesSlotSize();", "-    \t\t\t\t// outer local variables", "-    \t\t\t\tSyntheticArgumentBinding[] syntheticArguments = nestedType.syntheticOuterLocalVariables();", "-    \t\t\t\tif (syntheticArguments != null) {", "-    \t\t\t\t\tfor (int i = 0, max = syntheticArguments.length; i < max; i++) {", "-    \t\t\t\t\t\tswitch (syntheticArguments[i].id)  {", "-    \t\t\t\t\t\t\tcase TypeIds.T_double :", "-    \t\t\t\t\t\t\tcase TypeIds.T_long :", "-\t    \t\t\t\t\t\t\treceiverAndArgsSize += 2;", "+\tif ((declaringClass.tagBits & TagBits.ContainsNestedTypeReferences) != 0) {", "+\t\tUtil.recordNestedType(this.classFile, declaringClass);", "+\t}", "+\t// compute receiverAndArgsSize", "+\tint receiverAndArgsSize;", "+\tswitch(opcode) {", "+\t\tcase Opcodes.OPC_invokestatic :", "+\t\t\treceiverAndArgsSize = 0; // no receiver", "+\t\t\tbreak;", "+\t\tcase Opcodes.OPC_invokeinterface :", "+\t\tcase Opcodes.OPC_invokevirtual :", "+\t\t\treceiverAndArgsSize = 1; // receiver", "+\t\t\tbreak;", "+\t\tcase Opcodes.OPC_invokespecial :", "+\t\t\treceiverAndArgsSize = 1; // receiver", "+\t\t\tif (methodBinding.isConstructor()) {", "+\t\t\t\tif (declaringClass.isNestedType()) {", "+\t\t\t\t\tReferenceBinding nestedType = (ReferenceBinding) declaringClass;", "+\t\t\t\t\t// enclosing instances", "+\t\t\t\t\treceiverAndArgsSize += nestedType.getEnclosingInstancesSlotSize();", "+\t\t\t\t\t// outer local variables", "+\t\t\t\t\tSyntheticArgumentBinding[] syntheticArguments = nestedType.syntheticOuterLocalVariables();", "+\t\t\t\t\tif (syntheticArguments != null) {", "+\t\t\t\t\t\tfor (int i = 0, max = syntheticArguments.length; i < max; i++) {", "+\t\t\t\t\t\t\tswitch (syntheticArguments[i].id)  {", "+\t\t\t\t\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\t\t\t\t\t\treceiverAndArgsSize += 2;", "-    \t\t\t\t\t\t\tdefault: ", "-\t    \t\t\t\t\t\t\treceiverAndArgsSize++;", "-    \t\t\t\t\t\t\t\tbreak;", "-    \t\t\t\t\t\t}    \t\t\t\t\t\t", "-    \t\t\t\t\t}", "-    \t\t\t\t}", "-    \t\t\t}", "-    \t\t\tif (declaringClass.isEnum()) {", "-    \t\t\t\t// adding String (name) and int (ordinal)", "-    \t\t\t\treceiverAndArgsSize += 2;", "-    \t\t\t}", "-    \t\t}    \t\t", "-    \t\tbreak;", "-    \tdefault :", "-    \t\treturn; // should not occur", "-    \t\t", "-    }", "+\t\t\t\t\t\t\t\tdefault: ", "+\t\t\t\t\t\t\t\t\treceiverAndArgsSize++;", "+\t\t\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t\t}    \t\t\t\t\t\t", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif (declaringClass.isEnum()) {", "+\t\t\t\t\t// adding String (name) and int (ordinal)", "+\t\t\t\t\treceiverAndArgsSize += 2;", "+\t\t\t\t}", "+\t\t\t}    \t\t", "+\t\t\tbreak;", "+\t\tdefault :", "+\t\t\treturn; // should not occur", "+", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a10178770e49a170ee8eec82d749a80", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "d35754bf597e1e3c63426404dbcb66843b76444c", "commitAfterChange": "889cbee9e452a2b606e084167406ae9a949acd46", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 185, "signatureBeforeChange": " public void invokestatic(MethodBinding methodBinding)", "signatureAfterChange": "  public void invoke(byte opcode, MethodBinding methodBinding, TypeBinding declaringClass)", "diff": ["+", "+public void invoke(byte opcode, MethodBinding methodBinding, TypeBinding declaringClass) {", "+\tif (declaringClass == null) declaringClass = methodBinding.declaringClass;", "+    if (declaringClass.isNestedType()) {", "+        this.classFile.recordInnerClasses(declaringClass);", "+    }", "+    // compute receiverAndArgsSize", "+    int receiverAndArgsSize;", "+    switch(opcode) {", "+    \tcase Opcodes.OPC_invokestatic :", "+    \t\treceiverAndArgsSize = 0; // no receiver", "+    \t\tbreak;", "+    \tcase Opcodes.OPC_invokeinterface :", "+    \tcase Opcodes.OPC_invokevirtual :", "+    \t\treceiverAndArgsSize = 1; // receiver", "+    \t\tbreak;", "+    \tcase Opcodes.OPC_invokespecial :", "+    \t\treceiverAndArgsSize = 1; // receiver", "+    \t\tif (methodBinding.isConstructor()) {", "+    \t\t\tif (declaringClass.isNestedType()) {", "+        \t\t\tReferenceBinding nestedType = (ReferenceBinding) declaringClass;", "+    \t\t\t\t// enclosing instances", "+    \t\t\t\tTypeBinding[] syntheticArgumentTypes = nestedType.syntheticEnclosingInstanceTypes();", "+    \t\t\t\tif (syntheticArgumentTypes != null) {", "+    \t\t\t\t\tfor (int i = 0, max = syntheticArgumentTypes.length; i < max; i++) {", "+    \t\t\t\t\t\tswitch (syntheticArgumentTypes[i].id)  {", "+    \t\t\t\t\t\t\tcase TypeIds.T_double :", "+    \t\t\t\t\t\t\tcase TypeIds.T_long :", "+\t    \t\t\t\t\t\t\treceiverAndArgsSize += 2;", "+\t\t\t\t\t\t\t\t\tbreak;", "+    \t\t\t\t\t\t\tdefault: ", "+\t    \t\t\t\t\t\t\treceiverAndArgsSize++;", "+    \t\t\t\t\t\t\t\tbreak;", "+    \t\t\t\t\t\t}", "+    \t\t\t\t\t}", "+    \t\t\t\t}", "+    \t\t\t\t// outer local variables", "+    \t\t\t\tSyntheticArgumentBinding[] syntheticArguments = nestedType.syntheticOuterLocalVariables();", "+    \t\t\t\tif (syntheticArguments != null) {", "+    \t\t\t\t\tfor (int i = 0, max = syntheticArguments.length; i < max; i++) {", "+    \t\t\t\t\t\tswitch (syntheticArguments[i].id)  {", "+    \t\t\t\t\t\t\tcase TypeIds.T_double :", "+    \t\t\t\t\t\t\tcase TypeIds.T_long :", "+\t    \t\t\t\t\t\t\treceiverAndArgsSize += 2;", "+\t\t\t\t\t\t\t\t\tbreak;", "+    \t\t\t\t\t\t\tdefault: ", "+\t    \t\t\t\t\t\t\treceiverAndArgsSize++;", "+    \t\t\t\t\t\t\t\tbreak;", "+    \t\t\t\t\t\t}    \t\t\t\t\t\t", "+    \t\t\t\t\t}", "+    \t\t\t\t}", "+    \t\t\t}", "+    \t\t\tif (declaringClass.isEnum()) {", "+    \t\t\t\t// adding String (name) and int (ordinal)", "+    \t\t\t\treceiverAndArgsSize += 2;", "+    \t\t\t}", "+    \t\t}    \t\t", "+    \t\tbreak;", "+    \tdefault :", "+    \t\treturn; // should not occur", "+    \t\t", "+    }", "+\tfor (int i = methodBinding.parameters.length - 1; i >= 0; i--) {", "+\t\tswitch (methodBinding.parameters[i].id) {", "+\t\t\tcase TypeIds.T_double :", "+\t\t\tcase TypeIds.T_long :", "+\t\t\t\treceiverAndArgsSize += 2;", "+\t\t\t\tbreak;", "+\t\t\tdefault :", "+\t\t\t\treceiverAndArgsSize ++;", "+\t\t\t\tbreak;", "+\t\t}", "+\t// compute return type size", "+\tint returnTypeSize;", "+\tswitch (methodBinding.returnType.id) {", "+\t\tcase TypeIds.T_double :", "+\t\tcase TypeIds.T_long :", "+\t\t\treturnTypeSize = 2;", "+\t\t\tbreak;", "+\t\tcase TypeIds.T_void :", "+\t\t\treturnTypeSize = 0;", "+\t\t\tbreak;", "+\t\tdefault :", "+\t\t\treturnTypeSize = 1;", "+\t\t\tbreak;", "+\t}", "+\tinvoke(", "+\t\t\topcode, ", "+\t\t\treceiverAndArgsSize, ", "+\t\t\treturnTypeSize, ", "+\t\t\tdeclaringClass.constantPoolName(), ", "+\t\t\tmethodBinding.selector, ", "+\t\t\tmethodBinding.signature(this.classFile));", "+}", "-}", "-public void invokestatic(MethodBinding methodBinding) {", "-\tif (DEBUG) System.out.println(this.position + \"\\t\\tinvokestatic:\"+methodBinding); //$NON-NLS-1$", "-\t// initialized to 0 to take into account that there is no this for", "-\t// a static method", "-\tthis.countLabels = 0;", "-\tint argCount = 0;", "-\tint id;", "-\tif (this.classFileOffset + 2 >= this.bCodeStream.length) {", "-\t\tresizeByteArray();", "-\t}", "-\tthis.position++;", "-\tthis.bCodeStream[this.classFileOffset++] = Opcodes.OPC_invokestatic;", "-\twriteUnsignedShort(", "-\t\tthis.constantPool.literalIndexForMethod(", "-\t\t\tmethodBinding.constantPoolDeclaringClass(),", "-\t\t\tmethodBinding.selector,", "-\t\t\tmethodBinding.signature(this.classFile),", "-\t\t\tfalse));", "-\tfor (int i = methodBinding.parameters.length - 1; i >= 0; i--)", "-\t\tif (((id = methodBinding.parameters[i].id) == TypeIds.T_double) || (id == TypeIds.T_long))", "-\t\t\targCount += 2;", "-\t\telse", "-\t\t\targCount += 1;", "-\tif (((id = methodBinding.returnType.id) == TypeIds.T_double) || (id == TypeIds.T_long))", "-\t\tthis.stackDepth += (2 - argCount);", "-\telse", "-\t\tif (id == TypeIds.T_void)", "-\t\t\tthis.stackDepth -= argCount;", "-\t\telse", "-\t\t\tthis.stackDepth += (1 - argCount);", "-\tif (this.stackDepth > this.stackMax)", "-\t\tthis.stackMax = this.stackDepth;", "-}"]}], "num": 70577}