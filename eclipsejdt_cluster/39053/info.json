{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d40a7a5ad9c0ae897bab83c1eb46cb5", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "458ae5b4815650aaf769a094c5a90e6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "f97b24f3f8e94d8f54a74d9a196551c56851e735", "commitAfterChange": "edd951b2efc6b8f7b24cb3f178fd99c174eb6c7a", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic static IClasspathEntry newSourceEntry(IPath path, String[] exclusionPatterns)", "signatureAfterChange": " \tpublic static IClasspathEntry newSourceEntry(IPath path, IPath[] exclusionPatterns)", "diff": ["-\tpublic static IClasspathEntry newSourceEntry(IPath path, String[] exclusionPatterns) {", "+\tpublic static IClasspathEntry newSourceEntry(IPath path, IPath[] exclusionPatterns) {", "-\t\t// discard empty trimmed patterns", "-\t\t\tString[] trimmedPatterns = exclusionPatterns;", "-\t\tif (exclusionPatterns != null) {", "-\t\t\tint index = 0;", "-\t\t\tint patternCount = exclusionPatterns.length;", "-\t\t\tfor (int i = 0; i < patternCount; i++){", "-\t\t\t\tString pattern;", "-\t\t\t\tif ((pattern = exclusionPatterns[i]) == null) continue;", "-\t\t\t\tString trimmedPattern = exclusionPatterns[i].trim();", "-\t\t\t\tif (trimmedPattern.length() == 0) continue;", "-\t\t\t\t", "-\t\t\t\tif (pattern.length() == trimmedPattern.length()) {", "-\t\t\t\t\tif (trimmedPatterns == exclusionPatterns) { // clone if necessary", "-\t\t\t\t\t\tSystem.arraycopy(exclusionPatterns, 0, trimmedPatterns = new String[patternCount], 0, index);", "-\t\t\t\t\t}", "-\t\t\t\t\ttrimmedPatterns[index] = trimmedPattern;", "-\t\t\t\t}", "-\t\t\t\tindex++;", "-\t\t\t}", "-\t\t\tif (index != patternCount) {", "-\t\t\t\tif (index == 0) {", "-\t\t\t\t\ttrimmedPatterns = null;", "-\t\t\t\t} else {", "-\t\t\t\t\tSystem.arraycopy(trimmedPatterns, 0, trimmedPatterns = new String[index], 0, index);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}\t\t", "-\t\t\ttrimmedPatterns,", "+\t\t\texclusionPatterns,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92c1e06983abec918c8062d568f0a96f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "8d0a5299117e5fc84e729116ac52feef1385b968", "commitAfterChange": "527793c3501c0044ba7f65ec00ff957c7a149690", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": " \tpublic static IClasspathEntry newSourceEntry(IPath path, String[] exclusionPatterns)", "signatureAfterChange": " \tpublic static IClasspathEntry newSourceEntry(IPath path, String[] exclusionPatterns)", "diff": ["-\t\t", "+", "+\t\t// discard empty trimmed patterns", "+\t\t\tString[] trimmedPatterns = exclusionPatterns;", "+\t\tif (exclusionPatterns != null) {", "+\t\t\tint index = 0;", "+\t\t\tint patternCount = exclusionPatterns.length;", "+\t\t\tfor (int i = 0; i < patternCount; i++){", "+\t\t\t\tString pattern;", "+\t\t\t\tif ((pattern = exclusionPatterns[i]) == null) continue;", "+\t\t\t\tString trimmedPattern = exclusionPatterns[i].trim();", "+\t\t\t\tif (trimmedPattern.length() == 0) continue;", "+\t\t\t\t", "+\t\t\t\tif (pattern.length() == trimmedPattern.length()) {", "+\t\t\t\t\tif (trimmedPatterns == exclusionPatterns) { // clone if necessary", "+\t\t\t\t\t\tSystem.arraycopy(exclusionPatterns, 0, trimmedPatterns = new String[patternCount], 0, index);", "+\t\t\t\t\t}", "+\t\t\t\t\ttrimmedPatterns[index] = trimmedPattern;", "+\t\t\t\t}", "+\t\t\t\tindex++;", "+\t\t\t}", "+\t\t\tif (index != patternCount) {", "+\t\t\t\tif (index == 0) {", "+\t\t\t\t\ttrimmedPatterns = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tSystem.arraycopy(trimmedPatterns, 0, trimmedPatterns = new String[index], 0, index);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}\t\t", "-\t\t\texclusionPatterns,", "+\t\t\ttrimmedPatterns,"]}], "num": 39053}