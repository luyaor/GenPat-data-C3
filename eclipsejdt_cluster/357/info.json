{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "83e8003a19fec10faa4718abf0eb90ec", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f46731ec69dc60e164352b5bedb716a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "fb1d6b1bc38bcfbb2a65d2062c95be9e9d6f2403", "commitAfterChange": "e94dffdc8969b47ac87799c5977c68ba7cdd27e8", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "  \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\t\t\t\t} else if (doStarImport && !currDecl.isOnDemand()) {", "+\t\t\t\t\t\tString simpleName = currDecl.getTypeQualifiedName();", "+\t\t\t\t\t\tif (simpleName.indexOf('.') != -1) {", "+\t\t\t\t\t\t\tString str= getNewImportString(currDecl.getElementName(), isStatic, lineDelim);", "+\t\t\t\t\t\t\tif (stringsToInsert.indexOf(str) == -1) {", "+\t\t\t\t\t\t\t\tstringsToInsert.add(str);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "babbc53bd733c9a1e20259191d9e3d5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/internal/core/dom/rewrite/ImportRewriteAnalyzer.java", "commitBeforeChange": "34d4ca4280b68a204e5286da02786e0f5a69a506", "commitAfterChange": "fa6a9611391cd82599b293f23e547c97052d2713", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "  \tpublic MultiTextEdit getResultingEdits(IProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\t\t\t\t\t} else if (doStarImport && !currDecl.isOnDemand()) {", "+\t\t\t\t\t\t\tString simpleName = currDecl.getTypeQualifiedName();", "+\t\t\t\t\t\t\tif (simpleName.indexOf('.') != -1) {", "+\t\t\t\t\t\t\t\tString str= getNewImportString(currDecl.getElementName(), isStatic, lineDelim);", "+\t\t\t\t\t\t\t\tif (stringsToInsert.indexOf(str) == -1) {", "+\t\t\t\t\t\t\t\t\tstringsToInsert.add(str);", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tif (!doStarImport || currDecl.isOnDemand() || onDemandConflicts == null || onDemandConflicts.contains(currDecl.getSimpleName())) {", "-\t\t\t\t\t\t\tint offset= region.getOffset();", "-\t\t\t\t\t\t\tremoveAndInsertNew(buffer, currPos, offset, stringsToInsert, resEdit);", "-\t\t\t\t\t\t\tstringsToInsert.clear();", "-\t\t\t\t\t\t\tcurrPos= offset + region.getLength();", "-\t\t\t\t\t\t}", "+\t\t\t\t\t} else if (!doStarImport || currDecl.isOnDemand() || onDemandConflicts == null || onDemandConflicts.contains(currDecl.getSimpleName())) {", "+\t\t\t\t\t\tint offset= region.getOffset();", "+\t\t\t\t\t\tremoveAndInsertNew(buffer, currPos, offset, stringsToInsert, resEdit);", "+\t\t\t\t\t\tstringsToInsert.clear();", "+\t\t\t\t\t\tcurrPos= offset + region.getLength();"]}], "num": 357}