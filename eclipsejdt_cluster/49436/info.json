{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fbafa15c2f81c258213cac3a8cbb7fab", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e4963d95f0f36e233cfd3c1134637b6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "fccc3c9fd12b95c908b1566d2444bf312ceefff2", "commitAfterChange": "65db522775790e696e2711bd035a45d8d1048338", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void faultInImports()", "signatureAfterChange": " void faultInImports()", "diff": ["+", "+\tint length = imports.length;", "+\tresolvedSingeTypeImports = new HashtableOfObject(length);", "+\tfor (int i = 0; i < length; i++) {", "+\t\tImportBinding binding = imports[i];", "+\t\tif (!binding.onDemand)", "+\t\t\tresolvedSingeTypeImports.put(binding.compoundName[binding.compoundName.length - 1], binding);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b3b4a65a1e3af812ee3cfe50e8ca5793", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CompilationUnitScope.java", "commitBeforeChange": "3d4c211d581e5ab7a648e648f6e07c2d98cd2b06", "commitAfterChange": "985d5704b5812718c29d572a9f4e88e4ef1e7e81", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private Binding findSingleStaticImport(char[][] compoundName)", "signatureAfterChange": " private Binding findSingleStaticImport(char[][] compoundName)", "diff": ["+\t// look to see if there is a static method with the same selector", "+\tMethodBinding[] methods = type.getMethods(name);", "+\tif (methods != NoMethods) {", "+\t\tfor (int i = methods.length; --i >= 0;) {", "+\t\t\tMethodBinding method = methods[i];", "+\t\t\tif (method.isStatic() && method.canBeSeenBy(fPackage))", "+\t\t\t\treturn method;", "+\t\t}", "+\t}", "+"]}], "num": 49436}