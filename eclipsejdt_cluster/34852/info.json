{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "60746c43913641741f8a84f5afeade4c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "915a206920d336ef058361ba77899e5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e021ef164bb828749d75ae9ce36158058f4c5927", "commitAfterChange": "63a79f115748c0b775448e046a6f173e2f533694", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 74, "signatureBeforeChange": " \tpublic boolean isOnClasspath(IJavaElement element) throws JavaModelException", "signatureAfterChange": " \tpublic boolean isOnClasspath(IJavaElement element) throws JavaModelException", "diff": ["-\t\tIPath rootPath;", "-\t\tif (element.getElementType() == IJavaElement.JAVA_PROJECT) {", "-\t\t\trootPath = ((IJavaProject)element).getProject().getFullPath();", "-\t\t} else {", "-\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot)element.getAncestor(IJavaElement.PACKAGE_FRAGMENT_ROOT);", "-\t\t\tif (root == null) {", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t\trootPath = root.getPath();", "-\t\t}", "-\t\treturn this.findPackageFragmentRoot0(rootPath) != null;", "+\t\treturn this.isOnClasspath(element.getPath());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e44aea4d9e4abedee2c3b91afd53e8d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchingOpenable.java", "commitBeforeChange": "15070dfb720141f260eff9f86b3742c51648d5f0", "commitAfterChange": "f850238096d0e6e37fbf42c72e3eea2d357ec53f", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " private void locateMatchesInClassFile() throws CoreException, JavaModelException", "signatureAfterChange": " private void locateMatchesInClassFile() throws CoreException, JavaModelException", "diff": ["-\t\t\tbinding = this.locator.lookupEnvironment.cacheBinaryType(info);", "-\t\t\tif (binding == null) { // it was already cached as a result of a previous query", "-\t\t\t\tchar[][] compoundName = CharOperation.splitOn('.', binaryType.getFullyQualifiedName().toCharArray());", "-\t\t\t\tReferenceBinding referenceBinding = this.locator.lookupEnvironment.getCachedType(compoundName);", "-\t\t\t\tif (referenceBinding != null && (referenceBinding instanceof BinaryTypeBinding)) {", "-\t\t\t\t\t// if the binding could be found and if it comes from a binary type,", "-\t\t\t\t\tbinding = (BinaryTypeBinding)referenceBinding;", "-\t\t\t\t}", "-\t\t\t}", "-", "+\t\t\tbinding = this.locator.cacheBinaryType(binaryType);"]}], "num": 34852}