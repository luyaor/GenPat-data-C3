{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3398b0e2190e13b5f9024e06be0cda4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "110e4a1d0164a605f5e041f893d450c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "cff902ed861deb5cff157c45c8eb21f377de7ae3", "commitAfterChange": "54adf8874a2139df84e504710c736c699ecdc8bd", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations)", "signatureAfterChange": " \tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations, boolean isLegalLocation)", "diff": ["-\tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations) {", "+\tpublic static void copySE8AnnotationsToType(BlockScope scope, Binding recipient, Annotation[] annotations, boolean isLegalLocation) {", "+\t\tint firstSE8 = -1, lastSE8 = 0;", "+\t\t\t\tif (firstSE8 == -1) firstSE8 = i;", "+\t\t\t\tlastSE8 = i;", "+\t\t\tif (!isLegalLocation) {", "+\t\t\t\tscope.problemReporter().misplacedTypeAnnotations(annotations[firstSE8], annotations[lastSE8]);", "+\t\t\t\treturn;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "219460d87008b8eccbf7faf4ae38e2ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DocCommentParser.java", "commitBeforeChange": "d11ec20c5ee631d9416842868616675440352aca", "commitAfterChange": "2418a9c1fa372e8f8253220ab580375e8d2f864b", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["+\t\tint currentPosition = this.index;", "-\t\tthis.tagSourceStart = this.scanner.getCurrentTokenStartPosition();", "-\t\tthis.tagSourceEnd = this.scanner.getCurrentTokenEndPosition();", "-\t\tchar[] tagName = this.scanner.getCurrentIdentifierSource();", "+\t\tchar[] tagName = CharOperation.NO_CHAR;", "+\t\tif (currentPosition == this.scanner.startPosition) {", "+\t\t\tthis.tagSourceStart = this.scanner.getCurrentTokenStartPosition();", "+\t\t\tthis.tagSourceEnd = this.scanner.getCurrentTokenEndPosition();", "+\t\t\ttagName = this.scanner.getCurrentIdentifierSource();", "+\t\t} else {", "+\t\t\tthis.tagSourceEnd = currentPosition-1;", "+\t\t}", "+\t\t// tage name may be empty (see bug https://bugs.eclipse.org/bugs/show_bug.cgi?id=125903)", "+\t\tif (tagName.length == 0) {", "+\t\t\treturn false;", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db4355126214d6d4d90f8bebd081ca1b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/JavadocParser.java", "commitBeforeChange": "d11ec20c5ee631d9416842868616675440352aca", "commitAfterChange": "2418a9c1fa372e8f8253220ab580375e8d2f864b", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "signatureAfterChange": "  \tprotected boolean parseTag(int previousPosition) throws InvalidInputException", "diff": ["+\t\tint currentPosition = this.index;", "+\t\tif (currentPosition != this.scanner.startPosition) {", "+\t\t\tthis.tagSourceStart = previousPosition;", "+\t\t\tthis.tagSourceEnd = currentPosition;", "+\t\t\tif (this.reportProblems) this.sourceParser.problemReporter().javadocInvalidTag(this.tagSourceStart, this.tagSourceEnd);", "+\t\t\treturn false;", "+\t\t}"]}], "num": 59971}