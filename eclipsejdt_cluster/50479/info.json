{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f581157ad714913ea6a57a328b09305f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "183f30fac79077a3b7d40121e460e74e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "7915a529d4dab8b70a0cdb9189fc342b9112ed8e", "commitAfterChange": "f28c28de6ed3d2e9e475bca36caf25c219a92533", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\tReferenceBinding enclosingType = scope.enclosingReceiverType();", "-\t\tMethodBinding otherMethod = scope.getMethod(enclosingType.superclass(), this.selector, argumentTypes, this);", "-\t\tif (scope.checkAppropriate(this.binding, otherMethod, this)) {", "-\t\t\tReferenceBinding[] superInterfaces = enclosingType.superInterfaces();", "-\t\t\tif (superInterfaces != null) {", "-\t\t\t\tfor (int i = 0; i < superInterfaces.length; i++) {", "-\t\t\t\t\totherMethod = scope.getMethod(superInterfaces[i], this.selector, argumentTypes, this);", "-\t\t\t\t\tif (!scope.checkAppropriate(this.binding, otherMethod, this))", "-\t\t\t\t\t\tbreak;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "+\t\tscope.checkAppropriateMethodAgainstSupers(this.selector, this.binding, argumentTypes, this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c5ba7b20c9345a25670255dab3a09d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "86ee968d8acf90a0a75c72085f72a3416b02186d", "commitAfterChange": "7915a529d4dab8b70a0cdb9189fc342b9112ed8e", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["+\tif (this.receiver.isSuper() && this.actualReceiverType.isInterface()) {", "+\t\t// 15.12.3 (Java 8)", "+\t\tReferenceBinding enclosingType = scope.enclosingReceiverType();", "+\t\tMethodBinding otherMethod = scope.getMethod(enclosingType.superclass(), this.selector, argumentTypes, this);", "+\t\tif (scope.checkAppropriate(this.binding, otherMethod, this)) {", "+\t\t\tReferenceBinding[] superInterfaces = enclosingType.superInterfaces();", "+\t\t\tif (superInterfaces != null) {", "+\t\t\t\tfor (int i = 0; i < superInterfaces.length; i++) {", "+\t\t\t\t\totherMethod = scope.getMethod(superInterfaces[i], this.selector, argumentTypes, this);", "+\t\t\t\t\tif (!scope.checkAppropriate(this.binding, otherMethod, this))", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}"]}], "num": 50479}