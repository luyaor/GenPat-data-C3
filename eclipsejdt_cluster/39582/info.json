{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4c65a34a6b9d37351a4597908b4c1413", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b7769365c48c74aa446ede04f50329", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "60adc6e9bd2a19d1f00a26879d59da4db15980bb", "commitAfterChange": "2fa8bdc58397f8ba42986ed8442348506f4b1424", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r void setOption(ConfigurableOption setting)", "signatureAfterChange": "\r void setOption(ConfigurableOption setting)", "diff": ["-\t\t\t\tsetUnreachableCodeSeverity(ERROR);\r", "+\t\t\t\tsetUnreachableCodeSeverity(Error);\r", "-\t\t\t\tsetUnreachableCodeSeverity(WARNING);\r", "+\t\t\t\tsetUnreachableCodeSeverity(Warning);\r", "-\t\t\t\tsetUnreachableCodeSeverity(IGNORE);\r", "+\t\t\t\tsetUnreachableCodeSeverity(Ignore);\r", "-\t\t\t\tsetImportProblemSeverity(ERROR);\r", "+\t\t\t\tsetImportProblemSeverity(Error);\r", "-\t\t\t\tsetImportProblemSeverity(WARNING);\r", "+\t\t\t\tsetImportProblemSeverity(Warning);\r", "-\t\t\t\tsetImportProblemSeverity(IGNORE);\r", "+\t\t\t\tsetImportProblemSeverity(Ignore);\r", "-\t\t\t\tsetMethodWithConstructorNameSeverity(ERROR);\r", "+\t\t\t\tsetMethodWithConstructorNameSeverity(Error);\r", "-\t\t\t\tsetMethodWithConstructorNameSeverity(WARNING);\r", "+\t\t\t\tsetMethodWithConstructorNameSeverity(Warning);\r", "-\t\t\t\tsetMethodWithConstructorNameSeverity(IGNORE);\r", "+\t\t\t\tsetMethodWithConstructorNameSeverity(Ignore);\r", "-\t\t\t\tsetOverriddenPackageDefaultMethodSeverity(ERROR);\r", "+\t\t\t\tsetOverriddenPackageDefaultMethodSeverity(Error);\r", "-\t\t\t\tsetOverriddenPackageDefaultMethodSeverity(WARNING);\r", "+\t\t\t\tsetOverriddenPackageDefaultMethodSeverity(Warning);\r", "-\t\t\t\tsetOverriddenPackageDefaultMethodSeverity(IGNORE);\r", "+\t\t\t\tsetOverriddenPackageDefaultMethodSeverity(Ignore);\r", "-\t\t\t\tsetDeprecationUseSeverity(ERROR);\r", "+\t\t\t\tsetDeprecationUseSeverity(Error);\r", "-\t\t\t\tsetDeprecationUseSeverity(WARNING);\r", "+\t\t\t\tsetDeprecationUseSeverity(Warning);\r", "-\t\t\t\tsetDeprecationUseSeverity(IGNORE);\r", "+\t\t\t\tsetDeprecationUseSeverity(Ignore);\r", "-\t\t\t\tsetMaskedCatchBlockSeverity(ERROR);\r", "+\t\t\t\tsetMaskedCatchBlockSeverity(Error);\r", "-\t\t\t\tsetMaskedCatchBlockSeverity(WARNING);\r", "+\t\t\t\tsetMaskedCatchBlockSeverity(Warning);\r", "-\t\t\t\tsetMaskedCatchBlockSeverity(IGNORE);\r", "+\t\t\t\tsetMaskedCatchBlockSeverity(Ignore);\r", "-\t\t\t\tsetUnusedLocalVariableSeverity(ERROR);\r", "+\t\t\t\tsetUnusedLocalVariableSeverity(Error);\r", "-\t\t\t\tsetUnusedLocalVariableSeverity(WARNING);\r", "+\t\t\t\tsetUnusedLocalVariableSeverity(Warning);\r", "-\t\t\t\tsetUnusedLocalVariableSeverity(IGNORE);\r", "+\t\t\t\tsetUnusedLocalVariableSeverity(Ignore);\r", "-\t\t\t\tsetUnusedArgumentSeverity(ERROR);\r", "+\t\t\t\tsetUnusedArgumentSeverity(Error);\r", "-\t\t\t\tsetUnusedArgumentSeverity(WARNING);\r", "+\t\t\t\tsetUnusedArgumentSeverity(Warning);\r", "-\t\t\t\tsetUnusedArgumentSeverity(IGNORE);\r", "+\t\t\t\tsetUnusedArgumentSeverity(Ignore);\r", "-\t\t\t\tsetAccessEmulationSeverity(ERROR);\r", "+\t\t\t\tsetAccessEmulationSeverity(Error);\r", "-\t\t\t\tsetAccessEmulationSeverity(WARNING);\r", "+\t\t\t\tsetAccessEmulationSeverity(Warning);\r", "-\t\t\t\tsetAccessEmulationSeverity(IGNORE);\r", "+\t\t\t\tsetAccessEmulationSeverity(Ignore);\r", "-\t\t\t\tsetNonExternalizedStringLiteralSeverity(ERROR);\r", "+\t\t\t\tsetNonExternalizedStringLiteralSeverity(Error);\r", "-\t\t\t\tsetNonExternalizedStringLiteralSeverity(WARNING);\r", "+\t\t\t\tsetNonExternalizedStringLiteralSeverity(Warning);\r", "-\t\t\t\tsetNonExternalizedStringLiteralSeverity(IGNORE);\r", "+\t\t\t\tsetNonExternalizedStringLiteralSeverity(Ignore);\r", "-\t\t\t\tsetAssertIdentifierSeverity(ERROR);\r", "+\t\t\t\tsetAssertIdentifierSeverity(Error);\r", "-\t\t\t\tsetAssertIdentifierSeverity(WARNING);\r", "+\t\t\t\tsetAssertIdentifierSeverity(Warning);\r", "-\t\t\t\tsetAssertIdentifierSeverity(IGNORE);\r", "+\t\t\t\tsetAssertIdentifierSeverity(Ignore);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63213a99c0caf100f5c360600e83cd58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "f32db68c729263506f55f86cbc0d190382ce9b72", "commitAfterChange": "3eb060c9534fa433113cc21253ee7307d78379c2", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r public int computeSeverity(int problemId)", "signatureAfterChange": "\r public int computeSeverity(int problemId)", "diff": ["-\t\t\tif ((errorThreshold & UnreachableCode) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.UnreachableCode) != 0){\r", "-\t\t\tif ((warningThreshold & UnreachableCode) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.UnreachableCode) != 0){\r", "-\t\t\tif ((errorThreshold & MaskedCatchBlock) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.MaskedCatchBlock) != 0){\r", "-\t\t\tif ((warningThreshold & MaskedCatchBlock) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.MaskedCatchBlock) != 0){\r", "-\t\t\tif ((errorThreshold & ImportProblem) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.ImportProblem) != 0){\r", "-\t\t\tif ((warningThreshold & ImportProblem) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.ImportProblem) != 0){\r", "-\t\t\tif ((errorThreshold & MethodWithConstructorName) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.MethodWithConstructorName) != 0){\r", "-\t\t\tif ((warningThreshold & MethodWithConstructorName) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.MethodWithConstructorName) != 0){\r", "-\t\t\tif ((errorThreshold & OverriddenPackageDefaultMethod) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.OverriddenPackageDefaultMethod) != 0){\r", "-\t\t\tif ((warningThreshold & OverriddenPackageDefaultMethod) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.OverriddenPackageDefaultMethod) != 0){\r", "-\t\t\tif ((errorThreshold & UsingDeprecatedAPI) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.UsingDeprecatedAPI) != 0){\r", "-\t\t\tif ((warningThreshold & UsingDeprecatedAPI) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.UsingDeprecatedAPI) != 0){\r", "-\t\t\tif ((errorThreshold & UnusedLocalVariable) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.UnusedLocalVariable) != 0){\r", "-\t\t\tif ((warningThreshold & UnusedLocalVariable) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.UnusedLocalVariable) != 0){\r", "-\t\t\tif ((errorThreshold & UnusedArgument) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.UnusedArgument) != 0){\r", "-\t\t\tif ((warningThreshold & UnusedArgument) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.UnusedArgument) != 0){\r", "-\t\t\tif ((errorThreshold & TemporaryWarning) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.NoImplicitStringConversion) != 0){\r", "-\t\t\tif ((warningThreshold & TemporaryWarning) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.NoImplicitStringConversion) != 0){\r", "-\t\t\tif ((errorThreshold & AccessEmulation) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.AccessEmulation) != 0){\r", "-\t\t\tif ((warningThreshold & AccessEmulation) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.AccessEmulation) != 0){\r", "-\t\t\tif ((errorThreshold & NonExternalizedString) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.NonExternalizedString) != 0){\r", "-\t\t\tif ((warningThreshold & NonExternalizedString) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.NonExternalizedString) != 0){\r", "-\t\t\tif ((errorThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\tif ((errorThreshold & CompilerOptions.AssertUsedAsAnIdentifier) != 0){\r", "-\t\t\tif ((warningThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\tif ((warningThreshold & CompilerOptions.AssertUsedAsAnIdentifier) != 0){\r"]}], "num": 39582}