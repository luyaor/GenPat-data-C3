{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24d00ee13924e4889a6677f20216114c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6be282d03587f2a8985b8c4a1a8a28cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "418c9d96f68afdaa5bf2af6f5a37a844d4f83382", "commitAfterChange": "0ca5c78856085a3f8ae52f8191293310a57eb6c4", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate void printJavadocText(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["+\t\tboolean preserveBreakLines = this.formatter.preferences.preserve_existing_line_breaks;", "-\t\t\tif (!clearBlankLines) {", "+\t\t\tif (!clearBlankLines || preserveBreakLines) {", "-\t\t\t\tif (startLine > (endLine+1)) {", "+\t\t\t\tint gapLine = endLine;", "+\t\t\t\tif (!preserveBreakLines) gapLine++; // if not preserving line break then gap must be at least of one line", "+\t\t\t\tif (startLine > gapLine) {", "-\t\t\t\t\tprintJavadocGapLines(end+1, nextStart-1, startLine - endLine, this.formatter.preferences.comment_clear_blank_lines_in_javadoc_comment, false, null);", "+\t\t\t\t\tint newLines = startLine - endLine;", "+\t\t\t\t\tif (clearBlankLines) newLines = 1;", "+\t\t\t\t\tprintJavadocGapLines(end+1, nextStart-1, newLines, this.formatter.preferences.comment_clear_blank_lines_in_javadoc_comment, false, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bf5e194bc4a220a6e36ee4e05393328", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/LocalVariable.java", "commitBeforeChange": "121b32e18f81651c46c5eef5a9e37b6ce9e209b8", "commitAfterChange": "e6b6e8e7cf72bbb312eb9f9e38cd6ce7f674bd04", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate IAnnotation getAnnotation(final org.eclipse.jdt.internal.compiler.ast.Annotation annotation, JavaElement parentElement)", "signatureAfterChange": " \t \tprivate IAnnotation getAnnotation(final org.eclipse.jdt.internal.compiler.ast.Annotation annotation, JavaElement parentElement)", "diff": ["+\t\tfinal int typeStart = annotation.type.sourceStart();", "+\t\tfinal int typeEnd = annotation.type.sourceEnd();", "+\t\tfinal int sourceStart = annotation.sourceStart();", "+\t\tfinal int sourceEnd = annotation.declarationSourceEnd;", "+\t\t\tpublic ISourceRange getNameRange() throws JavaModelException {", "+\t\t\t\treturn new SourceRange(typeStart, typeEnd - typeStart + 1);", "+\t\t\t}", "+\t\t\tpublic ISourceRange getSourceRange() throws JavaModelException {", "+\t\t\t\treturn new SourceRange(sourceStart, sourceEnd - sourceStart + 1);", "+\t\t\t}"]}], "num": 65723}