{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ed5517c894d69a04b5e5f59fd3eab84", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9379b195ded8941da70b67ee1f94bd2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetOutputLocationOperation.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public IJavaModelStatus verify()", "signatureAfterChange": "\r public IJavaModelStatus verify()", "diff": ["-\tif (fOutputLocation == null) {\r", "-\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.NULL_PATH);\r", "-\t}\r", "-\t\r", "-\tif (fOutputLocation.isAbsolute()) {\r", "-\t\tIProject project = ((IJavaProject) fElementsToProcess[0]).getProject();\r", "-\r", "-\t\tif (project.getFullPath().isPrefixOf(fOutputLocation)) {\r", "-\t\t\t//project relative path\r", "-\t\t\tString projectName = fOutputLocation.segment(0);\r", "-\t\t\tif (!projectName.equals(fElementsToProcess[0].getElementName())) {\r", "-\t\t\t\t//a workspace relative path outside of this project\r", "-\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.PATH_OUTSIDE_PROJECT, fOutputLocation);\r", "-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.DEVICE_PATH, fOutputLocation);\r", "-\t\t}\r", "-\t} else {\r", "-\t\treturn new JavaModelStatus(IJavaModelStatusConstants.RELATIVE_PATH, fOutputLocation);\r", "-\t}\r", "-\r", "-\r", "-\t// check if any source entries coincidates with binary output - in which case nesting inside output is legal\r", "-\tboolean allowNestingInOutput = false;\r", "-\tboolean hasSource = false;\r", "-\tfor (int i = 0 ; i < classpath.length; i++) {\r", "-\t\tif (classpath[i].getEntryKind() == IClasspathEntry.CPE_SOURCE) hasSource = true;\r", "-\t\tif (classpath[i].getPath().equals(fOutputLocation)){\r", "-\t\t\tallowNestingInOutput = true;\r", "-\t\t\tbreak;\r", "-\t\t}\r", "-\t}\r", "-\tif (!hasSource) allowNestingInOutput = true; // if no source, then allowed\r", "-\r", "-\t// check all entries\r", "-\tfor (int i = 0 ; i < classpath.length; i++) {\r", "-\t\tIClasspathEntry entry = classpath[i];\r", "-\t\tIPath entryPath = entry.getPath();\r", "-\r", "-\t\t// no further check if entry coincidates with project or output location\r", "-\t\tif (entryPath.equals(projectPath)) continue;\r", "-\t\tif (entryPath.equals(fOutputLocation)) continue;\r", "-\t\t\r", "-\t\t// prevent nesting output location inside entry\r", "-\t\tif (entryPath.isPrefixOf(fOutputLocation)) {\r", "-\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, fOutputLocation);\r", "-\t\t}\r", "-\r", "-\t\t// prevent nesting entry inside output location - when distinct from project or a source folder\r", "-\t\tif (!allowNestingInOutput && fOutputLocation.isPrefixOf(entryPath)) {\r", "-\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.INVALID_PATH, fOutputLocation);\r", "-\t\t}\r", "-\t}\r", "-\treturn JavaModelStatus.VERIFIED_OK;\r", "+\treturn JavaConventions.validateClasspath((IJavaProject) fElementsToProcess[0], classpath, fOutputLocation);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e884b057d0311a175e14cc1a0bcb2fc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetOutputLocationOperation.java", "commitBeforeChange": "b04602938404af4f8569a399fb36a5018768a262", "commitAfterChange": "6a230a9d6ae1a4a6adbf38879cb9ee685eccffe9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic IJavaModelStatus verify()", "signatureAfterChange": "\r public IJavaModelStatus verify()", "diff": ["-\t */\r", "-\tpublic IJavaModelStatus verify() {\r", "-\t\tIJavaModelStatus status = super.verify();\r", "-\t\tif (!status.isOK()) {\r", "-\t\t\treturn status;\r", "-\t\t}\r", "-\t\tif (fOutputLocation == null) {\r", "-\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.NULL_PATH);\r", "-\t\t}\r", "-\r", "-\t\tif (fOutputLocation.isAbsolute()) {\r", "-\t\t\tIProject project = ((IJavaProject) fElementsToProcess[0]).getProject();\r", "-\r", "-\t\t\tif (project.getFullPath().isPrefixOf(fOutputLocation)) {\r", "-\t\t\t\t//project relative path\r", "-\t\t\t\tString projectName = fOutputLocation.segment(0);\r", "-\t\t\t\tif (!projectName.equals(fElementsToProcess[0].getElementName())) {\r", "-\t\t\t\t\t//a workspace relative path outside of this project\r", "-\t\t\t\t\treturn new JavaModelStatus(\r", "-\t\t\t\t\t\tIJavaModelStatusConstants.PATH_OUTSIDE_PROJECT,\r", "-\t\t\t\t\t\tfOutputLocation);\r", "-\t\t\t\t}\r", "-\t\t\t} else {\r", "-\t\t\t\treturn new JavaModelStatus(\r", "-\t\t\t\t\tIJavaModelStatusConstants.DEVICE_PATH,\r", "-\t\t\t\t\tfOutputLocation);\r", "-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\treturn new JavaModelStatus(\r", "-\t\t\t\tIJavaModelStatusConstants.RELATIVE_PATH,\r", "-\t\t\t\tfOutputLocation);\r", "-\t\t}\r", "-\r", "-\t\tIClasspathEntry[] cp = null;\r", "-\t\tIJavaProject javaProject = (IJavaProject) getElementToProcess();\r", "-\t\ttry {\r", "-\t\t\tcp = javaProject.getResolvedClasspath(true);\r", "-\t\t} catch (JavaModelException e) {\r", "-\t\t\treturn e.getJavaModelStatus();\r", "-\t\t}\r", "-\t\tIPath projectPath = javaProject.getProject().getFullPath();\r", "-\t\tfor (int i = 0; i < cp.length; i++) {\r", "-\t\t\tIPath entry = cp[i].getPath();\r", "-\t\t\tif (!entry.equals(projectPath)\r", "-\t\t\t\t&& !entry.equals(fOutputLocation)\r", "-\t\t\t\t&& (fOutputLocation.isPrefixOf(entry) || entry.isPrefixOf(fOutputLocation))) {\r", "-\t\t\t\treturn new JavaModelStatus(\r", "-\t\t\t\t\tIJavaModelStatusConstants.INVALID_PATH,\r", "-\t\t\t\t\tfOutputLocation);\r", "-\t\t\t}\r", "-\t\t}\r", "-\r", "-\t\treturn JavaModelStatus.VERIFIED_OK;\r", "+ */\r", "+public IJavaModelStatus verify() {\r", "+\tIJavaModelStatus status = super.verify();\r", "+\tif (!status.isOK()) {\r", "+\t\treturn status;\r", "+\t}\r", "+\t// retrieve classpath\r", "+\tIClasspathEntry[] classpath = null;\r", "+\tIJavaProject javaProject= (IJavaProject)getElementToProcess();\r", "+\tIPath projectPath= javaProject.getProject().getFullPath();\t\r", "+\ttry {\r", "+\t\tclasspath = javaProject.getResolvedClasspath(true);\r", "+\t} catch (JavaModelException e) {\r", "+\t\treturn e.getJavaModelStatus();\r", "+\t}\r", "+\treturn JavaConventions.validateClasspath((IJavaProject) fElementsToProcess[0], classpath, fOutputLocation);\r", "+}\r"]}], "num": 65672}