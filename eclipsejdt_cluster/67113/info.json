{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0d2dd5e5c6ca75e5d7455f9e90ad4962", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3c8c03ccc08acdf99068b7464ba6aa2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "c98abd1679793c741445024ae2ee115b37f6fe95", "commitAfterChange": "b2ee2f0e0ad1c5d61d4417df1a17fc01d93cc41f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void printComment(boolean insertNewLineAfterComment)", "signatureAfterChange": "  \tpublic void printComment()", "diff": ["-\tpublic void printComment(boolean insertNewLineAfterComment) {", "+\tpublic void printComment() {", "+\t\t\tboolean hasComment = false;", "+\t\t\tboolean hasLineComment = false;", "-\t\t\t\t\t\tpreserveEmptyLines(count);", "+\t\t\t\t\t\tif (count > 1) {", "+\t\t\t\t\t\t\tif (hasLineComment) {", "+\t\t\t\t\t\t\t\t// the line comment consumed of of the line break", "+\t\t\t\t\t\t\t\tpreserveEmptyLines(count + 1);", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tpreserveEmptyLines(count);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else if (count == 1) {", "+\t\t\t\t\t\t\tif (hasLineComment) {", "+\t\t\t\t\t\t\t\tpreserveEmptyLines(1);", "+\t\t\t\t\t\t\t} else if (hasComment) {", "+\t\t\t\t\t\t\t\tprintNewLine();", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "-\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.currentPosition;\t\t\t\t\t\t", "+\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.currentPosition;", "+\t\t\t\t\t\thasLineComment = true;\t\t\t\t\t", "-\t\t\t\t\t\tif (insertNewLineAfterComment) {", "-\t\t\t\t\t\t\tthis.printNewLine();", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\thasLineComment = false;", "+\t\t\t\t\t\thasComment = true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f0673385051e6cb5d0630f5ad0e42762", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "12f65faa0a3b984e9751d243a3eab6e6ab078ed7", "commitAfterChange": "36d2cf066100445cbe45dd4cf851204404f7d76f", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \t \tpublic void printEndOfCompilationUnit()", "signatureAfterChange": " \t \tpublic void printEndOfCompilationUnit()", "diff": ["-\t\t\t\t\t\tthis.printLineComment(this.scanner.getRawTokenSource());", "+\t\t\t\t\t\tprintLineComment();", "-\t\t\t\t\t\tthis.printBlockComment(this.scanner.getRawTokenSource(), false);", "+\t\t\t\t\t\tprintBlockComment(false);", "-\t\t\t\t\t\t\t\tpreserveEmptyLines(count - 1, this.scanner.getCurrentTokenStartPosition());", "+\t\t\t\t\t\t\t\tpreserveEmptyLines(count - 1, this.scanner.startPosition);", "-\t\t\t\t\t\t\t\tprintNewLine(this.scanner.getCurrentTokenStartPosition());", "+\t\t\t\t\t\t\t\tprintNewLine(this.scanner.startPosition);", "-\t\t\t\t\t\tthis.printBlockComment(this.scanner.getRawTokenSource(), true);", "+\t\t\t\t\t\tif (this.formatJavadocComment) {", "+\t\t\t\t\t\t\tprintJavadocComment(this.scanner.startPosition, this.scanner.currentPosition, -1);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tprintBlockComment(true);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tprintNewLine();", "-\t\t\t\t\t\tchar[] currentTokenSource = this.scanner.getRawTokenSource();", "-\t\t\t\t\t\tthis.print(currentTokenSource, this.formatter.preferences.insert_space_before_semicolon);", "+\t\t\t\t\t\tprint(this.scanner.currentPosition - this.scanner.startPosition, this.formatter.preferences.insert_space_before_semicolon);"]}], "num": 67113}