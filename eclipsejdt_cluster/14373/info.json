{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "393e88d010a5059f8aa7abea7f523d82", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2e8791817bb8cbed564b9aac11a9524b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "9d9e2eb6f20c331f15a7cf07b3513cf5a8ad5221", "commitAfterChange": "eb9a1c3b4402e875a07b4f0d045da2b3f11e50f6", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic MethodBinding findMethodForArray( \t\tArrayBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethodForArray( \t\tArrayBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["+\t\tTypeBinding leafType = receiverType.leafComponentType();", "+\t\tif (leafType instanceof ReferenceBinding) {", "+\t\t\tif (!((ReferenceBinding) leafType).canBeSeenBy(this))", "+\t\t\t\treturn new ProblemMethodBinding(selector, MethodBinding.NoParameters, (ReferenceBinding)leafType, ReceiverTypeNotVisible);", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d37486e65d65ad4cc41f62dfb743cb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReferenceExpression.java", "commitBeforeChange": "99381827a867cccda23031a7427686b28435bd33", "commitAfterChange": "850beb1f09df6032835753aabec914d27d4848de", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["+\t\t} else if (isConstructorReference()) {", "+\t\t\tTypeBinding type = this.receiverType.leafComponentType();", "+\t\t\tif (type.isMemberType() &&", "+\t\t\t\ttype instanceof ReferenceBinding && !((ReferenceBinding)type).isStatic()) {", "+\t\t\t\tcurrentScope.tagAsAccessingEnclosingInstanceStateOf((ReferenceBinding)type, false);", "+\t\t\t}"]}], "num": 14373}