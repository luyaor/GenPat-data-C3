{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6b441602bd9ed708380209c7ef29ed2", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cb737ad5ac08d59cd2f69e41101b505", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "bcb46990486d868577608d099b51c359510600ab", "commitAfterChange": "76641371763d25b26245b79d3162c6759e069b9e", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " public int resolveLevel(ASTNode possibleMatchingNode)", "signatureAfterChange": " public int resolveLevel(ASTNode possibleMatchingNode)", "diff": ["-\tif (this.pattern.findReferences && possibleMatchingNode instanceof MessageSend)", "-\t\treturn resolveLevel((MessageSend) possibleMatchingNode);", "-\tif (this.pattern.findDeclarations && possibleMatchingNode instanceof MethodDeclaration)", "-\t\treturn resolveLevel(((MethodDeclaration) possibleMatchingNode).binding);", "+\tif (this.pattern.findReferences) {", "+\t\tif (possibleMatchingNode instanceof MessageSend) {", "+\t\t\treturn resolveLevel((MessageSend) possibleMatchingNode);", "+\t\t}", "+\t\tif (possibleMatchingNode instanceof MemberValuePair) {", "+\t\t\tMemberValuePair memberValuePair = (MemberValuePair) possibleMatchingNode;", "+\t\t\treturn resolveLevel(memberValuePair.binding);", "+\t\t}", "+\t}", "+\tif (this.pattern.findDeclarations) {", "+\t\tif (possibleMatchingNode instanceof MethodDeclaration) {", "+\t\t\treturn resolveLevel(((MethodDeclaration) possibleMatchingNode).binding);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2892f96b870dcd82a5ddb801b42ed66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "d32dbe370312bc68ef5b59c6268bfdfcda839b17", "commitAfterChange": "4b84620f8d71e6de7e42a2050aa5360e2143f846", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "signatureAfterChange": " \tpublic Binding getBinding(char[] name, int mask, InvocationSite invocationSite, boolean needResolve)", "diff": ["-\t\t\t\tboolean shouldCaptureOuterLocals = false;", "+\t\t\t\tboolean shouldTrackOuterLocals = false;", "-\t\t\t\t\t\t\t\tif (shouldCaptureOuterLocals && invocationSite instanceof NameReference) {", "+\t\t\t\t\t\t\t\tif (shouldTrackOuterLocals) {", "+\t\t\t\t\t\t\t\t\tif (invocationSite instanceof NameReference) {", "+\t\t\t\t\t\t\t\t\t} else if (invocationSite instanceof AbstractVariableDeclaration) {", "+\t\t\t\t\t\t\t\t\t\tAbstractVariableDeclaration variableDeclaration = (AbstractVariableDeclaration) invocationSite;", "+\t\t\t\t\t\t\t\t\t\tvariableDeclaration.bits |= ASTNode.ShadowsOuterLocal;", "+\t\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tshouldCaptureOuterLocals = true;", "+\t\t\t\t\t\t\tshouldTrackOuterLocals = true;", "-\t\t\t\t\t\tshouldCaptureOuterLocals = true;", "+\t\t\t\t\t\tshouldTrackOuterLocals = true;"]}], "num": 19941}