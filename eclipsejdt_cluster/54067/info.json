{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "276f79d49e32affb70a830c8bf199b93", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b1a217cc55d3854f9fdad82a2eb40bc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CaptureBinding.java", "commitBeforeChange": "e0224da700606ee4894293f10b71bd4b6b9d30f5", "commitAfterChange": "3cdc40c3e141f1d38e6828b30530d087867619a9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tpublic CaptureBinding(WildcardBinding wildcard, ReferenceBinding sourceType, int position)", "signatureAfterChange": " \t \tpublic CaptureBinding(WildcardBinding wildcard, ReferenceBinding sourceType, int position)", "diff": ["-\t\tTypeVariableBinding wildcardVariable = wildcard.typeVariable();", "-\t\tswitch (wildcard.boundKind) {", "-\t\t\tcase Wildcard.EXTENDS :", "-\t\t\t\tthis.superclass = wildcard.superclass();", "-\t\t\t\tthis.firstBound = wildcard.bound;", "-\t\t\t\tReferenceBinding[] wildcardInterfaces = wildcard.superInterfaces();", "-\t\t\t\tif (wildcardInterfaces == NoSuperInterfaces) {", "-\t\t\t\t\tthis.superInterfaces = NoSuperInterfaces;", "-\t\t\t\t} else {", "-\t\t\t\t\tthis.superInterfaces = Scope.greaterLowerBound(wildcardInterfaces);", "-\t\t\t\t}", "-\t\t\t\tif ((wildcard.bound.tagBits & HasTypeVariable) == 0)", "-\t\t\t\t\tthis.tagBits &= ~HasTypeVariable;", "-\t\t\t\tbreak;", "-\t\t\tcase Wildcard.UNBOUND :", "-\t\t\t\tthis.superclass = wildcardVariable.superclass();", "-\t\t\t\tthis.superInterfaces = wildcardVariable.superInterfaces();", "-\t\t\t\tthis.tagBits &= ~HasTypeVariable;", "-\t\t\t\tbreak;", "-\t\t\tcase Wildcard.SUPER :", "-\t\t\t\tthis.superclass = wildcardVariable.superclass();", "-\t\t\t\tif (wildcardVariable.firstBound == this.superclass || wildcard.bound == this.superclass) {", "-\t\t\t\t\tthis.firstBound = this.superclass;", "-\t\t\t\t}", "-\t\t\t\tthis.superInterfaces = wildcardVariable.superInterfaces();", "-\t\t\t\tthis.lowerBound = wildcard.bound;", "-\t\t\t\tif ((wildcard.bound.tagBits & HasTypeVariable) == 0)", "-\t\t\t\t\tthis.tagBits &= ~HasTypeVariable;", "-\t\t\t\tbreak;", "-\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e3526c1b5b48c94eb91f3a845821db36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "37468b15b5c10767a0d1f5bcf745b5635724272d", "commitAfterChange": "269c8c1f587787c02ae256af1e14f83a052a8b35", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \t\tpublic CategorizedProblem createProblem( \t\t\tchar[] originatingFileName, \t\t\tint problemId, \t\t\tString[] problemArguments, \t\t\tString[] messageArguments, \t\t\tint severity, \t\t\tint start, \t\t\tint end, \t\t\tint lineNumber, \t\t\tint columnNumber)", "signatureAfterChange": " \t\t \t\tpublic CategorizedProblem createProblem( \t\t\t\tchar[] originatingFileName, \t\t\t\tint problemId, \t\t\t\tString[] problemArguments, \t\t\t\tString[] messageArguments, \t\t\t\tint severity, \t\t\t\tint start, \t\t\t\tint end, \t\t\t\tint lineNumber, \t\t\t\tint columnNumber)", "diff": ["-\t\tpublic CategorizedProblem createProblem(", "-\t\t\tchar[] originatingFileName,", "-\t\t\tint problemId,", "-\t\t\tString[] problemArguments,", "-\t\t\tString[] messageArguments,", "-\t\t\tint severity,", "-\t\t\tint start,", "-\t\t\tint end,", "-\t\t\tint lineNumber,", "-\t\t\tint columnNumber) {", "-\t\t\t", "-\t\t\tCategorizedProblem pb = super.createProblem(", "-\t\t\t\toriginatingFileName,", "-\t\t\t\tproblemId,", "-\t\t\t\tproblemArguments,", "-\t\t\t\tmessageArguments,", "-\t\t\t\tseverity,", "-\t\t\t\tstart,", "-\t\t\t\tend,", "-\t\t\t\tlineNumber,", "-\t\t\t\tcolumnNumber);", "+\t\tpublic CategorizedProblem createProblem(", "+\t\t\t\tchar[] originatingFileName,", "+\t\t\t\tint problemId,", "+\t\t\t\tString[] problemArguments,", "+\t\t\t\tString[] messageArguments,", "+\t\t\t\tint severity,", "+\t\t\t\tint start,", "+\t\t\t\tint end,", "+\t\t\t\tint lineNumber,", "+\t\t\t\tint columnNumber) {", "+\t\t\t\treturn checkProblem(", "+\t\t\t\t\tsuper.createProblem(", "+\t\t\t\t\t\toriginatingFileName,", "+\t\t\t\t\t\tproblemId,", "+\t\t\t\t\t\tproblemArguments,", "+\t\t\t\t\t\tmessageArguments,", "+\t\t\t\t\t\tseverity,", "+\t\t\t\t\t\tstart,", "+\t\t\t\t\t\tend,", "+\t\t\t\t\t\tlineNumber,", "+\t\t\t\t\t\tcolumnNumber), originatingFileName, severity, start);", "+\t\t}"]}], "num": 54067}