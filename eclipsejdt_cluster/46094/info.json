{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0de63ed89aa042b8ec1697466f3e28e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7b82937454a5beed5320f394e293f82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static CompilationUnitDeclaration buildCompilationUnit( \t\tISourceType[] sourceTypes, \t\tboolean needFieldsAndMethods, \t\tboolean needMemberTypes, \t\tProblemReporter problemReporter, \t\tCompilationResult compilationResult)", "signatureAfterChange": " \tpublic static CompilationUnitDeclaration buildCompilationUnit( \t\tISourceType[] sourceTypes, \t\tboolean needFieldsAndMethods, \t\tboolean needMemberTypes, \t\tboolean needFieldInitialization, \t\tProblemReporter problemReporter, \t\tCompilationResult compilationResult)", "diff": ["+\t\tboolean needFieldInitialization,", "+\t\t\t", "+\t\treturn ", "+\t\t\tnew SourceTypeConverter(needFieldInitialization, problemReporter).convert(", "+\t\t\t\tsourceTypes, ", "+\t\t\t\tneedFieldsAndMethods,", "+\t\t\t\tneedMemberTypes,", "+\t\t\t\tcompilationResult);", "+\t}", "-\t\tCompilationUnitDeclaration compilationUnit =", "-\t\t\tnew CompilationUnitDeclaration(problemReporter, compilationResult, 0);", "-\t\t\tcompilationUnit.currentPackage =", "-\t\tcompilationUnit.imports = new ImportReference[importCount];", "-\t\t\tcompilationUnit.imports[i] = createImportReference(importNames[i], start, end);", "-\t\tcompilationUnit.types = new TypeDeclaration[typeCount];", "-\t\t\tcompilationUnit.types[i] =", "-\t\treturn compilationUnit;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5fda1fbaed0095a15dc3d1bd0c33aae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "7065da01531bf4c318c59206b62aa1503a948abe", "commitAfterChange": "0d303c13e0085d7aef9947e46f37c617f206a066", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static AbstractMethodDeclaration convert(ISourceMethod sourceMethod, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate CompilationUnitDeclaration convert( \t\tISourceType[] sourceTypes, \t\tboolean needFieldsAndMethods, \t\tboolean needMemberTypes, \t\tCompilationResult compilationResult)", "diff": ["+\t */", "+\tprivate CompilationUnitDeclaration convert(", "+\t\tISourceType[] sourceTypes,", "+\t\tboolean needFieldsAndMethods,", "+\t\tboolean needMemberTypes,", "+\t\tCompilationResult compilationResult) {", "+\t\tthis.unit = new CompilationUnitDeclaration(problemReporter, compilationResult, 0);", "+\t\t\tthis.unit.currentPackage =", "+\t\tthis.unit.imports = new ImportReference[importCount];", "+\t\t\tthis.unit.imports[i] = createImportReference(importNames[i], start, end);", "+\t\tthis.unit.types = new TypeDeclaration[typeCount];", "+\t\t\tthis.unit.types[i] =", "+\t\treturn this.unit;", "-\tprivate static AbstractMethodDeclaration convert(ISourceMethod sourceMethod, CompilationResult compilationResult) {"]}], "num": 46094}