{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f7bdb18d969c58a2120f89535a89511", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02ac958b0552a79af5ea886f10846058", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "cbf4d8b0c602d0860355a0bb315f58708fa257d2", "commitAfterChange": "0d8c4f28f9db6373751aa6d7cffbf4e0fcb51948", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void addMethodReference(char[] methodName, int argCount)", "signatureAfterChange": " public void addMethodReference(char[] methodName, int argCount)", "diff": ["+public void addMethodReference(char[] methodName, int argCount) {", "+\tthis.output.addRef(MethodPattern.createReference(methodName, argCount));", "-public void addMethodReference(char[] methodName, int argCount){", "-\tchar[] countChars;", "-\tif (argCount < 10) {", "-\t\tcountChars = COUNTS[argCount];", "-\t} else {", "-\t\tcountChars = String.valueOf(argCount).toCharArray();", "-\t}", "-\tthis.output.addRef(concat(METHOD_REF, methodName, countChars, SEPARATOR));", "-\t", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "486aef9bd6a67afc9bf13eab1ad4c2e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnit.java", "commitBeforeChange": "84293c0ffd9a104f06ce490e157c6c4731600736", "commitAfterChange": "abb63f2717e6ed308a5cb123b110f069f4dbbdf2", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic int getExtendedStartPosition(ASTNode node)", "signatureAfterChange": " \tpublic int getExtendedStartPosition(ASTNode node)", "diff": ["-\t\t */", "+\t\t *", "+\t\t*/", "+\t\treturn this.commentMapper.getExtendedStartPosition(node);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5faa05e10c794455ea3f5235cb49eff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AbstractIndexer.java", "commitBeforeChange": "cbf4d8b0c602d0860355a0bb315f58708fa257d2", "commitAfterChange": "0d8c4f28f9db6373751aa6d7cffbf4e0fcb51948", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void addConstructorReference(char[] typeName, int argCount)", "signatureAfterChange": " public void addConstructorReference(char[] typeName, int argCount)", "diff": ["-public void addConstructorReference(char[] typeName, int argCount){", "+public void addConstructorReference(char[] typeName, int argCount) {", "+\tthis.output.addRef(ConstructorPattern.createReference(CharOperation.lastSegment(typeName,'.'), argCount));", "+}", "-\tchar[] countChars;", "-\tif (argCount < 10) {", "-\t\tcountChars = COUNTS[argCount];", "-\t} else {", "-\t\tcountChars = String.valueOf(argCount).toCharArray();", "-\t}", "-\tthis.output.addRef(concat(CONSTRUCTOR_REF, CharOperation.lastSegment(typeName, '.'), countChars, SEPARATOR));", "-\t"]}], "num": 50334}