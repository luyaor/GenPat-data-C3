{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3f943530cc68448f5410bc1e7d9e9367", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b4e820670cd8ede06b8594f5e19d2b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "53a88facba099a7ef05d98b75f25800af60438f8", "commitAfterChange": "086132dd6f6e6011785d8d9b469716062157a8c1", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "   public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "signatureAfterChange": "   public BinaryTypeBinding(PackageBinding packageBinding, IBinaryType binaryType, LookupEnvironment environment)", "diff": ["+\t// need enclosing type to access type variables", "+\tchar[] enclosingTypeName = binaryType.getEnclosingTypeName();", "+\tif (enclosingTypeName != null) {", "+\t\t// attempt to find the enclosing type if it exists in the cache (otherwise - resolve it when requested)", "+\t\tthis.enclosingType = environment.getTypeFromConstantPoolName(enclosingTypeName, 0, -1, true); // pretend parameterized to avoid raw", "+\t\tthis.tagBits |= MemberTypeMask;   // must be a member type not a top-level or local type", "+\t\tthis.tagBits |= \tHasUnresolvedEnclosingType;", "+\t\tif (this.enclosingType().isStrictfp())", "+\t\t\tthis.modifiers |= AccStrictfp;", "+\t\tif (this.enclosingType().isDeprecated())", "+\t\t\tthis.modifiers |= AccDeprecatedImplicitly;", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "841433dba8614affa64352a1cc6941dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "53a88facba099a7ef05d98b75f25800af60438f8", "commitAfterChange": "086132dd6f6e6011785d8d9b469716062157a8c1", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "signatureAfterChange": " void cachePartsFrom(IBinaryType binaryType, boolean needFieldsAndMethods)", "diff": ["-", "-\t// need enclosing type to access type variables", "-\tchar[] enclosingTypeName = binaryType.getEnclosingTypeName();", "-\tif (enclosingTypeName != null) {", "-\t\t// attempt to find the enclosing type if it exists in the cache (otherwise - resolve it when requested)", "-\t\tthis.enclosingType = environment.getTypeFromConstantPoolName(enclosingTypeName, 0, -1, true); // pretend parameterized to avoid raw", "-\t\tthis.tagBits |= MemberTypeMask;   // must be a member type not a top-level or local type", "-\t\tthis.tagBits |= \tHasUnresolvedEnclosingType;", "-\t\tif (this.enclosingType().isStrictfp())", "-\t\t\tthis.modifiers |= AccStrictfp;", "-\t\tif (this.enclosingType().isDeprecated())", "-\t\t\tthis.modifiers |= AccDeprecatedImplicitly;", "-\t}"]}], "num": 51257}