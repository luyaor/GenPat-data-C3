{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "505a8fc8f2ad65bb27b2ab17423400c7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c16755a50d8cb2a8ad9644bdf6457d7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "e589570c4bd9e6c5ed804728bca5f124c9938845", "commitAfterChange": "876d1e29545f3823ab6b6c14229362303cd9cc00", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited)", "signatureAfterChange": " boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited)", "diff": ["-\t// skip it if otherInherited is defined by a subtype of inherited's declaringClass", "-\tif (inherited.declaringClass.erasure() != otherInherited.declaringClass.erasure())", "+\t// skip it if otherInherited is defined by a subtype of inherited's declaringClass or vice versa.", "+\t// avoid being order sensitive and check with the roles reversed also.", "+\tif (inherited.declaringClass.erasure() != otherInherited.declaringClass.erasure()) {", "+\t\tif (otherInherited.declaringClass.findSuperTypeOriginatingFrom(inherited.declaringClass) != null)", "+\t\t\treturn false;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cceb9e6d4c4fb028514d37dd30b53eb1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "e2422311047b85902980920dda1eeedf124d520c", "commitAfterChange": "c107fdebcaaafcbea0a28f68e9b229afba9f7c4f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited)", "signatureAfterChange": " boolean detectInheritedNameClash(MethodBinding inherited, MethodBinding otherInherited)", "diff": ["-\tif (!inherited.areParameterErasuresEqual(otherInherited) || inherited.returnType.erasure() != otherInherited.returnType.erasure()) return false;", "+\tif (!inherited.areParameterErasuresEqual(otherInherited) || inherited.returnType.erasure() != otherInherited.returnType.erasure())", "+\t\treturn false;", "+\t// skip it if otherInherited is defined by a subtype of inherited's declaringClass", "+\tif (inherited.declaringClass.erasure() != otherInherited.declaringClass.erasure())", "+\t\tif (inherited.declaringClass.findSuperTypeOriginatingFrom(otherInherited.declaringClass) != null)", "+\t\t\treturn false;"]}], "num": 42027}