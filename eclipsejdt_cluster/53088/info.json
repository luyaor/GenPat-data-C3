{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c5cf0122fedb2cde20971b5a0c25f4a1", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02707cb8a2b3c72788cd9ae55a384539", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/FieldInfo.java", "commitBeforeChange": "0e6d4fe5469565f21baa2fd0ec88d178818c619b", "commitAfterChange": "cbb190d7951b1dfbad32e0f6cb292449e9a61067", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void readModifierRelatedAttributes()", "signatureAfterChange": " private void readModifierRelatedAttributes()", "diff": ["-\t\tswitch(attributeName[0]) {", "-\t\t\tcase 'D' :", "-\t\t\t\tif (CharOperation.equals(attributeName, DeprecatedName))", "-\t\t\t\t\tthis.accessFlags |= AccDeprecated;", "-\t\t\t\tbreak;", "-\t\t\tcase 'S' :", "-\t\t\t\tif (CharOperation.equals(attributeName, SyntheticName))", "-\t\t\t\t\tthis.accessFlags |= AccSynthetic;", "-\t\t\t\tbreak;", "+\t\tif (attributeName.length != 0) {", "+\t\t\tswitch(attributeName[0]) {", "+\t\t\t\tcase 'D' :", "+\t\t\t\t\tif (CharOperation.equals(attributeName, DeprecatedName))", "+\t\t\t\t\t\tthis.accessFlags |= AccDeprecated;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 'S' :", "+\t\t\t\t\tif (CharOperation.equals(attributeName, SyntheticName))", "+\t\t\t\t\t\tthis.accessFlags |= AccSynthetic;", "+\t\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bfe1676fd2b54a58e5b3486f0fce46a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/antadapter/org/eclipse/jdt/core/JDTCompilerAdapter.java", "commitBeforeChange": "12676a40a68a3b786bc0aa72eb308209dd64976f", "commitAfterChange": "77aab2c769d1dbaaf2656e37440806240ad9ec1b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "signatureAfterChange": " \t \t \tprotected Commandline setupJavacCommand() throws BuildException", "diff": ["-\t        cmd.addArguments(compilerArgs);", "+\t\t\tif (compilerArgs.length != 0) {", "+\t\t        cmd.addArguments(compilerArgs);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74da8dd099098036bf593a85a9f07d70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "2fce56804d49c0a05726f79b99a24e8e9bfd421a", "commitAfterChange": "1e0e3c537e09ca4cfbda480b0f078caad66974d1", "methodNumberBeforeChange": 66, "methodNumberAfterChange": 66, "signatureBeforeChange": "  \tprivate void parseInnerType()", "signatureAfterChange": "  \tprivate void parseInnerType()", "diff": ["+\t\t// Might not actually be an inner type but came here as a consequence of '$' being present in type name", "+\t\tif (typeName.length == 0)", "+\t\t\treturn;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d91fa91b2de266d3a9df2a07c6f5fc85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/MethodInfo.java", "commitBeforeChange": "cbb190d7951b1dfbad32e0f6cb292449e9a61067", "commitAfterChange": "a875873381b5c93516e927c7a0f03c3097fc26b5", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private void readModifierRelatedAttributes()", "signatureAfterChange": " private void readModifierRelatedAttributes()", "diff": ["-\t\tswitch(attributeName[0]) {", "-\t\t\tcase 'D' :", "-\t\t\t\tif (CharOperation.equals(attributeName, DeprecatedName))", "-\t\t\t\t\tthis.accessFlags |= AccDeprecated;", "-\t\t\t\tbreak;", "-\t\t\tcase 'S' :", "-\t\t\t\tif (CharOperation.equals(attributeName, SyntheticName))", "-\t\t\t\t\tthis.accessFlags |= AccSynthetic;", "-\t\t\t\tbreak;", "-\t\t\tcase 'A' :", "-\t\t\t\tif (CharOperation.equals(attributeName, AnnotationDefaultName))", "-\t\t\t\t\tthis.accessFlags |= AccAnnotationDefault;", "-\t\t\t\tbreak;", "+\t\t// test added for obfuscated .class file. See 79772", "+\t\tif (attributeName.length != 0) {", "+\t\t\tswitch(attributeName[0]) {", "+\t\t\t\tcase 'D' :", "+\t\t\t\t\tif (CharOperation.equals(attributeName, DeprecatedName))", "+\t\t\t\t\t\tthis.accessFlags |= AccDeprecated;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 'S' :", "+\t\t\t\t\tif (CharOperation.equals(attributeName, SyntheticName))", "+\t\t\t\t\t\tthis.accessFlags |= AccSynthetic;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase 'A' :", "+\t\t\t\t\tif (CharOperation.equals(attributeName, AnnotationDefaultName))", "+\t\t\t\t\t\tthis.accessFlags |= AccAnnotationDefault;", "+\t\t\t\t\tbreak;", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e7068bf869c249f1525d452b23528af9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "dcc13bcc231a91a0da132c3e6be02c0dee1633d4", "commitAfterChange": "025681891696756dee175279859f47fc45429f5e", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 46, "signatureBeforeChange": " \tpublic IMarker[] getTaskMarkersFor(IPath path)", "signatureAfterChange": " \tpublic IMarker[] getTaskMarkersFor(IPath path)", "diff": ["-\t\t\t\tArrays.sort(markers, new Comparator() {", "-\t\t\t\t\tpublic int compare(Object o1, Object o2) {", "-\t\t\t\t\t\tIMarker marker1 = (IMarker) o1;", "-\t\t\t\t\t\tIMarker marker2 = (IMarker) o2;", "-\t\t\t\t\t\ttry {", "-\t\t\t\t\t\t\tfinal int start1 = ((Integer) marker1.getAttribute(IMarker.CHAR_START)).intValue();", "-\t\t\t\t\t\t\tfinal int start2 = ((Integer) marker2.getAttribute(IMarker.CHAR_START)).intValue();", "-\t\t\t\t\t\t\treturn start1 - start2;", "-\t\t\t\t\t\t} catch (CoreException e) {", "-\t\t\t\t\t\t\treturn 0;", "+\t\t\t\tif (markers.length > 1) {", "+\t\t\t\t\tArrays.sort(markers, new Comparator() {", "+\t\t\t\t\t\tpublic int compare(Object o1, Object o2) {", "+\t\t\t\t\t\t\tIMarker marker1 = (IMarker) o1;", "+\t\t\t\t\t\t\tIMarker marker2 = (IMarker) o2;", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tfinal int start1 = ((Integer) marker1.getAttribute(IMarker.CHAR_START)).intValue();", "+\t\t\t\t\t\t\t\tfinal int start2 = ((Integer) marker2.getAttribute(IMarker.CHAR_START)).intValue();", "+\t\t\t\t\t\t\t\treturn start1 - start2;", "+\t\t\t\t\t\t\t} catch (CoreException e) {", "+\t\t\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t\t\t}", "-\t\t\t\t\t}", "-\t\t\t\t});", "+\t\t\t\t\t});", "+\t\t\t\t}"]}], "num": 53088}