{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "87adc46cfa9aabcfa9f793a3319827f4", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2676d6e65d7f175248d6ad5098500a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "393d81e7a2750eabcb8c375616d604c7414bb307", "commitAfterChange": "e92eaaa1784a8109263b46f06b6bf18ed41ac1b1", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\tif (didSpecifyCompliance && CompilerOptions.versionToJdkLevel((String)this.options.get(CompilerOptions.OPTION_Compliance)) <= ClassFileConstants.JDK1_3) {", "+\t\t\t\t\tif (didSpecifyCompliance && CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) <= ClassFileConstants.JDK1_3) {", "-\t\tif (CompilerOptions.versionToJdkLevel((String)this.options.get(CompilerOptions.OPTION_Source)) >= ClassFileConstants.JDK1_4", "-\t\t\t\t&& CompilerOptions.versionToJdkLevel((String)this.options.get(CompilerOptions.OPTION_TargetPlatform)) < ClassFileConstants.JDK1_4", "+\t\tif (CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Source)) >= ClassFileConstants.JDK1_4", "+\t\t\t\t&& CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_TargetPlatform)) < ClassFileConstants.JDK1_4", "-\t\tif (CompilerOptions.versionToJdkLevel((String)this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_4", "-\t\t\t\t&& CompilerOptions.versionToJdkLevel((String)this.options.get(CompilerOptions.OPTION_TargetPlatform)) >= ClassFileConstants.JDK1_4", "+\t\tif (CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_4", "+\t\t\t\t&& CompilerOptions.versionToJdkLevel(this.options.get(CompilerOptions.OPTION_TargetPlatform)) >= ClassFileConstants.JDK1_4"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6f436cedb217f60008fc7bed5794475", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "8acc10d4567dfe19e44450e6767e3412557d0ca5", "commitAfterChange": "5cb03c90065b8afa84e6ff1478ae9981fadf030b", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\tboolean didSpecifySourceLevel = false;", "-\t\tboolean didSpecifyTarget = false;", "-\t\t\t\tdidSpecifySourceLevel = true;", "-\t\t\t\tdidSpecifyTarget = true;", "-\t\tif (!didSpecifyCompliance){", "-\t\t\t\tif (options.get(CompilerOptions.OPTION_Source).equals(CompilerOptions.VERSION_1_4)){", "-\t\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "-\t\t\t\t} else {", "-\t\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);", "-\t\t\t\t}", "-\t\t}", "-\t\tString compliance = (String)options.get(CompilerOptions.OPTION_Compliance);", "-\t\tif (CompilerOptions.VERSION_1_4.equals(compliance)){", "-\t\t\t", "-\t\t\t// default 1.4 settings", "-\t\t\tif (!didSpecifySourceLevel){", "-\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_4);", "-\t\t\t}", "-\t\t\tif (!didSpecifyTarget){", "-\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "-\t\t\t}", "-\t\t} else if (CompilerOptions.VERSION_1_3.equals(compliance)){", "-", "-\t\t\t// default 1.4 settings", "-\t\t\tif (!didSpecifySourceLevel){", "-\t\t\t\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_3);", "-\t\t\t}", "-\t\t\tif (!didSpecifyTarget){", "-\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);", "+\t\tif (options.get(CompilerOptions.OPTION_Source).equals(CompilerOptions.VERSION_1_4)){", "+\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "+\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "+\t\t} else {", "+\t\t\tString javaVMVersion = System.getProperty(\"java.vm.version\"); //$NON-NLS-1$", "+\t\t\tif (javaVMVersion != null && javaVMVersion.startsWith(\"1.4\")) { //$NON-NLS-1$", "+\t\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_3);", "+\t\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1d42a0434b3f4bcccaa449185004c6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\t\tif (didSpecifyCompliance && options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_3)) {", "+\t\t\t\t\tif (didSpecifyCompliance && CompilerOptions.versionToJdkLevel((String)options.get(CompilerOptions.OPTION_Compliance)) <= ClassFileConstants.JDK1_3) {", "-", "-\t\tif (options.get(CompilerOptions.OPTION_Source).equals(CompilerOptions.VERSION_1_4)", "-\t\t\t\t&& !options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_4)", "+\t\tif (CompilerOptions.versionToJdkLevel((String)options.get(CompilerOptions.OPTION_Source)) >= ClassFileConstants.JDK1_4", "+\t\t\t\t&& CompilerOptions.versionToJdkLevel((String)options.get(CompilerOptions.OPTION_TargetPlatform)) < ClassFileConstants.JDK1_4", "-\t\tif (options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_4)", "-\t\t\t\t&& !options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)", "+\t\tif (CompilerOptions.versionToJdkLevel((String)options.get(CompilerOptions.OPTION_Compliance)) < ClassFileConstants.JDK1_4", "+\t\t\t\t&& CompilerOptions.versionToJdkLevel((String)options.get(CompilerOptions.OPTION_TargetPlatform)) >= ClassFileConstants.JDK1_4", "-\t\t\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "-\t\t\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "+\t\t\tif (!didSpecifyCompliance) options.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_4);", "+\t\t\tif (!didSpecifyTarget) options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_4);", "-\t\t\t  && options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_1)) {", "+\t\t\t  \t\t&& options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_1)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f8ad74808082343a3cd422bd0753d881", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "a181175b4fe91addc0cc9c21877a0681da644408", "commitAfterChange": "6ca2c17de7d2cf75286045cf5fe4db47b5ffe702", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["+\t\tboolean didSpecifyTarget = false;", "+\t\t\t\tdidSpecifyTarget = true;", "+\t\t// target must be 1.4 if source is 1.4", "+\t\tif (options.get(CompilerOptions.OPTION_Source).equals(CompilerOptions.VERSION_1_4)", "+\t\t\t\t&& !options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_4)", "+\t\t\t\t&& didSpecifyTarget){ ", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleTargetForSource14\", (String)options.get(CompilerOptions.OPTION_TargetPlatform))); //$NON-NLS-1$", "+\t\t}", "+", "+\t\t// target cannot be 1.4 if compliance is 1.3", "+\t\tif (options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_4)", "+\t\t\t\t&& !options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)", "+\t\t\t\t&& didSpecifyTarget){ ", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget14\", (String)options.get(CompilerOptions.OPTION_Compliance))); //$NON-NLS-1$", "+\t\t}", "+\t\t", "-\t\t", "-\t\t// target must be 1.4 if source is 1.4", "-\t\tif (options.get(CompilerOptions.OPTION_Source).equals(CompilerOptions.VERSION_1_4)", "-\t\t\t\t&& !options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_4)){ ", "-\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleTargetForSource14\", (String)options.get(CompilerOptions.OPTION_TargetPlatform))); //$NON-NLS-1$", "-\t\t}", "-\t\t// target cannot be 1.4 if compliance is 1.3", "-\t\tif (options.get(CompilerOptions.OPTION_TargetPlatform).equals(CompilerOptions.VERSION_1_4)", "-\t\t\t\t&& !options.get(CompilerOptions.OPTION_Compliance).equals(CompilerOptions.VERSION_1_4)){ ", "-\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.incompatibleComplianceForTarget14\", (String)options.get(CompilerOptions.OPTION_Compliance))); //$NON-NLS-1$", "-\t\t}", "-\t\t"]}], "num": 11923}