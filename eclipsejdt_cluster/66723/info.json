{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8d56681dc963d42ada624188dfbc9361", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "022eae1dd49b7fc10effd74ed11aa06f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocTestMixed.java", "commitBeforeChange": "cee242bcb21b999953c5459d6b40de2d782355f3", "commitAfterChange": "de0ba5a5e09b42f4671d55cb69260aca34e3da86", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic void testBug62812()", "signatureAfterChange": " \tpublic void testBug62812()", "diff": ["-\t\t\t\t\"Javadoc: Malformed reference (missing separator after method reference closing brace)\\n\" + ", "+\t\t\t\t\"Javadoc: Malformed reference (missing end space separator)\\n\" + ", "-\t\t\t\t\"Javadoc: Malformed reference (missing separator after method reference closing brace)\\n\" + ", "+\t\t\t\t\"Javadoc: Malformed reference (missing end space separator)\\n\" + ", "-\t\t\t\t\"Javadoc: Malformed reference (missing separator after method reference closing brace)\\n\" + ", "+\t\t\t\t\"Javadoc: Malformed reference (missing end space separator)\\n\" + ", "-\t\t\t\t\"Javadoc: Malformed reference (missing separator after method reference closing brace)\\n\" + ", "+\t\t\t\t\"Javadoc: Malformed reference (missing end space separator)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4af094fe575247bbfa17f463914d024d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "1f4efb41a52f8c33e561047da4304f9fe9e90dc9", "commitAfterChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " private void noCycleDetection(final int numberOfParticipants, final boolean useForwardReferences, final boolean createProjectsFirst) throws CoreException", "signatureAfterChange": " private void noCycleDetection(final int numberOfParticipants, final boolean useForwardReferences, final boolean createProjectsFirst) throws CoreException", "diff": ["-\t\tSystem.out.println(\"No cycle check (\"+numberOfParticipants+\" participants) : \"+ time[0]+\" ms, \"+ (useForwardReferences ? \"forward references\" : \"backward references\") + \", \" + (createProjectsFirst ? \"two steps (projects created first, then classpaths are set)\" : \"one step (projects created and classpaths set in one batch)\"));", "+\t\t//System.out.println(\"No cycle check (\"+numberOfParticipants+\" participants) : \"+ time[0]+\" ms, \"+ (useForwardReferences ? \"forward references\" : \"backward references\") + \", \" + (createProjectsFirst ? \"two steps (projects created first, then classpaths are set)\" : \"one step (projects created and classpaths set in one batch)\"));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90fdea88dd2d38eb655a6fffb7cbdd84", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "40f8b37f10f9ab9fcfe2c27230d51f19f97f4e2e", "commitAfterChange": "cbbe8b69b29b99c8c679b98644156abe11f1564d", "methodNumberBeforeChange": 563, "methodNumberAfterChange": 563, "signatureBeforeChange": " \tpublic void test0559()", "signatureAfterChange": " \tpublic void test0559()", "diff": ["+\t// **", "-\t\t\t\t\"\t\tc.setT(Boolean.FALSE); //javac: warning: [unchecked] unchecked\\n\" + ", "+\t\t\t\t\"\t\tc.setT(Boolean.FALSE); // other: warning: [unchecked] unchecked\\n\" + ", "-\t\t\t\t\"\t\tc.t= Boolean.TRUE; // javac: warning: [unchecked] unchecked call\\n\" + ", "+\t\t\t\t\"\t\tc.t= Boolean.TRUE; // other: warning: [unchecked] unchecked call\\n\" + ", "-\t\t\t\"\tc.setT(Boolean.FALSE); //javac: warning: [unchecked] unchecked\\n\" + ", "+\t\t\t\"\tc.setT(Boolean.FALSE); // other: warning: [unchecked] unchecked\\n\" + ", "-\t\t\t\"\tc.t= Boolean.TRUE; // javac: warning: [unchecked] unchecked call\\n\" + ", "+\t\t\t\"\tc.t= Boolean.TRUE; // other: warning: [unchecked] unchecked call\\n\" + "]}], "num": 66723}