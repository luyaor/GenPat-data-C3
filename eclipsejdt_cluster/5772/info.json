{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2fd7eb6588e0ee28a60762910b39954f", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "105e78edb4a28658091aa109c253d385", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTMatcherTest.java", "commitBeforeChange": "904e81d11d3fc634ae2d9d861dc6c73c9ea81e03", "commitAfterChange": "2fce9fdec7d24fd4985bfaa8a4da9bdc5aff2660", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprotected void setUp()", "signatureAfterChange": " \tprotected void setUp()", "diff": ["+\t */", "-\t\tN1S = \"(nSNNnS)\"; //$NON-NLS-1$", "-\t\tN2S = \"(nSMMnS)\"; //$NON-NLS-1$", "-\t\tN3S = \"(nSOOnS)\"; //$NON-NLS-1$", "-\t\tE1S = \"(nSXXnS)\"; //$NON-NLS-1$", "-\t\tE2S = \"(nSYYnS)\"; //$NON-NLS-1$", "-\t\tT1S = \"(tS(nSZZnS)tS)\"; //$NON-NLS-1$", "-\t\tS1S = \"(sCNsCN)\"; //$NON-NLS-1$", "-\t\tS2S = \"(sBRsBR)\"; //$NON-NLS-1$", "-\t\tB1S = \"(sBsB)\"; //$NON-NLS-1$", "-\t\tV1S = \"(VD(tPintinttP)(nSaanS)VD)\"; //$NON-NLS-1$", "-\t\tV2S = \"(VD(tPbytebytetP)(nSbbnS)VD)\"; //$NON-NLS-1$", "-\t\tW1S = \"(VS(nSaanS)VS)\"; //$NON-NLS-1$", "-\t\tW2S = \"(VS(nSbbnS)VS)\"; //$NON-NLS-1$", "-\t\t\tFD1S = \"(FD(tPintinttP)(VS(nSffnS)VS)FD)\"; //$NON-NLS-1$", "-\t\t\tFD2S = \"(FD(tPcharchartP)(VS(nSggnS)VS)FD)\"; //$NON-NLS-1$", "-\t\tPD1S = \"(PD(nSppnS)PD)\"; //$NON-NLS-1$", "-\t\tID1S = \"(ID(nSiinS)ID)\"; //$NON-NLS-1$", "-\t\tID2S = \"(ID(nSjjnS)ID)\"; //$NON-NLS-1$", "-\t\tTD1S = \"(TD(nSccnS)TD)\"; //$NON-NLS-1$", "-\t\tTD2S = \"(TD(nSddnS)TD)\"; //$NON-NLS-1$", "-\t\tACD1S = \"(ACDACD)\"; //$NON-NLS-1$", "-\t\tJD1S = \"(JD/**X*//**X*/JD)\"; //$NON-NLS-1$", "-\t\tJD2S = \"(JD/**Y*//**Y*/JD)\"; //$NON-NLS-1$", "+", "+\t\tLC1 = ast.newLineComment();", "+", "+\t\tBC1 = ast.newBlockComment();", "+\t\t", "+\t\tTAG1 = ast.newTagElement();", "+\t\tTAG1.setTagName(\"@foo\"); //$NON-NLS-1$", "+", "+\t\tTEXT1 = ast.newTextElement();", "+\t\tTEXT1.setText(\"foo\"); //$NON-NLS-1$", "+", "+\t\tMBREF1 = ast.newMemberRef();", "+\t\tMBREF1.setName(ast.newSimpleName(\"p\")); //$NON-NLS-1$", "+", "+\t\tMTHREF1 = ast.newMethodRef();", "+\t\tMTHREF1.setName(ast.newSimpleName(\"p\")); //$NON-NLS-1$", "+", "+\t\tMPARM1 = ast.newMethodRefParameter();", "+\t\tMPARM1.setType(ast.newPrimitiveType(PrimitiveType.CHAR));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c40b95e924460902f3243d225380e6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "5f4e9c737df9b212364b9e892d0039c92ce2476a", "commitAfterChange": "3a2d8fc091b6c143de1eaab0e407d9046bc0425f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r private void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": "\r private void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.debugLocalVariable\"/*nonNLS*/,0);\r", "-\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.debugLineNumber\"/*nonNLS*/,0);\r", "-\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.debugSourceFile\"/*nonNLS*/,0);\r", "+\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_LocalVariableAttribute, 0);\r", "+\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_LineNumberAttribute, 0);\r", "+\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_SourceFileAttribute, 0);\r", "-\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.debugLocalVariable\"/*nonNLS*/,1);\r", "-\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.debugLineNumber\"/*nonNLS*/,1);\r", "-\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.debugSourceFile\"/*nonNLS*/,1);\r", "+\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_LocalVariableAttribute, 1);\r", "+\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_LineNumberAttribute, 1);\r", "+\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_SourceFileAttribute, 1);\t\t\t\t\r", "-\t\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.debugLocalVariable\"/*nonNLS*/,0);\r", "+\t\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_LocalVariableAttribute, 0);\r", "-\t\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.debugLineNumber\"/*nonNLS*/,0);\r", "+\t\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_LineNumberAttribute, 0);\r", "-\t\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.debugSourceFile\"/*nonNLS*/,0);\r", "+\t\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_SourceFileAttribute, 0);\r", "-\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemMethodWithConstructorName\"/*nonNLS*/,2);\r", "-\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemOverridingPackageDefaultMethod\"/*nonNLS*/,2);\r", "-\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemHiddenCatchBlock\"/*nonNLS*/,2);\r", "-\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemDeprecation\"/*nonNLS*/,2);\r", "-\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemUnusedLocal\"/*nonNLS*/,2);\r", "-\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemUnusedParameter\"/*nonNLS*/,2);\r", "-\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemSyntheticAccessEmulation\"/*nonNLS*/,2);\r", "-\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemNonExternalizedStringLiteral\"/*nonNLS*/,2);\r", "-\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemAssertIdentifier\"/*nonNLS*/,2);\r", "+\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportMethodWithConstructorName, 2);\r", "+\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportOverridingPackageDefaultMethod, 2);\r", "+\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportHiddenCatchBlock, 2);\r", "+\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportDeprecation, 2);\r", "+\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportUnusedLocal, 2);\r", "+\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportUnusedParameter, 2);\r", "+\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, 2);\r", "+\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportNonExternalizedStringLiteral, 2);\r", "+\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportAssertIdentifier, 2);\r", "-\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemMethodWithConstructorName\"/*nonNLS*/,1);\r", "+\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportMethodWithConstructorName, 1);\r", "-\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemOverridingPackageDefaultMethod\"/*nonNLS*/,1);\r", "+\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportOverridingPackageDefaultMethod, 1);\r", "-\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemHiddenCatchBlock\"/*nonNLS*/,1);\r", "+\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportHiddenCatchBlock, 1);\r", "-\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemDeprecation\"/*nonNLS*/,1);\r", "+\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportDeprecation, 1);\r", "-\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemUnusedLocal\"/*nonNLS*/,1);\r", "+\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportUnusedLocal, 1);\r", "-\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemUnusedParameter\"/*nonNLS*/,1);\r", "+\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportUnusedParameter, 1);\r", "-\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemSyntheticAccessEmulation\"/*nonNLS*/,1);\r", "+\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportSyntheticAccessEmulation, 1);\r", "-\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemNonExternalizedStringLiteral\"/*nonNLS*/,1);\r", "+\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportNonExternalizedStringLiteral, 1);\r", "-\t\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.problemAssertIdentifier\"/*nonNLS*/,1);\r", "+\t\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_ReportAssertIdentifier/*nonNLS*/, 1);\r", "-\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.codegenUnusedLocal\"/*nonNLS*/,0);\r", "+\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_PreserveUnusedLocal, 0);\r", "-\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.codegenTargetPlatform\"/*nonNLS*/,0);\r", "+\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_TargetPlatform, 0);\r", "-\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.codegenTargetPlatform\"/*nonNLS*/,1);\r", "+\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_TargetPlatform, 1);\r", "-\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.source\"/*nonNLS*/,0);\r", "+\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_Source, 0);\r", "-\t\t\t\tsetOptionValueIndex(\"org.eclipse.jdt.internal.compiler.Compiler.source\"/*nonNLS*/,1);\r", "+\t\t\t\tsetOptionValueIndex(CompilerOptions.OPTION_Source, 1);\r"]}], "num": 5772}