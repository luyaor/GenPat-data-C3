{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "eb7f1b36cd00e47f95b422eed388c4f8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f2429fedc8383eb5a47f9dad6efdc47", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/PackageDeclarationImpl.java", "commitBeforeChange": "613a671e19efc2defced093244f8e19129754af6", "commitAfterChange": "d4b66f5ebef72ea4a16ce3ed100131443db3e609", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": "      public Collection<ClassDeclaration> getClasses()", "signatureAfterChange": "      public Collection<ClassDeclaration> getClasses()", "diff": ["-\t\treturn PackageUtil.getClasses(this, _env);", "+    \tList<IType> types = getTypesInPackage(_pkgFragments);", "+\t\tList<ClassDeclaration> classes = new ArrayList<ClassDeclaration>();", "+\t\tfor (IType type : types) {", "+\t\t\ttry {", "+\t\t\t\t// isClass() will return true if TypeDeclaration is an InterfaceDeclaration", "+\t\t\t\tif (type.isClass()) {", "+\t\t\t\t\tTypeDeclaration td = _env.getTypeDeclaration( type );", "+\t\t\t\t\tif ( td instanceof ClassDeclaration ) {\t\t\t\t", "+\t\t\t\t\t\tclasses.add((ClassDeclaration)td);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tcatch (JavaModelException ex) {} // No longer exists, don't return it", "+\t\t}", "+\t\t", "+\t\treturn classes;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e078c5b632852178624cde00f9c63dad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/PackageUtil.java", "commitBeforeChange": "fa2cb5bc47f7fe5d18ae109d09f3bf4ba668083f", "commitAfterChange": "3ba9d90cc0b0b979098ff6ad3236612052718a0b", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic static Collection<ClassDeclaration> getClasses( \t\t\tfinal PackageDeclaration pkg, \t\t\tfinal ProcessorEnvImpl env)", "signatureAfterChange": " \t \tpublic static Collection<ClassDeclaration> getClasses( \t\t\tfinal PackageDeclaration pkg, \t\t\tfinal ProcessorEnvImpl env)", "diff": ["-\t\t\t\tif (type.isClass()) {", "-\t\t\t\t\tclasses.add((ClassDeclaration)env.getTypeDeclaration(type));", "+\t\t\t\t// isClass() will return true if TypeDeclaration is an InterfaceDeclaration", "+\t\t\t\tif (type.isClass() ) {", "+\t\t\t\t\tTypeDeclaration td = env.getTypeDeclaration( type );", "+\t\t\t\t\tif ( td instanceof ClassDeclaration ) {\t\t\t\t", "+\t\t\t\t\t\tclasses.add((ClassDeclaration)td);", "+\t\t\t\t\t}"]}], "num": 67926}