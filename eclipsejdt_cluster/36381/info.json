{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ff8203a450b209a2edb2bd4b521178e9", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09bef39ece494477128334dd7d0633ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "46418d248f89a29f49a77d154cdbfa57c408b256", "commitAfterChange": "c85433e27f0fa74bfe8e06c38c1c02c51b5599d7", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(Binding binding)", "signatureAfterChange": "\r public boolean matches(Binding binding)", "diff": ["+ */\r", "+public boolean matches(Binding binding) {\r", "+\tif (!(binding instanceof ReferenceBinding)) return false;\r", "+\r", "+\tReferenceBinding type = (ReferenceBinding) binding;\r", "+\tif (this.matchesType(this.superSimpleName, this.superQualification, type.superclass())){\r", "+\t\treturn true;\r", "+\t}\r", "+\t\r", "+\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "+\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "+\t\tif (this.matchesType(this.superSimpleName, this.superQualification, superInterfaces[i])){\r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(Binding binding) {\r", "-\tif (binding == null) return INACCURATE_MATCH;\r", "-\tif (!(binding instanceof ReferenceBinding)) return IMPOSSIBLE_MATCH;\r", "-\r", "-\t// super class\r", "-\tReferenceBinding type = (ReferenceBinding) binding;\r", "-\tint level = this.matchLevelForType(this.superSimpleName, this.superQualification, type.superclass());\r", "-\tswitch (level) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\tbreak; // try to find match in super interfaces\r", "-\t\tcase ACCURATE_MATCH:\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tbreak; // try to find accurate match in super interfaces\r", "-\t}\r", "-\r", "-\t// super interfaces\r", "-\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "-\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "-\t\tint newLevel = this.matchLevelForType(this.superSimpleName, this.superQualification, superInterfaces[i]);\r", "-\t\tswitch (newLevel) {\r", "-\t\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase ACCURATE_MATCH:\r", "-\t\t\t\treturn ACCURATE_MATCH;\r", "-\t\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\t\tlevel = newLevel;\r", "-\t\t\t\tbreak;\r", "-\t\t}\r", "-\t}\r", "-\treturn level;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0ebe71ef6d5ce3f1778796d52e214eab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "2b5adfd5bdf5a370e30eef7cf60813025897bdd3", "commitAfterChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " public int matchLevel(Binding binding)", "signatureAfterChange": " public int matchLevel(Binding binding)", "diff": ["+ */", "+public int matchLevel(Binding binding) {", "+\tif (binding == null) return INACCURATE_MATCH;", "+\tif (!(binding instanceof ReferenceBinding)) return IMPOSSIBLE_MATCH;", "+", "+\tReferenceBinding type = (ReferenceBinding) binding;", "+\tint level = IMPOSSIBLE_MATCH;", "+\tif (!this.checkOnlySuperinterfaces) {", "+\t\tlevel = matchLevelForType(this.superSimpleName, this.superQualification, type.superclass());", "+\t\tif (level == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t}", "+", "+\tReferenceBinding[] superInterfaces = type.superInterfaces();", "+\tfor (int i = 0, max = superInterfaces.length; i < max; i++) {", "+\t\tint newLevel = matchLevelForType(this.superSimpleName, this.superQualification, superInterfaces[i]);", "+\t\tif (newLevel > level) {", "+\t\t\tif (newLevel == ACCURATE_MATCH) return ACCURATE_MATCH;", "+\t\t\tlevel = newLevel;", "+\t\t}", "+\t}", "+\treturn level;", "+}", "- */", "-public int matchLevel(Binding binding) {", "-\tif (binding == null) return INACCURATE_MATCH;", "-\tif (!(binding instanceof ReferenceBinding)) return IMPOSSIBLE_MATCH;", "-", "-\t// super class", "-\tReferenceBinding type = (ReferenceBinding) binding;", "-\tint level = this.matchLevelForType(this.superSimpleName, this.superQualification, type.superclass());", "-\tswitch (level) {", "-\t\tcase IMPOSSIBLE_MATCH:", "-\t\t\tbreak; // try to find match in super interfaces", "-\t\tcase ACCURATE_MATCH:", "-\t\t\treturn ACCURATE_MATCH;", "-\t\tdefault: // ie. INACCURATE_MATCH", "-\t\t\tbreak; // try to find accurate match in super interfaces", "-\t}", "-", "-\t// super interfaces", "-\tReferenceBinding[] superInterfaces = type.superInterfaces();", "-\tfor (int i = 0, max = superInterfaces.length; i < max; i++){", "-\t\tint newLevel = this.matchLevelForType(this.superSimpleName, this.superQualification, superInterfaces[i]);", "-\t\tswitch (newLevel) {", "-\t\t\tcase IMPOSSIBLE_MATCH:", "-\t\t\t\tbreak;", "-\t\t\tcase ACCURATE_MATCH:", "-\t\t\t\treturn ACCURATE_MATCH;", "-\t\t\tdefault: // ie. INACCURATE_MATCH", "-\t\t\t\tlevel = newLevel;", "-\t\t\t\tbreak;", "-\t\t}", "-\t}", "-\treturn level;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36dc65095eb55e02f4171ae33bcff380", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(Binding binding)", "signatureAfterChange": "\r public boolean matches(Binding binding)", "diff": ["+ */\r", "+public boolean matches(Binding binding) {\r", "+\tif (!(binding instanceof ReferenceBinding)) return false;\r", "+\r", "+\tReferenceBinding type = (ReferenceBinding) binding;\r", "+\tif (this.matchesType(this.superSimpleName, this.superQualification, type.superclass())){\r", "+\t\treturn true;\r", "+\t}\r", "+\t\r", "+\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "+\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "+\t\tif (this.matchesType(this.superSimpleName, this.superQualification, superInterfaces[i])){\r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(Binding binding) {\r", "-\tif (binding == null) return INACCURATE_MATCH;\r", "-\tif (!(binding instanceof ReferenceBinding)) return IMPOSSIBLE_MATCH;\r", "-\r", "-\t// super class\r", "-\tReferenceBinding type = (ReferenceBinding) binding;\r", "-\tint level = this.matchLevelForType(this.superSimpleName, this.superQualification, type.superclass());\r", "-\tswitch (level) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\tbreak; // try to find match in super interfaces\r", "-\t\tcase ACCURATE_MATCH:\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tbreak; // try to find accurate match in super interfaces\r", "-\t}\r", "-\r", "-\t// super interfaces\r", "-\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "-\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "-\t\tint newLevel = this.matchLevelForType(this.superSimpleName, this.superQualification, superInterfaces[i]);\r", "-\t\tswitch (newLevel) {\r", "-\t\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase ACCURATE_MATCH:\r", "-\t\t\t\treturn ACCURATE_MATCH;\r", "-\t\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\t\tlevel = newLevel;\r", "-\t\t\t\tbreak;\r", "-\t\t}\r", "-\t}\r", "-\treturn level;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a0571477d49dfc3aa6d3ffae4a319aa0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "commitAfterChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(Binding binding)", "signatureAfterChange": "\r public boolean matches(Binding binding)", "diff": ["+ */\r", "+public boolean matches(Binding binding) {\r", "+\tif (!(binding instanceof ReferenceBinding)) return false;\r", "+\r", "+\tReferenceBinding type = (ReferenceBinding) binding;\r", "+\tif (this.matchesType(this.superSimpleName, this.superQualification, type.superclass())){\r", "+\t\treturn true;\r", "+\t}\r", "+\t\r", "+\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "+\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "+\t\tif (this.matchesType(this.superSimpleName, this.superQualification, superInterfaces[i])){\r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(Binding binding) {\r", "-\tif (binding == null) return INACCURATE_MATCH;\r", "-\tif (!(binding instanceof ReferenceBinding)) return IMPOSSIBLE_MATCH;\r", "-\r", "-\t// super class\r", "-\tReferenceBinding type = (ReferenceBinding) binding;\r", "-\tint level = this.matchLevelForType(this.superSimpleName, this.superQualification, type.superclass());\r", "-\tswitch (level) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\tbreak; // try to find match in super interfaces\r", "-\t\tcase ACCURATE_MATCH:\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tbreak; // try to find accurate match in super interfaces\r", "-\t}\r", "-\r", "-\t// super interfaces\r", "-\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "-\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "-\t\tint newLevel = this.matchLevelForType(this.superSimpleName, this.superQualification, superInterfaces[i]);\r", "-\t\tswitch (newLevel) {\r", "-\t\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase ACCURATE_MATCH:\r", "-\t\t\t\treturn ACCURATE_MATCH;\r", "-\t\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\t\tlevel = newLevel;\r", "-\t\t\t\tbreak;\r", "-\t\t}\r", "-\t}\r", "-\treturn level;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9c498ba49fba5f367d3a7685d7e5198", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "a1b8b888d8c8c040023fcd2856f96f5ad6c69b3e", "commitAfterChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 6, "signatureBeforeChange": "\r public int matchLevel(Binding binding)", "signatureAfterChange": "\r public boolean matches(Binding binding)", "diff": ["+ */\r", "+public boolean matches(Binding binding) {\r", "+\tif (!(binding instanceof ReferenceBinding)) return false;\r", "+\r", "+\tReferenceBinding type = (ReferenceBinding) binding;\r", "+\tif (this.matchesType(this.superSimpleName, this.superQualification, type.superclass())){\r", "+\t\treturn true;\r", "+\t}\r", "+\t\r", "+\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "+\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "+\t\tif (this.matchesType(this.superSimpleName, this.superQualification, superInterfaces[i])){\r", "+\t\t\treturn true;\r", "+\t\t}\r", "+\t}\r", "+\treturn false;\r", "+}\r", "- */\r", "-public int matchLevel(Binding binding) {\r", "-\tif (binding == null) return INACCURATE_MATCH;\r", "-\tif (!(binding instanceof ReferenceBinding)) return IMPOSSIBLE_MATCH;\r", "-\r", "-\t// super class\r", "-\tReferenceBinding type = (ReferenceBinding) binding;\r", "-\tint level = this.matchLevelForType(this.superSimpleName, this.superQualification, type.superclass());\r", "-\tswitch (level) {\r", "-\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\tbreak; // try to find match in super interfaces\r", "-\t\tcase ACCURATE_MATCH:\r", "-\t\t\treturn ACCURATE_MATCH;\r", "-\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\tbreak; // try to find accurate match in super interfaces\r", "-\t}\r", "-\r", "-\t// super interfaces\r", "-\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "-\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "-\t\tint newLevel = this.matchLevelForType(this.superSimpleName, this.superQualification, superInterfaces[i]);\r", "-\t\tswitch (newLevel) {\r", "-\t\t\tcase IMPOSSIBLE_MATCH:\r", "-\t\t\t\tbreak;\r", "-\t\t\tcase ACCURATE_MATCH:\r", "-\t\t\t\treturn ACCURATE_MATCH;\r", "-\t\t\tdefault: // ie. INACCURATE_MATCH\r", "-\t\t\t\tlevel = newLevel;\r", "-\t\t\t\tbreak;\r", "-\t\t}\r", "-\t}\r", "-\treturn level;\r"]}], "num": 36381}