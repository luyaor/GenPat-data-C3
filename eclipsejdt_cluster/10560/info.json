{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0f29cbc1efec77b3a1110805cb1d969b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6862d8c3fee3a2b2e2bf90e1ebe54cd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "c16162b1194f3110eda140f5ccdd35c2ba36455d", "commitAfterChange": "8d1ff9b80d2587df4aa2d0a1ee1f5a75472a5feb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tprotected void generateClasspathChangeDeltas(\r \t\tIClasspathEntry[] oldResolvedPath,\r \t\tIClasspathEntry[] newResolvedPath,\r \t\tJavaModelManager manager,\r \t\tJavaProject project)", "signatureAfterChange": "\r \tprotected void generateClasspathChangeDeltas(\r \t\tIClasspathEntry[] oldResolvedPath,\r \t\tIClasspathEntry[] newResolvedPath,\r \t\tJavaModelManager manager,\r \t\tJavaProject project)", "diff": ["+\t\t\t\t\r", "+\t\t\t\t// Request indexing of the library\r", "+\t\t\t\tif (changeKind == IClasspathEntry.CPE_LIBRARY) {\r", "+\t\t\t\t\tIndexManager indexManager = JavaModelManager.getJavaModelManager().getIndexManager();\r", "+\t\t\t\t\tif (indexManager != null) {\r", "+\t\t\t\t\t\tboolean pathHasChanged = true;\r", "+\t\t\t\t\t\tIPath newPath = newResolvedPath[i].getPath();\r", "+\t\t\t\t\t\tfor (int j = 0; j < oldResolvedPath.length; j++) {\r", "+\t\t\t\t\t\t\tIClasspathEntry oldEntry = oldResolvedPath[j];\r", "+\t\t\t\t\t\t\tif (oldEntry.getPath().equals(newPath)) {\r", "+\t\t\t\t\t\t\t\tpathHasChanged = false;\r", "+\t\t\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tif (pathHasChanged) {\r", "+\t\t\t\t\t\t\tindexManager.indexLibrary(newPath, project.getProject());\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be94d133e6505e78da3cdc81cfbda901", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "9f614fc97667efed681d3433770b756cc7555814", "commitAfterChange": "e5350265da2408990b972b2cb2f8a82c97230de1", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " protected void updateMatch(ParameterizedTypeBinding parameterizedBinding, char[][][] patternTypeArguments, boolean patternHasTypeParameters, int depth, MatchLocator locator)", "signatureAfterChange": " protected void updateMatch(ParameterizedTypeBinding parameterizedBinding, char[][][] patternTypeArguments, boolean patternHasTypeParameters, int depth, MatchLocator locator)", "diff": ["-\tboolean isRaw = parameterizedBinding.isRawType()|| (parameterizedBinding.arguments==null && parameterizedBinding.type.isGenericType());", "+\tTypeBinding[] argumentsBindings = parameterizedBinding.arguments;", "+\tboolean isRaw = parameterizedBinding.isRawType()|| (argumentsBindings==null && parameterizedBinding.type.isGenericType());", "-\t\tchar[][] patternArguments =  patternTypeArguments[depth];", "-\t\tupdateMatch(parameterizedBinding.arguments, locator, patternArguments, patternHasTypeParameters);", "+\t\t// verify if this is a reference to the generic type itself", "+\t\tif (!isRaw && patternHasTypeParameters && argumentsBindings != null) {", "+\t\t\tboolean needUpdate = false;", "+\t\t\tTypeVariableBinding[] typeVariables = parameterizedBinding.type.typeVariables();", "+\t\t\tfor (int i=0, l=argumentsBindings.length; i<l; i++) {", "+\t\t\t\tif (argumentsBindings[i] != typeVariables[i]) {", "+\t\t\t\t\tneedUpdate = true;", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tif (needUpdate) {", "+\t\t\t\tchar[][] patternArguments =  patternTypeArguments[depth];", "+\t\t\t\tupdateMatch(argumentsBindings, locator, patternArguments, patternHasTypeParameters);\t", "+\t\t\t}", "+\t\t} else {", "+\t\t\tchar[][] patternArguments =  patternTypeArguments[depth];", "+\t\t\tupdateMatch(argumentsBindings, locator, patternArguments, patternHasTypeParameters);", "+\t\t}"]}], "num": 10560}