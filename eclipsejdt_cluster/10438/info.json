{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0e904699a732868f2a283ea5fe68ae8a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aee4d6a4cb70a063cd5723f070ed565", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void generateClassLiteralAccessForType(TypeBinding accessedType, FieldBinding syntheticFieldBinding)", "signatureAfterChange": " public void generateClassLiteralAccessForType(TypeBinding accessedType, FieldBinding syntheticFieldBinding)", "diff": ["-\tif (accessedType.isBaseType() && accessedType != NullBinding) {", "+\tif (accessedType.isBaseType() && accessedType != TypeBinding.NULL) {", "-\t\tanyExceptionHandler = new ExceptionLabel(this, BaseTypes.NullBinding /* represents ClassNotFoundException*/);", "-\t\tthis.ldc(accessedType == BaseTypes.NullBinding ? \"java.lang.Object\" : String.valueOf(accessedType.constantPoolName()).replace('/', '.')); //$NON-NLS-1$", "+\t\tanyExceptionHandler = new ExceptionLabel(this, TypeBinding.NULL /* represents ClassNotFoundException*/);", "+\t\tthis.ldc(accessedType == TypeBinding.NULL ? \"java.lang.Object\" : String.valueOf(accessedType.constantPoolName()).replace('/', '.')); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bb37c2d2899279ebaae041814af3f46", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "13fcecb4bf0159fd0c973e2df9fcb4f9a5259e19", "commitAfterChange": "8b6b3a98e5e06aed3ed77d75acda201f0fcf929c", "methodNumberBeforeChange": 90, "methodNumberAfterChange": 90, "signatureBeforeChange": " public void generateClassLiteralAccessForType(TypeBinding accessedType, FieldBinding syntheticFieldBinding)", "signatureAfterChange": " public void generateClassLiteralAccessForType(TypeBinding accessedType, FieldBinding syntheticFieldBinding)", "diff": ["-\tthis.ldc(accessedType == TypeBinding.NullBinding ? \"java.lang.Object\" : String.valueOf(accessedType.constantPoolName()).replace('/', '.')); //$NON-NLS-1$", "+\tif (accessedType == TypeBinding.NullBinding) {", "+\t\tthis.ldc(\"java.lang.Object\"); //$NON-NLS-1$", "+\t} else if (accessedType.isArrayType()) {", "+\t\tthis.ldc(String.valueOf(accessedType.constantPoolName()).replace('/', '.'));", "+\t} else {", "+\t\t// we make it an array type", "+\t\tthis.ldc(\"[L\" + String.valueOf(accessedType.constantPoolName()).replace('/', '.') + \";\"); //$NON-NLS-1$//$NON-NLS-2$", "+\t}", "+\tif (!accessedType.isArrayType()) {", "+\t\tthis.invokeJavaLangClassGetComponentType();", "+\t}\t"]}], "num": 10438}