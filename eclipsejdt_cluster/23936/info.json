{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3df5128c1fdefd9bd9402c969ad746ee", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01db2ecc02ab9402b6ffb9746404f8c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "42a5591e6405d9d5a9661e1fdb211c39440692e6", "commitAfterChange": "90b5d0d22a673acac5fa922f69ac563d54cf8a91", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 24, "signatureBeforeChange": " boolean reportIncompatibleReturnTypeError(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " boolean reportIncompatibleReturnTypeError(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["-boolean reportIncompatibleReturnTypeError(MethodBinding currentMethod, MethodBinding inheritedMethod) {", "-\t\tfor (int i = 0, l = currentParams.length; i < l; i++) {", "-\t\t\tif (!areTypesEqual(currentParams[i], inheritedParams[i])) {", "-\t\t\t\tproblemReporter(currentMethod).unsafeReturnTypeOverride(currentMethod, inheritedMethod, this.type);", "-\t\t\t\treturn false;", "-\t\t\t}", "-\t\t}", "-\t\t\tproblemReporter(currentMethod).unsafeReturnTypeOverride(currentMethod, inheritedMethod, this.type);", "-\t\t\treturn false;", "+}", "+boolean reportIncompatibleReturnTypeError(MethodBinding currentMethod, MethodBinding inheritedMethod) {", "+\tif (isUnsafeReturnTypeOverride(currentMethod, inheritedMethod)) {", "+\t\tproblemReporter(currentMethod).unsafeReturnTypeOverride(currentMethod, inheritedMethod, this.type);", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1cc88592d121edf0f3ba7b382f216819", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "42a8e7b7f9382c59bb1ff340f0838c566aaa3094", "commitAfterChange": "eaac4cd91d3c13197436495a330942a49816eb54", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length)", "signatureAfterChange": " void checkAgainstInheritedMethods(MethodBinding currentMethod, MethodBinding[] methods, int length)", "diff": ["-\t\t\t\tif (!returnType.isParameterizedType())", "-\t\t\t\t\tthis.problemReporter(currentMethod).returnTypeUncheckedConversion(currentMethod, inheritedMethod);", "+\t\t\t\tif (!returnType.isParameterizedType()) ", "+\t\t\t\t\tthis.problemReporter(currentMethod).unsafeReturnTypeOverride(currentMethod, inheritedMethod, ((MethodDeclaration)currentMethod.sourceMethod()).returnType);", "-\t\t\t\tthis.problemReporter(currentMethod).returnTypeUncheckedConversion(currentMethod, inheritedMethod);", "+\t\t\t\tthis.problemReporter(currentMethod).unsafeReturnTypeOverride(currentMethod, inheritedMethod,  ((MethodDeclaration)currentMethod.sourceMethod()).returnType);"]}], "num": 23936}