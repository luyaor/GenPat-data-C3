{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4faf4b4af0f0b5b6633f0679c7ddd79f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15fa1294b8d64629899010e7fd77573a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "53df7d602035de3d31fcc1ea92403ee3f66bc84a", "commitAfterChange": "b501a050436f0ed4b21c2887b8c36095ae4a6672", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " public void invalidField(QualifiedNameReference nameRef, FieldBinding field, int index, TypeBinding searchedType)", "signatureAfterChange": " public void invalidField(QualifiedNameReference nameRef, FieldBinding field, int index, TypeBinding searchedType)", "diff": ["-\t\t\tid = IProblem.UndefinedField;", "-/* also need to check that the searchedType is the receiver type", "-\t\t\tif (searchedType.isHierarchyInconsistent())", "-\t\t\t\tseverity = SecondaryError;", "-*/", "-\t\t\tbreak;", "-\t\tcase ProblemReasons.NotVisible :", "+\t\t\tString[] arguments = new String[] {fieldName };", "+\t\t\tthis.handle(", "+\t\t\t\t\tid,", "+\t\t\t\t\targuments,", "+\t\t\t\t\targuments,", "+\t\t\t\t\tnodeSourceStart(field, nameRef),", "+\t\t\t\t\tnodeSourceEnd(field, nameRef));", "+\t\t\treturn;", "+\t\tcase ProblemReasons.NotVisible :", "+\t\t\tfieldName = new String(nameRef.tokens[index]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c4420d30ad492200de264575d35033c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "2a800be547e99862cb67025bbbfca4b49e09cdb9", "commitAfterChange": "7aad3361583d2df12bebea3ea848be558fb7c078", "methodNumberBeforeChange": 184, "methodNumberAfterChange": 184, "signatureBeforeChange": " public void invalidField(NameReference nameRef, FieldBinding field)", "signatureAfterChange": " public void invalidField(NameReference nameRef, FieldBinding field)", "diff": ["-\t\t\tid = IProblem.UndefinedField;", "-\t\t\tbreak;", "+\t\t\tString[] arguments = new String[] {new String(field.readableName())};", "+\t\t\tthis.handle(", "+\t\t\t\t\tid,", "+\t\t\t\t\targuments,", "+\t\t\t\t\targuments,", "+\t\t\t\t\tnodeSourceStart(field, nameRef),", "+\t\t\t\t\tnodeSourceEnd(field, nameRef));", "+\t\t\treturn;"]}], "num": 64980}