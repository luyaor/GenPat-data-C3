{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "97f034586a327c7aff551831e8654ea9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5434d118166976fb64bea1de7c256a66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "876d1e29545f3823ab6b6c14229362303cd9cc00", "commitAfterChange": "0de5167791884524f72d9d44c10f0e243af65d00", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": "  public TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  public TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\treturn null;", "+\t\tif (fieldBinding instanceof ProblemFieldBinding) {", "+\t\t\tProblemFieldBinding problemFieldBinding = (ProblemFieldBinding) fieldBinding;", "+\t\t\tFieldBinding closestMatch = problemFieldBinding.closestMatch;", "+\t\t\tswitch(problemFieldBinding.problemId()) {", "+\t\t\t\tcase ProblemReasons.InheritedNameHidesEnclosingName :", "+\t\t\t\tcase ProblemReasons.NotVisible :", "+\t\t\t\tcase ProblemReasons.NonStaticReferenceInConstructorInvocation :", "+\t\t\t\tcase ProblemReasons.NonStaticReferenceInStaticContext :", "+\t\t\t\t\tif (closestMatch != null) {", "+\t\t\t\t\t\tfieldBinding = closestMatch;", "+\t\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\tif (!fieldBinding.isValidBinding()) {", "+\t\t\treturn null;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "936c64b880ead1cb570800f9ef083071", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "20c9553c55b67a9c07624bd0b5b35f188a7f1769", "commitAfterChange": "14fb89a0281d6b0089ef94e47420da3d5f85923f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t\tprotected void writeLine() throws CoreException", "signatureAfterChange": " \t\tprotected void writeLine() throws CoreException", "diff": ["+\t\t\t\tif (match instanceof MethodReferenceMatch) {", "+\t\t\t\t\tMethodReferenceMatch methRef = (MethodReferenceMatch) match;", "+\t\t\t\t\tif (methRef.isPolymorphic()) {", "+\t\t\t\t\t\tif (match.getAccuracy() == SearchMatch.A_ACCURATE) {", "+\t\t\t\t\t\t\tif (this.showPolymorphic > 0) {", "+\t\t\t\t\t\t\t\tline.append(\" POLYMORPHIC\");", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tif (this.showPolymorphic <= 1) {", "+\t\t\t\t\t\t\t\tline = null; // do not show potential polymorphic matches", "+\t\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\t\tline.append(\" POLYMORPHIC\");", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}"]}], "num": 8904}