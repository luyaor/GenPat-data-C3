{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c79862eeb4df9d838c87da4d3781cc07", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1b917a6d9b897c2bd6bd76a0d3252b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "fe905e29a608f61f2afe181f4c1e4e27bb2b95dc", "commitAfterChange": "53a7cfa9bf2a3a1ade921d716dbdc58a4bfc35d4", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tprotected void seekTypesInSourcePackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "signatureAfterChange": " \tprotected void seekTypesInSourcePackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "diff": ["-\t\t * the compilationUnits always will. So add it if we're looking for ", "+\t\t * the compilationUnits always will. So compare ignoring extension if we're looking for ", "-\t\tString unitName = partialMatch ? matchName.toLowerCase() : matchName + SUFFIX_STRING_java;", "+\t\tString unitName = partialMatch ? matchName.toLowerCase() : matchName;", "-\t\t\tpotentialUnitName = partialMatch ? potentialMatchName.toLowerCase() : potentialMatchName + SUFFIX_STRING_java;", "+\t\t\tpotentialUnitName = partialMatch ? potentialMatchName.toLowerCase() : potentialMatchName;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db40b620c002d90a99511d0a801f4483", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "14dcaa6f3119a3748174df5574b501dd39c54aa7", "commitAfterChange": "d474c637aa1ba0ae870102566e1df640c4e4a4cb", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprotected void seekTypesInSourcePackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "signatureAfterChange": " \tprotected void seekTypesInSourcePackage(String name, IPackageFragment pkg, boolean partialMatch, int acceptFlags, IJavaElementRequestor requestor)", "diff": ["-\t\tString unitName = partialMatch ? matchName.toLowerCase() : matchName + \".java\"; //$NON-NLS-1$", "+\t\tString unitName = partialMatch ? matchName.toLowerCase() : matchName + SUFFIX_STRING_java;", "-\t\t\tpotentialUnitName = partialMatch ? potentialMatchName.toLowerCase() : potentialMatchName + \".java\"; //$NON-NLS-1$", "+\t\t\tpotentialUnitName = partialMatch ? potentialMatchName.toLowerCase() : potentialMatchName + SUFFIX_STRING_java;"]}], "num": 57266}