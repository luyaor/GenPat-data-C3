{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0c48b7bf6d07efab548d277e48f125f0", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a5cb2a1be2f35c2bb74ec32856d1455", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "4e700a9e3cdab5cede60d95c3f4cde7257971ca3", "commitAfterChange": "d752b26e3a6a22a0d2aea83eca1f4ca2bd2e36dd", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 214, "signatureBeforeChange": " \tpublic void test075()", "signatureAfterChange": " \tpublic void test075()", "diff": ["-\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "-\t\t\t?\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "-\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type A but does not override it\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "-\t\t\t\t\"The method foo() of type B must override a superclass method\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. WARNING in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                  ^\\n\" + ", "-\t\t\t\t\"I is a raw type. References to generic type I<TT> should be parameterized\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"4. ERROR in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "-\t\t\t\t\"Name clash: The method foo() of type C has the same erasure as foo() of type A but does not override it\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"5. ERROR in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "-\t\t\t\t\"The method foo() of type C must override a superclass method\\n\" + ", "-\t\t\t\t\"----------\\n\"", "-\t\t\t:\t\"----------\\n\" + ", "-\t\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "-\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type A but does not override it\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "-\t\t\t\t\"The method foo() of type B must override or implement a supertype method\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"3. WARNING in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                  ^\\n\" + ", "-\t\t\t\t\"I is a raw type. References to generic type I<TT> should be parameterized\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"4. ERROR in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "-\t\t\t\t\"Name clash: The method foo() of type C has the same erasure as foo() of type A but does not override it\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"5. ERROR in A.java (at line 3)\\n\" + ", "-\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "-\t\t\t\t\"The method foo() of type C must override or implement a supertype method\\n\" + ", "-\t\t\t\t\"----------\\n\";\t\t", "-\t\t\texpectedOutput", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "+\t\t\t\"\t                                                              ^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type A but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "+\t\t\t\"\t                                                              ^^^^^\\n\" + ", "+\t\t\tmustOverrideMessage(\"foo()\", \"B\") + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in A.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\"\t                                                  ^\\n\" + ", "+\t\t\t\"I is a raw type. References to generic type I<TT> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"4. ERROR in A.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\"\t                                                          ^^^^^\\n\" + ", "+\t\t\t\"Name clash: The method foo() of type C has the same erasure as foo() of type A but does not override it\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"5. ERROR in A.java (at line 3)\\n\" + ", "+\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\"\t                                                          ^^^^^\\n\" +  ", "+\t\t\tmustOverrideMessage(\"foo()\", \"C\") +", "+\t\t\t\"----------\\n\""]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "62e500ad62ed5fc6b8f2de73466b0f8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "commitAfterChange": "eaaf8d51568dee07a03eec3ae337eaee38c80f58", "methodNumberBeforeChange": 213, "methodNumberAfterChange": 213, "signatureBeforeChange": " \tpublic void test075()", "signatureAfterChange": " \tpublic void test075()", "diff": ["+\t\tString expectedOutput = new CompilerOptions(getCompilerOptions()).sourceLevel < ClassFileConstants.JDK1_6", "+\t\t\t?\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "+\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type A but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "+\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "+\t\t\t\t\"The method foo() of type B must override a superclass method\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in A.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\t\"\t                                                  ^\\n\" + ", "+\t\t\t\t\"I is a raw type. References to generic type I<TT> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in A.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo() of type C has the same erasure as foo() of type A but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in A.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "+\t\t\t\t\"The method foo() of type C must override a superclass method\\n\" + ", "+\t\t\t\t\"----------\\n\"", "+\t\t\t:\t\"----------\\n\" + ", "+\t\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "+\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type A but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "+\t\t\t\t\"\t                                                              ^^^^^\\n\" + ", "+\t\t\t\t\"The method foo() of type B must override or implement a supertype method\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"3. WARNING in A.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\t\"\t                                                  ^\\n\" + ", "+\t\t\t\t\"I is a raw type. References to generic type I<TT> should be parameterized\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"4. ERROR in A.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "+\t\t\t\t\"Name clash: The method foo() of type C has the same erasure as foo() of type A but does not override it\\n\" + ", "+\t\t\t\t\"----------\\n\" + ", "+\t\t\t\t\"5. ERROR in A.java (at line 3)\\n\" + ", "+\t\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "+\t\t\t\t\"\t                                                          ^^^^^\\n\" + ", "+\t\t\t\t\"The method foo() of type C must override or implement a supertype method\\n\" + ", "+\t\t\t\t\"----------\\n\";\t\t", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "-\t\t\t\"\t                                                              ^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method foo() of type B has the same erasure as foo() of type A but does not override it\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "-\t\t\t\"\tclass B extends A { @Override <T1, S1 extends J & I<S1>> void foo() { } }\\n\" + ", "-\t\t\t\"\t                                                              ^^^^^\\n\" + ", "-\t\t\t\"The method foo() of type B must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. WARNING in A.java (at line 3)\\n\" + ", "-\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\"\t                                                  ^\\n\" + ", "-\t\t\t\"I is a raw type. References to generic type I<TT> should be parameterized\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in A.java (at line 3)\\n\" + ", "-\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\"\t                                                          ^^^^^\\n\" + ", "-\t\t\t\"Name clash: The method foo() of type C has the same erasure as foo() of type A but does not override it\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"5. ERROR in A.java (at line 3)\\n\" + ", "-\t\t\t\"\tclass C extends A { @Override <T2, S2 extends J & I> void foo() { } }\\n\" + ", "-\t\t\t\"\t                                                          ^^^^^\\n\" + ", "-\t\t\t\"The method foo() of type C must override a superclass method\\n\" + ", "-\t\t\t\"----------\\n\"", "+\t\t\texpectedOutput"]}], "num": 47081}