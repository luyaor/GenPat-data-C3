{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b36a5315be879924762af743377c753", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f15fc1f664a4bef38a1661f1781d4d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedFileManager.java", "commitBeforeChange": "8e2ef31cf8fd6f75aa20407e8ef5b91a95949af6", "commitAfterChange": "7b76bd109981132b10232dab12b61206fb5d8435", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic Set<IFile> deleteObsoleteFilesAfterBuild(IFile parentFile, Set<IFile> newlyGeneratedFiles)", "signatureAfterChange": " \tpublic Set<IFile> deleteObsoleteFilesAfterBuild(IFile parentFile, Set<IFile> newlyGeneratedFiles)", "diff": ["-\t\tdeleted = calculateDeletedFiles(parentFile, newlyGeneratedFiles);", "-", "+\t\tdeleted = computeObsoleteFiles(parentFile, newlyGeneratedFiles);", "+\t\t}", "+\t\t", "+\t\t// Discard blank WCs *after* we delete the corresponding files:", "+\t\t// we don't want the type to become briefly visible to a reconcile thread.", "+\t\tList<ICompilationUnit> toDiscard;", "+\t\ttoDiscard = computeObsoleteHiddenTypes(parentFile, deleted);", "+\t\tfor (ICompilationUnit wcToDiscard : toDiscard) {", "+\t\t\t_CUHELPER.discardWorkingCopy(wcToDiscard);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8bff1b39de86b1d1c64b29a5ae1f4977", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AnnotationProcessorFactoryLoader.java", "commitBeforeChange": "015c66459c41ce714c2afab061dda99760bcb04e", "commitAfterChange": "cc1df04d2a7670c32d491fa2cc726f1c92c0a8b6", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories( Map<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "signatureAfterChange": " \tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories(  \t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "diff": ["-\tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories( Map<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "+\tprivate Map<AnnotationProcessorFactory, FactoryPath.Attributes> loadFactories( ", "+\t\t\tMap<FactoryContainer, FactoryPath.Attributes> containers, IJavaProject project )", "-\t\t// Clear existing problem markers; we'll add them back if there are still problems.", "-\t\tremoveAptBuildProblemMarkers( project );", "-\t\tremoveMissingFactoryJars( project, containers );", "+\t\tremoveAptBuildProblemMarkers(project);", "+\t\tSet<FactoryContainer> badContainers = verifyFactoryPath(project);", "+\t\tif (badContainers != null) {", "+\t\t\treportMissingFactoryContainers(badContainers, project);", "+\t\t\tfor (FactoryContainer badFC : badContainers) {", "+\t\t\t\tcontainers.remove(badFC);", "+\t\t\t}", "+\t\t}"]}], "num": 1168}