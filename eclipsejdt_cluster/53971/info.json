{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ff140c8d4e01f86b70ca2d62097b609", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b13ffc8de0239967e90b54c1ecd98e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/EntryResult.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 4, "signatureBeforeChange": " public String toString()", "signatureAfterChange": " public String[] getDocumentNames(Index index) throws java.io.IOException", "diff": ["-}", "-public String toString(){", "-\tStringBuffer buffer = new StringBuffer(word.length * 2);", "-\tbuffer.append(\"EntryResult: word=\"); //$NON-NLS-1$", "-\tbuffer.append(word);", "-\tbuffer.append(\", refs={\"); //$NON-NLS-1$", "-\tfor (int i = 0; i < fileRefs.length; i++){", "-\t\tif (i > 0) buffer.append(',');", "-\t\tbuffer.append(' ');", "-\t\tbuffer.append(fileRefs[i]);", "+public String[] getDocumentNames(Index index) throws java.io.IOException {", "+\tif (this.documentTables != null) {", "+\t\tfor (int i = 0, l = this.documentTables.length; i < l; i++) {", "+\t\t\tObject offset = this.documentTables[i].get(word);", "+\t\t\tint[] numbers = index.diskIndex.readDocumentNumbers(offset);", "+\t\t\tfor (int j = 0, k = numbers.length; j < k; j++)", "+\t\t\t\taddDocumentName(index.diskIndex.readDocumentName(numbers[j]));", "+\t\t}", "-\tbuffer.append(\" }\"); //$NON-NLS-1$", "-\treturn buffer.toString();", "+", "+\tif (this.documentNames == null)", "+\t\treturn new String[0];", "+", "+\tString[] names = new String[this.documentNames.elementSize];", "+\tint count = 0;", "+\tObject[] values = this.documentNames.values;", "+\tfor (int i = 0, l = values.length; i < l; i++)", "+\t\tif (values[i] != null)", "+\t\t\tnames[count++] = (String) values[i];", "+\treturn names;", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f460911bf4d9d1d96c0f340fb9eca7f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "8db2a22a82e2d4efc29edee16188f254a9d47da3", "commitAfterChange": "72fd8c6a4dc73c6ac3a3682b35550798adce77f5", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t\t\t\t\tpublic void handleException(Throwable exception)", "signatureAfterChange": " \t\t \t\tprivate int sortParticipants(HashMap group, CompilationParticipant[] participants, int index)", "diff": ["-\t\t\t\tPlatform.run(new ISafeRunnable() {", "-\t\t\t\t\tpublic void handleException(Throwable exception) {", "-\t\t\t\t\t\tUtil.log(exception, \"Exception occurred while configuring compilation participant\"); //$NON-NLS-1$", "-\t\t\t\t\t}", "+\t\t", "+\t\tprivate int sortParticipants(HashMap group, CompilationParticipant[] participants, int index) {", "+\t\t\tint size = group.size();", "+\t\t\tif (size == 0) return index;", "+\t\t\tObject[] elements = group.keySet().toArray();", "+\t\t\tUtil.sort(elements, new Util.Comparer() {", "+\t\t\t\tpublic int compare(Object a, Object b) {", "+\t\t\t\t\tString id = ((IConfigurationElement) a).getAttribute(\"id\"); //$NON-NLS-1$", "+\t\t\t\t\tif (id == null) return -1;", "+\t\t\t\t\tIConfigurationElement[] requiredElements = ((IConfigurationElement) b).getChildren(\"requires\"); //$NON-NLS-1$", "+\t\t\t\t\tfor (int i = 0, length = requiredElements.length; i < length; i++) {", "+\t\t\t\t\t\tIConfigurationElement required = requiredElements[i];", "+\t\t\t\t\t\tif (id.equals(required.getAttribute(\"id\"))) //$NON-NLS-1$", "+\t\t\t\t\t\t\treturn 1;", "+\t\t\t\t\t}", "+\t\t\t\t\treturn -1;", "+\t\t\t\t}", "+\t\t\t});", "+\t\t\tfor (int i = 0; i < size; i++)", "+\t\t\t\tparticipants[index+i] = (CompilationParticipant) group.get(elements[i]);", "+\t\t\treturn index + size;", "+\t\t}"]}], "num": 53971}