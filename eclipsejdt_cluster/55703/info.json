{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e904299f033c34a7df30ca7721624c4d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "450678ac911f8b507f8085b51965e91a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "6a9c839afeea06e7dd97b023fa9c24def00f0f08", "commitAfterChange": "cf7db1b07f7da2723bd250cc64a7e16bec1c504d", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 31, "signatureBeforeChange": "  ReferenceBinding getTypeFromCompoundName(char[][] compoundName, boolean isParameterized)", "signatureAfterChange": "  ReferenceBinding getTypeFromCompoundName(char[][] compoundName, boolean isParameterized)", "diff": ["-\t\tproblemReporter.isClassPathCorrect(compoundName, null);", "-\t\treturn null; // will not get here since the above error aborts the compilation", "+\t\t// create a proxy for the missing BinaryType", "+\t\tbinding = cacheMissingBinaryType(compoundName, this.unitBeingCompleted);", "-        binding = (ReferenceBinding)convertUnresolvedBinaryToRawType(binding);", "+        binding = (ReferenceBinding) convertUnresolvedBinaryToRawType(binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "878c62a3cc2e6cf75c3430e238cb6c4e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "6a9c839afeea06e7dd97b023fa9c24def00f0f08", "commitAfterChange": "cf7db1b07f7da2723bd250cc64a7e16bec1c504d", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": " public ReferenceBinding getResolvedType(char[][] compoundName, Scope scope)", "signatureAfterChange": " public ReferenceBinding getResolvedType(char[][] compoundName, Scope scope)", "diff": ["-\tproblemReporter.isClassPathCorrect(compoundName, scope == null ? null : scope.referenceCompilationUnit());", "-\treturn null; // will not get here since the above error aborts the compilation", "+\t// create a proxy for the missing BinaryType", "+\treturn cacheMissingBinaryType(", "+\t\tcompoundName, ", "+\t\tscope == null ? this.unitBeingCompleted : scope.referenceCompilationUnit());"]}], "num": 55703}