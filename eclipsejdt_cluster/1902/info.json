{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48c29326e904c6e042df12adc0dc02ad", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ec3c5b55a8b8b5d06ddf5334328dc1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c2bc9a448b64247e09d0753ab1188bb7d5fe6fb8", "commitAfterChange": "0fcea0fb90ca9eb3f87564950f58620b338bf540", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate boolean dumpBinaryExpression( \t\tBinaryExpression binaryExpression, \t\tint operator, \t\tBlockScope scope)", "signatureAfterChange": " \t \tprivate boolean dumpBinaryExpression( \t\tBinaryExpression binaryExpression, \t\tint operator, \t\tBlockScope scope)", "diff": ["+\t\t\t\t\t\tif (operators[i] == TerminalTokens.TokenNameMINUS && isMinus()) {", "+\t\t\t\t\t\t\t// the next character is a minus (unary operator)", "+\t\t\t\t\t\t\tthis.scribe.space();", "+\t\t\t\t\t\t}", "+\t\t\tif (operator == TerminalTokens.TokenNameMINUS && isMinus()) {", "+\t\t\t\t// the next character is a minus (unary operator)", "+\t\t\t\tthis.scribe.space();", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a8b89f2caa5f8c1ff4cd510612d9fad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "665fa70c145e3460af8c3efab89c50489feb17d0", "commitAfterChange": "3996b584ed9fd34d4dddb6c6b007dbfe987d9ebb", "methodNumberBeforeChange": 102, "methodNumberAfterChange": 103, "signatureBeforeChange": " \tpublic void saving(ISaveContext context) throws CoreException", "signatureAfterChange": " \tpublic void saving(ISaveContext context) throws CoreException", "diff": ["-\t\t\t\t\t\t// container has not been initiliazed yet, use previous session value", "+\t\t\t\t\t\t// container has not been initialized yet, use previous session value", "+\t\t\tinfo.rememberExternalLibTimestamps();", "+\t\t\t\tinfo.rememberExternalLibTimestamps();", "+\t\t", "+\t\t// save external libs timestamps", "+\t\tthis.deltaState.saveExternalLibTimeStamps();"]}], "num": 1902}