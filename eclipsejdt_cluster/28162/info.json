{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bdd7a2ae0b543e59cc14779544226991", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b40d8e8425c9ff4f870cbf5b3460f5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "32f37f4b1b4681f8d4c2ce5fe64581861184d0f5", "commitAfterChange": "6a1671aa7ea88fc01c83297c32d40152115e2623", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tprivate void reportSecondaryError(int msgCode,\tint nameIndex,\tint leftToken,\tint rightToken, int scopeNameIndex)", "signatureAfterChange": "  \tprivate void reportSecondaryError(int msgCode,\tint nameIndex,\tint leftToken,\tint rightToken, int scopeNameIndex)", "diff": ["-", "+\t            int insertedToken = TokenNameNotAToken;", "+\t                else", "+\t                \tinsertedToken = Parser.reverse_index[Parser.scope_rhs[i]];", "+\t            \tif (insertedToken == TokenNameElidedSemicolonAndRightBrace) {", "+\t\t\t\t\t\t/* https://bugs.eclipse.org/bugs/show_bug.cgi?id=383046, we should never ever report the diagnostic, \"Syntax error, insert ElidedSemicolonAndRightBraceto complete LambdaBody\"", "+\t\t\t\t\t\t   as it is a synthetic token. Instead we should simply repair and move on. See how the regular Parser behaves at Parser.consumeElidedLeftBraceAndReturn and Parser.consumeExpression.", "+\t\t\t\t\t\t   See also: point (4) in https://bugs.eclipse.org/bugs/show_bug.cgi?id=380194#c15", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e041be177778aa53db9e7d9c9176683b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/DiagnoseParser.java", "commitBeforeChange": "32f37f4b1b4681f8d4c2ce5fe64581861184d0f5", "commitAfterChange": "6a1671aa7ea88fc01c83297c32d40152115e2623", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tprivate void reportPrimaryError(int msgCode, int nameIndex, int token, int scopeNameIndex)", "signatureAfterChange": "  \tprivate void reportPrimaryError(int msgCode, int nameIndex, int token, int scopeNameIndex)", "diff": ["+\t            int insertedToken = TokenNameNotAToken;", "+\t\t\t\t\telse", "+\t\t\t\t\t\tinsertedToken = Parser.reverse_index[Parser.scope_rhs[i]];", "+\t\t\t\t\tif (insertedToken == TokenNameElidedSemicolonAndRightBrace) {", "+\t\t\t\t\t\t/* https://bugs.eclipse.org/bugs/show_bug.cgi?id=383046, we should never ever report the diagnostic, \"Syntax error, insert ElidedSemicolonAndRightBraceto complete LambdaBody\"", "+\t\t\t\t\t\t   as it is a synthetic token. Instead we should simply repair and move on. See how the regular Parser behaves at Parser.consumeElidedLeftBraceAndReturn and Parser.consumeExpression.", "+\t\t\t\t\t\t   See also: point (4) in https://bugs.eclipse.org/bugs/show_bug.cgi?id=380194#c15", "+\t\t\t\t\t\t*/", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\t}"]}], "num": 28162}