{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b7d012748baeda3f793979ada619a3c9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf02954db759c71cca49e468a6240e81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "f6037f3e0e76e18ea82dd93d13e55dc410583456", "commitAfterChange": "a5577117cb4a612450eddce3c0b20eb90f21cb89", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 59, "signatureBeforeChange": " \tpublic boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo)", "signatureAfterChange": " \tpublic boolean updateCurrentDeltaAndIndex(IResourceDelta delta, int elementType, RootInfo rootInfo)", "diff": ["-\t\t\t\t\t\t\tJavaModel javaModel = this.manager.getJavaModel();", "-\t\t\t\t\t\t\tboolean wasJavaProject = javaModel.findJavaProject(res) != null;", "+\t\t\t\t\t\t\tboolean wasJavaProject = this.state.findJavaProject(res.getName()) != null;", "-\t\t\t\t\t\tJavaModel javaModel = this.manager.getJavaModel();", "-\t\t\t\t\t\tboolean wasJavaProject = javaModel.findJavaProject(res) != null;", "+\t\t\t\t\t\tboolean wasJavaProject = this.state.findJavaProject(res.getName()) != null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e82d4ce552c12ebae9d477a7e1893e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "85b2cfd04e83239095fec1009e8fcb37543a6bed", "commitAfterChange": "a825a712d9a7173d7e7cfae42a0058bb2e0b5bb5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void complainOnFinalAssignmentsInLoop( \t\tBlockScope scope, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void complainOnFinalAssignmentsInLoop( \t\tBlockScope scope, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tVariableBinding variable;", "-\t\t\tif ((variable = finalVariables[i]) != null) {", "-\t\t\t\tboolean complained; // remember if have complained on this final assignment", "-\t\t\t\tif (variable instanceof FieldBinding) {", "-\t\t\t\t\tif (complained = flowInfo.isPotentiallyAssigned((FieldBinding) variable)) {", "-\t\t\t\t\t\tscope.problemReporter().duplicateInitializationOfBlankFinalField(", "-\t\t\t\t\t\t\t(FieldBinding) variable,", "-\t\t\t\t\t\t\t(NameReference) finalAssignments[i]);", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tif (complained =", "-\t\t\t\t\t\tflowInfo.isPotentiallyAssigned((LocalVariableBinding) variable)) {", "-\t\t\t\t\t\tscope.problemReporter().duplicateInitializationOfFinalLocal(", "-\t\t\t\t\t\t\t(LocalVariableBinding) variable,", "-\t\t\t\t\t\t\t(NameReference) finalAssignments[i]);", "-\t\t\t\t\t}", "+\t\t\tVariableBinding variable = finalVariables[i];", "+\t\t\tif (variable == null) continue;", "+\t\t\tboolean complained = false; // remember if have complained on this final assignment", "+\t\t\tif (variable instanceof FieldBinding) {", "+\t\t\t\tif (flowInfo.isPotentiallyAssigned((FieldBinding) variable)) {", "+\t\t\t\t\tcomplained = true;", "+\t\t\t\t\tscope.problemReporter().duplicateInitializationOfBlankFinalField(", "+\t\t\t\t\t\t(FieldBinding) variable,", "+\t\t\t\t\t\tfinalAssignments[i]);", "-\t\t\t\t// any reference reported at this level is removed from the parent context where it ", "-\t\t\t\t// could also be reported again", "-\t\t\t\tif (complained) {", "-\t\t\t\t\tFlowContext context = parent;", "-\t\t\t\t\twhile (context != null) {", "-\t\t\t\t\t\tcontext.removeFinalAssignmentIfAny(finalAssignments[i]);", "-\t\t\t\t\t\tcontext = context.parent;", "-\t\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tif (flowInfo.isPotentiallyAssigned((LocalVariableBinding) variable)) {", "+\t\t\t\t\tcomplained = true;", "+\t\t\t\t\tscope.problemReporter().duplicateInitializationOfFinalLocal(", "+\t\t\t\t\t\t(LocalVariableBinding) variable,", "+\t\t\t\t\t\tfinalAssignments[i]);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t// any reference reported at this level is removed from the parent context where it ", "+\t\t\t// could also be reported again", "+\t\t\tif (complained) {", "+\t\t\t\tFlowContext context = parent;", "+\t\t\t\twhile (context != null) {", "+\t\t\t\t\tcontext.removeFinalAssignmentIfAny(finalAssignments[i]);", "+\t\t\t\t\tcontext = context.parent;"]}], "num": 71676}