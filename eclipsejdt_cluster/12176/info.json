{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "77998e37e41a91b37d2bdf323700d019", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "373196f606cc5f09302216c6862a12b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "1fd4391b9d956e4b222e75746a12248fe673ae09", "commitAfterChange": "0ac06ace387f6f7ca79dcd41a12a6564b157c4e4", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  \t\tpublic void setLog(String logFileName) throws InvalidInputException", "signatureAfterChange": "  \t\tpublic void setLog(String logFileName) throws InvalidInputException", "diff": ["-\t\t\t\t\t\tthis.parameters.put(Logger.COMPILER_NAME, Main.bind(\"compiler.name\")); //$NON-NLS-1$", "-\t\t\t\t\t\tthis.parameters.put(Logger.COMPILER_VERSION, Main.bind(\"compiler.version\")); //$NON-NLS-1$", "-\t\t\t\t\t\tthis.parameters.put(Logger.COMPILER_COPYRIGHT, Main.bind(\"compiler.copyright\")); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.parameters.put(Logger.COMPILER_NAME, this.main.bind(\"compiler.name\")); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.parameters.put(Logger.COMPILER_VERSION, this.main.bind(\"compiler.version\")); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.parameters.put(Logger.COMPILER_COPYRIGHT, this.main.bind(\"compiler.copyright\")); //$NON-NLS-1$", "-\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.cannotOpenLog\")); //$NON-NLS-1$", "+\t\t\t\tthrow new InvalidInputException(this.main.bind(\"configure.cannotOpenLog\")); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b78b1802c0ba291da3640a53065e4fe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "commitAfterChange": "a502b956779c4dac7f761502999cc6d149ba7556", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 41, "signatureBeforeChange": " \t\t \t\tpublic void setLog(PrintWriter log)", "signatureAfterChange": "  \t\tpublic void setLog(String logFileName) throws InvalidInputException", "diff": ["-\t\t", "-\t\tpublic void setLog(PrintWriter log) {", "-\t\t\tthis.log = log;", "+", "+\t\tpublic void setLog(String logFileName) throws InvalidInputException {", "+\t\t\ttry {", "+\t\t\t\tthis.log = new PrintWriter(new FileOutputStream(logFileName, false));", "+\t\t\t\tint index = logFileName.lastIndexOf('.');", "+\t\t\t\tif (index != 0) {", "+\t\t\t\t\tif (logFileName.substring(index).toLowerCase().equals(\".xml\")) { //$NON-NLS-1$", "+\t\t\t\t\t\tthis.isXml = true;", "+\t\t\t\t\t\tthis.log.println(XML_HEADER);", "+\t\t\t\t\t\tthis.log.println(XML_DTD_DECLARATION);", "+\t\t\t\t\t\tthis.tab = 0;", "+\t\t\t\t\t\tparameters.clear();", "+\t\t\t\t\t\tparameters.put(COMPILER_NAME, Main.bind(\"compiler.name\")); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\t\tparameters.put(COMPILER_VERSION, Main.bind(\"compiler.version\")); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\t\tparameters.put(COMPILER_COPYRIGHT, Main.bind(\"compiler.copyright\")); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\t\t\tthis.printTag(COMPILER, parameters, true, false);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t} catch (FileNotFoundException e) {", "+\t\t\t\tthrow new InvalidInputException(Main.bind(\"configure.cannotOpenLog\")); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}"]}], "num": 12176}