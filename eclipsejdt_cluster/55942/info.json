{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d3b3242d44c90ab8093e5e5088b3c4c", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e138ee81829835a93ca6536349fc81c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "58415543251b770465849e873d7b597665af3966", "commitAfterChange": "eb8f4b7b53c3aa43a99b2adcf9c05163aa41f6f6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tprotected void addLibraryEntry(IJavaProject project, IPath path, IPath srcAttachmentPath, IPath srcAttachmentPathRoot, IPath[] accessibleFiles, IPath[] nonAccessibleFiles, IClasspathAttribute[] extraAttributes, boolean exported) throws JavaModelException", "signatureAfterChange": " \tprotected void addLibraryEntry(IJavaProject project, IPath path, IPath srcAttachmentPath, IPath srcAttachmentPathRoot, IPath[] accessibleFiles, IPath[] nonAccessibleFiles, IClasspathAttribute[] extraAttributes, boolean exported) throws JavaModelException", "diff": ["-\t\tIClasspathEntry[] entries = project.getRawClasspath();", "-\t\tint length = entries.length;", "-\t\tSystem.arraycopy(entries, 0, entries = new IClasspathEntry[length + 1], 0, length);", "-\t\tentries[length] = JavaCore.newLibraryEntry(", "+\t\tIClasspathEntry entry = JavaCore.newLibraryEntry(", "-\t\tproject.setRawClasspath(entries, null);", "+\t\taddClasspathEntry(project, entry);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bfefd786580835b2a865e865e92808e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "b25ed407ef1d09375524d9c9e824c1c1084b119b", "commitAfterChange": "0bd9f6472768db6e5f0062ffcfd17bd3adede039", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": "  \tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength)", "signatureAfterChange": "  \tvoid propagateErrors(ASTNode astNode, IProblem[] problems)", "diff": ["-\tprivate void propagateErrors(CompilationUnit unit, IProblem[] problems, int problemLength) {", "-\t\t// resize the problem array to the proper size", "-\t\tIProblem[] resizeProblems = null;", "-\t\tif (problems.length == problemLength) {", "-\t\t\tresizeProblems = problems;", "-\t\t} else {", "-\t\t\tSystem.arraycopy(problems, 0, (resizeProblems = new IProblem[problemLength]), 0, problemLength);", "-\t\t}", "-\t\tASTSyntaxErrorPropagator syntaxErrorPropagator = new ASTSyntaxErrorPropagator(resizeProblems);", "-\t\tunit.accept(syntaxErrorPropagator);", "-\t\t// store the messages error on the compulation unit", "-\t\tunit.setProblems(resizeProblems);", "+\tvoid propagateErrors(ASTNode astNode, IProblem[] problems) {", "+\t\tASTSyntaxErrorPropagator syntaxErrorPropagator = new ASTSyntaxErrorPropagator(problems);", "+\t\tastNode.accept(syntaxErrorPropagator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bccde8225858645386c046e14b7b7a11", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/Util.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tprivate static void addInterval(int start, int end)", "signatureAfterChange": " \t \tprivate static void addInterval(int start, int end)", "diff": ["+\t\taddInterval(start, end, 0);", "+\t}"]}], "num": 55942}