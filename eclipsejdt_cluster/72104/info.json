{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1e919557c45d55a321cc751fc30538a4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "069fcbc424176da563466056ca0bc403", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaWorkspaceScope.java", "commitBeforeChange": "fe41a5ed7a14de553c93fde5ff3064717032f87a", "commitAfterChange": "75a9b073354511bd41fc601022882d52caaa8ded", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r public JavaWorkspaceScope()", "signatureAfterChange": "\r public void processDelta(IJavaElementDelta delta)", "diff": ["-public JavaWorkspaceScope() {\r", "+}\r", "+public void processDelta(IJavaElementDelta delta) {\r", "+\tif (this.needsInitialize) return;\r", "+\tIJavaElement element = delta.getElement();\r", "+\tswitch (element.getElementType()) {\r", "+\t\tcase IJavaElement.JAVA_MODEL:\r", "+\t\t\tIJavaElementDelta[] children = delta.getAffectedChildren();\r", "+\t\t\tfor (int i = 0, length = children.length; i < length; i++) {\r", "+\t\t\t\tIJavaElementDelta child = children[i];\r", "+\t\t\t\tthis.processDelta(child);\r", "+\t\t\t}\r", "+\t\t\tbreak;\r", "+\t\tcase IJavaElement.JAVA_PROJECT:\r", "+\t\t\tint kind = delta.getKind();\r", "+\t\t\tswitch (kind) {\r", "+\t\t\t\tcase IJavaElementDelta.ADDED:\r", "+\t\t\t\tcase IJavaElementDelta.REMOVED:\r", "+\t\t\t\t\tthis.needsInitialize = true;\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase IJavaElementDelta.CHANGED:\r", "+\t\t\t\t\tchildren = delta.getAffectedChildren();\r", "+\t\t\t\t\tfor (int i = 0, length = children.length; i < length; i++) {\r", "+\t\t\t\t\t\tIJavaElementDelta child = children[i];\r", "+\t\t\t\t\t\tthis.processDelta(child);\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t\tbreak;\r", "+\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT:\r", "+\t\t\tkind = delta.getKind();\r", "+\t\t\tswitch (kind) {\r", "+\t\t\t\tcase IJavaElementDelta.ADDED:\r", "+\t\t\t\tcase IJavaElementDelta.REMOVED:\r", "+\t\t\t\t\tthis.needsInitialize = true;\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase IJavaElementDelta.CHANGED:\r", "+\t\t\t\t\tint flags = delta.getFlags();\r", "+\t\t\t\t\tif ((flags & IJavaElementDelta.F_ADDED_TO_CLASSPATH) > 0\r", "+\t\t\t\t\t\t|| (flags & IJavaElementDelta.F_REMOVED_FROM_CLASSPATH) > 0) {\r", "+\t\t\t\t\t\tthis.needsInitialize = true;\r", "+\t\t\t\t\t}\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t}\r", "+\t\t\tbreak;\r", "+\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f11d64427f17799b812bbfbfa862e61", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "617fadfcdd9d3f85493c65c27088f408a3cd9c9d", "commitAfterChange": "b5a733b30758b3fb9ec3d527e7425b5399ba8dc0", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "\r \tpublic void checkExternalJarChanges(IJavaProject[] projects, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": "\r \tpublic void checkExternalArchiveChanges(IJavaElement[] refreshedElements, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tpublic void checkExternalJarChanges(IJavaProject[] projects, IProgressMonitor monitor) throws JavaModelException {\r", "+\tpublic void checkExternalArchiveChanges(IJavaElement[] refreshedElements, IProgressMonitor monitor) throws JavaModelException {\r", "-\t\t\tHashMap externalJARsStatus = new HashMap();\r", "-\t\t\t\r", "+\t\t\tHashMap externalArchivesStatus = new HashMap();\r", "+\t\t\t\r", "+\t\t\t// find JARs to refresh\r", "+\t\t\tHashSet archivePathsToRefresh = new HashSet();\r", "+\t\t\tfor (int i = 0, elementsLength = refreshedElements.length; i < elementsLength; i++){\r", "+\t\t\t\tIJavaElement element = refreshedElements[i];\r", "+\t\t\t\tswitch(element.getElementType()){\r", "+\t\t\t\t\tcase IJavaElement.PACKAGE_FRAGMENT_ROOT :\r", "+\t\t\t\t\t\tarchivePathsToRefresh.add(element.getPath());\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IJavaElement.JAVA_PROJECT :\r", "+\t\t\t\t\t\tIClasspathEntry[] classpath = ((IJavaProject) element).getResolvedClasspath(true);\r", "+\t\t\t\t\t\tfor (int j = 0, cpLength = classpath.length; j < cpLength; j++){\r", "+\t\t\t\t\t\t\tif (classpath[j].getEntryKind() == IClasspathEntry.CPE_LIBRARY){\r", "+\t\t\t\t\t\t\t\tarchivePathsToRefresh.add(classpath[j].getPath());\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t\tcase IJavaElement.JAVA_MODEL :\r", "+\t\t\t\t\t\tIJavaProject[] projects = manager.getJavaModel().getOldJavaProjectsList();\r", "+\t\t\t\t\t\tfor (int j = 0, projectsLength = projects.length; j < projectsLength; j++){\r", "+\t\t\t\t\t\t\tclasspath = ((IJavaProject) projects[j]).getResolvedClasspath(true);\r", "+\t\t\t\t\t\t\tfor (int k = 0, cpLength = classpath.length; k < cpLength; k++){\r", "+\t\t\t\t\t\t\t\tif (classpath[k].getEntryKind() == IClasspathEntry.CPE_LIBRARY){\r", "+\t\t\t\t\t\t\t\t\tarchivePathsToRefresh.add(classpath[k].getPath());\r", "+\t\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t\t}\r", "+\t\t\t\t\t\t}\r", "+\t\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "+\t\t\t}\r", "+\t\t\t// perform refresh\r", "-\t\t\tif (projects == null){\r", "-\t\t\t\tprojects = manager.getJavaModel().getOldJavaProjectsList();\r", "-\t\t\t}\t\t\t\r", "+\t\t\tIJavaProject[] projects = manager.getJavaModel().getOldJavaProjectsList();\r", "-\t\t\t\t\t\tString status = (String)externalJARsStatus.get(entryPath); \r", "+\t\t\t\t\t\t\r", "+\t\t\t\t\t\tif (!archivePathsToRefresh.contains(entryPath)) continue; // not supposed to be refreshed\r", "+\t\t\t\t\t\t\r", "+\t\t\t\t\t\tString status = (String)externalArchivesStatus.get(entryPath); \r", "-\t\t\t\t\t\t\t\t\texternalJARsStatus.put(entryPath, EXTERNAL_JAR_REMOVED);\r", "+\t\t\t\t\t\t\t\t\texternalArchivesStatus.put(entryPath, EXTERNAL_JAR_REMOVED);\r", "-\t\t\t\t\t\t\t\t\t\texternalJARsStatus.put(entryPath, EXTERNAL_JAR_REMOVED);\r", "+\t\t\t\t\t\t\t\t\t\texternalArchivesStatus.put(entryPath, EXTERNAL_JAR_REMOVED);\r", "-\t\t\t\t\t\t\t\t\t\texternalJARsStatus.put(entryPath, EXTERNAL_JAR_CHANGED);\r", "+\t\t\t\t\t\t\t\t\t\texternalArchivesStatus.put(entryPath, EXTERNAL_JAR_CHANGED);\r", "-\t\t\t\t\t\t\t\t\t\texternalJARsStatus.put(entryPath, EXTERNAL_JAR_UNCHANGED);\r", "+\t\t\t\t\t\t\t\t\t\texternalArchivesStatus.put(entryPath, EXTERNAL_JAR_UNCHANGED);\r", "-\t\t\t\t\t\t\t\t\t\texternalJARsStatus.put(entryPath, EXTERNAL_JAR_UNCHANGED);\r", "+\t\t\t\t\t\t\t\t\t\texternalArchivesStatus.put(entryPath, EXTERNAL_JAR_UNCHANGED);\r", "-\t\t\t\t\t\t\t\t\t\texternalJARsStatus.put(entryPath, EXTERNAL_JAR_ADDED);\r", "+\t\t\t\t\t\t\t\t\t\texternalArchivesStatus.put(entryPath, EXTERNAL_JAR_ADDED);\r", "-\t\t\t\t\t\t\t\texternalJARsStatus.put(entryPath, INTERNAL_JAR_IGNORE);\r", "+\t\t\t\t\t\t\t\texternalArchivesStatus.put(entryPath, INTERNAL_JAR_IGNORE);\r", "-\t\t\t\t\t\tstatus = (String)externalJARsStatus.get(entryPath); \r", "+\t\t\t\t\t\tstatus = (String)externalArchivesStatus.get(entryPath); \r"]}], "num": 72104}