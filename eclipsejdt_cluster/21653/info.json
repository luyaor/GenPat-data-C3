{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5ebb5e87491f3ab5e7dbef5d1883abf4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04fe72a4738e3533b3043abd51a9b5af", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/rewrite/describing/ASTRewritingTest.java", "commitBeforeChange": "de0ec0255833f27449d5f59da580e82b41fe6f0d", "commitAfterChange": "e0c471a33f6a2dbfcbdc998c17f7bfabb120c31b", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic static SingleVariableDeclaration createNewParam(AST ast, String name)", "signatureAfterChange": "  \tprotected static SingleVariableDeclaration createNewParam(AST ast, String name)", "diff": ["-\tpublic static SingleVariableDeclaration createNewParam(AST ast, String name) {", "+\tprotected static SingleVariableDeclaration createNewParam(AST ast, String name) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a349ee0cc038b1cca9a8090e3c70427", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetThisReference.java", "commitBeforeChange": "78950c7a462ba6fe8424532e69a4abeff0c7c745", "commitAfterChange": "bb74c75a01728288c8fd321cd0dfd5da07348196", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected boolean checkAccess(MethodScope methodScope)", "signatureAfterChange": " public boolean checkAccess(MethodScope methodScope)", "diff": ["-protected boolean checkAccess(MethodScope methodScope) {", "+public boolean checkAccess(MethodScope methodScope) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0cb08b1b01ef1afa229fc8e96a3091be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic ASTNode findDeclaringNode(IBinding binding)", "signatureAfterChange": " \tsynchronized ASTNode findDeclaringNode(IBinding binding)", "diff": ["-\tpublic ASTNode findDeclaringNode(IBinding binding) {", "+\tsynchronized ASTNode findDeclaringNode(IBinding binding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d16ff311715802b19c704930e81151a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a56d2afc8ddb8dcda8f74b90d2b39898295865d2", "commitAfterChange": "fc69abbb26faa5011e1c3f5f4862367455008505", "methodNumberBeforeChange": 121, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprotected IJavaElementDelta getDeltaFor(IJavaElement element)", "signatureAfterChange": " \t\tpublic IJavaElementDelta getDeltaFor(IJavaElement element)", "diff": ["+\t\t */", "+\t\tpublic IJavaElementDelta getDeltaFor(IJavaElement element) {", "+\t\t\treturn getDeltaFor(element, false);", "+\t\t}", "-\t */", "-\tprotected IJavaElementDelta getDeltaFor(IJavaElement element) {", "-\t\treturn getDeltaFor(element, false);", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "12a608fc37d4d092372ff59697bfa55d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c0f09226322ecd771874277f6bb778276b0ec732", "commitAfterChange": "c22186f99babc1d07ce1a8d9528c4806c68c13fc", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic void formatStatements(BlockScope scope, final Statement[] statements, boolean insertNewLineAfterLastStatement)", "signatureAfterChange": "  \tprivate void formatStatements(BlockScope scope, final Statement[] statements, boolean insertNewLineAfterLastStatement)", "diff": ["-\tpublic void formatStatements(BlockScope scope, final Statement[] statements, boolean insertNewLineAfterLastStatement) {", "+\tprivate void formatStatements(BlockScope scope, final Statement[] statements, boolean insertNewLineAfterLastStatement) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "141d156e33bc36d1f522a6c96edb632a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BufferFactoryWrapper.java", "commitBeforeChange": "b1e7dd1740dcc45fe363892f1b6002f0c3a8ef0e", "commitAfterChange": "a43a4c1cc03ffd1e3eeb8ffe9a1b2288e2734d16", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\t \tpublic BufferFactoryWrapper(IBufferFactory factory)", "signatureAfterChange": " \t\t \tprivate BufferFactoryWrapper(IBufferFactory factory)", "diff": ["-\tpublic BufferFactoryWrapper(IBufferFactory factory) {", "+\tprivate BufferFactoryWrapper(IBufferFactory factory) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17aeb8d50c678dbaa4f42b98d8dd1ed7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 108, "methodNumberAfterChange": 155, "signatureBeforeChange": "  \tprivate void setTypeForVariableDeclarationExpression(VariableDeclarationExpression variableDeclarationExpression, Type type, int extraDimension)", "signatureAfterChange": "  \tprotected void setTypeForVariableDeclarationExpression(VariableDeclarationExpression variableDeclarationExpression, Type type, int extraDimension)", "diff": ["-", "-\tprivate void setTypeForVariableDeclarationExpression(VariableDeclarationExpression variableDeclarationExpression, Type type, int extraDimension) {", "-\t\tif (extraDimension != 0) {", "-\t\t\tif (type.isArrayType()) {", "-\t\t\t\tArrayType arrayType = (ArrayType) type;", "-\t\t\t\tint remainingDimensions = arrayType.getDimensions() - extraDimension;", "-\t\t\t\tif (remainingDimensions == 0)  {", "-\t\t\t\t\t// the dimensions are after the name so the type of the fieldDeclaration is a simpleType", "-\t\t\t\t\tType elementType = arrayType.getElementType();", "-\t\t\t\t\t// cut the child loose from its parent (without creating garbage)", "-\t\t\t\t\telementType.setParent(null, null);", "-\t\t\t\t\tthis.ast.getBindingResolver().updateKey(type, elementType);", "-\t\t\t\t\tvariableDeclarationExpression.setType(elementType);", "-\t\t\t\t} else {", "-\t\t\t\t\tint start = type.getStartPosition();", "-\t\t\t\t\tint length = type.getLength();", "-\t\t\t\t\tArrayType subarrayType = arrayType;", "-\t\t\t\t\tint index = extraDimension;", "-\t\t\t\t\twhile (index > 0) {", "-\t\t\t\t\t\tsubarrayType = (ArrayType) subarrayType.getComponentType();", "-\t\t\t\t\t\tindex--;", "-\t\t\t\t\t}", "-\t\t\t\t\tint end = retrieveProperRightBracketPosition(remainingDimensions, start, start + length);", "-\t\t\t\t\tsubarrayType.setSourceRange(start, end - start + 1);", "-\t\t\t\t\t// cut the child loose from its parent (without creating garbage)", "-\t\t\t\t\tsubarrayType.setParent(null, null);", "-\t\t\t\t\tupdateInnerPositions(subarrayType, remainingDimensions);", "-\t\t\t\t\tvariableDeclarationExpression.setType(subarrayType);", "-\t\t\t\t\tthis.ast.getBindingResolver().updateKey(type, subarrayType);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tvariableDeclarationExpression.setType(type);", "-\t\t\t}", "-\t\t} else {", "-\t\t\tvariableDeclarationExpression.setType(type);", "-\t\t}", "-\t}", "+", "+\tprotected void setTypeForVariableDeclarationExpression(VariableDeclarationExpression variableDeclarationExpression, Type type, int extraDimension) {", "+\t\tif (extraDimension != 0) {", "+\t\t\tif (type.isArrayType()) {", "+\t\t\t\tArrayType arrayType = (ArrayType) type;", "+\t\t\t\tint remainingDimensions = arrayType.getDimensions() - extraDimension;", "+\t\t\t\tif (remainingDimensions == 0)  {", "+\t\t\t\t\t// the dimensions are after the name so the type of the fieldDeclaration is a simpleType", "+\t\t\t\t\tType elementType = arrayType.getElementType();", "+\t\t\t\t\t// cut the child loose from its parent (without creating garbage)", "+\t\t\t\t\telementType.setParent(null, null);", "+\t\t\t\t\tthis.ast.getBindingResolver().updateKey(type, elementType);", "+\t\t\t\t\tvariableDeclarationExpression.setType(elementType);", "+\t\t\t\t} else {", "+\t\t\t\t\tint start = type.getStartPosition();", "+\t\t\t\t\tint length = type.getLength();", "+\t\t\t\t\tArrayType subarrayType = arrayType;", "+\t\t\t\t\tint index = extraDimension;", "+\t\t\t\t\twhile (index > 0) {", "+\t\t\t\t\t\tsubarrayType = (ArrayType) subarrayType.getComponentType();", "+\t\t\t\t\t\tindex--;", "+\t\t\t\t\t}", "+\t\t\t\t\tint end = retrieveProperRightBracketPosition(remainingDimensions, start, start + length);", "+\t\t\t\t\tsubarrayType.setSourceRange(start, end - start + 1);", "+\t\t\t\t\t// cut the child loose from its parent (without creating garbage)", "+\t\t\t\t\tsubarrayType.setParent(null, null);", "+\t\t\t\t\tupdateInnerPositions(subarrayType, remainingDimensions);", "+\t\t\t\t\tvariableDeclarationExpression.setType(subarrayType);", "+\t\t\t\t\tthis.ast.getBindingResolver().updateKey(type, subarrayType);", "+\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tvariableDeclarationExpression.setType(type);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tvariableDeclarationExpression.setType(type);", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e84ca7e2c8a99428b2934f6f33b18da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 7, "signatureBeforeChange": "     private Object getValue(final String memberName)", "signatureAfterChange": "     public Object getValue(final String memberName)", "diff": ["-    private Object getValue(final String memberName)", "+    public Object getValue(final String memberName)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "235c7b253bc2dde11206a880cb5c4a2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 133, "signatureBeforeChange": " \tprivate int retrieveStartBlockPosition(int start, int end)", "signatureAfterChange": " \tprotected int retrieveStartBlockPosition(int start, int end)", "diff": ["-\t */", "-\tprivate int retrieveStartBlockPosition(int start, int end) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\ttry {", "-\t\t\tint token;", "-\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tswitch(token) {", "-\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE://110", "-\t\t\t\t\t\treturn this.scanner.startPosition;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t\treturn -1;", "-\t}", "+\t */", "+\tprotected int retrieveStartBlockPosition(int start, int end) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\ttry {", "+\t\t\tint token;", "+\t\t\twhile ((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF) {", "+\t\t\t\tswitch(token) {", "+\t\t\t\t\tcase TerminalTokens.TokenNameLBRACE://110", "+\t\t\t\t\t\treturn this.scanner.startPosition;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t\treturn -1;", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3a6caa1350f367387b8a5cbfad32cc39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 125, "signatureBeforeChange": "  \tprivate void retrieveIdentifierAndSetPositions(int start, int end, Name name)", "signatureAfterChange": "  \tprotected void retrieveIdentifierAndSetPositions(int start, int end, Name name)", "diff": ["-", "-\tprivate void retrieveIdentifierAndSetPositions(int start, int end, Name name) {", "-\t\tthis.scanner.resetTo(start, end);", "-\t\tint token;", "-\t\ttry {", "-\t\t\twhile((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF)  {", "-\t\t\t\tif (token == TerminalTokens.TokenNameIdentifier) {", "-\t\t\t\t\tint startName = this.scanner.startPosition;", "-\t\t\t\t\tint endName = this.scanner.currentPosition - 1;", "-\t\t\t\t\tname.setSourceRange(startName, endName - startName + 1);", "-\t\t\t\t\treturn;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t} catch(InvalidInputException e) {", "-\t\t\t// ignore", "-\t\t}", "-\t}", "+", "+\tprotected void retrieveIdentifierAndSetPositions(int start, int end, Name name) {", "+\t\tthis.scanner.resetTo(start, end);", "+\t\tint token;", "+\t\ttry {", "+\t\t\twhile((token = this.scanner.getNextToken()) != TerminalTokens.TokenNameEOF)  {", "+\t\t\t\tif (token == TerminalTokens.TokenNameIdentifier) {", "+\t\t\t\t\tint startName = this.scanner.startPosition;", "+\t\t\t\t\tint endName = this.scanner.currentPosition - 1;", "+\t\t\t\t\tname.setSourceRange(startName, endName - startName + 1);", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t} catch(InvalidInputException e) {", "+\t\t\t// ignore", "+\t\t}", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c8cee630e65d1bf1f566eb6162a23bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "72a4987e03f2b3b01c1f1fa7e641153e8b607b6e", "commitAfterChange": "1da80432c78bbaea0a8998b6847ad81e0d9c87be", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": "  \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tSourceTypeBinding typeInvocation, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tObjectVector typesFound, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": "  \tprotected void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tSourceTypeBinding typeInvocation, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tObjectVector typesFound, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\tprivate void findMemberTypes(", "+\tprotected void findMemberTypes("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "402eac5dd5eeba23f1167f75a513947e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/DoubleConstant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic DoubleConstant(double value)", "signatureAfterChange": "  \tprivate DoubleConstant(double value)", "diff": ["-\t", "-\tpublic DoubleConstant(double value) {", "+", "+\tprivate DoubleConstant(double value) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40a5096e82451b0d57c31ef63fb91dfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "f4ce17c14dcca58120b5d06b4ca1a613985e6128", "commitAfterChange": "0edf714bfdc0b0cf6f1e623d20bbac3ec3bfa5d0", "methodNumberBeforeChange": 250, "methodNumberAfterChange": 250, "signatureBeforeChange": " private void rejectIllegalLeadingTypeAnnotations(TypeReference typeReference)", "signatureAfterChange": " protected void rejectIllegalLeadingTypeAnnotations(TypeReference typeReference)", "diff": ["-private void rejectIllegalLeadingTypeAnnotations(TypeReference typeReference) {", "+protected void rejectIllegalLeadingTypeAnnotations(TypeReference typeReference) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44d32abf24e8bdd3fd62d68b920d4e94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 46, "signatureBeforeChange": " public void reportMethodDeclaration(AbstractMethodDeclaration methodDeclaration, IJavaElement parent, int accuracy) throws CoreException", "signatureAfterChange": " private void reportMethodDeclaration(AbstractMethodDeclaration methodDeclaration, IJavaElement parent, int accuracy) throws CoreException", "diff": ["-public void reportMethodDeclaration(AbstractMethodDeclaration methodDeclaration, IJavaElement parent, int accuracy) throws CoreException {", "+private void reportMethodDeclaration(AbstractMethodDeclaration methodDeclaration, IJavaElement parent, int accuracy) throws CoreException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "455b0f8a37b713cb032d4aba6a66b304", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/BaseProcessorEnv.java", "commitBeforeChange": "8164609d0329b8e1757d2e11bb01a0c925e98561", "commitAfterChange": "2fe88cd8bfeb264a7a89978a44e073d1eb448401", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "     private ITypeBinding getTypeBindingFromKey(final String key, final ICompilationUnit unit)", "signatureAfterChange": "     protected ITypeBinding getTypeBindingFromKey(final String key, final ICompilationUnit unit)", "diff": ["-    private ITypeBinding getTypeBindingFromKey(final String key, final ICompilationUnit unit){", "+    protected ITypeBinding getTypeBindingFromKey(final String key, final ICompilationUnit unit){"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4d00c1f80cf953b8519b92f7de05fb82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "844b891620178c0b92403d6108fad8dcdac272df", "commitAfterChange": "f4f81968c0fa49af0ebd2fc1f35fb9113776c823", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " protected CompilationUnit(PackageFragment parent, String name, WorkingCopyOwner owner)", "signatureAfterChange": " public CompilationUnit(PackageFragment parent, String name, WorkingCopyOwner owner)", "diff": ["-protected CompilationUnit(PackageFragment parent, String name, WorkingCopyOwner owner) {", "+public CompilationUnit(PackageFragment parent, String name, WorkingCopyOwner owner) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b7981c30063ee32fb37d2b5ca5f302", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Scanner.java", "commitBeforeChange": "dd3bff4d99a5193497eb7e3c0e1bc46a32b7c36a", "commitAfterChange": "cc1c110e9641a2cecfab702ac9383376aefe030a", "methodNumberBeforeChange": 74, "methodNumberAfterChange": 75, "signatureBeforeChange": " private final boolean atReferenceExpression()", "signatureAfterChange": "  protected final boolean atReferenceExpression()", "diff": ["-private final boolean atReferenceExpression() { // Did the '<' we saw just now herald a reference expression ?", "+", "+protected final boolean atReferenceExpression() { // Did the '<' we saw just now herald a reference expression ?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "53ba2bcaabcc16dd7f29628ac8494c20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 112, "methodNumberAfterChange": 101, "signatureBeforeChange": "   \tprivate Comment createComment(int[] positions)", "signatureAfterChange": "  \tprotected Comment createComment(int[] positions)", "diff": ["+", "+\tprotected Comment createComment(int[] positions) {", "+\t\t// Create comment node", "+\t\tComment comment = null;", "+\t\tint start = positions[0];", "+\t\tint end = positions[1];", "+\t\tif (positions[1]>0) { // Javadoc comments have positive end position", "+\t\t\tthis.ast.newJavadoc();", "+\t\t\tJavadoc docComment = this.docParser.parse(positions);", "+\t\t\tif (docComment == null) return null;", "+\t\t\tcomment = docComment;", "+\t\t} else {", "+\t\t\tend = -end;", "+\t\t\tif (positions[0]>0) { // Block comment have positive start position", "+\t\t\t\tcomment = this.ast.newBlockComment();", "+\t\t\t} else { // Line comment have negative start and end position", "+\t\t\t\tstart = -start;", "+\t\t\t\tcomment = this.ast.newLineComment();", "+\t\t\t}", "+\t\t\tcomment.setSourceRange(start, end - start);", "+\t\t}", "+\t\treturn comment;", "+\t}", "-", "-\tprivate Comment createComment(int[] positions) {", "-\t\t// Create comment node", "-\t\tComment comment = null;", "-\t\tint start = positions[0];", "-\t\tint end = positions[1];", "-\t\tif (positions[1]>0) { // Javadoc comments have positive end position", "-\t\t\tthis.ast.newJavadoc();", "-\t\t\tJavadoc docComment = this.docParser.parse(positions);", "-\t\t\tif (docComment == null) return null;", "-\t\t\tcomment = docComment;", "-\t\t} else {", "-\t\t\tend = -end;", "-\t\t\tif (positions[0]>0) { // Block comment have positive start position", "-\t\t\t\tcomment = this.ast.newBlockComment();", "-\t\t\t} else { // Line comment have negative start and end position", "-\t\t\t\tstart = -start;", "-\t\t\t\tcomment = this.ast.newLineComment();", "-\t\t\t}", "-\t\t\tcomment.setSourceRange(start, end - start);", "-\t\t}", "-\t\treturn comment;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "593e7487d293127381de2578bbff5bc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "a56d2afc8ddb8dcda8f74b90d2b39898295865d2", "commitAfterChange": "fc69abbb26faa5011e1c3f5f4862367455008505", "methodNumberBeforeChange": 170, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tprotected IJavaElementDelta searchForDelta(IJavaElement element, IJavaElementDelta delta)", "signatureAfterChange": " \t\tprivate IJavaElementDelta searchForDelta(IJavaElement element, IJavaElementDelta delta)", "diff": ["+\t\t */", "+\t\tprivate IJavaElementDelta searchForDelta(IJavaElement element, IJavaElementDelta delta) {", "+\t\t\tif (delta == null) {", "+\t\t\t\treturn null;", "+\t\t\t}", "+\t\t\tif (delta.getElement().equals(element)) {", "+\t\t\t\treturn delta;", "+\t\t\t}", "+\t\t\tfor (int i= 0; i < delta.getAffectedChildren().length; i++) {", "+\t\t\t\tIJavaElementDelta child= searchForDelta(element, delta.getAffectedChildren()[i]);", "+\t\t\t\tif (child != null) {", "+\t\t\t\t\treturn child;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\treturn null;", "+\t\t}", "-\t */", "-\tprotected IJavaElementDelta searchForDelta(IJavaElement element, IJavaElementDelta delta) {", "-", "-\t\tif (delta == null) {", "-\t\t\treturn null;", "-\t\t}", "-\t\tif (delta.getElement().equals(element)) {", "-\t\t\treturn delta;", "-\t\t}", "-\t\tfor (int i= 0; i < delta.getAffectedChildren().length; i++) {", "-\t\t\tIJavaElementDelta child= searchForDelta(element, delta.getAffectedChildren()[i]);", "-\t\t\tif (child != null) {", "-\t\t\t\treturn child;", "-\t\t\t}", "-\t\t}", "-\t\treturn null;", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "593ec98a60958b2288b504be8f31bd09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/BasicSearchEngine.java", "commitBeforeChange": "14369aade824a8ea9cd172f06aeb63b163bb9bf0", "commitAfterChange": "76049c710d8a15447cdfbafce1296b7824e89c76", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tprivate ICompilationUnit[] getWorkingCopies()", "signatureAfterChange": " \tpublic ICompilationUnit[] getWorkingCopies()", "diff": ["-\tprivate ICompilationUnit[] getWorkingCopies() {", "+\tpublic ICompilationUnit[] getWorkingCopies() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "627872ed76f7849472793223b9492086", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 259, "methodNumberAfterChange": 259, "signatureBeforeChange": "  public final void load(TypeBinding typeBinding, int resolvedPosition)", "signatureAfterChange": "  protected final void load(TypeBinding typeBinding, int resolvedPosition)", "diff": ["-public final void load(TypeBinding typeBinding, int resolvedPosition) {", "+protected final void load(TypeBinding typeBinding, int resolvedPosition) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68dd9172dd9322827ac8a1d023c36331", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "e07f4f0a99bd2adfbbf5b9ca22366e86fff03c45", "commitAfterChange": "4913a401efb58ba1e29aebf6d70977c918d30260", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": "\r \r \tprotected void outputClassFiles(CompilationResult unitResult)", "signatureAfterChange": "\r \r \tpublic void outputClassFiles(CompilationResult unitResult)", "diff": ["-\tprotected void outputClassFiles(CompilationResult unitResult) {\r", "+\tpublic void outputClassFiles(CompilationResult unitResult) {\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b71c828b31dfd1d7a3de5c9105d4384", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/StringConstant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "      public StringConstant(String value)", "signatureAfterChange": "  private StringConstant(String value)", "diff": ["-public StringConstant(String value) {", "+", "+private StringConstant(String value) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72b624f7d6b927114d9b82fd41f2f329", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "e0325c6422f39f597d14dd4c27ecf43875108a27", "commitAfterChange": "f389464fbe74a4e5c3adfde8847a7200db37d80c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic ClassFile()", "signatureAfterChange": " \tprotected ClassFile()", "diff": ["-\tpublic ClassFile() {", "+\tprotected ClassFile() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d1a333ee5f915a62c1dc5f504283df0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprivate void addEntry(IPath projectPath, IClasspathEntry entryPath) throws JavaModelException", "signatureAfterChange": " \tpublic void addEntry(IPath projectPath, IClasspathEntry entryPath) throws JavaModelException", "diff": ["-\tprivate void addEntry(IPath projectPath, IClasspathEntry entryPath) throws JavaModelException {", "+\tpublic void addEntry(IPath projectPath, IClasspathEntry entryPath) throws JavaModelException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7fb82bcb86e52a75d9eaed3b892d944d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/rewrite/ASTRewrite.java", "commitBeforeChange": "a35b2833bbe20b6966d2d7b092c8550da4e14c5c", "commitAfterChange": "d12b44bacc78e993e03b687b009846c3ad2c83b6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic ASTRewrite(AST ast)", "signatureAfterChange": " \tprivate ASTRewrite(AST ast)", "diff": ["-\tpublic ASTRewrite(AST ast) {", "+\tprivate ASTRewrite(AST ast) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9efcc7d611d0ac6a8b672042ceb639a6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/TypeAnnotationWalker.java", "commitBeforeChange": "74d118e989117eba0163f0f707314197db0891af", "commitAfterChange": "43cdae5117454d896e9e9cf435f63b0b509e3a4c", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate TypeAnnotationWalker restrict(long newMatches, int newPathPtr)", "signatureAfterChange": "  \tprotected TypeAnnotationWalker restrict(long newMatches, int newPathPtr)", "diff": ["-\tprivate TypeAnnotationWalker restrict(long newMatches, int newPathPtr) {", "+\tprotected TypeAnnotationWalker restrict(long newMatches, int newPathPtr) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a27869e015bcc67304dc5a506692d19f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "415e478fd80c86e1c699eefa6d86979134ae5921", "commitAfterChange": "63b8bf54c7c6ab31eaeaf33c9d376ceaa28b674d", "methodNumberBeforeChange": 182, "methodNumberAfterChange": 182, "signatureBeforeChange": "  \tprivate void variablePreferencesPut(String variableName, IPath variablePath)", "signatureAfterChange": "  \tpublic void variablePreferencesPut(String variableName, IPath variablePath)", "diff": ["-\tprivate void variablePreferencesPut(String variableName, IPath variablePath) {", "+\tpublic void variablePreferencesPut(String variableName, IPath variablePath) {", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a284310ddc1a79cfc3606168e3df599d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Formatter/test451/Format_in.java", "commitBeforeChange": "9cd8ac9158e8cf65a77f69d8bfcd62dc9418f984", "commitAfterChange": "c8ff3cbc92fbc03cd36a58b694b93e2376e6a266", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "    public void temp()", "signatureAfterChange": "    private void temp()", "diff": ["-  public void temp() {", "+  private void temp() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a48697e6cf169eaa0a9f7acb3a554324", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "37bfadecd597b554760a27206f364cc5b3777c73", "commitAfterChange": "375dcbee487ab6274ddf2b60c23e3979a6bc7b7e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate boolean parseHref() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseHref() throws InvalidInputException", "diff": ["-\tprivate boolean parseHref() throws InvalidInputException {", "+\tprotected boolean parseHref() throws InvalidInputException {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5323a91db8d868902523d8cad59d8f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "08be90368f9af9d6750464056e901efd458851a8", "commitAfterChange": "40b7e0d97c4fb0b2dad40a81d1583b78c103743a", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": " \t\t \t\tpublic synchronized ClasspathChange setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus)", "signatureAfterChange": " \t\t \t\tprivate ClasspathChange setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus)", "diff": ["-\t\tpublic synchronized ClasspathChange setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus) {", "+\t\tprivate ClasspathChange setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus) {", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5a65760759eef9f6e3bdc5d7ab0f377", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "4b460199498c48cda44ce10125aa5901a10bff62", "commitAfterChange": "ccd12469d7fc21a8e1a0a597451a059df56002ad", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": " protected void setDestinationPath(String dest)", "signatureAfterChange": " public void setDestinationPath(String dest)", "diff": ["-protected void setDestinationPath(String dest) {", "+public void setDestinationPath(String dest) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a736cef7b183c67f62c61c34b98f186b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 110, "methodNumberAfterChange": 111, "signatureBeforeChange": " \t \tprivate void recordNodes(org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc, TagElement tagElement)", "signatureAfterChange": " \t \tprotected void recordNodes(org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc, TagElement tagElement)", "diff": ["-\tprivate void recordNodes(org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc, TagElement tagElement) {", "+\t", "+\tprotected void recordNodes(org.eclipse.jdt.internal.compiler.ast.Javadoc javadoc, TagElement tagElement) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a85a14e4e4e17858802b92e230c5a7c3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "d9cf56fd4fe99ad8dd0ba89cbfa9dcc246ef0b9c", "commitAfterChange": "c143533d344835eae9053a7d384648906ed40cff", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 31, "signatureBeforeChange": " \tpublic void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "signatureAfterChange": " \tprivate void performPreBuildCheck( \t\tIResourceDelta delta, \t\tIJavaElement parent)", "diff": ["-\tpublic void performPreBuildCheck(", "+\tprivate void performPreBuildCheck("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab25a5202b8662072b0d5eac59a32d1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/TypeHierarchy.java", "commitBeforeChange": "f5dedbad023ed535da8140c4ada528c2bf574f20", "commitAfterChange": "b7dcee8ec99a66c7cd3b7ec7ac6ac22c9994d5db", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " protected void fireChange()", "signatureAfterChange": " public void fireChange()", "diff": ["-protected void fireChange() {", "+public void fireChange() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "abe6e01c42430a3988c7644607326dd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathLocation.java", "commitBeforeChange": "9247f5a1413614555183073da9b25dcae829dcbb", "commitAfterChange": "ec2243f132866e54d9401c9f64dee23249b2b464", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic ClasspathLocation(AccessRuleSet accessRuleSet)", "signatureAfterChange": "  \tprotected ClasspathLocation(AccessRuleSet accessRuleSet)", "diff": ["-\tpublic ClasspathLocation(AccessRuleSet accessRuleSet) {", "+", "+\tprotected ClasspathLocation(AccessRuleSet accessRuleSet) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8d07fb5a71102ca16deaf8489c97074", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "e5112ad3430fec45ff2b1f0ba393b967c7039732", "commitAfterChange": "9ded7575c156d5aa8d3f91391c6974c211262bec", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public void addDefaultAbstractMethods()", "signatureAfterChange": "  private void addDefaultAbstractMethods()", "diff": ["-public void addDefaultAbstractMethods() {", "+private void addDefaultAbstractMethods() {", "+\t\t\t// this.tagBits |= TagBits.AreMethodsSorted; -- already set in #methods()"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "baadc76f83e3efbaeb21d1bdc657bef6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ReferenceBinding.java", "commitBeforeChange": "7a675c0d33ffc1c59486552f5a80779f0f3d95d0", "commitAfterChange": "0580b12603e025516ea827d181150b0daae85b9b", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 47, "signatureBeforeChange": " public boolean isCompatibleWith0(TypeBinding otherType)", "signatureAfterChange": " private boolean isCompatibleWith0(TypeBinding otherType)", "diff": ["-public boolean isCompatibleWith0(TypeBinding otherType) {", "+private boolean isCompatibleWith0(TypeBinding otherType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc1d4ba275f2cb582508812c3bf284b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "e76466b5729fd993ef3dcc80ae6ab76bd33e5dcd", "commitAfterChange": "e0c80c2b16b54e5a1c86d6779d617fb326a5c618", "methodNumberBeforeChange": 318, "methodNumberAfterChange": 318, "signatureBeforeChange": " private final void writeSignedWord(int value)", "signatureAfterChange": " protected final void writeSignedWord(int value)", "diff": ["-private final void writeSignedWord(int value) {", "+protected final void writeSignedWord(int value) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bdee2886bda624cb6ff708f0593da5b2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "f2ff53b9c5467491559775afe1992655f55a63fe", "commitAfterChange": "b38f964c0abc42b760a66a064dc1b2f95aca317b", "methodNumberBeforeChange": 99, "methodNumberAfterChange": 99, "signatureBeforeChange": " \t public Preferences loadPreferences()", "signatureAfterChange": " \t private Preferences loadPreferences()", "diff": ["-\t public Preferences loadPreferences() {", "+\t private Preferences loadPreferences() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c17b8bdc570dfad2710308783974efcb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/negative/NegativeModelProc.java", "commitBeforeChange": "fe9d56739c7ee5a42ad73e908441932d571ee55b", "commitAfterChange": "309aed033cc4257b36692ed1549ee0025e0800df", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate boolean checkNegative1()", "signatureAfterChange": " \tpublic boolean checkNegative1()", "diff": ["-\tprivate boolean checkNegative1() {", "+\tpublic boolean checkNegative1() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5f19ea20cc1b7d7f26dd1a22683e596", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/FloatConstant.java", "commitBeforeChange": "7111a90a9313c88b41ed63cd6da2db497c5fcfb7", "commitAfterChange": "b1e8bf37aa256ab5bf86ee13594009ed0a13e10a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic FloatConstant(float value)", "signatureAfterChange": "  \tprivate FloatConstant(float value)", "diff": ["-\tpublic FloatConstant(float value) {", "+", "+\tprivate FloatConstant(float value) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c65af4313f96a9f502c45368711b2649", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "957977037bae1c5fe509d6f5b83d064a1bf50d04", "commitAfterChange": "78430308e7d45c151f6732314055fefd33935867", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 31, "signatureBeforeChange": " private void purgeMethodStatements(TypeDeclaration type, boolean checkEachMethod)", "signatureAfterChange": " protected void purgeMethodStatements(TypeDeclaration type, boolean checkEachMethod)", "diff": ["-private void purgeMethodStatements(TypeDeclaration type, boolean checkEachMethod) {", "+protected void purgeMethodStatements(TypeDeclaration type, boolean checkEachMethod) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca33dfe1e651870719910f81e52102a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "5280e1e8db473b5a94d57033a6d3cab2e44e385d", "commitAfterChange": "2f280867bbcfaf415b943516836db7a4100ee4c3", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 67, "signatureBeforeChange": "  private void disableWarnings()", "signatureAfterChange": "  protected void disableWarnings()", "diff": ["-private void disableWarnings() {", "+protected void disableWarnings() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd032143d93f8c8f664fdd28c63786c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/workspace/Formatter/test451/Format_out.java", "commitBeforeChange": "9cd8ac9158e8cf65a77f69d8bfcd62dc9418f984", "commitAfterChange": "c8ff3cbc92fbc03cd36a58b694b93e2376e6a266", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "     public void temp()", "signatureAfterChange": "     private void temp()", "diff": ["-   public void temp() {", "+   private void temp() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d5c575692b226d265b1d9aaf31230b43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c0f09226322ecd771874277f6bb778276b0ec732", "commitAfterChange": "c22186f99babc1d07ce1a8d9528c4806c68c13fc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tpublic void formatMethodArguments( \t\t\tAbstractMethodDeclaration methodDeclaration,  \t\t\tboolean spaceBeforeOpenParen,  \t\t\tboolean spaceBetweenEmptyArgument, \t\t\tboolean spaceBeforeClosingParen,  \t\t\tboolean spaceBeforeFirstArgument,  \t\t\tboolean spaceBeforeComma,  \t\t\tboolean spaceAfterComma)", "signatureAfterChange": "  \tprivate void formatMethodArguments( \t\t\tAbstractMethodDeclaration methodDeclaration,  \t\t\tboolean spaceBeforeOpenParen,  \t\t\tboolean spaceBetweenEmptyArgument, \t\t\tboolean spaceBeforeClosingParen,  \t\t\tboolean spaceBeforeFirstArgument,  \t\t\tboolean spaceBeforeComma,  \t\t\tboolean spaceAfterComma)", "diff": ["-\tpublic void formatMethodArguments(", "+\tprivate void formatMethodArguments("]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7b069024d81085f448da5102b7d5200", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMember.java", "commitBeforeChange": "4ce841d6606c2c0b7f24c9925dd47ac216c52a6e", "commitAfterChange": "dd4ead302ceb5b95b74beecab83c5b580915aa31", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private Object getMemberValue(MemberValuePair memberValuePair, Object binaryValue)", "signatureAfterChange": " protected Object getMemberValue(MemberValuePair memberValuePair, Object binaryValue)", "diff": ["-private Object getMemberValue(MemberValuePair memberValuePair, Object binaryValue) {", "+protected Object getMemberValue(MemberValuePair memberValuePair, Object binaryValue) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db4a4f1fb8cdf8c547fa0f14acca4ad1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/HashtableOfObject.java", "commitBeforeChange": "bf20c4733b5ba628131f77425b6d1ad646dfd787", "commitAfterChange": "4fece3d5714f1973bb889af985f57d3ae8f56e20", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 9, "signatureBeforeChange": "  \tprotected void rehash()", "signatureAfterChange": "  \tprivate void rehash()", "diff": ["-\tprotected void rehash() {", "+\tprivate void rehash() {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1e1bb3283da73d002b2fd6696a7c5ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 50, "signatureBeforeChange": " public boolean typeInHierarchy(ReferenceBinding binding)", "signatureAfterChange": " protected boolean typeInHierarchy(ReferenceBinding binding)", "diff": ["-public boolean typeInHierarchy(ReferenceBinding binding) {", "+protected boolean typeInHierarchy(ReferenceBinding binding) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef67681d531a26cd085e25263e874d36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "d4a90dd90535197bda12b521c603853c2f8eb60c", "commitAfterChange": "d473849794f95ce2b5cbae060ffe683ee81ff056", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 47, "signatureBeforeChange": " public void reportReference( \tAstNode reference, \tAbstractMethodDeclaration methodDeclaration, \tIJavaElement parent, \tint accuracy) \tthrows CoreException", "signatureAfterChange": " private void reportReference( \tAstNode reference, \tAbstractMethodDeclaration methodDeclaration, \tIJavaElement parent, \tint accuracy) \tthrows CoreException", "diff": ["-public void reportReference(", "+private void reportReference("]}], "num": 21653}