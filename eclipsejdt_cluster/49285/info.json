{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62cc9c9fdbd2235f9a39a01287dfa7bf", "detectedBy": ["DIFF_HIERARCHICAL", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a42ed13b76f7424cf45510f2716be04", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "ad2281f1520933e65d479408c685e1055d82a8b2", "commitAfterChange": "90329a8061aecf116ef817e3a00ea13f48a88e85", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t@Override \tpublic boolean isSameType(TypeMirror t1, TypeMirror t2)", "signatureAfterChange": " \t@Override \tpublic boolean isSameType(TypeMirror t1, TypeMirror t2)", "diff": ["-\t\t// TODO Auto-generated method stub", "-\t\treturn false;", "+\t\tif (!(t1 instanceof TypeMirrorImpl) || !(t2 instanceof TypeMirrorImpl)) {", "+\t\t\treturn false;", "+\t\t}", "+\t\tif (t1 == t2) {", "+\t\t\treturn true;", "+\t\t}", "+\t\tBinding b1 = ((TypeMirrorImpl)t1).binding();", "+\t\tBinding b2 = ((TypeMirrorImpl)t2).binding();", "+\t\t// Wildcard types are never equal, according to the spec of this method", "+\t\treturn (b1 == b2 && b1.kind() != Binding.WILDCARD_TYPE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfb5b9b3fad08a89b757c209c5999c76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypesImpl.java", "commitBeforeChange": "ad2281f1520933e65d479408c685e1055d82a8b2", "commitAfterChange": "90329a8061aecf116ef817e3a00ea13f48a88e85", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t@Override \tpublic boolean isAssignable(TypeMirror t1, TypeMirror t2)", "signatureAfterChange": " \t@Override \tpublic boolean isAssignable(TypeMirror t1, TypeMirror t2)", "diff": ["-\t\t// TODO Auto-generated method stub", "-\t\treturn false;", "+\t\tif (!(t1 instanceof TypeMirrorImpl) || !(t2 instanceof TypeMirrorImpl)) {", "+\t\t\treturn false; ", "+\t\t}", "+\t\tBinding b1 = ((TypeMirrorImpl)t1).binding();", "+\t\tBinding b2 = ((TypeMirrorImpl)t2).binding();", "+\t\tif (!(b1 instanceof TypeBinding) || !(b2 instanceof TypeBinding)) {", "+\t\t\t// package, method, import, etc.", "+\t\t\tthrow new IllegalArgumentException();", "+\t\t}", "+\t\treturn ((TypeBinding)b1).isCompatibleWith((TypeBinding)b2);"]}], "num": 49285}