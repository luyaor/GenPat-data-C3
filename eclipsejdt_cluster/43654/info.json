{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "121a6bafe128b85458a32bbe7505359d", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "823023e1a110508ae6f9e51c3381b5c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "46d9bd9c21463dd0a475f90935151a880ecebcb8", "commitAfterChange": "d7d35e12fc97ac2ad8129d2826b7c459e5df519d", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 38, "signatureBeforeChange": "\r public TypeReference createSingleAssistTypeReference(char[] name, long position)", "signatureAfterChange": "\r public TypeReference createSingleAssistTypeReference(char[] name, long position)", "diff": ["-\treturn this.betweenCatchAndRightParen // check for exception scenario \r", "+\treturn this.betweenCatchAndRightParen || this.nextTypeReferenceIsException // check for exception scenario \r", "-\t\t: new CompletionOnSingleTypeReference(name, position);\r", "+\t\t: this.nextTypeReferenceIsInterface\r", "+\t\t\t? new CompletionOnInterfaceReference(name, position) \r", "+\t\t\t: this.nextTypeReferenceIsClass\r", "+\t\t\t\t? new CompletionOnClassReference(name, position) \r", "+\t\t\t\t: new CompletionOnSingleTypeReference(name, position);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb6fa271f87bb36d385d1da112d6bfc3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "46d9bd9c21463dd0a475f90935151a880ecebcb8", "commitAfterChange": "d7d35e12fc97ac2ad8129d2826b7c459e5df519d", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 36, "signatureBeforeChange": "\r public TypeReference createQualifiedAssistTypeReference(char[][] previousIdentifiers, char[] name, long[] positions)", "signatureAfterChange": "\r public TypeReference createQualifiedAssistTypeReference(char[][] previousIdentifiers, char[] name, long[] positions)", "diff": ["-\treturn this.betweenCatchAndRightParen // check for exception scenario \r", "+\treturn this.betweenCatchAndRightParen || this.nextTypeReferenceIsException // check for exception scenario \r", "-\t\t\t\t: new CompletionOnQualifiedTypeReference(\r", "-\t\t\t\t\tpreviousIdentifiers, \r", "-\t\t\t\t\tname, \r", "-\t\t\t\t\tpositions); \t\r", "+\t\t\t\t: this.nextTypeReferenceIsInterface\r", "+\t\t\t\t\t? new CompletionOnQualifiedInterfaceReference(\r", "+\t\t\t\t\t\tpreviousIdentifiers, \r", "+\t\t\t\t\t\tname, \r", "+\t\t\t\t\t\tpositions)\r", "+\t\t\t\t\t: this.nextTypeReferenceIsClass\r", "+\t\t\t\t\t\t? new CompletionOnQualifiedClassReference(\r", "+\t\t\t\t\t\t\tpreviousIdentifiers, \r", "+\t\t\t\t\t\t\tname, \r", "+\t\t\t\t\t\t\tpositions)\r", "+\t\t\t\t\t\t: new CompletionOnQualifiedTypeReference(\r", "+\t\t\t\t\t\t\tpreviousIdentifiers, \r", "+\t\t\t\t\t\t\tname, \r", "+\t\t\t\t\t\t\tpositions); \t\r"]}], "num": 43654}