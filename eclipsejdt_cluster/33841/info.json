{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6040f92a35d3126e137d04ed7b1401c6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b5ded2d328501ecd11d0cae4c23654b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " public void addSource(IFile resource, IPath indexedContainer)", "signatureAfterChange": " public void addSource(IFile resource, IPath indexedContainer)", "diff": ["-\tAddCompilationUnitToIndex job = new AddCompilationUnitToIndex(resource, indexedContainer, this);", "-\tif (this.awaitingJobsCount() < MAX_FILES_IN_MEMORY) {", "-\t\t// reduces the chance that the file is open later on, preventing it from being deleted", "-\t\tif (!job.initializeContents()) return;", "-\t}", "-\trequest(job);", "+\tSearchParticipant participant = SearchEngine.getDefaultSearchParticipant();", "+\tSearchDocument document = participant.getDocument(resource.getFullPath().toString());", "+\tString indexPath = computeIndexName(indexedContainer);", "+\tparticipant.scheduleDocumentIndexing(document, indexedContainer.toString(), indexPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "45280d2ef4ec2c8d4a462dc69fe0c455", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "7dce3ced6f2c34a63721a3fda038e2fad50139b7", "commitAfterChange": "4a258c24dea43b906f3daa4041c94e7315633dfe", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void addBinary(IFile resource, IPath indexedContainer)", "signatureAfterChange": " public void addBinary(IFile resource, IPath indexedContainer)", "diff": ["-\tAddClassFileToIndex job = new AddClassFileToIndex(resource, indexedContainer, this);", "-\tif (this.awaitingJobsCount() < MAX_FILES_IN_MEMORY) {", "-\t\t// reduces the chance that the file is open later on, preventing it from being deleted", "-\t\tif (!job.initializeContents()) return;", "-\t}", "-\trequest(job);", "+\tSearchParticipant participant = SearchEngine.getDefaultSearchParticipant();", "+\tSearchDocument document = participant.getDocument(resource.getFullPath().toString());", "+\tString indexPath = computeIndexName(indexedContainer);", "+\tparticipant.scheduleDocumentIndexing(document, indexedContainer.toString(), indexPath);", "+}"]}], "num": 33841}