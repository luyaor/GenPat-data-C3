{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b81fef7a52ca0902c9844990c4301eac", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1a9b8ab1660340caec9ae10bf41e7546", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public boolean matches(Binding binding)", "signatureAfterChange": "\r public int matchLevel(Binding binding)", "diff": ["- */\r", "-public boolean matches(Binding binding) {\r", "-\tif (!(binding instanceof ReferenceBinding)) return false;\r", "-\r", "-\tReferenceBinding type = (ReferenceBinding) binding;\r", "-\tif (this.matchesType(this.superSimpleName, this.superQualification, type.superclass())){\r", "-\t\treturn true;\r", "-\t}\r", "-\t\r", "-\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "-\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "-\t\tif (this.matchesType(this.superSimpleName, this.superQualification, superInterfaces[i])){\r", "-\t\t\treturn true;\r", "-\t\t}\r", "-\t}\r", "-\treturn false;\r", "-}\r", "+ */\r", "+public int matchLevel(Binding binding) {\r", "+\tif (binding == null) return INACCURATE_MATCH;\r", "+\tif (!(binding instanceof ReferenceBinding)) return IMPOSSIBLE_MATCH;\r", "+\r", "+\t// super class\r", "+\tReferenceBinding type = (ReferenceBinding) binding;\r", "+\tint level = this.matchLevelForType(this.superSimpleName, this.superQualification, type.superclass());\r", "+\tswitch (level) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\tbreak; // try to find match in super interfaces\r", "+\t\tcase ACCURATE_MATCH:\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\tbreak; // try to find accurate match in super interfaces\r", "+\t}\r", "+\r", "+\t// super interfaces\r", "+\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "+\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "+\t\tint newLevel = this.matchLevelForType(this.superSimpleName, this.superQualification, superInterfaces[i]);\r", "+\t\tswitch (newLevel) {\r", "+\t\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase ACCURATE_MATCH:\r", "+\t\t\t\treturn ACCURATE_MATCH;\r", "+\t\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\t\tlevel = newLevel;\r", "+\t\t\t\tbreak;\r", "+\t\t}\r", "+\t}\r", "+\treturn level;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b96b925e5d5e9523d9d73423470a4330", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public boolean matches(Binding binding)", "signatureAfterChange": "\r public int matchLevel(Binding binding)", "diff": ["- */\r", "-public boolean matches(Binding binding) {\r", "-\tif (!(binding instanceof ReferenceBinding)) return false;\r", "-\r", "-\tReferenceBinding type = (ReferenceBinding) binding;\r", "-\tif (this.matchesType(this.superSimpleName, this.superQualification, type.superclass())){\r", "-\t\treturn true;\r", "-\t}\r", "-\t\r", "-\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "-\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "-\t\tif (this.matchesType(this.superSimpleName, this.superQualification, superInterfaces[i])){\r", "-\t\t\treturn true;\r", "-\t\t}\r", "-\t}\r", "-\treturn false;\r", "-}\r", "+ */\r", "+public int matchLevel(Binding binding) {\r", "+\tif (binding == null) return INACCURATE_MATCH;\r", "+\tif (!(binding instanceof ReferenceBinding)) return IMPOSSIBLE_MATCH;\r", "+\r", "+\t// super class\r", "+\tReferenceBinding type = (ReferenceBinding) binding;\r", "+\tint level = this.matchLevelForType(this.superSimpleName, this.superQualification, type.superclass());\r", "+\tswitch (level) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\tbreak; // try to find match in super interfaces\r", "+\t\tcase ACCURATE_MATCH:\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\tbreak; // try to find accurate match in super interfaces\r", "+\t}\r", "+\r", "+\t// super interfaces\r", "+\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "+\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "+\t\tint newLevel = this.matchLevelForType(this.superSimpleName, this.superQualification, superInterfaces[i]);\r", "+\t\tswitch (newLevel) {\r", "+\t\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase ACCURATE_MATCH:\r", "+\t\t\t\treturn ACCURATE_MATCH;\r", "+\t\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\t\tlevel = newLevel;\r", "+\t\t\t\tbreak;\r", "+\t\t}\r", "+\t}\r", "+\treturn level;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df81ddfee0f5e73fcc5427ffe77d6e7c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SuperTypeReferencePattern.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public boolean matches(Binding binding)", "signatureAfterChange": "\r public int matchLevel(Binding binding)", "diff": ["- */\r", "-public boolean matches(Binding binding) {\r", "-\tif (!(binding instanceof ReferenceBinding)) return false;\r", "-\r", "-\tReferenceBinding type = (ReferenceBinding) binding;\r", "-\tif (this.matchesType(this.superSimpleName, this.superQualification, type.superclass())){\r", "-\t\treturn true;\r", "-\t}\r", "-\t\r", "-\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "-\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "-\t\tif (this.matchesType(this.superSimpleName, this.superQualification, superInterfaces[i])){\r", "-\t\t\treturn true;\r", "-\t\t}\r", "-\t}\r", "-\treturn false;\r", "-}\r", "+ */\r", "+public int matchLevel(Binding binding) {\r", "+\tif (binding == null) return INACCURATE_MATCH;\r", "+\tif (!(binding instanceof ReferenceBinding)) return IMPOSSIBLE_MATCH;\r", "+\r", "+\t// super class\r", "+\tReferenceBinding type = (ReferenceBinding) binding;\r", "+\tint level = this.matchLevelForType(this.superSimpleName, this.superQualification, type.superclass());\r", "+\tswitch (level) {\r", "+\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\tbreak; // try to find match in super interfaces\r", "+\t\tcase ACCURATE_MATCH:\r", "+\t\t\treturn ACCURATE_MATCH;\r", "+\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\tbreak; // try to find accurate match in super interfaces\r", "+\t}\r", "+\r", "+\t// super interfaces\r", "+\tReferenceBinding[] superInterfaces = type.superInterfaces();\r", "+\tfor (int i = 0, max = superInterfaces.length; i < max; i++){\r", "+\t\tint newLevel = this.matchLevelForType(this.superSimpleName, this.superQualification, superInterfaces[i]);\r", "+\t\tswitch (newLevel) {\r", "+\t\t\tcase IMPOSSIBLE_MATCH:\r", "+\t\t\t\tbreak;\r", "+\t\t\tcase ACCURATE_MATCH:\r", "+\t\t\t\treturn ACCURATE_MATCH;\r", "+\t\t\tdefault: // ie. INACCURATE_MATCH\r", "+\t\t\t\tlevel = newLevel;\r", "+\t\t\t\tbreak;\r", "+\t\t}\r", "+\t}\r", "+\treturn level;\r", "+}\r"]}], "num": 1373}