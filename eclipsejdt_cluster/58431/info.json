{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9bd5d2d2b36f5e55eb4c41083092e89", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5953bc7ba6d0b9b1a3a4c496192338b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": " public void test72()", "signatureAfterChange": " public void test72()", "diff": ["-\tassertCamelCase(\"HMa\", \"HashMap\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HMa\", \"HtmlMapper\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HMa\", \"HashMapEntry\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HaMa\", \"HashMap\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HaMa\", \"HtmlMapper\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HaMa\", \"HashMapEntry\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HashMa\", \"HashMap\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HashMa\", \"HtmlMapper\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HashMa\", \"HashMapEntry\", false /*no prefix match*/, false /* should not match */);", "+\tassertCamelCase(\"HMa\", \"HashMap\", true /*same count of parts expected*/, true /* should match */);", "+\tassertCamelCase(\"HMa\", \"HtmlMapper\", true /*same count of parts expected*/, true /* should match */);", "+\tassertCamelCase(\"HMa\", \"HashMapEntry\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HaMa\", \"HashMap\", true /*same count of parts expected*/, true /* should match */);", "+\tassertCamelCase(\"HaMa\", \"HtmlMapper\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HaMa\", \"HashMapEntry\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HashMa\", \"HashMap\", true /*same count of parts expected*/, true /* should match */);", "+\tassertCamelCase(\"HashMa\", \"HtmlMapper\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HashMa\", \"HashMapEntry\", true /*same count of parts expected*/, false /* should not match */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40a75a7ae5105d44511b0cb8af85edd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/UtilTest.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " public void test73()", "signatureAfterChange": " public void test73()", "diff": ["-\tassertCamelCase(\"HMap\", \"HashMap\", false /*no prefix match*/, true /*should match*/);", "-\tassertCamelCase(\"HMap\", \"HtmlMapper\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HMap\", \"HashMapEntry\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HaMap\", \"HashMap\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"HaMap\", \"HtmlMapper\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HaMap\", \"HashMapEntry\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HashMap\", \"HashMap\", false /*no prefix match*/, true /* should match */);", "-\tassertCamelCase(\"HashMap\", \"HtmlMapper\", false /*no prefix match*/, false /* should not match */);", "-\tassertCamelCase(\"HashMap\", \"HashMapEntry\", false /*no prefix match*/, false /* should not match */);", "+\tassertCamelCase(\"HMap\", \"HashMap\", true /*same count of parts expected*/, true /*should match*/);", "+\tassertCamelCase(\"HMap\", \"HtmlMapper\", true /*same count of parts expected*/, true /* should not match */);", "+\tassertCamelCase(\"HMap\", \"HashMapEntry\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HaMap\", \"HashMap\", true /*same count of parts expected*/, true /* should match */);", "+\tassertCamelCase(\"HaMap\", \"HtmlMapper\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HaMap\", \"HashMapEntry\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HashMap\", \"HashMap\", true /*same count of parts expected*/, true /* should match */);", "+\tassertCamelCase(\"HashMap\", \"HtmlMapper\", true /*same count of parts expected*/, false /* should not match */);", "+\tassertCamelCase(\"HashMap\", \"HashMapEntry\", true /*same count of parts expected*/, false /* should not match */);"]}], "num": 58431}