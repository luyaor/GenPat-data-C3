{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "df3c7265993c31134dba5eea6512506e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4080423ed51378ecc44b3bca75e55f6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tvoid postRemoveChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "signatureAfterChange": " \tvoid postRemoveChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE DEL]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\t// IMPORTANT: this method is called by readers during lazy init", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE DEL]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a30716956c81f3e526686e3833d460e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tvoid preRemoveChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "signatureAfterChange": " \tvoid preRemoveChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE DEL]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\t// IMPORTANT: this method is called by readers during lazy init", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE DEL]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}], "num": 48507}