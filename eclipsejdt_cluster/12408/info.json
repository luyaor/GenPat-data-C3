{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f82ffecc5b0a872089381aaa3c5f984f", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "576b703ce42b4c69c62c2221db854456", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "251f99acbb8995bd23d5e9a86fb5718901825772", "commitAfterChange": "b82e4a0e1d547d361495e1d72928b04c339786b5", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void testCycle1() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle1() throws JavaModelException", "diff": ["-\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$", "-\t\tfullBuild();", "-\t\t", "-\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\"});//$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$//$NON-NLS-6$//$NON-NLS-7$", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t", "-\t\tJavaCore.setOptions(options);", "+\t\ttry {", "+\t\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$", "+\t\t\tfullBuild();", "+\t\t\t", "+\t\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\"});//$NON-NLS-1$//$NON-NLS-2$//$NON-NLS-3$//$NON-NLS-4$//$NON-NLS-5$//$NON-NLS-6$//$NON-NLS-7$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p2,new Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t", "+\t\t\tJavaCore.setOptions(options);", "+\t\t} finally {", "+\t\t\tenv.setBuildOrder(null);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93f6c8a6baecee6baf28568a722e4ca6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "c62484c76d34e1754fa4fc8cfcdf45889f18f642", "commitAfterChange": "41800ceef1e22df640004021a2ad024169ee7b90", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic void flushZipFiles()", "signatureAfterChange": " \tpublic void flushZipFiles()", "diff": ["-\t\tsynchronized(this.zipFiles) {", "-\t\t\tThread currentThread = Thread.currentThread();", "-\t\t\tHashMap map = (HashMap)this.zipFiles.remove(currentThread);", "-\t\t\tif (map == null) return;", "-\t\t\tIterator iterator = map.values().iterator();", "-\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\ttry {", "-\t\t\t\t\tZipFile zipFile = (ZipFile)iterator.next();", "-\t\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {", "-\t\t\t\t\t\tSystem.out.println(\"(\" + currentThread + \") [JavaModelManager.flushZipFiles()] Closing ZipFile on \" +zipFile.getName()); //$NON-NLS-1$//$NON-NLS-2$", "-\t\t\t\t\t}", "-\t\t\t\t\tzipFile.close();", "-\t\t\t\t} catch (IOException e) {", "+\t\tThread currentThread = Thread.currentThread();", "+\t\tHashMap map = (HashMap)this.zipFiles.getCurrent();", "+\t\tif (map == null) return;", "+\t\tthis.zipFiles.setCurrent(null);", "+\t\tIterator iterator = map.values().iterator();", "+\t\twhile (iterator.hasNext()) {", "+\t\t\ttry {", "+\t\t\t\tZipFile zipFile = (ZipFile)iterator.next();", "+\t\t\t\tif (JavaModelManager.ZIP_ACCESS_VERBOSE) {", "+\t\t\t\t\tSystem.out.println(\"(\" + currentThread + \") [JavaModelManager.flushZipFiles()] Closing ZipFile on \" +zipFile.getName()); //$NON-NLS-1$//$NON-NLS-2$", "+\t\t\t\tzipFile.close();", "+\t\t\t} catch (IOException e) {", "-\t\t}\t", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ab0c7659fe87d5b0de82e7a9f057070", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "251f99acbb8995bd23d5e9a86fb5718901825772", "commitAfterChange": "b82e4a0e1d547d361495e1d72928b04c339786b5", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t \tpublic void testCycle2() throws JavaModelException", "signatureAfterChange": " \t \tpublic void testCycle2() throws JavaModelException", "diff": ["-\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "-\t\tfullBuild();", "-\t\t", "-\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$//$NON-NLS-5$ //$NON-NLS-6$//$NON-NLS-7$", "-\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\texpectingOnlySpecificProblemsFor(p2,new Problem[]{", "-\t\t\t\tnew Problem(\"p2\", \"The method bar(Y, int) in the type X is not applicable for the arguments (Y)\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t});", "-\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "-\t\t", "-\t\tJavaCore.setOptions(options);", "+\t\ttry {", "+\t\t\tenv.setBuildOrder(new String[]{\"P1\", \"P2\", \"P3\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ ", "+\t\t\tfullBuild();", "+\t\t\t", "+\t\t\texpectingCompilingOrder(new String[]{\"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\", \"p2.Y\", \"p3.Z\", \"p1.X\"});//$NON-NLS-1$ //$NON-NLS-2$//$NON-NLS-3$ //$NON-NLS-4$//$NON-NLS-5$ //$NON-NLS-6$//$NON-NLS-7$", "+\t\t\texpectingOnlySpecificProblemFor(p1,new Problem(\"p1\", \"A cycle was detected in the project's classpath.\", p1));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\texpectingOnlySpecificProblemsFor(p2,new Problem[]{", "+\t\t\t\t\tnew Problem(\"p2\", \"The method bar(Y, int) in the type X is not applicable for the arguments (Y)\", c2),//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t\t\tnew Problem(\"p2\", \"A cycle was detected in the project's classpath.\", p2)//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t});", "+\t\t\texpectingOnlySpecificProblemFor(p3,new Problem(\"p3\", \"A cycle was detected in the project's classpath.\", p3));//$NON-NLS-1$ //$NON-NLS-2$", "+\t\t\t", "+\t\t\tJavaCore.setOptions(options);", "+\t\t} finally {", "+\t\t\tenv.setBuildOrder(null);", "+\t\t}"]}], "num": 12408}