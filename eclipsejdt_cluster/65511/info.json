{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c4438533d6e8d15ef19b23ad40830776", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "580bd3eb2160527c66c3f58b8affeb0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeReference.java", "commitBeforeChange": "1bd28947ec61a68bcbaa48e5f62a38f1082dad74", "commitAfterChange": "158f15ed7305b84f608a44b2b3e60c3a50fa4c1b", "methodNumberBeforeChange": 61, "methodNumberAfterChange": 61, "signatureBeforeChange": " protected void checkNullConstraints(Scope scope, TypeBinding[] variables, int rank)", "signatureAfterChange": " protected void checkNullConstraints(Scope scope, Substitution substitution, TypeBinding[] variables, int rank)", "diff": ["-protected void checkNullConstraints(Scope scope, TypeBinding[] variables, int rank) {", "+protected void checkNullConstraints(Scope scope, Substitution substitution, TypeBinding[] variables, int rank) {", "-\t\t\tif (NullAnnotationMatching.analyse(variable, this.resolvedType, null, -1, CheckMode.BOUND_CHECK).isAnyMismatch())", "+\t\t\tif (NullAnnotationMatching.analyse(variable, this.resolvedType, null, substitution, -1, CheckMode.BOUND_CHECK).isAnyMismatch())", "-\tif (this.resolvedType.leafComponentType().isBaseType() && hasNullTypeAnnotation(AnnotationPosition.LEAF_TYPE)) {", "-\t\tscope.problemReporter().illegalAnnotationForBaseType(this, this.annotations[0], this.resolvedType.tagBits & TagBits.AnnotationNullMASK);", "-\t}", "+\tcheckIllegalNullAnnotation(scope);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "630b377387a6791426a1e5f99d168ab3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "2d485d1f10b0d0a5794e7c99573b4af27f13e049", "commitAfterChange": "5da70e8fd8ca541611254bd2bde6b6ab6bb07e90", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic boolean call()", "signatureAfterChange": "  \tpublic boolean call()", "diff": ["-\t\t\ttry {", "-\t\t\t\tif (this.fileManager != null) {", "-\t\t\t\t\tthis.fileManager.flush();", "-\t\t\t\t}", "-\t\t\t} catch (IOException e) {", "-\t\t\t\t// ignore", "-\t\t\t}", "-\t\t\t\tthis.logger.flush();", "-\t\t\t\tthis.logger.close();", "+\t\t\t\tcleanup();", "-\t\t\tthis.logger.flush();", "-\t\t\tthis.logger.close();", "+\t\t\tcleanup();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4a6c0e4d52e2c201c7b35cee7b4b3d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AbstractMethodDeclaration.java", "commitBeforeChange": "b4479722cb720b0c4dbcd9de962474b7e0e0f573", "commitAfterChange": "31b51b3c914faa25699d3f71c6d656dfc7fc54f5", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic void resolve(ClassScope upperScope)", "signatureAfterChange": "  \tpublic void resolve(ClassScope upperScope)", "diff": ["+\t\t\tresolveReceiver();", "-\t\t\t// jsr308", "-\t\t\tif (this.receiverAnnotations != null && this.scope.isStatic) {", "-\t\t\t\tint last = this.receiverAnnotations.length - 1;", "-\t\t\t\tthis.scope.problemReporter().illegalReceiverAnnotations(this.receiverAnnotations[0],", "-\t\t\t\t\t\t                                                this.receiverAnnotations[last]);", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8ea6ea3ca43807280065fdb331769e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "7548eaaea6e1259875e63eaf19dcd9a6bb7fd118", "commitAfterChange": "3d5aa7d7eabaf3445aad76f168f1c9da2ba34591", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void processDelta(IJavaElementDelta delta)", "signatureAfterChange": " public void processDelta(IJavaElementDelta delta)", "diff": ["-\t\t\t\t\t\t\tint last = this.pathsCount-1;", "-\t\t\t\t\t\t\tif (toRemove != last) {", "-\t\t\t\t\t\t\t\tthis.paths[toRemove] = this.paths[last];", "-\t\t\t\t\t\t\t\tthis.pathWithSubFolders[toRemove] = this.pathWithSubFolders[last];", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tthis.pathsCount--;", "+\t\t\t\t\t\t\tthis.paths[toRemove] = null;", "+\t\t\t\t\t\t\trehash();"]}], "num": 65511}