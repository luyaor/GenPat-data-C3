{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "55b38d076bee66a7ed545dab48f5ef33", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3671c99c53b48a8c5e0b8a0870808592", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "\r \r public void evaluateNullAnnotations()", "signatureAfterChange": "\r \r public void evaluateNullAnnotations()", "diff": ["-\t\t\t\tif (annotationType.id == TypeIds.T_ConfiguredAnnotationNonNull\r", "-\t\t\t\t\t\t|| annotationType.id == TypeIds.T_ConfiguredAnnotationNullable) {\r", "+\t\t\t\tif (annotationType.hasNullBit(TypeIds.BitNonNullAnnotation|TypeIds.BitNullableAnnotation)) {\r", "-\t\tboolean isInNullnessAnnotationPackage = \r", "-\t\t\t\tpkg == this.scope.environment().nonnullAnnotationPackage\r", "-\t\t\t\t|| pkg == this.scope.environment().nullableAnnotationPackage\r", "-\t\t\t\t|| pkg == this.scope.environment().nonnullByDefaultAnnotationPackage;\r", "+\t\tboolean isInNullnessAnnotationPackage = this.scope.environment().isNullnessAnnotationPackage(pkg);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "434af2402cb2c3acbbc2c864a7f98b1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "09eb4e140e56d67f0ba07a1283f7afed03f5d473", "commitAfterChange": "193042cfcc3e974ade1d4da172a703fabd891361", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " private int[] readStreamDocumentArray(FileInputStream stream, int arraySize) throws IOException", "signatureAfterChange": " private int[] readStreamDocumentArray(FileInputStream stream, int arraySize) throws IOException", "diff": ["-\t\t\t\tint i = 0;", "-\t\t\t\twhile (idx < bufferSize) {", "-\t\t\t\t\tindexes[i++] = streamBuffer[idx++] & 0xFF;", "-\t\t\t\t}", "-\t\t\t\tthis.bufferIndex -= bufferSize;", "+\t\t\t\t// set size to read on file", "-\t\t\t\tthis.streamPos += stream.read(this.streamBuffer, 0, bufferSize);", "-\t\t\t\tidx = 0;", "-\t\t\t\twhile (idx < this.bufferIndex) {", "-\t\t\t\t\tindexes[i++] = streamBuffer[idx++] & 0xFF;", "+\t\t\t\t// fill indexes array", "+\t\t\t\tfor (int i = 0; i < arraySize; i++) {", "+\t\t\t\t\tindexes[i] = streamBuffer[idx++] & 0xFF;", "+\t\t\t\t\tif (idx == bufferSize) {", "+\t\t\t\t\t\tthis.streamPos += stream.read(this.streamBuffer, 0, readSize);", "+\t\t\t\t\t\tidx = 0;", "+\t\t\t\t\t}", "+\t\t\t\t// set size to read on file", "+\t\t\t\t// fill indexes array", "-\t\t\t\tthis.bufferIndex -= bufferSize;", "+\t\t\t\t// set size to read on file", "+\t\t\t\t// fill indexes array", "-\t\t\t\tthis.bufferIndex -= bufferSize;", "+\tthis.bufferIndex = idx; // rsync buffer index"]}], "num": 31460}