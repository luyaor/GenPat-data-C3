{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6d7b06fb71a88d582e6a032e1a03bd49", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "494a78f5c59143885b0344a64f45da7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "a10414ff4882f78075e3cd686b35229cd3fd960e", "commitAfterChange": "b9fdee94d8281f17a27861997f80befd761ee9c1", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": "\t \tpublic void addSyntheticEnumValueOfMethod(SyntheticMethodBinding methodBinding)", "signatureAfterChange": "\t \tpublic void addSyntheticEnumValueOfMethod(SyntheticMethodBinding methodBinding)", "diff": ["-", "-\t\t// We know that we won't get more than 1 attribute: the code attribute ", "-\t\tcontents[contentsOffset++] = 0;", "-\t\tcontents[contentsOffset++] = 1;", "+\t\tint methodAttributeOffset = this.contentsOffset;", "+\t\t// this will add exception attribute, synthetic attribute, deprecated attribute,...", "+\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tattributeNumber++; // add code attribute", "-//\t\t// add the synthetic attribute", "-//\t\tint syntheticAttributeNameIndex =", "-//\t\t\tconstantPool.literalIndex(AttributeNamesConstants.SyntheticName);", "-//\t\tcontents[contentsOffset++] = (byte) (syntheticAttributeNameIndex >> 8);", "-//\t\tcontents[contentsOffset++] = (byte) syntheticAttributeNameIndex;", "-//\t\t// the length of a synthetic attribute is equals to 0", "-//\t\tcontents[contentsOffset++] = 0;", "-//\t\tcontents[contentsOffset++] = 0;", "-//\t\tcontents[contentsOffset++] = 0;", "-//\t\tcontents[contentsOffset++] = 0;", "-\t\t\t", "+\t\t// update the number of attributes", "+\t\tcontents[methodAttributeOffset++] = (byte) (attributeNumber >> 8);", "+\t\tcontents[methodAttributeOffset] = (byte) attributeNumber;\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b56ada8dada36e9449b618f609556cfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "a3376443e7433851c1c9a2be37ee8e7113265608", "commitAfterChange": "de1a896ae0cf9cc7fdee8ce3aebee48242ef244b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tpublic void addProblemConstructor(\r \t\tAbstractMethodDeclaration method,\r \t\tMethodBinding methodBinding,\r \t\tIProblem[] problems)", "signatureAfterChange": "\r \tpublic void addProblemConstructor(\r \t\tAbstractMethodDeclaration method,\r \t\tMethodBinding methodBinding,\r \t\tIProblem[] problems)", "diff": ["-\t\t// We know that we won't get more than 1 attribute: the code attribute\r", "-\t\tcontents[contentsOffset++] = 0;\r", "-\t\tcontents[contentsOffset++] = 1; // Code attribute\r", "+\t\tint methodAttributeOffset = contentsOffset;\r", "+\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);\r", "+\t\t\r", "+\t\t// Code attribute\r", "+\t\tattributeNumber++;\r", "+\t\tcompleteMethodInfo(methodAttributeOffset, attributeNumber);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bfdaea4a7e4c3a94c39e666644e169df", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "a10414ff4882f78075e3cd686b35229cd3fd960e", "commitAfterChange": "b9fdee94d8281f17a27861997f80befd761ee9c1", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "\t \tpublic void addSyntheticEnumValuesMethod(SyntheticMethodBinding methodBinding)", "signatureAfterChange": "\t \tpublic void addSyntheticEnumValuesMethod(SyntheticMethodBinding methodBinding)", "diff": ["-", "-\t\t// We know that we won't get more than 1 attribute: the code attribute ", "-\t\tcontents[contentsOffset++] = 0;", "-\t\tcontents[contentsOffset++] = 1;", "+\t\tint methodAttributeOffset = this.contentsOffset;", "+\t\t// this will add exception attribute, synthetic attribute, deprecated attribute,...", "+\t\tint attributeNumber = generateMethodInfoAttribute(methodBinding);", "+\t\tattributeNumber++; // add code attribute", "-//\t\t// add the synthetic attribute", "-//\t\tint syntheticAttributeNameIndex =", "-//\t\t\tconstantPool.literalIndex(AttributeNamesConstants.SyntheticName);", "-//\t\tcontents[contentsOffset++] = (byte) (syntheticAttributeNameIndex >> 8);", "-//\t\tcontents[contentsOffset++] = (byte) syntheticAttributeNameIndex;", "-//\t\t// the length of a synthetic attribute is equals to 0", "-//\t\tcontents[contentsOffset++] = 0;", "-//\t\tcontents[contentsOffset++] = 0;", "-//\t\tcontents[contentsOffset++] = 0;", "-//\t\tcontents[contentsOffset++] = 0;", "-\t\t\t", "+\t\t// update the number of attributes", "+\t\tcontents[methodAttributeOffset++] = (byte) (attributeNumber >> 8);", "+\t\tcontents[methodAttributeOffset] = (byte) attributeNumber;\t\t"]}], "num": 14161}