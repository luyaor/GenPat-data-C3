{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4f0854d1f904ffe2a0a7a65376fc4cba", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8c9ee607c9d218f7fe3ef578ebdfed6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodBinding.java", "commitBeforeChange": "ac01f488e9b6b2b17a11c53e0a49f85c3d9e7aeb", "commitAfterChange": "0f82c3c2351d2b4aa115f915a692d896ffbf12db", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public char[] computeUniqueKey(boolean isLeaf)", "signatureAfterChange": " public char[] computeUniqueKey(boolean isLeaf)", "diff": ["-\treturn computeUniqueKey(this, isLeaf);", "-}", "+\tchar[] sig = genericSignature();", "+\tif (sig == null) sig = signature();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c34bd1a9a785468d97d0eeb5e0418e76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "da5e3044bf1aa602314b19a69e01c7d30d0c61d0", "commitAfterChange": "d2a7051ad6f971a1319fef017042d09bcae83b4b", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 42, "signatureBeforeChange": "\r \tpublic void removeElementChangedListener(IElementChangedListener listener)", "signatureAfterChange": "\r \tpublic void removeElementChangedListener(IElementChangedListener listener)", "diff": ["-\t\tfElementChangedListeners.remove(listener);\r", "+\t\t\r", "+\t\tfor (int i = 0; i < this.elementChangedListenerCount; i++){\r", "+\t\t\t\r", "+\t\t\tif (this.elementChangedListeners[i].equals(listener)){\r", "+\t\t\t\t\r", "+\t\t\t\t// need to clone defensively since we might be in the middle of listener notifications (#fire)\r", "+\t\t\t\tint length = this.elementChangedListeners.length;\r", "+\t\t\t\tIElementChangedListener[] newListeners = new IElementChangedListener[length];\r", "+\t\t\t\tSystem.arraycopy(this.elementChangedListeners, 0, newListeners, 0, i);\r", "+\t\t\t\tint[] newMasks = new int[length];\r", "+\t\t\t\tSystem.arraycopy(this.elementChangedListenerMasks, 0, newMasks, 0, i);\r", "+\t\t\t\t\r", "+\t\t\t\t// copy trailing listeners\r", "+\t\t\t\tint trailingLength = this.elementChangedListenerCount - i - 1;\r", "+\t\t\t\tif (trailingLength > 0){\r", "+\t\t\t\t\tSystem.arraycopy(this.elementChangedListeners, i+1, newListeners, i, trailingLength);\r", "+\t\t\t\t\tSystem.arraycopy(this.elementChangedListenerMasks, i+1, newMasks, i, trailingLength);\r", "+\t\t\t\t}\r", "+\t\t\t\t\r", "+\t\t\t\t// update manager listener state (#fire need to iterate over original listeners through a local variable to hold onto\r", "+\t\t\t\t// the original ones)\r", "+\t\t\t\tthis.elementChangedListeners = newListeners;\r", "+\t\t\t\tthis.elementChangedListenerMasks = newMasks;\r", "+\t\t\t\tthis.elementChangedListenerCount--;\r", "+\t\t\t\treturn;\r", "+\t\t\t}\r", "+\t\t}\r"]}], "num": 71390}