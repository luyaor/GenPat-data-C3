{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ffc79c8cc4fa2a8af10aabdf40b1da9", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3f91725c7fad3b6e5d8bbb35d2c7735f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/declaration/AnnotationMirrorImpl.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r     public IMethodBinding getMethodBinding(final String memberName)", "signatureAfterChange": "     public IMethodBinding getMethodBinding(final String memberName)", "diff": ["-     */\r", "-    public IMethodBinding getMethodBinding(final String memberName)\r", "-    {\r", "-        if( memberName == null ) return null;\r", "-        final ITypeBinding typeBinding = _annoAstNode.resolveTypeBinding();\r", "-        final IMethodBinding[] methods  = typeBinding.getDeclaredMethods();\r", "-        for( IMethodBinding method : methods ){\r", "-            if( memberName.equals(method.getName()) )\r", "-                return method;\r", "-        }\r", "-        return null;\r", "-    }\r", "+     */", "+    public IMethodBinding getMethodBinding(final String memberName)", "+    {", "+        if( memberName == null ) return null;", "+        final ITypeBinding typeBinding = _domAnnotation.getAnnotationType();", "+\t\tif( typeBinding == null ) return null;", "+        final IMethodBinding[] methods  = typeBinding.getDeclaredMethods();", "+        for( IMethodBinding method : methods ){", "+            if( memberName.equals(method.getName()) )", "+                return method;", "+        }", "+        return null;", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf09c24fa59772a46c31d9343fc17794", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "a2999324910e04c9c4d68f1aa93d5053c047f21c", "commitAfterChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t\t\t\tif (receiverType == null) break checkParameterizedAllocation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee4ea85caab922d7a287a493241d16b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "8cb005dceff00dfd0f965a5f89af1e85f07ed8f9", "commitAfterChange": "ea9f40d48c76d6574fa5279d54e4c9bc01587c84", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  void checkInheritedMethods(MethodBinding[] methods, int length)", "signatureAfterChange": "  void checkInheritedMethods(MethodBinding[] methods, int length)", "diff": ["+\tif (index == 0) return; // can happen with methods that contain 'equal' Missing Types, see bug 257384"]}], "num": 28455}