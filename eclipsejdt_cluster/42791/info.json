{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e5f94c0c29d6d3ce018a83b0d1d0bc25", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3572c223f99835fe69a285778eee1e8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TryStatement.java", "commitBeforeChange": "670c7c942285af991247a6c3c0ef1114124960d2", "commitAfterChange": "c992fe270693288c9e38f212c5d2c8ee630d1930", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream)", "diff": ["-\t\t\t\t\t\tif (subRoutineStartLabel != null) {", "-\t\t\t\t\t\t\tif (!catchExits[i] && preserveCurrentHandler) {", "-\t\t\t\t\t\t\t\trequiresNaturalJsr = !nonReturningSubRoutine;", "-\t\t\t\t\t\t\t\tcodeStream.goto_(endLabel);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t}", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tif (!catchExits[i] && preserveCurrentHandler) {", "-\t\t\t\t\t\t\tif (nonReturningSubRoutine) {", "-\t\t\t\t\t\t\t\tcodeStream.goto_(subRoutineStartLabel);", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\trequiresNaturalJsr = true;", "-\t\t\t\t\t\t\t\tcodeStream.goto_(endLabel);", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\tif (!catchExits[i] && preserveCurrentHandler) {", "+\t\t\t\t\t\tif (nonReturningSubRoutine) {", "+\t\t\t\t\t\t\tcodeStream.goto_(subRoutineStartLabel);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\trequiresNaturalJsr = true;", "+\t\t\t\t\t\t\tcodeStream.goto_(endLabel);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eacb9aee4f9830e95270b4de9bda5ec1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "ab4f1f4f5f05228bd740b611c13a70ad9f89e86f", "commitAfterChange": "92b1e4b5c6be4d76b6b81e28831eb68da7da9e16", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void generateOptimizedNonBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": " public void generateOptimizedNonBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\t\t\t\tif (falseLabel == null) {", "-\t\t\t\t\t// implicit falling through the FALSE case", "-\t\t\t\t\tif (trueLabel != null) {", "-\t\t\t\t\t\tcodeStream.goto_(trueLabel);", "-\t\t\t\t\t}", "+\t\t\t\t\tif ((bits & OnlyValueRequiredMASK) != 0) {", "+\t\t\t\t\t\tif (((bits & OperatorMASK) >> OperatorSHIFT) == EQUAL_EQUAL) {", "+\t\t\t\t\t\t\tcodeStream.iconst_1();", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\tcodeStream.iconst_0();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (falseLabel == null) {", "+\t\t\t\t\t\t\t// implicit falling through the FALSE case", "+\t\t\t\t\t\t\tif (trueLabel != null) {", "+\t\t\t\t\t\t\t\tcodeStream.goto_(trueLabel);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fa119a5338b6243895fc73fa99e80a59", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "26e0b0c271d5031424823a1070ef180ba24218bf", "commitAfterChange": "c84496f37e5dff715764911530c1fceaa60b14ee", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void generateOptimizedNonBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedNonBooleanEqual(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\t\t\t\t\t\tif ((bits & OnlyValueRequired) != 0) {", "-\t\t\t\t\t\t\tif (((bits & OperatorMASK) >> OperatorSHIFT) == EQUAL_EQUAL) {", "-\t\t\t\t\t\t\t\tcodeStream.iconst_1();", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tcodeStream.iconst_0();", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\tif (falseLabel == null) {", "-\t\t\t\t\t\t\t\t// implicit falling through the FALSE case", "-\t\t\t\t\t\t\t\tif (trueLabel != null) {", "-\t\t\t\t\t\t\t\t\tcodeStream.goto_(trueLabel);", "-\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\tif (falseLabel == null) {", "+\t\t\t\t\t\t// implicit falling through the FALSE case", "+\t\t\t\t\t\tif (trueLabel != null) {", "+\t\t\t\t\t\t\tcodeStream.goto_(trueLabel);", "+\t\t\t\t\t\t}"]}], "num": 42791}