{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3b64fe618e81713a52076d05c66dbbe4", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34052e6ada3e0a30aac84f342bf6ec87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d125ece72c2ad46b856092bcf90700e8a503dcbf", "commitAfterChange": "56c0bf99b827834b2ab899166e7fa7cb0b5042d7", "methodNumberBeforeChange": 380, "methodNumberAfterChange": 380, "signatureBeforeChange": " protected void parse()", "signatureAfterChange": " protected void parse()", "diff": ["-\t\t\tint errorPos = this.scanner.currentPosition;", "+\t\t\tint errorPos = this.scanner.currentPosition - 1;", "+\t\t\tint previousToken = this.currentToken;", "-\t\t\t\tif (act == ERROR_ACTION) this.lastErrorEndPosition = errorPos;", "+\t\t\t\tif (act == ERROR_ACTION && previousToken != 0) this.lastErrorEndPosition = errorPos;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e37bca0e1083571e95b9261f6c10fd1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/classfmt/ClassFileReader.java", "commitBeforeChange": "5abf2bfac4a29a1b90534d1e1d702e8a9e44495f", "commitAfterChange": "b9f14f98b8788149cd92f6178e24c1a7697c0869", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public IBinaryNestedType[] getMemberTypes()", "signatureAfterChange": "\r public IBinaryNestedType[] getMemberTypes()", "diff": ["-\t\t\tif (outerClassNameIdx != 0 && outerClassNameIdx == this.classNameIndex) {\r", "+\t\t\tint innerNameIndex = currentInnerInfo.innerNameIndex;\r", "+\t\t\t/*\r", "+\t\t\t * Checking that outerClassNameIDx is different from 0 should be enough to determine if an inner class\r", "+\t\t\t * attribute entry is a member class, but due to the bug:\r", "+\t\t\t * http://dev.eclipse.org/bugs/show_bug.cgi?id=14592\r", "+\t\t\t * we needed to add an extra check. So we check that innerNameIndex is different from 0 as well.\r", "+\t\t\t */\r", "+\t\t\tif (outerClassNameIdx != 0 && innerNameIndex != 0 && outerClassNameIdx == this.classNameIndex) {\r"]}], "num": 2082}