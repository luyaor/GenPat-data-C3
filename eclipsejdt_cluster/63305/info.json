{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1300534c1189989c57d431a5d54aacb9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2f2281054f7234f1841f2240ca5a810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "bf06f23cb37471e4e0b10eb0affe747a9e945b46", "commitAfterChange": "67c70f0229b1ee30edee39ee40e49c055e5684f0", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "signatureAfterChange": " \tprotected final MethodBinding mostSpecificMethodBinding(MethodBinding[] visible, int visibleSize, TypeBinding[] argumentTypes, InvocationSite invocationSite, ReferenceBinding receiverType)", "diff": ["-\t\t\t\tboolean shouldIntersectExceptions = original.declaringClass.isInterface() && original.thrownExceptions != Binding.NO_EXCEPTIONS; // only needed when selecting from interface methods", "+\t\t\t\tboolean shouldIntersectExceptions = original.declaringClass.isAbstract() && original.thrownExceptions != Binding.NO_EXCEPTIONS; // only needed when selecting from interface methods"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d49f33a4047505a94e428aaffaa0168b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "9713cc0fc86fbe0881ff90c5290328149c35cbdc", "commitAfterChange": "236485921f70a82e4283431ca8763bf21e25e459", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, TypeBinding[] typeArguments, LookupEnvironment environment)", "signatureAfterChange": " \tpublic ParameterizedGenericMethodBinding(MethodBinding originalMethod, TypeBinding[] typeArguments, LookupEnvironment environment)", "diff": ["-", "-\t    this.thrownExceptions = Scope.substitute(this, originalMethod.thrownExceptions);", "-\t    if (this.thrownExceptions == null) this.thrownExceptions = Binding.NO_EXCEPTIONS;", "+\t    this.thrownExceptions = Scope.substitute(this, originalMethod.thrownExceptions);", "+\t    if (this.thrownExceptions == null) this.thrownExceptions = Binding.NO_EXCEPTIONS;"]}], "num": 63305}