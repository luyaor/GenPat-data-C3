{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "507e2ff3fa5c893210b916c6e4d10c36", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98bd3704fd639f773fc905ab9ddc4c63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8c12a1560b5b16e626f09d83b170c60e0f7d623a", "commitAfterChange": "12ce4293ede90551ea298fc4647747d8e255b48f", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \t \tpublic ParameterizedTypeBinding createParameterizedType(ReferenceBinding genericType, TypeBinding[] arguments, ReferenceBinding enclosingType)", "signatureAfterChange": " \t \tpublic ParameterizedTypeBinding createParameterizedType(ReferenceBinding genericType, TypeBinding[] arguments, ReferenceBinding enclosingType)", "diff": ["-\t\t\tfor (int i = 0, max = arguments == null ? 0 : arguments.length; i < max; i++){", "+\t\t\tfor (int i = 0, max = arguments == null ? 0 : arguments.length; i < max; i++)", "-\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d220608ecd46778acae8184a417601e1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "8032392aee6168afb7d9361a5e7c32ded0b6567a", "commitAfterChange": "af7c555b94268663ad75bc44adea174c67a820bf", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " public void findIndexMatches(IndexInput input, IIndexSearchRequestor requestor, int detailLevel, IProgressMonitor progressMonitor, IJavaSearchScope scope) throws IOException", "diff": ["-\tfor (int i = 0, max = entries.length; i < max; i++){", "-", "+\tfor (int i = 0, max = entries.length; i < max; i++) {", "-\t\tif (matchIndexEntry()){", "+\t\tif (matchIndexEntry())", "-\t\t}"]}], "num": 1859}