{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f2c0979ed5d40240b340f99fec3bafe8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98832c614f7afb265f5c8f6942e8518e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 16, "signatureBeforeChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "signatureAfterChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "diff": ["-\tDataInputStream stream = new DataInputStream(new BufferedInputStream(new FileInputStream(getIndexFile()), 2048));", "+\tDataInputStream stream = new DataInputStream(new BufferedInputStream(new FileInputStream(this.indexFile), 2048));", "-\t\t\t\tSystem.err.println(\"file = \"+getIndexFile()); //$NON-NLS-1$", "+\t\t\t\tSystem.err.println(\"file = \"+this.indexFile); //$NON-NLS-1$", "-\t\t\tSystem.err.println(\"file = \"+getIndexFile()); //$NON-NLS-1$", "+\t\t\tSystem.err.println(\"file = \"+this.indexFile); //$NON-NLS-1$", "-\t\tthis.categoryTables.put(categoryName, categoryTable);", "+\t\tthis.categoryTables.put(INTERNED_CATEGORY_NAMES.get(categoryName), categoryTable);", "-\t\tthis.cachedCategoryName = categoryTable.elementSize < 10000 ? categoryName : null;", "+\t\tthis.cachedCategoryName = categoryTable.elementSize < 20000 ? categoryName : null;", "-\t\tstream = new DataInputStream(new BufferedInputStream(new FileInputStream(getIndexFile()), 2048));", "+\t\tstream = new DataInputStream(new BufferedInputStream(new FileInputStream(this.indexFile), 2048));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a76e21e22b71d253c5f87116e1fbc3a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "cc14d854a3fa69314da90ab7678179e0d094cf79", "commitAfterChange": "6af4efbab58f035254265067f1eb9b624da61900", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " protected void consumeCastExpressionWithNameArray()", "signatureAfterChange": " protected void consumeCastExpressionWithNameArray()", "diff": ["-\t", "-\t// handle type arguments", "-\tpushOnGenericsLengthStack(0);", "-\tpushOnGenericsIdentifiersLengthStack(identifierLengthStack[identifierLengthPtr]);", "-\t", "-\texpressionStack[expressionPtr] = cast = new CastExpression(exp = expressionStack[expressionPtr], castType = getTypeReference(intStack[intPtr--]));", "+\t\t", "+\texpressionPtr--;", "+\texpressionLengthPtr--;", "+\texpressionStack[expressionPtr] = cast = new CastExpression(exp = expressionStack[expressionPtr+1], castType = this.expressionStack[this.expressionPtr]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aadd5cb616ef796524046195ec145e9c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodPattern.java", "commitBeforeChange": "808ee1989aa546fef406f77c37a96f979df5219f", "commitAfterChange": "2528937997399f978f8c04c6800f46f957dbd27f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType, \tint matchRule)", "signatureAfterChange": " public MethodPattern( \tboolean findDeclarations, \tboolean findReferences, \tchar[] selector,  \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] returnQualification,  \tchar[] returnSimpleName, \tchar[][] parameterQualifications,  \tchar[][] parameterSimpleNames, \tIType declaringType, \tint matchRule)", "diff": ["-\tthis.selector = (isCaseSensitive() || isCamelCase())  ? selector : CharOperation.toLowerCase(selector);", "-\tthis.declaringQualification = isCaseSensitive() ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "-\tthis.declaringSimpleName = isCaseSensitive() ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "-\tthis.returnQualification = isCaseSensitive() ? returnQualification : CharOperation.toLowerCase(returnQualification);", "-\tthis.returnSimpleName = isCaseSensitive() ? returnSimpleName : CharOperation.toLowerCase(returnSimpleName);", "+\tthis.selector = (this.isCaseSensitive || this.isCamelCase) ? selector : CharOperation.toLowerCase(selector);", "+\tthis.declaringQualification = this.isCaseSensitive ? declaringQualification : CharOperation.toLowerCase(declaringQualification);", "+\tthis.declaringSimpleName = this.isCaseSensitive ? declaringSimpleName : CharOperation.toLowerCase(declaringSimpleName);", "+\tthis.returnQualification = this.isCaseSensitive ? returnQualification : CharOperation.toLowerCase(returnQualification);", "+\tthis.returnSimpleName = this.isCaseSensitive ? returnSimpleName : CharOperation.toLowerCase(returnSimpleName);", "-\t\t\tthis.parameterQualifications[i] = isCaseSensitive() ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "-\t\t\tthis.parameterSimpleNames[i] = isCaseSensitive() ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);", "+\t\t\tthis.parameterQualifications[i] = this.isCaseSensitive ? parameterQualifications[i] : CharOperation.toLowerCase(parameterQualifications[i]);", "+\t\t\tthis.parameterSimpleNames[i] = this.isCaseSensitive ? parameterSimpleNames[i] : CharOperation.toLowerCase(parameterSimpleNames[i]);"]}], "num": 39957}