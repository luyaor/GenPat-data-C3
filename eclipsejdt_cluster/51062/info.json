{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8c3d299d3abd1b4d204e91a2e82d7fac", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "00edfc273bbcdfba087b4f3664884e4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ClassFileReaderTest.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void test029()", "signatureAfterChange": " \tpublic void test029()", "diff": ["-\t\t\t\"     2  istore_1\\n\" + ", "-\t\t\t\"     3  iload_1\\n\" + ", "+\t\t\t\"     2  istore_1 [i]\\n\" + ", "+\t\t\t\"     3  iload_1 [i]\\n\" + ", "-\t\t\t\"     7  getstatic #21 <Field java/lang/System.out Ljava/io/PrintStream;>\\n\" + ", "-\t\t\t\"    10  iload_1\\n\" + ", "-\t\t\t\"    11  invokevirtual #27 <Method java/io/PrintStream.println(I)V>\\n\" + ", "+\t\t\t\"     7  getstatic java/lang/System.out Ljava/io/PrintStream; [21]\\n\" + ", "+\t\t\t\"    10  iload_1 [i]\\n\" + ", "+\t\t\t\"    11  invokevirtual java/io/PrintStream.println(I)V [27]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "27b58f081360adbba2c6eea456d08294", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "5c85e7570588f45bc28b317d5381f96243304903", "commitAfterChange": "e3af240dccc65542f2700248f6e576a65441a265", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tpublic void test013()", "signatureAfterChange": "  \tpublic void test013()", "diff": ["-\t\t\t\"Name clash : The method foo(Class<T>) of type A has the same erasure as foo(Class<T>) of type I but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method foo(Class<T>) of type A has the same erasure as foo(Class<T>) of type I but does not override it\\n\" + ", "-\t\t\t\"Name clash : The method foo(Class<T>) of type A has the same erasure as foo(Class<T>) of type I but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method foo(Class<T>) of type A has the same erasure as foo(Class<T>) of type I but does not override it\\n\" + ", "-\t\t\t\"Name clash : The method foo(Class<T>) of type A has the same erasure as foo(Class<T>) of type I but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method foo(Class<T>) of type A has the same erasure as foo(Class<T>) of type I but does not override it\\n\" + ", "-\t\t\t\"Name clash : The method foo(Class<T>) of type A has the same erasure as foo(Class<T>) of type I but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method foo(Class<T>) of type A has the same erasure as foo(Class<T>) of type I but does not override it\\n\" + ", "-\t\t\t\"Name clash : The method foo(Class<T>) of type X5 has the same erasure as foo(Class<T>) of type A but does not override it\\n\" + ", "+\t\t\t\"Name clash: The method foo(Class<T>) of type X5 has the same erasure as foo(Class<T>) of type A but does not override it\\n\" + "]}], "num": 51062}