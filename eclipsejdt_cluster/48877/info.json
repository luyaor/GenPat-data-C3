{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "25d2a3c0cdcc977f766ee5740919ee53", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ad3cf60ec1a732d44a7b858a170c270", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "81692e071192b9c42c4a6026dc5f6c18d5f213cc", "commitAfterChange": "aa6251de28ce7d8f307172e681d4401e486ea590", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames)", "signatureAfterChange": " protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, String[] paramterSignatures)", "diff": ["-protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames) {", "-\tString[] parameterTypes= null;", "-\tif (parameterTypeNames != null) {", "-\t\tparameterTypes= new String[parameterTypeNames.length];", "-\t\tfor (int i= 0, max = parameterTypeNames.length; i < max; i++) {", "-\t\t\tString pkg = IPackageFragment.DEFAULT_PACKAGE_NAME;", "-\t\t\tif (parameterPackageNames[i] != null && parameterPackageNames[i].length > 0) {", "-\t\t\t\tpkg = new String(parameterPackageNames[i]) + \".\"; //$NON-NLS-1$", "-\t\t\t}", "-\t\t\t", "-\t\t\tString typeName = new String(parameterTypeNames[i]);", "-\t\t\tif (typeName.indexOf('.') > 0) ", "-\t\t\t\ttypeName = typeName.replace('.', '$');", "-\t\t\tparameterTypes[i]= Signature.createTypeSignature(", "-\t\t\t\tpkg + typeName, true);", "-\t\t}", "-\t}", "-\tIMethod method= type.getMethod(new String(selector), parameterTypes);", "+protected void acceptBinaryMethod(IType type, char[] selector, char[][] parameterPackageNames, char[][] parameterTypeNames, String[] paramterSignatures) {", "+\tIMethod method= type.getMethod(new String(selector), paramterSignatures);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f1af4007081327f667561e512758906", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "c7d3258ae74375a57da545fcb11a05d452eeaa7b", "commitAfterChange": "5b943f569ec21fd8ddfd3731a64d0bb21777935c", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tprotected void assertElementsEqual(String message, String expected, IJavaElement[] elements)", "signatureAfterChange": " \tprotected void assertElementsEqual(String message, String expected, IJavaElement[] elements)", "diff": ["+\t\tassertElementsEqual(message, expected, elements, false/*don't show key*/);", "+\t}", "-\t\t\t\t\tbuffer.append(element.toStringWithAncestors(false/*don't show key*/));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8d894ebe998fdf56b80024f2209266f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "8bd987839355c299213c95f3874a2e3574283d9c", "commitAfterChange": "76b6723dbe61d0b9874754d0d6572d1a4d8c0cbc", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  \tprivate int printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "signatureAfterChange": "  \tprivate void printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine)", "diff": ["-\tprivate int printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine) {", "+\tprivate void printJavadocHtmlImmutableTag(FormatJavadocText text, FormatJavadocBlock block, boolean textOnNewLine) {", "-\t\tint additionalLength = 0;", "-\t\t\t// Indent if necessary", "-\t\t\tif (textOnNewLine) {", "-\t\t\t\tint col = this.column;", "-\t\t\t\tStringBuffer buffer = new StringBuffer();", "-\t\t\t\tint textEnd = text.separatorsPtr == -1 ? text.sourceEnd : (int) (text.separators[0] >>> 32);", "-\t\t\t\tprintJavadocTextLine(buffer, text.sourceStart, textEnd, block, true, true, true);", "-\t\t\t\taddReplaceEdit(text.sourceStart, textEnd, buffer.toString());", "-\t\t\t\tadditionalLength = this.column - col;", "-\t\t\t}", "-\t", "-\t\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t\t\treturn;", "-\t\treturn text.separatorsPtr<2 ? additionalLength : 0;"]}], "num": 48877}