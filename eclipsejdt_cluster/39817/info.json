{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "732770aa161c3274576496d0ca7e8ccf", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298e2ec8e08b9cde1f699b565e936cd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "0d164c5fd27f905997905e2364acd7d413efe08e", "commitAfterChange": "cb53eff5db7d4f76eb24c91a2abecee1441f0bbc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tprivate void searchVisibleVariablesAndMethods( \t\t\tScope scope, \t\t\tObjectVector localsFound, \t\t\tObjectVector fieldsFound, \t\t\tObjectVector methodsFound, \t\t\tboolean notInJavadoc)", "signatureAfterChange": " \tprivate void searchVisibleVariablesAndMethods( \t\t\tScope scope, \t\t\tObjectVector localsFound, \t\t\tObjectVector fieldsFound, \t\t\tObjectVector methodsFound, \t\t\tboolean notInJavadoc)", "diff": ["-\t\t\t\t\t\t\tif(local.declaration.initialization.sourceEnd > 0) {", "-\t\t\t\t\t\t\t\t\tif (this.assistNode.sourceEnd <= local.declaration.initialization.sourceEnd", "-\t\t\t\t\t\t\t\t\t\t\t&& this.assistNode.sourceStart >= local.declaration.initialization.sourceStart) {", "-\t\t\t\t\t\t\t\t\t\tcontinue next;", "-\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t/*(use this if-else block if it is found that local.declaration.initialization != null is not sufficient to ", "+\t\t\t\t\t\t\t  guarantee that proposal is being asked inside a local variable declaration's initializer)", "+\t\t\t\t\t\t\t if(local.declaration.initialization.sourceEnd > 0) {", "+\t\t\t\t\t\t\t\tif (this.assistNode.sourceEnd <= local.declaration.initialization.sourceEnd", "+\t\t\t\t\t\t\t\t\t\t&& this.assistNode.sourceStart >= local.declaration.initialization.sourceStart) {", "+\t\t\t\t\t\t\t\t\tcontinue next;", "+\t\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}*/", "+\t\t\t\t\t\t\tcontinue next;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65f5156072822c4faae8b80d7392c583", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "e1d20020dbd43260d01432663cbec1b70ba0c4a6", "commitAfterChange": "3e32cedb68e257de58ed115543445fc7d20d99a3", "methodNumberBeforeChange": 64, "methodNumberAfterChange": 64, "signatureBeforeChange": " public void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " public void configure(String[] argv) throws InvalidInputException", "diff": ["-\t} else {", "-\t\tif (compliance.equals(CompilerOptions.VERSION_1_3)) {", "-\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_1);", "-\t\t} else if (compliance.equals(CompilerOptions.VERSION_1_4)", "-\t\t\t\t|| compliance.equals(CompilerOptions.VERSION_1_5)", "-\t\t\t\t|| compliance.equals(CompilerOptions.VERSION_1_6)) {", "-\t\t\tif (sourceVersion.equals(CompilerOptions.VERSION_1_3)) {", "-\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_2);", "-\t\t\t} else {", "-\t\t\t\t// for JDK >= 1.4, target == source", "-\t\t\t\tthis.options.put(CompilerOptions.OPTION_TargetPlatform, sourceVersion);", "-\t\t\t}", "-\t\t}"]}], "num": 39817}