{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "50b381913ca38a6ff23c70ca8d4df596", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "121531017a674606c14bf70a2ce864a2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "64d39f3567030242a0089e54dec7b20eb2379aa8", "commitAfterChange": "61bef0fdf04ab68e34740d553b6ad5e9433edc7e", "methodNumberBeforeChange": 93, "methodNumberAfterChange": 93, "signatureBeforeChange": " \tprotected IJavaProject createJavaProject( \t\t\tfinal String projectName, \t\t\tfinal String[] sourceFolders, \t\t\tfinal String[] libraries, \t\t\tfinal String[][] librariesInclusionPatterns, \t\t\tfinal String[][] librariesExclusionPatterns, \t\t\tfinal String[] projects, \t\t\tfinal String[][] projectsInclusionPatterns, \t\t\tfinal String[][] projectsExclusionPatterns, \t\t\tfinal boolean combineAccessRestrictions, \t\t\tfinal boolean[] exportedProjects, \t\t\tfinal String projectOutput, \t\t\tfinal String[] sourceOutputs, \t\t\tfinal String[][] inclusionPatterns, \t\t\tfinal String[][] exclusionPatterns, \t\t\tfinal String compliance) throws CoreException", "signatureAfterChange": " \tprotected IJavaProject createJavaProject( \t\t\tfinal String projectName, \t\t\tfinal String[] sourceFolders, \t\t\tfinal String[] libraries, \t\t\tfinal String[][] librariesInclusionPatterns, \t\t\tfinal String[][] librariesExclusionPatterns, \t\t\tfinal String[] projects, \t\t\tfinal String[][] projectsInclusionPatterns, \t\t\tfinal String[][] projectsExclusionPatterns, \t\t\tfinal boolean combineAccessRestrictions, \t\t\tfinal boolean[] exportedProjects, \t\t\tfinal String projectOutput, \t\t\tfinal String[] sourceOutputs, \t\t\tfinal String[][] inclusionPatterns, \t\t\tfinal String[][] exclusionPatterns, \t\t\tfinal String compliance,  \t\t\tfinal boolean simulateImport) throws CoreException", "diff": ["-\t\t\tfinal String compliance) throws CoreException {", "+\t\t\tfinal String compliance, ", "+\t\t\tfinal boolean simulateImport) throws CoreException {", "-\t\t\t\t\t\toutput.create(true, true, null);", "+\t\t\t\t\t\toutput.create(true, true, monitor);", "-\t\t\t\tIJavaProject javaProject = JavaCore.create(project);", "-\t\t\t\tjavaProject.setRawClasspath(entries, projectPath.append(outputPath), null);", "+\t\t\t\tJavaProject javaProject = (JavaProject) JavaCore.create(project);", "+\t\t\t\tif (simulateImport)", "+\t\t\t\t\tjavaProject.saveClasspath(entries, projectPath.append(outputPath));", "+\t\t\t\telse", "+\t\t\t\t\tjavaProject.setRawClasspath(entries, projectPath.append(outputPath), monitor);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8eb60bc53f7c338ec3152f41d2d89e52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "23ce85b62062adfb602af4a47162da068d113e83", "commitAfterChange": "979c704dde214191e3f8aa31211aee678c05ced2", "methodNumberBeforeChange": 55, "methodNumberAfterChange": 55, "signatureBeforeChange": " \tprivate void updateClasspathMarkers(IResourceDelta delta, HashSet affectedProjects, Map preferredClasspaths, Map preferredOutputs)", "signatureAfterChange": " \tprivate void updateClasspathMarkers(IResourceDelta delta, HashSet affectedProjects, Map preferredClasspaths, Map preferredOutputs)", "diff": ["-\t\t", "+", "-\t\t\t\t\t\t\tif (!JavaProject.hasJavaNature(project)) {", "+\t\t\t\t\t\t\tboolean wasJavaProject = this.manager.getJavaModel().findJavaProject(project) != null;", "+\t\t\t\t\t\t\tif (wasJavaProject && !isJavaProject) {", "-\t\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "+\t\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t} else if (isJavaProject) {", "+\t\t\t\t\t\t\t// check if all entries exist", "+\t\t\t\t\t\t\ttry {", "+\t\t\t\t\t\t\t\tJavaProject javaProject = (JavaProject)JavaCore.create(project);", "+\t\t\t\t\t\t\t\tjavaProject.getResolvedClasspath(true/*ignore unresolved entry*/, true/*generate marker on error*/);", "+\t\t\t\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t\t\t\t\t// project doesn't exist: ignore"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef370d3d975992d4b7a3c0e75e8125fa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "af611344f45ed75fde1b18f8c5abcb58f8227db0", "commitAfterChange": "b2ae5b84e851673c2a38346fddf34788249a797b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tpublic void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "signatureAfterChange": " \tpublic void checkProjectsBeingAddedOrRemoved(IResourceDelta delta)", "diff": ["-\t\t\t\t\tif (this.hasJavaNature(project)) {", "+\t\t\t\t\tif (JavaProject.hasJavaNature(project)) {", "-\t\t\t\t\t\t\tif (this.hasJavaNature(project)) {", "+\t\t\t\t\t\t\tif (JavaProject.hasJavaNature(project)) {", "-\t\t\t\t\t\tboolean isJavaProject = this.hasJavaNature(project);", "+\t\t\t\t\t\tboolean isJavaProject = JavaProject.hasJavaNature(project);", "-\t\t\t\t\t\t\tif (this.hasJavaNature(project)) { // need nature check - 18698", "+\t\t\t\t\t\t\tif (JavaProject.hasJavaNature(project)) { // need nature check - 18698", "-\t\t\t\t\t\tif (this.hasJavaNature(project)) { // need nature check - 18698", "+\t\t\t\t\t\tif (JavaProject.hasJavaNature(project)) { // need nature check - 18698"]}], "num": 48242}