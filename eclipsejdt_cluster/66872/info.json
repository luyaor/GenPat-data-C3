{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "821953912334c98a94912495793aeec9", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e3b8a04dafd59af7887cf8eed8cc3e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/SearchPattern.java", "commitBeforeChange": "192a17dd8a77dcf00962471b7104c1c1f453d9f4", "commitAfterChange": "07d5081d9da703108b09f4fbf591bb9cf4b8ffad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " public static SearchPattern createPattern(IJavaElement element, int limitTo)", "signatureAfterChange": " public static SearchPattern createPattern(IJavaElement element, int limitTo)", "diff": ["-\t\t\t\tlastDot = typeSignature.lastIndexOf('.');", "-\t\t\t\ttypeSimpleName = (lastDot != -1 ? typeSignature.substring(lastDot + 1) : typeSignature).toCharArray();", "-\t\t\t\ttypeQualification = ", "-\t\t\t\t\tlastDot != -1 ? ", "+\t\t\t\tif ((lastDot = typeSignature.lastIndexOf('.')) == -1) {", "+\t\t\t\t\ttypeSimpleName = typeSignature.toCharArray();", "+\t\t\t\t\ttypeQualification = null;", "+\t\t\t\t} else {", "+\t\t\t\t\ttypeSimpleName = typeSignature.substring(lastDot + 1).toCharArray();", "+\t\t\t\t\ttypeQualification = field.isBinary()", "+\t\t\t\t\t\t? typeSignature.substring(0, lastDot).toCharArray()", "-\t\t\t\t\t\tCharOperation.concat(ONE_STAR, typeSignature.substring(0, lastDot).toCharArray()) : ", "-\t\t\t\t\t\tnull;", "+\t\t\t\t\t\t: CharOperation.concat(ONE_STAR, typeSignature.substring(0, lastDot).toCharArray());", "+\t\t\t\t}", "-\t\t\t\tlastDot = returnType.lastIndexOf('.');", "-\t\t\t\treturnSimpleName = (lastDot != -1 ? returnType.substring(lastDot + 1) : returnType).toCharArray();", "-\t\t\t\treturnQualification = ", "-\t\t\t\t\tlastDot != -1 ? ", "+\t\t\t\tif ((lastDot = returnType.lastIndexOf('.')) == -1) {", "+\t\t\t\t\treturnSimpleName = returnType.toCharArray();", "+\t\t\t\t\treturnQualification = null;", "+\t\t\t\t} else {", "+\t\t\t\t\treturnSimpleName = returnType.substring(lastDot + 1).toCharArray();", "+\t\t\t\t\treturnQualification = method.isBinary()", "+\t\t\t\t\t\t? returnType.substring(0, lastDot).toCharArray()", "-\t\t\t\t\t\tCharOperation.concat(ONE_STAR, returnType.substring(0, lastDot).toCharArray()) : ", "-\t\t\t\t\t\tnull;", "+\t\t\t\t\t\t: CharOperation.concat(ONE_STAR, returnType.substring(0, lastDot).toCharArray());", "+\t\t\t\t}", "-\t\t\t\tlastDot = signature.lastIndexOf('.');", "-\t\t\t\tparameterSimpleNames[i] = (lastDot != -1 ? signature.substring(lastDot + 1) : signature).toCharArray();", "-\t\t\t\tparameterQualifications[i] = ", "-\t\t\t\t\tlastDot != -1 ? ", "+\t\t\t\tif ((lastDot = signature.lastIndexOf('.')) == -1) {", "+\t\t\t\t\tparameterSimpleNames[i] = signature.toCharArray();", "+\t\t\t\t\tparameterQualifications[i] = null;", "+\t\t\t\t} else {", "+\t\t\t\t\tparameterSimpleNames[i] = signature.substring(lastDot + 1).toCharArray();", "+\t\t\t\t\tparameterQualifications[i] = method.isBinary()", "+\t\t\t\t\t\t? signature.substring(0, lastDot).toCharArray()", "-\t\t\t\t\t\tCharOperation.concat(ONE_STAR, signature.substring(0, lastDot).toCharArray()) : ", "-\t\t\t\t\t\tnull;", "+\t\t\t\t\t\t: CharOperation.concat(ONE_STAR, signature.substring(0, lastDot).toCharArray());", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86729400aa36829ddfb01e65e72d5028", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/core/search/SearchPattern.java", "commitBeforeChange": "b1ce5a863ad0a541f80dd0793ff207f1e4ecf677", "commitAfterChange": "72d60854091bd7e8a5aafafdfea62cc297a3eb41", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "signatureAfterChange": " \tpublic static SearchPattern createPattern(IJavaElement element, int limitTo)", "diff": ["+\t\t\t\tchar[][] typeNames = null;", "-\t\t\t\t\tString typeSignature = Signature.toString(field.getTypeSignature()).replace('$', '.');", "-\t\t\t\t\tif ((lastDot = typeSignature.lastIndexOf('.')) == -1) {", "-\t\t\t\t\t\ttypeSimpleName = typeSignature.toCharArray();", "+\t\t\t\t\tchar[] typeSignature = field.getTypeSignature().toCharArray();", "+\t\t\t\t\t// SEARCH_15 (start)", "+\t\t\t\t\tchar[] typeErasure = null;", "+\t\t\t\t\tif (CharOperation.indexOf(Signature.C_GENERIC_START, typeSignature) == -1) {", "+\t\t\t\t\t\ttypeErasure = Signature.toCharArray(typeSignature);", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\ttypeErasure = Signature.toCharArray(Signature.getTypeErasure(typeSignature));", "+\t\t\t\t\t\tCharOperation.replace(typeErasure, '$', '.');", "+\t\t\t\t\t\tif ((typeNames = Signature.getTypeArguments(typeSignature)) != null) {", "+\t\t\t\t\t\t\tint length = typeNames.length;", "+\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\t\ttypeNames[i] = Signature.toCharArray(typeNames[i]);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t\t// end", "+\t\t\t\t\tif ((lastDot = CharOperation.lastIndexOf('.', typeErasure)) == -1) {", "+\t\t\t\t\t\ttypeSimpleName = typeErasure;", "-\t\t\t\t\t\ttypeSimpleName = typeSignature.substring(lastDot + 1).toCharArray();", "-\t\t\t\t\t\ttypeQualification = field.isBinary()", "-\t\t\t\t\t\t\t? typeSignature.substring(0, lastDot).toCharArray()", "+\t\t\t\t\t\ttypeSimpleName = CharOperation.subarray(typeErasure, 0, lastDot + 1);", "+\t\t\t\t\t\ttypeQualification = CharOperation.subarray(typeErasure, 0, lastDot);", "+\t\t\t\t\t\tif (!field.isBinary()) {", "-\t\t\t\t\t\t\t: CharOperation.concat(IIndexConstants.ONE_STAR, typeSignature.substring(0, lastDot).toCharArray());", "+\t\t\t\t\t\t\tCharOperation.concat(IIndexConstants.ONE_STAR, typeQualification);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\ttypeNames,", "+\t\t\t\t\t\t\t\ttypeNames,", "+\t\t\t\t\t\t\t\ttypeNames,", "+\t\t\t\t\t\t\t\ttypeNames,", "+\t\t\t\t\t\t\t\ttypeNames,", "+\t\t\t\t\t\t\t// SEARCH_15 (start)", "+\t\t\t\t\t\t\tnull,", "+\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t// end", "-\t\t\t\tsearchPattern = ", "-\t\t\t\t\tcreateTypePattern(", "-\t\t\t\t\t\ttype.getElementName().toCharArray(), ", "-\t\t\t\t\t\ttype.getPackageFragment().getElementName().toCharArray(),", "-\t\t\t\t\t\tenclosingTypeNames(type),", "-\t\t\t\t\t\tlimitTo);", "+\t\t\t\tsearchPattern = \tcreateTypePattern(", "+\t\t\t\t\t\t\ttype.getElementName().toCharArray(), ", "+\t\t\t\t\t\t\ttype.getPackageFragment().getElementName().toCharArray(),", "+\t\t\t\t\t\t\tenclosingTypeNames(type),", "+\t\t\t\t\t\t\t// SEARCH_15 (start)", "+\t\t\t\t\t\t\ttypeParameterNames(type),", "+\t\t\t\t\t\t\ttrue, /* generic type */", "+\t\t\t\t\t\t\t// end", "+\t\t\t\t\t\t\tlimitTo);"]}], "num": 66872}