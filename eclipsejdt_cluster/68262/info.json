{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1bfbee8dcdb3033ab4084e25c7c5f720", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "004696607cbd03944a19b28c181347a4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 189, "methodNumberAfterChange": 189, "signatureBeforeChange": " public void incompatibleExceptionInThrowsClause(SourceTypeBinding type, MethodBinding currentMethod, MethodBinding inheritedMethod, ReferenceBinding exceptionType)", "signatureAfterChange": " public void incompatibleExceptionInThrowsClause(SourceTypeBinding type, MethodBinding currentMethod, MethodBinding inheritedMethod, ReferenceBinding exceptionType)", "diff": ["-\tif (type == currentMethod.declaringClass) {", "+\tif (TypeBinding.equalsEquals(type, currentMethod.declaringClass)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "012aca586b08d47c835f08db871491f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 96, "signatureBeforeChange": "  \tprivate int computeRelevanceForEnumConstant(TypeBinding proposalType)", "signatureAfterChange": "  \tprivate int computeRelevanceForEnumConstant(TypeBinding proposalType)", "diff": ["-\t\t\t\t\t\tproposalType == this.expectedTypes[i]) {", "+\t\t\t\t\t\tTypeBinding.equalsEquals(proposalType, this.expectedTypes[i])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "017b7bf5be2b18c303c96ba747fc9d2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionOnMessageSend.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprivate MethodBinding findNonDefaultAbstractMethod(MethodBinding methodBinding)", "signatureAfterChange": " \tprivate MethodBinding findNonDefaultAbstractMethod(MethodBinding methodBinding)", "diff": ["-\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02afdda1c8f356369bbb788648d74ad3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public FlowInfo getInitsForFinalBlankInitializationCheck(TypeBinding declaringType, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo getInitsForFinalBlankInitializationCheck(TypeBinding declaringType, FlowInfo flowInfo)", "diff": ["-\t\t\tif (((TypeDeclaration)initializationContext.associatedNode).binding == declaringType) {", "+\t\t\tif (TypeBinding.equalsEquals(((TypeDeclaration)initializationContext.associatedNode).binding, declaringType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a6b208266a0830e57bd47460928926a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " public final boolean needBlankFinalFieldInitializationCheck(FieldBinding binding)", "signatureAfterChange": " public final boolean needBlankFinalFieldInitializationCheck(FieldBinding binding)", "diff": ["-\t\tif (enclosingType == fieldDeclaringClass) {", "+\t\tif (TypeBinding.equalsEquals(enclosingType, fieldDeclaringClass)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0bd124f8adbd3fbc9cea740561dbb602", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "      public boolean isEquivalentTo(TypeBinding otherType)", "signatureAfterChange": "      public boolean isEquivalentTo(TypeBinding otherType)", "diff": ["-\t            return erasure() == otherType.erasure();", "+\t            return TypeBinding.equalsEquals(erasure(), otherType.erasure());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0c0ad8ef8e9ddca3719c6b6256bcb4d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\t\t&& (this.indexOfFirstFieldBinding == 1 || lastFieldBinding.declaringClass == currentScope.enclosingReceiverType())", "+\t\t&& (this.indexOfFirstFieldBinding == 1 || TypeBinding.equalsEquals(lastFieldBinding.declaringClass, currentScope.enclosingReceiverType()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f0122f304ac5c804c4477305bef432f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 162, "methodNumberAfterChange": 162, "signatureBeforeChange": " \t \tprivate void findInterfacesMethodDeclarations( \t\tchar[] selector, \t\tReferenceBinding receiverType, \t\tReferenceBinding[] itsInterfaces, \t\tScope scope, \t\tObjectVector methodsFound, \t\tBinding[] missingElements, \t\tint[] missingElementssStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": " \t \tprivate void findInterfacesMethodDeclarations( \t\tchar[] selector, \t\tReferenceBinding receiverType, \t\tReferenceBinding[] itsInterfaces, \t\tScope scope, \t\tObjectVector methodsFound, \t\tBinding[] missingElements, \t\tint[] missingElementssStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f1a42042767d488a1cd52393259f9e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 113, "methodNumberAfterChange": 113, "signatureBeforeChange": " \tpublic MethodBinding getStaticFactory (ReferenceBinding allocationType, ReferenceBinding originalEnclosingType, TypeBinding[] argumentTypes, final InvocationSite allocationSite)", "signatureAfterChange": " \tpublic MethodBinding getStaticFactory (ReferenceBinding allocationType, ReferenceBinding originalEnclosingType, TypeBinding[] argumentTypes, final InvocationSite allocationSite)", "diff": ["-\t\t\t\t\t\tfirstBound = originalVariable.firstBound == originalVariable.superclass", "+\t\t\t\t\t\tfirstBound = TypeBinding.equalsEquals(originalVariable.firstBound, originalVariable.superclass)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "101d8fa1dade4221e51410fa90d65974", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedSuperReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  int findCompatibleEnclosing(ReferenceBinding enclosingType, TypeBinding type)", "signatureAfterChange": "  int findCompatibleEnclosing(ReferenceBinding enclosingType, TypeBinding type)", "diff": ["-\t\t\tif (supers[i].erasure() == type) {", "+\t\t\tif (TypeBinding.equalsEquals(supers[i].erasure(), type)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "16df44598aa62272bc50d9219d34f1a1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic ParameterizedMethodBinding(final ReferenceBinding declaringClass, MethodBinding originalMethod, char[][] alternateParamaterNames, final LookupEnvironment environment)", "signatureAfterChange": " \tpublic ParameterizedMethodBinding(final ReferenceBinding declaringClass, MethodBinding originalMethod, char[][] alternateParamaterNames, final LookupEnvironment environment)", "diff": ["-\t\t\t\t\tfirstBound = originalVariable.firstBound == originalVariable.superclass", "+\t\t\t\t\tfirstBound = TypeBinding.equalsEquals(originalVariable.firstBound, originalVariable.superclass)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1797332af0112197ccec3801c70183ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprivate boolean connectSuperInterfaces()", "signatureAfterChange": " \tprivate boolean connectSuperInterfaces()", "diff": ["-\t\t\t\tif (interfaceBindings[j] == superInterface) {", "+\t\t\t\tif (TypeBinding.equalsEquals(interfaceBindings[j], superInterface)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19c39dffdd7d5b0951323217a8844be4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "  public TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "signatureAfterChange": "  public TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "diff": ["-\tif (expressionType == expectedType) return expressionType;", "+\tif (TypeBinding.equalsEquals(expressionType, expectedType)) return expressionType;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b2b95e8db7f32fd9cdbfdb9b0938ac5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "signatureAfterChange": "  public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-\t\t&& (this.indexOfFirstFieldBinding == 1 || lastFieldBinding.declaringClass == currentScope.enclosingReceiverType())", "+\t\t&& (this.indexOfFirstFieldBinding == 1 || TypeBinding.equalsEquals(lastFieldBinding.declaringClass, currentScope.enclosingReceiverType()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fd5ef3f16457e8d1a193a3f4ae7ae52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/InternalExtendedCompletionContext.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tprivate void searchVisibleInterfaceMethods( \t\t\tReferenceBinding[] itsInterfaces, \t\t\tReferenceBinding receiverType, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope, \t\t\tboolean onlyStaticMethods, \t\t\tObjectVector methodsFound)", "signatureAfterChange": "  \tprivate void searchVisibleInterfaceMethods( \t\t\tReferenceBinding[] itsInterfaces, \t\t\tReferenceBinding receiverType, \t\t\tScope scope, \t\t\tInvocationSite invocationSite, \t\t\tScope invocationScope, \t\t\tboolean onlyStaticMethods, \t\t\tObjectVector methodsFound)", "diff": ["-\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2123676932ab9f0b72b10229e7139397", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " boolean isUnsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " boolean isUnsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["-\tif (currentMethod.returnType == inheritedMethod.returnType.erasure()) {", "+\tif (TypeBinding.equalsEquals(currentMethod.returnType, inheritedMethod.returnType.erasure())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "22fb4bb4ef3beb14a80f150c051afa60", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tstatic boolean areTypesEqual(TypeBinding one, TypeBinding two)", "signatureAfterChange": " \tstatic boolean areTypesEqual(TypeBinding one, TypeBinding two)", "diff": ["-\t\tif (one == two) return true;", "+\t\tif (TypeBinding.equalsEquals(one, two)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24627de17c7ae8947afae38c99c03865", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic int boundsCount()", "signatureAfterChange": "  \tpublic int boundsCount()", "diff": ["-\t\t} else if (this.firstBound == this.superclass) {", "+\t\t} else if (TypeBinding.equalsEquals(this.firstBound, this.superclass)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2aeae2247e5be10ac762bb77cd51665d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["-\t\t\tif (localBinding.type == TypeBinding.INT) {", "+\t\t\tif (TypeBinding.equalsEquals(localBinding.type, TypeBinding.INT)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b16987efb427ed08aedc99eca70a667", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 163, "methodNumberAfterChange": 163, "signatureBeforeChange": " \t \tprivate void findInterfacesMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tReferenceBinding[] itsInterfaces, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementssStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "signatureAfterChange": " \t \tprivate void findInterfacesMethods( \t\tchar[] selector, \t\tTypeBinding[] typeArgTypes, \t\tTypeBinding[] argTypes, \t\tReferenceBinding receiverType, \t\tReferenceBinding[] itsInterfaces, \t\tScope scope, \t\tObjectVector methodsFound, \t\tboolean onlyStaticMethods, \t\tboolean exactMatch, \t\tInvocationSite invocationSite, \t\tScope invocationScope, \t\tboolean implicitCall, \t\tboolean superCall, \t\tboolean canBePrefixed, \t\tBinding[] missingElements, \t\tint[] missingElementssStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems, \t\tchar[] castedReceiver, \t\tint receiverStart, \t\tint receiverEnd)", "diff": ["-\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2f291913625ca40202bc646c4ae13362", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/Sorting.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprivate static int sortSuper(ReferenceBinding superclass, \t\t\t\t\t\t  \t\t ReferenceBinding[] input, \t\t\t\t\t\t  \t\t ReferenceBinding[] output, int o)", "signatureAfterChange": " \tprivate static int sortSuper(ReferenceBinding superclass, \t\t\t\t\t\t  \t\t ReferenceBinding[] input, \t\t\t\t\t\t  \t\t ReferenceBinding[] output, int o)", "diff": ["-\t\t\t\tif (input[j] == superclass)", "+\t\t\t\tif (TypeBinding.equalsEquals(input[j], superclass))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3046899709ebd6b8b19528930935c876", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\t&& (this.indexOfFirstFieldBinding == 1 || lastFieldBinding.declaringClass == currentScope.enclosingReceiverType())", "+\t\t\t\t\t\t\t\t\t\t\t\t&& (this.indexOfFirstFieldBinding == 1 || TypeBinding.equalsEquals(lastFieldBinding.declaringClass, currentScope.enclosingReceiverType()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30ab70d745d5521697d7e866b7bb6ed5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": " \tprivate TypeBinding lowerUpperBound(TypeBinding[] types, ArrayList lubStack)", "signatureAfterChange": " \tprivate TypeBinding lowerUpperBound(TypeBinding[] types, ArrayList lubStack)", "diff": ["-\t\t\t\t\tif (lubType == type || lubType.isEquivalentTo(type)) continue nextTypeCheck; // type found, jump to next one", "+\t\t\t\t\tif (TypeBinding.equalsEquals(lubType, type) || lubType.isEquivalentTo(type)) continue nextTypeCheck; // type found, jump to next one"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "34b915c10dba5060486f213b44106b7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " static boolean areReturnTypesCompatible(MethodBinding one, MethodBinding two, LookupEnvironment environment)", "signatureAfterChange": " static boolean areReturnTypesCompatible(MethodBinding one, MethodBinding two, LookupEnvironment environment)", "diff": ["-\tif (one.returnType == two.returnType) return true;", "+\tif (TypeBinding.equalsEquals(one.returnType, two.returnType)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "366b581f51cd74149afdacf13e69d9bf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 106, "signatureBeforeChange": "  \tpublic int parameterCompatibilityLevel(TypeBinding arg, TypeBinding param)", "signatureAfterChange": "  \tpublic int parameterCompatibilityLevel(TypeBinding arg, TypeBinding param)", "diff": ["-\t\t\tif (convertedType == param || convertedType.isCompatibleWith(param))", "+\t\t\tif (TypeBinding.equalsEquals(convertedType, param) || convertedType.isCompatibleWith(param))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c5dc53e6b3d26a13adfcde49aeec0a8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 89, "signatureBeforeChange": "  \tprivate char[] computePrefix(SourceTypeBinding declarationType, SourceTypeBinding invocationType, boolean isStatic)", "signatureAfterChange": "  \tprivate char[] computePrefix(SourceTypeBinding declarationType, SourceTypeBinding invocationType, boolean isStatic)", "diff": ["-\t\t} else if (declarationType == invocationType) {", "+\t\t} else if (TypeBinding.equalsEquals(declarationType, invocationType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3d349fbac01103be6f22bc9db0229542", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod)", "diff": ["-\t\t\t\t\t&& inheritedMethodToBridge.returnType.erasure() == method.returnType.erasure()", "+\t\t\t\t\t&& TypeBinding.equalsEquals(inheritedMethodToBridge.returnType.erasure(), method.returnType.erasure())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3da871922b34599be7e794305535c841", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public boolean isConstantValueOfTypeAssignableToType(TypeBinding constantType, TypeBinding targetType)", "signatureAfterChange": " public boolean isConstantValueOfTypeAssignableToType(TypeBinding constantType, TypeBinding targetType)", "diff": ["-\tif (constantType == targetType)", "+\tif (TypeBinding.equalsEquals(constantType, targetType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4061dc286a78eb4d4ce04f277b0e16dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tif (((this.bits & ASTNode.IsSynchronized) == 0) && this.expression != null && this.expression.resolvedType == TypeBinding.BOOLEAN) {", "+\t\tif (((this.bits & ASTNode.IsSynchronized) == 0) && this.expression != null && TypeBinding.equalsEquals(this.expression.resolvedType, TypeBinding.BOOLEAN)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4148618f2c6c865b6fa134fe1e36ba0a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "signatureAfterChange": " void checkForBridgeMethod(MethodBinding currentMethod, MethodBinding inheritedMethod, MethodBinding[] allInheritedMethods)", "diff": ["-\t\t\tif (thisMethod.areParameterErasuresEqual(bridge) && thisMethod.returnType.erasure() == bridge.returnType.erasure()) {", "+\t\t\tif (thisMethod.areParameterErasuresEqual(bridge) && TypeBinding.equalsEquals(thisMethod.returnType.erasure(), bridge.returnType.erasure())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "44545485b01cdb8f84594c77b9482973", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 188, "methodNumberAfterChange": 188, "signatureBeforeChange": "  \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "signatureAfterChange": "  \tprivate void findNestedTypes( \t\tchar[] typeName, \t\tSourceTypeBinding currentType, \t\tScope scope, \t\tboolean proposeAllMemberTypes, \t\tObjectVector typesFound)", "diff": ["-\t\t\t\t\t\t\t\t\tif (localType == otherType)", "+\t\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(localType, otherType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4608c8040c7de7aa567b929717de135e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " private IType[] findSuperInterfaces(IGenericType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private IType[] findSuperInterfaces(IGenericType type, ReferenceBinding typeBinding)", "diff": ["-\t\t\t\t\tif (this.typeBindings[t] == interfaceBinding) {", "+\t\t\t\t\tif (TypeBinding.equalsEquals(this.typeBindings[t], interfaceBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a650799a0c17fd2d1d715892cee987b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void computeConversion(Scope scope, TypeBinding runtimeType, TypeBinding compileTimeType)", "signatureAfterChange": " public void computeConversion(Scope scope, TypeBinding runtimeType, TypeBinding compileTimeType)", "diff": ["-\t\tif (boxedType == runtimeType) // Object o = 12;", "+\t\tif (TypeBinding.equalsEquals(boxedType, runtimeType)) // Object o = 12;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fa305badd187d20f962982cca43aa52", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeElementImpl.java", "commitBeforeChange": "017f9918b88fff3a8fea9daac2df2ba8b7e560d6", "commitAfterChange": "5066a165665c172193991ef548a06f9b6acd680e", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \t@Override \tpublic boolean hides(Element hidden)", "signatureAfterChange": "  \t@Override \tpublic boolean hides(Element hidden)", "diff": ["-\t\tif (hiddenBinding == hiderBinding) {", "+\t\tif (TypeBinding.equalsEquals(hiddenBinding, hiderBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4fb4eba5656b77c2e9d2b24ae19cf55b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " private boolean subTypeOfType(ReferenceBinding subType, ReferenceBinding typeBinding)", "signatureAfterChange": " private boolean subTypeOfType(ReferenceBinding subType, ReferenceBinding typeBinding)", "diff": ["-\tif (subType == typeBinding) return true;", "+\tif (TypeBinding.equalsEquals(subType, typeBinding)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52c358a99c41489ed5dd3df2a956851a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  \tprotected void findMethodInSuperInterfaces(ReferenceBinding receiverType, char[] selector, ObjectVector found, InvocationSite invocationSite)", "signatureAfterChange": "  \tprotected void findMethodInSuperInterfaces(ReferenceBinding receiverType, char[] selector, ObjectVector found, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5329eb42256482de401799f27744eff5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 196, "methodNumberAfterChange": 196, "signatureBeforeChange": " \t \tprivate void findTypesFromExpectedTypes(char[] token, Scope scope, ObjectVector typesFound, boolean proposeType, boolean proposeConstructor)", "signatureAfterChange": " \t \tprivate void findTypesFromExpectedTypes(char[] token, Scope scope, ObjectVector typesFound, boolean proposeType, boolean proposeConstructor)", "diff": ["-\t\t\t\t\t\tif (typeFound == refBinding.erasure()) {", "+\t\t\t\t\t\tif (TypeBinding.equalsEquals(typeFound, refBinding.erasure())) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "54c291460b183a70779834ee351b9ac6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  private void addDefaultAbstractMethods()", "signatureAfterChange": "  private void addDefaultAbstractMethods()", "diff": ["-\t\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5867537440736c927d535fd5164ba3c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " boolean isAcceptableReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod)", "signatureAfterChange": " boolean isAcceptableReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod)", "diff": ["-\t   \t\tif (currentReturnType == inheritedMethod.returnType.leafComponentType())", "+\t   \t\tif (TypeBinding.equalsEquals(currentReturnType, inheritedMethod.returnType.leafComponentType()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bdd2312bf50a2d00b1d3e38af296ab8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "signatureAfterChange": "  \tprivate void selectFrom(Binding binding, CompilationUnitDeclaration parsedUnit, boolean isDeclaration)", "diff": ["-\t\t\t\t\t} else if (typeVariable.firstBound == typeVariable.superclass) {", "+\t\t\t\t\t} else if (TypeBinding.equalsEquals(typeVariable.firstBound, typeVariable.superclass)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e5acb28d8a523a829bb0138c306cfdc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionJavadoc.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate char[][] missingTypeParameterTags(Binding paramNameRefBinding, Scope scope)", "signatureAfterChange": " \tprivate char[][] missingTypeParameterTags(Binding paramNameRefBinding, Scope scope)", "diff": ["-\t\t\t\t\tif (parameter.binding == this.paramTypeParameters[j].resolvedType) {", "+\t\t\t\t\tif (TypeBinding.equalsEquals(parameter.binding, this.paramTypeParameters[j].resolvedType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6398eac419da3a09a7b073419ac06e99", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge, MethodBinding targetMethod)", "diff": ["-\tif (inheritedMethodToBridge.returnType.erasure() == targetMethod.returnType.erasure()", "+\tif (TypeBinding.equalsEquals(inheritedMethodToBridge.returnType.erasure(), targetMethod.returnType.erasure())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "639e26a541e3453e7aa194de668c2cfb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 76, "methodNumberAfterChange": 76, "signatureBeforeChange": " \tpublic final boolean isDefinedInType(ReferenceBinding type)", "signatureAfterChange": " \tpublic final boolean isDefinedInType(ReferenceBinding type)", "diff": ["-\t\t\t\tif (((ClassScope) scope).referenceContext.binding == type)", "+\t\t\t\tif (TypeBinding.equalsEquals(((ClassScope) scope).referenceContext.binding, type))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66b9e61ca177d45d66b8e377bc32d263", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void checkExceptionHandlers(TypeBinding[] raisedExceptions, ASTNode location, FlowInfo flowInfo, BlockScope scope)", "signatureAfterChange": "  public void checkExceptionHandlers(TypeBinding[] raisedExceptions, ASTNode location, FlowInfo flowInfo, BlockScope scope)", "diff": ["-\t\t\t\tif (raisedExceptions[j] == exception) continue nextReport; // already reported", "+\t\t\t\tif (TypeBinding.equalsEquals(raisedExceptions[j], exception)) continue nextReport; // already reported"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67be990b42be44c6a7f5fd030396a34c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 481, "methodNumberAfterChange": 481, "signatureBeforeChange": " public void unsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod, SourceTypeBinding type)", "signatureAfterChange": " public void unsafeReturnTypeOverride(MethodBinding currentMethod, MethodBinding inheritedMethod, SourceTypeBinding type)", "diff": ["-\tif (currentMethod.declaringClass == type) {", "+\tif (TypeBinding.equalsEquals(currentMethod.declaringClass, type)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6b4c5e9352a814697f756e9902090058", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\t\t\t\t&& ((FieldBinding)this.binding).original().declaringClass == this.actualReceiverType.erasure()", "+\t\t\t\t\t\t\t&& TypeBinding.equalsEquals(((FieldBinding)this.binding).original().declaringClass, this.actualReceiverType.erasure())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c4eb3996a94469b0a1ca248c316f581", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 41, "methodNumberAfterChange": 41, "signatureBeforeChange": "  \tprivate boolean addDependencies(BoundSet boundSet, Set<InferenceVariable> variableSet, InferenceVariable currentVariable, int min)", "signatureAfterChange": "  \tprivate boolean addDependencies(BoundSet boundSet, Set<InferenceVariable> variableSet, InferenceVariable currentVariable, int min)", "diff": ["-\t\t\tif (nextVariable == currentVariable) continue; //$IDENTITY-COMPARISON$ Inference variables", "+\t\t\tif (TypeBinding.equalsEquals(nextVariable, currentVariable)) continue;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6ce7978637107a61e75d7e3116841f24", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private IType findSuperClass(IGenericType type, ReferenceBinding typeBinding)", "signatureAfterChange": " private IType findSuperClass(IGenericType type, ReferenceBinding typeBinding)", "diff": ["-\t\t\tif (this.typeBindings[t] == superBinding) {", "+\t\t\tif (TypeBinding.equalsEquals(this.typeBindings[t], superBinding)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e9301ce9345fa0017bedae84561b6e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "83b2f6a03c3dc62e9f0da4478de073882f53022b", "commitAfterChange": "3b7e9a0f1d7c1bcba3808ca366020fd264fda3dd", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\tif (match == castType) {", "+\tif (TypeBinding.equalsEquals(match, castType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6f1228184fcd07dd1d0c0b30fd821079", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge)", "signatureAfterChange": " public SyntheticMethodBinding addSyntheticBridgeMethod(MethodBinding inheritedMethodToBridge)", "diff": ["-\t\t\t\t\t&& inheritedMethodToBridge.returnType.erasure() == method.returnType.erasure()", "+\t\t\t\t\t&& TypeBinding.equalsEquals(inheritedMethodToBridge.returnType.erasure(), method.returnType.erasure())"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70aefdefd6b017bb0246b6e257469280", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  public void complainIfUnusedExceptionHandlers(AbstractMethodDeclaration method)", "signatureAfterChange": "  public void complainIfUnusedExceptionHandlers(AbstractMethodDeclaration method)", "diff": ["-\t\t\t\tif (docCommentReferences[j] == this.handledExceptions[i]) {", "+\t\t\t\tif (TypeBinding.equalsEquals(docCommentReferences[j], this.handledExceptions[i])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76ef2eac5d0d6c470b42a7f8873c579e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t\tprivate boolean hasDependency(Set<TypeBound> someBounds, InferenceVariable var)", "signatureAfterChange": " \t\tprivate boolean hasDependency(Set<TypeBound> someBounds, InferenceVariable var)", "diff": ["+\t\t// pre: var is a prototype", "-\t\t\t\tif (bound.right == var || bound.right.mentionsAny(new TypeBinding[] {var}, -1)) //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\t\t\tif (TypeBinding.equalsEquals(bound.right, var) || bound.right.mentionsAny(new TypeBinding[] {var}, -1))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "796961931dbc9c29bbf64c3f78734c6b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 72, "methodNumberAfterChange": 72, "signatureBeforeChange": " \t \tpublic boolean isBoxingCompatibleWith(TypeBinding expressionType, TypeBinding targetType)", "signatureAfterChange": " \t \tpublic boolean isBoxingCompatibleWith(TypeBinding expressionType, TypeBinding targetType)", "diff": ["-\t\treturn convertedType == targetType || convertedType.isCompatibleWith(targetType);", "+\t\treturn TypeBinding.equalsEquals(convertedType, targetType) || convertedType.isCompatibleWith(targetType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82d20caa2de6cf3ad1d86741ee289ac7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 133, "methodNumberAfterChange": 133, "signatureBeforeChange": "  public void hierarchyCircularity(TypeVariableBinding type, ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": "  public void hierarchyCircularity(TypeVariableBinding type, ReferenceBinding superType, TypeReference reference)", "diff": ["-\tif (type == superType)", "+\tif (TypeBinding.equalsEquals(type, superType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "850bf710600b707719896f836e20b763", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic ParameterizedMethodBinding(final ParameterizedTypeBinding parameterizedDeclaringClass, MethodBinding originalMethod)", "signatureAfterChange": " \tpublic ParameterizedMethodBinding(final ParameterizedTypeBinding parameterizedDeclaringClass, MethodBinding originalMethod)", "diff": ["-\t\t\t\t\tfirstBound = originalVariable.firstBound == originalVariable.superclass", "+\t\t\t\t\tfirstBound = TypeBinding.equalsEquals(originalVariable.firstBound, originalVariable.superclass)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "861442846c1a203fae4e00ba4f1a9c23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 75, "methodNumberAfterChange": 75, "signatureBeforeChange": " \tpublic final boolean isDefinedInSameUnit(ReferenceBinding type)", "signatureAfterChange": " \tpublic final boolean isDefinedInSameUnit(ReferenceBinding type)", "diff": ["-\t\t\tif (topLevelTypes[i] == enclosingType.original())", "+\t\t\tif (TypeBinding.equalsEquals(topLevelTypes[i], enclosingType.original()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8f918d61cd59009ef600af9fcca38e68", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeVariableImpl.java", "commitBeforeChange": "017f9918b88fff3a8fea9daac2df2ba8b7e560d6", "commitAfterChange": "5066a165665c172193991ef548a06f9b6acd680e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic TypeMirror getUpperBound()", "signatureAfterChange": " \t@Override \tpublic TypeMirror getUpperBound()", "diff": ["-\t\tif (firstBound != null && superInterfaces.length == 1 && superInterfaces[0] == firstBound) {", "+\t\tif (firstBound != null && superInterfaces.length == 1 && TypeBinding.equalsEquals(superInterfaces[0], firstBound)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90462ff30b0a2b75e1c84f14d9c040d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SingleNameReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t\t\t\t&& fieldBinding.declaringClass == currentScope.enclosingReceiverType()) { // inherited fields are not tracked here", "+\t\t\t\t\t\t&& TypeBinding.equalsEquals(fieldBinding.declaringClass, currentScope.enclosingReceiverType())) { // inherited fields are not tracked here"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90c4a1e4a97d21f17e94cda4705db407", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": "  public void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t&& (this.indexOfFirstFieldBinding == 1 || lastFieldBinding.declaringClass == currentScope.enclosingReceiverType())", "+\t\t\t\t\t\t\t\t\t\t\t&& (this.indexOfFirstFieldBinding == 1 || TypeBinding.equalsEquals(lastFieldBinding.declaringClass, currentScope.enclosingReceiverType()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90e6d11c69dc110cd98fe11c38997e5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " public void generateSyntheticEnclosingInstanceValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, ASTNode invocationSite)", "signatureAfterChange": " public void generateSyntheticEnclosingInstanceValues(BlockScope currentScope, ReferenceBinding targetType, Expression enclosingInstance, ASTNode invocationSite)", "diff": ["-\t\t\tif (hasExtraEnclosingInstance && syntheticArgType == targetEnclosingType) {", "+\t\t\tif (hasExtraEnclosingInstance && TypeBinding.equalsEquals(syntheticArgType, targetEnclosingType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92cdce58da5711337c4f69bb83eff378", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic void resolveStatements()", "signatureAfterChange": "  \tpublic void resolveStatements()", "diff": ["-\t\t\t\tif (returnsUndeclTypeVar && this.typeParameters[i].binding == this.returnType.resolvedType) {", "+\t\t\t\tif (returnsUndeclTypeVar && TypeBinding.equalsEquals(this.typeParameters[i].binding, this.returnType.resolvedType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "95e0797029bfcf2e3bbbcede303a7a82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/IntersectionCastTypeReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope scope, boolean checkBounds)", "diff": ["-\t\t\t\tif (intersectingTypes[j] == type) {", "+\t\t\t\tif (TypeBinding.equalsEquals(intersectingTypes[j], type)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d761a938d01cd0b8fd230a164ed3898", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/TypeParameterElementImpl.java", "commitBeforeChange": "017f9918b88fff3a8fea9daac2df2ba8b7e560d6", "commitAfterChange": "5066a165665c172193991ef548a06f9b6acd680e", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate List<? extends TypeMirror> calculateBounds()", "signatureAfterChange": " \tprivate List<? extends TypeMirror> calculateBounds()", "diff": ["-\t\t\tif (firstClassOrArrayBound == varSuperclass) {", "+\t\t\tif (TypeBinding.equalsEquals(firstClassOrArrayBound, varSuperclass)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a380e23d93930c2e2601fc28fd76bae0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "signatureAfterChange": " public void fieldHiding(FieldDeclaration fieldDecl, Binding hiddenVariable)", "diff": ["-\t\t\t&& TypeBinding.LONG == field.type) {", "+\t\t\t&& TypeBinding.equalsEquals(TypeBinding.LONG, field.type)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a9a9ff1e9569e9718281eeee8d1b6404", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "4106ed4f2c445aec08a08761ce48c9289a12d1a9", "commitAfterChange": "af0e25a1d5ee864ea84d164d70f77532a60cf58e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " void checkInheritedMethods(MethodBinding[] methods, int length, boolean[] isOverridden, boolean[] isInherited)", "signatureAfterChange": " void checkInheritedMethods(MethodBinding[] methods, int length, boolean[] isOverridden, boolean[] isInherited)", "diff": ["-\t\t\t\t\tif (concreteMethod.declaringClass == methods[i].declaringClass ", "+\t\t\t\t\tif (TypeBinding.equalsEquals(concreteMethod.declaringClass, methods[i].declaringClass) "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ab30def87fedbc53c17bca39fe5bcd5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " boolean canSkipInheritedMethods(MethodBinding one, MethodBinding two)", "signatureAfterChange": " boolean canSkipInheritedMethods(MethodBinding one, MethodBinding two)", "diff": ["-\t\t|| one.declaringClass == two.declaringClass;", "+\t\t|| TypeBinding.equalsEquals(one.declaringClass, two.declaringClass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b119698a165a97390f030c89067252f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/TypeDeclaration.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public TypeDeclaration declarationOf(MemberTypeBinding memberTypeBinding)", "signatureAfterChange": " public TypeDeclaration declarationOf(MemberTypeBinding memberTypeBinding)", "diff": ["-\t\t\tif ((memberTypeDecl = this.memberTypes[i]).binding == memberTypeBinding)", "+\t\t\tif (TypeBinding.equalsEquals((memberTypeDecl = this.memberTypes[i]).binding, memberTypeBinding))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b25891c1f1c76a446816b5fe74843452", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic char[] genericSignature()", "signatureAfterChange": " \tpublic char[] genericSignature()", "diff": ["-\t    if (interfaceLength == 0 || this.firstBound == this.superclass) {", "+\t    if (interfaceLength == 0 || TypeBinding.equalsEquals(this.firstBound, this.superclass)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b2cd1603ee01974c16a3c3eabd0d15e9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tprivate void computeExpectedTypesForMessageSendForInterface( \t\tReferenceBinding binding, \t\tchar[] selector, \t\tExpression[] arguments, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean isStatic)", "signatureAfterChange": " \tprivate void computeExpectedTypesForMessageSendForInterface( \t\tReferenceBinding binding, \t\tchar[] selector, \t\tExpression[] arguments, \t\tReferenceBinding receiverType, \t\tScope scope, \t\tInvocationSite invocationSite, \t\tboolean isStatic)", "diff": ["-\t\t\t\t\t\t\tif (next == interfacesToVisit[b]) continue nextInterface;", "+\t\t\t\t\t\t\tif (TypeBinding.equalsEquals(next, interfacesToVisit[b])) continue nextInterface;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be2fedc99221ff3f72d180fd9bc85708", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier15.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " boolean canSkipInheritedMethods(MethodBinding one, MethodBinding two)", "signatureAfterChange": " boolean canSkipInheritedMethods(MethodBinding one, MethodBinding two)", "diff": ["-\t\t|| (one.declaringClass == two.declaringClass && !one.declaringClass.isParameterizedType());", "+\t\t|| (TypeBinding.equalsEquals(one.declaringClass, two.declaringClass) && !one.declaringClass.isParameterizedType());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1da88880481e0a40f816ce52968d6ac", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": "  boolean isSameClassOrSubclassOf(ReferenceBinding testClass, ReferenceBinding superclass)", "signatureAfterChange": "  boolean isSameClassOrSubclassOf(ReferenceBinding testClass, ReferenceBinding superclass)", "diff": ["-\t\tif (testClass == superclass) return true;", "+\t\tif (TypeBinding.equalsEquals(testClass, superclass)) return true;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5b11e662308f3a5f7ef4fadd8ff7417", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": "  public void hierarchyCircularity(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "signatureAfterChange": "  public void hierarchyCircularity(SourceTypeBinding sourceType, ReferenceBinding superType, TypeReference reference)", "diff": ["-\tif (sourceType == superType)", "+\tif (TypeBinding.equalsEquals(sourceType, superType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c787d9ebcdb624a935a34f8ba1dd3eed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/ThrownExceptionFinder.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void removeCaughtException(ReferenceBinding caughtException)", "signatureAfterChange": "  \tprivate void removeCaughtException(ReferenceBinding caughtException)", "diff": ["-\t\t\t\tif (exception == caughtException) {", "+\t\t\t\tif (TypeBinding.equalsEquals(exception, caughtException)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c953f38165fb49cd1b35b808519c1ea8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  \tprivate ReferenceBinding[] getFilteredExceptions(MethodBinding method)", "signatureAfterChange": "  \tprivate ReferenceBinding[] getFilteredExceptions(MethodBinding method)", "diff": ["-\t\t\t\tif (currentException == allExceptions[j]) {", "+\t\t\t\tif (TypeBinding.equalsEquals(currentException, allExceptions[j])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9e3c004f1ec0915b6e477234d705dfc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/CatchParameterBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tpublic void setPreciseType(TypeBinding raisedException)", "signatureAfterChange": "  \tpublic void setPreciseType(TypeBinding raisedException)", "diff": ["-\t\t\tif (this.preciseTypes[i] == raisedException)", "+\t\t\tif (TypeBinding.equalsEquals(this.preciseTypes[i], raisedException))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbdca7076d481148fca3d0ffd37961b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  \tprivate int computeRelevanceForInheritance(ReferenceBinding receiverType, ReferenceBinding declaringClass)", "signatureAfterChange": "  \tprivate int computeRelevanceForInheritance(ReferenceBinding receiverType, ReferenceBinding declaringClass)", "diff": ["-\t\tif (receiverType == declaringClass) return R_NON_INHERITED;", "+\t\tif (TypeBinding.equalsEquals(receiverType, declaringClass)) return R_NON_INHERITED;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cec3e1e3fc173d4a9f16f266e4ff5363", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": "  public boolean tIsMoreSpecific(TypeBinding t, TypeBinding s)", "signatureAfterChange": "  public boolean tIsMoreSpecific(TypeBinding t, TypeBinding s)", "diff": ["-\tif (t.findSuperTypeOriginatingFrom(s) == s)", "+\tif (TypeBinding.equalsEquals(t.findSuperTypeOriginatingFrom(s), s))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfd16e1528ed1293c566e27686c0c87c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "  \tpublic void checkParameterizedSuperTypeCollisions()", "signatureAfterChange": "  \tpublic void checkParameterizedSuperTypeCollisions()", "diff": ["-\t\t\t\tboolean checkSuperclass = typeVariable.firstBound == typeVariable.superclass;", "+\t\t\t\tboolean checkSuperclass = TypeBinding.equalsEquals(typeVariable.firstBound, typeVariable.superclass);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d272874cc75988c25cd3115133fe22b1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void propagateInnerEmulation(ReferenceBinding targetType, boolean isEnclosingInstanceSupplied)", "signatureAfterChange": " public void propagateInnerEmulation(ReferenceBinding targetType, boolean isEnclosingInstanceSupplied)", "diff": ["-\t\t\t\t&& (syntheticArg.type == targetType.enclosingType()))) {", "+\t\t\t\t&& (TypeBinding.equalsEquals(syntheticArg.type, targetType.enclosingType())))) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d7aa508db92d433971153d22b7042bbe", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 491, "methodNumberAfterChange": 491, "signatureBeforeChange": " public void unusedPrivateField(FieldDeclaration fieldDecl)", "signatureAfterChange": " public void unusedPrivateField(FieldDeclaration fieldDecl)", "diff": ["-\t\t\t&& TypeBinding.LONG == field.type) {", "+\t\t\t&& TypeBinding.equalsEquals(TypeBinding.LONG, field.type)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9d7febf0a910536315882bb859a6d21", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BoundSet.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": "  \tprivate ConstraintTypeFormula combineSameSame(TypeBound boundS, TypeBound boundT)", "signatureAfterChange": "  \tprivate ConstraintTypeFormula combineSameSame(TypeBound boundS, TypeBound boundT)", "diff": ["-\t\tif (boundS.left == boundT.left) //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\tif (TypeBinding.equalsEquals(boundS.left, boundT.left))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dcbe00592ff664c1eddd5ff0ba159741", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 173, "methodNumberAfterChange": 173, "signatureBeforeChange": " \tprivate void findLocalMethodsFromStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tboolean exactMatch, \t\tObjectVector methodsFound, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tprivate void findLocalMethodsFromStaticImports( \t\tchar[] methodName, \t\tMethodBinding[] methods, \t\tScope scope, \t\tboolean exactMatch, \t\tObjectVector methodsFound, \t\tReferenceBinding receiverType, \t\tInvocationSite invocationSite)", "diff": ["-\t\t\t\tif (method == otherMethod && receiverType == otherReceiverType)", "+\t\t\t\tif (method == otherMethod && TypeBinding.equalsEquals(receiverType, otherReceiverType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e148278986ee4fc45225e97885f5346c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/ExceptionHandlingFlowContext.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  private ASTNode getExceptionType(int index)", "signatureAfterChange": "  private ASTNode getExceptionType(int index)", "diff": ["-\t\t\tif (typeRef.resolvedType == this.handledExceptions[index]) return typeRef;", "+\t\t\tif (TypeBinding.equalsEquals(typeRef.resolvedType, this.handledExceptions[index])) return typeRef;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e4ad3ab887f25c538a70253193f53df2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "signatureAfterChange": "  public boolean checkUnsafeCast(Scope scope, TypeBinding castType, TypeBinding expressionType, TypeBinding match, boolean isNarrowing)", "diff": ["-\tif (match == castType) {", "+\tif (TypeBinding.equalsEquals(match, castType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e732cfe3611ab7ab2b90e9294272d990", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " public void annotationCircularity(TypeBinding sourceType, TypeBinding otherType, TypeReference reference)", "signatureAfterChange": " public void annotationCircularity(TypeBinding sourceType, TypeBinding otherType, TypeReference reference)", "diff": ["-\tif (sourceType == otherType)", "+\tif (TypeBinding.equalsEquals(sourceType, otherType))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ed42c3f434eba7c2ab651960525e0351", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tboolean hasOnlyRawBounds()", "signatureAfterChange": "  \tboolean hasOnlyRawBounds()", "diff": ["-\t\tif (this.superclass != null && this.firstBound == this.superclass)", "+\t\tif (this.superclass != null && TypeBinding.equalsEquals(this.firstBound, this.superclass))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4b6a97371db11b21d107eec61eed996", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeVariableBinding.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": "  \tpublic TypeBinding[] otherUpperBounds()", "signatureAfterChange": "  \tpublic TypeBinding[] otherUpperBounds()", "diff": ["-\t\tif (this.firstBound == this.superclass)", "+\t\tif (TypeBinding.equalsEquals(this.firstBound, this.superclass))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f52462823cf5fae10fffc8f6e75bb687", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "signatureAfterChange": " public static void checkNeedForArgumentCasts(BlockScope scope, Expression receiver, TypeBinding receiverType, MethodBinding binding, Expression[] arguments, TypeBinding[] argumentTypes, final InvocationSite invocationSite)", "diff": ["-\t\t\tif (castedExpressionType == argumentTypes[i]) {", "+\t\t\tif (TypeBinding.equalsEquals(castedExpressionType, argumentTypes[i])) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5a718b5ebb06520e598350d37b603f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/TypeBound.java", "commitBeforeChange": "82adc87bce1ed4088802638154568eeec8ab8e88", "commitAfterChange": "b1c69f20f23ddb575225e5b5cb5d470714f41aad", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic boolean equals(Object obj)", "signatureAfterChange": " \tpublic boolean equals(Object obj)", "diff": ["-\t\t\treturn this.left == other.left && TypeBinding.equalsEquals(this.right, other.right) && this.relation == other.relation; //$IDENTITY-COMPARISON$ InferenceVariable", "+\t\t\treturn TypeBinding.equalsEquals(this.left, other.left) && TypeBinding.equalsEquals(this.right, other.right) && this.relation == other.relation;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f66fbc5c4413831d4a25b4d49dde084a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FieldReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "signatureAfterChange": "  public FlowInfo analyseAssignment(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, Assignment assignment, boolean isCompound)", "diff": ["-\t\t\t&& this.receiver.resolvedType == this.binding.declaringClass // inherited fields are not tracked here", "+\t\t\t&& TypeBinding.equalsEquals(this.receiver.resolvedType, this.binding.declaringClass) // inherited fields are not tracked here"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f80658a1e67328de4b53243ebd20e5b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": "  ProblemReporter problemReporter(MethodBinding currentMethod)", "signatureAfterChange": "  ProblemReporter problemReporter(MethodBinding currentMethod)", "diff": ["-\tif (currentMethod.declaringClass == this.type && currentMethod.sourceMethod() != null)\t// only report against the currentMethod if its implemented by the type", "+\tif (TypeBinding.equalsEquals(currentMethod.declaringClass, this.type) && currentMethod.sourceMethod() != null)\t// only report against the currentMethod if its implemented by the type"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb32603167037193eadcad124314ca77", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetQualifiedNameReference.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public TypeBinding checkFieldAccess(BlockScope scope)", "signatureAfterChange": " public TypeBinding checkFieldAccess(BlockScope scope)", "diff": ["-\t\t\t&& methodScope.enclosingSourceType() == declaringClass", "+\t\t\t&& TypeBinding.equalsEquals(methodScope.enclosingSourceType(), declaringClass)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb45f200efd4c03fd855b1073c0fbaf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": " \t \tprivate int parameterCompatibilityLevel(TypeBinding arg, TypeBinding param, LookupEnvironment env, boolean tieBreakingVarargsMethods)", "signatureAfterChange": " \t \tprivate int parameterCompatibilityLevel(TypeBinding arg, TypeBinding param, LookupEnvironment env, boolean tieBreakingVarargsMethods)", "diff": ["-\t\t\tif (convertedType == param || convertedType.isCompatibleWith(param))", "+\t\t\tif (TypeBinding.equalsEquals(convertedType, param) || convertedType.isCompatibleWith(param))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fb5f63fea80ae7ef523d78a701da519d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static AnnotationBinding [] resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient, boolean copySE8AnnotationsToType)", "signatureAfterChange": " \tpublic static AnnotationBinding [] resolveAnnotations(BlockScope scope, Annotation[] sourceAnnotations, Binding recipient, boolean copySE8AnnotationsToType)", "diff": ["-\t\t\t\t\tif (otherAnnotation.getAnnotationType() == annotationType) {", "+\t\t\t\t\tif (TypeBinding.equalsEquals(otherAnnotation.getAnnotationType(), annotationType)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fda1b3abc34bac963abbc6e4862c6da5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "a38d26ea4f2f03195744026af44f070900d21cea", "commitAfterChange": "72578ba43287462a0c91a7de026e07610ac80a95", "methodNumberBeforeChange": 180, "methodNumberAfterChange": 180, "signatureBeforeChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "signatureAfterChange": " \tprivate void findMemberTypes( \t\tchar[] typeName, \t\tReferenceBinding[] memberTypes, \t\tObjectVector typesFound, \t\tReferenceBinding receiverType, \t\tSourceTypeBinding invocationType, \t\tboolean staticOnly, \t\tboolean staticFieldsAndMethodOnly, \t\tboolean fromStaticImport, \t\tboolean checkQualification, \t\tScope scope, \t\tBinding[] missingElements, \t\tint[] missingElementsStarts, \t\tint[] missingElementsEnds, \t\tboolean missingElementsHaveProblems)", "diff": ["-\t\t\t\tif (memberType == otherType)", "+\t\t\t\tif (TypeBinding.equalsEquals(memberType, otherType))"]}], "num": 68262}