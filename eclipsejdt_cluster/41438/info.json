{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "6ec47f3f0cc586b0239479af4e30a30f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07feefd74f1e4a22a04f18c5aa1dd512", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaSearchTests.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \t\tprotected void append(IField field) throws JavaModelException", "signatureAfterChange": " \t\tprotected void append(IAnnotation annotation) throws JavaModelException", "diff": ["+\t\tprotected void append(IAnnotation annotation) throws JavaModelException {", "+\t\t\tline.append(\"@\");", "+\t\t\tline.append(annotation.getElementName());", "+\t\t\tline.append('(');", "+\t\t\tIMemberValuePair[] pairs = annotation.getMemberValuePairs();", "+\t\t\tint length = pairs == null ? 0 : pairs.length;", "+\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\tline.append(pairs[i].getMemberName());", "+\t\t\t\tline.append('=');", "+\t\t\t\tObject value = pairs[i].getValue();", "+\t\t\t\tswitch (pairs[i].getValueKind()) {", "+\t\t\t\t\tcase IMemberValuePair.K_CLASS:", "+\t\t\t\t\t\tline.append(value);", "+\t\t\t\t\t\tline.append(\".class\");", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tdefault:", "+\t\t\t\t\t\tline.append(value);", "+\t\t\t\t\tbreak;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tline.append(')');", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9f5030e75b16867e4d68d7f547cf5f3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/junit/extension/TestCase.java", "commitBeforeChange": "ac7c104cc39c5e68079fabb4375be3bd00f62981", "commitAfterChange": "a066e157e07228bf479c3f3d0f88167910651951", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": "  private String format(long number)", "signatureAfterChange": " private String format(long number)", "diff": ["-", "-\tStringBuffer buffer = new StringBuffer();", "-\tlong q = n / 1000L;", "-\tint r = (int) (n - q*1000);", "-\tbuffer.append(r);", "-//\tint x = 0;", "+\tlong q = n;", "+\tint[] values = new int[10];", "+\tint m = -1;", "-\t\tr = (int) (n - q*1000);", "-\t\tbuffer = new StringBuffer()", "-\t\t\t.append(r)", "-\t\t\t.append(',')", "-\t\t\t.append(buffer);", "-//\t\tx++;", "+\t\tvalues[++m] = (int) (n - q*1000);", "-//\tswitch (x) {", "-//\t\tcase 1:", "-//\t\t\tbuffer.append('K');", "-//\t\t\tbreak;", "-//\t\tcase 2:", "-//\t\t\tbuffer.append('M');", "-//\t\t\tbreak;", "-//\t}", "+\tStringBuffer buffer = new StringBuffer();", "+\tbuffer.append(values[m]);", "+\tfor (int i=m-1; i>=0; i--) {", "+\t\tbuffer.append(',').append(DIGIT_FORMAT.format(values[i]));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fad171919afde080d7be7aa56b0f037c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/TypeAnnotationSyntaxTest.java", "commitBeforeChange": "f0cc0529135fe43e5b6252dca937651f0a04d49c", "commitAfterChange": "79c1182746ff2f44f9956aeaf2f61882a4911acb", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r \t\tpublic void storeLocations(Annotation annotation, int[] tab)", "signatureAfterChange": "\r \t\tpublic void storeLocations(Annotation annotation, int[] tab)", "diff": ["-\t\t\tStringBuffer buffer = new StringBuffer(\"{\");\r", "-\t\t\tfor (int i = 0, max = tab.length; i < max; i++) {\r", "+\t\t\t\r", "+\t\t\tStringBuffer buffer = new StringBuffer(\"[\");\r", "+\t\t\tfor (int i = 0, max = tab.length; i < max; i += 2) {\r", "-\t\t\t\t\tbuffer.append(',');\r", "+\t\t\t\t\tbuffer.append(\", \");\r", "-\t\t\t\tbuffer.append(tab[i]);\r", "+\t\t\t\tswitch (tab[i]) {\r", "+\t\t\t\tcase 0:\r", "+\t\t\t\t\tbuffer.append(\"ARRAY\");\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase 1:\r", "+\t\t\t\t\tbuffer.append(\"INNER_TYPE\");\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase 2:\r", "+\t\t\t\t\tbuffer.append(\"WILDCARD\");\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\tcase 3:\r", "+\t\t\t\t\tbuffer.append(\"TYPE_ARGUMENT(\").append(tab[i+1]).append(')');\r", "+\t\t\t\t\tbreak;\r", "+\t\t\t\t}\r", "-\t\t\tbuffer.append('}');\r", "+\t\t\tbuffer.append(']');\r"]}], "num": 41438}