{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "acc58ca2127ccf2192bfd2b03d228aee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85bd09cc3ac7b67855080829baa428e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "c31c921d319cbf1346e5bfb26cf42ff15297484d", "commitAfterChange": "2becf6dcab514ae8708935b2b42eed94f2bad821", "methodNumberBeforeChange": 161, "methodNumberAfterChange": 161, "signatureBeforeChange": " \tpublic void test050b()", "signatureAfterChange": " \tpublic void test050b()", "diff": ["-\t\t\t\"1. ERROR in X.java (at line 3)\\n\" +", "-\t\t\t\"\tY foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C1\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" +", "+\t\t\t\"1. ERROR in X.java (at line 4)\\n\" +", "-\t\t\t\"3. ERROR in X.java (at line 11)\\n\" +", "-\t\t\t\"\tA<Y> foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t     ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C3\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"4. ERROR in X.java (at line 12)\\n\" +", "+\t\t\t\"2. ERROR in X.java (at line 12)\\n\" +", "-\t\t\t\"5. ERROR in X.java (at line 15)\\n\" +", "-\t\t\t\"\tY foo(Object o) {  return null; } // duplicate\\n\" +", "-\t\t\t\"\t  ^^^^^^^^^^^^^\\n\" +", "-\t\t\t\"Duplicate method foo(Object) in type X.C4\\n\" +", "-\t\t\t\"----------\\n\" +", "-\t\t\t\"6. ERROR in X.java (at line 16)\\n\" +", "+\t\t\t\"3. ERROR in X.java (at line 16)\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dc642de1d276e31d1fd5c218845915f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "4bca3a5b750a1427c84a78f92ee835c1f5e75da7", "commitAfterChange": "65cffea518e323981e83002b5b2ff520f43d6c58", "methodNumberBeforeChange": 98, "methodNumberAfterChange": 98, "signatureBeforeChange": " \tpublic void test088()", "signatureAfterChange": " \tpublic void test088()", "diff": ["-\t\t\t\"Name clash: The method addAll(Collection<? extends E>) of type ArrayList<T0> has the same erasure as addAll(Collection<? extends E>) of type Collection<String> but does not override it\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"3. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0>,Runnable {\\n\" + ", "-\t\t\t\"\t             ^\\n\" + ", "-\t\t\t\"The type X<T0> must implement the inherited abstract method Collection<String>.addAll(Collection<? extends String>)\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0>,Runnable {\\n\" + ", "-\t\t\t\"\t             ^\\n\" + ", "-\t\t\t\"5. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0>,Runnable {\\n\" + ", "-\t\t\t\"\t             ^\\n\" + ", "-\t\t\t\"The type X<T0> must implement the inherited abstract method Collection<String>.add(String)\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. ERROR in X.java (at line 2)\\n\" + ", "-\t\t\t\"\tpublic class X<T0> extends ArrayList<T0> implements I<T0>,Runnable {\\n\" + ", "-\t\t\t\"\t             ^\\n\" + ", "-\t\t\t\"The return type is incompatible with Iterable<String>.iterator(), Collection<String>.iterator(), AbstractList<T0>.iterator()\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"7. WARNING in X.java (at line 2)\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 2)\\n\" + ", "-\t\t\t\"8. ERROR in X.java (at line 5)\\n\" + ", "+\t\t\t\"4. ERROR in X.java (at line 5)\\n\" + "]}], "num": 41917}