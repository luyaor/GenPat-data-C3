{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf7a3241b7b0d7663a00d3046b685539", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "78d111afc41e14740713ed4ccd6ecff4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "commitAfterChange": "5bb01926d23a6cf003d0d521691c391ac08b77a7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 13, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\t\tbuffer", "-\t\t\t.append(Util.bind(\"disassembler.commentstart\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"classfileformat.maxStack\")) //$NON-NLS-1$", "-\t\t\t.append(codeAttribute.getMaxStack())", "-\t\t\t.append(Util.bind(\"disassembler.comma\")) //$NON-NLS-1$", "-\t\t\t.append(Util.bind(\"classfileformat.maxLocals\")) //$NON-NLS-1$", "-\t\t\t.append(codeAttribute.getMaxLocals())", "-\t\t\t.append(Util.bind(\"disassembler.commentend\")); //$NON-NLS-1$", "-\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "-\t\tbuffer.append(Util.bind(\"disassembler.codeattributeheader\")); //$NON-NLS-1$", "-\t\tDefaultBytecodeVisitor visitor = new DefaultBytecodeVisitor(codeAttribute.getCodeLength(), buffer, lineSeparator, tabNumber + 1);", "+\t\tDefaultBytecodeVisitor visitor = new DefaultBytecodeVisitor(codeAttribute.getCodeLength(), buffer, lineSeparator, tabNumber);", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\tfinal int tabNumberForExceptionAttribute = tabNumber + 2;", "+\t\t\tdumpTab(tabNumberForExceptionAttribute, buffer);", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "-\t\t\tfor (int i = 0; i < exceptionTableLength; i++) {", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForExceptionAttribute + 1);", "+\t\t\tfor (int i = 0; i < exceptionTableLength - 1; i++) {", "-\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForExceptionAttribute + 1);", "+\t\t\tIExceptionTableEntry exceptionTableEntry = exceptionTableEntries[exceptionTableLength - 1];", "+\t\t\tbuffer", "+\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablefrom\")) //$NON-NLS-1$", "+\t\t\t\t.append(exceptionTableEntry.getStartPC())", "+\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontableto\")) //$NON-NLS-1$", "+\t\t\t\t.append(exceptionTableEntry.getEndPC())", "+\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablegoto\")) //$NON-NLS-1$", "+\t\t\t\t.append(exceptionTableEntry.getHandlerPC())", "+\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablewhen\")); //$NON-NLS-1$", "+\t\t\tif (exceptionTableEntry.getCatchTypeIndex() == 0) {", "+\t\t\t\tbuffer.append(ANY_EXCEPTION);", "+\t\t\t} else {", "+\t\t\t\tchar[] catchType = exceptionTableEntry.getCatchType();", "+\t\t\t\tCharOperation.replace(catchType, '/', '.');", "+\t\t\t\tbuffer.append(catchType);", "+\t\t\t}", "+\t\t\twriteNewLine(buffer, lineSeparator, 0);", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\tint tabNumberForLineAttribute = tabNumber + 2;", "+\t\t\tdumpTab(tabNumberForLineAttribute, buffer);", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLineAttribute + 1);", "-\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLineAttribute + 1);", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 1);", "+\t\t\tint tabNumberForLocalVariableAttribute = tabNumber + 2;", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLocalVariableAttribute);", "-\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLocalVariableAttribute + 1);", "+\t\t\t\tint index= localVariableTableEntry.getIndex();", "-\t\t\t\tchar[] exceptionType = Signature.toCharArray(localVariableTableEntry.getDescriptor());", "-\t\t\t\tCharOperation.replace(exceptionType, '/', '.');", "-\t\t\t\t\t.append(localVariableTableEntry.getIndex())", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(exceptionType);", "-\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumber + 2);", "+\t\t\t\t\t.append(index)", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(localVariableTableEntry.getDescriptor());", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLocalVariableAttribute + 1);", "+\t\t\tint index= localVariableTableEntry.getIndex();", "-\t\t\tchar[] exceptionType = Signature.toCharArray(localVariableTableEntry.getDescriptor());", "-\t\t\tCharOperation.replace(exceptionType, '/', '.');", "-\t\t\t\t.append(localVariableTableEntry.getIndex())", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")) //$NON-NLS-1$", "-\t\t\t\t.append(exceptionType);", "+\t\t\t\t.append(index)", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(localVariableTableEntry.getDescriptor());", "+\t\tILocalVariableTypeTableAttribute localVariableTypeAttribute= getLocalVariableTypeAttribute(codeAttribute);", "+\t\tint localVariableTypeTableLength = localVariableTypeAttribute == null ? 0 : localVariableTypeAttribute.getLocalVariableTypeTableLength();", "+\t\tif (localVariableTypeTableLength != 0) {", "+\t\t\tint tabNumberForLocalVariableAttribute = tabNumber + 2;", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLocalVariableAttribute);", "+\t\t\tbuffer.append(Util.bind(\"disassembler.localvariabletypetableattributeheader\")); //$NON-NLS-1$", "+\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLocalVariableAttribute + 1);", "+\t\t\tILocalVariableTypeTableEntry[] localVariableTypeTableEntries = localVariableTypeAttribute.getLocalVariableTypeTable();", "+\t\t\tfor (int i = 0; i < localVariableTypeTableLength - 1; i++) {", "+\t\t\t\tILocalVariableTypeTableEntry localVariableTypeTableEntry = localVariableTypeTableEntries[i];", "+\t\t\t\tint index= localVariableTypeTableEntry.getIndex();", "+\t\t\t\tint startPC = localVariableTypeTableEntry.getStartPC();", "+\t\t\t\tint length  = localVariableTypeTableEntry.getLength();", "+\t\t\t\tbuffer", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablefrom\")) //$NON-NLS-1$", "+\t\t\t\t\t.append(startPC)", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletableto\")) //$NON-NLS-1$", "+\t\t\t\t\t.append(startPC + length)", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalname\")) //$NON-NLS-1$", "+\t\t\t\t\t.append(localVariableTypeTableEntry.getName())", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalindex\")) //$NON-NLS-1$", "+\t\t\t\t\t.append(index)", "+\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(localVariableTypeTableEntry.getSignature());", "+\t\t\t\twriteNewLine(buffer, lineSeparator, tabNumberForLocalVariableAttribute + 1);", "+\t\t\t}", "+\t\t\tILocalVariableTypeTableEntry localVariableTypeTableEntry = localVariableTypeTableEntries[localVariableTypeTableLength - 1];", "+\t\t\tint index= localVariableTypeTableEntry.getIndex();", "+\t\t\tint startPC = localVariableTypeTableEntry.getStartPC();", "+\t\t\tint length  = localVariableTypeTableEntry.getLength();", "+\t\t\tbuffer", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablefrom\")) //$NON-NLS-1$", "+\t\t\t\t.append(startPC)", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletableto\")) //$NON-NLS-1$", "+\t\t\t\t.append(startPC + length)", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalname\")) //$NON-NLS-1$", "+\t\t\t\t.append(localVariableTypeTableEntry.getName())", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalindex\")) //$NON-NLS-1$", "+\t\t\t\t.append(index)", "+\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")) //$NON-NLS-1$", "+\t\t\t\t.append(localVariableTypeTableEntry.getSignature());", "+\t\t} ", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a5cc3ce68c8c8a76ae90a7e85274b0a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Disassembler.java", "commitBeforeChange": "bba2bca88efef9ed01c7e2181bcf1d41e5989888", "commitAfterChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "signatureAfterChange": " \t \tprivate void disassemble(ICodeAttribute codeAttribute, StringBuffer buffer, String lineSeparator, int tabNumber)", "diff": ["-\t\tDefaultBytecodeVisitor visitor = new DefaultBytecodeVisitor(codeAttribute.getCodeLength(), buffer, lineSeparator, tabNumber);", "+\t\tDefaultBytecodeVisitor visitor = new DefaultBytecodeVisitor(codeAttribute, buffer, lineSeparator, tabNumber);", "-\t\t\tbuffer.append(\"Class format Exception\");//$NON-NLS-1$", "+\t\t\tbuffer.append(Util.bind(\"classformat.classformatexception\"));//$NON-NLS-1$", "-\t\t\t\tbuffer", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablefrom\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(exceptionTableEntry.getStartPC())", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontableto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(exceptionTableEntry.getEndPC())", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablegoto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(exceptionTableEntry.getHandlerPC())", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablewhen\")); //$NON-NLS-1$", "-\t\t\t\tif (exceptionTableEntry.getCatchTypeIndex() == 0) {", "-\t\t\t\t\tbuffer.append(ANY_EXCEPTION);", "-\t\t\t\t} else {", "-\t\t\t\t\tchar[] catchType = exceptionTableEntry.getCatchType();", "+\t\t\t\tchar[] catchType;", "+\t\t\t\tif (exceptionTableEntry.getCatchTypeIndex() != 0) {", "+\t\t\t\t\tcatchType = exceptionTableEntry.getCatchType();", "-\t\t\t\t\tbuffer.append(catchType);", "+\t\t\t\t} else {", "+\t\t\t\t\tcatchType = ANY_EXCEPTION;", "+\t\t\t\tbuffer.append(Util.bind(\"classfileformat.exceptiontableentry\", //$NON-NLS-1$", "+\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\tInteger.toString(exceptionTableEntry.getStartPC()),", "+\t\t\t\t\t\tInteger.toString(exceptionTableEntry.getEndPC()),", "+\t\t\t\t\t\tInteger.toString(exceptionTableEntry.getHandlerPC()),", "+\t\t\t\t\t\tnew String(catchType)", "+\t\t\t\t\t}));", "-\t\t\tbuffer", "-\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablefrom\")) //$NON-NLS-1$", "-\t\t\t\t.append(exceptionTableEntry.getStartPC())", "-\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontableto\")) //$NON-NLS-1$", "-\t\t\t\t.append(exceptionTableEntry.getEndPC())", "-\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablegoto\")) //$NON-NLS-1$", "-\t\t\t\t.append(exceptionTableEntry.getHandlerPC())", "-\t\t\t\t.append(Util.bind(\"classfileformat.exceptiontablewhen\")); //$NON-NLS-1$", "-\t\t\tif (exceptionTableEntry.getCatchTypeIndex() == 0) {", "-\t\t\t\tbuffer.append(ANY_EXCEPTION);", "-\t\t\t} else {", "-\t\t\t\tchar[] catchType = exceptionTableEntry.getCatchType();", "+\t\t\tchar[] catchType;", "+\t\t\tif (exceptionTableEntry.getCatchTypeIndex() != 0) {", "+\t\t\t\tcatchType = exceptionTableEntry.getCatchType();", "-\t\t\t\tbuffer.append(catchType);", "+\t\t\t} else {", "+\t\t\t\tcatchType = ANY_EXCEPTION;", "+\t\t\tbuffer.append(Util.bind(\"classfileformat.exceptiontableentry\", //$NON-NLS-1$", "+\t\t\t\tnew String[] {", "+\t\t\t\t\tInteger.toString(exceptionTableEntry.getStartPC()),", "+\t\t\t\t\tInteger.toString(exceptionTableEntry.getEndPC()),", "+\t\t\t\t\tInteger.toString(exceptionTableEntry.getHandlerPC()),", "+\t\t\t\t\tnew String(catchType)", "+\t\t\t\t}));", "-\t\t\t\tbuffer", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertablefrom\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(lineattributesEntries[i][0])", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertableto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(lineattributesEntries[i][1])", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertableclose\")); //$NON-NLS-1$", "+\t\t\t\tbuffer.append(Util.bind(\"classfileformat.linenumbertableentry\", //$NON-NLS-1$", "+\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\tInteger.toString(lineattributesEntries[i][0]),", "+\t\t\t\t\t\tInteger.toString(lineattributesEntries[i][1])", "+\t\t\t\t\t}));", "-\t\t\tbuffer", "-\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertablefrom\")) //$NON-NLS-1$", "-\t\t\t\t.append(lineattributesEntries[lineAttributeLength - 1][0])", "-\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertableto\")) //$NON-NLS-1$", "-\t\t\t\t.append(lineattributesEntries[lineAttributeLength - 1][1])", "-\t\t\t\t.append(Util.bind(\"classfileformat.linenumbertableclose\")); //$NON-NLS-1$", "+\t\t\tbuffer.append(Util.bind(\"classfileformat.linenumbertableentry\", //$NON-NLS-1$", "+\t\t\t\tnew String[] {", "+\t\t\t\t\tInteger.toString(lineattributesEntries[lineAttributeLength - 1][0]),", "+\t\t\t\t\tInteger.toString(lineattributesEntries[lineAttributeLength - 1][1])", "+\t\t\t\t}));", "-\t\t\t\tbuffer", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablefrom\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(startPC)", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletableto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(startPC + length)", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalname\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(localVariableTableEntry.getName())", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalindex\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(index)", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")); //$NON-NLS-1$", "-\t\t\t\tbuffer.append(localVariableTableEntry.getDescriptor());", "+\t\t\t\tbuffer.append(Util.bind(\"classfileformat.localvariabletableentry\", //$NON-NLS-1$", "+\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\tInteger.toString(startPC),", "+\t\t\t\t\t\tInteger.toString(startPC + length),", "+\t\t\t\t\t\tnew String(localVariableTableEntry.getName()),", "+\t\t\t\t\t\tInteger.toString(index),", "+\t\t\t\t\t\tnew String(localVariableTableEntry.getDescriptor())", "+\t\t\t\t\t}));", "-\t\t\tbuffer", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablefrom\")) //$NON-NLS-1$", "-\t\t\t\t.append(startPC)", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletableto\")) //$NON-NLS-1$", "-\t\t\t\t.append(startPC + length)", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalname\")) //$NON-NLS-1$", "-\t\t\t\t.append(localVariableTableEntry.getName())", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalindex\")) //$NON-NLS-1$", "-\t\t\t\t.append(index)", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")); //$NON-NLS-1$", "-\t\t\tbuffer.append(localVariableTableEntry.getDescriptor());", "+\t\t\tbuffer.append(Util.bind(\"classfileformat.localvariabletableentry\", //$NON-NLS-1$", "+\t\t\t\tnew String[] {", "+\t\t\t\t\tInteger.toString(startPC),", "+\t\t\t\t\tInteger.toString(startPC + length),", "+\t\t\t\t\tnew String(localVariableTableEntry.getName()),", "+\t\t\t\t\tInteger.toString(index),", "+\t\t\t\t\tnew String(localVariableTableEntry.getDescriptor())", "+\t\t\t\t}));", "-\t\t\t\tbuffer", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablefrom\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(startPC)", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletableto\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(startPC + length)", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalname\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(localVariableTypeTableEntry.getName())", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalindex\")) //$NON-NLS-1$", "-\t\t\t\t\t.append(index)", "-\t\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")); //$NON-NLS-1$", "-\t\t\t\tbuffer.append(localVariableTypeTableEntry.getSignature());", "+\t\t\t\tbuffer.append(Util.bind(\"classfileformat.localvariabletableentry\", //$NON-NLS-1$", "+\t\t\t\t\tnew String[] {", "+\t\t\t\t\t\tInteger.toString(startPC),", "+\t\t\t\t\t\tInteger.toString(startPC + length),", "+\t\t\t\t\t\tnew String(localVariableTypeTableEntry.getName()),", "+\t\t\t\t\t\tInteger.toString(index),", "+\t\t\t\t\t\tnew String(localVariableTypeTableEntry.getSignature())", "+\t\t\t\t\t}));", "-\t\t\tbuffer", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablefrom\")) //$NON-NLS-1$", "-\t\t\t\t.append(startPC)", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletableto\")) //$NON-NLS-1$", "-\t\t\t\t.append(startPC + length)", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalname\")) //$NON-NLS-1$", "-\t\t\t\t.append(localVariableTypeTableEntry.getName())", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocalindex\")) //$NON-NLS-1$", "-\t\t\t\t.append(index)", "-\t\t\t\t.append(Util.bind(\"classfileformat.localvariabletablelocaltype\")) //$NON-NLS-1$", "-\t\t\t\t.append(localVariableTypeTableEntry.getSignature());", "+\t\t\tbuffer.append(Util.bind(\"classfileformat.localvariabletableentry\", //$NON-NLS-1$", "+\t\t\t\tnew String[] {", "+\t\t\t\t\tInteger.toString(startPC),", "+\t\t\t\t\tInteger.toString(startPC + length),", "+\t\t\t\t\tnew String(localVariableTypeTableEntry.getName()),", "+\t\t\t\t\tInteger.toString(index),", "+\t\t\t\t\tnew String(localVariableTypeTableEntry.getSignature())", "+\t\t\t\t}));"]}], "num": 27929}