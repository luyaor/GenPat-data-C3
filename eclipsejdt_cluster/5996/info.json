{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b9542680abd760bfc37d976818d466d1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "712bf1a1475a090791b35d3dd12e878c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "63893780bad36827f62e4f410f92f9cc758dcd3a", "commitAfterChange": "8e69a3a7281a71cf8bb89a21d1bb526115e1dbf1", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspathEntry(IJavaProject project, IClasspathEntry entry, boolean checkSourceAttachment, boolean recurseInContainers)", "diff": ["+\t\t\t\t\t\t\t// Validate extra attributes", "+\t\t\t\t\t\t\tIClasspathAttribute[] extraAttributes = entry.getExtraAttributes();", "+\t\t\t\t\t\t\tif (extraAttributes != null) {", "+\t\t\t\t\t\t\t\tint length = extraAttributes.length;", "+\t\t\t\t\t\t\t\tHashSet set = new HashSet(length);", "+\t\t\t\t\t\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\t\t\t\t\t\tString attName = extraAttributes[i].getName();", "+\t\t\t\t\t\t\t\t\tif (!set.add(attName)) {", "+\t\t\t\t\t\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.NAME_COLLISION, Messages.bind(Messages.classpath_duplicateEntryExtraAttribute, new String[] {attName, entryPathMsg, projectName})); ", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t}", "+", "+\t\t// Validate extra attributes", "+\t\tIClasspathAttribute[] extraAttributes = entry.getExtraAttributes();", "+\t\tif (extraAttributes != null) {", "+\t\t\tint length = extraAttributes.length;", "+\t\t\tHashSet set = new HashSet(length);", "+\t\t\tfor (int i=0; i<length; i++) {", "+\t\t\t\tString attName = extraAttributes[i].getName();", "+\t\t\t\tif (!set.add(attName)) {", "+\t\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.NAME_COLLISION, Messages.bind(Messages.classpath_duplicateEntryExtraAttribute, new String[] {attName, entryPathMsg, projectName})); ", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acc1cd7ba92b927c89208cea7ae5f867", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "baa69111fb2692bf947d05d6cb872fa36c864ddc", "commitAfterChange": "d09cf3be776821b1eebdf5f1510c5523654e2dad", "methodNumberBeforeChange": 51, "methodNumberAfterChange": 51, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "diff": ["+\t\t// check duplicate entries on raw classpath only (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=175226 )", "+\t\tint rawLength = rawClasspath.length;", "+\t\tHashSet pathes = new HashSet(rawLength);", "+\t\tfor (int i = 0 ; i < rawLength; i++) {", "+\t\t\tIPath entryPath = rawClasspath[i].getPath();", "+\t\t\tif (!pathes.add(entryPath)){", "+\t\t\t\tString entryPathMsg = projectName.equals(entryPath.segment(0)) ? entryPath.removeFirstSegments(1).toString() : entryPath.makeRelative().toString();", "+\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.NAME_COLLISION, Messages.bind(Messages.classpath_duplicateEntryPath, new String[] {entryPathMsg, projectName}));", "+\t\t\t}", "+\t\t}", "+", "-\t\tHashSet pathes = new HashSet(length);", "-", "-\t\t\t// Build some common strings for status message", "-\t\t\tboolean isProjectRelative = projectName.equals(entryPath.segment(0));", "-\t\t\tString entryPathMsg = isProjectRelative ? entryPath.removeFirstSegments(1).toString() : entryPath.makeRelative().toString();", "-", "-\t\t\t// complain if duplicate path", "-\t\t\tif (!pathes.add(entryPath)){", "-\t\t\t\treturn new JavaModelStatus(IJavaModelStatusConstants.NAME_COLLISION, Messages.bind(Messages.classpath_duplicateEntryPath, new String[] {entryPathMsg, projectName}));", "-\t\t\t}"]}], "num": 5996}