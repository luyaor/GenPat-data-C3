{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a1675d818defa4e364719cce0195cc88", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "41e4148e77bfd50b8e266970b9c1a375", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "ca349eb1728a54f5c4569863d8f64340b099c4ce", "commitAfterChange": "2575bc1675526f9cf1bae80cf41843bf7eedd3c4", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  \tpublic void testBug416182()", "signatureAfterChange": "  \tpublic void testBug416182()", "diff": ["-\t\t\t\t\"\t\tX<@Nullable String> xs = new X<String>();\\n\" + // TODO(stephan): must detect that foo() now has contradictory annots, see bug 416190 ", "+\t\t\t\t\"\t\tX<@Nullable String> xs = new X<String>();\\n\" + ", "-\t\t\t\"1. WARNING in X.java (at line 9)\\n\" + ", "-\t\t\t\"\tX<@Nullable String> xs = new X<String>();\\n\" + ", "-\t\t\t\"\t                         ^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Null type safety (type annotations): The expression of type 'X<String>' needs unchecked conversion to conform to 'X<@Nullable String>'\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 10)\\n\" + ", "+\t\t\t\"\txs.foo(null);\\n\" + ", "+\t\t\t\"\t^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Contradictory null annotations: method was inferred as \\'@Nullable String foo(@NonNull @Nullable String)\\', but only one of \\'@NonNull\\' and \\'@Nullable\\' can be effective at any location\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d1d99e8061d4a59f82e6752bf20436c9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "635cdb5a7a6689c525de4e28f32c0630009bc2be", "commitAfterChange": "5b2fc25f0a222e2b576998a935fd1c748e775e70", "methodNumberBeforeChange": 999, "methodNumberAfterChange": 999, "signatureBeforeChange": " public void testBug351444d() throws JavaModelException", "signatureAfterChange": " public void testBug351444d() throws JavaModelException", "diff": ["-\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.TXYU<LNumber;>;, (LNumber;)V, TXYU, (t), 57}\\n\" +", "-\t\t\t\t\"   TXYU[TYPE_REF]{TXYU, test, Ltest.TXYU;, null, null, 57}\\n\" +", "-\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.TXYU<LNumber;>;, (Ljava.lang.String;Ljava.lang.String;)V, TXYU, (s, s2), 57}\\n\" +", "-\t\t\t\t\"   TXYU[TYPE_REF]{TXYU, test, Ltest.TXYU;, null, null, 57}\",", "+\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.TXYU<LNumber;>;, (LNumber;)V, TXYU, (t), 60}\\n\" +", "+\t\t\t\t\"   TXYU[TYPE_REF]{TXYU, test, Ltest.TXYU;, null, null, 60}\\n\" +", "+\t\t\t\t\"TXYU[CONSTRUCTOR_INVOCATION]{(), Ltest.TXYU<LNumber;>;, (Ljava.lang.String;Ljava.lang.String;)V, TXYU, (s, s2), 60}\\n\" +", "+\t\t\t\t\"   TXYU[TYPE_REF]{TXYU, test, Ltest.TXYU;, null, null, 60}\","]}], "num": 58565}