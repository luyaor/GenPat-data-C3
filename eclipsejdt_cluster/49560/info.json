{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "368dfa7609369435aaa711e61965b9d2", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06d93b82fb31c981a8df324564dae154", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBuilder.java", "commitBeforeChange": "f5262e0e66d7e25877ee8d8a091dd788b69869c5", "commitAfterChange": "47e88d0335bbb81b7bc00bc5460ee9a54afeb8fd", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r public void connect(IGenericType suppliedType, IGenericType superclass, IGenericType[] superinterfaces)", "signatureAfterChange": "\r public void connect(IGenericType suppliedType, IGenericType superclass, IGenericType[] superinterfaces)", "diff": ["+\tif (TypeHierarchy.DEBUG) {\r", "+\t\tSystem.out.println(\"Connecting: \" + ((JavaElement)typeHandle).toStringWithAncestors()); //$NON-NLS-1$\r", "+\t\tSystem.out.println(\"  to superclass: \" + (superHandle == null ? \"<None>\" : ((JavaElement)superHandle).toStringWithAncestors())); //$NON-NLS-1$ //$NON-NLS-2$\r", "+\t\tSystem.out.print(\"  and superinterfaces:\"); //$NON-NLS-1$\r", "+\t\tif (interfaceHandles == null) {\r", "+\t\t\tSystem.out.println(\" <None>\"); //$NON-NLS-1$\r", "+\t\t} else {\r", "+\t\t\tSystem.out.println();\r", "+\t\t\tfor (int i = 0, length = interfaceHandles.length; i < length; i++) {", "+\t\t\t\tSystem.out.println(\"    \" + ((JavaElement)interfaceHandles[i]).toStringWithAncestors()); //$NON-NLS-1$", "+\t\t\t}\r", "+\t\t}\r", "+\t}\r", "+\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fccd9d80889ff927c0c66de8b25160e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "e87f51d941d6cbe203d8b543bd1f01e26d5c134d", "commitAfterChange": "1ffd151549eccf4f346b9688b80b9066e8dc6a10", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": "\r \tpublic void locateMatches(\r \t\tString[] filePaths, \r \t\tIWorkspace workspace,\r \t\tIWorkingCopy[] workingCopies, \r \t\tIProgressMonitor progressMonitor)\r \t\tthrows JavaModelException", "signatureAfterChange": "\r \tpublic void locateMatches(\r \t\tString[] filePaths, \r \t\tIWorkspace workspace,\r \t\tIWorkingCopy[] workingCopies, \r \t\tIProgressMonitor progressMonitor)\r \t\tthrows JavaModelException", "diff": ["+\t\tif (SearchEngine.VERBOSE) {\r", "+\t\t\tSystem.out.println(\"Locating matches in files [\"); //$NON-NLS-1$\r", "+\t\t\tfor (int i = 0, length = filePaths.length; i < length; i++) {\r", "+\t\t\t\tString path = filePaths[i];\r", "+\t\t\t\tSystem.out.println(\"\\t\" + path);\r", "+\t\t\t}\r", "+\t\t\tSystem.out.println(\"]\"); //$NON-NLS-1$\r", "+\t\t\tif (workingCopies != null) {\r", "+\t\t\t\t System.out.println(\" and working copies [\"); //$NON-NLS-1$\r", "+\t\t\t\tfor (int i = 0, length = workingCopies.length; i < length; i++) {\r", "+\t\t\t\t\tIWorkingCopy wc = workingCopies[i];\r", "+\t\t\t\t\tSystem.out.println(\"\\t\" + ((JavaElement)wc).toStringWithAncestors()); //$NON-NLS-1$\r", "+\t\t\t\t}\r", "+\t\t\t\tSystem.out.println(\"]\"); //$NON-NLS-1$\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\t\r"]}], "num": 49560}