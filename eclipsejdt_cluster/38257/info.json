{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9068f4924c9145b525cbae27da63892a", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b22c86a59f75bff52c8e8ea58874099b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/BuildListener.java", "commitBeforeChange": "a3d873b0829375e0f0465ac99af6f9753248e839", "commitAfterChange": "2ed8d2842cd060fd2ed1992ac37d7e3f157e19c9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "\r \t\t\r \tprivate CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )", "signatureAfterChange": " \t\t \tprivate CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )", "diff": ["-\t\t\r", "-\tprivate CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )\r", "-\t{\t\t\r", "-\t\tif ( pbce == null )\r", "-\t\t\treturn EMPTY_PRE_BUILD_COMPILATION_RESULT;\r", "-\r", "-\t\tIFile[] buildFiles = pbce.getFiles();\r", "-\t\tIJavaProject javaProject = pbce.getJavaProject();\r", "-\t\t\r", "-\t\tif ( buildFiles == null || buildFiles.length == 0 )\r", "-\t\t\treturn EMPTY_PRE_BUILD_COMPILATION_RESULT;\r", "-\r", "-\t\tHashSet<IFile> newFiles = new HashSet<IFile>();\r", "-\t\tfor ( int i = 0; i < buildFiles.length; i++ )\r", "-\t\t{\r", "-\t\t\tSet<IFile> files = APTDispatch.runAPTDuringBuild( \r", "-\t\t\t\t\t_factories, \r", "-\t\t\t\t\tbuildFiles[i], \r", "-\t\t\t\t\tjavaProject );\r", "-\t\t\tnewFiles.addAll( files );\r", "-\t\t}\r", "-\t\t\r", "-\t\treturn new PreBuildCompilationResult( newFiles.toArray( new IFile[ newFiles.size() ] ), Collections.emptyMap() ); \r", "-\t}\r", "+\t\t", "+\tprivate CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )", "+\t{\t\t", "+\t\tif ( pbce == null )", "+\t\t\treturn EMPTY_PRE_BUILD_COMPILATION_RESULT;", "+", "+\t\tIFile[] buildFiles = pbce.getFiles();", "+\t\tIJavaProject javaProject = pbce.getJavaProject();", "+\t\t", "+\t\tif ( buildFiles == null || buildFiles.length == 0 )", "+\t\t\treturn EMPTY_PRE_BUILD_COMPILATION_RESULT;", "+", "+\t\tHashSet<IFile> newFiles = new HashSet<IFile>();", "+\t\tHashMap<IFile, Set<String>> newDependencies = new HashMap<IFile, Set<String>>();", "+\t\tfor ( int i = 0; i < buildFiles.length; i++ )", "+\t\t{", "+\t\t\tAPTBuildResult result = APTDispatch.runAPTDuringBuild( ", "+\t\t\t\t\t_factories, ", "+\t\t\t\t\tbuildFiles[i], ", "+\t\t\t\t\tjavaProject );", "+\t\t\tnewFiles.addAll( result.getNewFiles() );", "+\t\t\tnewDependencies.put( buildFiles[i], result.getNewDependencies() );", "+\t\t}", "+\t\t", "+\t\treturn new PreBuildCompilationResult( newFiles.toArray( new IFile[ newFiles.size() ] ), newDependencies ); ", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df83f2d6c79112cd390ce92b8eb5952a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "372799d5bd955eabbf1069fe0bbf8aba8ea8af85", "commitAfterChange": "baf433f0226e8b9036b18a28d560e5a42cb8b949", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t\t \tprivate CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )", "signatureAfterChange": " \t\t \tprivate CompilationParticipantResult preBuildNotify( PreBuildCompilationEvent pbce )", "diff": ["+", "+\t", "+\t\tList<AnnotationProcessorFactory> factories = _factoryLoader.getFactoriesForProject( javaProject );\t", "+\t", "+\t\tAPTResult result = APTDispatch.runAPTDuringBuild(factories, buildFiles, javaProject, pbce.isFullBuild());", "+\t\tSet<IFile> newFiles = result.getNewFiles();\t\t\t", "+\t\tSet<IFile> deletedFiles = result.getDeletedFiles();", "-\t\tHashSet<IFile> newFiles = new HashSet<IFile>();", "-\t\tHashSet<IFile> deletedFiles = new HashSet<IFile>();", "-\t\tHashMap<IFile, Set<String>> newDependencies = new HashMap<IFile, Set<String>>();", "-\t\tHashMap<IFile, List<IProblem>> problems = new HashMap<IFile, List<IProblem>>(4);", "-\t\tList<AnnotationProcessorFactory> factories = _factoryLoader.getFactoriesForProject( javaProject );", "-\t\tboolean sourcePathChanged = false;", "-\t\tfor ( int i = 0; i < buildFiles.length; i++ )", "-\t\t{", "-\t\t\tAPTResult result = APTDispatch.runAPTDuringBuild( ", "-\t\t\t\t\tfactories, ", "-\t\t\t\t\tbuildFiles[i], ", "-\t\t\t\t\tjavaProject );", "-\t\t\t", "-\t\t\t// see if APT updated a project's source path", "-\t\t\tsourcePathChanged |= result.getSourcePathChanged();", "-\t\t\t", "-\t\t\tnewFiles.addAll( result.getNewFiles() );\t\t\t", "-\t\t\tdeletedFiles.addAll( result.getDeletedFiles() );", "-\t\t\tnewDependencies.put( buildFiles[i], result.getNewDependencies() );\t", "-\t\t\tmergeMaps(result.getProblems(), problems);", "-\t\t}", "+\t\t// see if APT updated a project's source path", "+\t\tboolean sourcePathChanged = result.getSourcePathChanged();", "-\t\treturn new PreBuildCompilationResult( newFiles.toArray( new IFile[ newFiles.size() ] ), deletedFiles.toArray( new IFile[ deletedFiles.size() ] ), newDependencies, problems, sourcePathChanged );", "-\t\t", "+\t\treturn new PreBuildCompilationResult( ", "+\t\t\t\tnewFiles.toArray( new IFile[ newFiles.size() ] ), ", "+\t\t\t\tdeletedFiles.toArray( new IFile[ deletedFiles.size() ] ), ", "+\t\t\t\tresult.getNewDependencies(), ", "+\t\t\t\tresult.getProblems(), ", "+\t\t\t\tsourcePathChanged );"]}], "num": 38257}