{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a37ee82f2ff83d212a6ee9550feae24c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4001be3da19bf7d57bcfa34a16c301cb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/generatedfile/GeneratedSourceFolderManager.java", "commitBeforeChange": "c4c0df5e4aeb7d3e8571312c597020a7d0812327", "commitAfterChange": "6fea7eafdd413dccff31028f8da1f1ac6859e6fe", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void setEnabled(boolean enable)", "signatureAfterChange": " \tprivate IFolder getFolderPreference()", "diff": ["-\t */", "-\tpublic void setEnabled(boolean enable)", "-\t{", "-\t\tif( AptPlugin.DEBUG ){", "-\t\t\tif( enable )", "-\t\t\t\tAptPlugin.trace(\"enabling APT for \" + _aptProject.getJavaProject().getElementName()); //$NON-NLS-1$", "-\t\t\telse", "-\t\t\t\tAptPlugin.trace(\"disabling APT for \" + _aptProject.getJavaProject().getElementName()); //$NON-NLS-1$", "-\t\t}", "-\t\tif( enable ) {", "-\t\t\tfinal String folderName = _generatedSourceFolderName;", "-\t\t\tif( AptPlugin.DEBUG ){", "-\t\t\t\tAptPlugin.trace(\"configure generated source folder to be \" + folderName ); //$NON-NLS-1$", "-\t\t\t}", "-\t\t\tconfigure(folderName, null);", "-\t\t} else{", "-\t\t\tfinal IFolder srcFolder = getFolder();", "-\t\t\t_aptProject.projectClean(true);", "-\t\t\tresetGeneratedSrcFolder(srcFolder, false);", "-\t\t}", "-\t}", "+\t */", "+\tprivate IFolder getFolderPreference() {", "+\t\tfinal String folderName = AptConfig.getGenSrcDir(_aptProject.getJavaProject());", "+\t\tIFolder folder = null;", "+\t\ttry {", "+\t\t\tfolder = _aptProject.getJavaProject().getProject().getFolder( folderName );", "+\t\t}", "+\t\tcatch (IllegalArgumentException e) {", "+\t\t\t// In the event that the folderName is invalid, just return null.", "+\t\t}", "+\t\treturn folder;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e97fb4deb5b88098ed14fbe7a53318a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/JarClassLoader.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \t@Override \tprotected synchronized Class<?> findClass(String name) throws ClassNotFoundException", "signatureAfterChange": " \t \t@Override \tprotected synchronized Class<?> findClass(String name) throws ClassNotFoundException", "diff": ["-\t\topen();", "-\t\ttry {", "-\t\t\tbyte[] b = loadClassData(name);", "-\t\t\tif (b == null) {", "-\t\t\t\tthrow new ClassNotFoundException(\"Could not find class \" + name); //$NON-NLS-1$", "-\t\t\t}", "-\t\t\tClass<?> clazz = defineClass(name, b, 0, b.length);", "-\t\t\t// Define the package if necessary", "-\t\t\tString pkgName = getPackageName(name);", "-\t\t\tif (pkgName != null) {", "-\t\t\t\tPackage pkg = getPackage(pkgName);", "-\t\t\t\tif (pkg == null) {", "-\t\t\t\t\tdefinePackage(pkgName, null, null, null, null, null, null, null);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\treturn clazz;", "+\t\tif (!_open)", "+\t\t\tthrow new ClassNotFoundException(\"Classloader closed: \" + name); //$NON-NLS-1$", "+", "+\t\tbyte[] b = loadClassData(name);", "+\t\tif (b == null) {", "+\t\t\tthrow new ClassNotFoundException(\"Could not find class \" + name); //$NON-NLS-1$", "-\t\tfinally {", "-\t\t\tclose();", "+\t\tClass<?> clazz = defineClass(name, b, 0, b.length);", "+\t\t// Define the package if necessary", "+\t\tString pkgName = getPackageName(name);", "+\t\tif (pkgName != null) {", "+\t\t\tPackage pkg = getPackage(pkgName);", "+\t\t\tif (pkg == null) {", "+\t\t\t\tdefinePackage(pkgName, null, null, null, null, null, null, null);", "+\t\t\t}", "+\t\treturn clazz;"]}], "num": 24902}