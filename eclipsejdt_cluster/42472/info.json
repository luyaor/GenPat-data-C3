{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "af501a1698b903c2937e2eb2350924b8", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ab684d1832add3351c3b928ce6eac1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "48a7a1e75901fb43c57155529db59ad04e37e0dc", "commitAfterChange": "456faea027e8f3eb9499e840488aa47c90cbb813", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "signatureAfterChange": " \tpublic final Binding getTypeOrPackage(char[][] compoundName)", "diff": ["-", "+\t\t\t// checks visibility", "+\t\t\tif (!typeBinding.isValidBinding())", "+\t\t\t\treturn new ProblemReferenceBinding(", "+\t\t\t\t\tCharOperation.subarray(compoundName, 0, currentIndex),", "+\t\t\t\t\ttypeBinding.problemId());", "+\t\t\t", "-", "-\t\t\t// checks visibility", "-\t\t\tif (!qualifiedType.isValidBinding())", "-\t\t\t\treturn new ProblemReferenceBinding(", "-\t\t\t\t\tCharOperation.subarray(compoundName, 0, currentIndex),", "-\t\t\t\t\tqualifiedType.problemId());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "acf94791e04afe9e1eaef6c875d93686", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "d9cf56fd4fe99ad8dd0ba89cbfa9dcc246ef0b9c", "commitAfterChange": "c143533d344835eae9053a7d384648906ed40cff", "methodNumberBeforeChange": 42, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic void updateDependentNamelookups()", "signatureAfterChange": " \tprivate void refreshNamelookups()", "diff": ["+\t */", "+\tprivate void refreshNamelookups() {", "+\t\tIterator iterator;", "+\t\t// update namelookup of dependent projects", "+\t\titerator = this.namelookupsToRefresh.iterator();", "+\t\tHashSet affectedDependents = new HashSet();", "+\t\twhile (iterator.hasNext()) {", "+\t\t\tJavaProject project = (JavaProject)iterator.next();", "+\t\t\taddDependentProjects(project.getPath(), affectedDependents);", "+\t\t}", "+\t\titerator = affectedDependents.iterator();", "+\t\twhile (iterator.hasNext()) {", "+\t\t\tJavaProject project = (JavaProject) iterator.next();", "+\t\t\tif (project.isOpen()){", "+\t\t\t\ttry {", "+\t\t\t\t\t((JavaProjectElementInfo)project.getElementInfo()).setNameLookup(null);", "+\t\t\t\t} catch (JavaModelException e) {", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t}", "-\t */", "-\tpublic void updateDependentNamelookups() {", "-\t\tIterator iterator;", "-\t\t// update namelookup of dependent projects", "-\t\titerator = this.projectsForDependentNamelookupRefresh.iterator();", "-\t\tHashSet affectedDependents = new HashSet();", "-\t\twhile (iterator.hasNext()) {", "-\t\t\tJavaProject project = (JavaProject)iterator.next();", "-\t\t\taddDependentProjects(project.getPath(), affectedDependents);", "-\t\t}", "-\t\titerator = affectedDependents.iterator();", "-\t\twhile (iterator.hasNext()) {", "-\t\t\tJavaProject project = (JavaProject) iterator.next();", "-\t\t\tif (project.isOpen()){", "-\t\t\t\ttry {", "-\t\t\t\t\t((JavaProjectElementInfo)project.getElementInfo()).setNameLookup(null);", "-\t\t\t\t} catch (JavaModelException e) {", "-\t\t\t}", "-\t\t}", "-\t}"]}], "num": 42472}