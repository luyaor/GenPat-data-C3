{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a00ceaa77c2b9b142085fd8b6c962fea", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63536f9b2a4f2e05cef8157a2dc08e5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "b0dc1dab558ce36f11677d02e0885d555028b05e", "commitAfterChange": "91fd6592eedea8aedfdfc8b40a21d626aa183875", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "signatureAfterChange": " private synchronized HashtableOfObject readCategoryTable(char[] categoryName, boolean readDocNumbers) throws IOException", "diff": ["-\t\tcategoryTable = new HashtableOfObject(size);", "+\t\ttry {", "+\t\t\tif (size < 0) { // DEBUG", "+\t\t\t\tSystem.err.println(\"-------------------- DEBUG --------------------\"); //$NON-NLS-1$", "+\t\t\t\tSystem.err.println(\"file = \"+getIndexFile()); //$NON-NLS-1$", "+\t\t\t\tSystem.err.println(\"offset = \"+offset); //$NON-NLS-1$", "+\t\t\t\tSystem.err.println(\"size = \"+size); //$NON-NLS-1$", "+\t\t\t\tSystem.err.println(\"--------------------   END   --------------------\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tcategoryTable = new HashtableOfObject(size);", "+\t\t} catch (OutOfMemoryError oom) {", "+\t\t\t// DEBUG", "+\t\t\toom.printStackTrace();", "+\t\t\tSystem.err.println(\"-------------------- DEBUG --------------------\"); //$NON-NLS-1$", "+\t\t\tSystem.err.println(\"file = \"+getIndexFile()); //$NON-NLS-1$", "+\t\t\tSystem.err.println(\"offset = \"+offset); //$NON-NLS-1$", "+\t\t\tSystem.err.println(\"size = \"+size); //$NON-NLS-1$", "+\t\t\tSystem.err.println(\"--------------------   END   --------------------\"); //$NON-NLS-1$", "+\t\t\tthrow oom;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "818da39ec94f15864d051e0083900e4c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "20c9553c55b67a9c07624bd0b5b35f188a7f1769", "commitAfterChange": "14fb89a0281d6b0089ef94e47420da3d5f85923f", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 62, "signatureBeforeChange": "  protected void report(SearchMatch match) throws CoreException", "signatureAfterChange": "  protected void report(SearchMatch match) throws CoreException", "diff": ["-\t\t\tSystem.out.println(\"EXACT\"); //$NON-NLS-1$", "+\t\t\tSystem.out.print(\"EXACT\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"EQUIVALENT\"); //$NON-NLS-1$", "+\t\t\tSystem.out.print(\"EQUIVALENT\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"ERASURE\"); //$NON-NLS-1$", "+\t\t\tSystem.out.print(\"ERASURE\"); //$NON-NLS-1$", "-\t\t\tSystem.out.println(\"INVALID RULE\"); //$NON-NLS-1$", "+\t\t\tSystem.out.print(\"INVALID RULE\"); //$NON-NLS-1$", "-\t\tSystem.out.println(\"\\tRaw: \"+match.isRaw()); //$NON-NLS-1$", "+\t\tif (match instanceof MethodReferenceMatch) {", "+\t\t\tMethodReferenceMatch methodReferenceMatch = (MethodReferenceMatch) match;", "+\t\t\tif (methodReferenceMatch.isPolymorphic()) {", "+\t\t\t\tSystem.out.print(\"+POLYMORPHIC\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tif (methodReferenceMatch.isImplicit()) {", "+\t\t\t\tSystem.out.print(\"+IMPLICIT\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t\tif (methodReferenceMatch.isSynthetic()) {", "+\t\t\t\tSystem.out.print(\"+SYNTHETIC\"); //$NON-NLS-1$", "+\t\t\t}", "+\t\t}", "+\t\tSystem.out.println(\"\\n\\tRaw: \"+match.isRaw()); //$NON-NLS-1$"]}], "num": 21727}