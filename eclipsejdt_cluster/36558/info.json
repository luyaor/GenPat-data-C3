{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa2fee41569cd52f82f482447767f06e", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a96e2f93796938c930b5ebde208d0acd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ArrayBinding.java", "commitBeforeChange": "b1909bb0c4bbb70fecea5345c2e954fa4204b1dd", "commitAfterChange": "1ef42230a28632657bfac5df1d197b6d35dcc83d", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void collectSubstitutes(Scope scope, TypeBinding actualType, Map substitutes, int constraint)", "signatureAfterChange": " public void collectSubstitutes(Scope scope, TypeBinding actualType, InferenceContext inferenceContext, int constraint)", "diff": ["-public void collectSubstitutes(Scope scope, TypeBinding actualType, Map substitutes, int constraint) {", "+public void collectSubstitutes(Scope scope, TypeBinding actualType, InferenceContext inferenceContext, int constraint) {", "-\t\t\t    this.leafComponentType.collectSubstitutes(scope, actualType.leafComponentType(), substitutes, constraint);", "+\t\t\t    this.leafComponentType.collectSubstitutes(scope, actualType.leafComponentType(), inferenceContext, constraint);", "-\t            this.leafComponentType.collectSubstitutes(scope, actualReducedType, substitutes, constraint);", "+\t            this.leafComponentType.collectSubstitutes(scope, actualReducedType, inferenceContext, constraint);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eeb76d3842f1f9893f0600e34ee8f90b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedGenericMethodBinding.java", "commitBeforeChange": "37b393962270992362b04cbe26e00f2658c11b4c", "commitAfterChange": "c62f0c1bab5e955aabde01c278daeb6c0b3de6ab", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, TypeBinding expectedType, InferenceContext inferenceContext)", "signatureAfterChange": " \tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, InferenceContext inferenceContext)", "diff": ["-\tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, TypeBinding expectedType, InferenceContext inferenceContext) {", "+\tprivate ParameterizedGenericMethodBinding inferFromExpectedType(Scope scope, InferenceContext inferenceContext) {", "-\t\t\tif (expectedType != null) {", "-\t\t\t    this.returnType.collectSubstitutes(scope, expectedType, inferenceContext, TypeConstants.CONSTRAINT_SUPER);", "+\t\t\tif (inferenceContext.expectedType != null) {", "+\t\t\t    this.returnType.collectSubstitutes(scope, inferenceContext.expectedType, inferenceContext, TypeConstants.CONSTRAINT_SUPER);", "-\t\tthis.inferredReturnType = this.returnType != oldReturnType;", "+\t\tthis.inferredReturnType = inferenceContext.hasExplicitExpectedType && this.returnType != oldReturnType;"]}], "num": 36558}