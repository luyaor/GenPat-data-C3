{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f63485c6e58d3d24bf1f3ecff7c4e7bb", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2ecc62de4752ed213c09f2c42d33bec4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 553, "methodNumberAfterChange": 553, "signatureBeforeChange": " public void testCompletionAbstractMethod2() throws JavaModelException", "signatureAfterChange": " public void testCompletionAbstractMethod2() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAbstractMethod2.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionAbstractMethod2.java\",", "+            \"public class CompletionAbstractMethod2 {\\n\" +", "+            \"\tabstract class A {\\n\" +", "+            \"\t\tabstract void foo();\\n\" +", "+            \"\t}\\n\" +", "+            \"\tclass B extends A {\\n\" +", "+            \"\t\tvoid foo{} {}\\n\" +", "+            \"\t\tvoid bar() {\\n\" +", "+            \"\t\t\tthis.fo\\n\" +", "+            \"\t\t}\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"fo\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"fo\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"element:foo    completion:foo()    relevance:\"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED),", "-\t\trequestor.getResults());", "+    assertResults(", "+           \"foo[METHOD_REF]{foo(), LCompletionAbstractMethod2$A;, ()V, foo, null, \"+(R_DEFAULT + R_INTERESTING + R_CASE + R_NON_STATIC+ R_NON_RESTRICTED) + \"}\",", "+           requestor.getResults());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c2e1fd80c6576f57df5713619af886c5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/CompletionTests.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 552, "methodNumberAfterChange": 552, "signatureBeforeChange": " public void testCompletionAbstractMethod1() throws JavaModelException", "signatureAfterChange": " public void testCompletionAbstractMethod1() throws JavaModelException", "diff": ["-\tCompletionTestsRequestor requestor = new CompletionTestsRequestor();", "-\tICompilationUnit cu= getCompilationUnit(\"Completion\", \"src\", \"\", \"CompletionAbstractMethod1.java\");", "+\tthis.wc = getWorkingCopy(", "+            \"/Completion/src/CompletionAbstractMethod1.java\",", "+            \"public class CompletionAbstractMethod1 {\\n\" +", "+            \"\tabstract class A {\\n\" +", "+            \"\t\tabstract void foo();\\n\" +", "+            \"\t}\\n\" +", "+            \"\tclass B extends A {\\n\" +", "+            \"\t\tvoid foo{} {}\\n\" +", "+            \"\t\tvoid bar() {\\n\" +", "+            \"\t\t\tsuper.fo\\n\" +", "+            \"\t\t}\\n\" +", "+            \"\t}\\n\" +", "+            \"}\");", "+    ", "+    ", "+    CompletionTestsRequestor2 requestor = new CompletionTestsRequestor2(true);", "+    String str = this.wc.getSource();", "+    String completeBehind = \"fo\";", "+    int cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "+    this.wc.codeComplete(cursorLocation, requestor, this.owner);", "-\tString str = cu.getSource();", "-\tString completeBehind = \"fo\";", "-\tint cursorLocation = str.lastIndexOf(completeBehind) + completeBehind.length();", "-\tcu.codeComplete(cursorLocation, requestor);", "-", "-\tassertEquals(", "-\t\t\"\",", "-\t\trequestor.getResults());", "+    assertResults(", "+            \"\",", "+            requestor.getResults());"]}], "num": 33508}