{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "992105089952f10876a74266a23ae994", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "96efadc723cb37e393e48db246c22177", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "a8ae4c61c3fd8e7af5944aa40683b300c7cbf9e8", "commitAfterChange": "06d5ad0c6e4971f283c2f47bfc7f9df941ae34e8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "  \tprivate Set findBottomSet(Set constraints, Set allOutputVariables)", "signatureAfterChange": "  \tprivate Set<ConstraintFormula> findBottomSet(Set<ConstraintFormula> constraints, Set<InferenceVariable> allOutputVariables)", "diff": ["-\tprivate Set findBottomSet(Set constraints, Set allOutputVariables) {", "+\tprivate Set<ConstraintFormula> findBottomSet(Set<ConstraintFormula> constraints, Set<InferenceVariable> allOutputVariables) {", "-\t\tSet result = new HashSet();", "-\t\tIterator it = constraints.iterator();", "+\t\tSet<ConstraintFormula> result = new HashSet<ConstraintFormula>();", "+\t\tIterator<ConstraintFormula> it = constraints.iterator();", "-\t\t\tConstraintFormula constraint = (ConstraintFormula)it.next();", "-\t\t\tIterator inputIt = constraint.inputVariables(this).iterator();", "-\t\t\tIterator outputIt = allOutputVariables.iterator();", "+\t\t\tConstraintFormula constraint = it.next();", "+\t\t\tIterator<InferenceVariable> inputIt = constraint.inputVariables(this).iterator();", "+\t\t\tIterator<InferenceVariable> outputIt = allOutputVariables.iterator();", "-\t\t\t\tInferenceVariable in = (InferenceVariable) inputIt.next();", "+\t\t\t\tInferenceVariable in = inputIt.next();", "-\t\t\t\t\tif (this.currentBounds.dependsOnResolutionOf(in, (InferenceVariable) outputIt.next()))", "+\t\t\t\t\tif (this.currentBounds.dependsOnResolutionOf(in, outputIt.next()))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be3ec995716e2cb8f194ede64f161818", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "f06de4b999ef266d99070d6e6ee7f897f16a1d0e", "commitAfterChange": "bace4d1637b4b8203b7da0c7b1d56fa02fc3ade5", "methodNumberBeforeChange": 140, "methodNumberAfterChange": 140, "signatureBeforeChange": " \tpublic void setOptions(Map newOptions)", "signatureAfterChange": " \tpublic void setOptions(Map<String, String> newOptions)", "diff": ["-\tpublic void setOptions(Map newOptions) {", "+\tpublic void setOptions(Map<String, String> newOptions) {", "-\t\t\t\tIterator entries = newOptions.entrySet().iterator();", "+\t\t\t\tIterator<Map.Entry<String, String>> entries = newOptions.entrySet().iterator();", "-\t\t\t\t\tMap.Entry entry = (Map.Entry) entries.next();", "-\t\t\t\t\tString key = (String) entry.getKey();", "-\t\t\t\t\tString value = (String) entry.getValue();", "+\t\t\t\t\tMap.Entry<String, String> entry = entries.next();", "+\t\t\t\t\tString key = entry.getKey();", "+\t\t\t\t\tString value = entry.getValue();"]}], "num": 41312}