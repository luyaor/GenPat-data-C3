{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8b0ffd76f265aace104fec3771cfd17c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17c67ad3107713bd266084a20de89219", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddFolderToIndex.java", "commitBeforeChange": "fd2df73ef9d8c1f3cb6f04f5169c0f3c5bb417cf", "commitAfterChange": "b9151e9319708f3d004c77f114c4f35584a87c41", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "signatureAfterChange": " \tpublic boolean execute(IProgressMonitor progressMonitor)", "diff": ["-\t\t\tfolder.accept(", "-\t\t\t\tnew IResourceProxyVisitor() {", "-\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) /* throws CoreException */{", "-\t\t\t\t\t\tswitch(proxy.getType()) {", "-\t\t\t\t\t\t\tcase IResource.FILE :", "-\t\t\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isJavaFileName(proxy.getName())) {", "-\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-\t\t\t\t\t\t\t\t\tif (!Util.isExcluded(resource, inclusionPatterns, exclusionPatterns))", "-\t\t\t\t\t\t\t\t\t\tindexManager.addSource((IFile)resource, container);", "-\t\t\t\t\t\t\t\t}", "+\t\t\tif (this.exclusionPatterns == null && this.inclusionPatterns == null) {", "+\t\t\t\tfolder.accept(", "+\t\t\t\t\tnew IResourceProxyVisitor() {", "+\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) /* throws CoreException */{", "+\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isJavaFileName(proxy.getName()))", "+\t\t\t\t\t\t\t\t\tindexManager.addSource((IFile) proxy.requestResource(), container);", "-\t\t\t\t\t\t\tcase IResource.FOLDER :", "-\t\t\t\t\t\t\t\tif (Util.isExcluded(proxy.requestResource(), inclusionPatterns, exclusionPatterns))", "-\t\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\treturn true;", "-\t\t\t\t\t}", "-\t\t\t\t},", "-\t\t\t\tIResource.NONE", "-\t\t\t);", "+\t\t\t\t\t},", "+\t\t\t\t\tIResource.NONE", "+\t\t\t\t);", "+\t\t\t} else {", "+\t\t\t\tfolder.accept(", "+\t\t\t\t\tnew IResourceProxyVisitor() {", "+\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) /* throws CoreException */{", "+\t\t\t\t\t\t\tswitch(proxy.getType()) {", "+\t\t\t\t\t\t\t\tcase IResource.FILE :", "+\t\t\t\t\t\t\t\t\tif (org.eclipse.jdt.internal.compiler.util.Util.isJavaFileName(proxy.getName())) {", "+\t\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "+\t\t\t\t\t\t\t\t\t\tif (!Util.isExcluded(resource, inclusionPatterns, exclusionPatterns))", "+\t\t\t\t\t\t\t\t\t\t\tindexManager.addSource((IFile)resource, container);", "+\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t\tcase IResource.FOLDER :", "+\t\t\t\t\t\t\t\t\tif (Util.isExcluded(proxy.requestResource(), inclusionPatterns, exclusionPatterns))", "+\t\t\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\treturn true;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t},", "+\t\t\t\t\tIResource.NONE", "+\t\t\t\t);", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e3790a121bbc99b58adb95d8636a31e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "149a16962b36e6d4b4296a40fc42d0af98ac09df", "commitAfterChange": "b42f9769f5c975cb7f06e2a89e4981d23834d622", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprivate String computeRootPath()", "signatureAfterChange": " \tprivate String computeRootPath()", "diff": ["-// KJ : Release next week", "-//\t\t\t\t\tfolder.accept(new IResourceProxyVisitor() {", "-//\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "-//\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "-//\t\t\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) { ", "-//\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "-\t\t\t\t\tfolder.accept(new IResourceVisitor() {", "-\t\t\t\t\t\tpublic boolean visit(IResource resource) throws CoreException {", "-\t\t\t\t\t\t\tif (resource.getType() == IResource.FILE) {", "-\t\t\t\t\t\t\t\tif (Util.isJavaFileName(resource.getName())) {", "-\t\t\t\t\t\t\t\t\tchar[] contents = org.eclipse.jdt.internal.core.Util.getResourceContentsAsCharArray((IFile)resource, encoding);", "-\t\t\t\t\t\t\t\t\tIPath fullPath = resource.getFullPath();", "-\t\t\t\t\t\t\t\t\tint sourcePathSegmentCount = sourcePath.segmentCount();", "-\t\t\t\t\t\t\t\t\tIPath javaFilePath = fullPath.removeFirstSegments(sourcePathSegmentCount);", "-\t\t\t\t\t\t\t\t\tString rootPath = computeRootPath(javaFilePath.toString(), contents);", "-\t\t\t\t\t\t\t\t\tif (rootPath != null) {", "-\t\t\t\t\t\t\t\t\t\trootPathHolder[0] = rootPath;", "-\t\t\t\t\t\t\t\t\t\tthrow new CoreException(new JavaModelStatus()); // abort visit", "+\t\t\t\t\tfolder.accept(", "+\t\t\t\t\t\tnew IResourceProxyVisitor() {", "+\t\t\t\t\t\t\tpublic boolean visit(IResourceProxy proxy) throws CoreException {", "+\t\t\t\t\t\t\t\tif (proxy.getType() == IResource.FILE) {", "+\t\t\t\t\t\t\t\t\tif (Util.isJavaFileName(proxy.getName())) { ", "+\t\t\t\t\t\t\t\t\t\tIResource resource = proxy.requestResource();", "+\t\t\t\t\t\t\t\t\t\tchar[] contents = org.eclipse.jdt.internal.core.Util.getResourceContentsAsCharArray((IFile)resource, encoding);", "+\t\t\t\t\t\t\t\t\t\tIPath fullPath = resource.getFullPath();", "+\t\t\t\t\t\t\t\t\t\tint sourcePathSegmentCount = sourcePath.segmentCount();", "+\t\t\t\t\t\t\t\t\t\tIPath javaFilePath = fullPath.removeFirstSegments(sourcePathSegmentCount);", "+\t\t\t\t\t\t\t\t\t\tString rootPath = computeRootPath(javaFilePath.toString(), contents);", "+\t\t\t\t\t\t\t\t\t\tif (rootPath != null) {", "+\t\t\t\t\t\t\t\t\t\t\trootPathHolder[0] = rootPath;", "+\t\t\t\t\t\t\t\t\t\t\tthrow new CoreException(new JavaModelStatus()); // abort visit", "+\t\t\t\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t\t\t\treturn false;", "-\t\t\t\t\t\t\t\treturn false;", "+\t\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t\treturn true;", "-\t\t\t\t\t\t}", "-\t\t\t\t\t});", "+\t\t\t\t\t\t},", "+\t\t\t\t\t\tIResource.NONE", "+\t\t\t\t\t);"]}], "num": 11726}