{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e187cfab869bdf5c747595c5358738e3", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a339e58401f5a487430b72e83e14419f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "5e6ce1a02c1fd92d8737923476f9b03120d60dfc", "commitAfterChange": "27b04348f6378e421a1a2788716e3b7fc8643774", "methodNumberBeforeChange": 285, "methodNumberAfterChange": 285, "signatureBeforeChange": "\r final public void tableswitch(CaseLabel defaultLabel, int low, int high, int[] keys, int[] sortedIndexes, CaseLabel[] casesLabel)", "signatureAfterChange": "\r final public void tableswitch(CaseLabel defaultLabel, int low, int high, int[] keys, int[] sortedIndexes, CaseLabel[] casesLabel)", "diff": ["-\tint j = low;\r", "+\tint i = low, j = low;\r", "-\tfor (int i = low; i <= high; i++) {\r", "+\twhile (true) {\r", "+\t\t\tif (i == high) break; // if high is maxint, then avoids wrapping to minint.\r", "+\t\ti++;\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5ac0701264f40f176acf95131e46e75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "e67c77fc5e097eac99c8909bb016eff7011eb0ce", "commitAfterChange": "5d677f26e6a9dfca4bbd2cd8a965c43c4f46ed94", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": "  public String toString()", "signatureAfterChange": "  public String toString()", "diff": ["-\t\t\tfor (int i = 0; i < this.paths.length; i++) {", "-\t\t\t\tString path = this.paths[i];", "+\t\t\tfor (int i = 0; i < this.relativePaths.length; i++) {", "+\t\t\t\tString path = this.relativePaths[i];"]}], "num": 53267}