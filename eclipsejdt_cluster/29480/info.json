{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "62f9ecfdcea450f7bfd1ba36f94567e9", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "71aa98dd505b9a0aecd9362d871453a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "93de56b29d808bccb957df4ffa2902903a4c6151", "commitAfterChange": "baaa74c4f9aeaa7948ea0d073edd04cfcc2c793e", "methodNumberBeforeChange": 225, "methodNumberAfterChange": 224, "signatureBeforeChange": " \tpublic void test081b()", "signatureAfterChange": " \tpublic void test081()", "diff": ["+\t//https://bugs.eclipse.org/bugs/show_bug.cgi?id=125956", "+\tpublic void test081() {", "+\t\t\t\t\"\tpublic <S> A<U> bar() { return null; }\\n\" +", "+\t\t\t\t\"\t<S> A<S> bar();\\n\" +", "-\t// https://bugs.eclipse.org/bugs/show_bug.cgi?id=125956", "-\tpublic void test081b() {", "-\t\tthis.runNegativeTest(", "-\t\t\tnew String[] {", "-\t\t\t\t\"X.java\",", "-\t\t\t\t\"public abstract class X<U> implements I {\\n\" +", "-\t\t\t\t\"\tpublic <S> A<U> bar() { return null; }\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"interface I {\\n\" +", "-\t\t\t\t\"\t<S> A<S> bar();\\n\" +", "-\t\t\t\t\"}\\n\" +", "-\t\t\t\t\"class A<V> {}\"", "-\t\t\t},", "-\t\t\t\"1. ERROR in X.java (at line 2)\\r\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 3)\\r\\n\" + ", "+\t\t\t// <S>bar() in X cannot implement <S>bar() in I; attempting to use incompatible return type", "+\t\t\t// warning: foo() in X implements <T>foo() in I; return type requires unchecked conversion"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8081c8446f5d5e4c6011058af1de7074", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/MethodVerifyTest.java", "commitBeforeChange": "135b5458f903218b5e5f72f009845ca69a1dfc48", "commitAfterChange": "fd19dfb11535c216820cbb7ea651282176d7f285", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void test007a()", "signatureAfterChange": " \tpublic void test007a()", "diff": ["-\t\t\t\"1. ERROR in A.java (at line 2)\\r\\n\" + ", "-\t\t\t\"\tinterface I extends J { Object foo(); }\\r\\n\" + ", "+\t\t\t\"1. ERROR in A.java (at line 1)\\n\" + ", "+\t\t\t\"\tabstract class A implements I {}\\n\" + ", "+\t\t\t\"\t               ^\\n\" + ", "+\t\t\t\"The return type is incompatible with J.foo(), I.foo()\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in A.java (at line 2)\\n\" + ", "+\t\t\t\"\tinterface I extends J { Object foo(); }\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 1)\\r\\n\" + ", "-\t\t\t\"\tabstract class X2 extends A implements J {}\\r\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 1)\\n\" + ", "+\t\t\t\"\tabstract class X2 extends A implements J {}\\n\" + "]}], "num": 29480}