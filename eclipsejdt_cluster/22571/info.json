{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7ae9579f83ff0c4b225b48e036e49044", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8292d6e203b862797e72e15f336a2563", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "33b8e652534880a44865eb30d6ce68dd0b1d0126", "commitAfterChange": "afd9d4680c771ea3305bd1c2231ace193ccd313f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void setUpSuite() throws Exception", "signatureAfterChange": " public void setUpSuite() throws Exception", "diff": ["-\tIJavaProject javaProject = createJavaProject(\"Reconciler\", new String[] {\"src\"}, new String[] {\"JCL_LIB\"}, \"bin\");", "+", "+\t// Create project with 1.4 compliance", "+\tIJavaProject project14 = createJavaProject(\"Reconciler\", new String[] {\"src\"}, new String[] {\"JCL_LIB\"}, \"bin\");", "-\tjavaProject.setOption(JavaCore.COMPILER_PB_UNUSED_LOCAL, JavaCore.IGNORE);", "-\tjavaProject = createJavaProject(\"Reconciler15\", new String[] {\"src\"}, new String[] {\"JCL15_LIB\"}, \"bin\", \"1.5\");", "+\tproject14.setOption(JavaCore.COMPILER_PB_UNUSED_LOCAL, JavaCore.IGNORE);", "+\tproject14.setOption(JavaCore.COMPILER_PB_INVALID_JAVADOC, JavaCore.WARNING);", "+", "+\t// Create project with 1.5 compliance", "+\tIJavaProject project15 = createJavaProject(\"Reconciler15\", new String[] {\"src\"}, new String[] {\"JCL15_LIB\"}, \"bin\", \"1.5\");", "-\t\tjavaProject, ", "+\t\tproject15, ", "-\tjavaProject.setOption(JavaCore.COMPILER_PB_UNUSED_LOCAL, JavaCore.IGNORE);", "+\tproject15.setOption(JavaCore.COMPILER_PB_UNUSED_LOCAL, JavaCore.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5b216f5d23662e59eaa19d0e192a7f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "commitAfterChange": "240e0c6a2e7086d1fe50f8b36056d83e0056d1f3", "methodNumberBeforeChange": 109, "methodNumberAfterChange": 109, "signatureBeforeChange": " public void generateSyntheticBodyForConstructorAccess(SyntheticAccessMethodBinding accessBinding)", "signatureAfterChange": " public void generateSyntheticBodyForConstructorAccess(SyntheticAccessMethodBinding accessBinding)", "diff": ["-\t\tsyntheticArguments = nestedType.syntheticOuterLocalVariables();", "+\t}", "+\tfor (int i = 0; i < length; i++) {", "+\t\tload(parameters[i], resolvedPosition);", "+\t\tif ((parameters[i] == DoubleBinding) || (parameters[i] == LongBinding))", "+\t\t\tresolvedPosition += 2;", "+\t\telse", "+\t\t\tresolvedPosition++;", "+\t}", "+\t", "+\tif (constructorBinding.declaringClass.isNestedType()) {", "+\t\tNestedTypeBinding nestedType = (NestedTypeBinding) constructorBinding.declaringClass;", "+\t\tSyntheticArgumentBinding[] syntheticArguments = nestedType.syntheticOuterLocalVariables();", "-\t}", "-\tfor (int i = 0; i < length; i++) {", "-\t\tload(parameters[i], resolvedPosition);", "-\t\tif ((parameters[i] == DoubleBinding) || (parameters[i] == LongBinding))", "-\t\t\tresolvedPosition += 2;", "-\t\telse", "-\t\t\tresolvedPosition++;"]}], "num": 22571}