{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ca0dfb61cd74affe65c0de0e10e2ce6", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e0f2826af0d8c811d69538963f683f6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "5d2e6e466ee272d62f273fff98dd2423f77bd2f3", "commitAfterChange": "e702e6a53e23b4f475e9578e987e56b628fcf8d7", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  \tpublic void recordUsingNullReference(Scope scope, LocalVariableBinding local,  \t\t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void recordUsingNullReference(Scope scope, LocalVariableBinding local,  \t\t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);", "-\t\t\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, reference);", "+\t\t\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6a30abdd7308234a7c4ff0427db1b55", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "5d2e6e466ee272d62f273fff98dd2423f77bd2f3", "commitAfterChange": "e702e6a53e23b4f475e9578e987e56b628fcf8d7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \t public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "signatureAfterChange": " \t public void recordUsingNullReference(Scope scope, LocalVariableBinding local, \t\tExpression reference, int checkType, FlowInfo flowInfo)", "diff": ["-\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, reference);", "+\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);", "-\t\t\t\tscope.problemReporter().localVariableCanOnlyBeNull(local, reference);", "+\t\t\t\tscope.problemReporter().localVariableRedundantCheckOnNull(local, reference);"]}], "num": 31574}