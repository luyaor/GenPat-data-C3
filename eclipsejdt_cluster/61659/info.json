{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bc7187f31a8c4ca31fb3ff1df318cc46", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5f07bb5176355c37d583d0b8c6ffad6f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/OptionTests.java", "commitBeforeChange": "a9418855905ec3893c6b4d120dab4313f397185e", "commitAfterChange": "57b4d27e30475beb9493c429d9900b65333bbe6c", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void test07() throws CoreException", "signatureAfterChange": " public void test07() throws CoreException", "diff": ["-\t\tIJavaProject projectA = ", "+\t\tJavaProject projectA = (JavaProject)", "-\t\t\t\t", "+\t\tPreferences preferences = projectA.getPreferences();", "+\t\tpreferences.addPropertyChangeListener(new TestPropertyListener());", "+\t", "-\t\t", "+\t\tassertTrue(\"projA:preferences should not be reset\", preferences == projectA.getPreferences());", "+\t\tassertTrue(\"projA:preferences property listener has been lost\", eventCount == 2);", "+\t", "-", "+\t\tassertTrue(\"projA:preferences should not be reset\", preferences == projectA.getPreferences());", "+\t\tassertTrue(\"projA:preferences property listener has been lost\", eventCount == 3);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "870fc5ef017f566ce3d055c481c5fdb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "70823bcdc247c361af65329f86a126cf9616a2fa", "commitAfterChange": "1bd4bf4c4dea2f86129d0f613a3da00767d07bfb", "methodNumberBeforeChange": 57, "methodNumberAfterChange": 57, "signatureBeforeChange": "\t \tpublic Preferences getPreferences()", "signatureAfterChange": "\t \tpublic Preferences getPreferences()", "diff": ["-\t\t", "-\t\tPreferences preferences;", "-\t\tJavaModelManager.PerProjectInfo perProjectInfo = JavaModelManager.getJavaModelManager().getPerProjectInfo(getProject(), true);", "-\t\tif ((preferences = perProjectInfo.preferences) != null) return preferences;", "+\t\tIProject project = getProject();", "+\t\tif (!JavaProject.hasJavaNature(project)) return null;", "+\t\tJavaModelManager.PerProjectInfo perProjectInfo = JavaModelManager.getJavaModelManager().getPerProjectInfo(project, true);", "+\t\tPreferences preferences =  perProjectInfo.preferences;", "+\t\tif (preferences != null) return preferences;"]}], "num": 61659}