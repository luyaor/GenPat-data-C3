{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "db4c67141cf42e36e9d6de90dbf57900", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9485e152ef5800700b2f6821a39f3425", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "43f95446ac14a8fdfe95af27d5d4d3e72461218b", "commitAfterChange": "c2203522496b5a0818a75c7d49d2924bc1086f70", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tprotected String getURLContents(String docUrlValue, String defaultEncoding) throws JavaModelException", "signatureAfterChange": " \tprotected String getURLContents(String docUrlValue, String defaultEncoding) throws JavaModelException", "diff": ["+\t */", "-\t\t\tString contentEncoding = connection.getContentEncoding();", "-\t\t\tchar[] contents = null;", "-\t\t\tif (contentEncoding != null) {", "-\t\t\t\tcontents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, contentEncoding);", "-\t\t\t} else {", "-\t\t\t\tcontents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, defaultEncoding);", "+\t\t\tString encoding = defaultEncoding;", "+\t\t\ttry {", "+\t\t\t\tif (encoding == null) {", "+\t\t\t\t\tencoding = this.getJavaProject().getProject().getDefaultCharset();", "+\t\t\t\t}", "+\t\t\t} catch (CoreException e) {", "+\t\t\t\t// ignore", "+\t\t\tchar[] contents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, encoding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c0824d389f13c10a75c0d7809bfb1998", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "8f7da2986bdba03e85c12e961553bad48253860e", "commitAfterChange": "a6ee91242a0f1cf80235353dbfc9f7b2518d4e00", "methodNumberBeforeChange": 60, "methodNumberAfterChange": 60, "signatureBeforeChange": " \tprotected String getURLContents(String docUrlValue, String encoding) throws JavaModelException", "signatureAfterChange": " \tprotected String getURLContents(String docUrlValue, String encoding) throws JavaModelException", "diff": ["+\t\tInputStream stream = null;", "+\t\t\tconnection.setUseCaches(false);", "+\t\t\tstream = connection.getInputStream();", "+\t\t\tchar[] contents = null;", "-\t\t\t\tInputStream stream = docUrl.openStream();", "-\t\t\t\tchar[] contents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, contentEncoding);", "-\t\t\t\tif (contents != null) {", "-\t\t\t\t\treturn String.valueOf(contents);", "-\t\t\t\t}", "+\t\t\t\tcontents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, contentEncoding);", "-\t\t\t\tInputStream stream = docUrl.openStream();", "-\t\t\t\tchar[] contents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, encoding);", "-\t\t\t\tif (contents != null) {", "-\t\t\t\t\treturn String.valueOf(contents);", "-\t\t\t\t}", "+\t\t\t\tcontents = org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, encoding);", "+\t\t\t}", "+\t\t\tif (contents != null) {", "+\t\t\t\treturn String.valueOf(contents);", "+\t\t} finally {", "+\t\t\tif (stream != null) {", "+\t\t\t\ttry {", "+\t\t\t\t\tstream.close();", "+\t\t\t\t} catch (IOException e) {", "+\t\t\t\t\t// ignore", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 42071}