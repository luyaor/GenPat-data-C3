{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d3651e88af89cf8f3450b50a35ad5689", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6d02c9ef84e85c17d31302aefd2cdc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/SanityTestEvaluationContext.java", "commitBeforeChange": "faf6597aa00a794b3bf608aa263d02964fb5a0f9", "commitAfterChange": "26e210811de2fca857d5561ae26405b72dccc0f5", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " public void testEvaluateVariable()", "signatureAfterChange": " public void testEvaluateVariable()", "diff": ["-\t\t\tcontext.evaluateVariables(getEnv(), getOptions(), new NoPbRequestor(), getProblemFactory());", "+\t\t\tcontext.evaluateVariables(getEnv(), getCompilerOptions(), new NoPbRequestor(), getProblemFactory());", "-\t\t\tcontext.evaluateVariable(var, getEnv(), getOptions(), requestor, getProblemFactory());", "+\t\t\tcontext.evaluateVariable(var, getEnv(), getCompilerOptions(), requestor, getProblemFactory());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9b8a5372fdc1608ab95724ec5634d49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "2a40159dff47fb0e9026a9eb6e050f6d14cc5873", "commitAfterChange": "16d59225e6af39e0fab503daf43d023ad86472cf", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r public void validateImports(ICodeSnippetRequestor requestor) throws JavaModelException", "signatureAfterChange": "\r public void validateImports(ICodeSnippetRequestor requestor) throws JavaModelException", "diff": ["+\t\r", "-\tthis.context.evaluateImports(getBuildNameEnvironment(), getInfrastructureEvaluationRequestor(requestor), getProblemFactory());\r", "+\tINameEnvironment environment = null;\r", "+\ttry {\r", "+\t\tthis.context.evaluateImports(\r", "+\t\t\tenvironment = getBuildNameEnvironment(), \r", "+\t\t\tgetInfrastructureEvaluationRequestor(requestor), \r", "+\t\t\tgetProblemFactory());\r", "+\t} finally {\r", "+\t\tif (environment != null) environment.cleanup();\r", "+\t}\r"]}], "num": 47490}