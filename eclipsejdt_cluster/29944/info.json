{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ca7374ba44945fce115d76d12926ba7", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ec22c3bd4ac7c01a8c2e597e643e6ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClasspathEntry.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic static IPath[] concatPatterns(IPath[] patternList1, IPath[] patternList2)", "signatureAfterChange": "  \tprivate IAccessRule[] combine(IAccessRule[] referringRules, IAccessRule[] rules, boolean combine)", "diff": ["-\t */", "-\tpublic static IPath[] concatPatterns(IPath[] patternList1, IPath[] patternList2) {", "-\t\tint length1 = patternList1.length;", "-\t\tif (length1 == 0) return patternList2;", "-\t\tint length2 = patternList2.length;", "-\t\tif (length2 == 0) return patternList1;", "-\t\tIPath[] result = new IPath[length1+length2];", "-\t\tSystem.arraycopy(patternList1, 0, result, 0, length1);", "-\t\tSystem.arraycopy(patternList2, 0, result, length1, length2);", "+\tprivate IAccessRule[] combine(IAccessRule[] referringRules, IAccessRule[] rules, boolean combine) {", "+\t\tif (!combine) return rules;", "+\t\tif (rules == null) return referringRules;", "+\t\t", "+\t\t// concat access rules", "+\t\tint referringRulesLength = referringRules.length;", "+\t\tint accessRulesLength = rules.length;", "+\t\tint rulesLength = referringRulesLength + accessRulesLength;", "+\t\tIAccessRule[] result = new IAccessRule[rulesLength];", "+\t\tSystem.arraycopy(referringRules, 0, result, 0, referringRulesLength);", "+\t\tSystem.arraycopy(rules, 0, result, referringRulesLength, accessRulesLength);", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb973cbe9cb6fb219b2b48e08c46c02f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "0d8b14fcdd186ef07894db465104582e473b32af", "commitAfterChange": "cb1176594034666f0f8d852dc8fc01987d54d11b", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "  \tprivate void format(TypeDeclaration typeDeclaration)", "signatureAfterChange": "  \tprivate void format(TypeDeclaration typeDeclaration)", "diff": ["-        switch(typeDeclaration.kind()) {", "-        \tcase IGenericType.CLASS_DECL :", "+        switch(TypeDeclaration.kind(typeDeclaration.modifiers)) {", "+        \tcase TypeDeclaration.CLASS_DECL :", "-        \tcase IGenericType.INTERFACE_DECL :", "+        \tcase TypeDeclaration.INTERFACE_DECL :", "-        \tcase IGenericType.ENUM_DECL :", "+        \tcase TypeDeclaration.ENUM_DECL :", "-        \tcase IGenericType.ANNOTATION_TYPE_DECL :", "+        \tcase TypeDeclaration.ANNOTATION_TYPE_DECL :", "-\t\t\tswitch(typeDeclaration.kind()) {", "-\t\t\t\tcase IGenericType.ENUM_DECL :", "+\t\t\tint kind = TypeDeclaration.kind(typeDeclaration.modifiers);", "+\t\t\tswitch(kind) {", "+\t\t\t\tcase TypeDeclaration.ENUM_DECL :", "-\t\t\t\t\tif (typeDeclaration.kind() == IGenericType.INTERFACE_DECL) {", "+\t\t\t\t\tif (kind == TypeDeclaration.INTERFACE_DECL) {", "-\t\tswitch(typeDeclaration.kind()) {", "-\t\t\tcase IGenericType.ENUM_DECL :", "+\t\tint kind = TypeDeclaration.kind(typeDeclaration.modifiers);", "+\t\tswitch(kind) {", "+\t\t\tcase TypeDeclaration.ENUM_DECL :", "-\t\t\tcase IGenericType.ANNOTATION_TYPE_DECL :", "+\t\t\tcase TypeDeclaration.ANNOTATION_TYPE_DECL :", "-\t\tswitch(typeDeclaration.kind()) {", "-\t\t\tcase IGenericType.ENUM_DECL :", "+\t\tswitch(kind) {", "+\t\t\tcase TypeDeclaration.ENUM_DECL :", "-\t\t\tcase IGenericType.ANNOTATION_TYPE_DECL :", "+\t\t\tcase TypeDeclaration.ANNOTATION_TYPE_DECL :", "-\t\tif (typeDeclaration.kind() == IGenericType.ENUM_DECL) {", "+\t\tif (kind == TypeDeclaration.ENUM_DECL) {", "-\t\tswitch(typeDeclaration.kind()) {", "-\t\t\tcase IGenericType.ENUM_DECL :", "+\t\tswitch(kind) {", "+\t\t\tcase TypeDeclaration.ENUM_DECL :", "-\t\t\tcase IGenericType.ANNOTATION_TYPE_DECL :", "+\t\t\tcase TypeDeclaration.ANNOTATION_TYPE_DECL :"]}], "num": 29944}