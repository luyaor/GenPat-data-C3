{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e4d37593e08cf6b88f75515a4f27f10c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4efae4edf2c2bdf7994f1d0b5e21cc02", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "135399ac7f48d47679e738d0a583e6c95ff87fd6", "commitAfterChange": "092d49846655da2c4e511a256ba551dc4e15c674", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r public int computeSeverity(int problemId)", "signatureAfterChange": "\r public int computeSeverity(int problemId)", "diff": ["-\t\t\r", "+\t\tcase UseAssertAsAnIdentifier :\r", "+\t\t\tif ((errorThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4e5a69b1c9d55a6ee1127b9856c181f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "7ff0ccf2d889c8ccb2eec99187eac9efe4dc4e22", "commitAfterChange": "7e5cc03e445550d3cbc10c611218c79332074276", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r public int computeSeverity(int problemId)", "signatureAfterChange": "\r public int computeSeverity(int problemId)", "diff": ["-\t\t\r", "+\t\tcase UseAssertAsAnIdentifier :\r", "+\t\t\tif ((errorThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a55e150f4f7b6eace8d712bdb8ce7cc5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "fbe3f3aabed3fd943703368b065a95bc68cf5a8d", "commitAfterChange": "3b51e6fd25bf226c9bb29d6317b71df712cf5255", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r public int computeSeverity(int problemId)", "signatureAfterChange": "\r public int computeSeverity(int problemId)", "diff": ["-\t\t\r", "+\t\tcase UseAssertAsAnIdentifier :\r", "+\t\t\tif ((errorThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad47d7c15a2849e8e9ca5676eba7fa3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "673b7eda95cd26449992e862f0c63f2c612903a0", "commitAfterChange": "b04602938404af4f8569a399fb36a5018768a262", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r \tpublic int computeSeverity(int problemId)", "signatureAfterChange": "\r public int computeSeverity(int problemId)", "diff": ["+ */\r", "+public int computeSeverity(int problemId){\r", "+\t// severity can have been preset on the problem\r", "+//\tif ((problem.severity & Fatal) != 0){\r", "+//\t\treturn Error;\r", "+//\t}\r", "+\t// if not then check whether it is a configurable problem\r", "+\tint errorThreshold = options.errorThreshold;\r", "+\tint warningThreshold = options.warningThreshold;\r", "+\t\r", "+\tswitch(problemId){\r", "-\t */\r", "-\tpublic int computeSeverity(int problemId) {\r", "-\r", "-\t\t// severity can have been preset on the problem\r", "-\t\t//\tif ((problem.severity & Fatal) != 0){\r", "-\t\t//\t\treturn Error;\r", "-\t\t//\t}\r", "-\r", "-\t\t// if not then check whether it is a configurable problem\r", "-\t\tint errorThreshold = options.errorThreshold;\r", "-\t\tint warningThreshold = options.warningThreshold;\r", "-\r", "-\t\tswitch (problemId) {\r", "-\r", "-\t\t\tcase UnreachableCatch :\r", "-\t\t\tcase CodeCannotBeReached :\r", "-\t\t\t\tif ((errorThreshold & UnreachableCode) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & UnreachableCode) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase MaskedCatch :\r", "-\t\t\t\tif ((errorThreshold & MaskedCatchBlock) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & MaskedCatchBlock) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\t\t/*\r", "-\t\t\t\t\t\tcase Never Used  :\r", "-\t\t\t\t\t\t\tif ((errorThreshold & ParsingOptionalError) != 0){\r", "-\t\t\t\t\t\t\t\treturn Error;\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tif ((warningThreshold & ParsingOptionalError) != 0){\r", "-\t\t\t\t\t\t\t\treturn Warning;\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\treturn Ignore;\r", "-\t\t\t\t*/\r", "-\t\t\tcase ImportProblemBase + NotFound :\r", "-\t\t\tcase ImportProblemBase + NotVisible :\r", "-\t\t\tcase ImportProblemBase + Ambiguous :\r", "-\t\t\tcase ImportProblemBase + InternalNameProvided :\r", "-\t\t\tcase ImportProblemBase + InheritedNameHidesEnclosingName :\r", "-\t\t\tcase DuplicateImport :\r", "-\t\t\tcase ConflictingImport :\r", "-\t\t\tcase CannotImportPackage :\r", "-\t\t\t\tif ((errorThreshold & ImportProblem) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & ImportProblem) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\t\t\t\t/*\t\t\r", "-\t\t\t\t\t\tcase UnnecessaryEnclosingInstanceSpecification :\r", "-\t\t\t\t\t\t\tif ((errorThreshold & UnnecessaryEnclosingInstance) != 0){\r", "-\t\t\t\t\t\t\t\treturn Error;\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\tif ((warningThreshold & UnnecessaryEnclosingInstance) != 0){\r", "-\t\t\t\t\t\t\t\treturn Warning;\r", "-\t\t\t\t\t\t\t}\r", "-\t\t\t\t\t\t\treturn Ignore;\r", "-\t\t\t\t*/\r", "-\t\t\tcase MethodButWithConstructorName :\r", "-\t\t\t\tif ((errorThreshold & MethodWithConstructorName) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & MethodWithConstructorName) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase OverridingNonVisibleMethod :\r", "-\t\t\t\tif ((errorThreshold & OverriddenPackageDefaultMethod) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & OverriddenPackageDefaultMethod) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase OverridingDeprecatedMethod :\r", "-\t\t\tcase UsingDeprecatedType :\r", "-\t\t\tcase UsingDeprecatedMethod :\r", "-\t\t\tcase UsingDeprecatedConstructor :\r", "-\t\t\tcase UsingDeprecatedField :\r", "-\t\t\t\tif ((errorThreshold & UsingDeprecatedAPI) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & UsingDeprecatedAPI) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase LocalVariableIsNeverUsed :\r", "-\t\t\t\tif ((errorThreshold & UnusedLocalVariable) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & UnusedLocalVariable) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase ArgumentIsNeverUsed :\r", "-\t\t\t\tif ((errorThreshold & UnusedArgument) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & UnusedArgument) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase NoImplicitStringConversionForCharArrayExpression :\r", "-\t\t\t\tif ((errorThreshold & TemporaryWarning) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & TemporaryWarning) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tcase NeedToEmulateFieldReadAccess :\r", "-\t\t\tcase NeedToEmulateFieldWriteAccess :\r", "-\t\t\tcase NeedToEmulateMethodAccess :\r", "-\t\t\tcase NeedToEmulateConstructorAccess :\r", "-\t\t\t\tif ((errorThreshold & AccessEmulation) != 0) {\r", "-\t\t\t\t\treturn Error;\r", "-\t\t\t\t}\r", "-\t\t\t\tif ((warningThreshold & AccessEmulation) != 0) {\r", "-\t\t\t\t\treturn Warning;\r", "-\t\t\t\t}\r", "-\t\t\t\treturn Ignore;\r", "-\r", "-\t\t\tdefault :\r", "+\t\tcase UnreachableCatch :\r", "+\t\tcase CodeCannotBeReached :\r", "+\t\t\tif ((errorThreshold & UnreachableCode) != 0){\r", "-\t\t}\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & UnreachableCode) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\r", "+\t\tcase MaskedCatch : \r", "+\t\t\tif ((errorThreshold & MaskedCatchBlock) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & MaskedCatchBlock) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\t\t\r", "+/*\r", "+\t\tcase Never Used  :\r", "+\t\t\tif ((errorThreshold & ParsingOptionalError) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & ParsingOptionalError) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+*/\r", "+\t\tcase ImportProblemBase + NotFound :\r", "+\t\tcase ImportProblemBase + NotVisible :\r", "+\t\tcase ImportProblemBase + Ambiguous :\r", "+\t\tcase ImportProblemBase + InternalNameProvided :\r", "+\t\tcase ImportProblemBase + InheritedNameHidesEnclosingName :\r", "+\t\tcase DuplicateImport :\r", "+\t\tcase ConflictingImport :\r", "+\t\tcase CannotImportPackage :\r", "+\t\t\tif ((errorThreshold & ImportProblem) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & ImportProblem) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+/*\t\t\r", "+\t\tcase UnnecessaryEnclosingInstanceSpecification :\r", "+\t\t\tif ((errorThreshold & UnnecessaryEnclosingInstance) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & UnnecessaryEnclosingInstance) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+*/\t\t\r", "+\t\tcase MethodButWithConstructorName :\r", "+\t\t\tif ((errorThreshold & MethodWithConstructorName) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & MethodWithConstructorName) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\t\r", "+\t\tcase OverridingNonVisibleMethod :\r", "+\t\t\tif ((errorThreshold & OverriddenPackageDefaultMethod) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & OverriddenPackageDefaultMethod) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\r", "+\t\tcase OverridingDeprecatedMethod :\t\t\t\t\r", "+\t\tcase UsingDeprecatedType :\t\t\t\t\r", "+\t\tcase UsingDeprecatedMethod :\r", "+\t\tcase UsingDeprecatedConstructor :\r", "+\t\tcase UsingDeprecatedField :\r", "+\t\t\tif ((errorThreshold & UsingDeprecatedAPI) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & UsingDeprecatedAPI) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\t\r", "+\t\tcase LocalVariableIsNeverUsed :\r", "+\t\t\tif ((errorThreshold & UnusedLocalVariable) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & UnusedLocalVariable) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\t\r", "+\t\tcase ArgumentIsNeverUsed :\r", "+\t\t\tif ((errorThreshold & UnusedArgument) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & UnusedArgument) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\r", "+\t\tcase NoImplicitStringConversionForCharArrayExpression :\r", "+\t\t\tif ((errorThreshold & TemporaryWarning) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & TemporaryWarning) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\r", "+\t\tcase NeedToEmulateFieldReadAccess :\r", "+\t\tcase NeedToEmulateFieldWriteAccess :\r", "+\t\tcase NeedToEmulateMethodAccess :\r", "+\t\tcase NeedToEmulateConstructorAccess :\t\t\t\r", "+\t\t\tif ((errorThreshold & AccessEmulation) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & AccessEmulation) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\tcase NonExternalizedStringLiteral :\r", "+\t\t\tif ((errorThreshold & NonExternalizedString) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & NonExternalizedString) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\r", "+\t\t\r", "+\t\tdefault:\r", "+\t\t\treturn Error;\r", "+}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf527a03c3ff9da99fd6cdebbe204fd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "ba238895da0e9d116073a555bfb1c09f876bedf2", "commitAfterChange": "44855522f87e615f1ca0bfcda268b074e4443dfe", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": "\r public int computeSeverity(int problemId)", "signatureAfterChange": "\r public int computeSeverity(int problemId)", "diff": ["-\t\t\r", "+\t\tcase UseAssertAsAnIdentifier :\r", "+\t\t\tif ((errorThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\t\t\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f26b44cb271b2ef8a660001f7bf67499", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "40383c2427f4645edcb9e28f2e15a8a778f0a951", "commitAfterChange": "a56fdb9e1b8e5c1a02fedba085001b6a52d742b7", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 35, "signatureBeforeChange": "\r public int computeSeverity(int problemId)", "signatureAfterChange": "\r public int computeSeverity(int problemId)", "diff": ["-\t\t\r", "+\t\tcase UseAssertAsAnIdentifier :\r", "+\t\t\tif ((errorThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\t\treturn Error;\r", "+\t\t\t}\r", "+\t\t\tif ((warningThreshold & AssertUsedAsAnIdentifier) != 0){\r", "+\t\t\t\treturn Warning;\r", "+\t\t\t}\r", "+\t\t\treturn Ignore;\t\t\r"]}], "num": 53424}