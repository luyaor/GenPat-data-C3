{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d8c7c1a355851fc60d09afbc2dc466c0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9c2ee0d528aadeebd8ebbc4ff7cda0f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessingState.java", "commitBeforeChange": "f1be73585a15718b8d7e7bfcd6517de46dc0a4a4", "commitAfterChange": "c5f13d0ee9ef1590b509e21fa6cb7160b90c28f0", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic void performClasspathResourceChange(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException", "signatureAfterChange": "  \tpublic void updateProjectReferences(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException", "diff": ["-\tpublic void performClasspathResourceChange(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException {", "-\t    ProjectUpdateInfo info = new ProjectUpdateInfo();", "-\t    info.project = project;", "-\t    info.oldResolvedPath = oldResolvedPath;", "-\t    info.newResolvedPath = newResolvedPath;", "-\t    info.newRawPath = newRawPath;", "+\tpublic void updateProjectReferences(JavaProject project, IClasspathEntry[] oldResolvedPath, IClasspathEntry[] newResolvedPath, IClasspathEntry[] newRawPath, boolean canChangeResources) throws JavaModelException {", "+\t\tProjectUpdateInfo info;", "+\t\tsynchronized (this) {", "+\t\t\tinfo = (ProjectUpdateInfo) (canChangeResources ? this.projectUpdates.remove(project) /*remove possibly awaiting one*/ : this.projectUpdates.get(project));", "+\t\t\tif (info == null) {", "+\t\t\t\tinfo = new ProjectUpdateInfo();", "+\t\t\t\tinfo.project = project;", "+\t\t\t\tinfo.oldResolvedPath = oldResolvedPath;", "+\t\t\t\tif (!canChangeResources) {", "+\t\t\t\t\tthis.projectUpdates.put(project, info);", "+\t\t\t\t}", "+\t\t    } // else refresh new classpath information", "+\t\t    info.newResolvedPath = newResolvedPath;", "+\t\t    info.newRawPath = newRawPath;", "+\t\t}", "+", "-\t    \tsynchronized (this) {", "-\t            this.projectUpdates.remove(project); // remove possibly awaiting one", "-\t\t\t}", "-\t        return;", "-\t    }", "-\t    this.recordProjectUpdate(info);", "+\t    } // else project references will be updated on next PRE_BUILD notification"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf0255ea4f4c3e4c8cbc6b77f8e024b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "f6177ec3b052fd84832987d9cda218bea2f260b7", "commitAfterChange": "336c6a8c05fa00da4647413c6af6a1b47ee97a2d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " void matchReportReference(MessageSend messageSend, MatchLocator locator, MethodBinding methodBinding) throws CoreException", "signatureAfterChange": " void matchReportReference(MessageSend messageSend, MatchLocator locator, int accuracy, MethodBinding methodBinding) throws CoreException", "diff": ["-void matchReportReference(MessageSend messageSend, MatchLocator locator, MethodBinding methodBinding) throws CoreException {", "+void matchReportReference(MessageSend messageSend, MatchLocator locator, int accuracy, MethodBinding methodBinding) throws CoreException {", "-\t\t\t\tupdateMatch(parameterizedBinding, this.pattern.getTypeArguments(), this.pattern.hasTypeParameters(), 0, locator);", "+\t\t\t\tif ((accuracy & (SUB_INVOCATION_FLAVOR | OVERRIDDEN_METHOD_FLAVOR)) != 0) {", "+\t\t\t\t\t// type parameters need to be compared with the class that is really being searched", "+\t\t\t\t\t// https://bugs.eclipse.org/375971", "+\t\t\t\t\tReferenceBinding refBinding = getMatchingSuper(((ReferenceBinding)messageSend.actualReceiverType));", "+\t\t\t\t\tif (refBinding instanceof ParameterizedTypeBinding) {", "+\t\t\t\t\t\tparameterizedBinding = ((ParameterizedTypeBinding)refBinding);", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif ((accuracy & SUPER_INVOCATION_FLAVOR) == 0) {", "+\t\t\t\t\t// not able to get the type parameters if the match is super", "+\t\t\t\t\tupdateMatch(parameterizedBinding, this.pattern.getTypeArguments(), this.pattern.hasTypeParameters(), 0, locator);", "+\t\t\t\t}"]}], "num": 31558}