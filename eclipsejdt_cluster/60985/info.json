{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "775f9900551e35c00e9f946d6046aa32", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "897663423430b49be6615e0f7b61ed70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/complete/CompletionParser.java", "commitBeforeChange": "f2d453b40b80a7b4342f872cb4a2ceb30cb26035", "commitAfterChange": "ff67eddd91980875c818d1dd4c9e986c8fe296a7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected void attachOrphanCompletionNode()", "signatureAfterChange": " protected void attachOrphanCompletionNode()", "diff": ["+\t\t", "+\t\tif ((topKnownElementKind(COMPLETION_OR_ASSIST_PARSER) == K_BETWEEN_CATCH_AND_RIGHT_PAREN)) {", "+\t\t\tif (this.assistNode instanceof CompletionOnSingleTypeReference &&", "+\t\t\t\t\t((CompletionOnSingleTypeReference)this.assistNode).isException()) {", "+\t\t\t\tbuildMoreTryStatementCompletionContext((TypeReference)this.assistNode);", "+\t\t\t\treturn;", "+\t\t\t} else if (this.assistNode instanceof CompletionOnQualifiedTypeReference &&", "+\t\t\t\t\t((CompletionOnQualifiedTypeReference)this.assistNode).isException()) {", "+\t\t\t\tbuildMoreTryStatementCompletionContext((TypeReference)this.assistNode);", "+\t\t\t\treturn;", "+\t\t\t} else if (this.assistNode instanceof CompletionOnParameterizedQualifiedTypeReference &&", "+\t\t\t\t\t((CompletionOnParameterizedQualifiedTypeReference)this.assistNode).isException()) {", "+\t\t\t\tbuildMoreTryStatementCompletionContext((TypeReference)this.assistNode);", "+\t\t\t\treturn;", "+\t\t\t}", "+\t\t}", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9daedf0404c12ec8d26e8c4d1cfa2547", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": "  \tprivate int computeRelevanceForInterestingProposal(Binding binding)", "signatureAfterChange": "  \tprivate int computeRelevanceForInterestingProposal(Binding binding)", "diff": ["+\t\t\t\tif((this.uninterestingBindingsFilter & SUBTYPE) != 0) {", "+\t\t\t\t\tif (binding instanceof TypeBinding &&", "+\t\t\t\t\t\t\tthis.uninterestingBindings[i] instanceof TypeBinding &&", "+\t\t\t\t\t\t\t((TypeBinding)binding).isCompatibleWith((TypeBinding)this.uninterestingBindings[i])) {", "+\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\tif ((this.uninterestingBindingsFilter & SUPERTYPE) != 0) {", "+\t\t\t\t\tif (binding instanceof TypeBinding &&", "+\t\t\t\t\t\t\tthis.uninterestingBindings[i] instanceof TypeBinding &&", "+\t\t\t\t\t\t\t((TypeBinding)this.uninterestingBindings[i]).isCompatibleWith((TypeBinding)binding)) {", "+\t\t\t\t\t\treturn 0;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "+\t\t}", "+\t\treturn R_INTERESTING;", "+\t}"]}], "num": 60985}