{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ba0fd03c34b1261c8c69f89fc7edcfdc", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99b1dbd01ba5189ec12408ef7c9f6624", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ReconcileWorkingCopyOperation.java", "commitBeforeChange": "4c091ce71f1c6a2472a4afd7104c5d8f3424456d", "commitAfterChange": "756e1981ccaf3561b93bab71937951ef14b72eb6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void executeOperation() throws JavaModelException", "signatureAfterChange": " \tprotected void executeOperation() throws JavaModelException", "diff": ["-\t\t\t\t\tif (problemRequestor != null && problemRequestor.isActive()){", "-\t\t\t\t\t\tproblemRequestor.beginReporting();", "-\t\t\t\t\t\tCompilationUnitDeclaration unit = CompilationUnitProblemFinder.process(workingCopy, this.workingCopyOwner, problemRequestor, this.progressMonitor);", "-\t\t\t\t\t\tproblemRequestor.endReporting();", "-\t\t\t\t\t\tif (progressMonitor != null) progressMonitor.worked(1);", "-\t\t\t\t\t\tif (this.createAST && unit != null) {", "-\t\t\t\t\t\t\tchar[] contents = workingCopy.getContents();", "-\t\t\t\t\t\t\tMap options = workingCopy.getJavaProject().getOptions(true);", "-\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(unit, contents, options, this.progressMonitor);", "+\t\t\t\t\tif (problemRequestor != null && problemRequestor.isActive()) {", "+\t\t\t\t\t    CompilationUnitDeclaration unit = null;", "+\t\t\t\t\t    try {", "+\t\t\t\t\t\t\tproblemRequestor.beginReporting();", "+\t\t\t\t\t\t\tunit = CompilationUnitProblemFinder.process(workingCopy, this.workingCopyOwner, problemRequestor, false/*don't cleanup cu*/, this.progressMonitor);", "+\t\t\t\t\t\t\tproblemRequestor.endReporting();", "-\t\t\t\t\t\t}", "+\t\t\t\t\t\t\tif (this.createAST && unit != null) {", "+\t\t\t\t\t\t\t\tchar[] contents = workingCopy.getContents();", "+\t\t\t\t\t\t\t\tMap options = workingCopy.getJavaProject().getOptions(true);", "+\t\t\t\t\t\t\t\tthis.ast = AST.convertCompilationUnit(unit, contents, options, this.progressMonitor);", "+\t\t\t\t\t\t\t\tif (progressMonitor != null) progressMonitor.worked(1);", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t    } finally {", "+\t\t\t\t\t        if (unit != null) {", "+\t\t\t\t\t            unit.cleanUp();", "+\t\t\t\t\t        }", "+\t\t\t\t\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b7775725dd868119df6eb6a6de0d4082", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "4c091ce71f1c6a2472a4afd7104c5d8f3424456d", "commitAfterChange": "756e1981ccaf3561b93bab71937951ef14b72eb6", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " protected boolean buildStructure(OpenableElementInfo info, final IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\tif (computeProblems){", "-\t\tperWorkingCopyInfo.beginReporting();", "-\t\tCompilationUnitProblemFinder.process(unit, this, parser, this.owner, perWorkingCopyInfo, problemFactory, pm);", "-\t\tperWorkingCopyInfo.endReporting();", "-\t}", "-\t", "-\tif (info instanceof ASTHolderCUInfo) {", "-\t\torg.eclipse.jdt.core.dom.CompilationUnit cu = AST.convertCompilationUnit(unit, contents, options, pm);", "-\t\t((ASTHolderCUInfo) info).ast = cu;", "+\tCompilationUnitDeclaration compilationUnitDeclaration = null;", "+\ttry {", "+\t\tif (computeProblems){", "+\t\t\tperWorkingCopyInfo.beginReporting();", "+\t\t\tcompilationUnitDeclaration = CompilationUnitProblemFinder.process(unit, this, parser, this.owner, perWorkingCopyInfo, problemFactory, false/*don't cleanup cu*/, pm);", "+\t\t\tperWorkingCopyInfo.endReporting();", "+\t\t}", "+\t\t", "+\t\tif (info instanceof ASTHolderCUInfo) {", "+\t\t\torg.eclipse.jdt.core.dom.CompilationUnit cu = AST.convertCompilationUnit(unit, contents, options, pm);", "+\t\t\t((ASTHolderCUInfo) info).ast = cu;", "+\t\t}", "+\t} finally {", "+\t    if (compilationUnitDeclaration != null) {", "+\t        compilationUnitDeclaration.cleanUp();", "+\t    }"]}], "num": 3417}