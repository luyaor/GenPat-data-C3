{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "214270e017b89e4240735cbb3d7d1a5b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1bddacb83c3ddc511dda33d70c69be3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeSignatureTest.java", "commitBeforeChange": "01e509448d7e8ce35b916b42d2b7e86284f0209d", "commitAfterChange": "22a834a98ee15054e5c5a6c83029376faf3ab633", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected void runJavac(final String testName, String[] testFiles)", "signatureAfterChange": " \tprotected void runJavac(final String testName, String[] testFiles)", "diff": ["+\t// WORK unify with AbstractRegressionTest", "+\t\t\t\tString cmdLineAsString;", "+\t\t\t\t// WORK improve double-quotes management on Linux", "+\t\t\t\tif (\"Linux\".equals(System.getProperty(\"os.name\"))) {", "+\t\t\t\t\tcmdLineAsString = cmdLine.toString().replaceAll(\"\\\"\", \"\");", "+\t\t\t\t} else {", "+\t\t\t\t\tcmdLineAsString = cmdLine.toString();", "+\t\t\t\t}", "-\t\t\t\tprocess = Runtime.getRuntime().exec(cmdLine.toString(), null, GenericTypeSignatureTest.this.dirPath.toFile());", "+\t\t\t\tprocess = Runtime.getRuntime().exec(cmdLineAsString, null, GenericTypeSignatureTest.this.dirPath.toFile());"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93785d5a9ba3e6230fdc6178fb7f1d5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "1220684fee44e314e3c5a7823de6ca64a2e43d98", "commitAfterChange": "ea9b3c75a1ccab739b2bea3a45cffc49cfff1439", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tlong compile(File directory, String options, String[] sourceFileNames, StringBuffer log) throws IOException, InterruptedException", "signatureAfterChange": " \tlong compile(File directory, String options, String[] sourceFileNames, StringBuffer log) throws IOException, InterruptedException", "diff": ["-\t\t\tcompileProcess = Runtime.getRuntime().exec(cmdLine.toString(), null, directory);", "+\t\t\tString cmdLineAsString;", "+\t\t\t// WORK improve double-quotes management on Linux", "+\t\t\tif (\"Linux\".equals(System.getProperty(\"os.name\"))) {", "+\t\t\t\tcmdLineAsString = cmdLine.toString().replaceAll(\"\\\"\", \"\");", "+\t\t\t} else {", "+\t\t\t\tcmdLineAsString = cmdLine.toString();", "+\t\t\t}", "+\t\t\tcompileProcess = Runtime.getRuntime().exec(cmdLineAsString, null, directory);"]}], "num": 753}