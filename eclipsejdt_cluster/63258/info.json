{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "48831b0a00b9db7d5dd0a776c4bffaaf", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "04a4de755bda229e0d249943d9c96c66", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "d36603e234e78a5608b9d157413740c9d9579f5d", "commitAfterChange": "947b49b32e7050f776cb224d4e387fbfba005680", "methodNumberBeforeChange": 139, "methodNumberAfterChange": 139, "signatureBeforeChange": " \tpublic void setOption(String optionName, String optionValue)", "signatureAfterChange": " \tpublic void setOption(String optionName, String optionValue)", "diff": ["-\t\tboolean modified = JavaModelManager.getJavaModelManager().storePreference(optionName, optionValue, projectPreferences);", "+\t\tboolean modified = JavaModelManager.getJavaModelManager().storePreference(optionName, optionValue, projectPreferences, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "05f2b57549da255240065b872af9181b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 134, "methodNumberAfterChange": 134, "signatureBeforeChange": " \tpublic void test0516() throws JavaModelException", "signatureAfterChange": " \tpublic void test0516() throws JavaModelException", "diff": ["-\t\tASTNode result2 = AST.parse(AST.K_CLASS_BODY_DECLARATIONS, source, declaration.getStartPosition(), declaration.getLength(), JavaCore.getOptions());", "+\t\tASTNode result2 = AST.parse(AST.K_CLASS_BODY_DECLARATIONS, source, declaration.getStartPosition(), declaration.getLength(), JavaCore.getOptions(), null/*no progress monitor*/);", "-\t}", "+\t}\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "06a9f59a1c5eeab4f133160de03f7fbd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "809c21ac086d44a312f3c31c6951126c6520aeaa", "commitAfterChange": "495067f03b4b0bfec29183e25c4db2e6b2a1dc02", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "signatureAfterChange": " \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "diff": ["-\t\t\tthis.newResolvedPath = jproject.getResolvedClasspath(this.newRawPath, null, true, this.needValidation);", "+\t\t\tthis.newResolvedPath = jproject.getResolvedClasspath(this.newRawPath, null, true, this.needValidation, null /*no reverse map*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "07b050f8baf2a94201e653d2f9135436", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void test004() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test004() throws JavaModelException, CoreException", "diff": ["-\t\tthis.utf8File.setCharset(encoding);", "+\t\tthis.utf8File.setCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "083294904f39cdb8014f6dbc98e6d546", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "commitAfterChange": "0eced122edcf3b4bb706c54234938f891591dcdc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void testCompileJDTCoreProjectNoWarning() throws IOException, CoreException", "signatureAfterChange": " \tpublic void testCompileJDTCoreProjectNoWarning() throws IOException, CoreException", "diff": ["-\t\tcompile(JavaCore.PLUGIN_ID, \"-nowarn\", false/*no log*/, JDT_CORE_SRC_PATHS);", "+\t\tcompile(JavaCore.PLUGIN_ID, \"-nowarn\", null, false/*no log*/, JDT_CORE_SRC_PATHS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08c36afa0fc72b43b5a6dbbe2d6a9bfa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseFileManager.java", "commitBeforeChange": "bdd2ddc06125eff9d34246fb7941b569e87e3115", "commitAfterChange": "600ba421e993a3511db7b319a6d0197d8fd20d42", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \t@SuppressWarnings({\"rawtypes\", \"unchecked\"}) \tprotected void addNewEntry(ArrayList paths, String currentClasspathName, \t\t\tArrayList currentRuleSpecs, String customEncoding, \t\t\tString destPath, boolean isSourceOnly, \t\t\tboolean rejectDestinationPathOnJars)", "signatureAfterChange": " \t@SuppressWarnings({\"rawtypes\", \"unchecked\"}) \tprotected void addNewEntry(ArrayList paths, String currentClasspathName, \t\t\tArrayList currentRuleSpecs, String customEncoding, \t\t\tString destPath, boolean isSourceOnly, \t\t\tboolean rejectDestinationPathOnJars)", "diff": ["-\t\t\t\tdestPath);", "+\t\t\t\tdestPath, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08e9cd1e052e3173a273c1379f7481ec", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "commitAfterChange": "52e6fbe49c09ab2aed24d8a25448612c4ab36bce", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "signatureAfterChange": " \t \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "diff": ["-\t\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(compilationUnit);", "+\t\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(compilationUnit, null /*no access restriction*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a240ed6a655062f57d146e98ca20696", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "b443266efad90a821512122003393c3e0df31fae", "commitAfterChange": "dc882d5765f5ebe6ddd0fd95b556bea362bb123f", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName)", "signatureAfterChange": "  \tpublic IPath addPackageFragmentRoot(IPath projectPath, String sourceFolderName)", "diff": ["-\t\treturn addPackageFragmentRoot(projectPath, sourceFolderName, \"\"); //$NON-NLS-1$", "+\t\treturn addPackageFragmentRoot(projectPath, sourceFolderName, null, \"\"); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "10489aad879f3a491f7e1f9ed98f4067", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "1a94a1e6652f1701b8c360d56d755e5438b79c26", "commitAfterChange": "3b002cab97d2ee77b59be67feaf705de255bc1fb", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " static Classpath getClasspath(String classpathName, String encoding, AccessRuleSet accessRuleSet)", "signatureAfterChange": " static Classpath getClasspath(String classpathName, String encoding, AccessRuleSet accessRuleSet)", "diff": ["-\treturn getClasspath(classpathName, encoding, false, accessRuleSet);", "+\treturn getClasspath(classpathName, encoding, false, accessRuleSet, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "118b01cfdec8b6a29e7196040bc9fccf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void deleting(IProject project)", "signatureAfterChange": " \tprivate void deleting(IProject project)", "diff": ["-\t\t\t\t\t\tfalse));", "+\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\tnull /*no reverse map*/));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "13196961b93021da4ea870693eb2198d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e545c83d4c17deed9318734e91334eb8e0b9f1f6", "commitAfterChange": "15d3e8c6150f3af77b3e0d0c7bd80bfd130fd914", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic IPackageFragmentRoot[] findPackageFragmentRoots(IClasspathEntry entry)", "signatureAfterChange": " \tpublic IPackageFragmentRoot[] findPackageFragmentRoots(IClasspathEntry entry)", "diff": ["-\t\t\t\t\t\t\tgetResolvedClasspath(new IClasspathEntry[] {entry}, true, false), ", "+\t\t\t\t\t\t\tgetResolvedClasspath(new IClasspathEntry[] {entry}, null, true, false), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "139c52c8dee2945cc2b3f3afb7ce2bca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnitProblemFinder.java", "commitBeforeChange": "67744c35fb096b073b6eb207529145544c47d6b6", "commitAfterChange": "a69ec5abfba2adcf10fe50b7c7be7bc087bd47c7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic static CompilationUnitDeclaration process( \t\tICompilationUnit unitElement,  \t\tIProblemRequestor problemRequestor, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic static CompilationUnitDeclaration process( \t\tICompilationUnit unitElement,  \t\tIProblemRequestor problemRequestor, \t\tIProgressMonitor monitor) \t\tthrows JavaModelException", "diff": ["-\t\treturn process(null, unitElement, problemRequestor, new DefaultProblemFactory(), monitor);", "+\t\treturn process(null/*no CompilationUnitDeclaration*/, unitElement, null/*use default Parser*/,problemRequestor, new DefaultProblemFactory(), monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "14875ca8e0250d5417ee8027db26c6f5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 278, "methodNumberAfterChange": 286, "signatureBeforeChange": " public void test239_jar_ref_in_jar()", "signatureAfterChange": " public void test239_jar_ref_in_jar()", "diff": ["-\t\ttrue);", "+\t\ttrue,", "+\t\tnull /* progress */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "15cf19cd9c5647ebc0f5193c56004810", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/WhileStatement.java", "commitBeforeChange": "593b7c498e35f1adb3620eff493d0f4b5e771b68", "commitAfterChange": "3b34d278ba258a10a58d188a2047da908229b941", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "signatureAfterChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "diff": ["-\t\treturn (isConditionTrue || isConditionOptimizedTrue) && (this.action == null || !this.action.breaksOut());", "+\t\treturn (isConditionTrue || isConditionOptimizedTrue) && (this.action == null || !this.action.breaksOut(null));", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "17b48186e1627aea8e304e1fde4dcf82", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ForeachStatement.java", "commitBeforeChange": "79774393baaba7f9e5f3461242a5b822bf662647", "commitAfterChange": "8b644ce068ecf49daa5da8af14e814933ab3df61", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tint nullStatus = NullAnnotationMatching.checkAssignment(currentScope, flowContext, elementVarBinding, elementNullStatus,", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tthis.collection, this.collectionElementType);", "+\t\t\tint nullStatus = NullAnnotationMatching.checkAssignment(currentScope, flowContext, elementVarBinding, null, // have no useful flowinfo for element var", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\telementNullStatus, this.collection, this.collectionElementType);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19976b4f19e37255145d29856a192855", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic void test002() throws JavaModelException, CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic void test002() throws JavaModelException, CoreException, UnsupportedEncodingException", "diff": ["-\t\tthis.encodingProject.setDefaultCharset(encoding);", "+\t\tthis.encodingProject.setDefaultCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c134ee59f50250210889bd9a81ed8d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironmentRequestor.java", "commitBeforeChange": "43bf4677e87b76a460506f46871dac9cbe16b176", "commitAfterChange": "f13a740e3b814a194962fd0ef85df91efde745be", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void acceptType(IType type)", "signatureAfterChange": " public void acceptType(IType type)", "diff": ["-\t\tthis.requestor.acceptType(packageName, type.getElementName().toCharArray(), type.getFlags(), accessRestriction);", "+\t\tthis.requestor.acceptType(packageName, type.getElementName().toCharArray(), null, type.getFlags(), accessRestriction);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1c3353f456b6572b1329949e9054741f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "809c21ac086d44a312f3c31c6951126c6520aeaa", "commitAfterChange": "495067f03b4b0bfec29183e25c4db2e6b2a1dc02", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic IPackageFragmentRoot[] findPackageFragmentRoots(IClasspathEntry entry)", "signatureAfterChange": " \tpublic IPackageFragmentRoot[] findPackageFragmentRoots(IClasspathEntry entry)", "diff": ["-\t\t\t\t\t\t\tgetResolvedClasspath(new IClasspathEntry[] {entry}, null, true, false), ", "+\t\t\t\t\t\t\tgetResolvedClasspath(new IClasspathEntry[] {entry}, null, true, false, null/*no reverse map*/), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d3a217a3be9f61d796c4ed1d4d9688e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "429d7df288eceadbc2bb6418c8a2cab4930645b8", "commitAfterChange": "035e81e22d7f5ffa0ef14b6015456b50ec72de9a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public MethodBinding findMethodForArray(ArrayBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " public MethodBinding findMethodForArray(ArrayBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\tMethodBinding methodBinding = object.getExactMethod(selector, argumentTypes);", "+\tMethodBinding methodBinding = object.getExactMethod(selector, argumentTypes, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1d726d572e8f3baa26e363ff78babe7d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void testBug66898() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void testBug66898() throws JavaModelException, CoreException", "diff": ["-\t\tthis.utf8File.setCharset(encoding);", "+\t\tthis.utf8File.setCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1dfd37060dd6a585ea2d7c266452dab3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "49221e1dedf80843e710093d67caabba63367062", "commitAfterChange": "26bd6002dbcadf28eb844a4d87a4d9f705c01741", "methodNumberBeforeChange": 46, "methodNumberAfterChange": 47, "signatureBeforeChange": " \t \tprivate void findImports(CompletionOnImportReference importReference, boolean findMembers)", "signatureAfterChange": " \t \tprivate void findImports(CompletionOnImportReference importReference, boolean findMembers)", "diff": ["-\t\t\tacceptTypes();", "+\t\t\tacceptTypes(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fc1c9f5a5cb9d774ad00ee7da5ade07", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic Compiler( \t\t\tINameEnvironment environment, \t\t\tIErrorHandlingPolicy policy, \t\t\tMap settings, \t\t\tfinal ICompilerRequestor requestor, \t\t\tIProblemFactory problemFactory, \t\t\tboolean parseLiteralExpressionsAsConstants)", "signatureAfterChange": " \tpublic Compiler( \t\t\tINameEnvironment environment, \t\t\tIErrorHandlingPolicy policy, \t\t\tMap settings, \t\t\tfinal ICompilerRequestor requestor, \t\t\tIProblemFactory problemFactory, \t\t\tboolean parseLiteralExpressionsAsConstants)", "diff": ["-\t\tthis(environment, policy, new CompilerOptions(settings, parseLiteralExpressionsAsConstants), requestor, problemFactory, null); ", "+\t\tthis(environment, policy, new CompilerOptions(settings, parseLiteralExpressionsAsConstants), requestor, problemFactory, null /* printwriter */, null /* progress */); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1fccfd2046034b0d261ea677398cc5e5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/util/EclipseFileManager.java", "commitBeforeChange": "bdd2ddc06125eff9d34246fb7941b569e87e3115", "commitAfterChange": "600ba421e993a3511db7b319a6d0197d8fd20d42", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \t@SuppressWarnings({\"rawtypes\", \"unchecked\"}) \tprotected void addNewEntry(ArrayList paths, String currentClasspathName, \t\t\tArrayList currentRuleSpecs, String customEncoding, \t\t\tString destPath, boolean isSourceOnly, \t\t\tboolean rejectDestinationPathOnJars)", "signatureAfterChange": " \t@SuppressWarnings({\"rawtypes\", \"unchecked\"}) \tprotected void addNewEntry(ArrayList paths, String currentClasspathName, \t\t\tArrayList currentRuleSpecs, String customEncoding, \t\t\tString destPath, boolean isSourceOnly, \t\t\tboolean rejectDestinationPathOnJars)", "diff": ["-\t\t\t\tdestPath);", "+\t\t\t\tdestPath, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "20c71f55605c6c82af639a39873320c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Block.java", "commitBeforeChange": "5333a8d6e234b4d5bbcbee365cfa39aafade1032", "commitAfterChange": "9d00e6aaf0f2f4598b676da2bb31ba68b6d40cc8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo analyseCode(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\tthis.scope.checkUnclosedCloseables(flowInfo, null);", "+\t\tthis.scope.checkUnclosedCloseables(flowInfo, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "217895612776d056586cf1dc41f86da2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " \tpublic void testParseCompilationUnit1() throws CoreException", "signatureAfterChange": " \tpublic void testParseCompilationUnit1() throws CoreException", "diff": ["-\t\t\tCompilationUnit cu = AST.parseCompilationUnit(workingCopy1, true, owner);", "+\t\t\tCompilationUnit cu = AST.parseCompilationUnit(workingCopy1, true, owner, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "238639e5f618dab39b41f499326d24ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "1bd28947ec61a68bcbaa48e5f62a38f1082dad74", "commitAfterChange": "158f15ed7305b84f608a44b2b3e60c3a50fa4c1b", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic static NullAnnotationMatching analyse(TypeBinding requiredType, TypeBinding providedType, int nullStatus)", "signatureAfterChange": " \tpublic static NullAnnotationMatching analyse(TypeBinding requiredType, TypeBinding providedType, int nullStatus)", "diff": ["-\t\treturn analyse(requiredType, providedType, null, nullStatus, CheckMode.COMPATIBLE);", "+\t\treturn analyse(requiredType, providedType, null, null, nullStatus, CheckMode.COMPATIBLE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "23baa163a1ca971da9b292624575de25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "commitAfterChange": "52e6fbe49c09ab2aed24d8a25448612c4ab36bce", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "signatureAfterChange": " \tpublic void complete(ICompilationUnit sourceUnit, int completionPosition, int pos)", "diff": ["-\t\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);", "+\t\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit, null /*no access restriction*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "26de37b0e77f37e3d0b437259160c442", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "commitAfterChange": "de8aa9940086fe152901aa168536f30670945804", "methodNumberBeforeChange": 104, "methodNumberAfterChange": 106, "signatureBeforeChange": "  public void generateEmulationForConstructor(Scope scope, MethodBinding methodBinding)", "signatureAfterChange": "  public void generateEmulationForConstructor(Scope scope, MethodBinding methodBinding)", "diff": ["-\tnewArray(scope.createArrayType(scope.getType(TypeConstants.JAVA_LANG_CLASS, 3), 1));", "+\tnewArray(null, scope.createArrayType(scope.getType(TypeConstants.JAVA_LANG_CLASS, 3), 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2710e88d80e84430f3c62ae0a930340b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "30b30e8c56b7e7a44eebf42932935c15fe10b232", "commitAfterChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void _testBatchCompilerJavadoc() throws IOException, CoreException", "signatureAfterChange": " \tpublic void _testBatchCompilerJavadoc() throws IOException, CoreException", "diff": ["-\t\tcompile(JavaCore.PLUGIN_ID, \"-warn:javadoc\", true/*log errors*/);", "+\t\tcompile(JavaCore.PLUGIN_ID, \"-warn:javadoc\", true/*log errors*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28198f4ba762806422dcb9bda6e351b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.tool/src/org/eclipse/jdt/internal/compiler/tool/EclipseCompiler.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "signatureAfterChange": " \t@SuppressWarnings(\"unchecked\") \tpublic CompilationTask getTask(Writer out, \t\t\tJavaFileManager fileManager, \t\t\tDiagnosticListener<? super JavaFileObject> diagnosticListener, \t\t\tIterable<String> options, \t\t\tIterable<String> classes, \t\t\tIterable<? extends JavaFileObject> compilationUnits)", "diff": ["-\t\t\teclipseCompiler.initialize(writerOut, writerErr, false, null);", "+\t\t\teclipseCompiler.initialize(writerOut, writerErr, false, null/*options*/, null/*progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28479c909d3d5fbbcd52e3fe1731127b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintFormula.java", "commitBeforeChange": "c14c8093a10c10363866e505a62237c9c62b679e", "commitAfterChange": "bc58ceae1b3691095e4db8bfcb9f2192eeaf077d", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic boolean applySubstitution(BoundSet solutionSet, InferenceVariable[] variables)", "signatureAfterChange": "  \tpublic boolean applySubstitution(BoundSet solutionSet, InferenceVariable[] variables)", "diff": ["-\t\t\tTypeBinding instantiation = solutionSet.getInstantiation(variables[i]);", "+\t\t\tTypeBinding instantiation = solutionSet.getInstantiation(variables[i], null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "298b945a9b56c8336d8121a525a839ee", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "e545c83d4c17deed9318734e91334eb8e0b9f1f6", "commitAfterChange": "15d3e8c6150f3af77b3e0d0c7bd80bfd130fd914", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "diff": ["-\t\t\tclasspath = ((JavaProject)javaProject).getResolvedClasspath(rawClasspath, true/*ignore pb*/, false/*no marker*/);", "+\t\t\tclasspath = ((JavaProject)javaProject).getResolvedClasspath(rawClasspath, null /*output*/, true/*ignore pb*/, false/*no marker*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6d4c480110670f8c1e4515ea4198e8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void resolve(BlockScope scope)", "signatureAfterChange": "  public void resolve(BlockScope scope)", "diff": ["-\tscope.problemReporter().typeMismatchError(expressionType, methodType, this.expression);", "+\tscope.problemReporter().typeMismatchError(expressionType, methodType, this.expression, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2b03b7d066dc08d2c22c7b86a533d3de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "370fc9797484c96c0e1fdf0a7794604c16e52ccb", "commitAfterChange": "c50ca866bcc8a651da6c9f1ec9e6c29c39dc7ade", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "signatureAfterChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "diff": ["-\t\t\t    \t\t\tTypeBinding[] glb = Scope.greaterLowerBound(bounds); // re-evaluate", "+\t\t\t    \t\t\tTypeBinding[] glb = Scope.greaterLowerBound(bounds, null); // re-evaluate"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2bd7d4c354e2e15d1a636724469cc591", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/SourceIndexer.java", "commitBeforeChange": "b505eec36702205d416645439f4218a52c610506", "commitAfterChange": "a0c59dbe1fcc531830cd318af17b39e6ad26be4e", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void indexDocument()", "signatureAfterChange": " \tpublic void indexDocument()", "diff": ["-\t\t\tparser.parseCompilationUnit(compilationUnit, true/*full parse*/);", "+\t\t\tparser.parseCompilationUnit(compilationUnit, true/*full parse*/, null/*no progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2c71e546a5074adc017a9f637697f3b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "4615f36007e76e02bb3b421bd8f019d1c72e5291", "commitAfterChange": "56f02b653e0dc58dc37c3d15b2e6a78c25c99600", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 28, "signatureBeforeChange": "\r protected void openWhenClosed(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "signatureAfterChange": "\r protected void openWhenClosed(IProgressMonitor pm, IBuffer buffer) throws JavaModelException", "diff": ["-\t\tbuildStructure(info, pm);\r", "+\t\tbuildStructure(info, null, pm);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2de29323cd6383e7d74312d3049bbaf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "1f4efb41a52f8c33e561047da4304f9fe9e90dc9", "commitAfterChange": "44b2c87051c4d9bbf37b4cf649be500c54102bf7", "methodNumberBeforeChange": 105, "methodNumberAfterChange": 105, "signatureBeforeChange": " \t \tprivate void saveVariablesAndContainers() throws CoreException", "signatureAfterChange": " \t \tprivate void saveVariablesAndContainers() throws CoreException", "diff": ["-\t\t\t\t\t\t\t\t\tfalse);", "+\t\t\t\t\t\t\t\t\tfalse,", "+\t\t\t\t\t\t\t\t\tnull/*not interested in unknown elements*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3180aefef60b3088dbe2a9426ed8fd42", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "429d7df288eceadbc2bb6418c8a2cab4930645b8", "commitAfterChange": "035e81e22d7f5ffa0ef14b6015456b50ec72de9a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic MethodBinding findMethodForArray( \t\tArrayBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethodForArray( \t\tArrayBinding receiverType, \t\tchar[] selector, \t\tTypeBinding[] argumentTypes, \t\tInvocationSite invocationSite)", "diff": ["-\t\tMethodBinding methodBinding = object.getExactMethod(selector, argumentTypes);", "+\t\tMethodBinding methodBinding = object.getExactMethod(selector, argumentTypes, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "32d20cca5c6445777d74d00524770497", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "commitAfterChange": "52e6fbe49c09ab2aed24d8a25448612c4ab36bce", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit,  \t\t\tICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "signatureAfterChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\tCompilationUnitDeclaration unit,  \t\t\tICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\t\t\t\tlookupEnvironment.buildTypeBindings(unit);", "+\t\t\t\tlookupEnvironment.buildTypeBindings(unit, null /*no access restriction*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "33d398f88c7e04132b5bf2bcd93c2342", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "signatureAfterChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\t */", "-\tpublic CompilationUnitDeclaration resolve(", "-\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, ", "-\t\t\tboolean verifyMethods,", "-\t\t\tboolean analyzeCode,", "-\t\t\tboolean generateCode) {", "-\t\t\t\t", "-\t\treturn resolve(", "-\t\t\tnull,", "-\t\t\tsourceUnit,", "-\t\t\tverifyMethods,", "-\t\t\tanalyzeCode,", "-\t\t\tgenerateCode);", "-\t}", "+\t */", "+\tpublic CompilationUnitDeclaration resolve(", "+\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, ", "+\t\t\tboolean verifyMethods,", "+\t\t\tboolean analyzeCode,", "+\t\t\tboolean generateCode) {", "+\t\t\t\t", "+\t\treturn resolve(", "+\t\t\tnull, /* no existing compilation unit declaration*/", "+\t\t\tsourceUnit,", "+\t\t\tnull/*no node searcher*/, ", "+\t\t\tverifyMethods,", "+\t\t\tanalyzeCode,", "+\t\t\tgenerateCode);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3415bb931739ab8c72e15e8844cdc4a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MemberValuePair.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "signatureAfterChange": " \t \tpublic void resolveTypeExpecting(BlockScope scope, TypeBinding requiredType)", "diff": ["-\t\t\t\t\tscope.problemReporter().typeMismatchError(valueType, requiredType, this.value);", "+\t\t\t\t\tscope.problemReporter().typeMismatchError(valueType, requiredType, this.value, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36c16dcc880c1973bddca5db8ef29295", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "commitAfterChange": "52e6fbe49c09ab2aed24d8a25448612c4ab36bce", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "signatureAfterChange": " \tpublic void selectType(ISourceType sourceType, char[] typeName, SourceTypeElementInfo[] topLevelTypes, boolean searchInEnvironment)", "diff": ["-\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);", "+\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit, null /*no access restriction*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "376f4381035fd60df793eca05f69127f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintExpressionFormula.java", "commitBeforeChange": "c14c8093a10c10363866e505a62237c9c62b679e", "commitAfterChange": "bc58ceae1b3691095e4db8bfcb9f2192eeaf077d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "signatureAfterChange": "  \tstatic boolean inferPolyInvocationType(InferenceContext18 inferenceContext, InvocationSite invocationSite, TypeBinding targetType, MethodBinding method)  \t\t\t\tthrows InferenceFailureException", "diff": ["-\t\t\t\t\tTypeBinding u = solution.getInstantiation(alpha).capture(inferenceContext.scope, invocationSite.sourceStart()); // TODO make position unique?", "+\t\t\t\t\tTypeBinding u = solution.getInstantiation(alpha, null).capture(inferenceContext.scope, invocationSite.sourceStart()); // TODO make position unique?"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "37fe0fe8cefbef7bba4d4fce58a26041", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "30b30e8c56b7e7a44eebf42932935c15fe10b232", "commitAfterChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void _testBatchCompilerDefault() throws IOException, CoreException", "signatureAfterChange": " \tpublic void _testBatchCompilerDefault() throws IOException, CoreException", "diff": ["-\t\tcompile(JavaCore.PLUGIN_ID, \"\", true/*log errors*/);", "+\t\tcompile(JavaCore.PLUGIN_ID, \"\", true/*log errors*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "388d55d358ebb461587e5853ec15664c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionNodeFound.java", "commitBeforeChange": "ed04e9efb45ff73e01fac12a6ae0aba550054536", "commitAfterChange": "8d68e00ba785472efc36cd0f68660beb95ca71eb", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public SelectionNodeFound()", "signatureAfterChange": " \t public SelectionNodeFound()", "diff": ["-\tthis(null, false); // we found a problem in the selection node", "+\tthis(null, null, false); // we found a problem in the selection node"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3cf30b44ce7ddb05f4a3ccd55dd2516a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocator.java", "commitBeforeChange": "e931aecd3dd39697fd0a057bffda11890337b018", "commitAfterChange": "305acfe01a2cb51532a94f25f8a4ff106e9d160c", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " protected boolean createHierarchyResolver(IType focusType, PossibleMatch[] possibleMatches)", "signatureAfterChange": " protected boolean createHierarchyResolver(IType focusType, PossibleMatch[] possibleMatches)", "diff": ["-\t\t\t\tcacheBinaryType(focusType);", "+\t\t\t\tcacheBinaryType(focusType, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3e71672902b6e3d09e5d26cc7c342b54", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "ead8e814ab499b7622eb426e1befbcf339b11ce8", "commitAfterChange": "557b79fe942a0c2ecd096efec77764eeda1e9de9", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "signatureAfterChange": " \tpublic static TypeBinding substitute(Substitution substitution, TypeBinding originalType)", "diff": ["-\t\t\t    \t\t\tTypeBinding[] glb = Scope.greaterLowerBound(bounds); // re-evaluate", "+\t\t\t    \t\t\tTypeBinding[] glb = Scope.greaterLowerBound(bounds, null); // re-evaluate"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ff07aa30f43badab8f2132e33c9d212", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "3bf78e3bc9d1fb07796ba10c402a220646e7e25e", "commitAfterChange": "b89ef89b8b82c7a5d2e21ed9e4c3180d1054cb0a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void assertAllTypes(String expected) throws JavaModelException", "signatureAfterChange": " protected void assertAllTypes(String expected) throws JavaModelException", "diff": ["+protected void assertAllTypes(String expected) throws JavaModelException {", "+\tassertAllTypes(\"Unexpected all types\", null, expected);", "-protected void assertAllTypes(String expected) throws JavaModelException {", "-\tassertAllTypes(\"Unexpected all types\", expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4046b260ae4c4e3b9ebe6d682ad2c6bd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic IPackageFragmentRoot[] computePackageFragmentRoots(IClasspathEntry resolvedEntry)", "signatureAfterChange": " \tpublic IPackageFragmentRoot[] computePackageFragmentRoots(IClasspathEntry resolvedEntry)", "diff": ["-\t\t\t\t\tfalse // don't retrieve exported roots", "+\t\t\t\t\tfalse, // don't retrieve exported roots", "+\t\t\t\t\tnull /* no reverse map */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4211cce73088917afd85776d90c89e35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic IPackageFragmentRoot[] findPackageFragmentRoots(IClasspathEntry entry)", "signatureAfterChange": " \tpublic IPackageFragmentRoot[] findPackageFragmentRoots(IClasspathEntry entry)", "diff": ["-\t\t\t\t\t\t\tfalse); // don't retrieve exported roots", "+\t\t\t\t\t\t\tfalse, // don't retrieve exported roots", "+\t\t\t\t\t\t\tnull); /*no reverse map*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "424d7074159bf60b905f04b001fcbf05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic void test030() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test030() throws JavaModelException, CoreException", "diff": ["-\t\t\tfile.setCharset(encoding);", "+\t\t\tfile.setCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "425ac6c0336833ce14efc889bab10850", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic void test011() throws JavaModelException, CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic void test011() throws JavaModelException, CoreException, UnsupportedEncodingException", "diff": ["-\t\tthis.utf8File.setCharset(encoding);", "+\t\tthis.utf8File.setCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "430835e593515fc826d9458e000a7190", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 136, "methodNumberAfterChange": 136, "signatureBeforeChange": " \tpublic void test0518() throws JavaModelException", "signatureAfterChange": " \tpublic void test0518() throws JavaModelException", "diff": ["-\t\tASTNode result2 = AST.parse(AST.K_CLASS_BODY_DECLARATIONS, source, declaration.getStartPosition(), declaration.getLength(), JavaCore.getOptions());", "+\t\tASTNode result2 = AST.parse(AST.K_CLASS_BODY_DECLARATIONS, source, declaration.getStartPosition(), declaration.getLength(), JavaCore.getOptions(), null/*no progress monitor*/);", "-\t}\t", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47230f75efe4d9292e36500c7660ee37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/NullAnnotationMatching.java", "commitBeforeChange": "57bd7f827fb4e26e2f4fcfb421451c18e4a1d09f", "commitAfterChange": "6eea20ade3a92e767b892a10ecaadeddc013ba12", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static NullAnnotationMatching analyse(TypeBinding requiredType, TypeBinding providedType, int nullStatus)", "signatureAfterChange": " \tpublic static NullAnnotationMatching analyse(TypeBinding requiredType, TypeBinding providedType, int nullStatus)", "diff": ["-\t\treturn analyse(requiredType, providedType, nullStatus, false);", "+\t\treturn analyse(requiredType, providedType, null, nullStatus, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4797568ce6793d1c877a700221696b2d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/AddCompilationUnitToIndex.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic void initializeContents()", "signatureAfterChange": "\r \tpublic void initializeContents()", "diff": ["-\t\t\t\t\t\t\tlocation.toFile());\r", "+\t\t\t\t\t\t\tlocation.toFile(), null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "485cac8e288c199b5b237655481c86b3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/FileSystem.java", "commitBeforeChange": "bdd2ddc06125eff9d34246fb7941b569e87e3115", "commitAfterChange": "600ba421e993a3511db7b319a6d0197d8fd20d42", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding)", "signatureAfterChange": " public FileSystem(String[] classpathNames, String[] initialFileNames, String encoding)", "diff": ["-\t\tClasspath classpath = getClasspath(classpathNames[i], encoding, null);", "+\t\tClasspath classpath = getClasspath(classpathNames[i], encoding, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "48b3c84cadc21692c1dae9bef4b9d698", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/processing/JobManager.java", "commitBeforeChange": "84e2da9db5b8e3d6a6df97b0f7ad6795dd65a9ad", "commitAfterChange": "6d9cea6072b91b492f8661608c9d01337562ebef", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": "\r \tpublic void run()", "signatureAfterChange": "\r \tpublic void run()", "diff": ["-\t\t\t\t\tboolean status = job.execute();\r", "+\t\t\t\t\tboolean status = job.execute(null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a0bf8645c9aa484888516f4a3fe2709", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "4a7fb72faa1d4eb35981dd799c06dbffe9837a2f", "commitAfterChange": "af607e2e1ad6576e50200e327ea9acd540ed1ad7", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportReference(ASTNode reference, IJavaElement element, Binding elementBinding, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\t\tmatch = locator.newFieldReferenceMatch(element, elementBinding, accuracy, offset, reference.sourceEnd-offset+1, reference);", "+\t\t\tmatch = locator.newFieldReferenceMatch(element, null, elementBinding, accuracy, offset, reference.sourceEnd-offset+1, reference);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4aca307334ddb3f6677c47fb07e38b95", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "1d5b841741b609cf6927afba3dde0ac1dd2572e2", "commitAfterChange": "09c7c7b4fe8a9c0ad49252ee63d32d12d87dd8ea", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tIClassFile classFile, \t\tboolean resolveBindings, \t\tWorkingCopyOwner owner, \t\tIProgressMonitor monitor)", "diff": ["+\t\t\t\t\tnull/*no node searcher*/,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e5414a040a6760e9e06a8dd433f6af2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMember.java", "commitBeforeChange": "df078329218bf2c1a32b5241c9545d932f017e46", "commitAfterChange": "b807535043a8e4f63fd714ed5c671846765013dc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r protected void openHierarchy() throws JavaModelException", "signatureAfterChange": "\r protected void openHierarchy() throws JavaModelException", "diff": ["-\t\t\topenableParent.openWhenClosed(null);\r", "+\t\t\topenableParent.openWhenClosed(null, null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "506a9b827c954901aa5568ca0a938c9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Clinit.java", "commitBeforeChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "commitAfterChange": "de8aa9940086fe152901aa168536f30670945804", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tprivate void generateCode( \t\tClassScope classScope, \t\tClassFile classFile, \t\tint clinitOffset)", "signatureAfterChange": " \tprivate void generateCode( \t\tClassScope classScope, \t\tClassFile classFile, \t\tint clinitOffset)", "diff": ["+\t\t\t\t\tnull,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "511122ea85306d8a0b1f05e33750afa7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testParseCompilationUnit2() throws CoreException", "signatureAfterChange": " \tpublic void testParseCompilationUnit2() throws CoreException", "diff": ["-\t\t\t\towner);", "+\t\t\t\towner,", "+\t\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "56962ffd4eca5b59d261f735e3d40cb9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic void test015() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test015() throws JavaModelException, CoreException", "diff": ["-\t\tthis.encodingProject.setDefaultCharset(encoding);", "+\t\tthis.encodingProject.setDefaultCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "587e46e2b5eb09e15c086ad7c7e88c49", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "809c21ac086d44a312f3c31c6951126c6520aeaa", "commitAfterChange": "495067f03b4b0bfec29183e25c4db2e6b2a1dc02", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 84, "signatureBeforeChange": "  \tpublic String[] projectPrerequisites(IClasspathEntry[] entries) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic String[] projectPrerequisites(IClasspathEntry[] entries) \t\tthrows JavaModelException", "diff": ["-\t\tentries = getResolvedClasspath(entries, null, true, false);", "+\t\tentries = getResolvedClasspath(entries, null, true, false, null/*no reverse map*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59784ab96ad60753615d7f5e6833f459", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "cb102deeeb30ec755d64a8d266f5423000dc4f4e", "commitAfterChange": "f18746495477338a9b83fca4f673d973bc3b28e9", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\tfoundMethod = mostSpecificMethodBinding(visible, visible.length, argumentTypes, invocationSite);", "+\t\t\t\t\tfoundMethod = mostSpecificMethodBinding(visible, visible.length, argumentTypes, invocationSite, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5bb8d2b9666b1a81f484e2a9664a7415", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "035672481c2d56adf6c244f2439c7ebb1707c88e", "commitAfterChange": "ec5dcab20d3dd38f3f0b34d217969a2e8a9b29f6", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void notifySourceElementRequestor(CompilationUnitDeclaration parsedUnit)", "signatureAfterChange": " public void notifySourceElementRequestor(CompilationUnitDeclaration parsedUnit)", "diff": ["-\t\t\t\tnotifySourceElementRequestor((TypeDeclaration)node, sourceType == null);", "+\t\t\t\tnotifySourceElementRequestor((TypeDeclaration)node, sourceType == null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5cf581e50b6bd9d39cb712ba6cdecf43", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "commitAfterChange": "0eced122edcf3b4bb706c54234938f891591dcdc", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic void testCompileJDTCoreProjectJavadoc() throws IOException, CoreException", "signatureAfterChange": " \tpublic void testCompileJDTCoreProjectJavadoc() throws IOException, CoreException", "diff": ["-\t\tcompile(JavaCore.PLUGIN_ID, \"-warn:javadoc\", false/*no log*/, JDT_CORE_SRC_PATHS);", "+\t\tcompile(JavaCore.PLUGIN_ID, \"-warn:javadoc\", null, false/*no log*/, JDT_CORE_SRC_PATHS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "600c1da787a430b4c9b56ed59be377da", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void test014() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test014() throws JavaModelException, CoreException", "diff": ["-\t\tthis.utf8File.setCharset(encoding);", "+\t\tthis.utf8File.setCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60400bf63e3f0fdf52e690e9a2f8c9ab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetClassFile.java", "commitBeforeChange": "717a44c6b6c761be0c48243cde9dff6857a6db32", "commitAfterChange": "df9941361641a347d1ba4ee80fe7f9c7468ba17a", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "signatureAfterChange": "\r public static void createProblemType(TypeDeclaration typeDeclaration, CompilationResult unitResult)", "diff": ["-\t\t\t\tFieldReference.getConstantFor(fields[i], false, null, 0);\r", "+\t\t\t\tFieldReference.getConstantFor(fields[i], false, null, null, 0);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6179b70cd16186a12b8f218d20d28914", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 279, "methodNumberAfterChange": 287, "signatureBeforeChange": " public void test240_jar_ref_in_jar()", "signatureAfterChange": " public void test240_jar_ref_in_jar()", "diff": ["-\t\ttrue);", "+\t\ttrue,", "+\t\tnull /* progress */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61bfe1bc2f076c4f27dc772df890df23", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 62, "methodNumberAfterChange": 63, "signatureBeforeChange": "  public Main(PrintWriter outWriter, PrintWriter errWriter, boolean systemExitWhenFinished)", "signatureAfterChange": " public Main(PrintWriter outWriter, PrintWriter errWriter, boolean systemExitWhenFinished)", "diff": ["+ */", "-\tthis(outWriter, errWriter, systemExitWhenFinished, null);", "+\tthis(outWriter, errWriter, systemExitWhenFinished, null /* options */, null /* progress */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "63f04923651fcdf194155f6ff1fef87c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaConventions.java", "commitBeforeChange": "809c21ac086d44a312f3c31c6951126c6520aeaa", "commitAfterChange": "495067f03b4b0bfec29183e25c4db2e6b2a1dc02", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "signatureAfterChange": " \tpublic static IJavaModelStatus validateClasspath(IJavaProject javaProject, IClasspathEntry[] rawClasspath, IPath projectOutputLocation)", "diff": ["-\t\t\tclasspath = ((JavaProject)javaProject).getResolvedClasspath(rawClasspath, null /*output*/, true/*ignore pb*/, false/*no marker*/);", "+\t\t\tclasspath = ((JavaProject)javaProject).getResolvedClasspath(rawClasspath, null /*output*/, true/*ignore pb*/, false/*no marker*/, null /*no reverse map*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "661f61b117623ff00bf2fa95c69efab9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "5d2cd7f1076b45eee90e6733e80765abd1df3d6a", "commitAfterChange": "14e86a8141996732826e41cf3c8dd392bb1fd5ba", "methodNumberBeforeChange": 79, "methodNumberAfterChange": 79, "signatureBeforeChange": " \tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath)", "signatureAfterChange": " \tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath)", "diff": ["-\tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath) {", "+\tpublic boolean hasClasspathCycle(IClasspathEntry[] preferredClasspath) {// TODO could reuse map and remove first arg", "-\t\tupdateCycleParticipants(preferredClasspath, new ArrayList(2), cycleParticipants, ResourcesPlugin.getWorkspace().getRoot(), new HashSet(2));", "+\t\tupdateCycleParticipants(preferredClasspath, new ArrayList(2), cycleParticipants, ResourcesPlugin.getWorkspace().getRoot(), new HashSet(2), null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66253b59baf98a739066dd710b96a6eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "feb6545df47d2c5c5dddbb92489d5f562545b32e", "commitAfterChange": "f2175e743261684fe3de1337b02bb7bc5e74c85c", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 17, "signatureBeforeChange": "\r \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes)", "signatureAfterChange": "\r \tpublic IJavaElementDelta[] processResourceDelta(IResourceDelta changes)", "diff": ["-\t\t\t\t\ttraverseDelta(delta, IJavaElement.JAVA_MODEL); // traverse delta\r", "+\t\t\t\t\ttraverseDelta(delta, IJavaElement.JAVA_MODEL, null); // traverse delta\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "67917780007ca270d4e15fc962090099", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "commitAfterChange": "0eced122edcf3b4bb706c54234938f891591dcdc", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void testCompileJDTCoreProjectDefault() throws IOException, CoreException", "signatureAfterChange": " \tpublic void testCompileJDTCoreProjectDefault() throws IOException, CoreException", "diff": ["-\t\tcompile(JavaCore.PLUGIN_ID, \"\", false/*no log*/, JDT_CORE_SRC_PATHS);", "+\t\tcompile(JavaCore.PLUGIN_ID, \"\", null, false/*no log*/, JDT_CORE_SRC_PATHS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6838c8a1ce51da51b30047ceb57090e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/NegativeTests.java", "commitBeforeChange": "2abab9940e6db0d9bb45ae1df4c7dab4bbd26433", "commitAfterChange": "f644354e45904d24db02795e349ee282324692a9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic void testNegativeModel5WithEclipseCompiler() throws IOException", "signatureAfterChange": " \tpublic void testNegativeModel5WithEclipseCompiler() throws IOException", "diff": ["-\t\tinternalTestNegativeModel(compiler, 5);", "+\t\tinternalTestNegativeModel(compiler, 5, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6881e07adbbc55b732e4686a0add60b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MethodLocator.java", "commitBeforeChange": "9d0a10f56589d65d04aaea495d852ef502b02233", "commitAfterChange": "913c08568caa0adfd1165460a3e2394884803092", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " public int resolveLevel(Binding binding)", "signatureAfterChange": " public int resolveLevel(Binding binding)", "diff": ["-\t\t? resolveLevelAsSubtype(qualifiedPattern, method.declaringClass)", "+\t\t? resolveLevelAsSubtype(qualifiedPattern, method.declaringClass, null)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "695c3f89cdb43f46963912d9ba3390dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/IFileDocument.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic char[] getCharContent() throws IOException", "signatureAfterChange": "\r \tpublic char[] getCharContent() throws IOException", "diff": ["-\t\treturn charContents = org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(location.toFile());\r", "+\t\treturn charContents = org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(location.toFile(), null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6bba3905db98a13975c3bc2ce8e53aa9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/impl/StateImpl.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": "\r \tprotected char[] getElementContentCharArray(SourceEntry entry)", "signatureAfterChange": "\r \tprotected char[] getElementContentCharArray(SourceEntry entry)", "diff": ["-\t\t\treturn org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, bytes.length);\r", "+\t\t\treturn org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, bytes.length, null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6c51612e0a8d747fe108305fa5faf62f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ParameterizedMethodBinding.java", "commitBeforeChange": "78c62e3a4157070f714848f4de312a55f14f5144", "commitAfterChange": "fb48e11da0ebe84c63fab7b3cb5afd39c0ba6101", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "signatureAfterChange": " \tpublic static ParameterizedMethodBinding instantiateGetClass(TypeBinding receiverType, MethodBinding originalMethod, Scope scope)", "diff": ["-\t\t\tnew TypeBinding[] {  scope.environment().createWildcard(genericClassType, 0, receiverType.erasure(), Wildcard.EXTENDS) },", "+\t\t\tnew TypeBinding[] {  scope.environment().createWildcard(genericClassType, 0, receiverType.erasure(), null /*no extra bound*/, Wildcard.EXTENDS) },"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6db3134cb0a15b5b8e8704d76abc43dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MethodDeclaration.java", "commitBeforeChange": "5333a8d6e234b4d5bbcbee365cfa39aafade1032", "commitAfterChange": "9d00e6aaf0f2f4598b676da2bb31ba68b6d40cc8", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic void analyseCode(ClassScope classScope, InitializationFlowContext initializationContext, FlowInfo flowInfo)", "signatureAfterChange": "  \tpublic void analyseCode(ClassScope classScope, InitializationFlowContext initializationContext, FlowInfo flowInfo)", "diff": ["-\t\t\tthis.scope.checkUnclosedCloseables(flowInfo, null/*don't report against a specific location*/);", "+\t\t\tthis.scope.checkUnclosedCloseables(flowInfo, null/*don't report against a specific location*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6e0d4a592138320b02fe5980a460b55d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tpublic void test031() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test031() throws JavaModelException, CoreException", "diff": ["-\t\t\tfile.setCharset(encoding);", "+\t\t\tfile.setCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6fa2a3c83a4ab2c56310871b6c027472", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "a8950107d551a634f6049d19ba689deca063bfb6", "commitAfterChange": "e34fea35f775affe686777806e78d4b4b98ae8ab", "methodNumberBeforeChange": 43, "methodNumberAfterChange": 43, "signatureBeforeChange": "\t \t \tpublic MethodBinding findMethod0(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite, boolean inStaticContext)", "signatureAfterChange": "\t \t \tpublic MethodBinding findMethod0(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite, boolean inStaticContext)", "diff": ["-\t\t\tfindMethodInSuperInterfaces(receiverType, selector, found, invocationSite);", "+\t\t\tfindMethodInSuperInterfaces(receiverType, selector, found, null, invocationSite);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "733fcab0f2a6a5298bd7139a1ed8d04b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "991fd6e4b6634483ff414608784017adef86e93b", "commitAfterChange": "88f4789ab87b5741bd84f761926c87f3851c7700", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "signatureAfterChange": "  \tpublic void complete(IType type, char[] snippet, int position, char[][] localVariableTypeNames, char[][] localVariableNames, int[] localVariableModifiers, boolean isStatic)", "diff": ["-\t\t\t\ttypeDeclaration = BinaryTypeConverter.buildTypeDeclaration(type, compilationUnit, compilationResult);", "+\t\t\t\ttypeDeclaration = BinaryTypeConverter.buildTypeDeclaration(type, compilationUnit, compilationResult, null/*no need to remember type names*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7365981da420239157fcb0d686e4f00e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetScope.java", "commitBeforeChange": "429d7df288eceadbc2bb6418c8a2cab4930645b8", "commitAfterChange": "035e81e22d7f5ffa0ef14b6015456b50ec72de9a", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public MethodBinding findExactMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " public MethodBinding findExactMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\tMethodBinding exactMethod = receiverType.getExactMethod(selector, argumentTypes);", "+\tMethodBinding exactMethod = receiverType.getExactMethod(selector, argumentTypes, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "73d64a40eff914132aab0261928aabf2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "b00e2174d331d01ec608fd121d2d70486e3d188e", "commitAfterChange": "42384ebde3e100133b6e398a07c672730fb7347e", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void setClasspathContainer(final IPath containerPath, IJavaProject[] affectedProjects, IClasspathContainer[] respectiveContainers, IProgressMonitor monitor) throws JavaModelException", "diff": ["+\t\t\tnull/*no need to lock anything*/,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74729d2ab4f54f13b4d2296c77e39ba3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "commitAfterChange": "de8aa9940086fe152901aa168536f30670945804", "methodNumberBeforeChange": 106, "methodNumberAfterChange": 108, "signatureBeforeChange": "  public void generateEmulationForMethod(Scope scope, MethodBinding methodBinding)", "signatureAfterChange": "  public void generateEmulationForMethod(Scope scope, MethodBinding methodBinding)", "diff": ["-\tnewArray(scope.createArrayType(scope.getType(TypeConstants.JAVA_LANG_CLASS, 3), 1));", "+\tnewArray(null, scope.createArrayType(scope.getType(TypeConstants.JAVA_LANG_CLASS, 3), 1));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76567830a5282d189082cf1b1e25f4a5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 96, "methodNumberAfterChange": 97, "signatureBeforeChange": " public IMarker[] reconcile() throws JavaModelException", "signatureAfterChange": " public IMarker[] reconcile() throws JavaModelException", "diff": ["-\treconcile(false, null);", "+\treconcile(false/*don't force problem detection*/, null/*use primary owner*/, null/*no progress monitor*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76705a2b4d30da2ab01feb50739e7433", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/jdom/SimpleDOMBuilder.java", "commitBeforeChange": "b505eec36702205d416645439f4218a52c610506", "commitAfterChange": "a0c59dbe1fcc531830cd318af17b39e6ad26be4e", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public IDOMCompilationUnit createCompilationUnit(ICompilationUnit compilationUnit)", "signatureAfterChange": " public IDOMCompilationUnit createCompilationUnit(ICompilationUnit compilationUnit)", "diff": ["-\tgetParser(JavaCore.getOptions()).parseCompilationUnit(compilationUnit, false/*diet parse*/);", "+\tgetParser(JavaCore.getOptions()).parseCompilationUnit(compilationUnit, false/*diet parse*/, null/*no progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "76e63959e520de0773dd0f3a97f78dd6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected void analyseArguments(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, MethodBinding methodBinding, Expression[] arguments)", "signatureAfterChange": " protected void analyseArguments(BlockScope currentScope, FlowContext flowContext, FlowInfo flowInfo, MethodBinding methodBinding, Expression[] arguments)", "diff": ["-\t\t\t\t\t\tflowContext.recordNullityMismatch(currentScope, argument, argument.resolvedType, expectedType, flowInfo, nullStatus);", "+\t\t\t\t\t\tflowContext.recordNullityMismatch(currentScope, argument, argument.resolvedType, expectedType, flowInfo, nullStatus, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "775a6a84b7ae61de8d085fbb7be43e1f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "9d8b73554095c311a209be1a1d5aa92bb30583eb", "commitAfterChange": "990424c900c7463d4257bff26a1ccc6812106204", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic static char[][] suggestFieldNames(IJavaProject javaProject, char[] packageName, char[] qualifiedTypeName, int dim, int modifiers, char[][] excludedNames)", "signatureAfterChange": " \tpublic static char[][] suggestFieldNames(IJavaProject javaProject, char[] packageName, char[] qualifiedTypeName, int dim, int modifiers, char[][] excludedNames)", "diff": ["+\t\t\tnull,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7a2101703a2b589dfa21ff4d5e71d930", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/RegionBasedTypeHierarchy.java", "commitBeforeChange": "7a9726508a1cf4124fc56e814b6b230c72a37501", "commitAfterChange": "4bc0ba437bacd2b1f452f8c7e62bbdf6cd1994b3", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public RegionBasedTypeHierarchy(IRegion region, IJavaProject project, IType type, boolean computeSubtypes) throws JavaModelException", "signatureAfterChange": " public RegionBasedTypeHierarchy(IRegion region, IJavaProject project, IType type, boolean computeSubtypes) throws JavaModelException", "diff": ["-\tsuper(type, (IJavaSearchScope)null, computeSubtypes);", "+\tsuper(type, (IJavaSearchScope)null, computeSubtypes, null/*no working copies*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7c7e681dbcf347ec8d0af05b99612c50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\t \tpublic void testBug66898b() throws JavaModelException, CoreException", "signatureAfterChange": "\t \tpublic void testBug66898b() throws JavaModelException, CoreException", "diff": ["-\t\tthis.utf8File.setCharset(encoding);", "+\t\tthis.utf8File.setCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7ce2550de3643e909dc880cefa14bfd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/SelectionEngine.java", "commitBeforeChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "commitAfterChange": "52e6fbe49c09ab2aed24d8a25448612c4ab36bce", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "signatureAfterChange": " \tpublic void select( \t\tICompilationUnit sourceUnit, \t\tint selectionSourceStart, \t\tint selectionSourceEnd)", "diff": ["-\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit);", "+\t\t\t\t\tthis.lookupEnvironment.buildTypeBindings(parsedUnit, null /*no access restriction*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7db91ed31a21ee547c8877169956be3f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "368e7b2744bb4a520a4dfc9ab8183508aa7c626d", "commitAfterChange": "93b70485a331557e06c4f378f7086f6e4f12616a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void addProblemMethod( \t\tAbstractMethodDeclaration method, \t\tMethodBinding methodBinding, \t\tIProblem[] problems)", "signatureAfterChange": " \tpublic void addProblemMethod( \t\tAbstractMethodDeclaration method, \t\tMethodBinding methodBinding, \t\tIProblem[] problems)", "diff": ["-\t\t\tmethod.abort(ProblemSeverities.AbortType);", "+\t\t\tmethod.abort(ProblemSeverities.AbortType, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "80575ceae61f782cbb46142e0c9a01ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "9d8b73554095c311a209be1a1d5aa92bb30583eb", "commitAfterChange": "990424c900c7463d4257bff26a1ccc6812106204", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tpublic static char[][] suggestLocalVariableNames(IJavaProject javaProject, char[] packageName, char[] qualifiedTypeName, int dim, char[][] excludedNames)", "signatureAfterChange": " \tpublic static char[][] suggestLocalVariableNames(IJavaProject javaProject, char[] packageName, char[] qualifiedTypeName, int dim, char[][] excludedNames)", "diff": ["+\t\t\tnull,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "809819000418308cf5c4d692e484c860", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected void runConformTest(String[] testFiles, String commandLine, \t\t\tString expectedSuccessOutOutputString, \t\t\tString expectedSuccessErrOutputString, \t\t\tboolean shouldFlushOutputDirectory)", "signatureAfterChange": " \tprotected void runConformTest(String[] testFiles, String commandLine, \t\t\tString expectedSuccessOutOutputString, \t\t\tString expectedSuccessErrOutputString, \t\t\tboolean shouldFlushOutputDirectory)", "diff": ["-\t\t\t\texpectedSuccessErrOutputString, shouldFlushOutputDirectory);", "+\t\t\t\texpectedSuccessErrOutputString, shouldFlushOutputDirectory, null/*progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81487e2f94d667d73aebf3bf982ddd91", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ClassFile.java", "commitBeforeChange": "717a44c6b6c761be0c48243cde9dff6857a6db32", "commitAfterChange": "df9941361641a347d1ba4ee80fe7f9c7468ba17a", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "\r \tpublic static void createProblemType(\r \t\tTypeDeclaration typeDeclaration,\r \t\tCompilationResult unitResult)", "signatureAfterChange": "\r \tpublic static void createProblemType(\r \t\tTypeDeclaration typeDeclaration,\r \t\tCompilationResult unitResult)", "diff": ["-\t\t\t\t\tFieldReference.getConstantFor(fields[i], false, null, 0);\r", "+\t\t\t\t\tFieldReference.getConstantFor(fields[i], false, null, null, 0);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "821fdd54606dad876dd1893358c6fd17", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "9bb323761257fd426141c76d64df753d88acaa39", "commitAfterChange": "4cbefd5ca0037578e5d1e6e4d5e9cc1d66230e61", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tpublic void printNotice(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printNotice(ASTNode node, String msg)", "diff": ["-\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Info, msg, line );", "+\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Info, msg, line, null );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "82cc50f2a1ea5b00fd9d70b563c02cfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tprotected void runNegativeTest(String[] testFiles, String commandLine, \t\t\tString expectedFailureOutOutputString, \t\t\tString expectedFailureErrOutputString, \t\t\tboolean shouldFlushOutputDirectory)", "signatureAfterChange": " \tprotected void runNegativeTest(String[] testFiles, String commandLine, \t\t\tString expectedFailureOutOutputString, \t\t\tString expectedFailureErrOutputString, \t\t\tboolean shouldFlushOutputDirectory)", "diff": ["-\t\t\t\texpectedFailureErrOutputString, shouldFlushOutputDirectory);", "+\t\t\t\texpectedFailureErrOutputString, shouldFlushOutputDirectory, null/*progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84e99d1cf9e9a1ba48a2c59b462250b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "9bb323761257fd426141c76d64df753d88acaa39", "commitAfterChange": "4cbefd5ca0037578e5d1e6e4d5e9cc1d66230e61", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "      public void printWarning(String msg)", "signatureAfterChange": "      public void printWarning(String msg)", "diff": ["-        print(APTProblem.Severity.Warning, msg);", "-    }    ", "+        print(APTProblem.Severity.Warning, msg, null);", "+    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "84efa95bfa6c61bccbd513459414d2e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/NegativeTests.java", "commitBeforeChange": "2abab9940e6db0d9bb45ae1df4c7dab4bbd26433", "commitAfterChange": "f644354e45904d24db02795e349ee282324692a9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void testNegativeModel1WithEclipseCompiler() throws IOException", "signatureAfterChange": " \tpublic void testNegativeModel1WithEclipseCompiler() throws IOException", "diff": ["-\t\tinternalTestNegativeModel(compiler, 1);", "+\t\tinternalTestNegativeModel(compiler, 1, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "853791d1b7c8e141511e39a4dbd76afc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "80725f3277230b2c6b48548b2a0746bbcbd23f0d", "commitAfterChange": "2abb5c60316a8a4cab92c4dd0598d9a27a87d40b", "methodNumberBeforeChange": 101, "methodNumberAfterChange": 101, "signatureBeforeChange": " \tpublic boolean visit(LambdaExpression lambdaExpression, BlockScope scope)", "signatureAfterChange": " \tpublic boolean visit(LambdaExpression lambdaExpression, BlockScope scope)", "diff": ["+\t\t\t\tnull,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "85b6affefeff473655c278f1e050ce19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "ade133e0ba99ce8f261b5dbbb001561f152f4db8", "commitAfterChange": "a6c0426e8a97e5c69fdac3bea072af18fea82d0e", "methodNumberBeforeChange": 120, "methodNumberAfterChange": 120, "signatureBeforeChange": "  \tpublic IClasspathEntry resolveVariableEntry(IClasspathEntry entry, boolean usePreviousSession)", "signatureAfterChange": "  \tpublic IClasspathEntry resolveVariableEntry(IClasspathEntry entry, boolean usePreviousSession)", "diff": ["-\t\tresolvedPath = ClasspathEntry.resolveDotDot(resolvedPath);", "+\t\t// By passing a null reference path, we keep it relative to workspace root.", "+\t\tresolvedPath = ClasspathEntry.resolveDotDot(null, resolvedPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8690d07e1ad07cb73740f733b95840e3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tpublic void test032() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test032() throws JavaModelException, CoreException", "diff": ["-\t\tthis.utf8File.setCharset(encoding);", "+\t\tthis.utf8File.setCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86b8b41e5f1e77f02180b7fc1cf3ea20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/SwitchStatement.java", "commitBeforeChange": "593b7c498e35f1adb3620eff493d0f4b5e771b68", "commitAfterChange": "3b34d278ba258a10a58d188a2047da908229b941", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "signatureAfterChange": "  \t@Override \tpublic boolean doesNotCompleteNormally()", "diff": ["-\t\t\tif (this.statements[i].breaksOut())", "+\t\t\tif (this.statements[i].breaksOut(null))"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86e3ea5c47070b729579ac3ac30c83b7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavadocCompletionModelTest.java", "commitBeforeChange": "1d3824feb74dac2cd72f42f67996821e25271c63", "commitAfterChange": "9f02272e8245618968be36ae4ecb54a3d73ce22b", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "  \tprotected void completeInJavadoc(String[] sources, boolean showPositions, String completeBehind) throws JavaModelException", "signatureAfterChange": " \tprotected void completeInJavadoc(String[] sources, boolean showPositions, String completeBehind) throws JavaModelException", "diff": ["+\t}", "-\t\tcompleteInJavadoc(sources, showPositions, completeBehind, 1);", "+\t\tcompleteInJavadoc(sources, showPositions, completeBehind, 1, null);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8adc0291c6eb20a28872d183861e2dde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "9bb323761257fd426141c76d64df753d88acaa39", "commitAfterChange": "4cbefd5ca0037578e5d1e6e4d5e9cc1d66230e61", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tpublic void printError(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printError(ASTNode node, String msg)", "diff": ["-\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Error, msg, line );", "+\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Error, msg, line, null );"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c86d816ce5132fe5feb8e38a597f9be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "b505eec36702205d416645439f4218a52c610506", "commitAfterChange": "a0c59dbe1fcc531830cd318af17b39e6ad26be4e", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic synchronized ISourceRange mapSource( \t\tIType type, \t\tchar[] contents, \t\tIBinaryType info, \t\tIJavaElement elementToFind)", "signatureAfterChange": " \tpublic synchronized ISourceRange mapSource( \t\tIType type, \t\tchar[] contents, \t\tIBinaryType info, \t\tIJavaElement elementToFind)", "diff": ["-\t\t\t\tdoFullParse);", "+\t\t\t\tdoFullParse,", "+\t\t\t\tnull/*no progress*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e736774fbb941a58a2a2f711cd632d6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "e545c83d4c17deed9318734e91334eb8e0b9f1f6", "commitAfterChange": "15d3e8c6150f3af77b3e0d0c7bd80bfd130fd914", "methodNumberBeforeChange": 85, "methodNumberAfterChange": 85, "signatureBeforeChange": "  \tpublic String[] projectPrerequisites(IClasspathEntry[] entries) \t\tthrows JavaModelException", "signatureAfterChange": "  \tpublic String[] projectPrerequisites(IClasspathEntry[] entries) \t\tthrows JavaModelException", "diff": ["-\t\tentries = getResolvedClasspath(entries, true, false);", "+\t\tentries = getResolvedClasspath(entries, null, true, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ff73562868da35bfde52cab0f0a5119", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Wildcard.java", "commitBeforeChange": "78c62e3a4157070f714848f4de312a55f14f5144", "commitAfterChange": "fb48e11da0ebe84c63fab7b3cb5afd39c0ba6101", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding genericType, int rank)", "signatureAfterChange": " \t \tprivate TypeBinding internalResolveType(Scope scope, ReferenceBinding genericType, int rank)", "diff": ["-\t    WildcardBinding wildcard = scope.environment().createWildcard(genericType, rank, boundType, this.kind);", "+\t    WildcardBinding wildcard = scope.environment().createWildcard(genericType, rank, boundType, null /*no extra bound*/, this.kind);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "906d5bca588b7d13234efcb332bdac45", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ReconcilerTests.java", "commitBeforeChange": "9ccc53063dda8b7e1afdde95ae36a8417c582abc", "commitAfterChange": "7143e72571bb2e6a2e74f6791210a97b375b5ab6", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t\tpublic ProblemRequestor()", "signatureAfterChange": " \t\tpublic ProblemRequestor()", "diff": ["-\t\tint problemCount;", "+\t\tprivate char[] unitSource;", "-\t\t\tthis.initialize();", "+\t\t\tthis.initialize(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "90c1c50fab56428d29941fbab122cec7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/impl/FileDocument.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "\r \tpublic char[] getCharContent() throws IOException", "signatureAfterChange": "\r \tpublic char[] getCharContent() throws IOException", "diff": ["-\t\treturn org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(file);\r", "+\t\treturn org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(file, null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91ac783f5a027d131adca36cb51ac240", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r public final static void buildFilesFromLPG(String dataFilename)\tthrows java.io.IOException", "signatureAfterChange": "\r public final static void buildFilesFromLPG(String dataFilename)\tthrows java.io.IOException", "diff": ["-\t\tcontents = Util.getFileCharContent(new File(dataFilename));\r", "+\t\tcontents = Util.getFileCharContent(new File(dataFilename), null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "91bffd0637315d65b7199bf15c4681e0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ProblemFieldBinding.java", "commitBeforeChange": "eee151556fa5628da58c297d3e841df408f33c62", "commitAfterChange": "6c856a22e62c9ef98dcc7d4e8f62170ac88f630e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public ProblemFieldBinding(ReferenceBinding declaringClass, char[][] compoundName, int problemId)", "signatureAfterChange": "  public ProblemFieldBinding(ReferenceBinding declaringClass, char[][] compoundName, int problemId)", "diff": ["-\tthis(declaringClass, CharOperation.concatWith(compoundName, '.'), problemId);", "+\tthis(null, declaringClass, CharOperation.concatWith(compoundName, '.'), problemId);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "92e68aa8e7606342675d797a5d228f74", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "60a879cb0c22ecc55e5e7e324d0812874d0e1429", "commitAfterChange": "3bae8053f75f55a3f3123765c3d4e0b44d894e21", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, boolean[] exportedProject, String projectOutput) throws CoreException", "signatureAfterChange": " protected IJavaProject createJavaProject(String projectName, String[] sourceFolders, String[] libraries, String[] projects, boolean[] exportedProject, String projectOutput) throws CoreException", "diff": ["-\t\t\tnull/*no source outputs*/", "+\t\t\tnull/*no source outputs*/,", "+\t\t\tnull/*no exclusion pattern*/"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "938ec53333aada67229c9c2f631a6346", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/NegativeTests.java", "commitBeforeChange": "2abab9940e6db0d9bb45ae1df4c7dab4bbd26433", "commitAfterChange": "f644354e45904d24db02795e349ee282324692a9", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void testNegativeModel2WithEclipseCompiler() throws IOException", "signatureAfterChange": " \tpublic void testNegativeModel2WithEclipseCompiler() throws IOException", "diff": ["-\t\tinternalTestNegativeModel(compiler, 2);", "+\t\tinternalTestNegativeModel(compiler, 2, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "939ebc82f44db3a9457493d804dbad7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "9bb323761257fd426141c76d64df753d88acaa39", "commitAfterChange": "4cbefd5ca0037578e5d1e6e4d5e9cc1d66230e61", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "      public void printNotice(String msg)", "signatureAfterChange": "      public void printNotice(String msg)", "diff": ["-       print(APTProblem.Severity.Info, msg);", "+       print(APTProblem.Severity.Info, msg, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "93ee1097f78af0600507cd63b042aeb4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "eaf368b1bbed77e5ac91194cb5cc62e7c3b2c07b", "commitAfterChange": "850c65069b948dc807fdf250e07cb482b9cf25c2", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 12, "signatureBeforeChange": " public static void createJar(String[] pathsAndContents, Map options, String jarPath) throws IOException", "signatureAfterChange": " public static void createJar(String[] pathsAndContents, Map options, String jarPath) throws IOException", "diff": ["-\tcreateJar(pathsAndContents, null, options, jarPath);", "+\tcreateJar(pathsAndContents, null, options, null, jarPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94c08e9a5685e96481ce71548bdb63cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/JavaSearchScope.java", "commitBeforeChange": "7548eaaea6e1259875e63eaf19dcd9a6bb7fd118", "commitAfterChange": "3d5aa7d7eabaf3445aad76f168f1c9da2ba34591", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 11, "signatureBeforeChange": " public boolean encloses(IJavaElement element)", "signatureAfterChange": " public boolean encloses(IJavaElement element)", "diff": ["-\treturn this.indexOf(fullPath(element)) >= 0;", "+\treturn this.indexOf(fullPath(element), null) >= 0;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9810954f275496e0071d577a7c4ae40c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/ToolFactory.java", "commitBeforeChange": "5fed3395f6831e98dfdf969487e5f7a33b8a0523", "commitAfterChange": "f8ca90d16fe9720b9569bbe50203a056ab8aed5c", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic static ICodeFormatter createCodeFormatter()", "signatureAfterChange": " \tpublic static ICodeFormatter createCodeFormatter()", "diff": ["-\t\treturn createDefaultCodeFormatter();", "+\t\treturn createDefaultCodeFormatter(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98c481fa3fc12bcd1f5a41aebfc597ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "30b30e8c56b7e7a44eebf42932935c15fe10b232", "commitAfterChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic void _testBatchCompilerAllJavadoc() throws IOException, CoreException", "signatureAfterChange": " \tpublic void _testBatchCompilerAllJavadoc() throws IOException, CoreException", "diff": ["-\t\tcompile(JavaCore.PLUGIN_ID, \"-warn:allJavadoc\", true/*log errors*/);", "+\t\tcompile(JavaCore.PLUGIN_ID, \"-warn:allJavadoc\", true/*log errors*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9b16bc31f5299563ac6102015e54ccdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileWorkingCopy.java", "commitBeforeChange": "e6db618a9b62756ea5188d8fdad9bb0c157f5516", "commitAfterChange": "265fce71e12d88a397c49e9793a330fd01dcb78a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t public ClassFileWorkingCopy(IClassFile classFile, WorkingCopyOwner owner)", "signatureAfterChange": " \t public ClassFileWorkingCopy(IClassFile classFile, WorkingCopyOwner owner)", "diff": ["-\tsuper((PackageFragment) classFile.getParent(), ((BinaryType) ((ClassFile) classFile).getType()).getSourceFileName(), owner);", "+\tsuper((PackageFragment) classFile.getParent(), ((BinaryType) ((ClassFile) classFile).getType()).getSourceFileName(null/*no info available*/), owner);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9e44c49ad96f4c6d4b3d877c2664ac09", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "commitAfterChange": "0eced122edcf3b4bb706c54234938f891591dcdc", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic void testCompileSWTProjectDefault() throws IOException, CoreException", "signatureAfterChange": " \tpublic void testCompileSWTProjectDefault() throws IOException, CoreException", "diff": ["-\t\tcompile(\"org.eclipse.swt\", \"\", false/*no log*/, sourcePaths);", "+\t\tcompile(\"org.eclipse.swt\", \"\", null, false/*no log*/, sourcePaths);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ea89c29e1a48bc5055675f89e6c51ea", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AbstractRegressionTest.java", "commitBeforeChange": "42ae643103bd935ac20f28c1d2bc4ad8f788a9fe", "commitAfterChange": "bd8b13f1c301621f6ba89f5b94dac0a88b80c5cc", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments)", "signatureAfterChange": " \tprotected void runConformTest( \t\tString[] testFiles,  \t\tString expectedSuccessOutputString,  \t\tString[] classLib, \t\tboolean shouldFlushOutputDirectory,  \t\tString[] vmArguments)", "diff": ["-\t\t\tnull);", "+\t\t\tnull /*no custom options*/,", "+\t\t\tnull /*no custom requestor*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a02d338c7c66fd4efecab1ed4c7f6ac4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "9bb323761257fd426141c76d64df753d88acaa39", "commitAfterChange": "4cbefd5ca0037578e5d1e6e4d5e9cc1d66230e61", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "      public void printError(String msg)", "signatureAfterChange": "      public void printError(String msg)", "diff": ["-        print(APTProblem.Severity.Error, msg);", "+        print(APTProblem.Severity.Error, msg, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a51511e543d403217a19a0e568887607", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ClassScope.java", "commitBeforeChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "commitAfterChange": "18c98a5a751096350077436fcf968eb63364ccb9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tvoid buildLocalTypeBinding(SourceTypeBinding enclosingType)", "signatureAfterChange": " \t \tvoid buildLocalTypeBinding(SourceTypeBinding enclosingType)", "diff": ["-\t\tLocalTypeBinding localType = buildLocalType(enclosingType, enclosingType.fPackage);", "+\t\tLocalTypeBinding localType = buildLocalType(enclosingType, null /* anonymous super type*/, enclosingType.fPackage);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a873729b70e6ef96bc62a35fc7e03b8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "364abd1fe47d562f576cb6b54a083094e0671f23", "commitAfterChange": "1b555425db41a9eb4fba300521a43b3ff494a42f", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "signatureAfterChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "diff": ["-\t\t\t\t\tcheckNullSpecInheritance(currentMethod, srcMethod, needToApplyReturnNonNullDefault, needToApplyParameterNonNullDefault, complain, currentSuper, scope, inheritedNonNullnessInfos);", "+\t\t\t\t\tcheckNullSpecInheritance(currentMethod, srcMethod, needToApplyReturnNonNullDefault, needToApplyParameterNonNullDefault, complain, currentSuper, null, scope, inheritedNonNullnessInfos);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a903adcd807721db1ca694811e720bad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void test005() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test005() throws JavaModelException, CoreException", "diff": ["-\t\tthis.encodingProject.setDefaultCharset(encoding);", "+\t\tthis.encodingProject.setDefaultCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aef4ccca153492166e4b43773ccaafc7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMember.java", "commitBeforeChange": "d85d39eaac6c50a092ebc71013caff6067946721", "commitAfterChange": "4113d4b15f909d9ae6a13dfdc1603db4b3835658", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected IAnnotation[] getAnnotations(IBinaryAnnotation[] binaryAnnotations, long tagBits)", "signatureAfterChange": " protected IAnnotation[] getAnnotations(IBinaryAnnotation[] binaryAnnotations, long tagBits)", "diff": ["-\t\tannotations[i] = Util.getAnnotation(this, binaryAnnotations[i]);", "+\t\tannotations[i] = Util.getAnnotation(this, binaryAnnotations[i], null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b27c419cbc0eef4495030bc32703316a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Util.java", "commitBeforeChange": "6c5ed1b4ed06e066835a3bf2ea35d093c31d8a42", "commitAfterChange": "8bc47c693f418d320513158fd7b4c7024ff227d6", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": "\r public static char[] getResourceContentsAsCharArray(IFile file) throws JavaModelException", "signatureAfterChange": "\r public static char[] getResourceContentsAsCharArray(IFile file) throws JavaModelException", "diff": ["-\t\treturn org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1);\r", "+\t\treturn org.eclipse.jdt.internal.compiler.util.Util.getInputStreamAsCharArray(stream, -1, null);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b32f471d6070e7bb71eef308ebca6e72", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/AbstractImageBuilder.java", "commitBeforeChange": "be60c5fae8401603b06f3ef1fdaad755202820be", "commitAfterChange": "a9338de445c9008765127e58fe29962145cc697b", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": "  protected void writeClassFileContents(ClassFile classFile, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException", "signatureAfterChange": "  protected void writeClassFileContents(ClassFile classFile, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException", "diff": ["-\t\t\tfile.setDerived(true);", "+\t\t\tfile.setDerived(true, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b40fdaa0fca652efd918eebed972be8f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "eedafe9176d5ca60193623550822839844fd4aae", "commitAfterChange": "16a0328cb89c7e4d508e8edfc85e1af4879c13c7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " \tprotected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\tinfo.setChildren(computePackageFragmentRoots(resolvedClasspath, false));\t", "+\t\tinfo.setChildren(computePackageFragmentRoots(resolvedClasspath, false, null /*no reverse map*/));\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b4901cad6bbd0647424cde2b1c474146", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/CompilationUnitResolver.java", "commitBeforeChange": "27fd6b1218a2223f75b9add3ad72e983a5f4500b", "commitAfterChange": "d2861a7753e529217c872f1a7e1714670325b389", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "signatureAfterChange": " \tpublic CompilationUnitDeclaration resolve( \t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit,  \t\t\tboolean verifyMethods, \t\t\tboolean analyzeCode, \t\t\tboolean generateCode)", "diff": ["-\t */", "-\tpublic CompilationUnitDeclaration resolve(", "-\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, ", "-\t\t\tboolean verifyMethods,", "-\t\t\tboolean analyzeCode,", "-\t\t\tboolean generateCode) {", "-\t\t\t\t", "-\t\treturn resolve(", "-\t\t\tnull,", "-\t\t\tsourceUnit,", "-\t\t\tverifyMethods,", "-\t\t\tanalyzeCode,", "-\t\t\tgenerateCode);", "-\t}", "+\t */", "+\tpublic CompilationUnitDeclaration resolve(", "+\t\t\torg.eclipse.jdt.internal.compiler.env.ICompilationUnit sourceUnit, ", "+\t\t\tboolean verifyMethods,", "+\t\t\tboolean analyzeCode,", "+\t\t\tboolean generateCode) {", "+\t\t\t\t", "+\t\treturn resolve(", "+\t\t\tnull, /* no existing compilation unit declaration*/", "+\t\t\tsourceUnit,", "+\t\t\tnull/*no node searcher*/, ", "+\t\t\tverifyMethods,", "+\t\t\tanalyzeCode,", "+\t\t\tgenerateCode);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b88568b390799e88260664e130224b93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintTypeFormula.java", "commitBeforeChange": "c14c8093a10c10363866e505a62237c9c62b679e", "commitAfterChange": "bc58ceae1b3691095e4db8bfcb9f2192eeaf077d", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "  \tpublic boolean applySubstitution(BoundSet solutionSet, InferenceVariable[] variables)", "signatureAfterChange": "  \tpublic boolean applySubstitution(BoundSet solutionSet, InferenceVariable[] variables)", "diff": ["-\t\t\tTypeBinding instantiation = solutionSet.getInstantiation(variables[i]);", "+\t\t\tTypeBinding instantiation = solutionSet.getInstantiation(variables[i], null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b8a9ee4841f54ac0701e7d044ae6c7cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 135, "methodNumberAfterChange": 135, "signatureBeforeChange": " \tpublic void test0517() throws JavaModelException", "signatureAfterChange": " \tpublic void test0517() throws JavaModelException", "diff": ["-\t\tASTNode result2 = AST.parse(AST.K_CLASS_BODY_DECLARATIONS, source, declaration.getStartPosition(), declaration.getLength(), JavaCore.getOptions());", "+\t\tASTNode result2 = AST.parse(AST.K_CLASS_BODY_DECLARATIONS, source, declaration.getStartPosition(), declaration.getLength(), JavaCore.getOptions(), null/*no progress monitor*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b91021ed67215f1acf7097d13eb443d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceElementParserTest.java", "commitBeforeChange": "a0c59dbe1fcc531830cd318af17b39e6ad26be4e", "commitAfterChange": "ac7c104cc39c5e68079fabb4375be3bd00f62981", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " public void dietParse(String s, String testName, boolean recordLocalDeclaration)", "signatureAfterChange": " public void dietParse(String s, String testName, boolean recordLocalDeclaration)", "diff": ["-\tparser.parseCompilationUnit(sourceUnit, false);", "+\tparser.parseCompilationUnit(sourceUnit, false, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba0d9ca774eafb69c532af5a6fcaf490", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "81760d211469bf12100fd76e7231799f80190c5f", "commitAfterChange": "d3721d56cc1a3428241d332af8c31ddc07515e58", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tpublic boolean enclosesFineGrained(IJavaElement element)", "signatureAfterChange": " \tpublic boolean enclosesFineGrained(IJavaElement element)", "diff": ["-\t\treturn encloses(element);", "+\t\treturn encloses(element, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bad341cb594166464bbc4f0a3dfdb82f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "9d8b73554095c311a209be1a1d5aa92bb30583eb", "commitAfterChange": "990424c900c7463d4257bff26a1ccc6812106204", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tpublic static char[][] suggestArgumentNames(IJavaProject javaProject, char[] packageName, char[] qualifiedTypeName, int dim, char[][] excludedNames)", "signatureAfterChange": " \tpublic static char[][] suggestArgumentNames(IJavaProject javaProject, char[] packageName, char[] qualifiedTypeName, int dim, char[][] excludedNames)", "diff": ["+\t\t\tnull,"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bc9cf4939ce2afaab7c055a7213f9c7a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "e545c83d4c17deed9318734e91334eb8e0b9f1f6", "commitAfterChange": "15d3e8c6150f3af77b3e0d0c7bd80bfd130fd914", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "signatureAfterChange": " \tprotected void updateProjectReferencesIfNecessary() throws JavaModelException", "diff": ["-\t\t\tthis.newResolvedPath = jproject.getResolvedClasspath(this.newRawPath, true, this.needValidation);", "+\t\t\tthis.newResolvedPath = jproject.getResolvedClasspath(this.newRawPath, null, true, this.needValidation);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bd857101146c5b1635e84ac5d680cdbf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/env/MessagerImpl.java", "commitBeforeChange": "9bb323761257fd426141c76d64df753d88acaa39", "commitAfterChange": "4cbefd5ca0037578e5d1e6e4d5e9cc1d66230e61", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t \tpublic void printWarning(ASTNode node, String msg)", "signatureAfterChange": " \t \tpublic void printWarning(ASTNode node, String msg)", "diff": ["-\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Warning, msg, line );", "+\t\t_env.addProblem(_env.getFile(), start, node.getLength() + start, APTProblem.Severity.Warning, msg, line, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "be6d3b3013ce500a67de9ca70a2dbc7b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "b8d589b72f11298620e188a74f142f9887cfc702", "commitAfterChange": "92a5335907fd0cb9878a81d6d82d370dc8deacce", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  protected void addAffectedSourceFiles()", "signatureAfterChange": "  protected void addAffectedSourceFiles()", "diff": ["-\taddAffectedSourceFiles(qualifiedStrings, simpleStrings);", "+\taddAffectedSourceFiles(qualifiedStrings, simpleStrings, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "bf76267e88faaae317d18849d6eaea5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tCompilerOptions options, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory)", "signatureAfterChange": " \tpublic Compiler( \t\tINameEnvironment environment, \t\tIErrorHandlingPolicy policy, \t\tCompilerOptions options, \t\tfinal ICompilerRequestor requestor, \t\tIProblemFactory problemFactory)", "diff": ["-\t\tthis(environment, policy, options, requestor, problemFactory, null); ", "+\t\tthis(environment, policy, options, requestor, problemFactory, null /* printwriter */, null /* progress */); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1481f2d00f9abee25dacf55053642e4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathDirectory.java", "commitBeforeChange": "68ccb4031ed08b4fe5c4be466185d9f98028d52b", "commitAfterChange": "b97b84a6370469b0432a4c45b3f13c4f7bb62ce7", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  ClasspathDirectory(File directory, String encoding)", "signatureAfterChange": "  ClasspathDirectory(File directory, String encoding)", "diff": ["-\tthis(directory, encoding, SOURCE | BINARY); // by default consider both sources and binaries", "+\tthis(directory, encoding, SOURCE | BINARY, null); // by default consider both sources and binaries"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c26d57df475b20aca5bed8f995313012", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavadocCompletionModelTest.java", "commitBeforeChange": "1d3824feb74dac2cd72f42f67996821e25271c63", "commitAfterChange": "9f02272e8245618968be36ae4ecb54a3d73ce22b", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \tprotected void completeInJavadoc(String path, String source, boolean showPositions, String completeBehind, int occurencePosition) throws JavaModelException", "signatureAfterChange": "  \tprotected void completeInJavadoc(String path, String source, boolean showPositions, String completeBehind, int occurencePosition) throws JavaModelException", "diff": ["-\t\tcompleteInJavadoc(new String[] { path, source }, showPositions, completeBehind, occurencePosition);", "+\t\tcompleteInJavadoc(new String[] { path, source }, showPositions, completeBehind, occurencePosition, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c37a95a2df14c945205f3d79323b59ed", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/codegen/CodeStream.java", "commitBeforeChange": "83e7ec555369f29d4b78a3a829caf1776dce39db", "commitAfterChange": "e965722f47023ae407b487744865b93f56cfe7d1", "methodNumberBeforeChange": 294, "methodNumberAfterChange": 294, "signatureBeforeChange": "  public void newArray(ArrayBinding arrayBinding)", "signatureAfterChange": "  public void newArray(ArrayBinding arrayBinding)", "diff": ["-\tthis.newArray(null, arrayBinding);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c84de7e03fe49e535779a1640f58d401", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/Util.java", "commitBeforeChange": "eaf368b1bbed77e5ac91194cb5cc62e7c3b2c07b", "commitAfterChange": "850c65069b948dc807fdf250e07cb482b9cf25c2", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 17, "signatureBeforeChange": " public static void createJar(String[] javaPathsAndContents, String[] extraPathsAndContents, String jarPath, String compliance) throws IOException", "signatureAfterChange": " public static void createJar(String[] javaPathsAndContents, String[] extraPathsAndContents, String jarPath, String compliance) throws IOException", "diff": ["-\tcreateJar(javaPathsAndContents, extraPathsAndContents, getCompileOptions(compliance), jarPath);", "+\tcreateJar(javaPathsAndContents, extraPathsAndContents, getCompileOptions(compliance), null, jarPath);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ca87d1a1c9af43e15eae40a2bb3deed4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "25a9dba189bcefd34377713ece67fd65377cdf3c", "commitAfterChange": "0eced122edcf3b4bb706c54234938f891591dcdc", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 26, "signatureBeforeChange": " \tpublic void testCompileJDTCoreProjectAllWarnings() throws IOException, CoreException", "signatureAfterChange": " \tpublic void testCompileJDTCoreProjectAllWarnings() throws IOException, CoreException", "diff": ["-\t\tcompile(JavaCore.PLUGIN_ID, ALL_OPTIONS, false/*no log*/, JDT_CORE_SRC_PATHS);", "+\t\tcompile(JavaCore.PLUGIN_ID, ALL_OPTIONS, null, false/*no log*/, JDT_CORE_SRC_PATHS);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cbd1b657c63bb0170b8fa39cebf7d951", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/NegativeTests.java", "commitBeforeChange": "2abab9940e6db0d9bb45ae1df4c7dab4bbd26433", "commitAfterChange": "f644354e45904d24db02795e349ee282324692a9", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic void testNegativeModel3WithEclipseCompiler() throws IOException", "signatureAfterChange": " \tpublic void testNegativeModel3WithEclipseCompiler() throws IOException", "diff": ["-\t\tinternalTestNegativeModel(compiler, 3);", "+\t\tinternalTestNegativeModel(compiler, 3, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce0d7d6e5cd8d73e50a5b06bb7273b20", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "2e2135e23ec5738f13780e9b130faac2db0c376b", "commitAfterChange": "3d9ca5323b31c8907d129d4437482cfc3b641c64", "methodNumberBeforeChange": 83, "methodNumberAfterChange": 83, "signatureBeforeChange": " protected void pushOnElementStack(int kind)", "signatureAfterChange": " protected void pushOnElementStack(int kind)", "diff": ["-\tthis.pushOnElementStack(kind, 0);", "+\tthis.pushOnElementStack(kind, 0, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce2abf331ef1b02e90a56161ebab031f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 276, "methodNumberAfterChange": 284, "signatureBeforeChange": " public void test237_jar_ref_in_jar()", "signatureAfterChange": " public void test237_jar_ref_in_jar()", "diff": ["-\t\ttrue);", "+\t\ttrue,", "+\t\tnull /* progress */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ce4de4d0c1d5386ca62ff32f05fd99d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "30b30e8c56b7e7a44eebf42932935c15fe10b232", "commitAfterChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void _testBatchCompilerAllWarnings() throws IOException, CoreException", "signatureAfterChange": " \tpublic void _testBatchCompilerAllWarnings() throws IOException, CoreException", "diff": ["-\t\tcompile(JavaCore.PLUGIN_ID, ALL_OPTIONS, true/*log errors*/);", "+\t\tcompile(JavaCore.PLUGIN_ID, ALL_OPTIONS, true/*log errors*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cef64d2a9e8e5f1850dc7dd868a3390d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "81760d211469bf12100fd76e7231799f80190c5f", "commitAfterChange": "d3721d56cc1a3428241d332af8c31ddc07515e58", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic IPath[] enclosingProjectsAndJars()", "signatureAfterChange": " \tpublic IPath[] enclosingProjectsAndJars()", "diff": ["-\t\t\t\trefresh();", "+\t\t\t\trefresh(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf2e63e312f9ea533bb6077fdd99ee1c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKey.java", "commitBeforeChange": "78c62e3a4157070f714848f4de312a55f14f5144", "commitAfterChange": "fb48e11da0ebe84c63fab7b3cb5afd39c0ba6101", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \t  \t TypeBinding getWildCardBinding(ReferenceBinding genericType, int rank)", "signatureAfterChange": " \t  \t TypeBinding getWildCardBinding(ReferenceBinding genericType, int rank)", "diff": ["- \t\treturn this.environment.createWildcard(genericType, rank, bound, kind);", "+ \t\treturn this.environment.createWildcard(genericType, rank, bound, null /*no extra bound*/, kind);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfe17bf695f5e6efb0bb6b5c58c49a4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 277, "methodNumberAfterChange": 285, "signatureBeforeChange": " public void test238_jar_ref_in_jar()", "signatureAfterChange": " public void test238_jar_ref_in_jar()", "diff": ["-\t\ttrue);", "+\t\ttrue,", "+\t\tnull /* progress */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d029628de58d4196209a9f8c598b73b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/NameLookup.java", "commitBeforeChange": "14369aade824a8ea9cd172f06aeb63b163bb9bf0", "commitAfterChange": "76049c710d8a15447cdfbafce1296b7824e89c76", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic Answer findType(String name, boolean partialMatch, int acceptFlags, boolean considerSecondaryTypes, boolean waitForIndexes, boolean checkRestrictions, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic Answer findType(String name, boolean partialMatch, int acceptFlags, boolean considerSecondaryTypes, boolean waitForIndexes, boolean checkRestrictions, IProgressMonitor monitor)", "diff": ["-\t\treturn findType(className, packageName, partialMatch, acceptFlags, considerSecondaryTypes, waitForIndexes, checkRestrictions, monitor);", "+\t\treturn findType(className, packageName, null, partialMatch, acceptFlags, considerSecondaryTypes, waitForIndexes, checkRestrictions, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d156bd6f01742aac1f278eba1cf39e4b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PackageReferenceLocator.java", "commitBeforeChange": "8b61d97704a2b67ed3d29404b8692bdbf30b8b5d", "commitAfterChange": "7fa6d6b6f60d0d2345e743063241c3eb3452b00f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tthis.matchReportReference(importRef, element, accuracy, locator);", "+\t\tthis.matchReportReference(importRef, element, null/*no binding*/, accuracy, locator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d48194d49c25cf6f3b26aac4c805e1d7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/util/FileSystemUtil.java", "commitBeforeChange": "20291e123853b40f3437b01ca0907aa48371db12", "commitAfterChange": "0e4687eecdc2b9cb5b04bfb801930a05af136f19", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "            public static void makeDerivedParentFolders (IContainer container) throws CoreException", "signatureAfterChange": "            public static void makeDerivedParentFolders (IContainer container) throws CoreException", "diff": ["-\t\t\tcontainer.setDerived(true);", "+\t\t\tcontainer.setDerived(true, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d55639c104458f9b10b74174484fdad4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Expression.java", "commitBeforeChange": "9a1059fe76216670b8b967bb606268c00c49c5d6", "commitAfterChange": "48d5cc392e6d910c33f7049ee7ced65653038398", "methodNumberBeforeChange": 29, "methodNumberAfterChange": 29, "signatureBeforeChange": "  \tpublic TypeBinding resolveTypeExpecting( \t\tBlockScope scope, \t\tTypeBinding expectedType)", "signatureAfterChange": "  \tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType)", "diff": ["-\tpublic TypeBinding resolveTypeExpecting(", "-\t\tBlockScope scope,", "-\t\tTypeBinding expectedType) {", "+\tpublic TypeBinding resolveTypeExpecting(BlockScope scope, TypeBinding expectedType) {", "-\t\t\t\tscope.problemReporter().typeMismatchError(expressionType, expectedType, this);", "+\t\t\t\tscope.problemReporter().typeMismatchError(expressionType, expectedType, this, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8fc5941c6766af0011dfd585a9249be", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/DefaultBindingResolver.java", "commitBeforeChange": "429d7df288eceadbc2bb6418c8a2cab4930645b8", "commitAfterChange": "035e81e22d7f5ffa0ef14b6015456b50ec72de9a", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tsynchronized IMethodBinding getMethodBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding)", "signatureAfterChange": " \tsynchronized IMethodBinding getMethodBinding(org.eclipse.jdt.internal.compiler.lookup.MethodBinding methodBinding)", "diff": ["-\t\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding exactBinding = declaringClass.getExactMethod(methodBinding.selector, methodBinding.parameters);", "+\t\t\t\t\t\t\torg.eclipse.jdt.internal.compiler.lookup.MethodBinding exactBinding = declaringClass.getExactMethod(methodBinding.selector, methodBinding.parameters, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d904dcf948680d185a12a0dabf68f5de", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "signatureAfterChange": " public void complainOnDeferredChecks(FlowInfo flowInfo, BlockScope scope)", "diff": ["-\t\t\t\t\t\t\t\tthis.providedExpectedTypes[i][0], this.providedExpectedTypes[i][1], flowInfo, nullStatus);", "+\t\t\t\t\t\t\t\tthis.providedExpectedTypes[i][0], this.providedExpectedTypes[i][1], flowInfo, nullStatus, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dbbde4ba179853ae6974a388f42598c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tpublic void test022() throws JavaModelException, CoreException", "signatureAfterChange": " \tpublic void test022() throws JavaModelException, CoreException", "diff": ["-\t\tthis.encodingProject.setDefaultCharset(encoding);", "+\t\tthis.encodingProject.setDefaultCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dd20669ad2c071a46dc15f15e6379998", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "c4e062ebcfc48b14b7c36c591e88d44ce5b3b5c0", "commitAfterChange": "7dd940af8bfbaf46f5a69ec7b85437ba951f7d8e", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": " \t \tprivate void completionOnMethodReturnType(ASTNode astNode, Scope scope)", "signatureAfterChange": " \t \tprivate void completionOnMethodReturnType(ASTNode astNode, Scope scope)", "diff": ["-\t\t\tfindKeywordsForMember(this.completionToken, method.modifiers);", "+\t\t\tfindKeywordsForMember(this.completionToken, method.modifiers, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dda439dbf37f93239b2763a3ae958e3d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/ClasspathJar.java", "commitBeforeChange": "68ccb4031ed08b4fe5c4be466185d9f98028d52b", "commitAfterChange": "b97b84a6370469b0432a4c45b3f13c4f7bb62ce7", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public ClasspathJar(File file) throws IOException", "signatureAfterChange": "  public ClasspathJar(File file) throws IOException", "diff": ["-\tthis(new ZipFile(file), true);", "+\tthis(new ZipFile(file), true, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dda5f96ead6136d0e2826fb263f08da9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "3a00cdbe76e603258e18bf89fe3c22cfa0424f0e", "commitAfterChange": "305305c3ca78effc1c5db33cea58951eccb313d3", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": "  public void testNullProgressMonitor() throws CoreException", "signatureAfterChange": "  public void testNullProgressMonitor() throws CoreException", "diff": ["-\t\t// query all type names with ", "+\t\t// query all type names with a null progress monitor", "+\t\t\t\tnull, // null progress monitor"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "de97bc03211b7e32c019d469a90645c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/PatternLocator.java", "commitBeforeChange": "8b61d97704a2b67ed3d29404b8692bdbf30b8b5d", "commitAfterChange": "7fa6d6b6f60d0d2345e743063241c3eb3452b00f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "signatureAfterChange": " protected void matchReportImportRef(ImportReference importRef, Binding binding, IJavaElement element, int accuracy, MatchLocator locator) throws CoreException", "diff": ["-\t\tthis.matchReportReference(importRef, element, accuracy, locator);", "+\t\tthis.matchReportReference(importRef, element, null/*no binding*/, accuracy, locator);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df183c078ad5a95f5db096d9eeabf207", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tvoid checkAgainstNullAnnotation(FlowContext flowContext, Expression expression, FlowInfo flowInfo, int nullStatus)", "signatureAfterChange": " \tvoid checkAgainstNullAnnotation(FlowContext flowContext, Expression expression, FlowInfo flowInfo, int nullStatus)", "diff": ["-\t\t\t\tflowContext.recordNullityMismatch(this.scope, expression, expression.resolvedType, this.descriptor.returnType, flowInfo, nullStatus);", "+\t\t\t\tflowContext.recordNullityMismatch(this.scope, expression, expression.resolvedType, this.descriptor.returnType, flowInfo, nullStatus, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "df8745f3fe30bb16978b6af7024b0d30", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ReturnStatement.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "signatureAfterChange": " void checkAgainstNullAnnotation(BlockScope scope, FlowContext flowContext, FlowInfo flowInfo)", "diff": ["-\t\t\tflowContext.recordNullityMismatch(scope, this.expression, this.expression.resolvedType, methodBinding.returnType, flowInfo, nullStatus);", "+\t\t\tflowContext.recordNullityMismatch(scope, this.expression, this.expression.resolvedType, methodBinding.returnType, flowInfo, nullStatus, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1a77bec4cf17695e0264fff3cfa030f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 92, "methodNumberAfterChange": 94, "signatureBeforeChange": " protected void initialize(PrintWriter outWriter, \t\tPrintWriter errWriter, \t\tboolean systemExit)", "signatureAfterChange": " protected void initialize(PrintWriter outWriter, PrintWriter errWriter, boolean systemExit)", "diff": ["-protected void initialize(PrintWriter outWriter,", "-\t\tPrintWriter errWriter,", "-\t\tboolean systemExit) {", "-\tthis.initialize(outWriter, errWriter, systemExit, null);", "+protected void initialize(PrintWriter outWriter, PrintWriter errWriter, boolean systemExit) {", "+\tthis.initialize(outWriter, errWriter, systemExit, null /* options */, null /* progress */);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e38781e00699c55bcc8aafcb94744a8b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "dbdde44f24ace4ee47bccce2cfe484eeeb8013f3", "commitAfterChange": "33bcc97ba28fd6319a8c922b4f8d989e4aab5311", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public void complainOnDeferredNullChecks(BlockScope scope, FlowInfo callerFlowInfo)", "signatureAfterChange": " public void complainOnDeferredNullChecks(BlockScope scope, FlowInfo callerFlowInfo)", "diff": ["-\t\t\t\t\t\tthis.parent.recordNullityMismatch(scope, (Expression)location, this.providedExpectedTypes[i][0], this.providedExpectedTypes[i][1], flowInfo, nullStatus);", "+\t\t\t\t\t\tthis.parent.recordNullityMismatch(scope, (Expression)location, this.providedExpectedTypes[i][0], this.providedExpectedTypes[i][1], flowInfo, nullStatus, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e43175cf7df6da86661fb98e78154db8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/NegativeTests.java", "commitBeforeChange": "2abab9940e6db0d9bb45ae1df4c7dab4bbd26433", "commitAfterChange": "f644354e45904d24db02795e349ee282324692a9", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tpublic void testNegativeModel4WithEclipseCompiler() throws IOException", "signatureAfterChange": " \tpublic void testNegativeModel4WithEclipseCompiler() throws IOException", "diff": ["-\t\tinternalTestNegativeModel(compiler, 4);", "+\t\tinternalTestNegativeModel(compiler, 4, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e5311e3e7034ce4da95b44ed477d8bd5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceBuildTests.java", "commitBeforeChange": "30b30e8c56b7e7a44eebf42932935c15fe10b232", "commitAfterChange": "06e44af1d1177a8820136cde1fbe3146b9563e7f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void testBatchCompilerNoWarning() throws IOException, CoreException", "signatureAfterChange": " \tpublic void testBatchCompilerNoWarning() throws IOException, CoreException", "diff": ["-\t\tcompile(JavaCore.PLUGIN_ID, \"-nowarn\", true/*log errors*/);", "+\t\tcompile(JavaCore.PLUGIN_ID, \"-nowarn\", true/*log errors*/, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e594437d475a4209d13ff741ad3cedd0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "3e28b00b3ff1ea2877f4a4e8b245ac6023e86b59", "commitAfterChange": "52e6fbe49c09ab2aed24d8a25448612c4ab36bce", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \tprotected void beginToCompile(ICompilationUnit[] sourceUnits)", "signatureAfterChange": " \tprotected void beginToCompile(ICompilationUnit[] sourceUnits)", "diff": ["-\t\t\t\tlookupEnvironment.buildTypeBindings(parsedUnit);", "+\t\t\t\tlookupEnvironment.buildTypeBindings(parsedUnit, null /*no access restriction*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e59bd1f7a011340590e46248e0154dad", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/IncrementalImageBuilder.java", "commitBeforeChange": "be60c5fae8401603b06f3ef1fdaad755202820be", "commitAfterChange": "a9338de445c9008765127e58fe29962145cc697b", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " protected void writeClassFileContents(ClassFile classfile, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException", "signatureAfterChange": " protected void writeClassFileContents(ClassFile classfile, IFile file, String qualifiedFileName, boolean isTopLevelType, SourceFile compilationUnit) throws CoreException", "diff": ["-\t\t\t\tfile.setDerived(true);", "+\t\t\t\tfile.setDerived(true, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e710f79aeb24d79717e590acf3238bc0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "14369aade824a8ea9cd172f06aeb63b163bb9bf0", "commitAfterChange": "76049c710d8a15447cdfbafce1296b7824e89c76", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tpublic IType findType(String packageName, String typeQualifiedName, WorkingCopyOwner owner, IProgressMonitor progressMonitor) throws JavaModelException", "signatureAfterChange": " \tpublic IType findType(String packageName, String typeQualifiedName, WorkingCopyOwner owner, IProgressMonitor progressMonitor) throws JavaModelException", "diff": ["-\t\t\tlookup,", "-\t\t\ttrue, // consider secondary types", "+\t\t\tnull,", "+\t\t\tlookup, // consider secondary types", "+\t\t\ttrue,", "+\t\t\tprogressMonitor);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9bcfbf78dcf3c5d8205e2081e8799a3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test012() throws JavaModelException, CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic void test012() throws JavaModelException, CoreException, UnsupportedEncodingException", "diff": ["-\t\tthis.encodingProject.setDefaultCharset(encoding);", "+\t\tthis.encodingProject.setDefaultCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eb99612a07219c6999ccc1ba862c44ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void test001() throws JavaModelException, CoreException, UnsupportedEncodingException", "signatureAfterChange": " \tpublic void test001() throws JavaModelException, CoreException, UnsupportedEncodingException", "diff": ["-\t\tthis.utf8File.setCharset(encoding);", "+\t\tthis.utf8File.setCharset(encoding, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec641ed7424009e130ed7db8787382b4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ArrayInitializer.java", "commitBeforeChange": "51c6ca3e4dfed3078a1640da7a2ab7f26c899e0a", "commitAfterChange": "de8aa9940086fe152901aa168536f30670945804", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tcodeStream.newArray(this.binding);", "+\t\tcodeStream.newArray(null, this.binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee136f196fdd52666e864e8d504eaa14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/Compiler.java", "commitBeforeChange": "fb2096a8900d812472337f28518928b970bad197", "commitAfterChange": "cb9297d0b2c1bdcf8963e89b9c822b2bdceb54dc", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tpublic Compiler( \t\t\tINameEnvironment environment, \t\t\tIErrorHandlingPolicy policy, \t\t\tMap settings, \t\t\tfinal ICompilerRequestor requestor, \t\t\tIProblemFactory problemFactory)", "signatureAfterChange": " \tpublic Compiler( \t\t\tINameEnvironment environment, \t\t\tIErrorHandlingPolicy policy, \t\t\tMap settings, \t\t\tfinal ICompilerRequestor requestor, \t\t\tIProblemFactory problemFactory)", "diff": ["-\t\tthis(environment, policy, new CompilerOptions(settings), requestor, problemFactory, null); ", "+\t\tthis(environment, policy, new CompilerOptions(settings), requestor, problemFactory, null /* printwriter */, null /* progress */); "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef6a975a81489721408138aa4f23bfd3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTest2.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 138, "methodNumberAfterChange": 138, "signatureBeforeChange": " \tpublic void test0520() throws JavaModelException", "signatureAfterChange": " \tpublic void test0520() throws JavaModelException", "diff": ["-\t\tASTNode result2 = AST.parse(AST.K_EXPRESSION, source, expression.getStartPosition(), expression.getLength(), JavaCore.getOptions());", "+\t\tASTNode result2 = AST.parse(AST.K_EXPRESSION, source, expression.getStartPosition(), expression.getLength(), JavaCore.getOptions(), null/*no progress monitor*/);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ef791ad68df859c12e1586d83be3f87a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "3a00cdbe76e603258e18bf89fe3c22cfa0424f0e", "commitAfterChange": "305305c3ca78effc1c5db33cea58951eccb313d3", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " protected void assertAllTypes(String expected) throws JavaModelException", "signatureAfterChange": " protected void assertAllTypes(String expected) throws JavaModelException", "diff": ["-\tassertAllTypes(WAIT_UNTIL_READY_TO_SEARCH, expected);", "+\tassertAllTypes(WAIT_UNTIL_READY_TO_SEARCH, null/* no progress monitor*/, expected);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "eff1aba454fce22f4c648550d19714db", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/EncodingTests.java", "commitBeforeChange": "5912110c79629838b26817a1bd42d3973f1081da", "commitAfterChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void tearDownSuite() throws Exception", "signatureAfterChange": "  \tpublic void tearDownSuite() throws Exception", "diff": ["-\t\tgetWorkspaceRoot().setDefaultCharset(null);", "+\t\tgetWorkspaceRoot().setDefaultCharset(null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f215922a57b445cdcc8e6417adb58b51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/PrimitiveTypeImpl.java", "commitBeforeChange": "57eb24f7ca5bd638b11e2a1afda2d825225d880e", "commitAfterChange": "b0991463d796f8d722da593e2f8f5c9ff730ab5e", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \tprivate PrimitiveTypeImpl(BaseTypeBinding binding)", "signatureAfterChange": " \tprivate PrimitiveTypeImpl(BaseTypeBinding binding)", "diff": ["-\t\tsuper(binding);", "+\t\t// Primitive types do not need an environment!", "+\t\tsuper(null, binding);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6a32ddef0830e43de005edc612cdf6c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/WorkingCopyOwnerTests.java", "commitBeforeChange": "82872ebab7a49e444852fa48e7c0aebe2186b7da", "commitAfterChange": "78aad081c102e7b3fcf86a4fc5df1fde50f45024", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": " \tpublic void testParseCompilationUnit3() throws CoreException", "signatureAfterChange": " \tpublic void testParseCompilationUnit3() throws CoreException", "diff": ["-\t\t\t\towner);", "+\t\t\t\towner,", "+\t\t\t\tnull);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f937bd6421bcc07ecb09327405163c3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/ErrorTypeElement.java", "commitBeforeChange": "72aa931453e3f2172c1e3a9834413fcb8210dc18", "commitAfterChange": "4a9fab23504f482fb4645ec189fabd0652bee495", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " \t \tErrorTypeElement(BaseProcessingEnvImpl env)", "signatureAfterChange": " \t \tErrorTypeElement(BaseProcessingEnvImpl env)", "diff": ["-\t\tsuper(env, null);", "+\t\tsuper(env, null, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f9469d43d112926dc54bf16da0576f64", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/parser/SourceElementParserTest.java", "commitBeforeChange": "a0c59dbe1fcc531830cd318af17b39e6ad26be4e", "commitAfterChange": "ac7c104cc39c5e68079fabb4375be3bd00f62981", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 36, "signatureBeforeChange": " public void fullParse(String s, String testName, boolean recordLocalDeclaration)", "signatureAfterChange": " public void fullParse(String s, String testName, boolean recordLocalDeclaration)", "diff": ["-\tparser.parseCompilationUnit(sourceUnit, true);", "+\tparser.parseCompilationUnit(sourceUnit, true, null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fc68d78c78dd3ee13bf42d5583c89d14", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "370fc9797484c96c0e1fdf0a7794604c16e52ccb", "commitAfterChange": "c50ca866bcc8a651da6c9f1ec9e6c29c39dc7ade", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 26, "signatureBeforeChange": "  static MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod, LookupEnvironment environment)", "signatureAfterChange": "  static MethodBinding computeSubstituteMethod(MethodBinding inheritedMethod, MethodBinding currentMethod, LookupEnvironment environment)", "diff": ["-\t\t} else if (inheritedTypeVariable.boundCheck(substitute, argument) != TypeConstants.OK) {", "+\t\t} else if (inheritedTypeVariable.boundCheck(substitute, argument, null) != TypeConstants.OK) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ff6533ad0f86c3841ff9812e03499c16", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/SearchTests.java", "commitBeforeChange": "3a00cdbe76e603258e18bf89fe3c22cfa0424f0e", "commitAfterChange": "305305c3ca78effc1c5db33cea58951eccb313d3", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void assertAllTypes(String message, IJavaProject project, String expected) throws JavaModelException", "signatureAfterChange": " protected void assertAllTypes(String message, IJavaProject project, String expected) throws JavaModelException", "diff": ["-\tassertAllTypes(message, project, WAIT_UNTIL_READY_TO_SEARCH, expected);", "+\tassertAllTypes(message, project, WAIT_UNTIL_READY_TO_SEARCH, null/* no progress monitor*/, expected);"]}], "num": 63258}