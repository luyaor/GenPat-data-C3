{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e16bae59523614c9daeb7d122876ccd6", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "31ff8f04333d72cd5575f76c1c266ad6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "8032392aee6168afb7d9361a5e7c32ded0b6567a", "commitAfterChange": "af7c555b94268663ad75bc44adea174c67a820bf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void feedIndexRequestor(IIndexSearchRequestor requestor, int detailLevel, int[] references, IndexInput input, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " protected void acceptPath(IIndexSearchRequestor requestor, String path)", "diff": ["+protected void acceptPath(IIndexSearchRequestor requestor, String path) {", "+\trequestor.acceptFieldReference(path, decodedName);", "+}", "- */", "-public void feedIndexRequestor(IIndexSearchRequestor requestor, int detailLevel, int[] references, IndexInput input, IJavaSearchScope scope) throws IOException {", "-\tif (currentTag == REF) {", "-\t\tfoundAmbiguousIndexMatches = true;", "-\t}", "-\tfor (int i = 0, max = references.length; i < max; i++) {", "-\t\tint reference = references[i];", "-\t\tif (reference != -1) { // if the reference has not been eliminated", "-\t\t\tIndexedFile file = input.getIndexedFile(reference);", "-\t\t\tString path;", "-\t\t\tif (file != null && scope.encloses(path = IndexedFile.convertPath(file.getPath()))) {", "-\t\t\t\trequestor.acceptFieldReference(path, decodedName);", "-\t\t\t}", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f37585a4f2c7fe0d7a3797130a25bd90", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "8032392aee6168afb7d9361a5e7c32ded0b6567a", "commitAfterChange": "af7c555b94268663ad75bc44adea174c67a820bf", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 1, "signatureBeforeChange": " public void feedIndexRequestor(IIndexSearchRequestor requestor, int detailLevel, int[] references, IndexInput input, IJavaSearchScope scope) throws IOException", "signatureAfterChange": " protected void acceptPath(IIndexSearchRequestor requestor, String path)", "diff": ["+protected void acceptPath(IIndexSearchRequestor requestor, String path) {", "+\trequestor.acceptTypeReference(path, decodedSimpleName);", "+}", "-}", "-public void feedIndexRequestor(IIndexSearchRequestor requestor, int detailLevel, int[] references, IndexInput input, IJavaSearchScope scope) throws IOException {", "-\tif (currentTag == REF) {", "-\t\tfoundAmbiguousIndexMatches = true;", "-\t}", "-\tfor (int i = 0, max = references.length; i < max; i++) {", "-\t\tint reference = references[i];", "-\t\tif (reference != -1) { // if the reference has not been eliminated", "-\t\t\tIndexedFile file = input.getIndexedFile(reference);", "-\t\t\tString path;", "-\t\t\tif (file != null && scope.encloses(path = IndexedFile.convertPath(file.getPath()))) {", "-\t\t\t\trequestor.acceptTypeReference(path, decodedSimpleName);", "-\t\t\t}", "-\t\t}"]}], "num": 17182}