{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5c9fb46b2530ada92ad60e85def987ae", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3c499577110f2564c1e7fb103bb77ad1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/eval/CodeSnippetTest.java", "commitBeforeChange": "9a9dbffb436ea13906fe2acebf2384e8d2af14a0", "commitAfterChange": "d74f13e80f977aae5b9c09d05a0b2b1f998b8f5a", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " public Map getCompilerOptions()", "signatureAfterChange": " public Map getCompilerOptions()", "diff": ["-\tdefaultOptions.put(CompilerOptions.OPTION_ReportMissingOverrideAnnotation, CompilerOptions.ERROR);", "-\tdefaultOptions.put(CompilerOptions.OPTION_ReportMissingOverrideAnnotationForInterfaceMethodImplementation, CompilerOptions.ERROR);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4ae56cd5ad49e5ccc46bd7de7312022f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "40fae5391d4f13359de5727f38342f6b018e40a2", "commitAfterChange": "db834df7a085ee4782717ecabe5050c3a4cc3c6b", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " protected Map getCompilerOptions()", "signatureAfterChange": " protected Map getCompilerOptions()", "diff": ["-\toptions.put(CompilerOptions.OPTION_Compliance, CompilerOptions.VERSION_1_5);", "-\toptions.put(CompilerOptions.OPTION_Source, CompilerOptions.VERSION_1_5);\t", "-\toptions.put(CompilerOptions.OPTION_TargetPlatform, CompilerOptions.VERSION_1_5);\t", "+\toptions.put(CompilerOptions.OPTION_ReportUnnecessaryTypeCheck, CompilerOptions.IGNORE);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b79cb4e6c9a55a1d1f6b364640c5fcd9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/eval/EvaluationContextWrapper.java", "commitBeforeChange": "be66268d6b7ae4befb5a688c13d45a16ba7f29ff", "commitAfterChange": "4193bdf04c4c7d6ed7eb1a7cb87c85b0c41bfcff", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void evaluateCodeSnippet( \tString codeSnippet,  \tString[] localVariableTypeNames,  \tString[] localVariableNames,  \tint[] localVariableModifiers,  \tIType declaringType,  \tboolean isStatic,  \tboolean isConstructorCall,  \tICodeSnippetRequestor requestor,  \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "signatureAfterChange": " public void evaluateCodeSnippet( \tString codeSnippet,  \tString[] localVariableTypeNames,  \tString[] localVariableNames,  \tint[] localVariableModifiers,  \tIType declaringType,  \tboolean isStatic,  \tboolean isConstructorCall,  \tICodeSnippetRequestor requestor,  \tIProgressMonitor progressMonitor) throws org.eclipse.jdt.core.JavaModelException", "diff": ["-\t\t\t\toptions.put(CompilerOptions.OPTION_ReportInvalidImport, CompilerOptions.IGNORE);", "-\t\t\t\t\toptions.put(CompilerOptions.OPTION_ReportInvalidImport, CompilerOptions.IGNORE);"]}], "num": 12695}