{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "16ee7495d7eebbe5135529bfedee9d6b", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "061a36ec36bf649d406c8ddc4bfdafae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "c8fa56c625729a2c5aff4c492dea2eebe9fdcef6", "commitAfterChange": "841f0bfe84392d37aa864c563d3642fdef603b24", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tvoid applyReturnNullBits(MethodBinding method, long nullnessBits, LookupEnvironment environment)", "signatureAfterChange": "  \tvoid applyReturnNullBits(MethodBinding method, long nullnessBits, LookupEnvironment environment)", "diff": ["-\t\t\t\t// TODO(Stephan: Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "-\t\t\t\t//\tmethod.returnType = environment.createAnnotatedType(method.returnType, nullnessBits);", "+\t\t\t\tmethod.returnType = environment.createAnnotatedType(method.returnType, environment.nullAnnotationsFromTagBits(nullnessBits));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cfc2219c30bc22423bb2777616b99846", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ImplicitNullAnnotationVerifier.java", "commitBeforeChange": "c8fa56c625729a2c5aff4c492dea2eebe9fdcef6", "commitAfterChange": "841f0bfe84392d37aa864c563d3642fdef603b24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "signatureAfterChange": " \tpublic void checkImplicitNullAnnotations(MethodBinding currentMethod, AbstractMethodDeclaration srcMethod, boolean complain, Scope scope)", "diff": ["-\t\t\t\t\t\t\t\t// TODO(Stephan: Synthesize AnnotationBinding[] and call LE#createAnnotatedType(TB, AB[]);", "-\t\t\t\t\t\t\t\t// currentMethod.returnType = scope.environment()", "-\t\t\t\t\t\t\t\t//\t\t.createAnnotatedType(currentMethod.returnType, tagBits);", "+\t\t\t\t\t\t\t\tLookupEnvironment env = scope.environment();", "+\t\t\t\t\t\t\t\tcurrentMethod.returnType = env.createAnnotatedType(currentMethod.returnType, env.nullAnnotationsFromTagBits(tagBits));"]}], "num": 33706}