{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "139d292aee4eff6b0e2cc587237a4f70", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5615cfa57fdb1e4d0f20cf4e18514b7e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathDirectory.java", "commitBeforeChange": "88e5aa006a98c27f378a9ba9656ac196342e257f", "commitAfterChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "\r \r NameEnvironmentAnswer findClass(char[] className, char[][] packageName)", "signatureAfterChange": " \r \r NameEnvironmentAnswer findClass(String binaryFileName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["+NameEnvironmentAnswer findClass(String binaryFileName, String qualifiedPackageName, String qualifiedBinaryFileName) {\r", "+\tif (!doesFileExist(binaryFileName, qualifiedPackageName)) return null; // most common case\r", "-NameEnvironmentAnswer findClass(char[] className, char[][] packageName) {\r", "-\tString binaryFilename = new String(className) + \".class\"; //$NON-NLS-1$\r", "-\tif (exists(binaryPath, binaryFilename, packageName)) {\r", "-\t\ttry {\r", "-\t\t\treturn new NameEnvironmentAnswer(\r", "-\t\t\t\tClassFileReader.read(binaryPath + NameEnvironment.assembleName(binaryFilename, packageName, '/')));\r", "-\t\t} catch (Exception e) {\r", "-\t\t}\r", "-\t}\r", "+\ttry {\r", "+\t\tClassFileReader reader = ClassFileReader.read(binaryPath + qualifiedBinaryFileName);\r", "+\t\tif (reader != null) return new NameEnvironmentAnswer(reader);\r", "+\t} catch (Exception e) {} // treat as if class file is missing\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d16f72319eb6bbbf188fcc6e05308f3b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/ClasspathJar.java", "commitBeforeChange": "88e5aa006a98c27f378a9ba9656ac196342e257f", "commitAfterChange": "80c078ddcf769ceb84a30bdd1354fc49a196e760", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 3, "signatureBeforeChange": " \r \r NameEnvironmentAnswer findClass(char[] className, char[][] packageName)", "signatureAfterChange": " \r \r NameEnvironmentAnswer findClass(String binaryFileName, String qualifiedPackageName, String qualifiedBinaryFileName)", "diff": ["-NameEnvironmentAnswer findClass(char[] className, char[][] packageName) {\r", "-\tif (directoryCache == null) buildDirectoryStructure();\r", "-\ttry {\r", "-\t\tString binaryFilename =\r", "-\t\t\tNameEnvironment.assembleName(new String(className) + \".class\", packageName, '/'); //$NON-NLS-1$\r", "-\t\tif (zipFile.getEntry(binaryFilename) == null) return null;\r", "+NameEnvironmentAnswer findClass(String binaryFileName, String qualifiedPackageName, String qualifiedBinaryFileName) {\r", "+\tif (!isPackage(qualifiedPackageName)) return null; // most common case\r", "-\t\treturn new NameEnvironmentAnswer(ClassFileReader.read(zipFile, binaryFilename));\r", "-\t} catch (Exception e) {\r", "-\t\treturn null; // treat as if class file is missing\r", "-\t}\r", "+\ttry {\r", "+\t\tClassFileReader reader = ClassFileReader.read(zipFile, qualifiedBinaryFileName);\r", "+\t\tif (reader != null) return new NameEnvironmentAnswer(reader);\r", "+\t} catch (Exception e) {} // treat as if class file is missing\r", "+\treturn null;\r"]}], "num": 10317}