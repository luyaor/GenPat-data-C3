{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "efc207ed0f5689cfaa73ffb6459ac5b1", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6763412e92bb57830e83d1ccdcb92c37", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyBinaryType.java", "commitBeforeChange": "b2329baad162e28eeaa0efd6e2ada9db5179775c", "commitAfterChange": "1d49668f30e4a48841a7ba14782018ddd855d6b6", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r public boolean isAnonymous()", "signatureAfterChange": "\r public boolean isAnonymous()", "diff": ["+public boolean isAnonymous() {\r", "+\treturn false; // index did not record this information (since unused for hierarchies)\r", "+}\r", "-}\r", "-public boolean isAnonymous() {\r", "-\tint index = CharOperation.lastIndexOf('$', this.name);\r", "-\tif (index == -1) {\r", "-\t\treturn false;\r", "-\t} else {\r", "-\t\tfor (int i = index + 1, length = this.name.length; i < length; i++) {\r", "-\t\t\tif (!Character.isDigit(this.name[i])) {\r", "-\t\t\t\treturn false;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t\treturn true;\r", "-\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ccd2a0e6f1ddeee87004eb61b9aaec75", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/DeltaProcessor.java", "commitBeforeChange": "409f0d1ccf0133d5fcf6863869c728111e50135d", "commitAfterChange": "84e2da9db5b8e3d6a6df97b0f7ad6795dd65a9ad", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 21, "signatureBeforeChange": "\r \tprotected boolean isOnClasspath(IJavaElement element)", "signatureAfterChange": "\r \t\r private boolean isOnClasspath(IClasspathEntry[] classpath, IResource res)", "diff": ["-\t */\r", "-\tprotected boolean isOnClasspath(IJavaElement element) {\r", "-\r", "-\t\tif (element.getElementType() == IJavaElement.PACKAGE_FRAGMENT_ROOT) {\r", "-\t\t\tIPackageFragmentRoot root = (IPackageFragmentRoot) element;\r", "-\t\t\tJavaProject jp = (JavaProject) element.getJavaProject();\r", "-\t\t\ttry {\r", "-\t\t\t\treturn jp.getClasspathEntryFor(root.getPath()) != null;\r", "-\t\t\t} catch (JavaModelException e) {\r", "-\t\t\t\treturn false;\r", "-\t\t\t}\r", "-\t\t} else {\r", "-\t\t\treturn true;\r", "-\t\t}\r", "-\r", "-\t}\r", "+\t\r", "+private boolean isOnClasspath(IClasspathEntry[] classpath, IResource res) {\r", "+\tIPath path = res.getFullPath();\r", "+\tif (classpath == null) {\r", "+\t\treturn true;\r", "+\t} else if (classpath == UNKNOWN_CLASSPATH) {\r", "+\t\treturn false;\r", "+\t} else {\r", "+\t\tfor (int i = 0, length = classpath.length; i < length; i++) {\r", "+\t\t\tif (classpath[i].getPath().isPrefixOf(path)) {\r", "+\t\t\t\treturn true;\r", "+\t\t\t}\r", "+\t\t}\r", "+\t\treturn false;\r", "+\t}\r", "+}\r"]}], "num": 57357}