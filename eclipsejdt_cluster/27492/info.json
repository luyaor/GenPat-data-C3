{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f315f6d66e78bc8fc2bd3e9b3a26567f", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "735105f25822b712788d564d2e0f2a6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "849bead878c9a40a476fb6736e2c949015040926", "commitAfterChange": "ffce987f3a5cbc5edb4057595c44a9095dbf9c81", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic void printModifiers()", "signatureAfterChange": "  \tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor)", "diff": ["-\tpublic void printModifiers() {", "+\tpublic void printModifiers(Annotation[] annotations, ASTVisitor visitor) {", "+\t\t\tint annotationsLength = annotations != null ? annotations.length : 0;", "+\t\t\tint annotationsIndex = 0;", "+\t\t\t\t\t\tbreak;", "+\t\t\t\t\tcase TerminalTokens.TokenNameAT :", "+\t\t\t\t\t\tif (!isFirstModifier) {", "+\t\t\t\t\t\t\tthis.space();", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tthis.scanner.resetTo(this.scanner.getCurrentTokenStartPosition(), this.scannerEndPosition - 1);", "+\t\t\t\t\t\tif (annotationsIndex < annotationsLength) {", "+\t\t\t\t\t\t\tannotations[annotationsIndex++].traverse(visitor, (BlockScope) null);", "+\t\t\t\t\t\t} else {", "+\t\t\t\t\t\t\treturn;", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tisFirstModifier = false;", "+\t\t\t\t\t\tcurrentTokenStartPosition = this.scanner.currentPosition;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e186ebddabf25ef3fd3fe9044122fa2c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BinaryTypeBinding.java", "commitBeforeChange": "4690bf209f18cd325a0106904806772c80cdc7cd", "commitAfterChange": "05d6073173c0310580ac7ddb24f238b065dba6bb", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private void createFields(IBinaryField[] iFields, long sourceLevel)", "signatureAfterChange": " private void createFields(IBinaryField[] iFields, long sourceLevel)", "diff": ["+\t\t\tint firstAnnotatedFieldIndex = -1;", "-\t\t\t\tif (this.environment.globalOptions.storeAnnotations)", "-\t\t\t\t\tfield.setAnnotations(createAnnotations(binaryField.getAnnotations(), this.environment));", "+\t\t\t\tif (firstAnnotatedFieldIndex < 0", "+\t\t\t\t\t\t&& this.environment.globalOptions.storeAnnotations ", "+\t\t\t\t\t\t&& binaryField.getAnnotations() != null) {", "+\t\t\t\t\tfirstAnnotatedFieldIndex = i;", "+\t\t\t\t}", "+\t\t\t// second pass for reifying annotations, since may refer to fields being constructed (147875)", "+\t\t\tif (firstAnnotatedFieldIndex >= 0) {", "+\t\t\t\tfor (int i = firstAnnotatedFieldIndex; i <size; i++) {", "+\t\t\t\t\tthis.fields[i].setAnnotations(createAnnotations(iFields[i].getAnnotations(), this.environment));", "+\t\t\t\t}", "+\t\t\t}"]}], "num": 27492}