{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2d86fecee4a2ba2f32f9cc04cdefcbbf", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8deb0fd8bc73aa42ce6bc9f4cef89f5a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "0f5d04adf9d2fa735fce5517c85c8317372cf6c0", "commitAfterChange": "6cefacaaf91a5190221cb83191ea60dad1636887", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  \tprivate static char[] removePrefixAndSuffix(char[] name, char[][] prefixes, char[][] suffixes)", "signatureAfterChange": "  \tprivate static char[] removePrefixAndSuffix(char[] name, char[][] prefixes, char[][] suffixes)", "diff": ["-\t\t\t\t\tboolean lastCharIsLetter = Character.isLetter(prefix[currLen - 1]);", "-\t\t\t\t\tif(!lastCharIsLetter || (lastCharIsLetter && name.length > currLen && Character.isUpperCase(name[currLen]))) {", "+\t\t\t\t\tboolean lastCharIsLetter = ScannerHelper.isLetter(prefix[currLen - 1]);", "+\t\t\t\t\tif(!lastCharIsLetter || (lastCharIsLetter && name.length > currLen && ScannerHelper.isUpperCase(name[currLen]))) {", "-\t\twithoutSuffixName[0] = Character.toLowerCase(withoutSuffixName[0]);", "+\t\twithoutSuffixName[0] = ScannerHelper.toLowerCase(withoutSuffixName[0]);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b754f16f7328cc77a8f8a663821133ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/NamingConventions.java", "commitBeforeChange": "7159d03b35583ef652a35141b4e5f0e03996db0b", "commitAfterChange": "d2487ffafdbbe7eaca44a67066ee7584eaf4c775", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tprivate static char[] removePrefixAndSuffix(char[] name, char[][] prefixes, char[][] suffixes)", "signatureAfterChange": " \t \tprivate static char[] removePrefixAndSuffix(char[] name, char[][] prefixes, char[][] suffixes)", "diff": ["-\t\t\t\t\tif (bestLength < currLen && name.length != currLen) {", "-\t\t\t\t\t\twithoutPrefixName = CharOperation.subarray(name, currLen, name.length);", "-\t\t\t\t\t\tbestLength = currLen;", "+\t\t\t\t\tboolean lastCharIsLetter = Character.isLetter(prefix[currLen - 1]);", "+\t\t\t\t\tif(!lastCharIsLetter || (lastCharIsLetter && name.length > currLen && Character.isUpperCase(name[currLen]))) {", "+\t\t\t\t\t\tif (bestLength < currLen && name.length != currLen) {", "+\t\t\t\t\t\t\twithoutPrefixName = CharOperation.subarray(name, currLen, name.length);", "+\t\t\t\t\t\t\tbestLength = currLen;", "+\t\t\t\t\t\t}"]}], "num": 54782}