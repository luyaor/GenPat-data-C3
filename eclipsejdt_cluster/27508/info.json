{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ee4dfc088a043f296a2aa2df45116b15", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "482282739ebbeab84462e7c838a753dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/MethodVerifier.java", "commitBeforeChange": "b233987c7fea505c4ff142d428b8fa9f97812fb3", "commitAfterChange": "e740896973889d013245072f7949a8702b4374a0", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " private void computeInheritedMethods()", "signatureAfterChange": " private void computeInheritedMethods()", "diff": ["-\tif (itsInterfaces != NoSuperInterfaces)", "+\tif (itsInterfaces != NoSuperInterfaces && itsInterfaces != null) // cannot be null, but protect against bug 49809", "-\t\t\tif ((itsInterfaces = superType.superInterfaces()) != NoSuperInterfaces) {", "+\t\t\tif ((itsInterfaces = superType.superInterfaces()) != NoSuperInterfaces && itsInterfaces != null) {", "-\t\t\t\t\tif ((itsInterfaces = superType.superInterfaces()) != NoSuperInterfaces) {", "+\t\t\t\t\tif ((itsInterfaces = superType.superInterfaces()) != NoSuperInterfaces && itsInterfaces != null) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c66d9621a3ea81cf68a2ebfb78b6d2b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c76d03d66c0d7e831f9b6637a5d3bd72a811b05", "commitAfterChange": "117a744eb0d24ab39fea10587275a272ccbaee7f", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " public void checkAnnotation()", "signatureAfterChange": " public void checkAnnotation()", "diff": ["-\t\t// check deprecation in last comment if javadoc \t", "-\t\tif (this.scanner.commentStops[lastComment] > 0) { \t// non javadoc comment have negative end positions", "+\t\t// check deprecation in last comment if javadoc (can be followed by non-javadoc comments which are simply ignored)\t", "+\t\twhile (lastComment >= 0 && this.scanner.commentStops[lastComment] < 0) lastComment--; // non javadoc comment have negative end positions", "+\t\tif (lastComment >= 0) {"]}], "num": 27508}