{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "256fb2e2ea4147b72575d921a39ce8d3", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "602183d8bd2d00a98d9cecdf8c829ce1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "fb79acb2f88020666334c353888dcdeb37abd070", "commitAfterChange": "4a7d6bdefb8cc07325fb8a5c7d2a751e2d99c2eb", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 30, "signatureBeforeChange": " \tprotected boolean generateInfos( \t\tOpenableElementInfo info, \t\tIProgressMonitor pm, \t\tMap newElements, \t\tIResource underlyingResource) throws JavaModelException", "signatureAfterChange": " \tprotected boolean generateInfos( \t\tOpenableElementInfo info, \t\tIProgressMonitor pm, \t\tMap newElements, \t\tIResource underlyingResource) throws JavaModelException", "diff": ["+\t\t\t\t// remember the timestamps of external libraries the first time they are looked up", "+\t\t\t\tIClasspathEntry[] resolvedClasspath = getResolvedClasspath(true/*ignore unresolved variable*/);", "+\t\t\t\tfor (int i = 0, length = resolvedClasspath.length; i < length; i++) {", "+\t\t\t\t\tIClasspathEntry entry = resolvedClasspath[i];", "+\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\t\t\t\tIPath path = entry.getPath();", "+\t\t\t\t\t\tObject target = JavaModel.getTarget(ResourcesPlugin.getWorkspace().getRoot(), path, true);", "+\t\t\t\t\t\tif (target instanceof java.io.File) {", "+\t\t\t\t\t\t\tMap externalTimeStamps = JavaModelManager.getJavaModelManager().deltaProcessor.externalTimeStamps;", "+\t\t\t\t\t\t\tif (externalTimeStamps.get(path) == null) {", "+\t\t\t\t\t\t\t\tlong timestamp = DeltaProcessor.getTimeStamp((java.io.File)target);", "+\t\t\t\t\t\t\t\texternalTimeStamps.put(path, new Long(timestamp));\t\t\t\t\t\t\t", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}\t\t\t", "+"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a18dda177098a243bf5105282d87f7dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "665fa70c145e3460af8c3efab89c50489feb17d0", "commitAfterChange": "3996b584ed9fd34d4dddb6c6b007dbfe987d9ebb", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tprotected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "signatureAfterChange": " \tprotected boolean buildStructure(OpenableElementInfo info, IProgressMonitor pm, Map newElements, IResource underlyingResource) throws JavaModelException", "diff": ["-\t\tIWorkspace workspace = ResourcesPlugin.getWorkspace();", "-\t\tIWorkspaceRoot wRoot = workspace.getRoot();", "-\t\tfor (int i = 0, length = resolvedClasspath.length; i < length; i++) {", "-\t\t\tIClasspathEntry entry = resolvedClasspath[i];", "-\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "-\t\t\t\tIPath path = entry.getPath();", "-\t\t\t\tObject target = JavaModel.getTarget(wRoot, path, true);", "-\t\t\t\tif (target instanceof java.io.File) {", "-\t\t\t\t\tMap externalTimeStamps = JavaModelManager.getJavaModelManager().deltaState.externalTimeStamps;", "-\t\t\t\t\tif (externalTimeStamps.get(path) == null) {", "-\t\t\t\t\t\tlong timestamp = DeltaProcessor.getTimeStamp((java.io.File)target);", "-\t\t\t\t\t\texternalTimeStamps.put(path, new Long(timestamp));\t\t\t\t\t\t\t", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}\t\t\t", "+\t\tgetPerProjectInfo().rememberExternalLibTimestamps();\t\t\t"]}], "num": 47285}