{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ed3d4420e1b814cdd834087ea88afb7e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f394283c3caf147dc85ecb41022bdbd8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchLocatorParser.java", "commitBeforeChange": "cd290957c2bd8d760411805c481ea53ade57f09d", "commitAfterChange": "c235f0d68d13055cb9237a3b54fd2255553fe602", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 23, "signatureBeforeChange": " protected void consumeAnnotationAsModifier()", "signatureAfterChange": " protected void consumeMarkerAnnotation()", "diff": ["-protected void consumeAnnotationAsModifier() {", "-\tsuper.consumeAnnotationAsModifier();", "-\tExpression expression = this.expressionStack[this.expressionPtr];", "-\tif (expression instanceof Annotation) {", "-\t\tthis.patternLocator.match(((Annotation)expression).type, this.nodeSet);", "-\t}", "-}", "+}", "+protected void consumeMarkerAnnotation() {", "+\tsuper.consumeMarkerAnnotation();", "+\t// this is always an Annotation", "+\tAnnotation annotation = (Annotation) expressionStack[expressionPtr];", "+\tthis.patternLocator.match(annotation, nodeSet);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f4e7f3b56ab5e43c9dc6f4ebc95b0020", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "f8f9b421e40a063ca8114a2e1dadfc0f4aed3108", "commitAfterChange": "fa2298688682ae3418bc86c6341b5d5f8c730cc1", "methodNumberBeforeChange": 58, "methodNumberAfterChange": 58, "signatureBeforeChange": "  \tprivate void printLineComment(int commentStart, int commentEnd)", "signatureAfterChange": "  \tprivate void printLineComment(int commentStart, int commentEnd)", "diff": ["-\t\tthis.indentationLevel = (this.column / this.tabLength) * this.tabLength;", "+\t\tthis.indentationLevel = getNextIndentationLevel(firstColumn);"]}], "num": 69391}