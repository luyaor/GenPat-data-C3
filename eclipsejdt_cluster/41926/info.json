{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4829c439c80ce73046eb4c580b40ab3d", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e36aab6c68d6d3e28a11e03b01baa58", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/processors/org/eclipse/jdt/compiler/apt/tests/processors/negative/NegativeModelProc.java", "commitBeforeChange": "fe9d56739c7ee5a42ad73e908441932d571ee55b", "commitAfterChange": "309aed033cc4257b36692ed1549ee0025e0800df", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 3, "signatureBeforeChange": " \t@Override \tpublic synchronized void init(ProcessingEnvironment processingEnv)", "signatureAfterChange": " \t@Override \tpublic synchronized void init(ProcessingEnvironment processingEnv)", "diff": ["+\t\t", "+\t\t// parse options", "+\t\t_oneTest = -1;", "+\t\tMap<String, String> options = processingEnv.getOptions();", "+\t\t_processorEnabled = options.containsKey(CLASSNAME);", "+\t\tString oneTestOption = options.get(CLASSNAME);", "+\t\tif (oneTestOption == null || oneTestOption.length() == 0) {", "+\t\t\t_oneTest = 0;", "+\t\t}", "+\t\telse {", "+\t\t\ttry {", "+\t\t\t\t_oneTest = Integer.parseInt(oneTestOption);", "+\t\t\t} catch (Exception e) {", "+\t\t\t\t// report it in process(), where we have better error reporting capability", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "89e4110776bc1fa452015c98a5878db8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/AptCompilationParticipant.java", "commitBeforeChange": "1af62c8ac8c29f055bb8404d4de6ad60e868f8c4", "commitAfterChange": "1c68a970a8cbd8bfa2174955d5c78e149d7e6268", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 5, "signatureBeforeChange": " \t \tprivate CompilationParticipantResult postReconcileNotify( PostReconcileCompilationEvent prce )", "signatureAfterChange": " \t \tprivate CompilationParticipantResult postReconcileNotify( PostReconcileCompilationEvent prce )", "diff": ["+\t\tIProblem[] problems = null;", "+\t\t", "-\t\t\tAPTDispatch.runAPTDuringReconcile( _factories, cu, javaProject );", "+\t\t\tAPTResult result = APTDispatch.runAPTDuringReconcile( _factories, cu, javaProject );", "+\t\t\tMap<IFile, List<IProblem>> allproblems = result.getProblems();\t\t\t", "+\t\t\t", "+\t\t\tfinal List<IProblem> problemList = allproblems.get((IFile)cu.getResource());", "+\t\t\tif( problemList != null && !problemList.isEmpty())", "+\t\t\t\tproblems = problemList.toArray(new IProblem[problemList.size()]);\t", "-\t\treturn new PostReconcileCompilationResult();", "+\t\treturn new PostReconcileCompilationResult(problems);"]}], "num": 41926}