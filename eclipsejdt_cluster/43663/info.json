{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f0e5677751238c62dc896ca7416e588", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "60c650ef13d599b7cb7f6cc34323240d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/ConstraintTypeFormula.java", "commitBeforeChange": "b00fa1db92208aba25130872792b5257a8a769b0", "commitAfterChange": "35a336ae4dee8fe75706ce1a1ce1cfa86d2ad222", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic Object reduce(InferenceContext18 inferenceContext)", "signatureAfterChange": " \tpublic Object reduce(InferenceContext18 inferenceContext)", "diff": ["-\t\t\t\tif (isCompatibleWithInLooseInvocationContext(this.left, this.right, inferenceContext))", "-\t\t\t\t\treturn TRUE;", "-\t\t\t\treturn FALSE;", "+\t\t\t\treturn this.left.isCompatibleWith(this.right, inferenceContext.scope) || this.left.isBoxingCompatibleWith(this.right, inferenceContext.scope) ? TRUE : FALSE;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a24d3cb100abc3fc9473dff59dbcd359", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/FunctionalExpression.java", "commitBeforeChange": "3256aef43e2296affdbf86e21f8cafdaa866161a", "commitAfterChange": "f357f309273e0bfe8345ff708d18fa83c6a34931", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic boolean isBoxingCompatibleWith(TypeBinding targetType, Scope scope)", "signatureAfterChange": " \t \tpublic boolean isBoxingCompatibleWith(TypeBinding targetType, Scope scope)", "diff": ["-\t// for lambda's and reference expressions boxing compatibility is same as vanilla compatibility.", "-\t\treturn isCompatibleWith(targetType, scope);", "+\t\treturn false;"]}], "num": 43663}