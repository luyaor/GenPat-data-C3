{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e0ee83af8c94ced2ea0f7dc1249fe341", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "40a0c1dc855e8bb6fd0dc41b43f75d35", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/StaticImportTest.java", "commitBeforeChange": "59f906dde0386689cf221a0077edc4ded4fac940", "commitAfterChange": "53a88facba099a7ef05d98b75f25800af60438f8", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic void test032()", "signatureAfterChange": " \tpublic void test032()", "diff": ["+\t\tthis.runNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"X.java\",", "+\t\t\t\t\"import static p.A.*;\\n\" + ", "+\t\t\t\t\"import static p.B.foo;\\n\" + ", "+\t\t\t\t\"public class X { void test() {foo();} }\\n\",", "+\t\t\t\t\"p/A.java\",", "+\t\t\t\t\"package p;\" +", "+\t\t\t\t\"public class A {\\n\" + ", "+\t\t\t\t\"\tpublic static void foo() {}\\n\" + ", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"p/B.java\",", "+\t\t\t\t\"package p;\" +", "+\t\t\t\t\"public class B {\\n\" + ", "+\t\t\t\t\"\tpublic static void foo() {}\\n\" + ", "+\t\t\t\t\"}\\n\"", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in X.java (at line 3)\\r\\n\" + ", "+\t\t\t\"\tpublic class X { void test() {foo();} }\\r\\n\" + ", "+\t\t\t\"\t                              ^^^\\n\" + ", "+\t\t\t\"The method foo() is ambiguous for the type X\\n\" + ", "+\t\t\t\"----------\\n\"", "+\t\t\t// reference to foo is ambiguous, both method foo() in p.B and method foo() in p.A match", "+\t\t);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e47c32e332102016b4e50bd260916b5c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/DefaultMethodsTest.java", "commitBeforeChange": "e37ddd2cb60251da977bfe008d0c558febeb1616", "commitAfterChange": "ddff16f6a6b8fee88d497b4653d14d58ccda81b4", "methodNumberBeforeChange": 28, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic void testAbstract02b()", "signatureAfterChange": " \tpublic void testAbstract02b()", "diff": ["-\t// same as above but for interfaces this is illegal", "+\t// class is abstract", "+\t\trunNegativeTest(", "+\t\t\tnew String[] {", "+\t\t\t\t\"I1.java\",", "+\t\t\t\t\"public interface I1 {\\n\" +", "+\t\t\t\t\"    void test();\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"I2.java\",", "+\t\t\t\t\"public interface I2 {\\n\" +", "+\t\t\t\t\"    default void test() {}\\n\" +", "+\t\t\t\t\"}\\n\",", "+\t\t\t\t\"C.java\",", "+\t\t\t\t\"public abstract class C implements I2, I1 {\\n\" +", "+\t\t\t\t\"}\\n\"", "+\t\t\t},", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. ERROR in C.java (at line 1)\\n\" + ", "+\t\t\t\"\tpublic abstract class C implements I2, I1 {\\n\" + ", "+\t\t\t\"\t                      ^\\n\" + ", "+\t\t\t\"The default method test() inherited from I2 conflicts with another method inherited from I1\\n\" + ", "+\t\t\t\"----------\\n\");", "+\t}"]}], "num": 26444}