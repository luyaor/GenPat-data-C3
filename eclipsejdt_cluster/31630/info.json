{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ec32bd15d602cdeef32cb1d917cabbb9", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c6ba6fac7488cdded1836112edb102c7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "d4b8f1437bd894de59822a00977399b8af50c7a1", "commitAfterChange": "00e190bf5f96c54b05d4853702eef90ea6dc4747", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 20, "signatureBeforeChange": " protected void consumeArrayCreationExpression()", "signatureAfterChange": "  protected void consumeArrayCreationExpressionWithInitializer()", "diff": ["-protected void consumeArrayCreationExpression() {", "-\t// ArrayCreationExpression ::= 'new' PrimitiveType DimWithOrWithOutExprs ArrayInitializeropt", "-\t// ArrayCreationExpression ::= 'new' ClassOrInterfaceType DimWithOrWithOutExprs ArrayInitializeropt", "-\tif (expressionLengthStack[expressionLengthPtr] != 0) {", "-\t\texpressionLengthPtr -- ;", "-\t\taae.initializer = (ArrayInitializer) expressionStack[expressionPtr--];", "-\t\texpressionLengthPtr--;", "+", "+protected void consumeArrayCreationExpressionWithInitializer() {", "+\t// ArrayCreationWithArrayInitializer ::= 'new' PrimitiveType DimWithOrWithOutExprs ArrayInitializer", "+\t// ArrayCreationWithArrayInitializer ::= 'new' ClassOrInterfaceType DimWithOrWithOutExprs ArrayInitializer", "+", "+\tint length;", "+\tArrayAllocationExpression aae = new ArrayAllocationExpression();", "+\texpressionLengthPtr -- ;", "+\taae.initializer = (ArrayInitializer) expressionStack[expressionPtr--];"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e9cbb475a44fa5824ad4b61d045b9ebc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/select/SelectionParser.java", "commitBeforeChange": "d4b8f1437bd894de59822a00977399b8af50c7a1", "commitAfterChange": "00e190bf5f96c54b05d4853702eef90ea6dc4747", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": "  protected void consumeArrayCreationExpression()", "signatureAfterChange": " protected void consumeArrayCreationExpressionWithoutInitializer()", "diff": ["+protected void consumeArrayCreationExpressionWithoutInitializer() {", "+\t// ArrayCreationWithoutArrayInitializer ::= 'new' PrimitiveType DimWithOrWithOutExprs", "+\t// ArrayCreationWithoutArrayInitializer ::= 'new' ClassOrInterfaceType DimWithOrWithOutExprs", "-protected void consumeArrayCreationExpression() {", "-\t// ArrayCreationExpression ::= 'new' PrimitiveType DimWithOrWithOutExprs ArrayInitializeropt", "-\t// ArrayCreationExpression ::= 'new' ClassOrInterfaceType DimWithOrWithOutExprs ArrayInitializeropt", "+\tsuper.consumeArrayCreationExpressionWithoutInitializer();", "-\tsuper.consumeArrayCreationExpression();", "+\tArrayAllocationExpression alloc = (ArrayAllocationExpression)expressionStack[expressionPtr];", "+\tif (alloc.type == assistNode){", "+\t\tif (!diet){", "+\t\t\tthis.restartRecovery\t= true;\t// force to restart in recovery mode", "+\t\t\tthis.lastIgnoredToken = -1;\t", "+\t\t}", "+\t\tthis.isOrphanCompletionNode = true;", "+\t}", "+}"]}], "num": 31630}