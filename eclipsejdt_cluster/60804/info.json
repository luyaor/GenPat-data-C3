{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4cb554bab0fd997a5dd52231aa5c8b87", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03b43f88a717a438dd4260178f238834", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "f0876a2c26cb4231ffe7dc0126e9ac775a1337ba", "commitAfterChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic void createASTs(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor requestor, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic void createASTs(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor requestor, IProgressMonitor monitor)", "diff": ["+\t\t\tint flags = 0;", "+\t\t\tif (this.statementsRecovery) flags |= ICompilationUnit.ENABLE_STATEMENTS_RECOVERY;", "-\t\t\t\tCompilationUnitResolver.resolve(compilationUnits, bindingKeys, requestor, this.apiLevel, this.compilerOptions, this.project, this.workingCopyOwner, this.statementsRecovery, monitor);", "+\t\t\t\tif (this.bindingsRecovery) flags |= ICompilationUnit.ENABLE_BINDINGS_RECOVERY;", "+\t\t\t\tCompilationUnitResolver.resolve(compilationUnits, bindingKeys, requestor, this.apiLevel, this.compilerOptions, this.project, this.workingCopyOwner, flags, monitor);", "-\t\t\t\tCompilationUnitResolver.parse(compilationUnits, requestor, this.apiLevel, this.compilerOptions, monitor);", "+\t\t\t\tCompilationUnitResolver.parse(compilationUnits, requestor, this.apiLevel, this.compilerOptions, flags, monitor);", "-\t   \t   // re-init defaults to allow reuse (and avoid leaking)", "-\t   \t   initializeDefaults();", "+\t\t\t// re-init defaults to allow reuse (and avoid leaking)", "+\t\t\tinitializeDefaults();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4724b2ac4f81c3d868c77e239538fcde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "f0876a2c26cb4231ffe7dc0126e9ac775a1337ba", "commitAfterChange": "0f841a0360389f0f91aef636ca6531276c4a074d", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tpublic IBinding[] createBindings(IJavaElement[] elements, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic IBinding[] createBindings(IJavaElement[] elements, IProgressMonitor monitor)", "diff": ["-\t\t\treturn CompilationUnitResolver.resolve(elements, this.apiLevel, this.compilerOptions, this.project, this.workingCopyOwner, this.statementsRecovery, monitor);", "+\t\t\tint flags = 0;", "+\t\t\tif (this.statementsRecovery) flags |= ICompilationUnit.ENABLE_STATEMENTS_RECOVERY;", "+\t\t\tif (this.bindingsRecovery)  flags |= ICompilationUnit.ENABLE_BINDINGS_RECOVERY;", "+\t\t\treturn CompilationUnitResolver.resolve(elements, this.apiLevel, this.compilerOptions, this.project, this.workingCopyOwner, flags, monitor);", "-\t   \t   // re-init defaults to allow reuse (and avoid leaking)", "-\t   \t   initializeDefaults();", "+\t\t\t// re-init defaults to allow reuse (and avoid leaking)", "+\t\t\tinitializeDefaults();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ad40835c102bb20392772ced69189693", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "ec8e689e69ce65d5a3f127f9c7126c4bebdd7b60", "commitAfterChange": "c922c60b9bc5fcda7fb9f2a477eba6f8f95a6cf9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tpublic void createASTs(ASTRequestor requestor, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic void createASTs(ASTRequestor requestor, IProgressMonitor monitor)", "diff": ["+\t */", "+\tpublic void createASTs(ASTRequestor requestor, IProgressMonitor monitor) {", "+\t\tcreateASTs(requestor.getSources(), new String[] {}, requestor, monitor);", "+\t}", "-\tpublic void createASTs(ASTRequestor requestor, IProgressMonitor monitor) {", "-\t\t\t\tCompilationUnitResolver.resolve(requestor, this.apiLevel, this.compilerOptions, this.project, this.workingCopyOwner, monitor);", "-\t\t\t\tCompilationUnitResolver.parse(requestor, this.apiLevel, this.compilerOptions, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d9e84abf8443f617c59c58bccb637acc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "ec8e689e69ce65d5a3f127f9c7126c4bebdd7b60", "commitAfterChange": "c922c60b9bc5fcda7fb9f2a477eba6f8f95a6cf9", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic void createASTs(ASTRequestor requestor, IProgressMonitor monitor)", "signatureAfterChange": " \tpublic void createASTs(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor requestor, IProgressMonitor monitor)", "diff": ["-\tpublic void createASTs(ASTRequestor requestor, IProgressMonitor monitor) {", "+\tpublic void createASTs(ICompilationUnit[] compilationUnits, String[] bindingKeys, ASTRequestor requestor, IProgressMonitor monitor) {", "-\t\t\t\tCompilationUnitResolver.resolve(requestor, this.apiLevel, this.compilerOptions, this.project, this.workingCopyOwner, monitor);", "+\t\t\t\tCompilationUnitResolver.resolve(compilationUnits, bindingKeys, requestor, this.apiLevel, this.compilerOptions, this.project, this.workingCopyOwner, monitor);", "-\t\t\t\tCompilationUnitResolver.parse(requestor, this.apiLevel, this.compilerOptions, monitor);", "+\t\t\t\tCompilationUnitResolver.parse(compilationUnits, requestor, this.apiLevel, this.compilerOptions, monitor);"]}], "num": 60804}