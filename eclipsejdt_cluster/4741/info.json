{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "40e77f288686d4a5458be9532e38f63e", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6a883d3eacd9181c5644ee8127a27cae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/ThrownExceptionFinder.java", "commitBeforeChange": "b48948c440f4082a22e31c203db0c29a35ec4b75", "commitAfterChange": "699cc351076b7c5897a886d674772d111233f0a3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void removeCaughtException(ReferenceBinding caughtException)", "signatureAfterChange": "  \tprivate void removeCaughtException(ReferenceBinding caughtException)", "diff": ["-\t\t\t\tif (exception == caughtException || caughtException.isSuperclassOf(exception)) {", "+\t\t\t\tif (exception == caughtException) {", "+\t\t\t\t} else if (caughtException.isSuperclassOf(exception)) {", "+\t\t\t\t\t// catching the sub-exception when super has been caught already will give an error", "+\t\t\t\t\t// so remove it from thrown list and lower the relevance for cases when it is found", "+\t\t\t\t\t// from searchAllTypes(..)", "+\t\t\t\t\tthis.thrownExceptions.remove(exception);", "+\t\t\t\t\tthis.discouragedExceptions.add(exception);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6fe200cc35bffe42f325ed07d57bf86", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyParser.java", "commitBeforeChange": "689d1c5ebca4843f31f4f4e1dc3ea53436cbc89c", "commitAfterChange": "709c9629c7ca5e9f5f62caafc7b62b1f650d3793", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \tpublic void parse(boolean pauseAfterFullyQualifiedName)", "signatureAfterChange": "  \tpublic void parse(boolean pauseAfterFullyQualifiedName)", "diff": ["- \t\t\t\t\t}", "- \t\t\t\t\tbreak;", "+ \t\t\t\t\t} else if (this.scanner.isAtMethodTypeVariableStart()) {", "+\t\t\t\t\t\tparseTypeVariable();", "+\t\t\t\t\t}", "+\t\t\t \t\tbreak;", "-\t\t} else if (this.scanner.isAtTypeVariableStart()) {", "+\t\t} else if (this.scanner.isAtTypeTypeVariableStart()) {", "+\t\t \t// skip \";>\"", "+\t\t \tthis.scanner.skipParametersEnd();"]}], "num": 4741}