{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ea861c18ac1bb69b389695a355298b7b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f4715040f0669fac10329ed629733dd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "4ff905e78bafd71173d7f0334a042481d0575303", "commitAfterChange": "e78b831ecdf23a867bd21d96aa870a039cfa4f4c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\t\tfinal TypeBinding expectedParameterType = haveDescriptor ? this.singleAbstractMethod.parameters[i] : null;", "+\t\t\tfinal TypeBinding expectedParameterType = haveDescriptor && i < this.singleAbstractMethod.parameters.length ? this.singleAbstractMethod.parameters[i] : null;", "-\t\t\t\tif (haveDescriptor && parameterType != expectedParameterType) {", "+\t\t\t\tif (haveDescriptor && expectedParameterType != null && parameterType != expectedParameterType) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5fc0790b881996debf9a56f9b5df0f3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "c7e61e314902d7cf48e71c1a1c0437bb40107c2e", "commitAfterChange": "8a1621e802c664e59aba36b8a87f59ae57902e37", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "signatureAfterChange": " \tpublic TypeBinding resolveType(BlockScope blockScope)", "diff": ["-\t\t\t\tif (haveDescriptor && expectedParameterType != null && parameterType.isValidBinding() && parameterType != expectedParameterType) {", "+\t\t\t\tif (haveDescriptor && expectedParameterType != null && parameterType.isValidBinding() && parameterType.unannotated() != expectedParameterType.unannotated()) {", "-\t\t\t\tnewParameters[i] = parameterType;", "-\t\t\t\targument.bind(this.scope, parameterType, false);", "+\t\t\t\tnewParameters[i] = argument.bind(this.scope, parameterType, false);\t\t\t\t"]}], "num": 45286}