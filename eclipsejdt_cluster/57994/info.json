{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cf157f97e52fa72e557363f5bf366b0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7316cf559c2ca0989607602268dd61d1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/RecoveredType.java", "commitBeforeChange": "3a24c8e93f77a32dae59173b29a4fa366ce01a3a", "commitAfterChange": "5d36ded47d2c78d72658a7417caa4c325d7b6276", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " public TypeDeclaration updatedTypeDeclaration()", "signatureAfterChange": " public TypeDeclaration updatedTypeDeclaration(int depth, Set knownTypes)", "diff": ["-public TypeDeclaration updatedTypeDeclaration(){", "+public TypeDeclaration updatedTypeDeclaration(int depth, Set knownTypes){", "+\tif (depth >= MAX_TYPE_DEPTH) return null;", "+", "+\tif(knownTypes.contains(this.typeDeclaration)) return null;", "+\tknownTypes.add(this.typeDeclaration);", "+\t", "+\t\t", "+\t\tint updatedCount = 0;", "-\t\t\tmemberTypeDeclarations[existingCount + i] = this.memberTypes[i].updatedTypeDeclaration();", "+\t\t\tTypeDeclaration updatedTypeDeclaration = this.memberTypes[i].updatedTypeDeclaration(depth + 1, knownTypes);", "+\t\t\tif (updatedTypeDeclaration != null) {", "+\t\t\t\tmemberTypeDeclarations[existingCount + (updatedCount++)] = updatedTypeDeclaration;", "+\t\t\t}", "-\t\tthis.typeDeclaration.memberTypes = memberTypeDeclarations;", "-\t\tif(memberTypeDeclarations[memberTypeDeclarations.length - 1].declarationSourceEnd > lastEnd) {", "-\t\t\tlastEnd = memberTypeDeclarations[memberTypeDeclarations.length - 1].declarationSourceEnd;", "+\t\tif (updatedCount < this.memberTypeCount) {", "+\t\t\tint length = existingCount + updatedCount;", "+\t\t\tSystem.arraycopy(memberTypeDeclarations, 0, memberTypeDeclarations = new TypeDeclaration[length], 0, length);", "+\t\t}", "+\t\t", "+\t\tif (memberTypeDeclarations.length > 0) { ", "+\t\t\tthis.typeDeclaration.memberTypes = memberTypeDeclarations;", "+\t\t\tif(memberTypeDeclarations[memberTypeDeclarations.length - 1].declarationSourceEnd > lastEnd) {", "+\t\t\t\tlastEnd = memberTypeDeclarations[memberTypeDeclarations.length - 1].declarationSourceEnd;", "+\t\t\t}", "-\t\t\tfieldDeclarations[existingCount + i] = this.fields[i].updatedFieldDeclaration();", "+\t\t\tfieldDeclarations[existingCount + i] = this.fields[i].updatedFieldDeclaration(depth, knownTypes);", "-\t\t\tAbstractMethodDeclaration updatedMethod = this.methods[i].updatedMethodDeclaration();", "+\t\t\tAbstractMethodDeclaration updatedMethod = this.methods[i].updatedMethodDeclaration(depth, knownTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d94929c4be3a64a161eec9aca28d43ff", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/CodeFormatterVisitor.java", "commitBeforeChange": "c98abd1679793c741445024ae2ee115b37f6fe95", "commitAfterChange": "b2ee2f0e0ad1c5d61d4417df1a17fc01d93cc41f", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 28, "signatureBeforeChange": "  \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "signatureAfterChange": "  \tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration)", "diff": ["-", "-\tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration) {", "-\t\tint fieldCount = (typeDeclaration.fields == null) ? 0 : typeDeclaration.fields.length;", "-\t\tint methodCount = (typeDeclaration.methods == null) ? 0 : typeDeclaration.methods.length;", "-\t\tint typeCount = (typeDeclaration.memberTypes == null) ? 0 : typeDeclaration.memberTypes.length;", "-\t", "-\t\tif (methodCount == 1 && typeDeclaration.methods[0].isDefaultConstructor()) {", "-\t\t\tmethodCount = 0;", "-\t\t}", "-\t\tfinal int memberLength = fieldCount+methodCount+typeCount;", "-", "-\t\tboolean insertNewLine = memberLength > 0;", "-\t\t", "-\t\tif (!insertNewLine) {", "-\t\t\tif (typeDeclaration instanceof AnonymousLocalTypeDeclaration) {", "-\t\t\t\tinsertNewLine = this.preferences.insert_new_line_in_empty_anonymous_type_declaration;", "-\t\t\t} else {", "-\t\t\t\tinsertNewLine = this.preferences.insert_new_line_in_empty_type_declaration;", "-\t\t\t}", "-\t\t}", "-\t", "-\t\tformatOpeningBrace(bracePosition, insertSpaceBeforeBrace, insertNewLine);\t\t", "+\tprivate void formatTypeOpeningBrace(String bracePosition, boolean insertSpaceBeforeBrace, TypeDeclaration typeDeclaration) {", "+\t\tint fieldCount = (typeDeclaration.fields == null) ? 0 : typeDeclaration.fields.length;", "+\t\tint methodCount = (typeDeclaration.methods == null) ? 0 : typeDeclaration.methods.length;", "+\t\tint typeCount = (typeDeclaration.memberTypes == null) ? 0 : typeDeclaration.memberTypes.length;", "+\t", "+\t\tif (methodCount == 1 && typeDeclaration.methods[0].isDefaultConstructor()) {", "+\t\t\tmethodCount = 0;", "+\t\t}", "+\t\tfinal int memberLength = fieldCount+methodCount+typeCount;", "+", "+\t\tboolean insertNewLine = memberLength > 0;", "+\t\tif (!insertNewLine) {", "+\t\t\tif (typeDeclaration instanceof AnonymousLocalTypeDeclaration) {", "+\t\t\t\tinsertNewLine = this.preferences.insert_new_line_in_empty_anonymous_type_declaration;", "+\t\t\t} else {", "+\t\t\t\tinsertNewLine = this.preferences.insert_new_line_in_empty_type_declaration;", "+\t\t}", "+\t", "+\t\tformatOpeningBrace(bracePosition, insertSpaceBeforeBrace);", "+\t\t", "+\t\tif (insertNewLine) {", "+\t\t\tthis.scribe.printNewLine();", "+\t\t}"]}], "num": 57994}