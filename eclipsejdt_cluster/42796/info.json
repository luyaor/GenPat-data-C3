{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1cbfb7eb77ea9254b3827dab25f3af70", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f0b27cdc349b6b6b76fda2b3eb61b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathTests.java", "commitBeforeChange": "380351f862dc90cd086c09262c15b064abc84e95", "commitAfterChange": "8417005702ab0f2abab8acae1f167a4d3fc26189", "methodNumberBeforeChange": 89, "methodNumberAfterChange": 88, "signatureBeforeChange": " public void testInvalidExternalClassFolder() throws CoreException", "signatureAfterChange": " public void testInvalidExternalClassFolder() throws CoreException", "diff": ["-\t\tIJavaProject proj =  createJavaProject(\"P\", new String[] {}, new String[] {EXTERNAL_JAR_DIR_PATH}, \"bin\");", "+\t\tIJavaProject proj =  createJavaProject(\"P\", new String[] {}, new String[] {getExternalPath()}, \"bin\");", "-\t\t\t\"Required library cannot denote external folder: \\'\" + EXTERNAL_JAR_DIR_PATH + \"\\' for project P\",", "+\t\t\t\"Required library cannot denote external folder: \\'\" + getExternalPath() + \"\\' for project P\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a153de243d9243babde3d514437849c8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FlowContext.java", "commitBeforeChange": "237f280b16d1b493931020623a0e18d446c4fadf", "commitAfterChange": "1adff7e346cbd79e4672d3b7b0f319fb8170d9e9", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": "  public FlowInfo getInitsForFinalBlankInitializationCheck(TypeBinding declaringType, FlowInfo flowInfo)", "signatureAfterChange": "  public FlowInfo getInitsForFinalBlankInitializationCheck(TypeBinding declaringType, FlowInfo flowInfo)", "diff": ["-\t\t\tcurrent = exceptionContext.initializationParent == null ? exceptionContext.parent : exceptionContext.initializationParent;", "+\t\t\tcurrent = exceptionContext.initializationParent == null ? exceptionContext.getLocalParent() : exceptionContext.initializationParent;", "-\t\t\tcurrent = current.parent;", "+\t\t\tcurrent = current.getLocalParent();"]}], "num": 42796}