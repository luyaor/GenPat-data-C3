{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "f4c044422f29f8c9f40feaf125cd9855", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bbdcf6f3486960eefcf58e4b017dd3e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "6309a9b2aeb767c0183db42672308082688897e5", "commitAfterChange": "9d3443d9ed27d5bf1a9ba003a556b60eecb97c38", "methodNumberBeforeChange": 1177, "methodNumberAfterChange": 1177, "signatureBeforeChange": " public void test1149()", "signatureAfterChange": " public void test1149()", "diff": ["-\tthis.runConformTest(", "-\t\tnew String[] {", "+\tString bSource =", "+\t\t\"public class B {\\n\" + ", "+\t\t\"    \tvoid b() throws ClassNotFoundException {\\n\" + ", "+\t\t\"\t    new<ClassNotFoundException> A();\\n\" + ", "+\t\t\"    }\\n\" + ", "+\t\t\"}\\n\";", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\tnew String[] { /* test files */", "-\t\t\t\"public class B {\\n\" + ", "-\t\t\t\"    \tvoid b() throws ClassNotFoundException {\\n\" + ", "-\t\t\t\"\t    new<ClassNotFoundException> A();\\n\" + ", "+\t\t\tbSource", "+\t\t},", "+\t\t// javac options", "+\t\tJavacTestOptions.EclipseJustification.EclipseBug234815 /* javac test options */);", "+\trunConformTest(", "+\t\t// test directory preparation", "+\t\tfalse /* do not flush output directory */,", "+\t\tnew String[] { /* test files */", "+\t\t\t\"B.java\",", "+\t\t\tbSource", "+\t\t},", "+\t\t// compiler results", "+\t\t\"\" /* expected compiler log */,", "+\t\t// runtime results", "+\t\t\"\" /* expected output string */,", "+\t\t\"\" /* expected error string */,", "+\t\t// javac options", "+\t\tJavacTestOptions.EclipseJustification.EclipseBug234815 /* javac test options */);", "+}", "-\t\t\t\"}\\n\"", "-\tthis.runConformTest(", "-\t\tnew String[] {", "-\t\t\t\"B.java\",", "-\t\t\t\"public class B {\\n\" + ", "-\t\t\t\"    \tvoid b() throws ClassNotFoundException {\\n\" + ", "-\t\t\t\"\t    new<ClassNotFoundException> A();\\n\" + ", "-\t\t\t\"    }\\n\" + ", "-\t\t\t\"}\\n\"", "-\t\t},", "-\t\t\"\",", "-\t\tnull,", "-\t\tfalse, // do not flush output", "-\t\tnull);\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "59b0d5306319a3fcf08bca871544796a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "65bcf10af454142ab48b1720e5cae843f9f8de26", "commitAfterChange": "781c71cd98430082e3c76eb6e3db76b4e84422eb", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "diff": ["+\t\t\tExternalFoldersManager externalFoldersManager = JavaModelManager.getExternalManager();", "+\t\t\texternalFoldersManager.createExternalFoldersProject(monitor);", "-\t\t\tExternalFoldersManager externalFoldersManager = JavaModelManager.getExternalManager();", "-\t\t\t\t\tboolean needExternalFolderCreation = false;", "-\t\t\t\t\t\tif (!needExternalFolderCreation && entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "+\t\t\t\t\t\tif (entry.getEntryKind() == IClasspathEntry.CPE_LIBRARY) {", "-\t\t\t\t\t\t\t\tneedExternalFolderCreation = true;", "+\t\t\t\t\t\t\t\texternalFoldersManager.addFolder(entryPath, true);", "-\t\t\t\t\tif (needExternalFolderCreation)", "-\t\t\t\t\t\tmanager.deltaState.addExternalFolderChange(javaProject, null/*act as if all external folders were new*/);", "-", "+\t\t\texternalFoldersManager.createPendingFolders(monitor);"]}], "num": 61771}