{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9e4ac72ae1a240c61f41770f71b5e6d0", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0f6788e142cfdaee344e9ea8b5f68f3a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "6c719f0e5c9d00da68797ddc3b13bec6943a8d9c", "commitAfterChange": "3ba8416c88ea2caabb450ac956476cf3b7bed2e6", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 10, "signatureBeforeChange": " protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type)", "signatureAfterChange": " protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type)", "diff": ["+ */", "+protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type) {", "+\tif (enclosingNamePattern == null)", "+\t\treturn matchLevelForType(simpleNamePattern, qualificationPattern, type);", "+\tif (qualificationPattern == null)", "+\t\treturn matchLevelForType(simpleNamePattern, enclosingNamePattern, type);", "+", "+\t// case of an import reference while searching for ALL_OCCURENCES of a type (see bug 37166)", "+\tif (type instanceof ProblemReferenceBinding) return IMPOSSIBLE_MATCH;", "+", "+\t// pattern was created from a Java element: qualification is the package name.", "+\tchar[] fullQualificationPattern = CharOperation.concat(qualificationPattern, enclosingNamePattern, '.');", "+\tif (CharOperation.equals(this.pkg, CharOperation.concatWith(type.getPackage().compoundName, '.')))", "+\t\treturn matchLevelForType(simpleNamePattern, fullQualificationPattern, type);", "+\treturn IMPOSSIBLE_MATCH;", "+}", "- */", "-protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type) {", "-\tif (enclosingNamePattern == null) {", "-\t\treturn this.matchLevelForType(simpleNamePattern, qualificationPattern, type);", "-\t} else {", "-\t\tif (qualificationPattern == null) {", "-\t\t\treturn matchLevelForType(simpleNamePattern, enclosingNamePattern, type);", "-\t\t} else {", "-\t\t\t// pattern was created from a Java element: qualification is the package name.", "-\t\t\tchar[] fullQualificationPattern = CharOperation.concat(qualificationPattern, enclosingNamePattern, '.');", "-\t\t\tif (type instanceof ProblemReferenceBinding) { ", "-\t\t\t\t// case of an import reference while serching for ALL_OCCURENCES of a type (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=37166)", "-\t\t\t\treturn IMPOSSIBLE_MATCH;", "-\t\t\t} else if (CharOperation.equals(pkg, CharOperation.concatWith(type.getPackage().compoundName, '.'))) {", "-\t\t\t\treturn this.matchLevelForType(simpleNamePattern, fullQualificationPattern, type);", "-\t\t\t} else {", "-\t\t\t\treturn IMPOSSIBLE_MATCH;", "-\t\t\t}", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d4c8e86aa7af3ad5f33402639d5b6df6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "7e5cc03e445550d3cbc10c611218c79332074276", "commitAfterChange": "c57706d05dc3654769cca2053ff9cb20fb0a6664", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type)", "signatureAfterChange": "\r protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type)", "diff": ["+ */\r", "+protected boolean matchesType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type) {\r", "+\tif (enclosingNamePattern == null) {\r", "+\t\treturn this.matchesType(simpleNamePattern, qualificationPattern, type);\r", "+\t} else {\r", "+\t\tchar[] pattern;\r", "+\t\tif (qualificationPattern == null) {\r", "+\t\t\treturn matchesType(simpleNamePattern, enclosingNamePattern, type);\r", "+\t\t} else {\r", "+\t\t\t// pattern was created from a Java element: qualification is the package name.\r", "+\t\t\tchar[] fullQualificationPattern = CharOperation.concat(qualificationPattern, enclosingNamePattern, '.');\r", "+\t\t\treturn \r", "+\t\t\t\tthis.matchesType(simpleNamePattern, fullQualificationPattern, type)\r", "+\t\t\t\t&& CharOperation.equals(qualification, CharOperation.concatWith(type.getPackage().compoundName, '.'));\r", "+\t\t}\r", "- */\r", "-protected int matchLevelForType(char[] simpleNamePattern, char[] qualificationPattern, char[] enclosingNamePattern, TypeBinding type) {\r", "-\tif (enclosingNamePattern == null) {\r", "-\t\treturn this.matchLevelForType(simpleNamePattern, qualificationPattern, type);\r", "-\t} else {\r", "-\t\tchar[] pattern;\r", "-\t\tif (qualificationPattern == null) {\r", "-\t\t\treturn matchLevelForType(simpleNamePattern, enclosingNamePattern, type);\r", "-\t\t} else {\r", "-\t\t\t// pattern was created from a Java element: qualification is the package name.\r", "-\t\t\tchar[] fullQualificationPattern = CharOperation.concat(qualificationPattern, enclosingNamePattern, '.');\r", "-\t\t\tif ( CharOperation.equals(qualification, CharOperation.concatWith(type.getPackage().compoundName, '.'))) {\r", "-\t\t\t\treturn this.matchLevelForType(simpleNamePattern, fullQualificationPattern, type);\r", "-\t\t\t} else {\r", "-\t\t\t\treturn IMPOSSIBLE_MATCH;\r", "-\t\t\t}\r", "-\t\t}\r", "-\t}\r"]}], "num": 69847}