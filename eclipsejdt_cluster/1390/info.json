{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "999287cbb39c2897cff53e35289a10dd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1780d2ad6887749c2f6b23284263426b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "d92419d7d90bedd902391c7e83696cf6304867ae", "commitAfterChange": "5a71e292125f730be1fbb909dc68614ec3d003c5", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\tCompilationResult result = new CompilationResult(((ICompilationUnit)cu).getFileName(), i, openablesLength, this.options.maxProblemsPerUnit);", "+\t\t\t\t\t// As part of fix for https://bugs.eclipse.org/bugs/show_bug.cgi?id=254738", "+\t\t\t\t\t// Since we have the handle to the ICompilationUnit, instead of the name pass the ICompilationUnit, which is required if we were ", "+\t\t\t\t\t// to get through Parser.getMethodBodies(), which is invoked later in this method. Note that as part of this fix,", "+\t\t\t\t\t// ASTNode.HasAllMethodBodies flag - which was being set earlier - has been removed. As a design feature, only the Parser ", "+\t\t\t\t\t// is supposed to handle this particular bit.", "+\t\t\t\t\tCompilationResult result = new CompilationResult((ICompilationUnit)cu, i, openablesLength, this.options.maxProblemsPerUnit);", "-\t\t\t\t\tif (containsLocalType) \tparsedUnit.bits |= ASTNode.HasAllMethodBodies;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f6a02ddf6fd3b90a4df18ebb137786cf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/hierarchy/HierarchyResolver.java", "commitBeforeChange": "19110d19d788201e42baa0e6fca2d157b16d02af", "commitAfterChange": "b5820fc325c3954ae5a1566e5bb445f54c73597f", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "signatureAfterChange": " public void resolve(Openable[] openables, HashSet localTypes, IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t// As part of fix for https://bugs.eclipse.org/bugs/show_bug.cgi?id=254738", "-\t\t\t\t\t// Since we have the handle to the ICompilationUnit, instead of the name pass the ICompilationUnit, which is required if we were ", "-\t\t\t\t\t// to get through Parser.getMethodBodies(), which is invoked later in this method. Note that as part of this fix,", "-\t\t\t\t\t// ASTNode.HasAllMethodBodies flag - which was being set earlier - has been removed. As a design feature, only the Parser ", "-\t\t\t\t\t// is supposed to handle this particular bit.", "+\t\t\t\t\t", "+\t\t\t\t\t// We would have got all the necessary local types by now and hence there is no further need ", "+\t\t\t\t\t// to parse the method bodies. Parser.getMethodBodies, which is called latter in this function, ", "+\t\t\t\t\t// will not parse the method statements if ASTNode.HasAllMethodBodies is set. ", "+\t\t\t\t\tif (containsLocalType) \tparsedUnit.bits |= ASTNode.HasAllMethodBodies;"]}], "num": 1390}