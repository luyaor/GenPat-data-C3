{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "169f6e764bea3e37605def5c2a414565", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42fb42c55af40d8931f4abeeb7b34a4d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "cc547ec5c074d17ff882a095dbec68dcad72a87a", "commitAfterChange": "99250bacae54994417cccb9e6d497671bd34c73a", "methodNumberBeforeChange": 53, "methodNumberAfterChange": 53, "signatureBeforeChange": " public void test052()", "signatureAfterChange": " public void test052()", "diff": ["-\t\t\t\"     2  goto 8\\n\" + ", "-\t\t\t\"     5  goto 5\\n\" + ", "-\t\t\t\"     8  iload_1 [i]\\n\" + ", "-\t\t\t\"     9  iflt 5\\n\" + ", "-\t\t\t\"    12  goto 16\\n\" + ", "-\t\t\t\"    15  astore_1\\n\" + ", "-\t\t\t\"    16  return\\n\" + ", "+\t\t\t\"     2  iload_1 [i]\\n\" + ", "+\t\t\t\"     3  ifge 10\\n\" + ", "+\t\t\t\"     6  goto 6\\n\" + ", "+\t\t\t\"     9  astore_1\\n\" + ", "+\t\t\t\"    10  return\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 12] -> 15 when : java.lang.Exception\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 9] -> 9 when : java.lang.Exception\\n\" + ", "-\t\t\t\"        [pc: 5, line: 5]\\n\" + ", "-\t\t\t\"        [pc: 8, line: 4]\\n\" + ", "-\t\t\t\"        [pc: 15, line: 6]\\n\" + ", "-\t\t\t\"        [pc: 16, line: 8]\\n\" + ", "+\t\t\t\"        [pc: 6, line: 5]\\n\" + ", "+\t\t\t\"        [pc: 9, line: 6]\\n\" + ", "+\t\t\t\"        [pc: 10, line: 8]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 17] local: argv index: 0 type: java.lang.String[]\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 12] local: i index: 1 type: int\\n\"", "+\t\t\t\"        [pc: 0, pc: 11] local: argv index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 2, pc: 9] local: i index: 1 type: int\\n\"", "-\t\t\t\"     2  goto 8\\n\" + ", "-\t\t\t\"     5  goto 5\\n\" + ", "-\t\t\t\"     8  iload_1 [i]\\n\" + ", "-\t\t\t\"     9  iflt 5\\n\" + ", "-\t\t\t\"    12  goto 16\\n\" + ", "-\t\t\t\"    15  astore_1\\n\" + ", "-\t\t\t\"    16  return\\n\" + ", "+\t\t\t\"     2  iload_1 [i]\\n\" + ", "+\t\t\t\"     3  ifge 10\\n\" + ", "+\t\t\t\"     6  goto 6\\n\" + ", "+\t\t\t\"     9  astore_1\\n\" + ", "+\t\t\t\"    10  return\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 12] -> 15 when : java.lang.Exception\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 9] -> 9 when : java.lang.Exception\\n\" + ", "-\t\t\t\"        [pc: 5, line: 5]\\n\" + ", "-\t\t\t\"        [pc: 8, line: 4]\\n\" + ", "-\t\t\t\"        [pc: 15, line: 6]\\n\" + ", "-\t\t\t\"        [pc: 16, line: 8]\\n\" + ", "+\t\t\t\"        [pc: 6, line: 5]\\n\" + ", "+\t\t\t\"        [pc: 9, line: 6]\\n\" + ", "+\t\t\t\"        [pc: 10, line: 8]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 17] local: argv index: 0 type: java.lang.String[]\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 12] local: i index: 1 type: int\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 4\\n\" + ", "-\t\t\t\"        [pc: 5, append: {int}]\\n\" + ", "-\t\t\t\"        [pc: 8, same]\\n\" + ", "-\t\t\t\"        [pc: 15, full, stack: {java.lang.Exception}, locals: {java.lang.String[]}]\\n\" + ", "-\t\t\t\"        [pc: 16, same]\\n\";", "+\t\t\t\"        [pc: 0, pc: 11] local: argv index: 0 type: java.lang.String[]\\n\" + ", "+\t\t\t\"        [pc: 2, pc: 9] local: i index: 1 type: int\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "+\t\t\t\"        [pc: 6, append: {int}]\\n\" + ", "+\t\t\t\"        [pc: 9, full, stack: {java.lang.Exception}, locals: {java.lang.String[]}]\\n\" + ", "+\t\t\t\"        [pc: 10, same]\\n\";"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "98a63f3a06c133745af1720b2b60e3b8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "cc547ec5c074d17ff882a095dbec68dcad72a87a", "commitAfterChange": "99250bacae54994417cccb9e6d497671bd34c73a", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 49, "signatureBeforeChange": " public void test048()", "signatureAfterChange": " public void test048()", "diff": ["-\t\t\t\"     2  goto 7\\n\" + ", "-\t\t\t\"     5  fconst_0\\n\" + ", "-\t\t\t\"     6  freturn\\n\" + ", "-\t\t\t\"     7  aload_0 [this]\\n\" + ", "-\t\t\t\"     8  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    11  ifne 5\\n\" + ", "-\t\t\t\"    14  goto 18\\n\" + ", "-\t\t\t\"    17  astore_1\\n\" + ", "-\t\t\t\"    18  fconst_1\\n\" + ", "-\t\t\t\"    19  freturn\\n\" + ", "+\t\t\t\"     2  aload_0 [this]\\n\" + ", "+\t\t\t\"     3  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\"     6  ifeq 12\\n\" + ", "+\t\t\t\"     9  fconst_0\\n\" + ", "+\t\t\t\"    10  freturn\\n\" + ", "+\t\t\t\"    11  astore_1\\n\" + ", "+\t\t\t\"    12  fconst_1\\n\" + ", "+\t\t\t\"    13  freturn\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] -> 17 when : java.lang.Exception\\n\" + ", "-\t\t\t\"        [pc: 7, pc: 14] -> 17 when : java.lang.Exception\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 9] -> 11 when : java.lang.Exception\\n\" + ", "-\t\t\t\"        [pc: 5, line: 32]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 31]\\n\" + ", "-\t\t\t\"        [pc: 17, line: 34]\\n\" + ", "-\t\t\t\"        [pc: 18, line: 36]\\n\" + ", "+\t\t\t\"        [pc: 9, line: 32]\\n\" + ", "+\t\t\t\"        [pc: 11, line: 34]\\n\" + ", "+\t\t\t\"        [pc: 12, line: 36]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 20] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 14] local: i index: 1 type: int\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 14] local: this index: 0 type: X\\n\" + ", "+\t\t\t\"        [pc: 2, pc: 11] local: i index: 1 type: int\\n\" + ", "-\t\t\t\"     2  goto 7\\n\" + ", "-\t\t\t\"     5  fconst_0\\n\" + ", "-\t\t\t\"     6  freturn\\n\" + ", "-\t\t\t\"     7  aload_0 [this]\\n\" + ", "-\t\t\t\"     8  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    11  ifne 5\\n\" + ", "-\t\t\t\"    14  goto 18\\n\" + ", "-\t\t\t\"    17  astore_1\\n\" + ", "-\t\t\t\"    18  fconst_1\\n\" + ", "-\t\t\t\"    19  freturn\\n\" + ", "+\t\t\t\"     2  aload_0 [this]\\n\" + ", "+\t\t\t\"     3  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\"     6  ifeq 12\\n\" + ", "+\t\t\t\"     9  fconst_0\\n\" + ", "+\t\t\t\"    10  freturn\\n\" + ", "+\t\t\t\"    11  astore_1\\n\" + ", "+\t\t\t\"    12  fconst_1\\n\" + ", "+\t\t\t\"    13  freturn\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 5] -> 17 when : java.lang.Exception\\n\" + ", "-\t\t\t\"        [pc: 7, pc: 14] -> 17 when : java.lang.Exception\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 9] -> 11 when : java.lang.Exception\\n\" + ", "-\t\t\t\"        [pc: 5, line: 32]\\n\" + ", "-\t\t\t\"        [pc: 7, line: 31]\\n\" + ", "-\t\t\t\"        [pc: 17, line: 34]\\n\" + ", "-\t\t\t\"        [pc: 18, line: 36]\\n\" + ", "+\t\t\t\"        [pc: 9, line: 32]\\n\" + ", "+\t\t\t\"        [pc: 11, line: 34]\\n\" + ", "+\t\t\t\"        [pc: 12, line: 36]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 20] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 14] local: i index: 1 type: int\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 4\\n\" + ", "-\t\t\t\"        [pc: 5, append: {int}]\\n\" + ", "-\t\t\t\"        [pc: 7, same]\\n\" + ", "-\t\t\t\"        [pc: 17, full, stack: {java.lang.Exception}, locals: {X}]\\n\" + ", "-\t\t\t\"        [pc: 18, same]\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 14] local: this index: 0 type: X\\n\" + ", "+\t\t\t\"        [pc: 2, pc: 11] local: i index: 1 type: int\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "+\t\t\t\"        [pc: 9, append: {int}]\\n\" + ", "+\t\t\t\"        [pc: 11, full, stack: {java.lang.Exception}, locals: {X}]\\n\" + ", "+\t\t\t\"        [pc: 12, same]\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d18a20f6f46fab9b3a8dd6167533a93d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/TryStatementTest.java", "commitBeforeChange": "cc547ec5c074d17ff882a095dbec68dcad72a87a", "commitAfterChange": "99250bacae54994417cccb9e6d497671bd34c73a", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " public void test049()", "signatureAfterChange": " public void test049()", "diff": ["-\t\t\t\"     2  goto 13\\n\" + ", "-\t\t\t\"     5  new java.lang.NullPointerException [19]\\n\" + ", "-\t\t\t\"     8  dup\\n\" + ", "-\t\t\t\"     9  invokespecial java.lang.NullPointerException() [21]\\n\" + ", "-\t\t\t\"    12  athrow\\n\" + ", "-\t\t\t\"    13  aload_0 [this]\\n\" + ", "-\t\t\t\"    14  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    17  ifne 5\\n\" + ", "-\t\t\t\"    20  goto 24\\n\" + ", "-\t\t\t\"    23  astore_1\\n\" + ", "-\t\t\t\"    24  return\\n\" + ", "+\t\t\t\"     2  aload_0 [this]\\n\" + ", "+\t\t\t\"     3  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\"     6  ifeq 18\\n\" + ", "+\t\t\t\"     9  new java.lang.NullPointerException [19]\\n\" + ", "+\t\t\t\"    12  dup\\n\" + ", "+\t\t\t\"    13  invokespecial java.lang.NullPointerException() [21]\\n\" + ", "+\t\t\t\"    16  athrow\\n\" + ", "+\t\t\t\"    17  astore_1\\n\" + ", "+\t\t\t\"    18  return\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 20] -> 23 when : java.lang.Exception\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 17] -> 17 when : java.lang.Exception\\n\" + ", "-\t\t\t\"        [pc: 5, line: 30]\\n\" + ", "-\t\t\t\"        [pc: 13, line: 29]\\n\" + ", "-\t\t\t\"        [pc: 23, line: 32]\\n\" + ", "-\t\t\t\"        [pc: 24, line: 34]\\n\" + ", "+\t\t\t\"        [pc: 9, line: 30]\\n\" + ", "+\t\t\t\"        [pc: 17, line: 32]\\n\" + ", "+\t\t\t\"        [pc: 18, line: 34]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 25] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 20] local: i index: 1 type: int\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 19] local: this index: 0 type: X\\n\" + ", "+\t\t\t\"        [pc: 2, pc: 17] local: i index: 1 type: int\\n\" + ", "-\t\t\t\"     2  goto 13\\n\" + ", "-\t\t\t\"     5  new java.lang.NullPointerException [19]\\n\" + ", "-\t\t\t\"     8  dup\\n\" + ", "-\t\t\t\"     9  invokespecial java.lang.NullPointerException() [21]\\n\" + ", "-\t\t\t\"    12  athrow\\n\" + ", "-\t\t\t\"    13  aload_0 [this]\\n\" + ", "-\t\t\t\"    14  invokevirtual X.bool() : boolean [17]\\n\" + ", "-\t\t\t\"    17  ifne 5\\n\" + ", "-\t\t\t\"    20  goto 24\\n\" + ", "-\t\t\t\"    23  astore_1\\n\" + ", "-\t\t\t\"    24  return\\n\" + ", "+\t\t\t\"     2  aload_0 [this]\\n\" + ", "+\t\t\t\"     3  invokevirtual X.bool() : boolean [17]\\n\" + ", "+\t\t\t\"     6  ifeq 18\\n\" + ", "+\t\t\t\"     9  new java.lang.NullPointerException [19]\\n\" + ", "+\t\t\t\"    12  dup\\n\" + ", "+\t\t\t\"    13  invokespecial java.lang.NullPointerException() [21]\\n\" + ", "+\t\t\t\"    16  athrow\\n\" + ", "+\t\t\t\"    17  astore_1\\n\" + ", "+\t\t\t\"    18  return\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 20] -> 23 when : java.lang.Exception\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 17] -> 17 when : java.lang.Exception\\n\" + ", "-\t\t\t\"        [pc: 5, line: 30]\\n\" + ", "-\t\t\t\"        [pc: 13, line: 29]\\n\" + ", "-\t\t\t\"        [pc: 23, line: 32]\\n\" + ", "-\t\t\t\"        [pc: 24, line: 34]\\n\" + ", "+\t\t\t\"        [pc: 9, line: 30]\\n\" + ", "+\t\t\t\"        [pc: 17, line: 32]\\n\" + ", "+\t\t\t\"        [pc: 18, line: 34]\\n\" + ", "-\t\t\t\"        [pc: 0, pc: 25] local: this index: 0 type: X\\n\" + ", "-\t\t\t\"        [pc: 2, pc: 20] local: i index: 1 type: int\\n\" + ", "-\t\t\t\"      Stack map table: number of frames 4\\n\" + ", "-\t\t\t\"        [pc: 5, append: {int}]\\n\" + ", "-\t\t\t\"        [pc: 13, same]\\n\" + ", "-\t\t\t\"        [pc: 23, full, stack: {java.lang.Exception}, locals: {X}]\\n\" + ", "-\t\t\t\"        [pc: 24, same]\\n\" + ", "+\t\t\t\"        [pc: 0, pc: 19] local: this index: 0 type: X\\n\" + ", "+\t\t\t\"        [pc: 2, pc: 17] local: i index: 1 type: int\\n\" + ", "+\t\t\t\"      Stack map table: number of frames 3\\n\" + ", "+\t\t\t\"        [pc: 9, append: {int}]\\n\" + ", "+\t\t\t\"        [pc: 17, full, stack: {java.lang.Exception}, locals: {X}]\\n\" + ", "+\t\t\t\"        [pc: 18, same]\\n\" + "]}], "num": 37086}