{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3aaaa4b16cebf13771c3148d69bb163c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52d08029e00141f0154c32933856a6eb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverter15Test.java", "commitBeforeChange": "4b3b23614cfca32dd53fa7e699914bb6d6883a79", "commitAfterChange": "497b69b47b38f18098b3c3fae687e15309c6bbc5", "methodNumberBeforeChange": 234, "methodNumberAfterChange": 234, "signatureBeforeChange": " \tpublic void test0220() throws JavaModelException", "signatureAfterChange": " \tpublic void test0220() throws JavaModelException", "diff": ["-\t\tassertEquals(\"Wrong size\", 0, body.statements().size());", "-\t\tassertTrue(\"Not recovered\", isRecovered(body));", "+\t\tList statements = body.statements();", "+\t\tassertEquals(\"Wrong size\", 1, statements.size());", "+\t\tassertTrue(\"Recovered\", !isRecovered(body));", "+\t\t", "+\t\tStatement statement = (Statement)statements.get(0);", "+\t\tassertEquals(\"Not an enhanced for statement\", ASTNode.ENHANCED_FOR_STATEMENT, statement.getNodeType());", "+\t\tEnhancedForStatement enhancedForStatement = (EnhancedForStatement) statement;", "+\t\tStatement forBody = enhancedForStatement.getBody();", "+\t\tassertNotNull(\"No body\", forBody);", "+\t\tassertEquals(\"Not a block\", ASTNode.BLOCK, forBody.getNodeType());", "+\t\t", "+\t\tstatements = ((Block)forBody).statements();", "+\t\tassertEquals(\"Wrong size\", 1, statements.size());", "+\t\tstatement = (Statement)statements.get(0);", "+\t\tassertEquals(\"Not an try statement\", ASTNode.TRY_STATEMENT, statement.getNodeType());", "+\t\tTryStatement tryStatement = (TryStatement) statement;", "+\t\tBlock finallyBlock = tryStatement.getFinally();", "+\t\tassertNotNull(\"No finally block\", finallyBlock);", "+\t\tassertTrue(\"Not recovered\", isRecovered(finallyBlock));", "+\t\t", "+\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ee0830608bc7cab74539ed1bc69819", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterAST3Test.java", "commitBeforeChange": "2a2935d5ba546500d563cc08921b53e5b286cdf8", "commitAfterChange": "2d9dc5098273e0e95832d81d735d2d77249738ef", "methodNumberBeforeChange": 357, "methodNumberAfterChange": 357, "signatureBeforeChange": " \tpublic void test0356() throws JavaModelException", "signatureAfterChange": " \tpublic void test0356() throws JavaModelException", "diff": ["-\t\tassertEquals(\"errors found\", 2, compilationUnit.getMessages().length); //$NON-NLS-1$", "+\t\tassertEquals(\"errors found\", 1, compilationUnit.getMessages().length); //$NON-NLS-1$", "-\t\tassertNull(binding);", "+\t\tassertNotNull(\"Binding should NOT be null for type: \"+type, binding);", "+", "+\t\t// Verify that class instance creation has a null binding", "+\t\tList fragments = variableDeclarationStatement.fragments();", "+\t\tassertEquals(\"Expect only one fragment for VariableDeclarationStatement: \"+variableDeclarationStatement, 1, fragments.size());", "+\t\tnode = (ASTNode) fragments.get(0);", "+\t\tassertEquals(\"Not a variable declaration fragment\", ASTNode.VARIABLE_DECLARATION_FRAGMENT, node.getNodeType()); //$NON-NLS-1$", "+\t\tVariableDeclarationFragment fragment = (VariableDeclarationFragment) node;", "+\t\tExpression initializer = fragment.getInitializer();", "+\t\tassertEquals(\"Expect a class instance creation for initializer: \"+initializer, ASTNode.CLASS_INSTANCE_CREATION, initializer.getNodeType()); //$NON-NLS-1$", "+\t\tClassInstanceCreation instanceCreation = (ClassInstanceCreation) initializer;", "+\t\ttype = instanceCreation.getType();", "+\t\tbinding = type.resolveBinding();", "+\t\tassertNull(\"Binding should BE null for type: \"+type, binding);"]}], "num": 15359}