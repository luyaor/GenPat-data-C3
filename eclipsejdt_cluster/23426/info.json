{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8954ac20a169ab3f73126b0af59e5f2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0d39225ede387537735a64fc6a397701", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "bac18f086dd9a87e1d5b6dea3b31ca1c92463a84", "commitAfterChange": "1b53a525120894192853120c7678edb264d25490", "methodNumberBeforeChange": 31, "methodNumberAfterChange": 30, "signatureBeforeChange": "  \tpublic void addSyntheticArgument(LocalVariableBinding actualOuterLocalVariable)", "signatureAfterChange": " \t \tpublic void addSyntheticArgument(LocalVariableBinding actualOuterLocalVariable)", "diff": ["-", "-\t\tsyntheticLocal.resolvedPosition = this.outerLocalVariablesSlotSize + (this.binding.isStatic() ? 0 : 1);", "+\t\tsyntheticLocal.resolvedPosition = this.outerLocalVariablesSlotSize; // may need adjusting later if we need to generate an instance method for the lambda."]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e14f5730a432a07592883210030cd774", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/BlockScope.java", "commitBeforeChange": "4b1cb82b00b0f3c43755c37280deb732ae600c1a", "commitAfterChange": "1caf2b41c370e66c328190589dd64f01b35d7384", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tpublic void emulateOuterAccess(LocalVariableBinding outerLocalVariable)", "signatureAfterChange": " \tpublic void emulateOuterAccess(LocalVariableBinding outerLocalVariable)", "diff": ["-\t\tMethodScope currentMethodScope;", "-\t\tif ((currentMethodScope = this.methodScope())", "-\t\t\t!= outerLocalVariable.declaringScope.methodScope()) {", "+\t\tBlockScope outerVariableScope = outerLocalVariable.declaringScope;", "+\t\tif (outerVariableScope == null)", "+\t\t\treturn; // no need to further emulate as already inserted (val$this$0)", "+\t\tMethodScope currentMethodScope = this.methodScope();", "+\t\tif (outerVariableScope.methodScope() != currentMethodScope) {"]}], "num": 23426}