{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1fc124f5dfb215136e0fbe5d81c9771b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47ab8d0f09f4f4594ce17f59f8ea602a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/TestingEnvironment.java", "commitBeforeChange": "abd333621a0cbd2492673b0e887a888245d2d663", "commitAfterChange": "0adf7a4e0894d18d3979e493aafe00dfa5c14f8d", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 28, "signatureBeforeChange": " \tpublic IPath[] getClasspath(IPath projectPath)", "signatureAfterChange": " \tpublic IClasspathEntry[] getClasspath(IPath projectPath)", "diff": ["-\tpublic IPath[] getClasspath(IPath projectPath) {", "+\tpublic IClasspathEntry[] getClasspath(IPath projectPath) {", "-\t\t\tIJavaProject javaProject =", "-\t\t\t\t(IJavaProject) getProject(projectPath).getNature(JavaCore.NATURE_ID);", "-\t\t\tIClasspathEntry[] entries =", "-\t\t\t\t((JavaProject) javaProject).getExpandedClasspath(true);", "-\t\t\tIPath[] packageFragmentRootsPath = new IPath[entries.length];", "-\t\t\tfor (int i = 0; i < entries.length; ++i) {", "-\t\t\t\tpackageFragmentRootsPath[i] = entries[i].getPath();", "-\t\t\t}", "-\t\t\treturn packageFragmentRootsPath;", "+\t\t\tJavaProject javaProject = (JavaProject) JavaCore.create(getProject(projectPath));", "+\t\t\treturn javaProject.getExpandedClasspath(true);", "+//\t\t\tIPath[] packageFragmentRootsPath = new IPath[entries.length];", "+//\t\t\tfor (int i = 0; i < entries.length; ++i)", "+//\t\t\t\tpackageFragmentRootsPath[i] = entries[i].getPath();", "+//\t\t\treturn packageFragmentRootsPath;", "-\t\t\treturn null; // not reachable", "-\t\t} catch (CoreException e) {", "-\t\t\te.printStackTrace();", "-\t\t\tcheckAssertion(\"CoreException\", false); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b6bb56ead33a0f79bf0ccff3be2bdfd4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SearchableEnvironment.java", "commitBeforeChange": "1f874aab25a1e21bfc1a29ee829879f30b3a1fd9", "commitAfterChange": "1897b57abd9c55b801709ab52b14a19d8676374f", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic NameEnvironmentAnswer findType(char[] name, char[][] packages)", "signatureAfterChange": "\r \tpublic NameEnvironmentAnswer findType(char[] name, char[][] packageName)", "diff": ["-\tpublic NameEnvironmentAnswer findType(char[] name, char[][] packages) {\r", "-\t\tif (name == null)\r", "-\t\t\treturn null;\r", "+\tpublic NameEnvironmentAnswer findType(char[] name, char[][] packageName) {\r", "+\t\tif (name == null) return null;\r", "-\t\tif (packages == null || packages.length == 0)\r", "-\t\t\treturn find(new String(name), null);\r", "-\r", "-\t\tint length = packages.length;\r", "-\t\tStringBuffer buffer = new StringBuffer(length * 6);\r", "-\t\tfor (int i = 0; i < length; i++) {\r", "-\t\t\tbuffer.append(packages[i]);\r", "-\t\t\tif (i + 1 != length)\r", "-\t\t\t\tbuffer.append('.');\r", "-\t\t}\r", "-\t\tString className = new String(name);\r", "-\t\treturn find(className, buffer.toString());\r", "+\t\treturn find(\r", "+\t\t\tnew String(name),\r", "+\t\t\tpackageName == null || packageName.length == 0 ? null : CharOperation.toString(packageName));\r"]}], "num": 27632}