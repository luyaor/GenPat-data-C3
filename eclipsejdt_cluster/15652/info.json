{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5f3136d32570ce674eaf0c1cfaaa55e4", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0978e539411810abdbfaf4d377e5becf", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/util/AbstractCompilerTest.java", "commitBeforeChange": "69cf42e8bc4eba88935c2a54eaa23de2e6259a9b", "commitAfterChange": "46618cf13188500eaee539b8e46fcf26be42ca02", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static Test buildMinimalComplianceTestSuite(Class evaluationTestClass, int minimalCompliance)", "signatureAfterChange": " \tpublic static Test buildMinimalComplianceTestSuite(Class evaluationTestClass, int minimalCompliance)", "diff": ["-\t\t\t\tSystem.err.println(\"Cannot run \"+evaluationTestClass.getName()+\" at compliance \"+COMPLIANCE_1_3+\"!\");", "+\t\t\t\tSystem.err.println(\"Cannot run \"+evaluationTestClass.getName()+\" at compliance \"+CompilerOptions.versionFromJdkLevel(ClassFileConstants.JDK1_3)+\"!\");", "-\t\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_3));", "+\t\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, ClassFileConstants.JDK1_3));", "-\t\t\t\tSystem.err.println(\"Cannot run \"+evaluationTestClass.getName()+\" at compliance \"+COMPLIANCE_1_4+\"!\");", "+\t\t\t\tSystem.err.println(\"Cannot run \"+evaluationTestClass.getName()+\" at compliance \"+CompilerOptions.versionFromJdkLevel(ClassFileConstants.JDK1_4)+\"!\");", "-\t\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_4));", "+\t\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, ClassFileConstants.JDK1_4));", "-\t\t\t\tSystem.err.println(\"Cannot run \"+evaluationTestClass.getName()+\" at compliance \"+COMPLIANCE_1_5+\"!\");", "+\t\t\t\tSystem.err.println(\"Cannot run \"+evaluationTestClass.getName()+\" at compliance \"+CompilerOptions.versionFromJdkLevel(ClassFileConstants.JDK1_5)+\"!\");", "-\t\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_5));", "+\t\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, ClassFileConstants.JDK1_5));", "-\t\t\t\tSystem.err.println(\"Cannot run \"+evaluationTestClass.getName()+\" at compliance \"+COMPLIANCE_1_6+\"!\");", "+\t\t\t\tSystem.err.println(\"Cannot run \"+evaluationTestClass.getName()+\" at compliance \"+CompilerOptions.versionFromJdkLevel(ClassFileConstants.JDK1_6)+\"!\");", "-\t\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_6));", "+\t\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, ClassFileConstants.JDK1_6));", "-\t\t\t\tSystem.err.println(\"Cannot run \"+evaluationTestClass.getName()+\" at compliance \"+COMPLIANCE_1_7+\"!\");", "+\t\t\t\tSystem.err.println(\"Cannot run \"+evaluationTestClass.getName()+\" at compliance \"+CompilerOptions.versionFromJdkLevel(ClassFileConstants.JDK1_7)+\"!\");", "-\t\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, AbstractCompilerTest.COMPLIANCE_1_7));", "+\t\t\t\tsuite.addTest(buildUniqueComplianceTestSuite(evaluationTestClass, ClassFileConstants.JDK1_7));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "66ca67b8cf85c4555c86102748132b2f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterRegressionTests.java", "commitBeforeChange": "a59c911bb67a4a0588e810060c73cd3ec2f53032", "commitAfterChange": "f9b051d5e41bd27efd803711c20da8dcd750758f", "methodNumberBeforeChange": 320, "methodNumberAfterChange": 320, "signatureBeforeChange": " \tpublic void test301()", "signatureAfterChange": "  \tpublic void test301()", "diff": ["-\t */", "-\t\toptions.put(JavaCore.FORMATTER_NEWLINE_CONTROL, JavaCore.INSERT);", "-\t\toptions.put(JavaCore.FORMATTER_NEWLINE_OPENING_BRACE, JavaCore.INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_NEW_LINE_IN_CONTROL_STATEMENTS, JavaCore.INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_ANONYMOUS_TYPE_DECLARATION_BRACE_POSITION, DefaultCodeFormatterConstants.NEXT_LINE);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_TYPE_DECLARATION_BRACE_POSITION, DefaultCodeFormatterConstants.NEXT_LINE);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_METHOD_DECLARATION_BRACE_POSITION, DefaultCodeFormatterConstants.NEXT_LINE);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_BLOCK_BRACE_POSITION, DefaultCodeFormatterConstants.NEXT_LINE);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_SWITCH_BRACE_POSITION, DefaultCodeFormatterConstants.NEXT_LINE);", "-\t\toptions.put(JavaCore.FORMATTER_SPACE_CASTEXPRESSION, JavaCore.DO_NOT_INSERT);", "+\t\toptions.put(DefaultCodeFormatterConstants.FORMATTER_INSERT_SPACE_AFTER_CLOSING_PAREN_IN_CAST, JavaCore.DO_NOT_INSERT);"]}], "num": 15652}