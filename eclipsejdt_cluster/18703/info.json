{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "0ac758abe6269b9f732391c5fe9de679", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "25e2c79f331fbbfcc26dfddd801948d5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/Util.java", "commitBeforeChange": "cf8dccca7e26bf94e36e8f031d2a4ef316542d45", "commitAfterChange": "ce73e795e17fb13da77192ae5025c50ccc7665fe", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 95, "signatureBeforeChange": " \tpublic static int scanBaseTypeSignature(char[] string, int start)", "signatureAfterChange": " \tpublic static int scanTypeSignature(char[] string, int start)", "diff": ["+\t */", "+\tpublic static int scanTypeSignature(char[] string, int start) {", "+\t\t// this method is used in jdt.debug", "+\t\treturn org.eclipse.jdt.internal.compiler.util.Util.scanTypeSignature(string, start);", "+\t}", "-\t */", "-\tpublic static int scanBaseTypeSignature(char[] string, int start) {", "-\t\t// need a minimum 1 char", "-\t\tif (start >= string.length) {", "-\t\t\tthrow new IllegalArgumentException();", "-\t\t}", "-\t\tchar c = string[start];", "-\t\tif (\"BCDFIJSVZ\".indexOf(c) >= 0) { //$NON-NLS-1$", "-\t\t\treturn start;", "-\t\t} else {", "-\t\t\tthrow new IllegalArgumentException();", "-\t\t}", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "436c2c23cc7c87b7ffd25f2b266e0e0c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyElementsOperation.java", "commitBeforeChange": "1e3b5e92aa51321dda2b6b727f1d9a3ab953e626", "commitAfterChange": "dfbfbdb005b6918ef7f4e0e8457536fa445ed30f", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " protected boolean isRenamingMainType(IJavaElement element, IJavaElement dest) throws JavaModelException", "signatureAfterChange": " protected boolean isRenamingMainType(IJavaElement element, IJavaElement dest) throws JavaModelException", "diff": ["-\t\ttypeName = typeName.substring(0, typeName.length() - 5); //TODO (jerome) should not hardcode extension length", "+\t\ttypeName = org.eclipse.jdt.internal.core.util.Util.getNameWithoutJavaLikeExtension(typeName);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a2ec65fe3ee6ae443484f4b11471eb51", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceMapper.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic char[] findSource(IType type, String simpleSourceFileName)", "signatureAfterChange": " \tpublic char[] findSource(IType type, String simpleSourceFileName)", "diff": ["-\t\tString name = simpleSourceFileName;", "-\t\tIPackageFragment pkgFrag = type.getPackageFragment();", "-\t\tif (!pkgFrag.isDefaultPackage()) {", "-\t\t\tString pkg = pkgFrag.getElementName().replace('.', '/');", "-\t\t\tname = pkg + '/' + name;", "-\t\t}", "+\t\tPackageFragment pkgFrag = (PackageFragment) type.getPackageFragment();", "+\t\tString name = org.eclipse.jdt.internal.core.util.Util.concatWith(pkgFrag.names, simpleSourceFileName, '/');"]}], "num": 18703}