{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "153da665c3ca2d82a924a0c8bf41737c", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4e0ef20779aea6bd8134f1e78b047385", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 515, "methodNumberAfterChange": 538, "signatureBeforeChange": " public void testBug201064e() throws CoreException", "signatureAfterChange": " public void testBug201064e_CamelCase() throws CoreException", "diff": ["-public void testBug201064e() throws CoreException {", "-\tsearchAllTypeNames(\"CaC\", SearchPattern.R_CAMEL_CASE_MATCH, collector);", "+}", "+public void testBug201064e_CamelCase() throws CoreException {", "+\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "+\tsearchAllTypeNames(\"CaC\", SearchPattern.R_CAMELCASE_MATCH, collector);", "+\tassertSearchResults(", "+\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "+\t\tcollector", "+\t);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5b89ba0ae8c8ad0499a04c361ea43943", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "a746953c3c39228e621101bf14cd960b61f268e5", "commitAfterChange": "8d9e4d82b7907a3f11b58a9fee1e77dc3999b852", "methodNumberBeforeChange": 518, "methodNumberAfterChange": 541, "signatureBeforeChange": " public void testBug201064h() throws CoreException", "signatureAfterChange": " public void testBug201064h_CamelCase() throws CoreException", "diff": ["+}", "+public void testBug201064h_CamelCase() throws CoreException {", "+\tTypeNameMatchCollector collector = new TypeNameMatchCollector();", "+\tsearchAllTypeNames(\"CaCa\", SearchPattern.R_CAMELCASE_MATCH, collector);", "+\tassertSearchResults(", "+\t\t\"CamelCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CamelCaseEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CamelCasexxEntry (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" +", "+\t\t\"CatCase (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\\n\" + ", "+\t\t\"CatCasexx (not open) [in CamelCase.java [in b201064 [in src [in JavaSearchBugs]]]]\",", "+\t\tcollector", "+\t);", "+}", "-public void testBug201064h() throws CoreException {", "-\tsearchAllTypeNames(\"CaCa\", SearchPattern.R_CAMEL_CASE_MATCH, collector);", "-\tassertSearchResults(\"\", collector);"]}], "num": 13898}