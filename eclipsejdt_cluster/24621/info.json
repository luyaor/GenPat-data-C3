{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ada244065b14eadeef1b25b07bde7e8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8944a33a5d94782bac9ce291450b0014", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/BuilderTests.java", "commitBeforeChange": "bbf4c65896774d7094a1b0af184fa5e65fff430e", "commitAfterChange": "88a272a79e1a01de59a7879ee7d861a289fe8315", "methodNumberBeforeChange": 30, "methodNumberAfterChange": 32, "signatureBeforeChange": "  \tprotected String problemsToString(Problem[] problems)", "signatureAfterChange": "  \tprotected String arrayToString(Object[] array)", "diff": ["-\tprotected String problemsToString(Problem[] problems) {", "+\tprotected String arrayToString(Object[] array) {", "-\t\tfor (int j = 0; j < problems.length; j++) {", "-\t\t\tbuffer.append(problems[j].toString());", "-\t\t\tbuffer.append('\\n');", "+\t\tint length = array == null ? 0 : array.length;", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tif (array[i] != null) {", "+\t\t\t\tif (i > 0) buffer.append('\\n');", "+\t\t\t\tbuffer.append(array[i].toString());", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d029fd9863421e1e63c3a17313d21af3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchBugsTests.java", "commitBeforeChange": "c93b7fc02953335388042ab5bd4ec34f70464821", "commitAfterChange": "c9213ae595dd32af0d2b3bd7c31b733e8b1d0dd1", "methodNumberBeforeChange": 387, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic String toString()", "signatureAfterChange": " \tpublic String toString()", "diff": ["+\t}", "+\tpublic String toString() {", "+\t\tString[] strings = new String[index+1];", "+\t\tSystem.arraycopy(results, 0, strings, 0, index+1);", "+\t\tArrays.sort(strings);", "+\t\tStringBuffer buffer = new StringBuffer();", "+\t\tfor (int i=0; i<=index; i++) {", "+\t\t\tif (i>0) buffer.append('\\n');", "+\t\t\tbuffer.append(strings[i]);", "+\t\t}", "+\t\treturn buffer.toString();", "+\t}", "-\t}", "-\tpublic String toString() {", "-\t\treturn this.results.toString();", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ee982ca9a781c9b9fd0366d2a50f6295", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/InsideSubRoutineFlowContext.java", "commitBeforeChange": "c30613b3c1eac52834666cb07a38e3f9077e1829", "commitAfterChange": "cbaf155d59bae1aee7ec473c177014431f794c16", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic String individualToString()", "signatureAfterChange": "  public String individualToString()", "diff": ["-\tpublic String individualToString() {", "-\t\t", "-\t\tStringBuffer buffer = new StringBuffer(\"Inside SubRoutine flow context\"); //$NON-NLS-1$", "-\t\tbuffer.append(\"[initsOnReturn -\").append(initsOnReturn.toString()).append(']'); //$NON-NLS-1$", "-\t\treturn buffer.toString();", "-\t}", "+public String individualToString() {", "+\tStringBuffer buffer = new StringBuffer(\"Inside SubRoutine flow context\"); //$NON-NLS-1$", "+\tbuffer.append(\"[initsOnReturn -\").append(this.initsOnReturn.toString()).append(']'); //$NON-NLS-1$", "+\treturn buffer.toString();", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f067384687bd77d8d18da2cb9089c1a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/util/SimpleNameVector.java", "commitBeforeChange": "119fb61720952839453ade6e48fab76b7b943cab", "commitAfterChange": "f8065ae134834f9481154dc34f90c12640c5c175", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r public String toString()", "signatureAfterChange": "\r \t\r \tpublic String toString()", "diff": ["-}\r", "-public String toString() {\r", "-\tStringBuffer buffer = new StringBuffer();\r", "-\tfor (int i = 0; i < size; i++) {\r", "-\t\tbuffer.append(elements[i]).append(\"\\n\"); //$NON-NLS-1$\r", "-\treturn buffer.toString();\r", "-}\r", "+\t\r", "+\tpublic String toString() {\r", "+\t\tStringBuffer buffer = new StringBuffer();\r", "+\t\tfor (int i = 0; i < this.size; i++) {\r", "+\t\t\tbuffer.append(this.elements[i]).append(\"\\n\"); //$NON-NLS-1$\r", "+\t\t}\r", "+\t\treturn buffer.toString();\r", "+\t}\r"]}], "num": 24621}