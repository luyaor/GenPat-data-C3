{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "331df8b014a864831688f63573ff4f6e", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a72ff93d7dd96fbb60568d6f26ab88d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/CastExpression.java", "commitBeforeChange": "5dcad0acfcfbe8755abd38f2836e8e0329153a35", "commitAfterChange": "5839e04f8f69c5d3e5ba5ee43573c89e52d5ff9b", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 23, "signatureBeforeChange": " \tprivate boolean usedForGenericMethodReturnTypeInference()", "signatureAfterChange": " \tprivate boolean isIndirectlyUsed()", "diff": ["-\tprivate boolean usedForGenericMethodReturnTypeInference() {", "+\tprivate boolean isIndirectlyUsed() {", "+\t\tif (this.expectedType != null && this.resolvedType.isBaseType() && !this.resolvedType.isCompatibleWith(this.expectedType)) {", "+\t\t\t// boxing: Short s = (short) _byte", "+\t\t\treturn true;", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "445e448213b5b43855d4ea08c1d2b36b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/MatchSet.java", "commitBeforeChange": "da9e30a8d441a1da42a289d2606f77eaa8d811d1", "commitAfterChange": "ba5344094af5a10113083e490b48587602f0a697", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "signatureAfterChange": " public void reportMatching(TypeDeclaration type, IJavaElement parent) throws CoreException", "diff": ["+\t", "+\t// filter out element not in hierarchy scope", "+\tif (this.locator.hierarchyResolver != null ", "+\t\t\t&& type.binding != null", "+\t\t\t&& !this.locator.hierarchyResolver.subOrSuperOfFocus(type.binding)) {", "+\t\treturn;", "+\t}", "+\t", "+\t// create type handle"]}], "num": 51611}