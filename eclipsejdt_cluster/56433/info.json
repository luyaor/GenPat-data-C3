{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "d54f1bbdead5d343b55916da24448d25", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1e7cd6017c294640d70e1793f22ebd8c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/SourceElementParser.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 13, "signatureBeforeChange": " protected void consumeMethodHeaderName()", "signatureAfterChange": " protected void consumeMethodHeaderName()", "diff": ["-\tmd.selector = identifierStack[identifierPtr];", "-\tlong selectorSourcePositions = identifierPositionStack[identifierPtr--];", "-\tidentifierLengthPtr--;", "+\tmd.selector = this.identifierStack[identifierPtr];", "+\tlong selectorSourcePositions = this.identifierPositionStack[this.identifierPtr--];", "+\tthis.identifierLengthPtr--;", "-\tmd.returnType = getTypeReference(intStack[intPtr--]);", "+\tmd.returnType = getTypeReference(this.intStack[this.intPtr--]);", "-\tmd.declarationSourceStart = intStack[intPtr--];", "-\tmd.modifiers = intStack[intPtr--];", "+\tmd.declarationSourceStart = this.intStack[this.intPtr--];", "+\tmd.modifiers = this.intStack[this.intPtr--];", "+\t// consume annotations", "+\tint length;", "+\tif ((length = this.expressionLengthStack[this.expressionLengthPtr--]) != 0) {", "+\t\tSystem.arraycopy(", "+\t\t\tthis.expressionStack, ", "+\t\t\t(this.expressionPtr -= length) + 1, ", "+\t\t\tmd.annotations = new Annotation[length], ", "+\t\t\t0, ", "+\t\t\tlength); ", "+\t}", "-\tmd.sourceEnd = lParenPos;", "-\tmd.bodyStart = lParenPos+1;", "-\tlistLength = 0; // initialize listLength before reading parameters/throws", "+\tmd.sourceEnd = this.lParenPos;", "+\tmd.bodyStart = this.lParenPos+1;", "+\tthis.listLength = 0; // initialize listLength before reading parameters/throws", "-\tif (currentElement != null){", "-\t\tif (currentElement instanceof RecoveredType ", "+\tif (this.currentElement != null){", "+\t\tif (this.currentElement instanceof RecoveredType ", "-\t\t\t|| (scanner.getLineNumber(md.returnType.sourceStart)", "-\t\t\t\t\t== scanner.getLineNumber(md.sourceStart))){", "-\t\t\tlastCheckPoint = md.bodyStart;", "-\t\t\tcurrentElement = currentElement.add(md, 0);", "-\t\t\tlastIgnoredToken = -1;\t\t\t", "+\t\t\t|| (this.scanner.getLineNumber(md.returnType.sourceStart)", "+\t\t\t\t\t== this.scanner.getLineNumber(md.sourceStart))){", "+\t\t\tthis.lastCheckPoint = md.bodyStart;", "+\t\t\tthis.currentElement = currentElement.add(md, 0);", "+\t\t\tthis.lastIgnoredToken = -1;\t\t\t", "-\t\t\tlastCheckPoint = md.sourceStart;", "-\t\t\trestartRecovery = true;", "+\t\t\tthis.lastCheckPoint = md.sourceStart;", "+\t\t\tthis.restartRecovery = true;", "+\t\t}", "+\t}\t\t", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "352f04b5a30842b99110fac13368367b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 124, "methodNumberAfterChange": 124, "signatureBeforeChange": " protected void consumeMethodHeaderName()", "signatureAfterChange": " protected void consumeMethodHeaderName()", "diff": ["-\tmd.selector = identifierStack[identifierPtr];", "-\tlong selectorSource = identifierPositionStack[identifierPtr--];", "-\tidentifierLengthPtr--;", "+\tmd.selector = this.identifierStack[this.identifierPtr];", "+\tlong selectorSource = this.identifierPositionStack[this.identifierPtr--];", "+\tthis.identifierLengthPtr--;", "-\tmd.returnType = getTypeReference(intStack[intPtr--]);", "+\tmd.returnType = getTypeReference(this.intStack[this.intPtr--]);", "-\tmd.declarationSourceStart = intStack[intPtr--];", "-\tmd.modifiers = intStack[intPtr--];", "+\tmd.declarationSourceStart = this.intStack[this.intPtr--];", "+\tmd.modifiers = this.intStack[this.intPtr--];", "-\tmd.sourceEnd = lParenPos;", "-\tmd.bodyStart = lParenPos+1;", "-\tlistLength = 0; // initialize listLength before reading parameters/throws", "+\tmd.sourceEnd = this.lParenPos;", "+\tmd.bodyStart = this.lParenPos+1;", "+\tthis.listLength = 0; // initialize listLength before reading parameters/throws", "-\tif (currentElement != null){", "-\t\tif (currentElement instanceof RecoveredType ", "+\tif (this.currentElement != null){", "+\t\tif (this.currentElement instanceof RecoveredType ", "-\t\t\t|| (scanner.getLineNumber(md.returnType.sourceStart)", "-\t\t\t\t\t== scanner.getLineNumber(md.sourceStart))){", "-\t\t\tlastCheckPoint = md.bodyStart;", "-\t\t\tcurrentElement = currentElement.add(md, 0);", "-\t\t\tlastIgnoredToken = -1;", "+\t\t\t|| (this.scanner.getLineNumber(md.returnType.sourceStart)", "+\t\t\t\t\t== this.scanner.getLineNumber(md.sourceStart))){", "+\t\t\tthis.lastCheckPoint = md.bodyStart;", "+\t\t\tthis.currentElement = this.currentElement.add(md, 0);", "+\t\t\tthis.lastIgnoredToken = -1;", "-\t\t\tlastCheckPoint = md.sourceStart;", "-\t\t\trestartRecovery = true;", "+\t\t\tthis.lastCheckPoint = md.sourceStart;", "+\t\t\tthis.restartRecovery = true;"]}], "num": 56433}