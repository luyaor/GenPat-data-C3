{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "962851815493fa7915bd61d8335914ec", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1b87f15e9169f5c8a0a82dd402c149e2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryMethod.java", "commitBeforeChange": "5df75ce3074574b9ceea64411eeaa18313a445b2", "commitAfterChange": "418c3c32abb13732045765a3a2278937dc9fd129", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " public String[] getParameterNames() throws JavaModelException", "signatureAfterChange": " public String[] getParameterNames() throws JavaModelException", "diff": ["-\t\tString javadocContents = null;", "+\t\tJavadocContents javadocContents = null;", "-\t\t\tjavadocContents = (String) projectInfo.javadocCache.get(declaringType);", "+\t\t\tjavadocContents = (JavadocContents) projectInfo.javadocCache.get(declaringType);", "+\t\t", "+\t\tString methodDoc = null;", "-\t\t\tjavadocContents = nameCollector.getJavadoc();", "+\t\t\tmethodDoc = nameCollector.getJavadoc();", "-\t\t\t\tjavadocContents = extractJavadoc(declaringType, javadocContents);", "+\t\t\t\tmethodDoc = javadocContents.getMethodDoc(this);", "-\t\tif (javadocContents != null && javadocContents != BinaryType.EMPTY_JAVADOC) {", "-\t\t\tfinal int indexOfOpenParen = javadocContents.indexOf('(');", "+\t\tif (methodDoc != null) {", "+\t\t\tfinal int indexOfOpenParen = methodDoc.indexOf('(');", "-\t\t\t\tfinal int indexOfClosingParen = javadocContents.indexOf(')', indexOfOpenParen);", "+\t\t\t\tfinal int indexOfClosingParen = methodDoc.indexOf(')', indexOfOpenParen);", "-\t\t\t\t\t\t\tjavadocContents.substring(indexOfOpenParen + 1, indexOfClosingParen).toCharArray(),", "+\t\t\t\t\t\t\tmethodDoc.substring(indexOfOpenParen + 1, indexOfClosingParen).toCharArray(),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5baa2ff998f6ef1ce622d02a81479cba", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTParser.java", "commitBeforeChange": "1e77fadf417c78089a8bce12d01b049277ef0c41", "commitAfterChange": "caf3736c8c3269393f7e0bedb9e633769506e2e8", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": " \t \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "signatureAfterChange": " \t \tprivate ASTNode internalCreateAST(IProgressMonitor monitor)", "diff": ["-\t\t\t\t\t\tIPackageFragment packageFragment = (IPackageFragment)this.compilationUnitSource.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "+\t\t\t\t\t\tPackageFragment packageFragment = (PackageFragment)this.compilationUnitSource.getAncestor(IJavaElement.PACKAGE_FRAGMENT);", "-\t\t\t\t\t\t\tpackageName = CharOperation.splitOn('.', packageFragment.getElementName().toCharArray());", "+\t\t\t\t\t\t\tpackageName = Util.toCharArrays(packageFragment.names);", "-\t\t\t\t\t\t\tpackageName = CharOperation.splitOn('.', this.classFileSource.getType().getPackageFragment().getElementName().toCharArray());", "+\t\t\t\t\t\t\tPackageFragment packageFragment = (PackageFragment) this.classFileSource.getType().getPackageFragment();", "+\t\t\t\t\t\t\tpackageName = Util.toCharArrays(packageFragment.names);"]}], "num": 51517}