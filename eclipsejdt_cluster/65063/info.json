{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3a51c61f4e78c4b7387e9be5ea9a9ab", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "248130a6bfda25e5fdad0164562d9eeb", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/ClassFileWorkingCopy.java", "commitBeforeChange": "24ecdaaa88a3d3df53c6657b56b1c35a02f254d7", "commitAfterChange": "b77d2ea3108de5650fdc8f1f0c9f51bf7203159f", "methodNumberBeforeChange": 49, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void commitWorkingCopy(boolean force, IProgressMonitor monitor) \t\tthrows JavaModelException", "signatureAfterChange": "  public void commitWorkingCopy(boolean force, IProgressMonitor monitor) throws JavaModelException", "diff": ["+public void commitWorkingCopy(boolean force, IProgressMonitor monitor) throws JavaModelException {", "+\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_ELEMENT_TYPES, this));", "+}", "-\t */", "-\tpublic void commitWorkingCopy(boolean force, IProgressMonitor monitor)", "-\t\tthrows JavaModelException {", "-\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.ELEMENT_DOES_NOT_EXIST, this));", "-\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1eeff596f9716336395e3d3a27092ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateTypeMemberOperation.java", "commitBeforeChange": "7a210a7f5b30921a3f366440e545c7beba0850ea", "commitAfterChange": "e942b309a9ec95d401e578315f43704dc381cb24", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, ICompilationUnit cu) throws JavaModelException", "signatureAfterChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, ICompilationUnit cu) throws JavaModelException", "diff": ["-\t\t\tthis.createdNode = (ASTNode) typeDeclaration.bodyDeclarations().iterator().next();", "+\t\t\tif ((typeDeclaration.getFlags() & ASTNode.MALFORMED) != 0) {", "+\t\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_CONTENTS));", "+\t\t\t}", "+\t\t\tList bodyDeclarations = typeDeclaration.bodyDeclarations();", "+\t\t\tif (bodyDeclarations.size() == 0) {", "+\t\t\t\tthrow new JavaModelException(new JavaModelStatus(IJavaModelStatusConstants.INVALID_CONTENTS));", "+\t\t\t}", "+\t\t\tthis.createdNode = (ASTNode) bodyDeclarations.iterator().next();"]}], "num": 65063}