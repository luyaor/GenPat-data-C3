{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "e35465c5be8b182362122f1d6a5637a7", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1261e976e3dc1aed39f49e81e29fd81f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/util/CompilationUnitSorter.java", "commitBeforeChange": "a5e16ab4cb4646a60c1c1f68f8aa6a7bd9ce6ee6", "commitAfterChange": "b9cfc2e232bd64ee47720d037c84b265f2b3617c", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic static void sort(ICompilationUnit compilationUnit, \t        int[] positions, \t        Comparator comparator, \t        int options, \t        IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic static void sort(ICompilationUnit compilationUnit, \t        int[] positions, \t        Comparator comparator, \t        int options, \t        IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\tif (compilationUnit == null || comparator == null) {", "-\t\t\tthrow new IllegalArgumentException();", "-\t\t}", "-\t\tICompilationUnit[] compilationUnits = new ICompilationUnit[] { compilationUnit };", "-\t\tSortElementsOperation operation = new SortElementsOperation(compilationUnits, positions, comparator);", "-\t\toperation.runOperation(monitor);", "+\t\tsort(AST.JLS2, compilationUnit, positions, comparator, options, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7347da382487975bd781ee0595b55d87", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "7f5e906484d36443cfeeaa5a767b999e30565c9e", "commitAfterChange": "0d1d10149bf9c26b080c1a4904327c7f2e8ddf98", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "\r \tpublic static CompilationUnit parseCompilationUnit(\r \t\t\tICompilationUnit unit,\r \t\t\tboolean resolveBindings)", "signatureAfterChange": "\r \tpublic static CompilationUnit parseCompilationUnit(\r \t\t\tICompilationUnit unit,\r \t\t\tboolean resolveBindings)", "diff": ["+\t\tif (unit == null) {\r", "+\t\t\tthrow new IllegalArgumentException();\r", "+\t\t}\r", "+\t\t\r", "-\t\t\t// If resolveBindings is true, we need to record the mod count\r", "+\t\t\t// FIXME - If resolveBindings is true, we need to record the mod count\r", "+\t\t\t\t// FIXME - if this exception can happen, it needs to be converted\r", "+\t\t\t\t// to an appropriate RuntimeException of some ilk\r", "+\t\t// FIXME - this method must not return null!\r"]}], "num": 40194}