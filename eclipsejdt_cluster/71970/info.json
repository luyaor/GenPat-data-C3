{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "18ae0638fae266703b34419fb5d3b921", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "64f1c45944c969a965bae203307f0b65", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/LambdaExpression.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 20, "methodNumberAfterChange": 20, "signatureBeforeChange": " \tprivate void mergeParameterNullAnnotations(BlockScope currentScope)", "signatureAfterChange": " \tprivate void mergeParameterNullAnnotations(BlockScope currentScope)", "diff": ["-\t\t\t\t\t\tif (annotation != null) {", "-\t\t\t\t\t\t\tswitch (annotation.getAnnotationType().id) {", "-\t\t\t\t\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNullable :", "-\t\t\t\t\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNonNull :", "-\t\t\t\t\t\t\t\t\tourParameters[i] = env.createAnnotatedType(ourParameters[i], new AnnotationBinding [] { annotation });", "-\t\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\t\t}", "+\t\t\t\t\t\tif (annotation != null && annotation.getAnnotationType().hasNullBit(TypeIds.BitNonNullAnnotation|TypeIds.BitNullableAnnotation)) {", "+\t\t\t\t\t\t\tourParameters[i] = env.createAnnotatedType(ourParameters[i], new AnnotationBinding [] { annotation });"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cca45644315d45cb19edfce01e80e18d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "c6083a2d48fa11ffa1e9554a2f00be6af36feafe", "commitAfterChange": "6dbe2813dd7277bd2252f3441ba09237b6b43790", "methodNumberBeforeChange": 499, "methodNumberAfterChange": 499, "signatureBeforeChange": " private boolean excludeDueToAnnotation(Annotation[] annotations, int problemId)", "signatureAfterChange": " private boolean excludeDueToAnnotation(Annotation[] annotations, int problemId)", "diff": ["-\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNonNull:", "-\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNullable:", "-\t\t\t\tcase TypeIds.T_ConfiguredAnnotationNonNullByDefault:", "-\t\t\t\t\t// non-standard annotation found, don't warn", "-\t\t\t\t\treturn true;", "+\t\t\t\t\tif (resolvedType instanceof ReferenceBinding)", "+\t\t\t\t\t\tif (((ReferenceBinding) resolvedType).hasNullBit(TypeIds.BitNullableAnnotation|TypeIds.BitNonNullAnnotation|TypeIds.BitNonNullByDefaultAnnotation))", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\treturn true; // non-standard annotation found, don't warn"]}], "num": 71970}