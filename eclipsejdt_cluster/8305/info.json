{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c0f93d453cd3400b2f14d56a74c6779f", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a8ac38925fdb75673ec9658ea56fc4f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "8c93d4e99b8a943865cb7391e781eba5bb83dfc9", "commitAfterChange": "bd0edd7688142c1743cb6b10766dfc576040f113", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  public void resetNullInfoForFields()", "signatureAfterChange": "  public void resetNullInfoForFields(UnconditionalFlowInfo fieldResetFlow)", "diff": ["-public void resetNullInfoForFields() {", "+public void resetNullInfoForFields(UnconditionalFlowInfo fieldResetFlow) {", "-\t\tmask |= this.constantFieldsMask;", "+\t\tmask |= fieldResetFlow.constantFieldsMask;", "-\t\tthis.nullBit1 |= ~mask;", "-\t\tthis.nullBit2 &= mask;", "-\t\tthis.nullBit3 &= mask;", "-\t\tthis.nullBit4 |= ~mask;", "+\t\tthis.nullBit1 = (this.nullBit1 & mask) | fieldResetFlow.nullBit1;", "+\t\tthis.nullBit2 = (this.nullBit2 & mask) | fieldResetFlow.nullBit2;", "+\t\tthis.nullBit3 = (this.nullBit3 & mask) | fieldResetFlow.nullBit3;", "+\t\tthis.nullBit4 = (this.nullBit4 & mask) | fieldResetFlow.nullBit4;", "+", "-\t\t\tif (this.extraConstantFieldMask != null){", "-\t\t\t\tfor (int vectorIndex = 0; vectorIndex < this.extra[2].length; vectorIndex++) {", "-\t\t\t\t    if (vectorIndex >= this.extraConstantFieldMask.length) {", "+\t\t\tfor (int vectorIndex = 0; vectorIndex < this.extra[2].length; vectorIndex++) {", "+\t\t\t\tif (fieldResetFlow.extraConstantFieldMask != null) {", "+\t\t\t\t    if (vectorIndex >= fieldResetFlow.extraConstantFieldMask.length) {", "-\t\t\t\t    \t\tmask = ((-1 << localsStartOffset) | this.extraConstantFieldMask[vectorIndex]);", "+\t\t\t\t    \t\tmask = ((-1 << localsStartOffset) | fieldResetFlow.extraConstantFieldMask[vectorIndex]);", "-\t\t\t\t    \t\tmask = 0L | this.extraConstantFieldMask[vectorIndex];", "+\t\t\t\t    \t\tmask = 0L | fieldResetFlow.extraConstantFieldMask[vectorIndex];", "-\t\t\t\t\tthis.extra[2][vectorIndex]", "-\t\t\t\t\t    |= ~mask;", "-\t\t\t\t\tthis.extra[3][vectorIndex] &= mask;", "-\t\t\t\t\tthis.extra[4][vectorIndex] &= mask;", "-\t\t\t\t\tthis.extra[5][vectorIndex] |= ~mask;", "+\t\t\t\t} else {", "+\t\t\t\t\tif (vectorIndex == localsStartIndex) {", "+\t\t\t\t\t\t// some locals, some fields at this vectorIndex", "+\t\t\t\t\t\tmask = -1L << localsStartOffset;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\t// all fields here", "+\t\t\t\t\t\tmask = 0L;", "+\t\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\t// no constant fields", "-\t\t\t\tfor (int vectorIndex = 0; vectorIndex < this.extra[2].length; vectorIndex++) {", "-\t\t\t\t    if (vectorIndex == localsStartIndex) {", "-\t\t\t\t    \t// some locals, some fields at this vectorIndex", "-\t\t\t\t    \tmask = -1L << localsStartOffset;", "-\t\t\t\t    } else {", "-\t\t\t\t    \t// all fields here", "-\t\t\t\t    \tmask = 0L;", "-\t\t\t\t    }", "-\t\t\t\t\tthis.extra[2][vectorIndex]", "-\t\t\t\t\t    |= ~mask;", "-\t\t\t\t\tthis.extra[3][vectorIndex] &= mask;", "-\t\t\t\t\tthis.extra[4][vectorIndex] &= mask;", "-\t\t\t\t\tthis.extra[5][vectorIndex] |= ~mask;", "-\t\t\t\t}", "+\t\t\t    long reset1, reset2, reset3, reset4;", "+\t\t\t    if (fieldResetFlow.extra != null && fieldResetFlow.extra[2].length > vectorIndex) {", "+\t\t\t    \treset1 = fieldResetFlow.extra[2][vectorIndex];", "+\t\t\t    \treset2 = fieldResetFlow.extra[3][vectorIndex];", "+\t\t\t    \treset3 = fieldResetFlow.extra[4][vectorIndex];", "+\t\t\t    \treset4 = fieldResetFlow.extra[5][vectorIndex];", "+\t\t\t    } else {", "+\t\t\t    \t// no status recorded in fieldResetFlow, use def unknown instead:", "+\t\t\t    \treset1 = reset4 = 1;", "+\t\t\t    \treset2 = reset3 = 0;", "+\t\t\t    }", "+\t\t\t\tthis.extra[2][vectorIndex] = (this.extra[2][vectorIndex] & mask) | reset1;", "+\t\t\t\tthis.extra[3][vectorIndex] = (this.extra[3][vectorIndex] & mask) | reset2;", "+\t\t\t\tthis.extra[4][vectorIndex] = (this.extra[4][vectorIndex] & mask) | reset3;", "+\t\t\t\tthis.extra[5][vectorIndex] = (this.extra[5][vectorIndex] & mask) | reset4;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d94209fd148d3fbfc7669b63f660efa8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/UnconditionalFlowInfo.java", "commitBeforeChange": "874e2c41609c64af417834df9af2e898d8dcf37a", "commitAfterChange": "4977ef90a9cbab898d33f6e3ba736939d7ac7a85", "methodNumberBeforeChange": 39, "methodNumberAfterChange": 39, "signatureBeforeChange": "  public void resetNullInfoForFields(UnconditionalFlowInfo fieldResetFlow)", "signatureAfterChange": "  public void resetNullInfoForFields()", "diff": ["-public void resetNullInfoForFields(UnconditionalFlowInfo fieldResetFlow) {", "+public void resetNullInfoForFields() {", "-\t\tmask |= fieldResetFlow.constantFieldsMask;", "+\t\tmask |= this.constantFieldsMask;", "-\t\tthis.nullBit1 = (this.nullBit1 & mask) | fieldResetFlow.nullBit1;", "-\t\tthis.nullBit2 = (this.nullBit2 & mask) | fieldResetFlow.nullBit2;", "-\t\tthis.nullBit3 = (this.nullBit3 & mask) | fieldResetFlow.nullBit3;", "-\t\tthis.nullBit4 = (this.nullBit4 & mask) | fieldResetFlow.nullBit4;", "-", "+\t\tthis.nullBit1 |= ~mask;", "+\t\tthis.nullBit2 &= mask;", "+\t\tthis.nullBit3 &= mask;", "+\t\tthis.nullBit4 |= ~mask;", "-\t\t\tfor (int vectorIndex = 0; vectorIndex < len; vectorIndex++) {", "-\t\t\t\tif (fieldResetFlow.extraConstantFieldMask != null) {", "-\t\t\t\t    if (vectorIndex >= fieldResetFlow.extraConstantFieldMask.length) {", "+\t\t\tif (this.extraConstantFieldMask != null){", "+\t\t\t\tfor (int vectorIndex = 0; vectorIndex < len; vectorIndex++) {", "+\t\t\t\t    if (vectorIndex >= this.extraConstantFieldMask.length) {", "-\t\t\t\t    \t\tmask = ((-1 << localsStartOffset) | fieldResetFlow.extraConstantFieldMask[vectorIndex]);", "+\t\t\t\t    \t\tmask = ((-1 << localsStartOffset) | this.extraConstantFieldMask[vectorIndex]);", "-\t\t\t\t    \t\tmask = 0L | fieldResetFlow.extraConstantFieldMask[vectorIndex];", "+\t\t\t\t    \t\tmask = 0L | this.extraConstantFieldMask[vectorIndex];", "-\t\t\t\t} else {", "-\t\t\t\t\tif (vectorIndex == localsStartIndex) {", "-\t\t\t\t\t\t// some locals, some fields at this vectorIndex", "-\t\t\t\t\t\tmask = -1L << localsStartOffset;", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\t// all fields here", "-\t\t\t\t\t\tmask = 0L;", "-\t\t\t\t\t}", "+\t\t\t\t\tthis.extra[2][vectorIndex]", "+\t\t\t\t\t    |= ~mask;", "+\t\t\t\t\tthis.extra[3][vectorIndex] &= mask;", "+\t\t\t\t\tthis.extra[4][vectorIndex] &= mask;", "+\t\t\t\t\tthis.extra[5][vectorIndex] |= ~mask;", "-\t\t\t    long reset1, reset2, reset3, reset4;", "-\t\t\t    if (fieldResetFlow.extra != null && fieldResetFlow.extra[2].length > vectorIndex) {", "-\t\t\t    \treset1 = fieldResetFlow.extra[2][vectorIndex];", "-\t\t\t    \treset2 = fieldResetFlow.extra[3][vectorIndex];", "-\t\t\t    \treset3 = fieldResetFlow.extra[4][vectorIndex];", "-\t\t\t    \treset4 = fieldResetFlow.extra[5][vectorIndex];", "-\t\t\t    } else {", "-\t\t\t    \t// no status recorded in fieldResetFlow, use def unknown instead:", "-\t\t\t    \treset1 = reset4 = 1;", "-\t\t\t    \treset2 = reset3 = 0;", "-\t\t\t    }", "-\t\t\t\tthis.extra[2][vectorIndex] = (this.extra[2][vectorIndex] & mask) | reset1;", "-\t\t\t\tthis.extra[3][vectorIndex] = (this.extra[3][vectorIndex] & mask) | reset2;", "-\t\t\t\tthis.extra[4][vectorIndex] = (this.extra[4][vectorIndex] & mask) | reset3;", "-\t\t\t\tthis.extra[5][vectorIndex] = (this.extra[5][vectorIndex] & mask) | reset4;", "+\t\t\t} else {", "+\t\t\t\t// no constant fields", "+\t\t\t\tfor (int vectorIndex = 0; vectorIndex < len; vectorIndex++) {", "+\t\t\t\t    if (vectorIndex == localsStartIndex) {", "+\t\t\t\t    \t// some locals, some fields at this vectorIndex", "+\t\t\t\t    \tmask = -1L << localsStartOffset;", "+\t\t\t\t    } else {", "+\t\t\t\t    \t// all fields here", "+\t\t\t\t    \tmask = 0L;", "+\t\t\t\t    }", "+\t\t\t\t\tthis.extra[2][vectorIndex]", "+\t\t\t\t\t    |= ~mask;", "+\t\t\t\t\tthis.extra[3][vectorIndex] &= mask;", "+\t\t\t\t\tthis.extra[4][vectorIndex] &= mask;", "+\t\t\t\t\tthis.extra[5][vectorIndex] |= ~mask;", "+\t\t\t\t}"]}], "num": 8305}