{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ef7ef0462f693352eea027b3531c2c12", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "47007cc5e85c2eabe6a7cdcbe4f4dbb7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "451a4290b08482db72c12f90b576f09a8da8fda2", "commitAfterChange": "68032f015aeece9b1e17b3f98b4f78c4d8098b12", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["+\t\t\t\t\t\t\t\t\tif (matchingMethod.isBridge() && !currentMethod.isBridge())", "+\t\t\t\t\t\t\t\t\t\tcontinue nextMethod; // keep inherited methods to find concrete method over a bridge method"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "710df1f789d7497f57205f7883086818", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "bf06f23cb37471e4e0b10eb0affe747a9e945b46", "commitAfterChange": "67c70f0229b1ee30edee39ee40e49c055e5684f0", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " \tpublic MethodBinding findExactMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding findExactMethod(ReferenceBinding receiverType, char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["+\t\t\tif (exactMethod.isAbstract() && exactMethod.thrownExceptions != Binding.NO_EXCEPTIONS)", "+\t\t\t\treturn null; // may need to merge exceptions with interface method"]}], "num": 7137}