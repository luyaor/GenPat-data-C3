{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ad80a51fb6d1f0c14633ed3a43cf98f1", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3ea448989fc02c2da2fb05033531bab3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/FieldReferencePattern.java", "commitBeforeChange": "1201fcd02c6275517e348d64f378096381dec769", "commitAfterChange": "84721977f318065445b04a4a72863a1fb6d0ab9a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  public FieldReferencePattern( \tchar[] name,  \tint matchMode,  \tboolean isCaseSensitive, \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName, \tboolean readAccess, \tboolean writeAccess)", "signatureAfterChange": "  public FieldReferencePattern( \tchar[] name,  \tint matchMode,  \tboolean isCaseSensitive, \tchar[] declaringQualification, \tchar[] declaringSimpleName,\t \tchar[] typeQualification,  \tchar[] typeSimpleName, \tboolean readAccess, \tboolean writeAccess)", "diff": ["-\tthis.needsResolve = this.needsResolve();", "+\tthis.needsResolve = true; // always resolve (in case of a simple name reference being a potential match)"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "79ccb6af8ff47287bfd573094f54baf4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/eval/org/eclipse/jdt/internal/eval/CodeSnippetParser.java", "commitBeforeChange": "63fba1ed3c81fff2177e7bfddcaf4a192c55d79a", "commitAfterChange": "5d8c3e54083498653026b467f33ec8e3ae7bf16e", "methodNumberBeforeChange": 37, "methodNumberAfterChange": 37, "signatureBeforeChange": " protected boolean resumeOnSyntaxError()", "signatureAfterChange": " protected boolean resumeOnSyntaxError()", "diff": ["-\t\treturn super.resumeOnSyntaxError();", "+\t\treturn false;", "-\t// go for the exprssion", "+\t// go for the expression"]}], "num": 14340}