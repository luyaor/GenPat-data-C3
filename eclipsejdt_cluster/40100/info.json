{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c15c6123146f44dc22179d352a880dcb", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "490cc4addd671448ec00dd2b1c7fe2aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CopyResourceElementsOperation.java", "commitBeforeChange": "471c15cd43796bd63b4d1f53aca608e4822d5ab8", "commitAfterChange": "7a3ae46899cc014db3e6ff04c755844a7b20ac77", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 6, "signatureBeforeChange": " \tpublic CopyResourceElementsOperation(IJavaElement[] resourcesToCopy, IJavaElement destContainer, boolean force)", "signatureAfterChange": " \tprotected ISchedulingRule getSchedulingRule()", "diff": ["-\t */", "-\tpublic CopyResourceElementsOperation(IJavaElement[] resourcesToCopy, IJavaElement destContainer, boolean force) {", "-\t\tthis(resourcesToCopy, new IJavaElement[]{destContainer}, force);", "-\t}", "+\tprotected ISchedulingRule getSchedulingRule() {", "+\t\tif (this.elementsToProcess == null)", "+\t\t\treturn null;", "+\t\tint length = this.elementsToProcess.length;", "+\t\tif (length == 1)", "+\t\t\treturn getSchedulingRule(this.elementsToProcess[0]);", "+\t\tISchedulingRule[] rules = new ISchedulingRule[length];", "+\t\tint index = 0;", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tISchedulingRule rule = getSchedulingRule(this.elementsToProcess[i]);", "+\t\t\tif (rule != null) {", "+\t\t\t\trules[index++] = rule;", "+\t\t\t}", "+\t\t}", "+\t\tif (index != length)", "+\t\t\tSystem.arraycopy(rules, 0, rules = new ISchedulingRule[index], 0, index);", "+\t\treturn new MultiRule(rules);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9d59adbe44cf860be3a2cfd43741d59d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/BinaryType.java", "commitBeforeChange": "ce95cbd0fd6ce62e0a880cf427ad9d5c5121d1ae", "commitAfterChange": "95993961e278d83dc23d7d0203a47aaea09dd722", "methodNumberBeforeChange": 40, "methodNumberAfterChange": 40, "signatureBeforeChange": " public ITypeHierarchy newTypeHierarchy(IJavaProject project, WorkingCopyOwner owner, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ITypeHierarchy newTypeHierarchy(IJavaProject project, WorkingCopyOwner owner, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tint length = workingCopies.length;", "-\tICompilationUnit[] projectWCs = new ICompilationUnit[length];", "-\tint index = 0;", "-\tfor (int i = 0; i < length; i++) {", "-\t\tICompilationUnit wc = workingCopies[i];", "-\t\tif (project.equals(wc.getJavaProject())) {", "-\t\t\tprojectWCs[index++] = wc;", "+\tICompilationUnit[] projectWCs = null;", "+\tif (workingCopies != null) {", "+\t\tint length = workingCopies.length;", "+\t\tprojectWCs = new ICompilationUnit[length];", "+\t\tint index = 0;", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tICompilationUnit wc = workingCopies[i];", "+\t\t\tif (project.equals(wc.getJavaProject())) {", "+\t\t\t\tprojectWCs[index++] = wc;", "+\t\t\t}", "-\t}", "-\tif (index != length) {", "-\t\tSystem.arraycopy(projectWCs, 0, projectWCs = new ICompilationUnit[index], 0, index);", "+\t\tif (index != length) {", "+\t\t\tSystem.arraycopy(projectWCs, 0, projectWCs = new ICompilationUnit[index], 0, index);", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d8b9b9de09a22202ca3cd536b597c0b0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SourceType.java", "commitBeforeChange": "ce95cbd0fd6ce62e0a880cf427ad9d5c5121d1ae", "commitAfterChange": "95993961e278d83dc23d7d0203a47aaea09dd722", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " public ITypeHierarchy newTypeHierarchy(IJavaProject project, WorkingCopyOwner owner, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " public ITypeHierarchy newTypeHierarchy(IJavaProject project, WorkingCopyOwner owner, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\tint length = workingCopies.length;", "-\tICompilationUnit[] projectWCs = new ICompilationUnit[length];", "-\tint index = 0;", "-\tfor (int i = 0; i < length; i++) {", "-\t\tICompilationUnit wc = workingCopies[i];", "-\t\tif (project.equals(wc.getJavaProject())) {", "-\t\t\tprojectWCs[index++] = wc;", "+\tICompilationUnit[] projectWCs = null;", "+\tif (workingCopies != null) {", "+\t\tint length = workingCopies.length;", "+\t\tprojectWCs = new ICompilationUnit[length];", "+\t\tint index = 0;", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tICompilationUnit wc = workingCopies[i];", "+\t\t\tif (project.equals(wc.getJavaProject())) {", "+\t\t\t\tprojectWCs[index++] = wc;", "+\t\t\t}", "-\t}", "-\tif (index != length) {", "-\t\tSystem.arraycopy(projectWCs, 0, projectWCs = new ICompilationUnit[index], 0, index);", "+\t\tif (index != length) {", "+\t\t\tSystem.arraycopy(projectWCs, 0, projectWCs = new ICompilationUnit[index], 0, index);", "+\t\t}"]}], "num": 40100}