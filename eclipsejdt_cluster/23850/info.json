{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "8ed84099db763d719225555f5a816c77", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d57d8f1fc91191243e037b7a99d0b05", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 18, "signatureBeforeChange": " protected void consumeNestedMethod()", "signatureAfterChange": " protected void consumeNestedMethod()", "diff": ["-\tthis.inMethodStack[this.inMethodPtr] = true;", "+\tif(!isInsideMethod()) pushOnElementStack(K_METHOD_DELIMITER);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "83690127e050ad4cad31ea89186abfe6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/DefaultCodeFormatter.java", "commitBeforeChange": "b08e7596febaa49e23faa81f4a4f9ae399c9aefb", "commitAfterChange": "24cf10e27c63373d484417e95718811352f381da", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 14, "signatureBeforeChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "signatureAfterChange": "  \tprivate TextEdit probeFormatting(String source, int indentationLevel, String lineSeparator, int offset, int length)", "diff": ["-\t\tExpression expression = this.codeSnippetParsingUtil.parseExpression(source.toCharArray(), this.options, true);", "+\t\tExpression expression = this.codeSnippetParsingUtil.parseExpression(source.toCharArray(), getDefaultCompilerOptions(), true);", "-\t\tASTNode[] bodyDeclarations = this.codeSnippetParsingUtil.parseClassBodyDeclarations(source.toCharArray(), this.options, true);", "+\t\tASTNode[] bodyDeclarations = this.codeSnippetParsingUtil.parseClassBodyDeclarations(source.toCharArray(), getDefaultCompilerOptions(), true);", "-\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), this.options, true);", "+\t\tConstructorDeclaration constructorDeclaration = this.codeSnippetParsingUtil.parseStatements(source.toCharArray(), getDefaultCompilerOptions(), true);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9a6ba4ba97c968b4dbecb0669183a3b9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/impl/AssistParser.java", "commitBeforeChange": "67da1da15e9afbcd33679f07597c706e7915cf4a", "commitAfterChange": "027fccb2c17e0f0d2b28705c6704af10fc8ce0aa", "methodNumberBeforeChange": 59, "methodNumberAfterChange": 66, "signatureBeforeChange": " protected AstNode wrapWithExplicitConstructorCallIfNeeded(AstNode ast)", "signatureAfterChange": " protected AstNode wrapWithExplicitConstructorCallIfNeeded(AstNode ast)", "diff": ["-\tif (ast != null && this.invocationPtr >= 0 && ast instanceof Expression &&", "-\t\t\t(((selector = this.selectorStack[this.invocationPtr]) == THIS_CONSTRUCTOR) ||", "+\tif (ast != null && topKnownElementKind(ASSIST_PARSER) == K_SELECTOR && ast instanceof Expression &&", "+\t\t\t(((selector = topKnownElementInfo(ASSIST_PARSER)) == THIS_CONSTRUCTOR) ||"]}], "num": 23850}