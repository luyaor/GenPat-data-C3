{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "68d1d00f2041aada798c28ee356c15d1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5e7a20bb76ec745d335f92507824305d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreateImportOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected IDOMNode generateElementDOM()", "signatureAfterChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException", "diff": ["-// TODO - JDOM - remove once model ported off of JDOM", "-protected IDOMNode generateElementDOM() {", "-\tif (fCUDOM.getChild(fImportName) == null) {", "-\t\tDOMFactory factory = new DOMFactory();", "-\t\t//not a duplicate", "-\t\tIDOMImport imp = factory.createImport();", "-\t\timp.setName(fImportName);", "-\t\treturn imp;", "+}", "+protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException {", "+\t// ensure no duplicate", "+\tIterator imports = this.cuAST.imports().iterator();", "+\twhile (imports.hasNext()) {", "+\t\tImportDeclaration importDeclaration = (ImportDeclaration) imports.next();", "+\t\tif (this.importName.equals(importDeclaration.getName().getFullyQualifiedName())) {", "+\t\t\t//no new import was generated", "+\t\t\tthis.creationOccurred = false;", "+\t\t\treturn null;", "+\t\t}", "-\t//no new import was generated", "-\tfCreationOccurred = false;", "-\t//all the work has already been done", "-\treturn null;", "+\tAST ast = this.cuAST.getAST();", "+\tImportDeclaration importDeclaration = ast.newImportDeclaration();", "+\tName name = ast.newName(new String[] {this.importName});", "+\timportDeclaration.setName(name);", "+\treturn importDeclaration;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aeaab2ff5be44f2b0c54fb1df264e78d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CreatePackageDeclarationOperation.java", "commitBeforeChange": "90d481edc9060cc498a8f085b08186108312e37b", "commitAfterChange": "f3a3c06f6e68ab7680c250209b9759ac3d56fec6", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 2, "signatureBeforeChange": " protected IDOMNode generateElementDOM() throws JavaModelException", "signatureAfterChange": " protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException", "diff": ["-// TODO - JDOM - remove once model ported off of JDOM", "-protected IDOMNode generateElementDOM() throws JavaModelException {", "-\tIJavaElement[] children = getCompilationUnit().getChildren();", "+}", "+protected ASTNode generateElementAST(ASTRewrite rewriter, IDocument document, ICompilationUnit cu) throws JavaModelException {", "+\tIJavaElement[] children = getCompilationUnit().getChildren();", "-\t\tif (children[i].getElementType() ==  IJavaElement.PACKAGE_DECLARATION) {", "-\t\t\tIPackageDeclaration pck = (IPackageDeclaration) children[i];", "-\t\t\tIDOMPackage pack = (IDOMPackage) ((JavaElement)pck).findNode(fCUDOM);", "-\t\t\tif (!pack.getName().equals(fName)) {", "-\t\t\t\t // get the insertion position before setting the name, as this makes it a detailed node", "-\t\t\t\t // thus the start position is always 0", "-\t\t\t\tDOMNode node = (org.eclipse.jdt.internal.core.jdom.DOMNode)pack;", "-\t\t\t\tfInsertionPosition = node.getStartPosition();", "-\t\t\t\tfReplacementLength = node.getEndPosition() - fInsertionPosition + 1;", "-\t\t\t\tpack.setName(fName);", "-\t\t\t\tfCreatedElement = (org.eclipse.jdt.internal.core.jdom.DOMNode)pack;", "-\t\t\t} else {", "-\t\t\t\t//equivalent package declaration already exists", "-\t\t\t\tfCreationOccurred= false;", "-\t\t\t}", "-\t\t\t", "+\t\tif (children[i].getElementType() ==  IJavaElement.PACKAGE_DECLARATION && this.name.equals(children[i].getElementName())) {", "+\t\t\t//equivalent package declaration already exists", "+\t\t\tthis.creationOccurred = false;", "-\tIDOMPackage pack = (new DOMFactory()).createPackage();", "-\tpack.setName(fName);", "-\treturn pack;", "+\tAST ast = this.cuAST.getAST();", "+\tPackageDeclaration pkgDeclaration = ast.newPackageDeclaration();", "+\tName astName = ast.newName(new String[] {this.name});", "+\tpkgDeclaration.setName(astName);", "+\treturn pkgDeclaration;"]}], "num": 45004}