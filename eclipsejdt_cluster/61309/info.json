{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c180973c04b3abc2b449f4c2ab46b846", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "02b341e358379019ff4f536625408d25", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "6a618f5105b380b0a9a5dc6bfffb855693be7fab", "commitAfterChange": "93613529f4763965d02155d2aaa1cabf71be7897", "methodNumberBeforeChange": 26, "methodNumberAfterChange": 27, "signatureBeforeChange": "  \tpublic void consumeLocalVar(char[] varName, int occurrenceCount)", "signatureAfterChange": "  \tpublic void consumeLocalVar(char[] varName, int occurrenceCount, int argumentPosition)", "diff": ["-\tpublic void consumeLocalVar(char[] varName, int occurrenceCount) {", "+\tpublic void consumeLocalVar(char[] varName, int occurrenceCount, int argumentPosition) {", "-\t\t\t\tfor (int i = 0; i < parameterNames.length; i++) {", "-\t\t\t\t\tif (CharOperation.equals(parameterNames[i], varName)) {", "-\t\t\t\t\t\t// we don't have a compiler binding for this argument, but we can craft one:", "-\t\t\t\t\t\tthis.compilerBinding = new SyntheticLocalVariableBinding(varName, this.methodBinding.parameters[i], this.methodBinding);", "-\t\t\t\t\t\tthis.methodBinding = null;", "-\t\t\t\t\t\treturn;", "+\t\t\t\tint paramPosition = -1;", "+\t\t\t\tif (parameterNames.length == 0) {", "+\t\t\t\t\tparamPosition = argumentPosition;", "+\t\t\t\t} else {", "+\t\t\t\t\tfor (int i = 0; i < parameterNames.length; i++) {", "+\t\t\t\t\t\tif (CharOperation.equals(parameterNames[i], varName)) {", "+\t\t\t\t\t\t\tparamPosition = i;", "+\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\t\t}", "+\t\t\t\tif (paramPosition != -1) {", "+\t\t\t\t\t// we don't have a compiler binding for this argument, but we can craft one:", "+\t\t\t\t\tthis.compilerBinding = new SyntheticLocalVariableBinding(varName, this.methodBinding.parameters[paramPosition], this.methodBinding, paramPosition);", "+\t\t\t\t\tthis.methodBinding = null;", "+\t\t\t\t\treturn;", "+\t\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "978dee30cda92af8773008dc80bb7017", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/BindingKeyResolver.java", "commitBeforeChange": "e92ab0eafbe7472576da485243db5aa49da5df74", "commitAfterChange": "a4e58088a1010e10b50ef0d8683567f65215eac1", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 26, "signatureBeforeChange": "  \tpublic void consumeLocalVar(char[] varName, int occurrenceCount)", "signatureAfterChange": "  \tpublic void consumeLocalVar(char[] varName, int occurrenceCount)", "diff": ["-\t\t\tthis.scope = this.methodBinding.sourceMethod().scope;", "+\t\t\tAbstractMethodDeclaration sourceMethod = this.methodBinding.sourceMethod();", "+\t\t\tif (sourceMethod != null) {", "+\t\t\t\tthis.scope = sourceMethod.scope;", "+\t\t\t} else {", "+\t\t\t\tchar[][] parameterNames = this.methodBinding.parameterNames;", "+\t\t\t\tfor (int i = 0; i < parameterNames.length; i++) {", "+\t\t\t\t\tif (CharOperation.equals(parameterNames[i], varName)) {", "+\t\t\t\t\t\t// we don't have a compiler binding for this argument, but we can craft one:", "+\t\t\t\t\t\tthis.compilerBinding = new SyntheticLocalVariableBinding(varName, this.methodBinding.parameters[i], this.methodBinding);", "+\t\t\t\t\t\tthis.methodBinding = null;", "+\t\t\t\t\t\treturn;", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t}", "-\t \tfor (int i = 0; i < this.scope.localIndex; i++) {", "-\t\t\tLocalVariableBinding local = this.scope.locals[i];", "-\t\t\tif (CharOperation.equals(local.name, varName)", "-\t\t\t\t\t&& occurrenceCount-- == 0) {", "-\t\t\t\tthis.methodBinding = null;", "-\t\t\t\tthis.compilerBinding = local;", "-\t\t\t\treturn;", "+\t\tif (this.scope != null) {", "+\t\t \tfor (int i = 0; i < this.scope.localIndex; i++) {", "+\t\t\t\tLocalVariableBinding local = this.scope.locals[i];", "+\t\t\t\tif (CharOperation.equals(local.name, varName)", "+\t\t\t\t\t\t&& occurrenceCount-- == 0) {", "+\t\t\t\t\tthis.methodBinding = null;", "+\t\t\t\t\tthis.compilerBinding = local;", "+\t\t\t\t\treturn;", "+\t\t\t\t}"]}], "num": 61309}