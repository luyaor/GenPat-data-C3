{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4aa6c8f8581a1c3f98ac68fe38bb8f9c", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5970e628ea8acf6957023b32c74312aa", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "b1aca9b4105c9a7f1aa8e5460992860c474db551", "commitAfterChange": "e7dd2375779ab49b47ee68f59ed9e6849f2130e6", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 34, "signatureBeforeChange": " public void test012b()", "signatureAfterChange": " public void test012b()", "diff": ["+// width)", "-", "-\tthis.runConformTest(", "-\t\tnew String[0],", "-        \" -help:warn -referenceInfo\",", "+\tString expandedExpectedOutput = ", "-\t\t}),", "+\t\t\t});", "+\tthis.runConformTest(", "+\t\tnew String[0],", "+        \" -help:warn -referenceInfo\",", "+        expandedExpectedOutput,", "+\tcheckWidth(expandedExpectedOutput, 80);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c9b86ac01e1edee5ad6fb7a84cbc6c62", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "457fc77ec96140a15fc3e1c18bbf7bf53c7ea1c9", "commitAfterChange": "44074e366655e2cf89768617c1e64463f5949123", "methodNumberBeforeChange": 116, "methodNumberAfterChange": 116, "signatureBeforeChange": " \tprotected void search(IJavaElement element, int limitTo, int matchRule, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "signatureAfterChange": " \tprotected void search(IJavaElement element, int limitTo, int matchRule, IJavaSearchScope scope, SearchRequestor requestor) throws CoreException", "diff": ["+\t\tSearchPattern pattern = SearchPattern.createPattern(element, limitTo, matchRule);", "+\t\tassertNotNull(\"Pattern should not be null\", pattern);", "-\t\t\tSearchPattern.createPattern(element, limitTo, matchRule),", "+\t\t\tpattern,"]}], "num": 11667}