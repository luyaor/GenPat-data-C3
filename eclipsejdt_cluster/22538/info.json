{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "ac4688449c6c3a3d965e8e93d2bdafe7", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "68bc359d236f9cede4c61bdf75196e39", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.performance/src/org/eclipse/jdt/core/tests/performance/FullSourceWorkspaceSearchTests.java", "commitBeforeChange": "2d1be1f1f4a58e88e50c3b86fdfc977ad3b4dc33", "commitAfterChange": "0ac8f989e8e30ba627dfaa54489b47b0049b464d", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic void testPerfIndexing() throws IOException, CoreException", "signatureAfterChange": "  \tpublic void testPerfIndexing() throws CoreException", "diff": ["-\tpublic void testPerfIndexing() throws IOException, CoreException {", "+\tpublic void testPerfIndexing() throws CoreException {", "-\t\tstartMeasuring();", "+\t\tINDEX_MANAGER.discardJobs(null); // discard all previous index jobs", "+\t\tINDEX_MANAGER.performConcurrentJob(new DoNothing(), IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH, null);", "+\t\tINDEX_MANAGER.request(new Measuring(true/*start measuring*/));", "+\t\tfor (int i=0, length=ALL_PROJECTS.length; i<length; i++) {", "+\t\t\tINDEX_MANAGER.indexAll(ALL_PROJECTS[i].getProject());", "+\t\t}", "-\t\tstopMeasuring();", "-\t\tcommitMeasurements();", "-\t\tassertPerformance();", "+\t\tINDEX_MANAGER.request(new Measuring(false /*end measuring*/));", "+\t\tINDEX_MANAGER.performConcurrentJob(new DoNothing(), IJavaSearchConstants.WAIT_UNTIL_READY_TO_SEARCH, null);", "+\t\tassertEquals(\"Index manager should not have remaining jobs!\", 0, INDEX_MANAGER.awaitingJobsCount()); //$NON-NLS-1$"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "94ec92c9c45bd12c85630571e1a0352c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "8376377bee92e0d16cfa404c8d1e948dcf5be147", "commitAfterChange": "0a6cb9139841c5f6143bc94201bfcbd6024601de", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final String output) throws CoreException", "signatureAfterChange": " protected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final String projectOutput, final String[] sourceOutputs) throws CoreException", "diff": ["-protected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final String output) throws CoreException {", "+}", "+protected IJavaProject createJavaProject(final String projectName, final String[] sourceFolders, final String[] libraries, final String[] projects, final String projectOutput, final String[] sourceOutputs) throws CoreException {", "-\t\t\tint sourceLength = sourceFolders.length;", "-\t\t\tint libLength = libraries.length;", "-\t\t\tint projectLength = projects.length;", "+\t\t\tint sourceLength = sourceFolders == null ? 0 : sourceFolders.length;", "+\t\t\tint libLength = libraries == null ? 0 : libraries.length;", "+\t\t\tint projectLength = projects == null ? 0 : projects.length;", "-\t\t\t\tentries[i] = JavaCore.newSourceEntry(projectPath.append(sourcePath));", "+\t\t\t\tIPath outputPath = null;", "+\t\t\t\tif (sourceOutputs != null) {", "+\t\t\t\t\t// create out folder for source entry", "+\t\t\t\t\toutputPath = sourceOutputs[i] == null ? null : new Path(sourceOutputs[i]);", "+\t\t\t\t\tif (outputPath != null && outputPath.segmentCount() > 0) {", "+\t\t\t\t\t\tIFolder output = project.getFolder(outputPath);", "+\t\t\t\t\t\tif (!output.exists()) {", "+\t\t\t\t\t\t\toutput.create(true, true, null);", "+\t\t\t\t\t\t}", "+\t\t\t\t\t}", "+\t\t\t\t}", "+\t\t\t\t// create source entry", "+\t\t\t\tentries[i] = ", "+\t\t\t\t\tJavaCore.newSourceEntry(", "+\t\t\t\t\t\tprojectPath.append(sourcePath), ", "+\t\t\t\t\t\tnew IPath[0], ", "+\t\t\t\t\t\toutputPath == null ? null : projectPath.append(outputPath)", "+\t\t\t\t\t);", "-\t\t\t// create output folder", "-\t\t\tIPath outputPath = new Path(output);", "+\t\t\t// create project's output folder", "+\t\t\tIPath outputPath = new Path(projectOutput);"]}], "num": 22538}