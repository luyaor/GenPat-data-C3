{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "54faeaa41ad510681b18a29664c8ca99", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2d9a300ac0a512f50dbf452c652b2a2e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeDeclarationPattern.java", "commitBeforeChange": "5326f4925981afee39790c88bc133bd18e542033", "commitAfterChange": "19abccd2dad61a489aefa2e5ed58f88ee81afb0e", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " protected boolean matchIndexEntry()", "signatureAfterChange": " protected boolean matchIndexEntry()", "diff": ["-\t\t\t\treturn false;", "+\t\t\t\tif (!CharOperation.equals(this.decodedEnclosingTypeNames, ONE_ZERO_CHAR)) // if not a local or anonymous type", "+\t\t\t\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99d2ac226b59b286d63fdf360fc60a08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/Scope.java", "commitBeforeChange": "8e499c7ba695862747987f5930cb4781e109836a", "commitAfterChange": "8816a21753c2d607b8868597ac43f18ef7dd2d50", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 34, "signatureBeforeChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "signatureAfterChange": " \tpublic MethodBinding getImplicitMethod(char[] selector, TypeBinding[] argumentTypes, InvocationSite invocationSite)", "diff": ["-\t\t\t\t\t\t\t// answers closest approximation, may not check argumentTypes or visibility", "-\t\t\t\t\t\t\tpossible = findMethod(staticMethod.declaringClass, staticMethod.selector, argumentTypes, invocationSite);", "+\t\t\t\t\t\t\tif (CharOperation.equals(staticMethod.selector, selector))", "+\t\t\t\t\t\t\t\t// answers closest approximation, may not check argumentTypes or visibility", "+\t\t\t\t\t\t\t\tpossible = findMethod(staticMethod.declaringClass, staticMethod.selector, argumentTypes, invocationSite);"]}], "num": 39989}