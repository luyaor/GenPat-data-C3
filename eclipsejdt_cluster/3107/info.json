{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "5198d2f23a94b8ce67eda051ad48ca8f", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a614e36f86d3139460063663b696ee5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/LambdaExpressionsTest.java", "commitBeforeChange": "1a542c460a449efbae14d1057ba233825602248d", "commitAfterChange": "1ddc6abfe5d6cd8ad8c71d5100cfa53f4e84487a", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 80, "signatureBeforeChange": " public void test424589()", "signatureAfterChange": " public void test424589()", "diff": ["-\t\t\"\t           ^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Type mismatch: cannot convert from Collection<Object> to Set<Z>\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"3. ERROR in X.java (at line 11)\\n\" + ", "-\t\t\"\tSet<Z> x = foo(Set::new);\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "75f0f96af1cb49bdf0f67880e4aae71a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericsRegressionTest_1_8.java", "commitBeforeChange": "175caf4c91bc68c67c64b6e69e5b88fec75be023", "commitAfterChange": "2a90eeb9372f2a1a1f5e7c24d7c19363b361caf2", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " public void testBug424930c()", "signatureAfterChange": " public void testBug424930c()", "diff": ["-\t\t\"\treturn new X<>(() -> new ArrayDeque<>(dequeCapacity));\\n\" + ", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"The constructor X<S,Deque<S>>(() -> {}) is undefined\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 14)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7d5ebca7ae1a401a2caaed09ea067631", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullTypeAnnotationTest.java", "commitBeforeChange": "175caf4c91bc68c67c64b6e69e5b88fec75be023", "commitAfterChange": "2a90eeb9372f2a1a1f5e7c24d7c19363b361caf2", "methodNumberBeforeChange": 197, "methodNumberAfterChange": 197, "signatureBeforeChange": " public void test443467() throws Exception", "signatureAfterChange": " public void test443467() throws Exception", "diff": ["-\t\t// Note: we used to emit a duplicate message of 2. Fixed.", "-\t\t\"\tfilter2.map(p -> new Pair<>(updateToFile.get(p), p->ideFiles.get(p)));\\n\" + ", "-\t\t\"\t                 ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"The constructor Pair<Path,Object>(Path, (<no type> p) -> {}) is undefined\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in BuildIdeMain.java (at line 9)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "874bf57f05c8ea16171f210ae2b3c3d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "ef3c2078d9cee48378a186a3e9a6e61cb6a67acc", "commitAfterChange": "18c98a5a751096350077436fcf968eb63364ccb9", "methodNumberBeforeChange": 117, "methodNumberAfterChange": 117, "signatureBeforeChange": "               public void test113()", "signatureAfterChange": "               public void test113()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t@Annot( foo = new String(){} )\\n\" + ", "-\t\t\t\"\t              ^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"The value for annotation attribute Annot.foo must be a constant expression\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 4)\\n\" + ", "-\t\t\t\"\t@Annot( foo = new String(){} )\\n\" + ", "-\t\t\t\"\t                  ^^^^^^\\n\" + ", "-\t\t\t\"An anonymous class cannot subclass the final class String\\n\" + ", "-\t\t\t\"----------\\n\");", "+    \t\t\"----------\\n\" + ", "+    \t\t\"1. ERROR in X.java (at line 4)\\n\" + ", "+    \t\t\"\t@Annot( foo = new String(){} )\\n\" + ", "+    \t\t\"\t                  ^^^^^^\\n\" + ", "+    \t\t\"An anonymous class cannot subclass the final class String\\n\" + ", "+    \t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b06a09b13e295deb42cfa5197b69c3d0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeLambdaExpressionsTest.java", "commitBeforeChange": "d35306cb5dcf7e4ac666fd0505f3086f50241fb2", "commitAfterChange": "3284f738bbf7a2dbd90434dea313c8629bed5722", "methodNumberBeforeChange": 185, "methodNumberAfterChange": 185, "signatureBeforeChange": " public void test402219a()", "signatureAfterChange": " public void test402219a()", "diff": ["-\t\t\t\t\"\tnew X().goo((p1, p2) -> {});\\n\" + ", "-\t\t\t\t\"\t        ^^^\\n\" + ", "-\t\t\t\t\"The method goo(I) is ambiguous for the type X\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in X.java (at line 11)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b46c100a6b4108c1c9fb5ca6c9b162c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NegativeTypeAnnotationTest.java", "commitBeforeChange": "ac89e34b658454668afe2f1f4be9617e74cd6624", "commitAfterChange": "5ea91ed47e2e2277fa878fc631fcabfaf9ef89b3", "methodNumberBeforeChange": 77, "methodNumberAfterChange": 77, "signatureBeforeChange": "\r \tpublic void test066() throws Exception", "signatureAfterChange": "\r \tpublic void test066() throws Exception", "diff": ["-\t\t\t\t\"\tObject o = new X().new <String> @Marker X();\\n\" + \r", "-\t\t\t\t\"\t                                ^^^^^^^\\n\" + \r", "-\t\t\t\t\"Syntax error, type annotations are illegal here\\n\" + \r", "-\t\t\t\t\"----------\\n\" + \r", "-\t\t\t\t\"2. ERROR in X.java (at line 2)\\n\" + \r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d2ea9aea759aaa1c0adf3e3db2ec65f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/CastTest.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " public void test018()", "signatureAfterChange": " public void test018()", "diff": ["-\t\t\t\"\t\treturn (Y[]) Y.foo(new double[] {});\\n\" + ", "+\t\t\t\"\t\treturn (Y[]) Y.foo(new double[] {});\\n\" + // no cast warning until method is applicable", "-\t\t\"\treturn (Y[]) Y.foo(new double[] {});\\n\" + ", "-\t\t\"\t       ^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"Unnecessary cast to type Y[] for expression of type Y[]\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 8)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d935a9521d87069eda0ae97ade17a760", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/JavadocBugsTest.java", "commitBeforeChange": "3713e09eba9f685830154e0115a35b3f423e4800", "commitAfterChange": "b643998b38b3ce66cb5be62319a6d11497b1841e", "methodNumberBeforeChange": 157, "methodNumberAfterChange": 157, "signatureBeforeChange": " \tpublic void testBug153399e()", "signatureAfterChange": " \tpublic void testBug153399e()", "diff": ["-\t\t\t\t\"\t* {@value Invalid}\\n\" + ", "-\t\t\t\t\"\t    ^^^^^\\n\" + ", "-\t\t\t\t\"Javadoc: Unexpected duplicated tag @value\\n\" + ", "-\t\t\t\t\"----------\\n\" + ", "-\t\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e776498022c71a6a6f1eff18c2b0f96c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/AnnotationTest.java", "commitBeforeChange": "5ffa6d87d82bcd877c2c1c819145a0122be38cd2", "commitAfterChange": "712c3e08152ef0500611b85e95a98a332827c891", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tpublic void test010()", "signatureAfterChange": " \tpublic void test010()", "diff": ["-\t\t\t\"\tvalue();\\n\" + ", "-\t\t\t\"\t^^^^^\\n\" + ", "-\t\t\t\"Syntax error on token \\\"value\\\", Identifier expected after this token\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 3)\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "fd5a0277060c7bc16991644d36533d93", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ExpressionContextTests.java", "commitBeforeChange": "45ebc844082bfed2acc4b8a65a63db4a1c683431", "commitAfterChange": "718192aaf9b0c9c98eabd9c303872394bcd107d2", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 6, "signatureBeforeChange": " public void test004()", "signatureAfterChange": " public void test004()", "diff": ["-\t\t\t\"\tObject p = (X[] & Serializable & Cloneable) new X[0];\\n\" + ", "-\t\t\t\"\t            ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\t\"Arrays are not allowed in intersection cast operator\\n\" + ", "-\t\t\t\"----------\\n\" + ", "-\t\t\t\"2. ERROR in X.java (at line 10)\\n\" + "]}], "num": 3107}