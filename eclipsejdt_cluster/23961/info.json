{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "dce20175527a1653b49954230dbda3cd", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ef491bc142fc9933014f1374f5c7f28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/BatchCompilerTest.java", "commitBeforeChange": "939026bc82336aff64b71f4dbbdc38f50f6da545", "commitAfterChange": "6467f6dd1cb134689a9fdd8d844169d55dd11609", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": "  \tprivate String getLibraryClasses()", "signatureAfterChange": "  private String getLibraryClasses()", "diff": ["-\tprivate String getLibraryClasses() {", "-\t\tif (Util.isMacOS()) {", "-\t\t\treturn JRE_HOME_DIR + \"/../Classes/classes.jar\"; ", "+private String getLibraryClasses() {", "+\tString[] paths = Util.getJavaClassLibs();", "+\tStringBuffer buffer = new StringBuffer();", "+\tfor (int i = 0, max = paths.length; i < max; i++) {", "+\t\tif (i != 0) {", "+\t\t\tbuffer.append(File.pathSeparatorChar);", "-\t\treturn JRE_HOME_DIR + \"/lib/rt.jar\";", "+\t\tbuffer.append(paths[i]);", "+\treturn String.valueOf(buffer);", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1b9002d77906397c3824258c4f0e639", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavadocCompletionModelTest.java", "commitBeforeChange": "8c9e171f64b2b088eda3049713163ec0a16b0a05", "commitAfterChange": "cdc11c6e72240b1766f8f5810b1fb669da307c66", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tprotected String displayString(String toPrint, int indent)", "signatureAfterChange": " \tprotected String displayString(String toPrint, int indent)", "diff": ["-\t\t\t\t\tswitch (relevance) {", "-\t\t\t\t\t\tcase JAVADOC_RELEVANCE:", "-\t\t\t\t\t\t\tbuffer.append(\"JAVADOC_RELEVANCE+\\\"\");", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tcase JAVADOC_RELEVANCE+R_INLINE_TAG:", "-\t\t\t\t\t\t\tbuffer.append(\"(JAVADOC_RELEVANCE+R_INLINE_TAG)+\\\"\");", "-\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\t\tdefault:", "-\t\t\t\t\t\t\tif (relevance >= 55) {", "-\t\t\t\t\t\t\t\tbuffer.append(\"(\"+(relevance-R_INLINE_TAG)+\"+R_INLINE_TAG)+\\\"\");", "-\t\t\t\t\t\t\t} else {", "-\t\t\t\t\t\t\t\tbuffer.append('\"');", "-\t\t\t\t\t\t\t\tbuffer.append(relevance);", "-\t\t\t\t\t\t\t}", "-\t\t\t\t\t\t\tbreak;", "+\t\t\t\t\tint length = RELEVANCES.length;", "+\t\t\t\t\tboolean found = false;", "+\t\t\t\t\tfor (int r=0; !found && r<length; r++) {", "+\t\t\t\t\t\tif (RELEVANCES[r] == relevance) {", "+\t\t\t\t\t\t\tbuffer.append(RELEVANCES_NAMES[r]);", "+\t\t\t\t\t\t\tbuffer.append(\"+\\\"\");", "+\t\t\t\t\t\t\tfound = true;", "+\t\t\t\t\t\t}", "-//\t\t\t\t\tbuffer.append('}');", "+\t\t\t\t\tif (!found) {", "+\t\t\t\t\t\tbuffer.append('\"');", "+\t\t\t\t\t\tbuffer.append(relevance);", "+\t\t\t\t\t}"]}], "num": 23961}