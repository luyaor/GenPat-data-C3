{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "09eb8fb391f9ea1c497311733e97ff7b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "247e76ef224e2770d46893edc76257a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/index/DiskIndex.java", "commitBeforeChange": "0747fdf20cedad4937e8c04e2421862591a6a9c9", "commitAfterChange": "8ad920763747620475fe3a423609a18eb60eeab8", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " private HashtableOfObject addQueryResult(HashtableOfObject results, char[] word, CategoryTable wordsToDocNumbers, MemoryIndex memoryIndex) throws IOException", "signatureAfterChange": " private HashtableOfObject addQueryResult(HashtableOfObject results, char[] word, CategoryTable wordsToDocNumbers, MemoryIndex memoryIndex, boolean prevResults) throws IOException", "diff": ["-private HashtableOfObject addQueryResult(HashtableOfObject results, char[] word, CategoryTable wordsToDocNumbers, MemoryIndex memoryIndex) throws IOException {", "+private HashtableOfObject addQueryResult(HashtableOfObject results, char[] word, CategoryTable wordsToDocNumbers, MemoryIndex memoryIndex, boolean prevResults) throws IOException {", "-\tEntryResult result = (EntryResult) results.get(word);", "+\tEntryResult result = prevResults ? (EntryResult) results.get(word) : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f3722210cce6b0c3a4ab738318873ae", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "f39e3e40a8fb480e71912552d3976827814676e5", "commitAfterChange": "cae1ac0076053182a150a9a6566741ab9c075217", "methodNumberBeforeChange": 45, "methodNumberAfterChange": 45, "signatureBeforeChange": "  \t\tprivate ClasspathChange setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus)", "signatureAfterChange": "  \t\tprivate ClasspathChange setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus, boolean addClasspathChange)", "diff": ["-\t\tprivate ClasspathChange setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus) {", "-\t\t\tClasspathChange classpathChange = addClasspathChange();", "+\t\tprivate ClasspathChange setClasspath(IClasspathEntry[] newRawClasspath, IPath newOutputLocation, IJavaModelStatus newRawClasspathStatus, IClasspathEntry[] newResolvedClasspath, Map newRootPathToRawEntries, Map newRootPathToResolvedEntries, IJavaModelStatus newUnresolvedEntryStatus, boolean addClasspathChange) {", "+\t\t\tClasspathChange classpathChange = addClasspathChange ? addClasspathChange() : null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b417f84c5289ed53d4f5d77fefa3f806", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "a7a4bb422b80975020031dc2489c1287582f5bac", "commitAfterChange": "a90f0807d0eec8879b31dc133746e8ac20dd17d7", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic static CompilationUnit convertCompilationUnit( \t\tint level, \t\torg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnitDeclaration, \t\tchar[] source, \t\tMap options, \t\tIProgressMonitor monitor)", "signatureAfterChange": " \tpublic static CompilationUnit convertCompilationUnit( \t\tint level, \t\torg.eclipse.jdt.internal.compiler.ast.CompilationUnitDeclaration compilationUnitDeclaration, \t\tchar[] source, \t\tMap options, \t\tboolean isResolved, \t\tIProgressMonitor monitor)", "diff": ["+\t\tboolean isResolved,", "-\t\tASTConverter converter = new ASTConverter(options, true, monitor);", "+\t\tASTConverter converter = new ASTConverter(options, isResolved, monitor);", "-\t\tBindingResolver resolver = new DefaultBindingResolver(compilationUnitDeclaration.scope);", "+\t\tBindingResolver resolver = isResolved ? new DefaultBindingResolver(compilationUnitDeclaration.scope) : new BindingResolver();"]}], "num": 10295}