{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "794b351393728c1ea9f3c903f55fb9e7", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28ab261f3547e446937923ee330aad19", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AnnotationValueConversionTests.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\") \tpublic void testByteConversion() throws Exception", "signatureAfterChange": " \t \t@SuppressWarnings(\"nls\") \tpublic void testByteConversion() throws Exception", "diff": ["-\t */", "-\t\t\t\"@Test.Annotation(b=(byte)0,\\n\" +", "-\t\t\t\"\t\t\t\t  s=(byte)0,\\n\" + ", "-\t\t\t\"\t\t\t\t  i=(byte)0,\\n\" +", "-\t\t\t\"                 l=(byte)0,\\n\" +", "-\t\t\t\"\t \t \t      f=(byte)0,\\n\" +", "-\t\t\t\"\t\t\t      d=(byte)0,\\n\" +", "-\t\t\t\"\t\t\t\t  c=(byte)0)\\n\\n\" + ", "-\t\t\t\"public class Test {\\n\" +", "-\t\t\t\"\tpublic @interface Annotation\\n\" +", "-\t\t\t\"\t{\\n\" +", "-\t\t\t\"\t\tchar c();  \\n\" +", "-\t\t\t\"       byte b();  \\n\" +", "-\t\t\t\"\t\tshort s(); \\n\" +", "-\t\t\t\"\t\tint i();   \\n\" +", "-\t\t\t\"       long l();  \\n\" +", "-\t\t\t\"\t\tfloat f(); \\n\" +", "-\t\t\t\"\t\tdouble d();\\n\" +", "-\t\t\t\"\t}\\n\" +\t", "-\t\t\t\"}\\n\";", "+\t\t\t\"import org.eclipse.jdt.apt.tests.annotations.valueconversion.Annotation;\\n\" +", "+\t\t\t\"@Annotation(z=(byte)49,\\n\" +", "+\t\t\t\"\t\t\t\t  b=(byte)49,\\n\" +", "+\t\t\t\"\t\t\t\t  s=(byte)49,\\n\" + ", "+\t\t\t\"\t\t\t\t  i=(byte)49,\\n\" +", "+\t\t\t\"                 l=(byte)49,\\n\" +", "+\t\t\t\"\t \t \t      f=(byte)49,\\n\" +", "+\t\t\t\"\t\t\t      d=(byte)49,\\n\" +", "+\t\t\t\"\t\t\t\t  c=(byte)49)\\n\\n\" + ", "+\t\t\t\"public class Test {}\\n\";", "-\t\tenv.addClass( ", "-\t\t\t\tsrcRoot, ", "-\t\t\t\t\"sample\", ", "-\t\t\t\t\"Test\",", "-\t\t\t\tcontent );", "+\t\tIPath testPath = env.addClass( srcRoot, \"sample\", \"Test\", content );", "-\t\texpectingNoProblems();", "+\t\texpectingSpecificProblemsFor(testPath, new Problem[]{", "+\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from byte to boolean\", testPath),", "+\t\t\t\tnew Problem(\"\", \"type mismatch for memeber z expected java.lang.Boolean but got java.lang.Byte\", testPath)", "+\t\t});", "+\t\t", "+\t\tassertEquals(ProcessorTestStatus.NO_ERRORS, ProcessorTestStatus.getErrors());", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "715a4951a5a2c5e9a57efc3890f10d97", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.tests/src/org/eclipse/jdt/apt/tests/AnnotationValueConversionTests.java", "commitBeforeChange": "a6fb7155fd890e70fc93ff099a2bfa78beffa3e9", "commitAfterChange": "dade23c0ca1cb5b996dfae1d1cfc189d06d41a6f", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t@SuppressWarnings(\"nls\") \tpublic void testShortConversion() throws Exception", "signatureAfterChange": " \t@SuppressWarnings(\"nls\") \tpublic void testShortConversion() throws Exception", "diff": ["-\t\t\t\"@Test.Annotation(b=(short)0,\\n\" +", "-\t\t\t\"\t\t\t\t  s=(short)0,\\n\" + ", "-\t\t\t\"\t\t\t\t  i=(short)0,\\n\" +", "-\t\t\t\"                 l=(short)0,\\n\" +", "-\t\t\t\"\t \t \t      f=(short)0,\\n\" +", "-\t\t\t\"\t\t\t      d=(short)0,\\n\" +", "-\t\t\t\"\t\t\t\t  c=(short)0)\\n\\n\" + ", "-\t\t\t\"public class Test {\\n\" +", "-\t\t\t\"\tpublic @interface Annotation\\n\" +", "-\t\t\t\"\t{\\n\" +", "-\t\t\t\"\t\tchar c();  \\n\" +", "-\t\t\t\"       byte b();  \\n\" +", "-\t\t\t\"\t\tshort s(); \\n\" +", "-\t\t\t\"\t\tint i();   \\n\" +", "-\t\t\t\"       long l();  \\n\" +", "-\t\t\t\"\t\tfloat f(); \\n\" +", "-\t\t\t\"\t\tdouble d();\\n\" +", "-\t\t\t\"\t}\\n\" +\t", "-\t\t\t\"}\\n\";", "+\t\t\t\"import org.eclipse.jdt.apt.tests.annotations.valueconversion.Annotation;\\n\" +", "+\t\t\t\"@Annotation(z=(short)49,\\n\" +", "+\t\t\t\"\t\t\t\t  b=(short)49,\\n\" +", "+\t\t\t\"\t\t\t\t  s=(short)49,\\n\" + ", "+\t\t\t\"\t\t\t\t  i=(short)49,\\n\" +", "+\t\t\t\"                 l=(short)49,\\n\" +", "+\t\t\t\"\t \t \t      f=(short)49,\\n\" +", "+\t\t\t\"\t\t\t      d=(short)49,\\n\" +", "+\t\t\t\"\t\t\t\t  c=(short)49)\\n\\n\" + ", "+\t\t\t\"public class Test {}\\n\";", "-\t\tenv.addClass( ", "-\t\t\t\tsrcRoot, ", "-\t\t\t\t\"sample\", ", "-\t\t\t\t\"Test\",", "-\t\t\t\tcontent );", "+\t\tIPath testPath = env.addClass( srcRoot, \"sample\", \"Test\", content );", "-\t\texpectingNoProblems();", "+\t\texpectingSpecificProblemsFor(testPath, new Problem[]{", "+\t\t\t\tnew Problem(\"\", \"Type mismatch: cannot convert from short to boolean\", testPath),", "+\t\t\t\tnew Problem(\"\", \"type mismatch for memeber z expected java.lang.Boolean but got java.lang.Short\", testPath)", "+\t\t});", "+\t\t", "+\t\tassertEquals(ProcessorTestStatus.NO_ERRORS, ProcessorTestStatus.getErrors());", "+\t}"]}], "num": 53859}