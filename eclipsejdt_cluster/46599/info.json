{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "13d143f9ecb3af3b13d9047b34014286", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "42efd9231efcfde14ddabaa036626c5f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "888495667591cfcd01c2ab6bfb5f765a394f5692", "commitAfterChange": "e02e0982842551ac15d0e2a44536d74251fdb4d1", "methodNumberBeforeChange": 44, "methodNumberAfterChange": 44, "signatureBeforeChange": " \tprotected Object openWhenClosed(Object info, IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tprotected Object openWhenClosed(Object info, IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t\t\t// close any buffer that was opened for the openable parent", "-\t\t\t\tIterator iterator = newElements.keySet().iterator();", "-\t\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\t\tIJavaElement element = (IJavaElement)iterator.next();", "-\t\t\t\t\tif (element instanceof Openable) {", "-\t\t\t\t\t\t((Openable)element).closeBuffer();", "-\t\t\t\t\t}", "-\t\t\t\t}", "+\t\t\t\t// close the buffer that was opened for the openable parent", "+\t\t\t    // close only the openable's buffer (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=62854)", "+\t\t\t    Openable openable = (Openable) getOpenable();", "+\t\t\t    if (newElements.containsKey(openable)) {", "+\t\t\t        openable.closeBuffer();", "+\t\t\t    }"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c592839c729306bbcbf901b1f463e8c4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElement.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tpublic Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "signatureAfterChange": " \tpublic Object getElementInfo(IProgressMonitor monitor) throws JavaModelException", "diff": ["-\t\t", "-\t\tboolean hadTemporaryCache = manager.hasTemporaryCache();", "-\t\ttry {", "-\t\t\tHashMap newElements = manager.getTemporaryCache();", "-\t\t\tinfo = openWhenClosed(newElements, monitor);", "-\t\t\tif (info == null) {", "-\t\t\t\t// close any buffer that was opened for the new elements", "-\t\t\t\tIterator iterator = newElements.keySet().iterator();", "-\t\t\t\twhile (iterator.hasNext()) {", "-\t\t\t\t\tIJavaElement element = (IJavaElement)iterator.next();", "-\t\t\t\t\tif (element instanceof Openable) {", "-\t\t\t\t\t\t((Openable)element).closeBuffer();", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tthrow newNotPresentException();", "-\t\t\t}", "-\t\t\tif (!hadTemporaryCache) {", "-\t\t\t\tmanager.putInfos(this, newElements);", "-\t\t\t}", "-\t\t} finally {", "-\t\t\tif (!hadTemporaryCache) {", "-\t\t\t\tmanager.resetTemporaryCache();", "-\t\t\t}", "-\t\t}", "-", "-\t\treturn info;", "+\t\treturn openWhenClosed(createElementInfo(), monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dfc19bb7384ca05f0ccc1938c1cc87cd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/Openable.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 23, "methodNumberAfterChange": 22, "signatureBeforeChange": " public void makeConsistent(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " public void makeConsistent(IProgressMonitor monitor) throws JavaModelException", "diff": ["-public void makeConsistent(IProgressMonitor pm) throws JavaModelException {", "+public void makeConsistent(IProgressMonitor monitor) throws JavaModelException {", "-\t// create a new info and make it the current info", "-\tgetElementInfo(pm);", "+\tboolean hadTemporaryCache = manager.hasTemporaryCache();", "+\ttry {", "+\t\tHashMap newElements = manager.getTemporaryCache();", "+\t\topenWhenClosed(newElements, monitor);", "+\t\tif (newElements.get(this) == null) {", "+\t\t\t// close any buffer that was opened for the new elements", "+\t\t\tIterator iterator = newElements.keySet().iterator();", "+\t\t\twhile (iterator.hasNext()) {", "+\t\t\t\tIJavaElement element = (IJavaElement)iterator.next();", "+\t\t\t\tif (element instanceof Openable) {", "+\t\t\t\t\t((Openable)element).closeBuffer();", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tthrow newNotPresentException();", "+\t\t}", "+\t\tif (!hadTemporaryCache) {", "+\t\t\tmanager.putInfos(this, newElements);", "+\t\t}", "+\t} finally {", "+\t\tif (!hadTemporaryCache) {", "+\t\t\tmanager.resetTemporaryCache();", "+\t\t}", "+\t}"]}], "num": 46599}