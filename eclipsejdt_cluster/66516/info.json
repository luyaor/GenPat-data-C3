{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4d207b17345d1ba64f668c57a1656291", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "787b70842e9d9ab7f6a3a832854d0422", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "ff3d786f8b733e34cd64f8ef3efff230a2dbff42", "commitAfterChange": "d8e17e252326ade78baaea3eb05d18d16eaf07ae", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprotected void addClasspathDeltas( \t\tIPackageFragmentRoot[] roots, \t\tint flag, \t\tJavaElementDelta delta)", "signatureAfterChange": " \tprotected void addClasspathDeltas( \t\tIPackageFragmentRoot[] roots, \t\tint flag, \t\tJavaElementDelta delta)", "diff": ["-\t\t\t\tif (root instanceof JarPackageFragmentRoot) {", "-\t\t\t\t\t((JarPackageFragmentRoot) root).setSourceAttachmentProperty(null);// loose info - will be recomputed", "-\t\t\t\t}", "+\t\t\t\t((PackageFragmentRoot) root).setSourceAttachmentProperty(null);// loose info - will be recomputed"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e8343660f1495f3676827647744fdc4", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/ASTConverter.java", "commitBeforeChange": "964d2b4d225adb16891c1f3f43547e1047f89000", "commitAfterChange": "22fa73dc034dca717547a9f3bcacb57ec44d92ea", "methodNumberBeforeChange": 107, "methodNumberAfterChange": 107, "signatureBeforeChange": "  \tprivate BlockScope lookupScope(ASTNode node)", "signatureAfterChange": "  \tprivate BlockScope lookupScope(ASTNode node)", "diff": ["-\t\t\tif (currentNode instanceof AbstractTypeDeclaration) {", "-\t\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "-\t\t\t\tif ((fieldDeclaration.getModifiers() & Modifier.STATIC) != 0) {", "-\t\t\t\t\treturn typeDecl.staticInitializerScope;", "-\t\t\t\t} else {", "-\t\t\t\t\treturn typeDecl.initializerScope;", "-\t\t\t\t}", "+\t\t\torg.eclipse.jdt.internal.compiler.ast.TypeDeclaration typeDecl = (org.eclipse.jdt.internal.compiler.ast.TypeDeclaration) this.ast.getBindingResolver().getCorrespondingNode(currentNode);", "+\t\t\tif ((fieldDeclaration.getModifiers() & Modifier.STATIC) != 0) {", "+\t\t\t\treturn typeDecl.staticInitializerScope;", "+\t\t\t} else {", "+\t\t\t\treturn typeDecl.initializerScope;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ddf4074fac27af28f6e7a126f6eb391a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "signatureAfterChange": " public void acceptLocalMethod(MethodBinding methodBinding)", "diff": ["-\t\tif (methodBinding instanceof ParameterizedMethodBinding) {", "-\t\t\tIMethod method = (IMethod) res;", "-\t\t\t", "-\t\t\tchar[] uniqueKey = methodBinding.computeUniqueKey();", "-\t\t\tif(method.isBinary()) {", "-\t\t\t\tres = new ParameterizedBinaryMethod(", "-\t\t\t\t\t\t(JavaElement)res.getParent(),", "-\t\t\t\t\t\tmethod.getElementName(),", "-\t\t\t\t\t\tmethod.getParameterTypes(), ", "-\t\t\t\t\t\tnew String(uniqueKey));", "-\t\t\t} else {", "-\t\t\t\tres = new ParameterizedSourceMethod(", "-\t\t\t\t\t\t(JavaElement)res.getParent(),", "-\t\t\t\t\t\tmethod.getElementName(),", "-\t\t\t\t\t\tmethod.getParameterTypes(), ", "-\t\t\t\t\t\tnew String(uniqueKey));", "-\t\t\t}", "+\t\tIMethod method = (IMethod) res;", "+\t\t", "+\t\tchar[] uniqueKey = methodBinding.computeUniqueKey();", "+\t\tif(method.isBinary()) {", "+\t\t\tres = new ResolvedBinaryMethod(", "+\t\t\t\t\t(JavaElement)res.getParent(),", "+\t\t\t\t\tmethod.getElementName(),", "+\t\t\t\t\tmethod.getParameterTypes(), ", "+\t\t\t\t\tnew String(uniqueKey));", "+\t\t} else {", "+\t\t\tres = new ResolvedSourceMethod(", "+\t\t\t\t\t(JavaElement)res.getParent(),", "+\t\t\t\t\tmethod.getElementName(),", "+\t\t\t\t\tmethod.getParameterTypes(), ", "+\t\t\t\t\tnew String(uniqueKey));"]}], "num": 66516}