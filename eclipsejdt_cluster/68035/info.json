{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "024b6bd5aab035c9ab38a544cfe5e641", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a4973730d7d5e5ce3745ee12cdf7e00f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/IncrementalImageBuilder.java", "commitBeforeChange": "3fa437321fe88b141d60a98c3b39cea46c7fbc44", "commitAfterChange": "ac6a9f56760bba7aec9ca8548c00a789a95fdc11", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": "\r \r protected void findAffectedSourceFiles(IResourceDelta binaryDelta, int outputFolderSegmentCount)", "signatureAfterChange": "\r \r protected void findAffectedSourceFiles(IResourceDelta binaryDelta, int outputFolderSegmentCount)", "diff": ["-\tIPath location = binaryDelta.getResource().getLocation();\r", "-\tString extension = location.getFileExtension();\r", "-\tif (extension == null) { // no extension indicates a folder\r", "-\t\tswitch (binaryDelta.getKind()) {\r", "-\t\t\tcase IResourceDelta.ADDED :\r", "-\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "-\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Add dependents of added package \" + addedPackagePath); //$NON-NLS-1$\r", "-\t\t\t\taddDependentsOf(addedPackagePath, false);\r", "+\tIResource resource = binaryDelta.getResource();\r", "+\tIPath location = resource.getLocation();\r", "+\tswitch(resource.getType()) {\r", "+\t\tcase IResource.PROJECT :\r", "+\t\tcase IResource.FOLDER :\r", "+\t\t\tswitch (binaryDelta.getKind()) {\r", "+\t\t\t\tcase IResourceDelta.ADDED :\r", "+\t\t\t\t\tIPath addedPackagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "+\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\tSystem.out.println(\"Add dependents of added package \" + addedPackagePath); //$NON-NLS-1$\r", "+\t\t\t\t\taddDependentsOf(addedPackagePath, false);\r", "+\t\t\t\t\treturn;\r", "+\t\t\t\tcase IResourceDelta.REMOVED :\r", "+\t\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "+\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed package \" + removedPackagePath); //$NON-NLS-1$\r", "+\t\t\t\t\taddDependentsOf(removedPackagePath, false);\r", "+\t\t\t\t\treturn;\r", "+\t\t\t\tcase IResourceDelta.CHANGED :\r", "+\t\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();\r", "+\t\t\t\t\tfor (int i = 0, length = children.length; i < length; ++i)\r", "+\t\t\t\t\t\tfindAffectedSourceFiles(children[i], outputFolderSegmentCount);\r", "+\t\t\t}\r", "+\t\t\treturn;\r", "+\t\tcase IResource.FILE :\r", "+\t\t\tif (JavaBuilder.CLASS_EXTENSION.equalsIgnoreCase(location.getFileExtension())) {\r", "+\t\t\t\tIPath typePath = location.removeFirstSegments(outputFolderSegmentCount).removeFileExtension();\r", "+\t\t\t\tswitch (binaryDelta.getKind()) {\r", "+\t\t\t\t\tcase IResourceDelta.ADDED :\r", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of added class file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\taddDependentsOf(typePath, false);\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tcase IResourceDelta.REMOVED :\r", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of removed class file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\taddDependentsOf(typePath, false);\r", "+\t\t\t\t\t\treturn;\r", "+\t\t\t\t\tcase IResourceDelta.CHANGED :\r", "+\t\t\t\t\t\tif ((binaryDelta.getFlags() & IResourceDelta.CONTENT) == 0)\r", "+\t\t\t\t\t\t\treturn; // skip it since it really isn't changed\r", "+\t\t\t\t\t\tif (JavaBuilder.DEBUG)\r", "+\t\t\t\t\t\t\tSystem.out.println(\"Add dependents of changed class file \" + typePath); //$NON-NLS-1$\r", "+\t\t\t\t\t\taddDependentsOf(typePath, false);\r", "+\t\t\t\t}\r", "-\t\t\tcase IResourceDelta.REMOVED :\r", "-\t\t\t\tIPath removedPackagePath = location.removeFirstSegments(outputFolderSegmentCount);\r", "-\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Add dependents of removed package \" + removedPackagePath); //$NON-NLS-1$\r", "-\t\t\t\taddDependentsOf(removedPackagePath, false);\r", "-\t\t\t\treturn;\r", "-\t\t\tcase IResourceDelta.CHANGED :\r", "-\t\t\t\tIResourceDelta[] children = binaryDelta.getAffectedChildren();\r", "-\t\t\t\tfor (int i = 0, length = children.length; i < length; ++i)\r", "-\t\t\t\t\tfindAffectedSourceFiles(children[i], outputFolderSegmentCount);\r", "-\t\t\t\treturn;\r", "-\t\t}\r", "-\t} else if (JavaBuilder.CLASS_EXTENSION.equalsIgnoreCase(extension)) {\r", "-\t\tIPath typePath = location.removeFirstSegments(outputFolderSegmentCount).removeFileExtension();\r", "-\t\tswitch (binaryDelta.getKind()) {\r", "-\t\t\tcase IResourceDelta.ADDED :\r", "-\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Add dependents of added class file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\taddDependentsOf(typePath, false);\r", "-\t\t\t\treturn;\r", "-\t\t\tcase IResourceDelta.REMOVED :\r", "-\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Add dependents of removed class file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\taddDependentsOf(typePath, false);\r", "-\t\t\t\treturn;\r", "-\t\t\tcase IResourceDelta.CHANGED :\r", "-\t\t\t\tif ((binaryDelta.getFlags() & IResourceDelta.CONTENT) == 0)\r", "-\t\t\t\t\treturn; // skip it since it really isn't changed\r", "-\t\t\t\tif (JavaBuilder.DEBUG)\r", "-\t\t\t\t\tSystem.out.println(\"Add dependents of changed class file \" + typePath); //$NON-NLS-1$\r", "-\t\t\t\taddDependentsOf(typePath, false);\r", "-\t\t\t\treturn;\r", "-\t\t}\r", "+\t\t\t}\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c4e22ed58565a9c5779ce35b8166dde2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/newbuilder/State.java", "commitBeforeChange": "3fa437321fe88b141d60a98c3b39cea46c7fbc44", "commitAfterChange": "ac6a9f56760bba7aec9ca8548c00a789a95fdc11", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 10, "signatureBeforeChange": "\r \r void removePackage(IResourceDelta sourceDelta)", "signatureAfterChange": "\r \r void removePackage(IResourceDelta sourceDelta)", "diff": ["-\tIPath location = sourceDelta.getResource().getLocation();\r", "-\tString extension = location.getFileExtension();\r", "-\tif (extension == null) { // no extension indicates a folder\r", "-\t\tIResourceDelta[] children = sourceDelta.getAffectedChildren();\r", "-\t\tfor (int i = 0, length = children.length; i < length; ++i)\r", "-\t\t\tremovePackage(children[i]);\r", "-\t} else if (JavaBuilder.JAVA_EXTENSION.equalsIgnoreCase(extension)) {\r", "-\t\tremove(location);\r", "+\tIResource resource = sourceDelta.getResource();\r", "+\tswitch(resource.getType()) {\r", "+\t\tcase IResource.FOLDER :\r", "+\t\t\tIResourceDelta[] children = sourceDelta.getAffectedChildren();\r", "+\t\t\tfor (int i = 0, length = children.length; i < length; ++i)\r", "+\t\t\t\tremovePackage(children[i]);\r", "+\t\t\treturn;\r", "+\t\tcase IResource.FILE :\r", "+\t\t\tIPath location = resource.getLocation();\r", "+\t\t\tif (JavaBuilder.JAVA_EXTENSION.equalsIgnoreCase(location.getFileExtension()))\r", "+\t\t\t\tremove(location);\r", "+\t}\r", "+}\r"]}], "num": 68035}