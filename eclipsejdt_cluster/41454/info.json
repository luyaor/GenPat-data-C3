{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "36ec3353cf64dc5b70d419b3afee5836", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0a8596ff26d6fb8a4179740269375c28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "signatureAfterChange": "  public void generatePostIncrement(BlockScope currentScope, CodeStream codeStream, CompoundAssignment postIncrement, boolean valueRequired)", "diff": ["+\tboolean isFirst = lastFieldBinding == this.binding", "+\t\t&& (this.indexOfFirstFieldBinding == 1 || lastFieldBinding.declaringClass == currentScope.enclosingReceiverType())", "+\t\t&& this.otherBindings == null; // could be dup: next.next.next", "+\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, lastFieldBinding, getFinalReceiverType(), isFirst);\t\t\t", "-\t\t\tcodeStream.getstatic(lastFieldBinding);", "+\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getstatic, lastFieldBinding, constantPoolDeclaringClass);", "-\t\t\tcodeStream.invoke(Opcodes.OPC_invokestatic, accessor, null /* default declaringClass */);", "+\t\t\tcodeStream.invoke(Opcodes.OPC_invokestatic, accessor, constantPoolDeclaringClass);", "-\t\t\tcodeStream.getfield(lastFieldBinding);", "+\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getfield, lastFieldBinding, null /* default declaringClass */);", "-\tTypeBinding requiredGenericCast = getGenericCast(this.otherCodegenBindings == null ? 0 : this.otherCodegenBindings.length);", "+\tTypeBinding requiredGenericCast = getGenericCast(this.otherBindings == null ? 0 : this.otherBindings.length);", "-\t\t\tif ((operandType == TypeBinding.LONG)", "-\t\t\t\t|| (operandType == TypeBinding.DOUBLE)) {", "-\t\t\t\tcodeStream.dup2();", "-\t\t\t} else {", "-\t\t\t\tcodeStream.dup();", "-\t\t\t}", "+\t\t\tswitch (operandType.id) {", "+\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\tcodeStream.dup2();", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault:", "+\t\t\t\t\tcodeStream.dup();", "+\t\t\t\t\tbreak;", "+\t\t\t}\t\t\t", "-\t\t\tif ((operandType == TypeBinding.LONG)", "-\t\t\t\t|| (operandType == TypeBinding.DOUBLE)) {", "-\t\t\t\tcodeStream.dup2_x1();", "-\t\t\t} else {", "-\t\t\t\tcodeStream.dup_x1();", "-\t\t\t}", "+\t\t\tswitch (operandType.id) {", "+\t\t\t\tcase TypeIds.T_long :", "+\t\t\t\tcase TypeIds.T_double :", "+\t\t\t\t\tcodeStream.dup2_x1();", "+\t\t\t\t\tbreak;", "+\t\t\t\tdefault:", "+\t\t\t\t\tcodeStream.dup_x1();", "+\t\t\t\t\tbreak;", "+\t\t\t}\t\t\t", "-\tfieldStore(codeStream, lastFieldBinding, this.syntheticWriteAccessor, false);", "+\tfieldStore(currentScope, codeStream, lastFieldBinding, this.syntheticWriteAccessor, getFinalReceiverType(), false /*implicit this*/, false);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1446737820f80e9b054e5b9031cfdd8d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedNameReference.java", "commitBeforeChange": "5dd0de42e39b5ae6b6ed70261ede6298820c064c", "commitAfterChange": "2d1b668da982fab23d85fda225f2e9df3073c2e1", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  public void generateCompoundAssignment( \tBlockScope currentScope, \tCodeStream codeStream, \tExpression expression, \tint operator, \tint assignmentImplicitConversion, \tboolean valueRequired)", "signatureAfterChange": "  public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired)", "diff": ["-public void generateCompoundAssignment(", "-\tBlockScope currentScope,", "-\tCodeStream codeStream,", "-\tExpression expression,", "-\tint operator,", "-\tint assignmentImplicitConversion,", "-\tboolean valueRequired) {", "-", "+public void generateCompoundAssignment(BlockScope currentScope, CodeStream codeStream, Expression expression, int operator, int assignmentImplicitConversion, boolean valueRequired) {", "-\tSyntheticMethodBinding accessor =", "-\t\tthis.syntheticReadAccessors == null", "-\t\t\t? null", "-\t\t\t: this.syntheticReadAccessors[this.syntheticReadAccessors.length - 1];", "+\tboolean isFirst = lastFieldBinding == this.binding", "+\t\t&& (this.indexOfFirstFieldBinding == 1 || lastFieldBinding.declaringClass == currentScope.enclosingReceiverType())", "+\t\t&& this.otherBindings == null; // could be dup: next.next.next", "+\tTypeBinding constantPoolDeclaringClass = CodeStream.getConstantPoolDeclaringClass(currentScope, lastFieldBinding, getFinalReceiverType(), isFirst);\t\t\t", "+\tSyntheticMethodBinding accessor = this.syntheticReadAccessors == null ? null : this.syntheticReadAccessors[this.syntheticReadAccessors.length - 1];", "-\t\t\tcodeStream.getstatic(lastFieldBinding);", "+\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getstatic, lastFieldBinding, constantPoolDeclaringClass);", "-\t\t\tcodeStream.getfield(lastFieldBinding);", "+\t\t\tcodeStream.fieldAccess(Opcodes.OPC_getfield, lastFieldBinding, constantPoolDeclaringClass);", "-\t\t\tTypeBinding requiredGenericCast = getGenericCast(this.otherCodegenBindings == null ? 0 : this.otherCodegenBindings.length);", "+\t\t\tTypeBinding requiredGenericCast = getGenericCast(this.otherBindings == null ? 0 : this.otherBindings.length);", "-\tfieldStore(codeStream, lastFieldBinding, this.syntheticWriteAccessor, valueRequired);", "+\tfieldStore(currentScope, codeStream, lastFieldBinding, this.syntheticWriteAccessor, getFinalReceiverType(), false /*implicit this*/, valueRequired);"]}], "num": 41454}