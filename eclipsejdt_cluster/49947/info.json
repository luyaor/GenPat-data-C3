{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7c26c947e10e1abdcdd5fe867bfd28ee", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cf7549e4ad6567a481995d0f2857b922", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/model/Factory.java", "commitBeforeChange": "b4d3f967db596bbe85e51e090676967f450c3332", "commitAfterChange": "113e50f3b2434cfc22223205b13f6ae426427d86", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tpublic static Set<Modifier> getModifiers(int modifiers)", "signatureAfterChange": " \tpublic static Set<Modifier> getModifiers(int modifiers, ElementKind kind)", "diff": ["-\tpublic static Set<Modifier> getModifiers(int modifiers)", "+\tpublic static Set<Modifier> getModifiers(int modifiers, ElementKind kind)", "-\t\tif (0 != (modifiers & ClassFileConstants.AccPublic)) {", "-\t\t\tresult.add(Modifier.PUBLIC);", "+\t\tswitch(kind) {", "+\t\t\tcase CONSTRUCTOR :", "+\t\t\tcase METHOD :", "+\t\t\t\t// modifiers for methods", "+\t\t\t\tdecodeModifiers(result, modifiers, new int[] {", "+\t\t\t\t\tClassFileConstants.AccPublic,", "+\t\t\t\t\tClassFileConstants.AccProtected,", "+\t\t\t\t\tClassFileConstants.AccPrivate,", "+\t\t\t\t\tClassFileConstants.AccAbstract,", "+\t\t\t\t\tClassFileConstants.AccStatic,", "+\t\t\t\t\tClassFileConstants.AccFinal,", "+\t\t\t\t\tClassFileConstants.AccSynchronized,", "+\t\t\t\t\tClassFileConstants.AccNative,", "+\t\t\t\t\tClassFileConstants.AccStrictfp", "+\t\t\t\t});", "+\t\t\t\tbreak;", "+\t\t\tcase FIELD :", "+\t\t\tcase ENUM_CONSTANT :", "+\t\t\t\t// for fields", "+\t\t\t\tdecodeModifiers(result, modifiers, new int[] {", "+\t\t\t\t\tClassFileConstants.AccPublic,", "+\t\t\t\t\tClassFileConstants.AccProtected,", "+\t\t\t\t\tClassFileConstants.AccPrivate,", "+\t\t\t\t\tClassFileConstants.AccStatic,", "+\t\t\t\t\tClassFileConstants.AccFinal,", "+\t\t\t\t\tClassFileConstants.AccTransient,", "+\t\t\t\t\tClassFileConstants.AccVolatile", "+\t\t\t\t});", "+\t\t\t\tbreak;", "+\t\t\tcase ANNOTATION_TYPE :", "+\t\t\tcase ENUM :", "+\t\t\tcase INTERFACE :", "+\t\t\tcase CLASS :", "+\t\t\t\t// for type", "+\t\t\t\tdecodeModifiers(result, modifiers, new int[] {", "+\t\t\t\t\tClassFileConstants.AccPublic,", "+\t\t\t\t\tClassFileConstants.AccAbstract,", "+\t\t\t\t\tClassFileConstants.AccFinal,", "+\t\t\t\t});", "-\t\tif (0 != (modifiers & ClassFileConstants.AccPrivate)) {", "-\t\t\tresult.add(Modifier.PRIVATE);", "-\t\t}", "-\t\tif (0 != (modifiers & ClassFileConstants.AccProtected)) {", "-\t\t\tresult.add(Modifier.PROTECTED);", "-\t\t}", "-\t\tif (0 != (modifiers & ClassFileConstants.AccStatic)) {", "-\t\t\tresult.add(Modifier.STATIC);", "-\t\t}", "-\t\tif (0 != (modifiers & ClassFileConstants.AccAbstract)) {", "-\t\t\tresult.add(Modifier.ABSTRACT);", "-\t\t}", "-\t\tif (0 != (modifiers & ClassFileConstants.AccFinal)) {", "-\t\t\tresult.add(Modifier.FINAL);", "-\t\t}", "-\t\tif (0 != (modifiers & ClassFileConstants.AccSynchronized)) {", "-\t\t\tresult.add(Modifier.SYNCHRONIZED);", "-\t\t}", "-\t\tif (0 != (modifiers & ClassFileConstants.AccVolatile)) {", "-\t\t\tresult.add(Modifier.VOLATILE);", "-\t\t}", "-\t\tif (0 != (modifiers & ClassFileConstants.AccTransient)) {", "-\t\t\tresult.add(Modifier.TRANSIENT);", "-\t\t}", "-\t\tif (0 != (modifiers & ClassFileConstants.AccNative)) {", "-\t\t\tresult.add(Modifier.NATIVE);", "-\t\t}", "-\t\tif (0 != (modifiers & ClassFileConstants.AccStrictfp)) {", "-\t\t\tresult.add(Modifier.STRICTFP);", "-\t\t}", "-\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f3dc123dabac7b047ef5fc54b64de92d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/impl/CompilerOptions.java", "commitBeforeChange": "cdf4427e144add1a36f3939b37283556991d4db8", "commitAfterChange": "75f702ac7a9f5b98d8daf289140c0d700af63244", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic CompilerOptions(Map settings)", "signatureAfterChange": " \tpublic CompilerOptions(Map settings)", "diff": ["-\t\t\t\tif (optionValue.equals(VERSION_1_1)) {", "-\t\t\t\t\tthis.targetJDK = JDK1_1;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_2)) {", "-\t\t\t\t\tthis.targetJDK = JDK1_2;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_3)) {", "-\t\t\t\t\tthis.targetJDK = JDK1_3;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_4)) {", "-\t\t\t\t\tthis.targetJDK = JDK1_4;", "-\t\t\t\t}", "+\t\t\t\tlong level = versionToJdkLevel(optionValue);", "+\t\t\t\tif (level != 0) this.targetJDK = level;", "-\t\t\t\tif (optionValue.equals(VERSION_1_1)) {", "-\t\t\t\t\tthis.complianceLevel = JDK1_1;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_2)) {", "-\t\t\t\t\tthis.complianceLevel = JDK1_2;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_3)) {", "-\t\t\t\t\tthis.complianceLevel = JDK1_3;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_4)) {", "-\t\t\t\t\tthis.complianceLevel = JDK1_4;", "-\t\t\t\t}", "+\t\t\t\tlong level = versionToJdkLevel(optionValue);", "+\t\t\t\tif (level != 0) this.complianceLevel = level;", "-\t\t\t\tif (optionValue.equals(VERSION_1_1)) {", "-\t\t\t\t\tthis.isPrivateConstructorAccessChangingVisibility = false;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_2)) {", "-\t\t\t\t\tthis.isPrivateConstructorAccessChangingVisibility = false;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_3)) {", "-\t\t\t\t\tthis.isPrivateConstructorAccessChangingVisibility = true;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_4)) {", "-\t\t\t\t\tthis.isPrivateConstructorAccessChangingVisibility = true;", "-\t\t\t\t}", "+\t\t\t\tlong level = versionToJdkLevel(optionValue);", "+\t\t\t\tif (level >= JDK1_3) this.isPrivateConstructorAccessChangingVisibility = true;", "-\t\t\t\tif (optionValue.equals(VERSION_1_3)) {", "-\t\t\t\t\tthis.sourceLevel = JDK1_3;", "-\t\t\t\t} else if (optionValue.equals(VERSION_1_4)) {", "-\t\t\t\t\tthis.sourceLevel = JDK1_4;", "-\t\t\t\t}", "+\t\t\t\tlong level = versionToJdkLevel(optionValue);", "+\t\t\t\tif (level != 0) this.sourceLevel = level;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f96a3de5430a31738d1e9232861a7bde", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "e92324cecc3fbf731a68d99288f72318b17cf1ea", "commitAfterChange": "9832689930749c0e863f1bb11ec756d41ad5c5d4", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "signatureAfterChange": " \tpublic void accept(IResource resource, int start, int end, IJavaElement element, int accuracy)", "diff": ["-\t\t\t\tresults.append(method.getDeclaringType().getFullyQualifiedName());", "-\t\t\t\tif (!method.isConstructor()) {", "-\t\t\t\t\tresults.append(\".\");", "-\t\t\t\t\tresults.append(method.getElementName());", "-\t\t\t\t}", "-\t\t\t\tresults.append(\"(\");", "-\t\t\t\tString[] parameters = method.getParameterTypes();\t\t\t", "-\t\t\t\tfor (int i = 0; i < parameters.length; i++) {", "-\t\t\t\t\tresults.append(Signature.toString(parameters[i]));", "-\t\t\t\t\tif (i < parameters.length-1) {", "-\t\t\t\t\t\tresults.append(\", \");", "-\t\t\t\t\t}", "-\t\t\t\t}", "-\t\t\t\tresults.append(\")\");", "-\t\t\t\tif (!method.isConstructor()) {", "-\t\t\t\t\tresults.append(\" -> \");", "-\t\t\t\t\tresults.append(Signature.toString(method.getReturnType()));", "-\t\t\t\t}", "+\t\t\t\tappend(method);", "-\t\t\t\tresults.append(initializer.getDeclaringType().getFullyQualifiedName());", "-\t\t\t\tresults.append(\".\");", "-\t\t\t\tif (Flags.isStatic(initializer.getFlags())) {", "-\t\t\t\t\tresults.append(\"static \");", "-\t\t\t\t}", "-\t\t\t\tresults.append(\"{}\");", "+\t\t\t\tappend(initializer);", "+\t\t\t} else if (element instanceof ILocalVariable) {", "+\t\t\t\tresults.append(\" \");", "+\t\t\t\tILocalVariable localVar = (ILocalVariable)element;", "+\t\t\t\tIJavaElement parent = localVar.getParent();", "+\t\t\t\tif (parent instanceof IInitializer) {", "+\t\t\t\t\tIInitializer initializer = (IInitializer)parent;", "+\t\t\t\t\tappend(initializer);", "+\t\t\t\t} else { // IMethod", "+\t\t\t\t\tIMethod method = (IMethod)parent;", "+\t\t\t\t\tappend(method);", "+\t\t\t\t}", "+\t\t\t\tresults.append(\".\");", "+\t\t\t\tresults.append(localVar.getElementName());", "+\t\t\t\tunit = (ICompilationUnit)localVar.getAncestor(IJavaElement.COMPILATION_UNIT);", "+\t}"]}], "num": 49947}