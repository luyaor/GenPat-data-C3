{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4438b68b9468a1d79df4dfb88cd2c9f8", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1216f31213f90c6364a1faca011015dc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "14ba43da4ca84e6aa2e4b0e2b6c660335b90691e", "commitAfterChange": "b7f39314c9eefd05e7002c31c87dcdb0333c0655", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " protected void addNewEntry(ArrayList paths, String currentClasspathName, \t\tArrayList currentRuleSpecs, String customEncoding, \t\tString destPath, boolean isSourceOnly, \t\tboolean rejectDestinationPathOnJars) throws InvalidInputException", "signatureAfterChange": " protected void addNewEntry(ArrayList paths, String currentClasspathName, \t\tArrayList currentRuleSpecs, String customEncoding, \t\tString destPath, boolean isSourceOnly, \t\tboolean rejectDestinationPathOnJars) throws InvalidInputException", "diff": ["-\t\t\t(currentClasspathName.endsWith(\".jar\") || //$NON-NLS-1$", "-\t\t\t\tcurrentClasspathName.endsWith(\".zip\"))) { //$NON-NLS-1$", "+\t\t\tUtil.isPotentialZipArchive(currentClasspathName)) {"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "195ca857e747837b2ae74e9b6651ae48", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "c531b3f0c052a6b596da13730fb589efa2e45e52", "commitAfterChange": "a33b35a40da7f5efbb079a1d93956e1b1d6d6185", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "signatureAfterChange": " \tpublic void configure(String[] argv) throws InvalidInputException", "diff": ["-\t\t\tif (currentArg.equals(\"-noJSR\")) { //$NON-NLS-1$", "+\t\t\tif (currentArg.equals(\"-inlineJSR\")) { //$NON-NLS-1$", "-\t\t\t    this.useJsrBytecode = false;", "+\t\t\t    this.inlineJsrBytecode = true;"]}], "num": 47955}