{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9ce9eb5445b0f1fca9a0b9378f1db85b", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a7fd4f03ce94f1138b061b6eadd05ef", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/Compliance_1_5.java", "commitBeforeChange": "1c0c2bf77ea7eb024038ba5150fcc9eb4dd14084", "commitAfterChange": "1cdb6c1b0fb5ba08d4e282b871474685ab8baf3f", "methodNumberBeforeChange": 68, "methodNumberAfterChange": 68, "signatureBeforeChange": "  public void test065()", "signatureAfterChange": "  public void test065()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 9)\\n\" + ", "-\t\t\"\tZ(){\t\\n\" + ", "-\t\t\"\t^^^\\n\" + ", "-\t\t\"No enclosing instance of type X is available due to some intermediate constructor invocation\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tString foo() { return \\\"Y-foo\\\"; }\t\\n\" + ", "+\t\t\t\"\t       ^^^^^\\n\" + ", "+\t\t\t\"The method foo() of type X.Y should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 9)\\n\" + ", "+\t\t\t\"\tZ(){\t\\n\" + ", "+\t\t\t\"\t^^^\\n\" + ", "+\t\t\t\"No enclosing instance of type X is available due to some intermediate constructor invocation\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. WARNING in X.java (at line 12)\\n\" + ", "+\t\t\t\"\tString foo() { return \\\"Z-foo\\\"; }\t\\n\" + ", "+\t\t\t\"\t       ^^^^^\\n\" + ", "+\t\t\t\"The method foo() of type X.Y.Z should be tagged with @Override since it actually overrides a superclass method\\n\" + ", "+\t\t\t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c3d45dca122e79fafaf1576aa7751964", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "b084d49cf93184b78b7b25fbe5a551159363fd76", "commitAfterChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "methodNumberBeforeChange": 249, "methodNumberAfterChange": 249, "signatureBeforeChange": " \tpublic void test245()", "signatureAfterChange": " \tpublic void test245()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\"\trx.<String>foo(\\\"hello\\\");\\n\" + ", "-\t\t\"\t           ^^^\\n\" + ", "-\t\t\"The method foo(Object) of raw type X is no longer generic; it cannot be parameterized with arguments <String>\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX rx = new X();\\n\" + ", "+\t\t\t\"\t^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX rx = new X();\\n\" + ", "+\t\t\t\"\t           ^\\n\" + ", "+\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"3. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\trx.<String>foo(\\\"hello\\\");\\n\" + ", "+\t\t\t\"\t           ^^^\\n\" + ", "+\t\t\t\"The method foo(Object) of raw type X is no longer generic; it cannot be parameterized with arguments <String>\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 6304}