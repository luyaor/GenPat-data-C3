{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fc0de9d5e00543a1ae31c9ec20d08f3c", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "422debb7584530700950f143cdf9be9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "818dca3cf84fd118ea99497de1f8b977d4253551", "commitAfterChange": "52f6144c4e9af7092e9f26d44a5197a00c39427c", "methodNumberBeforeChange": 69, "methodNumberAfterChange": 69, "signatureBeforeChange": "  \tprivate void printJavadocBlock(FormatJavadocBlock block)", "signatureAfterChange": "  \tprivate void printJavadocBlock(FormatJavadocBlock block)", "diff": ["-\t\t\t\t\tif (newLines == 0) {", "+\t\t\t\t\tif (newLines == 0 && (!node.isImmutable() || block.reference != null)) {", "-\t\t\t\tif (text.isHtmlTag()) {", "-\t\t\t\t\tif (text.isImmutableHtmlTag()) {", "-\t\t\t\t\t\t// Indent if new line was added", "-\t\t\t\t\t\tif (newLines > 0 && this.commentIndentation != null) {", "-\t\t\t\t\t    \taddInsertEdit(node.sourceStart, this.commentIndentation);", "-\t\t\t\t\t    \tthis.column += this.commentIndentation.length();", "-\t\t\t\t\t\t}", "-\t\t\t\t\t\tprintJavadocHtmlImmutableTag(text, block, newLines > 0);", "-\t\t\t\t\t\tthis.column += getTextLength(block, text);", "-\t\t\t\t\t} else {", "-\t\t\t\t\t\tprintJavadocHtmlTag(text, block, newLines>0);", "+\t\t\t\tif (text.isImmutable()) {", "+\t\t\t\t\t// Indent if new line was added", "+\t\t\t\t\tif (newLines > 0 && this.commentIndentation != null) {", "+\t\t\t\t    \taddInsertEdit(node.sourceStart, this.commentIndentation);", "+\t\t\t\t    \tthis.column += this.commentIndentation.length();", "+\t\t\t\t\tprintJavadocImmutableText(text, block, newLines > 0);", "+\t\t\t\t\tthis.column += getTextLength(block, text);", "+\t\t\t\t} else if (text.isHtmlTag()) {", "+\t\t\t\t\tprintJavadocHtmlTag(text, block, newLines>0);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7f7fee0583470618d29be39e4ee80617", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/Scribe.java", "commitBeforeChange": "a708a833352a17a462cbe9e9346d660fa6317a1e", "commitAfterChange": "0e8e783b8823e467b82792c7ef9289caad32e202", "methodNumberBeforeChange": 84, "methodNumberAfterChange": 85, "signatureBeforeChange": " \tprivate void printNewLinesBeforeDisablingComment()", "signatureAfterChange": " \tprivate void printNewLinesBeforeDisablingComment()", "diff": ["-\t\t\tStringBuffer indentationBuffer = new StringBuffer();", "+\t\t\tString indentationString;", "-\t\t\t\tprintIndentationIfNecessary(indentationBuffer);", "+\t\t\t\tthis.tempBuffer.setLength(0);", "+\t\t\t\tprintIndentationIfNecessary(this.tempBuffer);", "+\t\t\t\tindentationString = this.tempBuffer.toString();", "+\t\t\t} else {", "+\t\t\t\tindentationString = Util.EMPTY_STRING;", "-\t\t\t\tthis.edits[this.editsIndex-1] = new OptimizedReplaceEdit(beginningOfLine, offset+length-beginningOfLine, indentationBuffer.toString());", "+\t\t\t\tthis.edits[this.editsIndex-1] = new OptimizedReplaceEdit(beginningOfLine, offset+length-beginningOfLine, indentationString);", "-\t\t\t\t\tStringBuffer buffer = new StringBuffer(replacement.substring(0, start));", "-\t\t\t\t\tbuffer.append(indentationBuffer);", "-\t\t\t\t\tthis.edits[this.editsIndex-1] = new OptimizedReplaceEdit(offset, length, buffer.toString());", "+\t\t\t\t\tthis.tempBuffer.setLength(0);", "+\t\t\t\t\tthis.tempBuffer.append(replacement.substring(0, start));", "+\t\t\t\t\tif (indentationString != Util.EMPTY_STRING) {", "+\t\t\t\t\t\tthis.tempBuffer.append(indentationString);", "+\t\t\t\t\t}", "+\t\t\t\t\tthis.edits[this.editsIndex-1] = new OptimizedReplaceEdit(offset, length, this.tempBuffer.toString());"]}], "num": 71098}