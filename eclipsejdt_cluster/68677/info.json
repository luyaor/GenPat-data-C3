{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "84d4b7751e86bcfc844d9fbea0e86c7a", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55a13a8f6dd2779c99624eb129193ef0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e6e8c555a7d6f504d4ea246c591d5bb3f080d438", "commitAfterChange": "3316f207e855c46fb5e805791239fa37620ca8c4", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 37, "signatureBeforeChange": "  private char[] readIndexState()", "signatureAfterChange": "  private char[][] readIndexState(String dirOSString)", "diff": ["-private char[] readIndexState() {", "+private char[][] readIndexState(String dirOSString) {", "-\t\treturn org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(savedIndexNamesFile, null);", "+\t\tchar[] savedIndexNames = org.eclipse.jdt.internal.compiler.util.Util.getFileCharContent(savedIndexNamesFile, null);", "+\t\tif (savedIndexNames.length > 0) {", "+\t\t\tchar[][] names = CharOperation.splitOn('\\n', savedIndexNames);", "+\t\t\tif (names.length > 1) {", "+\t\t\t\t// First line is DiskIndex signature + saved plugin working location (see writeSavedIndexNamesFile())", "+\t\t\t\tString savedSignature = DiskIndex.SIGNATURE + \"+\" + dirOSString; //$NON-NLS-1$", "+\t\t\t\tif (savedSignature.equals(new String(names[0])))", "+\t\t\t\t\treturn names;", "+\t\t\t}", "+\t\t}", "-\t\treturn CharOperation.NO_CHAR;", "+\treturn null;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ba1a3d675fd7ef14a1b93eb5e03265a0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SelectionRequestor.java", "commitBeforeChange": "91f3c8870f13ed83ebd6280cbfe1b3f0285abeea", "commitAfterChange": "bc783d19ecf0eacf7a7c450b320f7a35cdefecbf", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": "\r protected IType resolveType(char[] packageName, char[] typeName, int acceptFlags)", "signatureAfterChange": "\r protected IType resolveType(char[] packageName, char[] typeName, int acceptFlags)", "diff": ["-\t\t\t\ttype = wc.getType(new String(typeName));\r", "+\t\t\t\tchar[][] compoundName = CharOperation.splitOn('.', typeName);\r", "+\t\t\t\tif(compoundName.length > 0) {\r", "+\t\t\t\t\ttype = wc.getType(new String(compoundName[0]));\r", "+\t\t\t\t\tfor (int i = 1, length = compoundName.length; i < length; i++) {\r", "+\t\t\t\t\t\ttype = type.getType(new String(compoundName[i]));", "+\t\t\t\t\t}\r", "+\t\t\t\t}\r", "+\t\t\t\t\r"]}], "num": 68677}