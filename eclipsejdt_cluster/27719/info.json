{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "bf5ca740562c4d1f04f3622dd9aff9b2", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4bf1e2f6d9ecdef299eb36cca68070d9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "ac2c3539b72e65a4a4e0b168769da151e63c5ff1", "commitAfterChange": "014710437062a15282800b8efb747a8973068ba8", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprivate boolean pushParamName(Object arg)", "signatureAfterChange": " \tprotected abstract boolean pushParamName();", "diff": ["-\tprivate boolean pushParamName(Object arg) {", "-\t\tif (this.astLengthPtr == -1) { // First push", "-\t\t\tpushOnAstStack(arg, true);", "-\t\t} else {", "-\t\t\t// Verify that no @throws has been declared before", "-\t\t\tfor (int i=THROWS_TAG_EXPECTED_ORDER; i<=this.astLengthPtr; i+=ORDERED_TAGS_NUMBER) {", "-\t\t\t\tif (this.astLengthStack[i] != 0) {", "-\t\t\t\t\tif (this.sourceParser != null) this.sourceParser.problemReporter().javadocUnexpectedTag(this.tagSourceStart, this.tagSourceEnd);", "-\t\t\t\t\treturn false;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\tswitch (this.astLengthPtr % ORDERED_TAGS_NUMBER) {", "-\t\t\t\tcase PARAM_TAG_EXPECTED_ORDER :", "-\t\t\t\t\t// previous push was a @param tag => push another param name", "-\t\t\t\t\tpushOnAstStack(arg, false);", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase SEE_TAG_EXPECTED_ORDER :", "-\t\t\t\t\t// previous push was a @see tag => push new param name", "-\t\t\t\t\tpushOnAstStack(arg, true);", "-\t\t\t\t\tbreak;", "-\t\t\t\tdefault:", "-\t\t\t\t\treturn false;", "-\t\t\t}", "-\t\t}", "-\t\treturn true;", "-\t}", "+\tprotected abstract boolean pushParamName();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7300453c8582068c455472621b5b81e7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AnnotationParser.java", "commitBeforeChange": "b63ee5a669593061b975bc2def28757d777c16ca", "commitAfterChange": "09bf35df2168c2ab3f5a24971ca9aae42bfc8d5b", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 15, "signatureBeforeChange": "  \tprivate void pushParamName(AnnotationSingleNameReference arg)", "signatureAfterChange": " \tprivate void pushParamName(AnnotationSingleNameReference arg)", "diff": ["+\t */", "-\t\t// TODO (frederic) To be changed when mixed tags declaration will be accepted", "-\t\tswitch (this.astLengthPtr) {", "-\t\t\tcase -1 :", "-\t\t\t\t// push first param name", "-\t\t\t\tpushOnAstStack(arg, true);", "-\t\t\t\tbreak;", "-\t\t\tcase 0 :", "-\t\t\t\t// push other param name", "-\t\t\t\tpushOnAstStack(arg, false);", "-\t\t\t\tbreak;", "-\t\t\tdefault :", "-\t\t\t\tthis.sourceParser.problemReporter().annotationUnexpectedTag(arg.tagSourceStart, arg.tagSourceEnd);", "+\t\tif (this.astLengthPtr == -1) { // First push", "+\t\t\tpushOnAstStack(arg, true);", "+\t\t} else {", "+\t\t\t// Verify that no @throws has been declared before", "+\t\t\tfor (int i=THROWS_TAG_EXPECTED_ORDER; i<=this.astLengthPtr; i+=ORDERED_TAGS_NUMBER) {", "+\t\t\t\tif (this.astLengthStack[i] != 0) {", "+\t\t\t\t\tthis.sourceParser.problemReporter().annotationUnexpectedTag(arg.tagSourceStart, arg.tagSourceEnd);", "+\t\t\t\t\treturn;", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\tswitch (this.astLengthPtr % ORDERED_TAGS_NUMBER) {", "+\t\t\t\tcase PARAM_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @param tag => push another param name", "+\t\t\t\t\tpushOnAstStack(arg, false);", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase SEE_TAG_EXPECTED_ORDER :", "+\t\t\t\t\t// previous push was a @see tag => push new param name", "+\t\t\t\t\tpushOnAstStack(arg, true);", "+\t\t\t\t\tbreak;", "+\t\t\t}"]}], "num": 27719}