{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "24840e2154df6ac5361114a71c9ccb02", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "11fbe562d55124ae771dbbc87949d722", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedAllocationExpression.java", "commitBeforeChange": "bea7b508525f70d680963772996546f2bcf8018f", "commitAfterChange": "6612336f81825afdf894aa053e2e886c83842e87", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tprivate TypeBinding resolveTypeForQualifiedAllocationExpression(BlockScope scope)", "signatureAfterChange": " \t \tprivate TypeBinding resolveTypeForQualifiedAllocationExpression(BlockScope scope)", "diff": ["-\t\t\tif (polyExpressionSeen && polyExpressionsHaveErrors(scope, this.binding, this.arguments, argumentTypes))", "-\t\t\t\treturn null;", "+\t\t\tif (polyExpressionSeen)", "+\t\t\t\tresolvePolyExpressionArguments(scope, this.binding, this.arguments, argumentTypes);", "+", "-\t\tif (polyExpressionSeen && polyExpressionsHaveErrors(scope, inheritedBinding, this.arguments, argumentTypes))", "-\t\t\treturn null;", "+\t\tif (polyExpressionSeen)", "+\t\t\tresolvePolyExpressionArguments(scope, inheritedBinding, this.arguments, argumentTypes);", "+\t\t\t"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "30da722bab35a68c98c22781f80fb8f0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/InferenceContext18.java", "commitBeforeChange": "8580e60642e681a1d666f59f018926e08e2e8a62", "commitAfterChange": "e4335f612db86aa6e739c4af37c0425a42aadb90", "methodNumberBeforeChange": 18, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tpublic boolean isMoreSpecificThan(Invocation invocation, MethodBinding m1, MethodBinding m2, boolean isVarArgs, boolean isVarArgs2)", "signatureAfterChange": " \tpublic boolean isMoreSpecificThan(MethodBinding m1, MethodBinding m2, boolean isVarArgs, boolean isVarArgs2)", "diff": ["-\tpublic boolean isMoreSpecificThan(Invocation invocation, MethodBinding m1, MethodBinding m2, boolean isVarArgs, boolean isVarArgs2) {", "+\tpublic boolean isMoreSpecificThan(MethodBinding m1, MethodBinding m2, boolean isVarArgs, boolean isVarArgs2) {", "-\t\tExpression[] arguments = invocation.arguments();", "+\t\tExpression[] arguments = this.invocationArguments;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cc9d1c2b78b57febb75edb502a43f87d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/Statement.java", "commitBeforeChange": "a0fd6dae6dbb696f05ef352cad9852f287a5aeec", "commitAfterChange": "3f1cbb254c604c7416bb668e3ca0c2f6d90b8afc", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " protected MethodBinding findConstructorBinding(BlockScope scope, Invocation site, ReferenceBinding receiverType, TypeBinding[] argumentTypes, boolean polyExpressionSeen)", "signatureAfterChange": " protected MethodBinding findConstructorBinding(BlockScope scope, Invocation site, ReferenceBinding receiverType, TypeBinding[] argumentTypes)", "diff": ["-protected MethodBinding findConstructorBinding(BlockScope scope, Invocation site, ReferenceBinding receiverType, TypeBinding[] argumentTypes, boolean polyExpressionSeen) {", "+protected MethodBinding findConstructorBinding(BlockScope scope, Invocation site, ReferenceBinding receiverType, TypeBinding[] argumentTypes) {", "-\tif (polyExpressionSeen)", "-\t\tresolvePolyExpressionArguments(site, ctorBinding, argumentTypes);", "+\tresolvePolyExpressionArguments(site, ctorBinding, argumentTypes);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "cd0b06a4391d4822e9fd865f0ca51e85", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/ASTNode.java", "commitBeforeChange": "d7bf97b0906e6821b36f900e536d18f1ccdddff2", "commitAfterChange": "dd10489904dda11a1b9c522a71a4705b9646605e", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tpublic static void resolvePolyExpressionArguments(Invocation invocation, MethodBinding methodBinding)", "signatureAfterChange": "  \tpublic static void resolvePolyExpressionArguments(Invocation invocation, MethodBinding methodBinding, Scope scope)", "diff": ["-\tpublic static void resolvePolyExpressionArguments(Invocation invocation, MethodBinding methodBinding) {", "+\tpublic static void resolvePolyExpressionArguments(Invocation invocation, MethodBinding methodBinding, Scope scope) {", "-\t\tresolvePolyExpressionArguments(invocation, methodBinding, argumentTypes);", "+\t\tresolvePolyExpressionArguments(invocation, methodBinding, argumentTypes, scope);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "ec81b757a02f01c23dcd61f92f6ebd36", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/MessageSend.java", "commitBeforeChange": "a0fd6dae6dbb696f05ef352cad9852f287a5aeec", "commitAfterChange": "3f1cbb254c604c7416bb668e3ca0c2f6d90b8afc", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 16, "signatureBeforeChange": " protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes, boolean polyExpressionSeen)", "signatureAfterChange": " protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes)", "diff": ["-protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes, boolean polyExpressionSeen) {", "+protected void findMethodBinding(BlockScope scope, TypeBinding[] argumentTypes) {", "-\t", "-\tif (polyExpressionSeen)", "-\t\tresolvePolyExpressionArguments(this, this.binding, argumentTypes);", "+\tresolvePolyExpressionArguments(this, this.binding, argumentTypes);"]}], "num": 49851}