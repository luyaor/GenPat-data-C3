{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3d47d150bb33473b946c0e52aa6d4353", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4c88f9b628d9e67303e1821b161cdd7f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "d1974547d7c9577873b59a9bbfd6fce3981cc7e4", "commitAfterChange": "bfa884088575c34bc003e982d7319407d3dca882", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tprotected void generateClasspathChangeDeltas(\r \t\tIClasspathEntry[] oldResolvedPath,\r \t\tIClasspathEntry[] newResolvedPath,\r \t\tJavaModelManager manager,\r \t\tJavaProject project)", "signatureAfterChange": "\r \tprotected void generateClasspathChangeDeltas(\r \t\tIClasspathEntry[] oldResolvedPath,\r \t\tIClasspathEntry[] newResolvedPath,\r \t\tJavaModelManager manager,\r \t\tJavaProject project)", "diff": ["+\t\t\t\r", "+\t\t\t\r", "-\t\t\t\t// force detach source on jar package fragment roots (source will be lazily computed when needed)\r", "-\t\t\t\t// and remove the .java files from the index (.class files belong to binary folders which can be shared, \r", "-\t\t\t\t// so leave the index) \r", "-\t\t\t\tfor (int j = 0, length = pkgFragmentRoots.length; j < length; j++) {\r", "-\t\t\t\t\tIPackageFragmentRoot root = pkgFragmentRoots[j];\r", "-\t\t\t\t\tif (root instanceof JarPackageFragmentRoot) {\r", "-\t\t\t\t\t\t((JarPackageFragmentRoot) root).setSourceAttachmentProperty(null);// loose info - will be recomputed\r", "-\t\t\t\t\t} else if (indexManager != null && changeKind == IClasspathEntry.CPE_SOURCE) {\r", "-\t\t\t\t\t\tindexManager.removeSourceFolderFromIndex(project, oldResolvedPath[i].getPath());\r", "-\t\t\t\t\t}\r", "+\t\t\t\t// Remove the .java files from the index.\r", "+\t\t\t\t// Note that .class files belong to binary folders which can be shared, \r", "+\t\t\t\t// so leave the index for .class files.\r", "+\t\t\t\tif (indexManager != null && changeKind == IClasspathEntry.CPE_SOURCE) {\r", "+\t\t\t\t\tindexManager.removeSourceFolderFromIndex(project, oldResolvedPath[i].getPath());\r", "+\t\t\t\t\t\taddClasspathDeltas(\r", "+\t\t\t\t\t\t\tproject.getPackageFragmentRoots(oldResolvedPath[i]),\r", "+\t\t\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "+\t\t\t\t\t\t\tdelta);\r", "+\t\t\t\t\t\tint changeKind = oldResolvedPath[i].getEntryKind();\r", "+\t\t\t\t\t\thasChangedContentForDependents |= (changeKind == IClasspathEntry.CPE_SOURCE);\r", "+\t\t\r", "+\t\t\t\t\t\thasDelta = true;\r", "+\t\t\t\t}\r", "+\t\t\t\t\r", "+\t\t\t\t// check source attachment\r", "+\t\t\t\tint sourceAttachmentFlags = \r", "+\t\t\t\t\tthis.getSourceAttachmentDeltaFlag(\r", "+\t\t\t\t\t\toldResolvedPath[i].getSourceAttachmentPath(),\r", "+\t\t\t\t\t\tnewResolvedPath[index].getSourceAttachmentPath());\r", "+\t\t\t\tint sourceAttachmentRootFlags = \r", "+\t\t\t\t\tthis.getSourceAttachmentDeltaFlag(\r", "+\t\t\t\t\t\toldResolvedPath[i].getSourceAttachmentRootPath(),\r", "+\t\t\t\t\t\tnewResolvedPath[index].getSourceAttachmentRootPath());\r", "+\t\t\t\tint flags = sourceAttachmentFlags | sourceAttachmentRootFlags;\r", "+\t\t\t\tif (flags != 0) {\r", "-\t\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "+\t\t\t\t\t\tflags | IJavaElementDelta.F_REMOVED_FROM_CLASSPATH, // TEMPORARY: Need to signal a F_REMOVED_FROM_CLASSPATH so that UI updates correctly\r", "-\t\t\t\t\tint changeKind = oldResolvedPath[i].getEntryKind();\r", "-\t\t\t\t\thasChangedContentForDependents |= (changeKind == IClasspathEntry.CPE_SOURCE);\r", "-\t\r", "-\t\t\t} else {\r", "-\t\t\t\thasChangedContentForDependents |= (newResolvedPath[i].isExported() != oldResolvedPath[index].isExported());\r", "-\t\t\t\tif (!oldResolvedPathLongest && index != i) { //reordering of the classpath\r", "-\t\t\t\t\taddClasspathDeltas(\r", "-\t\t\t\t\t\tproject.getPackageFragmentRoots(newResolvedPath[i]),\r", "-\t\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "-\t\t\t\t\t\tdelta);\r", "-\t\t\t\t\tint changeKind = newResolvedPath[i].getEntryKind();\r", "-\t\t\t\t\thasChangedContentForDependents |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "-\t\t\t\t\thasDelta = true;\r", "-\t\t\t\t}\r", "-\t\t\t}\r", "+\t\t\t} // classpath reordering has already been generated in previous loop\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a6fbf49018da1992a77a61e053f30ddc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "819829cb4aba9d7cb3215affc39d64058ef2e001", "commitAfterChange": "c0e819144102259ba36551701afd75ef0de9c5d8", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "\r \tprotected void generateClasspathChangeDeltas(\r \t\tIClasspathEntry[] oldResolvedPath,\r \t\tIClasspathEntry[] newResolvedPath,\r \t\tJavaModelManager manager,\r \t\tJavaProject project)", "signatureAfterChange": "\r \tprotected void generateClasspathChangeDeltas(\r \t\tIClasspathEntry[] oldResolvedPath,\r \t\tIClasspathEntry[] newResolvedPath,\r \t\tJavaModelManager manager,\r \t\tJavaProject project)", "diff": ["-\t\tboolean hasChangedSourceEntries = false;\r", "+\t\tboolean hasChangedContentForDependents = false;\r", "-\t\t\t\thasChangedSourceEntries |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "+\t\t\t\thasChangedContentForDependents |= \r", "+\t\t\t\t\t(changeKind == IClasspathEntry.CPE_SOURCE) || oldResolvedPath[i].isExported();\r", "-\t\t\t} else if (\r", "-\t\t\t\toldResolvedPathLongest && index != i) { //reordering of the classpath\r", "-\t\t\t\taddClasspathDeltas(\r", "-\t\t\t\t\tproject.getPackageFragmentRoots(oldResolvedPath[i]),\r", "-\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "-\t\t\t\t\tdelta);\r", "-\t\t\t\tint changeKind = oldResolvedPath[i].getEntryKind();\r", "-\t\t\t\thasChangedSourceEntries |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "-\r", "-\t\t\t\thasDelta = true;\r", "+\t\t\t} else {\r", "+\t\t\t\thasChangedContentForDependents |= (oldResolvedPath[i].isExported() != newResolvedPath[index].isExported());\r", "+\t\t\t\tif (oldResolvedPathLongest && index != i) { //reordering of the classpath\r", "+\t\t\t\t\taddClasspathDeltas(\r", "+\t\t\t\t\t\tproject.getPackageFragmentRoots(oldResolvedPath[i]),\r", "+\t\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "+\t\t\t\t\t\tdelta);\r", "+\t\t\t\t\tint changeKind = oldResolvedPath[i].getEntryKind();\r", "+\t\t\t\t\thasChangedContentForDependents |= (changeKind == IClasspathEntry.CPE_SOURCE);\r", "+\t\r", "+\t\t\t\t\thasDelta = true;\r", "+\t\t\t\t}\r", "-\t\t\t\thasChangedSourceEntries |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "+\t\t\t\thasChangedContentForDependents |= \r", "+\t\t\t\t\t(changeKind == IClasspathEntry.CPE_SOURCE) || newResolvedPath[i].isExported();\r", "-\t\t\t} else if (\r", "-\t\t\t\t!oldResolvedPathLongest && index != i) { //reordering of the classpath\r", "-\t\t\t\taddClasspathDeltas(\r", "-\t\t\t\t\tproject.getPackageFragmentRoots(newResolvedPath[i]),\r", "-\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "-\t\t\t\t\tdelta);\r", "-\t\t\t\tint changeKind = newResolvedPath[i].getEntryKind();\r", "-\t\t\t\thasChangedSourceEntries |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "-\t\t\t\thasDelta = true;\r", "+\t\t\t} else {\r", "+\t\t\t\thasChangedContentForDependents |= (newResolvedPath[i].isExported() != oldResolvedPath[index].isExported());\r", "+\t\t\t\tif (!oldResolvedPathLongest && index != i) { //reordering of the classpath\r", "+\t\t\t\t\taddClasspathDeltas(\r", "+\t\t\t\t\t\tproject.getPackageFragmentRoots(newResolvedPath[i]),\r", "+\t\t\t\t\t\tIJavaElementDelta.F_CLASSPATH_REORDER,\r", "+\t\t\t\t\t\tdelta);\r", "+\t\t\t\t\tint changeKind = newResolvedPath[i].getEntryKind();\r", "+\t\t\t\t\thasChangedContentForDependents |= changeKind == IClasspathEntry.CPE_SOURCE;\r", "+\t\t\t\t\thasDelta = true;\r", "+\t\t\t\t}\r", "-\t\t\tif (hasChangedSourceEntries)\r", "+\t\t\tif (hasChangedContentForDependents)\r"]}], "num": 67594}