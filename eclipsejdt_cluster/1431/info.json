{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "548273b3ba576a72a8578ffab96d5cd8", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "36613c59bb79ed24ac92dae9d9e25e76", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 5, "methodNumberAfterChange": 5, "signatureBeforeChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "signatureAfterChange": " \tprivate TypeDeclaration convert(ISourceType sourceType, CompilationResult compilationResult)", "diff": ["+\t\t/* convert type parameters */", "+\t\tchar[][] typeParameterNames = sourceType.getTypeParameterNames();", "+\t\tif (typeParameterNames != null) {", "+\t\t\tint parameterCount = typeParameterNames.length;", "+\t\t\tchar[][][] typeParameterBounds = sourceType.getTypeParameterBounds();", "+\t\t\ttype.typeParameters = new TypeParameter[parameterCount];", "+\t\t\tfor (int i = 0; i < parameterCount; i++) {", "+\t\t\t\ttype.typeParameters[i] = createTypeParameter(typeParameterNames[i], typeParameterBounds[i], start, end);", "+\t\t\t}", "+\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "374c28ff9715f977171dc873d30f8a1a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/TypeReferencePattern.java", "commitBeforeChange": "49166670dcee568b2c27289d7cd85c2be5781113", "commitAfterChange": "c888906b277669532d97376e8747878a8a58f472", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 12, "signatureBeforeChange": " private char[][][] typeParameterNames(IType type)", "signatureAfterChange": " private char[][][] typeParameterNames(IType type)", "diff": ["+\tboolean hasParameters = false;", "-\t\tboolean hasParameters = false;", "-\t\t\tif (parentType.isBinary()) {", "-\t\t\t\tparameters = ((BinaryType) parent).getTypeParameters();", "-\t\t\t} else {", "-\t\t\t\tparameters = ((SourceType) parent).getTypeParameters();", "-\t\t\t}", "+\t\t\tparameters = parentType.getTypeParameters();", "+\tif (!hasParameters) return null;", "+\tif (++ptr < typeParameters.length)", "+\t\tSystem.arraycopy(typeParameters, 0, typeParameters = new char[ptr][][], 0, ptr);"]}], "num": 1431}