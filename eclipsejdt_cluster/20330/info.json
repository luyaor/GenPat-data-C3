{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "cf940afa9ea11de2999ec6d550a362f5", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "3bf2ec297e583525a8e5379cfdb16d0b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "f681e9c0c3cc6c59d4593a72e3527dde2cae7215", "commitAfterChange": "1b6c294391226cfde58f43f4cff9ad65bab6672e", "methodNumberBeforeChange": 22, "methodNumberAfterChange": 22, "signatureBeforeChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject project)", "signatureAfterChange": " \tpublic static CompilationUnit parseCompilationUnit( \t\tchar[] source, \t\tString unitName, \t\tIJavaProject project)", "diff": ["-\t\tASTParser c = ASTParser.newParser(AST.JLS2);", "-\t\tc.setSource(source);", "-\t\tc.setUnitName(unitName);", "-\t\tc.setProject(project);", "-\t\tASTNode result = c.createAST(null);", "+\t\tASTParser astParser = ASTParser.newParser(AST.JLS2);", "+\t\tastParser.setSource(source);", "+\t\tastParser.setUnitName(unitName);", "+\t\tastParser.setProject(project);", "+\t\tastParser.setResolveBindings(project != null);", "+\t\tASTNode result = astParser.createAST(null);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c301ad4a89b1537b049ce46ac2a6a8f2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterJavadocTest.java", "commitBeforeChange": "f174c5e3ec66ea2a46810b190cc3e9d57c0432d4", "commitAfterChange": "8bbacffbe712e7ac5a5d22a44809b44ff8a5e616", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": " \t\tpublic boolean visit(ArrayType node)", "signatureAfterChange": "  \tpublic ASTNode runConversion(char[] source, String unitName, IJavaProject project)", "diff": ["-\t\t */", "-\t\tpublic boolean visit(ArrayType node) {", "-\t\t\tnode.getComponentType().accept(this);", "-\t\t\tthis.buffer.append(\"[]\");//$NON-NLS-1$", "-\t\t\treturn false;", "-\t\t}", "+\tpublic ASTNode runConversion(char[] source, String unitName, IJavaProject project) {", "+\t\tASTParser parser = ASTParser.newParser(AST.LEVEL_2_0);", "+\t\tparser.setSource(source);", "+\t\tparser.setUnitName(unitName);", "+\t\tparser.setProject(project);", "+\t\tparser.setResolveBindings(this.resolveBinding);", "+\t\treturn parser.createAST(null);"]}], "num": 20330}