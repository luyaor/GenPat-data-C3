{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "478881912ade116e56205c4df689da92", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "09a3e8dbcc8e5d34d32676f9c4395e70", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 12, "methodNumberAfterChange": 14, "signatureBeforeChange": " \tvoid preAddChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "signatureAfterChange": " \tvoid preAddChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE ADD]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\t// IMPORTANT: this method is called by readers during lazy init", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE ADD]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0fdf1eb80bcf60a57b48c2b9b6b42c10", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 16, "methodNumberAfterChange": 18, "signatureBeforeChange": " \tvoid preCloneNodeEvent(ASTNode node)", "signatureAfterChange": " \tvoid preCloneNodeEvent(ASTNode node)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE CLONE]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE CLONE]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a2500a05ad3a96687581ee0341425b5", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 14, "methodNumberAfterChange": 16, "signatureBeforeChange": " \tvoid preValueChangeEvent(ASTNode node, SimplePropertyDescriptor property)", "signatureAfterChange": " \tvoid preValueChangeEvent(ASTNode node, SimplePropertyDescriptor property)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE CHANGE]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\t// IMPORTANT: this method is called by readers during lazy init", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE CHANGE]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4080423ed51378ecc44b3bca75e55f6e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " \tvoid postRemoveChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "signatureAfterChange": " \tvoid postRemoveChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE DEL]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\t// IMPORTANT: this method is called by readers during lazy init", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE DEL]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "81ebd76b541a7bbe6dd51bf2d61f5de0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tvoid preReplaceChildEvent(ASTNode node, ASTNode child, ASTNode newChild, StructuralPropertyDescriptor property)", "signatureAfterChange": " \tvoid preReplaceChildEvent(ASTNode node, ASTNode child, ASTNode newChild, StructuralPropertyDescriptor property)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE DEL]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\t// IMPORTANT: this method is called by readers during lazy init", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE REP]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8a30716956c81f3e526686e3833d460e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tvoid preRemoveChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "signatureAfterChange": " \tvoid preRemoveChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE DEL]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\t// IMPORTANT: this method is called by readers during lazy init", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE DEL]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8e5abea1d3767143f68df5018645d15b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tvoid postReplaceChildEvent(ASTNode node, ASTNode child, ASTNode newChild, StructuralPropertyDescriptor property)", "signatureAfterChange": " \tvoid postReplaceChildEvent(ASTNode node, ASTNode child, ASTNode newChild, StructuralPropertyDescriptor property)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE DEL]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\t// IMPORTANT: this method is called by readers during lazy init", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE REP]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "99a7868899c49f5ff2ead3acf5e2c3ca", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 15, "signatureBeforeChange": " \tvoid postAddChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "signatureAfterChange": " \tvoid postAddChildEvent(ASTNode node, ASTNode child, StructuralPropertyDescriptor property)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE ADD]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\t// IMPORTANT: this method is called by readers during lazy init", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE ADD]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "d0cf4ec3ad2aa05e78b983c98c235989", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": " \tvoid postValueChangeEvent(ASTNode node, SimplePropertyDescriptor property)", "signatureAfterChange": " \tvoid postValueChangeEvent(ASTNode node, SimplePropertyDescriptor property)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE CHANGE]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\t// IMPORTANT: this method is called by readers during lazy init", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE CHANGE]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "dde67adf3d4ed28bf191aad4bbbf8acc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/AST.java", "commitBeforeChange": "865f0d98bfa165e288339ed90c13b870dd7b485b", "commitAfterChange": "049a10d559ac98007e03174de215c833cb620a6a", "methodNumberBeforeChange": 17, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tvoid postCloneNodeEvent(ASTNode node, ASTNode clone)", "signatureAfterChange": " \tvoid postCloneNodeEvent(ASTNode node, ASTNode clone)", "diff": ["-\t\tif (this.disableEvents > 0) {", "-\t\t\t// doing lazy init OR already processing an event", "-\t\t\t// System.out.println(\"[BOUNCE CLONE]\"); //$NON-NLS-1$", "-\t\t\treturn;", "+\t\tsynchronized (this.internalASTLock) {", "+\t\t\t// guard against concurrent access by a reader doing lazy init", "+\t\t\tif (this.disableEvents > 0) {", "+\t\t\t\t// doing lazy init OR already processing an event", "+\t\t\t\t// System.out.println(\"[BOUNCE CLONE]\"); //$NON-NLS-1$", "+\t\t\t\treturn;", "+\t\t\t} else {", "+\t\t\t\tdisableEvents();", "+\t\t\t}", "-\t\t\tthis.disableEvents++;", "-\t\t\tthis.disableEvents--;", "+\t\t\treenableEvents();"]}], "num": 47549}