{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "1b1c8cf7d2d190d99b05c391439013b6", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "18f44f8e994e817e9d1d2521b61e61c0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapExecutor.java", "commitBeforeChange": "ea5c9cc312f4b4f8b75e3a6a2f95be1c2b2c1422", "commitAfterChange": "1d27cfb65a8550e3dd44f890da53c4bdcdcccdbf", "methodNumberBeforeChange": 15, "methodNumberAfterChange": 17, "signatureBeforeChange": "  \tprivate double getWrapPenalty(int lineStartIndex, int lineIndent, int wrapIndex, int wrapIndent, \t\t\tWrapResult wrapResult)", "signatureAfterChange": "  \tprivate double getWrapPenalty(int lineStartIndex, int lineIndent, int wrapIndex, int wrapIndent, \t\t\tWrapResult wrapResult) throws WrapRestartException", "diff": ["-\t\t\tWrapResult wrapResult) {", "+\t\t\tWrapResult wrapResult) throws WrapRestartException {", "-\t\tWrapResult nextWrapResult = wrapResult;", "+\t\tWrapInfo nextWrap = wrapResult.nextWrap;", "-\t\twhile (checkDepth && nextWrapResult.nextWrap != null) {", "-\t\t\tWrapPolicy nextPolicy = this.tm.get(nextWrapResult.nextWrap.wrapTokenIndex).getWrapPolicy();", "+\t\twhile (checkDepth && nextWrap != null) {", "+\t\t\tWrapPolicy nextPolicy = this.tm.get(nextWrap.wrapTokenIndex).getWrapPolicy();", "-\t\t\tnextWrapResult = this.wrapSearchResults.get(nextWrapResult.nextWrap);", "+\t\t\tnextWrap = findWrapsCached(nextWrap.wrapTokenIndex, nextWrap.indent).nextWrap;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "511f387f1619a6405b5a377e8a5cb57a", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/formatter/org/eclipse/jdt/internal/formatter/linewrap/WrapPreparator.java", "commitBeforeChange": "ffcab3bbd38103e7f6861237d076c93f4488ed08", "commitAfterChange": "47edf8779d5fde154f431bcc7b03f2f397cce5d5", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 8, "signatureBeforeChange": "  \t@Override \tpublic boolean visit(MethodDeclaration node)", "signatureAfterChange": "  \t@Override \tpublic boolean visit(MethodDeclaration node)", "diff": ["+\t\t\tthis.wrapParentIndex = this.tm.findFirstTokenInLine(this.tm.firstIndexIn(node.getName(), -1));", "-\t\t\tif (node.getReturnType2() != null && !node.modifiers().isEmpty())", "-\t\t\t\tthis.wrapIndexes.add(this.tm.firstIndexIn(node.getReturnType2(), -1));", "+\t\t\tif (node.getReturnType2() != null) {", "+\t\t\t\tint returTypeIndex = this.tm.firstIndexIn(node.getReturnType2(), -1);", "+\t\t\t\tif (returTypeIndex != this.wrapParentIndex)", "+\t\t\t\t\tthis.wrapIndexes.add(returTypeIndex);", "+\t\t\t}", "-\t\t\tthis.wrapParentIndex = this.tm.findFirstTokenInLine(this.tm.firstIndexIn(node.getName(), -1));"]}], "num": 57324}