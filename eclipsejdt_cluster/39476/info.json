{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9b75be9a459b5960a79596dfaf68d8ff", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8c4821c44ac830e979693a21b15b6bb2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 168, "methodNumberAfterChange": 168, "signatureBeforeChange": " protected void consumeStatementReturn()", "signatureAfterChange": " protected void consumeStatementReturn()", "diff": ["-\tif (expressionLengthStack[expressionLengthPtr--] != 0) {", "+\tif (this.expressionLengthStack[this.expressionLengthPtr--] != 0) {", "-\t\t\t\texpressionStack[expressionPtr--], ", "-\t\t\t\tintStack[intPtr--], ", "-\t\t\t\tendPosition)", "+\t\t\t\tthis.expressionStack[this.expressionPtr--], ", "+\t\t\t\tthis.intStack[this.intPtr--], ", "+\t\t\t\tthis.endPosition)", "-\t\tpushOnAstStack(new ReturnStatement(null, intStack[intPtr--], endPosition));", "+\t\tpushOnAstStack(new ReturnStatement(null, this.intStack[this.intPtr--], this.endPosition));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f7159e07cbae2da02fa1ccfd614da345", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/Parser.java", "commitBeforeChange": "1c4e30980d3a14b65dc5cd77977149f85c37b02a", "commitAfterChange": "72d09911302484497c2776b017dc226fd10250ec", "methodNumberBeforeChange": 38, "methodNumberAfterChange": 38, "signatureBeforeChange": " protected void consumeCastExpression()", "signatureAfterChange": " protected void consumeCastExpression()", "diff": ["-\t//intStack : posOfLeftParen dim posOfRightParen", "+\t//this.intStack : posOfLeftParen dim posOfRightParen", "-\tint end = intStack[intPtr--];", "-\texpressionStack[expressionPtr] = cast = new CastExpression(exp = expressionStack[expressionPtr], castType = getTypeReference(intStack[intPtr--]));", "+\tint end = this.intStack[this.intPtr--];", "+\tthis.expressionStack[this.expressionPtr] = cast = new CastExpression(exp = this.expressionStack[this.expressionPtr], castType = getTypeReference(this.intStack[this.intPtr--]));", "-\tcastType.sourceStart = (cast.sourceStart = intStack[intPtr--]) + 1;", "+\tcastType.sourceStart = (cast.sourceStart = this.intStack[this.intPtr--]) + 1;"]}], "num": 39476}