{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "484991ca0cbfb3d2ad0a0bee6263da3b", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "1650ae36e40c487693a04b8450d20798", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "9d422f535f1cf1a8b8f8401815db736b124961e4", "commitAfterChange": "13ebf03f7d31f9fda8d23c3fe70da0f01fcad14a", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": " public void activateProcessing()", "signatureAfterChange": "  public synchronized void aboutToUpdateIndex(IPath path, Integer newIndexState)", "diff": ["- */", "-public void activateProcessing() {", "-\ttry {", "-\t\tThread.sleep(10000); // wait 10 seconds so as not to interfere with plugin startup", "-\t} catch (InterruptedException ie) {", "-\t}\t", "-\tcheckIndexConsistency();", "-\tsuper.activateProcessing();", "-}", "+", "+public synchronized void aboutToUpdateIndex(IPath path, Integer newIndexState) {", "+\t// newIndexState is either UPDATING_STATE or REBUILDING_STATE", "+\t// must tag the index as inconsistent, in case we exit before the update job is started", "+\tString indexName = computeIndexName(path);", "+\tObject state = getIndexStates().get(indexName);", "+\tInteger currentIndexState = state == null ? UNKNOWN_STATE : (Integer) state;", "+", "+\tint compare = newIndexState.compareTo(currentIndexState);", "+\tif (compare > 0) {", "+\t\t// so UPDATING_STATE replaces SAVED_STATE and REBUILDING_STATE replaces everything", "+\t\tupdateIndexState(indexName, newIndexState);", "+\t} else if (compare < 0 && this.indexes.get(path) == null) {", "+\t\t// if already cached index then there is nothing more to do", "+\t\trebuildIndex(indexName, path);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "74af68f73143fa14354a709c69c0fea7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/indexing/IndexManager.java", "commitBeforeChange": "e0e148cd6b9c732819785b1a6035a4b2d3b71b69", "commitAfterChange": "e8d8994ddc9e43f92485e51c19ef36ea93b3771d", "methodNumberBeforeChange": 6, "methodNumberAfterChange": 7, "signatureBeforeChange": " public synchronized Index getIndexForUpdate(IPath path, boolean reuseExistingFile, boolean createIfMissing)", "signatureAfterChange": " public synchronized Index getIndexForUpdate(IPath containerPath, boolean reuseExistingFile, boolean createIfMissing)", "diff": ["-public synchronized Index getIndexForUpdate(IPath path, boolean reuseExistingFile, boolean createIfMissing) {", "-\tString indexName = computeIndexName(path);", "-\tif (getIndexStates().get(indexName) == REBUILDING_STATE)", "-\t\treturn getIndex(path, reuseExistingFile, createIfMissing);", "+}", "+public synchronized Index getIndexForUpdate(IPath containerPath, boolean reuseExistingFile, boolean createIfMissing) {", "+\tString indexLocation = computeIndexLocation(containerPath);", "+\tif (getIndexStates().get(indexLocation) == REBUILDING_STATE)", "+\t\treturn getIndex(containerPath, indexLocation, reuseExistingFile, createIfMissing);"]}], "num": 58044}