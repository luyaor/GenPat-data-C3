{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "a6d4ca6c48c4924f85055f2b0e3c6427", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "380ec860e135af140ad22f7c7656a576", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/SetClasspathOperation.java", "commitBeforeChange": "8376377bee92e0d16cfa404c8d1e948dcf5be147", "commitAfterChange": "0a6cb9139841c5f6143bc94201bfcbd6024601de", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tprotected int classpathContains( \t\tIClasspathEntry[] list, \t\tIClasspathEntry entry)", "signatureAfterChange": " \tprotected int classpathContains( \t\tIClasspathEntry[] list, \t\tIClasspathEntry entry)", "diff": ["+\t\t\t\t\t// check custom outputs", "+\t\t\t\t\tIPath entryOutput = entry.getOutputLocation();", "+\t\t\t\t\tIPath otherOutput = other.getOutputLocation();", "+\t\t\t\t\tif (entryOutput == null) {", "+\t\t\t\t\t\tif (otherOutput != null)", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tif (!entryOutput.equals(otherOutput))", "+\t\t\t\t\t\t\tcontinue;", "+\t\t\t\t\t}", "+\t\t\t\t\t", "+\t\t\t\t\t// check exclusion patterns"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "65ded6d06cca2910d9560e7df3d2bea3", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/diagnose/LexStream.java", "commitBeforeChange": "5fa6afe954089094ae8cca4de90fd35757e48b64", "commitAfterChange": "ae67359ba1af0f32a3cb74678feaffc1673aa2c9", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \t \tprivate void readTokenFromScanner()", "signatureAfterChange": " \t \tprivate void readTokenFromScanner()", "diff": ["+\t\t", "+\t\t\t\t\t\tint pInterval = Util.getPreviousInterval(start, end, intervalStartToSkip, intervalEndToSkip);", "+\t\t\t\t\t\tif(pInterval != previousInterval){", "+\t\t\t\t\t\t\ttoken.flags = IS_AFTER_JUMP;", "+\t\t\t\t\t\t\tif((intervalFlagsToSkip[pInterval] & Util.LBRACE_MISSING) != 0){", "+\t\t\t\t\t\t\t\ttoken.flags |= LBRACE_MISSING;", "+\t\t\t\t\t\t\t}", "+\t\t\t\t\t\t}", "+\t\t\t\t\t\tpreviousInterval = pInterval;", "+"]}], "num": 30729}