{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "aecdf436d030d3ee7754f9e76b1dc0ca", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "24562fb4cf2d50dfd75e29f066683278", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/LookupEnvironment.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 27, "methodNumberAfterChange": 27, "signatureBeforeChange": "  TypeBinding getTypeFromSignature(char[] signature, int start, int end, boolean isParameterized, TypeBinding enclosingType)", "signatureAfterChange": "  TypeBinding getTypeFromSignature(char[] signature, int start, int end, boolean isParameterized, TypeBinding enclosingType)", "diff": ["-\t\t\t\tbinding = IntBinding;", "+\t\t\t\tbinding = TypeBinding.INT;", "-\t\t\t\tbinding = BooleanBinding;", "+\t\t\t\tbinding = TypeBinding.BOOLEAN;", "-\t\t\t\tbinding = VoidBinding;", "+\t\t\t\tbinding = TypeBinding.VOID;", "-\t\t\t\tbinding = CharBinding;", "+\t\t\t\tbinding = TypeBinding.CHAR;", "-\t\t\t\tbinding = DoubleBinding;", "+\t\t\t\tbinding = TypeBinding.DOUBLE;", "-\t\t\t\tbinding = ByteBinding;", "+\t\t\t\tbinding = TypeBinding.BYTE;", "-\t\t\t\tbinding = FloatBinding;", "+\t\t\t\tbinding = TypeBinding.FLOAT;", "-\t\t\t\tbinding = LongBinding;", "+\t\t\t\tbinding = TypeBinding.LONG;", "-\t\t\t\tbinding = ShortBinding;", "+\t\t\t\tbinding = TypeBinding.SHORT;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52e77520e82fb820452de9a0bbb5ff63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/BinaryExpression.java", "commitBeforeChange": "090b7506b3ab9c07ea9fd06731a9f4e99a99b062", "commitAfterChange": "621bbc75ca3867569a8570d69a8ba58a735bd4e0", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": " \t\t \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["-\t\t\t\tif (rightType.isArrayType() && ((ArrayBinding) rightType).elementsType() == CharBinding) {", "+\t\t\t\tif (rightType.isArrayType() && ((ArrayBinding) rightType).elementsType() == TypeBinding.CHAR) {", "-\t\t\t\tif (leftType.isArrayType() && ((ArrayBinding) leftType).elementsType() == CharBinding) {", "+\t\t\t\tif (leftType.isArrayType() && ((ArrayBinding) leftType).elementsType() == TypeBinding.CHAR) {", "-\t\t\t\tthis.resolvedType = BooleanBinding;", "+\t\t\t\tthis.resolvedType = TypeBinding.BOOLEAN;", "-\t\t\t\tthis.resolvedType = ByteBinding;", "+\t\t\t\tthis.resolvedType = TypeBinding.BYTE;", "-\t\t\t\tthis.resolvedType = CharBinding;", "+\t\t\t\tthis.resolvedType = TypeBinding.CHAR;", "-\t\t\t\tthis.resolvedType = DoubleBinding;", "+\t\t\t\tthis.resolvedType = TypeBinding.DOUBLE;", "-\t\t\t\tthis.resolvedType = FloatBinding;", "+\t\t\t\tthis.resolvedType = TypeBinding.FLOAT;", "-\t\t\t\tthis.resolvedType = IntBinding;", "+\t\t\t\tthis.resolvedType = TypeBinding.INT;", "-\t\t\t\tthis.resolvedType = LongBinding;", "+\t\t\t\tthis.resolvedType = TypeBinding.LONG;"]}], "num": 14573}