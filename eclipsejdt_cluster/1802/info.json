{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9a2920570aba19db65f9134e8804081e", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2a6a1efe13a3ce61b16b9705fcde97c6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "c85c898de3099d8d87b870385bc47667302c5e21", "commitAfterChange": "73c6d3ea7dc5df8e531fcab68ea3f39bbd288577", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void complainOnDeferredChecks(BlockScope scope, FlowInfo flowInfo)", "signatureAfterChange": " public void complainOnDeferredFinalChecks(BlockScope scope, FlowInfo flowInfo)", "diff": ["-\t", "-\tpublic void complainOnDeferredChecks(BlockScope scope, FlowInfo flowInfo) {", "-\t\t", "-\t\t// complain on final assignments in loops", "-\t\tfor (int i = 0; i < assignCount; i++) {", "-\t\t\tVariableBinding variable = finalVariables[i];", "-\t\t\tif (variable == null) continue;", "-\t\t\tboolean complained = false; // remember if have complained on this final assignment", "-\t\t\tif (variable instanceof FieldBinding) {", "-\t\t\t\tif (flowInfo.isPotentiallyAssigned((FieldBinding) variable)) {", "-\t\t\t\t\tcomplained = true;", "-\t\t\t\t\tscope.problemReporter().duplicateInitializationOfBlankFinalField(", "-\t\t\t\t\t\t(FieldBinding) variable,", "-\t\t\t\t\t\tfinalAssignments[i]);", "-\t\t\t\t}", "-\t\t\t} else {", "-\t\t\t\tif (flowInfo.isPotentiallyAssigned((LocalVariableBinding) variable)) {", "-\t\t\t\t\tcomplained = true;", "-\t\t\t\t\tscope.problemReporter().duplicateInitializationOfFinalLocal(", "-\t\t\t\t\t\t(LocalVariableBinding) variable,", "-\t\t\t\t\t\tfinalAssignments[i]);", "-\t\t\t\t}", "-\t\t\t}", "-\t\t\t// any reference reported at this level is removed from the parent context where it ", "-\t\t\t// could also be reported again", "-\t\t\tif (complained) {", "-\t\t\t\tFlowContext context = parent;", "-\t\t\t\twhile (context != null) {", "-\t\t\t\t\tcontext.removeFinalAssignmentIfAny(finalAssignments[i]);", "-\t\t\t\t\tcontext = context.parent;", "-\t\t\t\t}", "-\t\t\t}", "-\t\t}", "-\t\t// check inconsistent null checks", "-\t\tfor (int i = 0; i < nullCount; i++) {", "-\t\t\tExpression expression = nullReferences[i];", "-\t\t\tif (expression == null) continue;", "-\t\t\t// final local variable", "-\t\t\tLocalVariableBinding local = expression.localVariableBinding();", "-\t\t\tswitch (nullStatus[i]) {", "-\t\t\t\tcase FlowInfo.NULL :", "-\t\t\t\t\tif (flowInfo.isDefinitelyNull(local)) {", "-\t\t\t\t\t\tnullReferences[i] = null;", "-\t\t\t\t\t\tthis.parent.recordUsingNullReference(scope, local, expression, nullStatus[i], flowInfo);", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t\tcase FlowInfo.NON_NULL :", "-\t\t\t\t\tif (flowInfo.isDefinitelyNonNull(local)) {", "-\t\t\t\t\t\tnullReferences[i] = null;", "-\t\t\t\t\t\tthis.parent.recordUsingNullReference(scope, local, expression, nullStatus[i], flowInfo);", "-\t\t\t\t\t}", "-\t\t\t\t\tbreak;", "-\t\t\t}", "-\t\t}\t\t", "+ */", "+public void complainOnDeferredFinalChecks(BlockScope scope, FlowInfo flowInfo) {", "+\t// complain on final assignments in loops", "+\tfor (int i = 0; i < assignCount; i++) {", "+\t\tVariableBinding variable = finalVariables[i];", "+\t\tif (variable == null) continue;", "+\t\tboolean complained = false; // remember if have complained on this final assignment", "+\t\tif (variable instanceof FieldBinding) {", "+\t\t\tif (flowInfo.isPotentiallyAssigned((FieldBinding) variable)) {", "+\t\t\t\tcomplained = true;", "+\t\t\t\tscope.problemReporter().duplicateInitializationOfBlankFinalField(", "+\t\t\t\t\t(FieldBinding) variable,", "+\t\t\t\t\tfinalAssignments[i]);", "+\t\t\t}", "+\t\t} else {", "+\t\t\tif (flowInfo.isPotentiallyAssigned((LocalVariableBinding) variable)) {", "+\t\t\t\tcomplained = true;", "+\t\t\t\tscope.problemReporter().duplicateInitializationOfFinalLocal(", "+\t\t\t\t\t(LocalVariableBinding) variable,", "+\t\t\t\t\tfinalAssignments[i]);", "+\t\t\t}", "+\t\t}", "+\t\t// any reference reported at this level is removed from the parent context where it ", "+\t\t// could also be reported again", "+\t\tif (complained) {", "+\t\t\tFlowContext context = parent;", "+\t\t\twhile (context != null) {", "+\t\t\t\tcontext.removeFinalAssignmentIfAny(finalAssignments[i]);", "+\t\t\t\tcontext = context.parent;", "+\t\t\t}", "+\t\t}", "+\t}", "+}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7b2e05361eb2fdd4f739dd3d502c38e6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/FinallyFlowContext.java", "commitBeforeChange": "85b2cfd04e83239095fec1009e8fcb37543a6bed", "commitAfterChange": "a825a712d9a7173d7e7cfae42a0058bb2e0b5bb5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void complainOnRedundantFinalAssignments( \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "signatureAfterChange": " \tpublic void complainOnRedundantFinalAssignments( \t\tFlowInfo flowInfo, \t\tBlockScope scope)", "diff": ["-\t\t\tReference ref;", "-\t\t\tif (((ref = finalAssignments[i]).bits & BindingIds.FIELD) != 0) {", "+\t\t\tVariableBinding variable = finalVariables[i];", "+\t\t\tif (variable == null) continue;", "+\t\t\t", "+\t\t\tboolean complained = false; // remember if have complained on this final assignment", "+\t\t\tif (variable instanceof FieldBinding) {", "-\t\t\t\tif (flowInfo.isPotentiallyAssigned(ref.fieldBinding())) {", "-\t\t\t\t\tscope.problemReporter().duplicateInitializationOfBlankFinalField(ref.fieldBinding(), ref);", "+\t\t\t\tif (flowInfo.isPotentiallyAssigned((FieldBinding)variable)) {", "+\t\t\t\t\tcomplained = true;", "+\t\t\t\t\tscope.problemReporter().duplicateInitializationOfBlankFinalField((FieldBinding)variable, finalAssignments[i]);", "-\t\t\t\tif (flowInfo", "-\t\t\t\t\t.isPotentiallyAssigned((LocalVariableBinding) ((NameReference) ref).binding)) {", "+\t\t\t\tif (flowInfo.isPotentiallyAssigned((LocalVariableBinding) variable)) {", "+\t\t\t\t\tcomplained = true;", "-\t\t\t\t\t\t(LocalVariableBinding) ((NameReference) ref).binding,", "-\t\t\t\t\t\t(NameReference) ref);", "+\t\t\t\t\t\t(LocalVariableBinding) variable,", "+\t\t\t\t\t\tfinalAssignments[i]);", "-\t\t\tFlowContext currentContext = parent;", "-\t\t\twhile (currentContext != null) {", "-\t\t\t\tif (currentContext.isSubRoutine()) {", "-\t\t\t\t\tcurrentContext.removeFinalAssignmentIfAny(ref);", "+\t\t\tif (complained) {", "+\t\t\t\tFlowContext currentContext = parent;", "+\t\t\t\twhile (currentContext != null) {", "+\t\t\t\t\t//if (currentContext.isSubRoutine()) {", "+\t\t\t\t\tcurrentContext.removeFinalAssignmentIfAny(finalAssignments[i]);", "+\t\t\t\t\t//}", "+\t\t\t\t\tcurrentContext = currentContext.parent;", "-\t\t\t\tcurrentContext = currentContext.parent;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "f5e82d4ce552c12ebae9d477a7e1893e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/flow/LoopingFlowContext.java", "commitBeforeChange": "85b2cfd04e83239095fec1009e8fcb37543a6bed", "commitAfterChange": "a825a712d9a7173d7e7cfae42a0058bb2e0b5bb5", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \t \tpublic void complainOnFinalAssignmentsInLoop( \t\tBlockScope scope, \t\tFlowInfo flowInfo)", "signatureAfterChange": " \t \tpublic void complainOnFinalAssignmentsInLoop( \t\tBlockScope scope, \t\tFlowInfo flowInfo)", "diff": ["-\t\t\tVariableBinding variable;", "-\t\t\tif ((variable = finalVariables[i]) != null) {", "-\t\t\t\tboolean complained; // remember if have complained on this final assignment", "-\t\t\t\tif (variable instanceof FieldBinding) {", "-\t\t\t\t\tif (complained = flowInfo.isPotentiallyAssigned((FieldBinding) variable)) {", "-\t\t\t\t\t\tscope.problemReporter().duplicateInitializationOfBlankFinalField(", "-\t\t\t\t\t\t\t(FieldBinding) variable,", "-\t\t\t\t\t\t\t(NameReference) finalAssignments[i]);", "-\t\t\t\t\t}", "-\t\t\t\t} else {", "-\t\t\t\t\tif (complained =", "-\t\t\t\t\t\tflowInfo.isPotentiallyAssigned((LocalVariableBinding) variable)) {", "-\t\t\t\t\t\tscope.problemReporter().duplicateInitializationOfFinalLocal(", "-\t\t\t\t\t\t\t(LocalVariableBinding) variable,", "-\t\t\t\t\t\t\t(NameReference) finalAssignments[i]);", "-\t\t\t\t\t}", "+\t\t\tVariableBinding variable = finalVariables[i];", "+\t\t\tif (variable == null) continue;", "+\t\t\tboolean complained = false; // remember if have complained on this final assignment", "+\t\t\tif (variable instanceof FieldBinding) {", "+\t\t\t\tif (flowInfo.isPotentiallyAssigned((FieldBinding) variable)) {", "+\t\t\t\t\tcomplained = true;", "+\t\t\t\t\tscope.problemReporter().duplicateInitializationOfBlankFinalField(", "+\t\t\t\t\t\t(FieldBinding) variable,", "+\t\t\t\t\t\tfinalAssignments[i]);", "-\t\t\t\t// any reference reported at this level is removed from the parent context where it ", "-\t\t\t\t// could also be reported again", "-\t\t\t\tif (complained) {", "-\t\t\t\t\tFlowContext context = parent;", "-\t\t\t\t\twhile (context != null) {", "-\t\t\t\t\t\tcontext.removeFinalAssignmentIfAny(finalAssignments[i]);", "-\t\t\t\t\t\tcontext = context.parent;", "-\t\t\t\t\t}", "+\t\t\t} else {", "+\t\t\t\tif (flowInfo.isPotentiallyAssigned((LocalVariableBinding) variable)) {", "+\t\t\t\t\tcomplained = true;", "+\t\t\t\t\tscope.problemReporter().duplicateInitializationOfFinalLocal(", "+\t\t\t\t\t\t(LocalVariableBinding) variable,", "+\t\t\t\t\t\tfinalAssignments[i]);", "+\t\t\t\t}", "+\t\t\t}", "+\t\t\t// any reference reported at this level is removed from the parent context where it ", "+\t\t\t// could also be reported again", "+\t\t\tif (complained) {", "+\t\t\t\tFlowContext context = parent;", "+\t\t\t\twhile (context != null) {", "+\t\t\t\t\tcontext.removeFinalAssignmentIfAny(finalAssignments[i]);", "+\t\t\t\t\tcontext = context.parent;"]}], "num": 1802}