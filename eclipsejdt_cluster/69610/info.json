{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "22d484bef889c3b66cf5dc4f2416e616", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "0dc79cf576bb45ec369aa0fd568a0d63", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "284c289846ff27fe8fc104da5e422fc3fb8c5d90", "commitAfterChange": "d58bdec0f146f760f6233d5bf4f36c667901fb8f", "methodNumberBeforeChange": 209, "methodNumberAfterChange": 209, "signatureBeforeChange": " public void javadocInvalidConstructor(Statement statement, MethodBinding targetConstructor, int modifiers)", "signatureAfterChange": " public void javadocInvalidConstructor(Statement statement, MethodBinding targetConstructor, int modifiers)", "diff": ["-\t\t\tTypeBinding typeArgument = targetConstructor.parameters[0];", "-\t\t\tTypeVariableBinding typeParameter = (TypeVariableBinding) targetConstructor.parameters[1];", "+\t\t\t", "+\t\t\tint augmentedLength = problemConstructor.parameters.length;", "+\t\t\tTypeBinding inferredTypeArgument = problemConstructor.parameters[augmentedLength-2];", "+\t\t\tTypeVariableBinding typeParameter = (TypeVariableBinding) problemConstructor.parameters[augmentedLength-1];", "+\t\t\tTypeBinding[] invocationArguments = new TypeBinding[augmentedLength-2]; // remove extra info from the end", "+\t\t\tSystem.arraycopy(problemConstructor.parameters, 0, invocationArguments, 0, augmentedLength-2);", "+\t\t\t", "-\t\t\t\t        typesAsString(substitutedConstructor.isVarargs(), substitutedConstructor.parameters, false), ", "-\t\t\t\t        new String(typeArgument.readableName()), ", "+\t\t\t\t        typesAsString(false, invocationArguments, false), ", "+\t\t\t\t        new String(inferredTypeArgument.readableName()), ", "-\t\t\t\t        typesAsString(substitutedConstructor.isVarargs(), substitutedConstructor.parameters, true), ", "-\t\t\t\t        new String(typeArgument.shortReadableName()), ", "+\t\t\t\t        typesAsString(false, invocationArguments, true), ", "+\t\t\t\t        new String(inferredTypeArgument.shortReadableName()), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9dbe68bbf5ea5d033822826eb51e765f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/problem/ProblemReporter.java", "commitBeforeChange": "6e1daeed1b338c470552c705d4bce7d654dc9164", "commitAfterChange": "284c289846ff27fe8fc104da5e422fc3fb8c5d90", "methodNumberBeforeChange": 175, "methodNumberAfterChange": 175, "signatureBeforeChange": " public void invalidMethod(MessageSend messageSend, MethodBinding method)", "signatureAfterChange": " public void invalidMethod(MessageSend messageSend, MethodBinding method)", "diff": ["-\t\t\t\t\tString parameterTypeNames = typesAsString(method.isVarargs(), method.parameters, false);", "+\t\t\t\t\tString parameterTypeNames = typesAsString(false, problemMethod.parameters, false);", "-\t\t\t\t\tString parameterTypeShortNames = typesAsString(method.isVarargs(), method.parameters, true);", "+\t\t\t\t\tString parameterTypeShortNames = typesAsString(false, problemMethod.parameters, true);", "-\t\t\tTypeBinding typeArgument = method.parameters[0];", "-\t\t\tTypeVariableBinding typeParameter = (TypeVariableBinding) method.parameters[1];", "+\t\t\tint augmentedLength = problemMethod.parameters.length;", "+\t\t\tTypeBinding inferredTypeArgument = problemMethod.parameters[augmentedLength-2];", "+\t\t\tTypeVariableBinding typeParameter = (TypeVariableBinding) problemMethod.parameters[augmentedLength-1];", "+\t\t\tTypeBinding[] invocationArguments = new TypeBinding[augmentedLength-2]; // remove extra info from the end", "+\t\t\tSystem.arraycopy(problemMethod.parameters, 0, invocationArguments, 0, augmentedLength-2);", "-\t\t\t\t        typesAsString(substitutedMethod.isVarargs(), substitutedMethod.parameters, false), ", "-\t\t\t\t        new String(typeArgument.readableName()), ", "+\t\t\t\t        typesAsString(false, invocationArguments, false), ", "+\t\t\t\t        new String(inferredTypeArgument.readableName()), ", "-\t\t\t\t        typesAsString(substitutedMethod.isVarargs(), substitutedMethod.parameters, true), ", "-\t\t\t\t        new String(typeArgument.shortReadableName()), ", "+\t\t\t\t        typesAsString(false, invocationArguments, true), ", "+\t\t\t\t        new String(inferredTypeArgument.shortReadableName()), "]}], "num": 69610}