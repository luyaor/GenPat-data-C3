{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c88302971450a1e9479e3c1e678f29a1", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN", "AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "01348385594e9cb6ffd87dd8e29b8d94", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaModelManager.java", "commitBeforeChange": "155f96ad35dd069f34736b72fe6caa90731d8291", "commitAfterChange": "f4235d9a7ac5aab2dff6835e5bec2b59bb167c66", "methodNumberBeforeChange": 80, "methodNumberAfterChange": 82, "signatureBeforeChange": " \tpublic IPath getPreviousSessionVariable(String variableName)", "signatureAfterChange": " \tpublic IPath getPreviousSessionVariable(String variableName)", "diff": ["-\t\t\tif (CP_RESOLVE_VERBOSE){", "-\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\"CPVariable INIT - reentering access to variable during its initialization, will see previous value\\n\" + //$NON-NLS-1$", "-\t\t\t\t\t\"\tvariable: \"+ variableName + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\"\tprevious value: \" + previousPath); //$NON-NLS-1$", "-\t\t\t\tnew Exception(\"<Fake exception>\").printStackTrace(System.out); //$NON-NLS-1$", "-\t\t\t}", "+\t\t\tif (CP_RESOLVE_VERBOSE_ADVANCED)", "+\t\t\t\tverbose_reentering_variable_access(variableName, previousPath);", "+\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "715845930b5c2e655a8887747285b03c", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaProject.java", "commitBeforeChange": "155f96ad35dd069f34736b72fe6caa90731d8291", "commitAfterChange": "f4235d9a7ac5aab2dff6835e5bec2b59bb167c66", "methodNumberBeforeChange": 86, "methodNumberAfterChange": 86, "signatureBeforeChange": " \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedEntry) throws JavaModelException", "signatureAfterChange": " \tpublic IClasspathEntry[] getResolvedClasspath(boolean ignoreUnresolvedEntry) throws JavaModelException", "diff": ["-\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE) {", "-\t\t\t\tUtil.verbose(", "-\t\t\t\t\t\"CPResolution: reentering raw classpath resolution, will use empty classpath instead\" + //$NON-NLS-1$", "-\t\t\t\t\t\"\tproject: \" + getElementName() + '\\n' + //$NON-NLS-1$", "-\t\t\t\t\t\"\tinvocation stack trace:\"); //$NON-NLS-1$", "-\t\t\t\tnew Exception(\"<Fake exception>\").printStackTrace(System.out); //$NON-NLS-1$", "-\t\t\t}\t\t\t\t\t\t", "+\t\t\tif (JavaModelManager.CP_RESOLVE_VERBOSE_ADVANCED)", "+\t\t\t\tverbose_reentering_classpath_resolution();"]}], "num": 2503}