{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b3ec474a083d47d3d18f9c63a0266bc2", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "55f19e5194cd4589a3968d286b09cb81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/compiler/parser/SourceTypeConverter.java", "commitBeforeChange": "6e642a34a8b5c85df508f049684a8996f1b8df52", "commitAfterChange": "355460267a070a52738f93cd1e4e0f2039fb0d85", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 10, "signatureBeforeChange": " \tprivate ImportReference createImportReference( \t\tchar[] importName, \t\tint start, \t\tint end,  \t\tboolean onDemand, \t\tint modifiers)", "signatureAfterChange": " \tprivate ImportReference createImportReference( \t\tString[] importName, \t\tint start, \t\tint end,  \t\tboolean onDemand, \t\tint modifiers)", "diff": ["-\t\tchar[] importName,", "+\t\tString[] importName,", "-\t\tchar[][] qImportName = CharOperation.splitOn('.', importName);", "-\t\tlong[] positions = new long[qImportName.length];", "+\t\tint length = importName.length;", "+\t\tlong[] positions = new long[length];", "-\t\tfor (int i = 0; i < qImportName.length; i++) {", "+\t\tchar[][] qImportName = new char[length][];", "+\t\tfor (int i = 0; i < length; i++) {", "+\t\t\tqImportName[i] = importName[i].toCharArray();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "86a0dd3f9b724aaa7bb410a3bf38b92f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/OrPattern.java", "commitBeforeChange": "9037a5669c89fc0ae3f8548a99dce6fa5402fb31", "commitAfterChange": "e4e1e1935f0e7607d1265df332c7ce922de89c18", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " protected int matchContainer()", "signatureAfterChange": " protected int matchContainer()", "diff": ["-\treturn leftPattern.matchContainer() | rightPattern.matchContainer();", "+\tint result = 0;", "+\tfor (int i = 0, length = this.patterns.length; i < length; i++)", "+\t\tresult |= this.patterns[i].matchContainer();", "+\treturn result;"]}], "num": 12628}