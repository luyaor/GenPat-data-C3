{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2a3a7fac7a4d0bc4d2fa02b13766e759", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "08be7126668266715eadc3e1a8650cb0", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/AbstractJavaModelTests.java", "commitBeforeChange": "12bbec9151d1b613c62f44289e9e604128f21de0", "commitAfterChange": "cfad6931331ca38f2461ad24853dd9b6dfa652de", "methodNumberBeforeChange": 21, "methodNumberAfterChange": 21, "signatureBeforeChange": " \tprotected void addLibraryEntry(IJavaProject project, IPath path, IPath srcAttachmentPath, IPath srcAttachmentPathRoot, IPath[] inclusionPatterns, IPath[] exclusionPatterns, boolean exported) throws JavaModelException", "signatureAfterChange": " \tprotected void addLibraryEntry(IJavaProject project, IPath path, IPath srcAttachmentPath, IPath srcAttachmentPathRoot, IPath[] accessibleFiles, IPath[] nonAccessibleFiles, boolean exported) throws JavaModelException", "diff": ["-\tprotected void addLibraryEntry(IJavaProject project, IPath path, IPath srcAttachmentPath, IPath srcAttachmentPathRoot, IPath[] inclusionPatterns, IPath[] exclusionPatterns, boolean exported) throws JavaModelException{", "+\tprotected void addLibraryEntry(IJavaProject project, IPath path, IPath srcAttachmentPath, IPath srcAttachmentPathRoot, IPath[] accessibleFiles, IPath[] nonAccessibleFiles, boolean exported) throws JavaModelException{", "-\t\t\tinclusionPatterns == null ? new IPath[0] : inclusionPatterns, ", "-\t\t\texclusionPatterns == null ? new IPath[0] : exclusionPatterns, ", "+\t\t\tClasspathEntry.getAccessRules(accessibleFiles, nonAccessibleFiles), "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5987d9eaf5da3020949ad75d0ef6dbfd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt/src/org/eclipse/jdt/internal/compiler/apt/dispatch/BatchProcessingEnvImpl.java", "commitBeforeChange": "a39c8dbc62a5e1bf969db54203d0105b8e02d687", "commitAfterChange": "05924b2c1a07ba8486df2aefea7b66275c39b6ac", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tprivate Map<String, String> parseProcessorOptions(String[] args)", "signatureAfterChange": " \tprivate Map<String, String> parseProcessorOptions(String[] args)", "diff": ["-\t\t\t\tException e = new IllegalArgumentException(\"-A option must not end with an equals sign\"); //$NON-NLS-1$", "-\t\t\t\tthrow new AbortCompilation(null, e);", "-\t\t\t}", "-", "-\t\t\tif (equals == -1) {", "+\t\t\t\toptions.put(arg.substring(2, equals), null);", "+\t\t\t} else if (equals == -1) {", "-\t\t\t}", "-\t\t\telse {", "+\t\t\t} else {"]}], "num": 55693}