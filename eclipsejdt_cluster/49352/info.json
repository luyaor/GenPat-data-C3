{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "911beeda89226a269446aea6784d6174", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "52b5fe231e7208bda58fb4e0fb552a57", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/util/DefaultBytecodeVisitor.java", "commitBeforeChange": "b18b012adcc471e2280a6e20faa4d2a33f1db69a", "commitAfterChange": "5bb01926d23a6cf003d0d521691c391ac08b77a7", "methodNumberBeforeChange": 132, "methodNumberAfterChange": 132, "signatureBeforeChange": " \tpublic void _invokespecial(int pc, int index, IConstantPoolEntry constantMethodref)", "signatureAfterChange": " \tpublic void _invokespecial(int pc, int index, IConstantPoolEntry constantMethodref)", "diff": ["-", "-\t\tchar[] methodDescriptor = constantMethodref.getMethodDescriptor();", "-\t\tCharOperation.replace(methodDescriptor, '/', '.');", "-\t\tchar[] methodName = constantMethodref.getMethodName();", "-\t\tchar[] returnType = Signature.getReturnType(methodDescriptor);", "-\t\tCharOperation.replace(returnType, '/', '.');", "-\t\t", "-\t\tif (CharOperation.equals(INIT, methodName)) {", "-\t\t\tmethodName = EMPTY_NAME;", "-\t\t\tdumpPcNumber(pc);", "-\t\t\tbuffer.append(OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESPECIAL])", "-\t\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "-\t\t\t\t.append(index)", "-\t\t\t\t.append(Util.bind(\"classformat.invokespecialconstructor\")) //$NON-NLS-1$", "-\t\t\t\t.append(returnDeclaringClassName(constantMethodref))", "-\t\t\t\t.append(", "-\t\t\t\t\tSignature.toCharArray(", "-\t\t\t\t\t\tmethodDescriptor,", "-\t\t\t\t\t\tmethodName,", "-\t\t\t\t\t\tgetParameterNames(methodDescriptor),", "-\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\tfalse))", "-\t\t\t\t.append(Util.bind(\"classformat.invokespecialconstructorclose\")); //$NON-NLS-1$", "-\t\t\twriteNewLine();", "-\t\t} else {", "-\t\t\tdumpPcNumber(pc);", "-\t\t\tbuffer.append(OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESPECIAL])", "-\t\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "-\t\t\t\t.append(index)", "-\t\t\t\t.append(Util.bind(\"classformat.invokespecialmethod\")) //$NON-NLS-1$", "-\t\t\t\t.append(returnDeclaringClassName(constantMethodref))", "-\t\t\t\t.append(Util.bind(\"disassembler.classmemberseparator\")) //$NON-NLS-1$", "-\t\t\t\t.append(", "-\t\t\t\t\tSignature.toCharArray(", "-\t\t\t\t\t\tmethodDescriptor,", "-\t\t\t\t\t\tconstantMethodref.getMethodName(),", "-\t\t\t\t\t\tgetParameterNames(methodDescriptor),", "-\t\t\t\t\t\ttrue,", "-\t\t\t\t\t\tfalse))", "-\t\t\t\t.append(Util.bind(\"disassembler.space\")) //$NON-NLS-1$", "-\t\t\t.append(Signature.toCharArray(returnType))", "-\t\t\t\t.append(Util.bind(\"classformat.invokespecialmethodclose\")); //$NON-NLS-1$", "-\t\t\twriteNewLine();", "-\t\t}", "+\t\tdumpPcNumber(pc);", "+\t\tbuffer.append(OpcodeStringValues.BYTECODE_NAMES[IOpcodeMnemonics.INVOKESPECIAL])", "+\t\t\t.append(Util.bind(\"disassembler.constantpoolindex\")) //$NON-NLS-1$", "+\t\t\t.append(index)", "+\t\t\t.append(Util.bind(\"classformat.invokespecialmethod\")) //$NON-NLS-1$", "+\t\t\t.append(returnDeclaringClassName(constantMethodref))", "+\t\t\t.append(Util.bind(\"disassembler.classmemberseparator\")) //$NON-NLS-1$", "+\t\t\t.append(constantMethodref.getMethodName())", "+\t\t\t.append(constantMethodref.getMethodDescriptor())", "+\t\t\t.append(Util.bind(\"classformat.invokespecialmethodclose\")); //$NON-NLS-1$", "+\t\twriteNewLine();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "accf099643812c65b6222bc26a072878", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/batch/org/eclipse/jdt/internal/compiler/batch/Main.java", "commitBeforeChange": "bf39b08bac5fe04538b98cd37961d265ad6d7cd8", "commitAfterChange": "a502b956779c4dac7f761502999cc6d149ba7556", "methodNumberBeforeChange": 35, "methodNumberAfterChange": 72, "signatureBeforeChange": "  \tpublic void outputClassFiles(CompilationResult unitResult)", "signatureAfterChange": "  \tpublic void outputClassFiles(CompilationResult unitResult)", "diff": ["-", "-\t\t\t\twhile (classFiles.hasMoreElements()) {", "-\t\t\t\t\tthis.destinationPath = extractDestinationPathFromSourceFile(unitResult);", "-\t\t\t\t\t// retrieve the key and the corresponding classfile", "-\t\t\t\t\tClassFile classFile = (ClassFile) classFiles.nextElement();", "-\t\t\t\t\tchar[] filename = classFile.fileName();", "-\t\t\t\t\tint length = filename.length;", "-\t\t\t\t\tchar[] relativeName = new char[length + 6];", "-\t\t\t\t\tSystem.arraycopy(filename, 0, relativeName, 0, length);", "-\t\t\t\t\tSystem.arraycopy(SUFFIX_class, 0, relativeName, length, 6);", "-\t\t\t\t\tCharOperation.replace(relativeName, '/', File.separatorChar);", "-\t\t\t\t\ttry {", "-\t\t\t\t\t\tif (this.compilerOptions.verbose)", "-\t\t\t\t\t\t\tSystem.out.println(Util.bind(\"compilation.write\", //$NON-NLS-1$", "-\t\t\t\t\t\t\t\tnew String[] {", "-\t\t\t\t\t\t\t\t\tString.valueOf(this.exportedClassFilesCounter+1),", "-\t\t\t\t\t\t\t\t\tnew String(relativeName) }));\t\t\t\t\t    ", "-\t\t\t\t\t\tClassFile.writeToDisk(", "-\t\t\t\t\t\t\tthis.generatePackagesStructure,", "-\t\t\t\t\t\t\tthis.destinationPath,", "-\t\t\t\t\t\t\tnew String(relativeName),", "-\t\t\t\t\t\t\tclassFile.getBytes());", "-\t\t\t\t\t} catch (IOException e) {", "-\t\t\t\t\t\tString fileName = this.destinationPath + new String(relativeName);", "-\t\t\t\t\t\te.printStackTrace();", "-\t\t\t\t\t\tthis.logger.printlnErr(Main.bind(\"output.noClassFileCreated\", fileName));  //$NON-NLS-1$", "-\t\t\t\t\t}", "-\t\t\t\t\tthis.exportedClassFilesCounter++;", "-\t\t\t\t}", "-\t\t\t} else if (this.destinationPath != null) {", "+\t\t\t\tthis.destinationPath = extractDestinationPathFromSourceFile(unitResult);", "+\t\t\t}", "+\t\t\tif (this.destinationPath != null) {", "-\t\t\t\t\t\t\t\t\tnew String(relativeName) }));\t\t\t\t\t    ", "+\t\t\t\t\t\t\t\t\tnew String(relativeName)", "+\t\t\t\t\t\t\t\t}));", "+\t\t\t\t\t\tthis.logger.logClassFile(", "+\t\t\t\t\t\t\tthis.generatePackagesStructure,", "+\t\t\t\t\t\t\tthis.destinationPath,", "+\t\t\t\t\t\t\tnew String(relativeName));", "-\t\t\t\t\t\tthis.logger.printlnErr(Main.bind(\"output.noClassFileCreated\", fileName)); //$NON-NLS-1$", "+\t\t\t\t\t\tthis.logger.logNoClassFileCreated(fileName); //$NON-NLS-1$"]}], "num": 49352}