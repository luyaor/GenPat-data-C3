{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "82faa1f2d918374928f4a5afc358a8c5", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "03f7d40eefbbb0e111d7dbe78ff71640", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/ResourceLeakTests.java", "commitBeforeChange": "8f261bb6c49278e86707910a4be5450c713c940a", "commitAfterChange": "b5977e771dcaa856815c805c4cdc6cf2a2c18650", "methodNumberBeforeChange": 33, "methodNumberAfterChange": 33, "signatureBeforeChange": " public void test056y()", "signatureAfterChange": " public void test056y()", "diff": ["-\t\t\t\"                return reader23;\\n\" +", "+\t\t\t\"                return reader23;\\n\" + // responsibility now lies at the caller of this method", "-\t\t\"----------\\n\" +", "-\t\t\"2. WARNING in X.java (at line 17)\\n\" +", "-\t\t\"\tfinal FileReader reader23 = new FileReader(\\\"file\\\");\\n\" +", "-\t\t\"\t                 ^^^^^^^^\\n\" +", "-\t\t\"Potential resource leak: 'reader23' may not be closed\\n\" +"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "70e46917115b971b32a8302ff23dc94f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "51ef1f3e636c416c08f983016f64f795f2b9cc74", "commitAfterChange": "9d3908e6916e224f861c3acffb456d39563ef22b", "methodNumberBeforeChange": 340, "methodNumberAfterChange": 340, "signatureBeforeChange": " \tpublic void test336()", "signatureAfterChange": " \tpublic void test336()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"6. WARNING in X.java (at line 17)\\n\" + ", "-\t\t\t\"\treturn MyClass.myStaticMethod(this, IMyInterface.class);\\n\" + ", "-\t\t\t\"\t       ^^^^^^^\\n\" + ", "-\t\t\t\"Type safety: MyClass is a raw type. References to generic type MyClass<Type> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7116523b86fd6e4dc1b152719610422f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "baba91778491837a84be9560b81c83086d98c36e", "commitAfterChange": "57b083b793c3b8c2d5620895f00ff1c58e226e44", "methodNumberBeforeChange": 631, "methodNumberAfterChange": 631, "signatureBeforeChange": " \tpublic void test0612()", "signatureAfterChange": " \tpublic void test0612()", "diff": ["-    \t\t\"----------\\n\" +", "-    \t\t\"3. WARNING in X.java (at line 7)\\n\" +", "-    \t\t\"\tprivate Bucket[] buckets = new X.Bucket[100];\\n\" +", "-    \t\t\"\t                 ^^^^^^^\\n\" +", "-    \t\t\"The field X<K,V>.buckets is never read locally\\n\" +", "-    \t\t\"----------\\n\");", "+\t    \t\"----------\\n\");"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "7243e0a21221fba8c7c8972d7e830c81", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/NullReferenceTest.java", "commitBeforeChange": "9fd5428ce736a6251b7049cd29424ae48e74034b", "commitAfterChange": "462fdbe66c95fe469d26ca4c9a495870e5915168", "methodNumberBeforeChange": 516, "methodNumberAfterChange": 517, "signatureBeforeChange": " public void testBug336428e()", "signatureAfterChange": " public void testBug336428e()", "diff": ["+/* In general it's safer *not* to assume that o1 is null on every iteration:", "+ */"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa26c8256fc09bca0def3cd2a2ea1b71", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "66d471a1b74f94c3655a30a7eb244a91677924ac", "commitAfterChange": "6422cf28e195cf583d84cd9a0d044425ae0a797f", "methodNumberBeforeChange": 272, "methodNumberAfterChange": 272, "signatureBeforeChange": "\t\t \tpublic void test268()", "signatureAfterChange": "\t\t \tpublic void test268()", "diff": ["-\t\t\t\"----------\\n\" + ", "-\t\t\t\"4. WARNING in X.java (at line 5)\\n\" + ", "-\t\t\t\"\treturn list.toArray(new X[list.size()]);\\n\" + ", "-\t\t\t\"\t                        ^\\n\" + ", "-\t\t\t\"Type safety: X is a raw type. References to generic type X<T> should be parameterized\\n\" + "]}], "num": 51415}