{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "4ce5d627dae08fc74bb697d1161a9f60", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b0e950bca12d076ab8a61d447f36fc96", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 129, "methodNumberAfterChange": 99, "signatureBeforeChange": " public void testSimpleMethodReference() throws CoreException", "signatureAfterChange": " public void testMethodReference07() throws CoreException", "diff": ["+public void testMethodReference07() throws CoreException { // was testSimpleMethodReference", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p\", \"X.java\").getType(\"X\");", "+\tIMethod method = type.getMethod(\"foo\", new String[] {\"I\", \"QString;\", \"QX;\"});", "+\t\t\"src/Test.java void Test.main(String[]) [foo(1, \\\"a\\\", y)]\\n\" + ", "+\t\t\"src/Test.java void Test.main(String[]) [foo(1, \\\"a\\\", z)]\\n\" + ", "+\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [foo(i, s, new Y(true))]\",", "+\t\tresultCollector);", "+}", "- */", "-public void testSimpleMethodReference() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p\", \"X.java\").getType(\"X\");", "-\tIMethod method = type.getMethod(\"foo\", new String[] {\"I\", \"QString;\", \"QX;\"});", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\tmethod, ", "-\t\tREFERENCES, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/Test.java void Test.main(String[]) [foo(1, \\\"a\\\", y)]\\n\" + ", "-\t\t\"src/Test.java void Test.main(String[]) [foo(1, \\\"a\\\", z)]\\n\" + ", "-\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [foo(i, s, new Y(true))]\",", "-\t\tresultCollector);", "-}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c83a9edde76a8b345e26098eb5b1a4f9", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchTests.java", "commitBeforeChange": "39e0b3c44033d41fbb2f81071d1364bb178092c7", "commitAfterChange": "b4de16a0dc7d3ad9d6dd3c598e29125b9c3084c3", "methodNumberBeforeChange": 128, "methodNumberAfterChange": 83, "signatureBeforeChange": " public void testSimpleMethodDeclaration() throws CoreException", "signatureAfterChange": " public void testMethodDeclaration01() throws CoreException", "diff": ["+public void testMethodDeclaration01() throws CoreException { // was testSimpleMethodDeclaration", "+\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p\", \"X.java\").getType(\"X\");", "+\tIMethod method = type.getMethod(\"foo\", new String[] {\"I\", \"QString;\", \"QX;\"});", "+\t\tmethod, ", "+\t\tDECLARATIONS, ", "+\t\t\"src/p/X.java void p.X.foo(int, String, X) [foo]\\n\" + ", "+\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [foo]\",", "- */", "-public void testSimpleMethodDeclaration() throws CoreException {", "-\tIType type = getCompilationUnit(\"JavaSearch\", \"src\", \"p\", \"X.java\").getType(\"X\");", "-\tIMethod method = type.getMethod(\"foo\", new String[] {\"I\", \"QString;\", \"QX;\"});", "-\tJavaSearchResultCollector resultCollector = new JavaSearchResultCollector();", "-\tsearch(", "-\t\tmethod, ", "-\t\tDECLARATIONS, ", "-\t\tgetJavaSearchScope(), ", "-\t\tresultCollector);", "-\tassertSearchResults(", "-\t\t\"src/p/X.java void p.X.foo(int, String, X) [foo]\\n\" + ", "-\t\t\"src/p/Z.java void p.Z.foo(int, String, X) [foo]\",", "-\t\tresultCollector);", "-}"]}], "num": 61483}