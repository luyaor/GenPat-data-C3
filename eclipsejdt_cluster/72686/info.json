{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "3e76e151eb0924cf36894488e610f3bd", "detectedBy": ["DIFF_HIERARCHICAL", "DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28ae64a93ea2c2ff40cb4ecef5d62c0f", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "2a3b80bcfd06669d1427574c339ccf3d0f31ce96", "commitAfterChange": "f55c780ccc21a82ef44a53622872b20d6daffee7", "methodNumberBeforeChange": 24, "methodNumberAfterChange": 24, "signatureBeforeChange": " public void test102_missing_required_binaries() throws JavaModelException", "signatureAfterChange": " public void test102_missing_required_binaries() throws JavaModelException", "diff": ["-// same type, X", "-\t\t\"  void foo();\\n\" +", "-\t\t\"public abstract class X implements I {\\n\" +", "+\t\t\"public class X implements I {\\n\" +", "-\t\t\"public abstract class Y extends X {\\n\" +", "-\t\t\"  X m = new X();\\n\" +  // error", "-\t\t\"  void bar() {\\n\" +", "-\t\t\"    this.m.foo();\\n\" + // OK", "-\t\t\"  }\\n\" +", "+\t\t\"public class Y extends X {\\n\" +", "+\t\t\"  X m = new X();\\n\" +", "-\t\t\t\ty, 32, 33, CategorizedProblem.CAT_BUILDPATH),", "+\t\t\t\ty, 23, 24, CategorizedProblem.CAT_BUILDPATH),"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c7c738daf16a823e6d5fcbbd8d6b2318", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.builder/src/org/eclipse/jdt/core/tests/builder/MultiProjectTests.java", "commitBeforeChange": "2a3b80bcfd06669d1427574c339ccf3d0f31ce96", "commitAfterChange": "f55c780ccc21a82ef44a53622872b20d6daffee7", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public void test103_missing_required_binaries() throws JavaModelException", "signatureAfterChange": " public void test103_missing_required_binaries() throws JavaModelException", "diff": ["-\tenv.addRequiredProject(p3, p1);", "+//\tenv.addRequiredProject(p3, p1); - missing dependency", "-\t\t\"  void foo();\\n\" +", "-\t\t\"public abstract class X implements I {\\n\" +", "+\t\t\"public class X implements I {\\n\" +", "-\tIPath y = env.addClass(root3, \"\", \"Y\",", "-\t\t\"public abstract class Y extends X {\\n\" +", "-\t\t\"  X m = new X();\\n\" +  // error!", "-\t\t\"  void bar() {\\n\" +", "-\t\t\"    this.m.foo();\\n\" +", "-\t\t\"  }\\n\" +", "+\tenv.addClass(root3, \"\", \"Y\",", "+\t\t\"public class Y {\\n\" +", "+\t\t\"  X m = new X();\\n\" +", "-\t\texpectingOnlySpecificProblemsFor(p3, new Problem[]{", "-\t\t\tnew Problem(\"p3\", ", "-\t\t\t\t\"Cannot instantiate the type X\", ", "-\t\t\t\ty, 48, 49, CategorizedProblem.CAT_TYPE),", "-\t\t});", "+\t\texpectingNoProblemsFor(p3);"]}], "num": 72686}