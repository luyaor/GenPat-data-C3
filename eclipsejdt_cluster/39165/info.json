{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "15e9fe7f5abda55c26a15b16a8033b29", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8acb8e1a8de6947738148b305bf40285", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/matching/JavaSearchPattern.java", "commitBeforeChange": "23df6bbbb36a9f50a63aa5ce59d1913148166f08", "commitAfterChange": "0e633ca1b1574b340ecc37b223f7ad4a327d24e1", "methodNumberBeforeChange": 13, "methodNumberAfterChange": 13, "signatureBeforeChange": " \tvoid storeTypeSignaturesAndArguments(IType type)", "signatureAfterChange": " \tvoid storeTypeSignaturesAndArguments(IType type)", "diff": ["+\t */", "-\t\t\t// Use unique key to extract signatures and type arguments", "+\t\t} else if (type instanceof ParameterizedBinaryType) {", "+\t\t\tthis.typeSignatures = Util.splitTypeLevelsSignature(((ParameterizedBinaryType)type).uniqueKey);", "+\t\t\tsetTypeArguments(Util.getAllTypeArguments(this.typeSignatures));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b342d11e93317e2cbd13b12fe1fb7736", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/QualifiedThisReference.java", "commitBeforeChange": "be3c15b9323bfb13e7c2f0f44638bfa19d5abff2", "commitAfterChange": "43ba239664019dd489061a00645e975e2ecd1a6c", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "signatureAfterChange": "  \tpublic TypeBinding resolveType(BlockScope scope)", "diff": ["+\t\t// X.this is not a param/raw type as denoting enclosing instance", "-\t\tthis.resolvedType = type = type.erasure();", "-", "+\t\ttype = type.erasure();", "+\t\t", "+\t\t// resolvedType needs to be converted to parameterized", "+\t\tif (type instanceof ReferenceBinding) {", "+\t\t\tthis.resolvedType = scope.environment().convertToParameterizedType((ReferenceBinding) type);", "+\t\t} else {", "+\t\t\t// error case", "+\t\t\tthis.resolvedType = type;", "+\t\t}", "+\t\t", "-\t\twhile (this.currentCompatibleType != null", "-\t\t\t&& this.currentCompatibleType != type) {", "+\t\twhile (this.currentCompatibleType != null && this.currentCompatibleType != type) {", "-\t\t\treturn type;", "+\t\t\treturn this.resolvedType;", "-\t\treturn type;", "+\t\t", "+\t\treturn  this.resolvedType;"]}], "num": 39165}