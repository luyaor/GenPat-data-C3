{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2ac00dcf8d273961ad39cad0cf8a1205", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "6571aa70b6106d503949ce0bbc1cbdab", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericTypeTests.java", "commitBeforeChange": "0f66102af28e1b86113fee77f4eb0d3035d12202", "commitAfterChange": "b90626a8f6e0a122baef19254d7e1d462d97446e", "methodNumberBeforeChange": 50, "methodNumberAfterChange": 50, "signatureBeforeChange": " \tpublic void testMultipleParameterizedElementPattern03() throws CoreException", "signatureAfterChange": " \tpublic void testMultipleParameterizedElementPattern03() throws CoreException", "diff": ["-\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen [t.m.def.NonGeneric.GenericMember] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_obj [t.m.def.NonGeneric.GenericMember<Object, Exception, RuntimeException>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_exc [t.m.def.NonGeneric.GenericMember<Exception, Exception, RuntimeException>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_wld [t.m.def.NonGeneric.GenericMember<?, ?, ?>] EXACT_MATCH\\n\" + ", "-\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_run [t.m.def.NonGeneric.GenericMember<? super RuntimeException, ? super IllegalMonitorStateException, ? super IllegalMonitorStateException>] EXACT_MATCH\",", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen [g1.t.m.def.NonGeneric.GenericMember] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_obj [g1.t.m.def.NonGeneric.GenericMember<Object, Exception, RuntimeException>] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_exc [g1.t.m.def.NonGeneric.GenericMember<Exception, Exception, RuntimeException>] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_wld [g1.t.m.def.NonGeneric.GenericMember<?, ?, ?>] EXACT_MATCH\\n\" + ", "+\t\t\t\"src/g1/t/m/ref/R2.java g1.t.m.ref.R2.qgen_run [g1.t.m.def.NonGeneric.GenericMember<? super RuntimeException, ? super IllegalMonitorStateException, ? super IllegalMonitorStateException>] EXACT_MATCH\","]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aaf1a03ae5b02fedde16248ede0eff6d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/formatter/FormatterBugsTests.java", "commitBeforeChange": "900c13d17fd147c187a2b319111ff0c850c4ae89", "commitAfterChange": "f02cc00df615ce0df96d2675e50465c713b4b942", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 8, "signatureBeforeChange": " public void testBug198074_c3() throws JavaModelException", "signatureAfterChange": " public void testBug198074_c3() throws JavaModelException", "diff": ["-\t\t\"\t\t+ \\\" nommbr=\\'\\\" + getName() + \\\"\\'\\\"\\n\" + ", "-\t\t\"\t\t+ \\\" nomgrp=\\'\\\" + getService().getArgtbl() + \\\"\\'\\\"\\n\" + ", "-\t\t\"\t\t+ \\\" typmbr=\\'\\\" + getMemberType().getArgument() + \\\"\\'\\\"\\n\" + ", "-\t\t\"\t\t+ \\\" srcpat=\\'\\\" + getPhysicalPath() + \\\"\\'\\\"\\n\" + ", "-\t\t\"\t\t+ \\\" nommdl=\\'\\\" + getModel() + \\\"\\'\\\";\\n\" + ", "+\t\t\"\t\t\t\t+ \\\" nommbr=\\'\\\" + getName() + \\\"\\'\\\"\\n\" + ", "+\t\t\"\t\t\t\t+ \\\" nomgrp=\\'\\\" + getService().getArgtbl() + \\\"\\'\\\"\\n\" + ", "+\t\t\"\t\t\t\t+ \\\" typmbr=\\'\\\" + getMemberType().getArgument() + \\\"\\'\\\"\\n\" + ", "+\t\t\"\t\t\t\t+ \\\" srcpat=\\'\\\" + getPhysicalPath() + \\\"\\'\\\"\\n\" + ", "+\t\t\"\t\t\t\t+ \\\" nommdl=\\'\\\" + getModel() + \\\"\\'\\\";\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e1a70ca7e567da1c751e11fdd03fb9bc", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/JavaSearchGenericConstructorTests.java", "commitBeforeChange": "9ee78f50bb7fb9d70095ea7ff2d9f2e27d840c37", "commitAfterChange": "b6410432af18704990f18fa69a09dd7a76e8fb04", "methodNumberBeforeChange": 36, "methodNumberAfterChange": 38, "signatureBeforeChange": " \tpublic void testConstructorReferencesStringPatternMultipleParamArguments02() throws CoreException", "signatureAfterChange": " \tpublic void testConstructorReferencesStringPatternMultipleParamArguments02() throws CoreException", "diff": ["-\t\tsearch(\"Multiple % <Object, Exception, RuntimeException>\", CONSTRUCTOR, REFERENCES, scope, resultCollector);", "+\t\tsearch(\"<Object, Exception, RuntimeException>Multiple\", CONSTRUCTOR, REFERENCES, scope, resultCollector);", "-\t\t\t\"src/g5/c/ref/RefRaw.java void g5.c.ref.RefRaw.testMultiple() [new Multiple(new Object(), new Object(), new Object())] ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g5/c/ref/RefRaw.java void g5.c.ref.RefRaw.testMultiple() [new Multiple(gm, new Object(), new Throwable(), new Exception())] ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g5/c/ref/RefRaw.java void g5.c.ref.RefRaw.testMultiple() [new Multiple(gm)] ERASURE_MATCH\\n\" + ", "-\t\t\t\"src/g5/c/ref/RefRaw.java void g5.c.ref.RefRaw.testMultiple() [new Multiple(new Object(), new Throwable(), new Exception(), gm)] ERASURE_MATCH\"", "+\t\t\t\"src/g5/c/ref/RefRaw.java void g5.c.ref.RefRaw.testMultiple() [new Multiple(new Object(), new Object(), new Object())] EQUIVALENT_RAW_MATCH\\n\" + ", "+\t\t\t\"src/g5/c/ref/RefRaw.java void g5.c.ref.RefRaw.testMultiple() [new Multiple(gm, new Object(), new Throwable(), new Exception())] EQUIVALENT_RAW_MATCH\\n\" + ", "+\t\t\t\"src/g5/c/ref/RefRaw.java void g5.c.ref.RefRaw.testMultiple() [new Multiple(gm)] EQUIVALENT_RAW_MATCH\\n\" + ", "+\t\t\t\"src/g5/c/ref/RefRaw.java void g5.c.ref.RefRaw.testMultiple() [new Multiple(new Object(), new Throwable(), new Exception(), gm)] EQUIVALENT_RAW_MATCH\""]}], "num": 41615}