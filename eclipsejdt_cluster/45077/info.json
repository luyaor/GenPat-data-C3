{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "b980f2affc538d958d9059d7affba57c", "detectedBy": ["AST_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "131c23cfc07029ae8f234fbdd17e2e9b", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/EqualExpression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 4, "methodNumberAfterChange": 4, "signatureBeforeChange": " \t \tpublic final void computeConstant(TypeBinding leftType, TypeBinding rightType)", "signatureAfterChange": " \t \tpublic final void computeConstant(TypeBinding leftType, TypeBinding rightType)", "diff": ["-\t\tif ((this.left.constant != NotAConstant) && (this.right.constant != NotAConstant)) {", "+\t\tif ((this.left.constant != Constant.NotAConstant) && (this.right.constant != Constant.NotAConstant)) {", "-\t\t\tthis.constant = NotAConstant;", "+\t\t\tthis.constant = Constant.NotAConstant;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "19316d38133baf8f3368a07c8ecf0c08", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tif (cst != NotAConstant) {", "+\t\tif (cst != Constant.NotAConstant) {", "-\t\tboolean leftIsConst = cst != NotAConstant;", "+\t\tboolean leftIsConst = cst != Constant.NotAConstant;", "-\t\tboolean rightIsConst = cst != NotAConstant;", "+\t\tboolean rightIsConst = cst != Constant.NotAConstant;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4a356bbf023d4e640b10563b5a6d4cdd", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 2, "methodNumberAfterChange": 2, "signatureBeforeChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateCode(BlockScope currentScope, CodeStream codeStream, boolean valueRequired)", "diff": ["-\t\tif (cst != NotAConstant) {", "+\t\tif (cst != Constant.NotAConstant) {", "-\t\tboolean leftIsConst = cst != NotAConstant;", "+\t\tboolean leftIsConst = cst != Constant.NotAConstant;", "-\t\tboolean rightIsConst = cst != NotAConstant;", "+\t\tboolean rightIsConst = cst != Constant.NotAConstant;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a742dea8f198cc95f08682971c0ee9f8", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/OR_OR_Expression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, Label trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\t\tif (cst != NotAConstant && cst.booleanValue() == false) {", "+\t\tif (cst != Constant.NotAConstant && cst.booleanValue() == false) {", "-\t\tboolean leftIsConst = cst != NotAConstant;", "+\t\tboolean leftIsConst = cst != Constant.NotAConstant;", "-\t\tboolean rightIsConst = cst != NotAConstant;", "+\t\tboolean rightIsConst = cst != Constant.NotAConstant;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b47efbe687657b397cfbb8277a0ffa88", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/DoStatement.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "signatureAfterChange": "  \tpublic FlowInfo analyseCode( \t\tBlockScope currentScope, \t\tFlowContext flowContext, \t\tFlowInfo flowInfo)", "diff": ["-\t\tboolean isConditionTrue = cst != NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isConditionTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isConditionOptimizedTrue = cst != NotAConstant && cst.booleanValue() == true;", "-\t\tboolean isConditionOptimizedFalse = cst != NotAConstant && cst.booleanValue() == false;", "+\t\tboolean isConditionOptimizedTrue = cst != Constant.NotAConstant && cst.booleanValue() == true;", "+\t\tboolean isConditionOptimizedFalse = cst != Constant.NotAConstant && cst.booleanValue() == false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c220912ec878f43dc00b3fff06192753", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/ast/AND_AND_Expression.java", "commitBeforeChange": "30dfd49146d073c0ca77ec54f45987be483492de", "commitAfterChange": "b6791838b5fdf2dfb8325a3a5a7e1c11f48ab412", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": " \tpublic void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, \t\t\tLabel trueLabel, Label falseLabel, boolean valueRequired)", "signatureAfterChange": " \tpublic void generateOptimizedBoolean(BlockScope currentScope, CodeStream codeStream, \t\t\tLabel trueLabel, Label falseLabel, boolean valueRequired)", "diff": ["-\t\tif (cst != NotAConstant && cst.booleanValue() == true) {", "+\t\tif (cst != Constant.NotAConstant && cst.booleanValue() == true) {", "-\t\tboolean leftIsConst = cst != NotAConstant;", "+\t\tboolean leftIsConst = cst != Constant.NotAConstant;", "-\t\tboolean rightIsConst = cst != NotAConstant;", "+\t\tboolean rightIsConst = cst != Constant.NotAConstant;"]}], "num": 45077}