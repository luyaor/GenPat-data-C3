{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c8084975637afd03e61efcb50c933a2e", "detectedBy": ["DIFF_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5d59a7fa270a4f51ed8222f060e88762", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "cee242bcb21b999953c5459d6b40de2d782355f3", "commitAfterChange": "de0ba5a5e09b42f4671d55cb69260aca34e3da86", "methodNumberBeforeChange": 34, "methodNumberAfterChange": 36, "signatureBeforeChange": " \tpublic final int getLineEnd(int lineNumber)", "signatureAfterChange": " \tprivate boolean verifySpaceOrEndComment()", "diff": ["-\tpublic final int getLineEnd(int lineNumber) {", "-\t", "-\t\tif (this.scanner.linePtr != -1) {", "-\t\t\treturn this.scanner.getLineEnd(lineNumber);", "-\t\tif (this.lineEnds == null) ", "-\t\t\treturn -1;", "-\t\tif (lineNumber > this.lineEnds.length+1) ", "-\t\t\treturn -1;", "-\t\tif (lineNumber <= 0) ", "-\t\t\treturn -1;", "-\t\tif (lineNumber == this.lineEnds.length + 1) ", "-\t\t\treturn this.scanner.eofPosition;", "-\t\treturn this.lineEnds[lineNumber-1]; // next line start one character behind the lineEnd of the previous line", "+\t */", "+\tprivate boolean verifySpaceOrEndComment() {", "+\t\tint startPosition = this.index;", "+\t\t// Whitespace or inline tag closing brace", "+\t\tchar ch = peekChar();", "+\t\tswitch (ch) {", "+\t\t\tcase '}':", "+\t\t\t\treturn this.inlineTagStarted;", "+\t\t\tdefault:", "+\t\t\t\tif (Character.isWhitespace(ch)) {", "+\t\t\t\t\treturn true;", "+\t\t\t\t}", "+\t\t}", "+\t\t// End of comment", "+\t\tint previousPosition = this.index;", "+\t\tthis.starPosition = -1;", "+\t\tch = readChar();", "+\t\tnextChar: while (this.index<this.source.length) {", "+\t\t\tswitch (ch) {", "+\t\t\t\tcase '*':", "+\t\t\t\t\t// valid whatever the number of star before last '/'", "+\t\t\t\t\tthis.starPosition = previousPosition;", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase '/':", "+\t\t\t\t\tif (this.starPosition >= startPosition) { // valid only if a star was previous character", "+\t\t\t\t\t\treturn true;", "+\t\t\t\t\t}", "+\t\t\t\tdefault :", "+\t\t\t\t\t// invalid whatever other character, even white spaces", "+\t\t\t\t\tthis.index = startPosition;", "+\t\t\t\t\treturn false;", "+\t\t\t\t", "+\t\t\t}", "+\t\t\tpreviousPosition = this.index;", "+\t\t\tch = readChar();", "+\t\t}", "+\t\tthis.index = startPosition;", "+\t\treturn false;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "735bda8d285a2a920627fb15d43c93f7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/dom/org/eclipse/jdt/core/dom/BindingKeyScanner.java", "commitBeforeChange": "09b2a60a289857be8b68f0bdade8ca62b9081359", "commitAfterChange": "159e8ad6d8421b49efbcfb424fe9327481d95b23", "methodNumberBeforeChange": 8, "methodNumberAfterChange": 9, "signatureBeforeChange": " \t \tint nextToken()", "signatureAfterChange": " \t \tint nextToken()", "diff": ["+\t", "-\t\tthis.start = this.token == ARRAY ? this.index : ++this.index;", "-\t\tint previousTokenEnd = this.index-1;", "+\t\tint previousTokenEnd = this.index;", "+\t\tthis.start = this.index;", "-\t\t\t\t\tif (this.start == previousTokenEnd+1) {", "+\t\t\t\t\tif (this.index == previousTokenEnd) {", "-\t\t\t\t\tif (this.start == previousTokenEnd+1) {", "-\t\t\t\t\t\tthis.start = ++this.index;", "+\t\t\t\t\tif (this.index == previousTokenEnd) {", "+\t\t\t\t\t\tthis.start = this.index+1;", "-\t\t\t\t\tthis.token = TYPE;", "-\t\t\t\t\treturn this.token;", "+\t\t\t\t\tif (this.index == previousTokenEnd) {", "+\t\t\t\t\t\tthis.start = this.index+1;", "+\t\t\t\t\t\tpreviousTokenEnd = this.start;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.token = TYPE;", "+\t\t\t\t\t\treturn this.token;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase '%':", "+\t\t\t\t\tpreviousTokenEnd = this.start;", "-\t\t\t\t\tif (this.start > 0) {", "+\t\t\t\t\tif (this.index == previousTokenEnd) {", "+\t\t\t\t\t\tthis.start = this.index+1;", "+\t\t\t\t\t\tpreviousTokenEnd = this.start;", "+\t\t\t\t\t} else if (this.start > 0) {", "+\t\t\t\t\t\t\t\t\t// case of member type where enclosing type is parameterized", "-\t\t\t\t\t\t\tcase '%':", "-\t\t\t\t\t\t\t\tpreviousTokenEnd = this.index;", "-\t\t\t\t\t\t\t\tthis.start = this.index+1;", "-\t\t\t\t\t\t\t\tbreak;", "-\t\t\t\t\tthis.token = LOCAL_VAR;", "-\t\t\t\t\treturn this.token;", "+\t\t\t\t\tif (this.index == previousTokenEnd) {", "+\t\t\t\t\t\tthis.start = this.index+1;", "+\t\t\t\t\t\tpreviousTokenEnd = this.start;", "+\t\t\t\t\t} else {", "+\t\t\t\t\t\tthis.token = LOCAL_VAR;", "+\t\t\t\t\t\treturn this.token;", "+\t\t\t\t\t}", "+\t\t\t\t\tbreak;", "+\t\t\t\tcase '*':", "+\t\t\t\tcase '+':", "+\t\t\t\tcase '-':", "+\t\t\t\t\tthis.index++;", "+\t\t\t\t\tthis.token = TYPE;", "+\t\t\t\t\treturn this.token;"]}], "num": 19413}