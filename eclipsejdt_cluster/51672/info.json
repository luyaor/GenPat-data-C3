{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa26f3af81e4f71eb841dfe0deba7d47", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "5298ff844db7784dca65f70553b6cdf6", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/parser/AbstractCommentParser.java", "commitBeforeChange": "df26ffb7769325830f9d9a476ff58e760e816f71", "commitAfterChange": "7e79ffb05fb342f1994da154dbf6a543569d8d3a", "methodNumberBeforeChange": 19, "methodNumberAfterChange": 19, "signatureBeforeChange": " \tprotected boolean parseParam() throws InvalidInputException", "signatureAfterChange": " \tprotected boolean parseParam() throws InvalidInputException", "diff": ["-\t\t\tend = hasMultiLines ? this.lineEnd: this.scanner.getCurrentTokenEndPosition();", "-\t\t\twhile ((token=readToken()) != TerminalTokens.TokenNameWHITESPACE && token != TerminalTokens.TokenNameEOF) {", "-\t\t\t\tthis.currentTokenType = -1;", "+\t\t\tif (this.reportProblems) {", "+\t\t\t\t// we only need end if we report problems", "-\t\t\t}", "-\t\t\tif (this.reportProblems)", "+\t\t\t\ttry {", "+\t\t\t\t\twhile ((token=readToken()) != TerminalTokens.TokenNameWHITESPACE && token != TerminalTokens.TokenNameEOF) {", "+\t\t\t\t\t\tthis.currentTokenType = -1;", "+\t\t\t\t\t\tend = hasMultiLines ? this.lineEnd: this.scanner.getCurrentTokenEndPosition();", "+\t\t\t\t\t}", "+\t\t\t\t} catch (InvalidInputException e) {", "+\t\t\t\t\tend = this.lineEnd;", "+\t\t\t\t}", "+\t\t\t}"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b84c66d27c46d98f0ca3e47e0d5075f1", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/model/ClasspathInitializerTests.java", "commitBeforeChange": "88e0895a06e15047522130186d0176749c3b16b6", "commitAfterChange": "34508c2fb65f50ffa61f158af5f4213e8b62852f", "methodNumberBeforeChange": 7, "methodNumberAfterChange": 7, "signatureBeforeChange": " \tpublic void initialize(IPath containerPath, IJavaProject project) throws CoreException", "signatureAfterChange": " \tpublic void initialize(IPath containerPath, IJavaProject project) throws CoreException", "diff": ["-\t\tJavaCore.setClasspathContainer(", "-\t\t\tcontainerPath, ", "-\t\t\tnew IJavaProject[] {project},", "-\t\t\tnew IClasspathContainer[] {(IClasspathContainer)containerValues.get(project.getElementName())}, ", "-\t\t\tnull);", "+\t\ttry {", "+\t\t\tJavaCore.setClasspathContainer(", "+\t\t\t\tcontainerPath, ", "+\t\t\t\tnew IJavaProject[] {project},", "+\t\t\t\tnew IClasspathContainer[] {(IClasspathContainer)containerValues.get(project.getElementName())}, ", "+\t\t\t\tnull);", "+\t\t} catch (CoreException e) {", "+\t\t\tthis.exception = e;", "+\t\t\tthrow e;", "+\t\t}"]}], "num": 51672}