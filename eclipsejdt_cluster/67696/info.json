{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "c61a96cae76b8049e5a7fd2ab0312dc0", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "61841b6dad3ab475347c5f2495776f83", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 67, "methodNumberAfterChange": 67, "signatureBeforeChange": " \tpublic void test065()", "signatureAfterChange": " \tpublic void test065()", "diff": ["-\t\t\t\"Unsafe type operation: Should not convert expression of raw type X to type X<IOException>. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"Type safety: The expression of raw type X is converted to X<IOException>. References to generic type X<T> should be parameterized\\n\" + "]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c1c619a10057387d2f5b3868afd59260", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.compiler/src/org/eclipse/jdt/core/tests/compiler/regression/GenericTypeTest.java", "commitBeforeChange": "d8f7412a7e197e30b6fcc17db5eeaf7d2638563c", "commitAfterChange": "b80780a7f472c2384c681f831c578ec77037e0cb", "methodNumberBeforeChange": 65, "methodNumberAfterChange": 65, "signatureBeforeChange": " \tpublic void test063()", "signatureAfterChange": " \tpublic void test063()", "diff": ["-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "-\t\t\"\tX x = new X(args);\\n\" + ", "-\t\t\"\t      ^^^^^^^^^^^\\n\" + ", "-\t\t\"Unsafe type operation: Should not invoke the constructor X(T) of raw type X. References to generic type X<T> should be parameterized\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "-\t\t\"\tX<String> xs = new X<String>(args);\\n\" + ", "-\t\t\"\t               ^^^^^^^^^^^^^^^^^^^\\n\" + ", "-\t\t\"The constructor X<String>(String[]) is undefined\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"----------\\n\" + ", "-\t\t\"1. WARNING in p\\\\A.java (at line 7)\\n\" + ", "-\t\t\"\tprotected void print(P p) {\\n\" + ", "-\t\t\"\t                       ^\\n\" + ", "-\t\t\"The parameter p is hiding a field from type A<P>\\n\" + ", "-\t\t\"----------\\n\");", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in X.java (at line 7)\\n\" + ", "+\t\t\t\"\tX x = new X(args);\\n\" + ", "+\t\t\t\"\t      ^^^^^^^^^^^\\n\" + ", "+\t\t\t\"Type safety: The constructor X(Object) belongs to the raw type X. References to generic type X<T> should be parameterized\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"2. ERROR in X.java (at line 8)\\n\" + ", "+\t\t\t\"\tX<String> xs = new X<String>(args);\\n\" + ", "+\t\t\t\"\t               ^^^^^^^^^^^^^^^^^^^\\n\" + ", "+\t\t\t\"The constructor X<String>(String[]) is undefined\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"----------\\n\" + ", "+\t\t\t\"1. WARNING in p\\\\A.java (at line 7)\\n\" + ", "+\t\t\t\"\tprotected void print(P p) {\\n\" + ", "+\t\t\t\"\t                       ^\\n\" + ", "+\t\t\t\"The parameter p is hiding a field from type A<P>\\n\" + ", "+\t\t\t\"----------\\n\");"]}], "num": 67696}