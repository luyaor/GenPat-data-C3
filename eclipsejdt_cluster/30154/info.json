{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "2f829faa385d5c1077bc9b90e61176a5", "detectedBy": ["AST_HIERARCHICAL", "AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "8ff889cf3f2c82ffcb01471cebaa1ce2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "f18746495477338a9b83fca4f673d973bc3b28e9", "commitAfterChange": "b7c75d5af8ed9aa46f28be9d8bc08449dc25dc4e", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 11, "signatureBeforeChange": " \t \tprivate void runAPTInFileBasedMode( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv )", "signatureAfterChange": " \t \tprivate void runAPTInFileBasedMode( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<char[]> sourceForFilesWithMissingType)", "diff": ["-\t\t\tfinal ProcessorEnvImpl processorEnv )", "+\t\t\tfinal ProcessorEnvImpl processorEnv,", "+\t\t\tfinal List<IFile> filesWithMissingType,", "+\t\t\tfinal List<char[]> sourceForFilesWithMissingType)", "-\t\tfor (IFile curFile : _filesToProcess) {", "+\t\tfinal IFile[] files = processorEnv.getFiles();", "+\t\tfor (IFile curFile : files ) {", "+\t\t\t\t\t\taddFileWithMissingTypeError(curFile, filesWithMissingType, sourceForFilesWithMissingType, processorEnv);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "973f4e07a3c5ee90ad5fb0e94c42237e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.apt.core/src/org/eclipse/jdt/apt/core/internal/APTDispatchRunnable.java", "commitBeforeChange": "f18746495477338a9b83fca4f673d973bc3b28e9", "commitAfterChange": "b7c75d5af8ed9aa46f28be9d8bc08449dc25dc4e", "methodNumberBeforeChange": 10, "methodNumberAfterChange": 12, "signatureBeforeChange": " \tprivate void runAPTInMixedMode( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv)", "signatureAfterChange": " \tprivate void runAPTInMixedMode( \t\t\tfinal List<AnnotationProcessorFactory> factories, \t\t\tfinal ProcessorEnvImpl processorEnv, \t\t\tfinal List<IFile> filesWithMissingType, \t\t\tfinal List<char[]> sourceForFilesWithMissingType)", "diff": ["-\t\t\tfinal ProcessorEnvImpl processorEnv)", "+\t\t\tfinal ProcessorEnvImpl processorEnv,", "+\t\t\tfinal List<IFile> filesWithMissingType,", "+\t\t\tfinal List<char[]> sourceForFilesWithMissingType)", "+\t\tfinal IFile[] files = processorEnv.getFiles();", "-\t\t\tnew HashMap<IFile, Set<AnnotationTypeDeclaration>>(_filesToProcess.length * 4/3 + 1);", "+\t\t\tnew HashMap<IFile, Set<AnnotationTypeDeclaration>>(files.length * 4/3 + 1);", "+\t\taddAllFilesWithMissingTypeError(filesWithMissingType, sourceForFilesWithMissingType, processorEnv);", "-\t\t\tfor( int fileIndex=0, numFiles=_filesToProcess.length; fileIndex<numFiles; fileIndex ++ ){", "-\t\t\t\tfinal Set<AnnotationTypeDeclaration> annotationTypesInFile = file2AnnotationDecls.get(_filesToProcess[fileIndex]);", "+\t\t\tfor( int fileIndex=0, numFiles=files.length; fileIndex<numFiles; fileIndex ++ ){", "+\t\t\t\tfinal Set<AnnotationTypeDeclaration> annotationTypesInFile = file2AnnotationDecls.get(files[fileIndex]);", "-\t\t\t\t\t\tprocessorEnv.setFileProcessing(_filesToProcess[fileIndex]);", "+\t\t\t\t\t\tprocessorEnv.setFileProcessing(files[fileIndex]);"]}], "num": 30154}