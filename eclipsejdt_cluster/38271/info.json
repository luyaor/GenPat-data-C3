{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "7f4feb35f16c09096872c8fd1c3958de", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "2af0b7c1f0833e6095f3263a7655c439", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/RawTypeBinding.java", "commitBeforeChange": "db0d99936b529038f502f3c42e4c67fa5380c5bc", "commitAfterChange": "5988789db77abec94d1b8a17fd42ed09f795c5be", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": "     \t \tpublic char[] computeUniqueKey()", "signatureAfterChange": "     \t \tpublic char[] computeUniqueKey()", "diff": ["-\t\t    sig.append('.').append(sourceName()).append(';');", "-\t\t\tint sigLength = sig.length();", "-\t\t\tchar[] uniqueKey = new char[sigLength];", "-\t\t\tsig.getChars(0, sigLength, uniqueKey, 0);\t\t\t\t\t\t    ", "-\t\t\treturn uniqueKey;", "+\t\t    sig.append('.').append(sourceName()).append('<').append('>').append(';');", "-\t\t     return this.type.signature(); // erasure", "+\t\t     sig.append(this.type.signature()); // erasure", "+\t\t     sig.insert(sig.length()-1, \"<>\"); //$NON-NLS-1$", "+\t\tint sigLength = sig.length();", "+\t\tchar[] uniqueKey = new char[sigLength];", "+\t\tsig.getChars(0, sigLength, uniqueKey, 0);\t\t\t\t\t\t    ", "+\t\treturn uniqueKey;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4346d094400800f0d0c00209e97e4836", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/codeassist/org/eclipse/jdt/internal/codeassist/CompletionEngine.java", "commitBeforeChange": "1248181e23c81da45ee8e328a409b761a39e6e52", "commitAfterChange": "3df0b6d0a7c9e742ebbc5f2930d09070fa613a77", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": "  \tprivate void complete(AstNode astNode, AstNode astNodeParent, Binding qualifiedBinding, Scope scope)", "signatureAfterChange": "  \tprivate void complete(AstNode astNode, AstNode astNodeParent, Binding qualifiedBinding, Scope scope)", "diff": ["-\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(token, method.returnType, excludeNames);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(token, method.returnType, excludeNames, FIELD, method.modifiers);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(field.realName, field.type, excludeNames);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(field.realName, field.type, excludeNames, FIELD, field.modifiers);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(token, variable.type, excludeNames, LOCAL, variable.modifiers);", "+\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(token, variable.type, excludeNames, ARGUMENT, variable.modifiers);", "-\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\tfindVariableNames(token, variable.type, excludeNames);"]}], "num": 38271}