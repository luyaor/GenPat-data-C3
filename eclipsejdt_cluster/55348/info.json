{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "fa7c0a391e25f6dfe5f68d982b1e197b", "detectedBy": ["AST_DBSCAN"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "28cf410b6b6f09921ae6d24ee527e18d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.compiler.apt.tests/src/org/eclipse/jdt/compiler/apt/tests/MessagerTests.java", "commitBeforeChange": "81421af18a75c88cec70c87940332b7ff789e6a3", "commitAfterChange": "8c0cabac42a6d6a4351f639d5df35011ba59ba1c", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 4, "signatureBeforeChange": " \tprivate void internalTestMessager(JavaCompiler compiler) throws IOException", "signatureAfterChange": " \tprivate String internalTestMessager(JavaCompiler compiler) throws IOException", "diff": ["-\tprivate void internalTestMessager(JavaCompiler compiler) throws IOException {", "+\tprivate String internalTestMessager(JavaCompiler compiler) throws IOException {", "-\t\t// TODO: check \"errors\" against expected values to ensure that the problems were correctly reported", "+\t\treturn errors.getBuffer().toString();"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "72cfed7effe9b6897d7ec618b5a7e30e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/search/org/eclipse/jdt/internal/core/search/HierarchyScope.java", "commitBeforeChange": "fe41a5ed7a14de553c93fde5ff3064717032f87a", "commitAfterChange": "75a9b073354511bd41fc601022882d52caaa8ded", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 1, "signatureBeforeChange": "\r \tpublic HierarchyScope(IType type) throws JavaModelException", "signatureAfterChange": "\r \tpublic HierarchyScope(IType type) throws JavaModelException", "diff": ["+\t\tthis.initialize();\r", "+\t\tJavaModelManager.getJavaModelManager().rememberScope(this);\r"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "9ccb8e66ae6215809ee1d0de3c61861e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/builder/JavaBuilder.java", "commitBeforeChange": "c935022e751010e0148ec145f8dfcbcb99808398", "commitAfterChange": "0d3c607d8bcf459dac593b4e8807cbf04ae41972", "methodNumberBeforeChange": 9, "methodNumberAfterChange": 9, "signatureBeforeChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "signatureAfterChange": "  protected IProject[] build(int kind, Map ignored, IProgressMonitor monitor) throws CoreException", "diff": ["+\t\t\t\t// ensure external jars are consistent (a full build is a way users will try to have the external jars change noticed)", "+\t\t\t\t// see also https://bugs.eclipse.org/bugs/show_bug.cgi?id=93668)", "+\t\t\t\tthis.javaProject.getJavaModel().refreshExternalArchives(new IJavaElement[] {this.javaProject}, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "a463a0cf0d365226fea0da176d180f50", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core.tests.model/src/org/eclipse/jdt/core/tests/dom/ASTConverterTestAST3_2.java", "commitBeforeChange": "821b6028ffbd0ba8edfd1a0534c32e817f4e830d", "commitAfterChange": "06e4a5efa4ac79a81431ad2110bd08f2ba1b98a7", "methodNumberBeforeChange": 276, "methodNumberAfterChange": 276, "signatureBeforeChange": " \tpublic void test0631() throws JavaModelException", "signatureAfterChange": " \tpublic void test0631() throws JavaModelException", "diff": ["+\t\tassertTrue(\"Not initializer\", fragment.getInitializer() == null);", "+\t\tassertTrue(\"Not a malformed node\", isMalformed(fragment));"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "c5709d7936990bd2c8057b8c6bc39247", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/core/JavaCore.java", "commitBeforeChange": "c935022e751010e0148ec145f8dfcbcb99808398", "commitAfterChange": "0d3c607d8bcf459dac593b4e8807cbf04ae41972", "methodNumberBeforeChange": 32, "methodNumberAfterChange": 32, "signatureBeforeChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "signatureAfterChange": " \tpublic static void initializeAfterLoad(IProgressMonitor monitor) throws CoreException", "diff": ["+\t\t", "+\t\t// ensure external jars are refreshed (see https://bugs.eclipse.org/bugs/show_bug.cgi?id=93668)", "+\t\tJavaModelManager.getJavaModelManager().getJavaModel().refreshExternalArchives(null/*refresh all projects*/, monitor);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "db68140eb5110116c02a3bcdb366ab5d", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JarPackageFragment.java", "commitBeforeChange": "45ea0c0963e46daaae31261dbb16943dd8fe31f9", "commitAfterChange": "2eac8e5fe7a3ec66583085fd9b264a552c7df520", "methodNumberBeforeChange": 11, "methodNumberAfterChange": 11, "signatureBeforeChange": " protected void openWhenClosed(IProgressMonitor pm) throws JavaModelException", "signatureAfterChange": " protected OpenableElementInfo openWhenClosed(IProgressMonitor pm) throws JavaModelException", "diff": ["-protected void openWhenClosed(IProgressMonitor pm) throws JavaModelException {", "+protected OpenableElementInfo openWhenClosed(IProgressMonitor pm) throws JavaModelException {", "+\t", "+\treturn (OpenableElementInfo)JavaModelManager.getJavaModelManager().getInfo(this);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "e61106f815dbb162ea6ecac60f1ebe28", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/CompilationUnit.java", "commitBeforeChange": "888ff915accf0f7dc08ba845bca467c94f1e290b", "commitAfterChange": "f69c200469412ca3b93e80844c6c1f4e077169ac", "methodNumberBeforeChange": 54, "methodNumberAfterChange": 83, "signatureBeforeChange": " public boolean isWorkingCopy()", "signatureAfterChange": " public boolean isWorkingCopy()", "diff": ["- */", "-public boolean isWorkingCopy() {", "-\treturn false;", "-}", "+ */", "+public boolean isWorkingCopy() {", "+\treturn JavaModelManager.getJavaModelManager().peekAtInfo(this) instanceof WorkingCopyElementInfo;", "+}"]}], "num": 55348}