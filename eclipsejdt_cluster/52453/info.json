{"@class": "de.fau.cs.inf2.cthree.data.Cluster", "id": "9332f37e22b4b5e72ff0a94f288ac101", "detectedBy": ["DIFF_HIERARCHICAL"], "members": [{"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "4f650bda309a922724d4c8bb1c7491a7", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/JavaElementInfo.java", "commitBeforeChange": "21cbb8771cc00d8e13a556404fdfae59ecdb14f8", "commitAfterChange": "0899c90ae8de27e397eab6637d91f616ff022416", "methodNumberBeforeChange": 1, "methodNumberAfterChange": 1, "signatureBeforeChange": " \tpublic void addChild(IJavaElement child)", "signatureAfterChange": " \tpublic void addChild(IJavaElement child)", "diff": ["-\t\tif (this.children == JavaElement.NO_ELEMENTS) {", "-\t\t\tsetChildren(new IJavaElement[] {child});", "+\t\tint length = this.children.length;\t\t", "+\t\tif (length == 0) {", "+\t\t\tthis.children = new IJavaElement[] {child};", "-\t\t\tif (!includesChild(child)) {", "-\t\t\t\tsetChildren(growAndAddToArray(this.children, child));", "+\t\t\tfor (int i = 0; i < length; i++) {", "+\t\t\t\tif (children[i].equals(child))", "+\t\t\t\t\treturn; // already included", "+\t\t\tSystem.arraycopy(this.children, 0, this.children = new IJavaElement[length+1], 0, length);", "+\t\t\tthis.children[length] = child;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "747eb6d1c954e454360ef10603a804d2", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OpenableElementInfo.java", "commitBeforeChange": "09617092d586fc57d56d7255b395176bf3d6b1e7", "commitAfterChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "methodNumberBeforeChange": 0, "methodNumberAfterChange": 0, "signatureBeforeChange": "  \tpublic void addChild(IJavaElement child)", "signatureAfterChange": "  \tpublic void addChild(IJavaElement child)", "diff": ["-\t\tint length = this.children.length;", "+\t\tIJavaElement[] oldChildren = this.children;", "+\t\tint length = oldChildren.length;", "-\t\t\t\tif (this.children[i].equals(child))", "+\t\t\t\tif (oldChildren[i].equals(child))", "-\t\t\tSystem.arraycopy(this.children, 0, this.children = new IJavaElement[length+1], 0, length);", "-\t\t\tthis.children[length] = child;", "+\t\t\tIJavaElement[] newChildren = new IJavaElement[length+1];", "+\t\t\tSystem.arraycopy(oldChildren, 0, newChildren, 0, length);", "+\t\t\tnewChildren[length] = child;", "+\t\t\tthis.children = newChildren;"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "aa69f087f96794276fa8f84f7f8cbb5e", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/compiler/org/eclipse/jdt/internal/compiler/lookup/SourceTypeBinding.java", "commitBeforeChange": "db786a60645f0738c3e4c93c03142c921978dbe9", "commitAfterChange": "841e5207182e4cce5a1b83b4f81bf082fd69694f", "methodNumberBeforeChange": 25, "methodNumberAfterChange": 25, "signatureBeforeChange": " public FieldBinding[] fields()", "signatureAfterChange": " public FieldBinding[] fields()", "diff": ["-\t\tfor (int i = 0, length = this.fields.length; i < length; i++) {", "-\t\t\tif (resolveTypeFor(this.fields[i]) == null) {", "+\t\tFieldBinding[] fieldsSnapshot = this.fields;", "+\t\tfor (int i = 0, length = fieldsSnapshot.length; i < length; i++) {", "+\t\t\tif (resolveTypeFor(fieldsSnapshot[i]) == null) {", "-\t\t\t\tif (resolvedFields == this.fields) {", "-\t\t\t\t\tSystem.arraycopy(this.fields, 0, resolvedFields = new FieldBinding[length], 0, length);", "+\t\t\t\tif (resolvedFields == fieldsSnapshot) {", "+\t\t\t\t\tSystem.arraycopy(fieldsSnapshot, 0, resolvedFields = new FieldBinding[length], 0, length);"]}, {"@class": "de.fau.cs.inf2.cthree.data.CodeChange", "id": "b54cb9f72badd43efb3cd8f9d28e01ce", "repository": "http://git.eclipse.org/gitroot/jdt/eclipse.jdt.core.git", "fileName": "org.eclipse.jdt.core/model/org/eclipse/jdt/internal/core/OpenableElementInfo.java", "commitBeforeChange": "09617092d586fc57d56d7255b395176bf3d6b1e7", "commitAfterChange": "a9567e58ade978b67e4f2db4ee5fe35bc3c0d3fe", "methodNumberBeforeChange": 3, "methodNumberAfterChange": 3, "signatureBeforeChange": "  \tpublic void removeChild(IJavaElement child)", "signatureAfterChange": "  \tpublic void removeChild(IJavaElement child)", "diff": ["-\t\tfor (int i = 0, length = this.children.length; i < length; i++) {", "-\t\t\tIJavaElement element = this.children[i];", "-\t\t\tif (element.equals(child)) {", "+\t\tIJavaElement[] oldChildren = this.children;", "+\t\tfor (int i = 0, length = oldChildren.length; i < length; i++) {", "+\t\t\tif (oldChildren[i].equals(child)) {", "-\t\t\t\t\tSystem.arraycopy(this.children, 0, newChildren , 0, i);", "+\t\t\t\t\tSystem.arraycopy(oldChildren, 0, newChildren , 0, i);", "-\t\t\t\t\t\tSystem.arraycopy(this.children, i+1, newChildren, i, length-1-i);", "+\t\t\t\t\t\tSystem.arraycopy(oldChildren, i+1, newChildren, i, length-1-i);"]}], "num": 52453}